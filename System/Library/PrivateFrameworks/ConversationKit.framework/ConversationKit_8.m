uint64_t closure #1 in VideoReactionButton.body.getter(void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t vars8;

  if (*a1)
  {
    v1 = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for VideoReactionButton(0) + 32));
    swift_retain();
    VideoReactionPickerViewModel.sendReaction(_:)(v1);
    return swift_release();
  }
  else
  {
    type metadata accessor for VideoReactionPickerViewModel(0);
    lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #2 in VideoReactionButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v49 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>)
      - 8;
  MEMORY[0x1F4188790](v48);
  v47 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x1F4188790](v4);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v40 = (char *)&v38 - v7;
  uint64_t v46 = type metadata accessor for Image.Scale();
  uint64_t v43 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  v42 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1F4188790](v9 - 8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Font.TextStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for VideoReactionButton(0);
  v21 = (NSString *)VideoReaction.rawValue.getter(*(unsigned char *)(a1 + *(int *)(v20 + 32)));
  v22 = AVCaptureReactionSystemImageNameForType(v21);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F3E150], v12);
  uint64_t v23 = type metadata accessor for Font.Design();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v23);
  static Font.Weight.semibold.getter();
  uint64_t v24 = static Font.system(_:design:weight:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t KeyPath = swift_getKeyPath();
  v26 = v40;
  specialized Environment.wrappedValue.getter();
  uint64_t v28 = v44;
  uint64_t v27 = v45;
  v29 = v41;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v41, *MEMORY[0x1E4F3CB30], v45);
  LOBYTE(v12) = static DynamicTypeSize.< infix(_:_:)();
  v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v29, v27);
  v30(v26, v27);
  v32 = v42;
  uint64_t v31 = v43;
  v33 = (unsigned int *)MEMORY[0x1E4F3EC70];
  if ((v12 & 1) == 0) {
    v33 = (unsigned int *)MEMORY[0x1E4F3EC60];
  }
  uint64_t v34 = v46;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, *v33, v46);
  uint64_t v35 = swift_getKeyPath();
  v36 = v47;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v47 + *(int *)(v48 + 36), v32, v34);
  uint64_t *v36 = v35;
  outlined init with copy of FeatureEligibility?((uint64_t)v36, (uint64_t)v19 + *(int *)(v17 + 44), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  uint64_t *v19 = v39;
  v19[1] = KeyPath;
  v19[2] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v34);
  swift_release();
  swift_release();
  swift_release();
  return outlined init with take of Any?((uint64_t)v19, v49, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
}

void closure #1 in closure #3 in VideoReactionButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = static Color.clear.getter();
  v16[0] = 0xD000000000000019;
  v16[1] = 0x80000001C3780930;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  GeometryProxy.frame<A>(in:)();
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17.origin.x = v8;
  v17.origin.y = v10;
  v17.size.width = v12;
  v17.size.height = v14;
  CGFloat MidX = CGRectGetMidX(v17);
  *(void *)a1 = v6;
  *(CGFloat *)(a1 + 8) = MidX;
}

uint64_t closure #2 in closure #3 in VideoReactionButton.body.getter()
{
  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat?>);
  uint64_t result = State.wrappedValue.getter();
  if (v1 == 1) {
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t VideoReactionButton.transformAnimation.getter()
{
  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  uint64_t v0 = 0;
  if (v2 == 1)
  {
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    uint64_t v0 = Animation.delay(_:)();
    swift_release();
  }
  return v0;
}

uint64_t VideoReactionButton.offset.getter()
{
  uint64_t v1 = type metadata accessor for VideoReactionButton(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v0 + *(int *)(v4 + 28);
  char v6 = *v5;
  uint64_t v7 = *((void *)v5 + 1);
  LOBYTE(aBlock) = v6;
  uint64_t v31 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  uint64_t result = State.wrappedValue.getter();
  if ((v36 & 1) == 0)
  {
    double v9 = (char *)v0 + *(int *)(v1 + 24);
    uint64_t v10 = *(void *)v9;
    char v11 = v9[8];
    CGFloat v12 = (uint64_t (*)(uint64_t))*((void *)v9 + 2);
    uint64_t aBlock = v10;
    LOBYTE(v31) = v11;
    v32 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat?>);
    uint64_t result = State.wrappedValue.getter();
    if ((v37 & 1) == 0)
    {
      if (*v0)
      {
        swift_retain();
        VideoReactionPickerViewModel.anchorPoint.getter();
        char v14 = v13;
        uint64_t result = swift_release();
        if ((v14 & 1) == 0)
        {
          swift_retain();
          char v15 = VideoReactionPickerViewModel.isShowingPicker.getter();
          uint64_t result = swift_release();
          if (v15)
          {
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
            uint64_t v29 = static OS_dispatch_queue.main.getter();
            outlined init with copy of VideoReactionButton((uint64_t)v0, (uint64_t)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for VideoReactionButton);
            unint64_t v16 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
            uint64_t v17 = swift_allocObject();
            outlined init with take of VideoReactionButton((uint64_t)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (void (*)(void))type metadata accessor for VideoReactionButton);
            uint64_t v34 = partial apply for closure #1 in VideoReactionButton.offset.getter;
            uint64_t v35 = v17;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v31 = 1107296256;
            v32 = thunk for @escaping @callee_guaranteed () -> ();
            v33 = &block_descriptor_102;
            uint64_t v18 = _Block_copy(&aBlock);
            swift_release();
            uint64_t v19 = type metadata accessor for DispatchQoS();
            v28[2] = v28;
            uint64_t v20 = *(void *)(v19 - 8);
            MEMORY[0x1F4188790](v19);
            v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
            static DispatchQoS.unspecified.getter();
            uint64_t v23 = type metadata accessor for DispatchWorkItemFlags();
            v28[1] = v28;
            uint64_t v24 = *(void *)(v23 - 8);
            MEMORY[0x1F4188790](v23);
            v26 = (char *)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t aBlock = MEMORY[0x1E4FBC860];
            lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            dispatch thunk of SetAlgebra.init<A>(_:)();
            uint64_t v27 = (void *)v29;
            MEMORY[0x1C8773BA0](0, v22, v26, v18);
            _Block_release(v18);

            (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
            return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
          }
        }
      }
      else
      {
        type metadata accessor for VideoReactionPickerViewModel(0);
        lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
        uint64_t result = EnvironmentObject.error()();
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t VideoReactionButton.offsetAnimation.getter()
{
  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  uint64_t v0 = 0;
  if (v2 == 1)
  {
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    uint64_t v0 = Animation.delay(_:)();
    swift_release();
  }
  return v0;
}

void closure #4 in VideoReactionButton.body.getter(uint64_t a1, unsigned char *a2)
{
  if ((*a2 & 1) == 0)
  {
    type metadata accessor for VideoReactionButton(0);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
  }
}

uint64_t closure #1 in VideoReactionButton.offset.getter()
{
  return State.wrappedValue.setter();
}

uint64_t VideoReactionButton.init(reaction:showDelay:moveDelay:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  type metadata accessor for VideoReactionPickerViewModel(0);
  lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  *a2 = EnvironmentObject.init()();
  a2[1] = v8;
  double v9 = (int *)type metadata accessor for VideoReactionButton(0);
  uint64_t v10 = (uint64_t *)((char *)a2 + v9[5]);
  *uint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  char v11 = (char *)a2 + v9[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGFloat?);
  State.init(wrappedValue:)();
  *(void *)char v11 = v14;
  v11[8] = v15;
  *((void *)v11 + 2) = v16;
  CGFloat v12 = (char *)a2 + v9[7];
  uint64_t result = State.init(wrappedValue:)();
  *CGFloat v12 = v14;
  *((void *)v12 + 1) = v15;
  *((unsigned char *)a2 + v9[8]) = a1;
  *(double *)((char *)a2 + v9[9]) = a3;
  *(double *)((char *)a2 + v9[10]) = a4;
  return result;
}

double VideoReactionButtonRow.moveDelay.getter(double a1, double a2)
{
  return a2;
}

uint64_t VideoReactionButtonRow.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ForEach<Range<Int>, Int, TupleView<(VideoReactionButton, Spacer?)>>>);
  swift_getKeyPath();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a3;
  *(double *)(v8 + 32) = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<Int>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(VideoReactionButton, Spacer?)>);
  lazy protocol witness table accessor for type Range<Int> and conformance <> Range<A>();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(VideoReactionButton, Spacer?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(VideoReactionButton, Spacer?)>);
  return ForEach<>.init(_:id:content:)();
}

void closure #1 in closure #1 in VideoReactionButtonRow.body.getter(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = (int *)type metadata accessor for VideoReactionButton(0);
  MEMORY[0x1F4188790](v10);
  CGFloat v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = *a1;
  if (*a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)v16 >= *(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
    return;
  }
  uint64_t v17 = a2 + v16;
  char v18 = *(unsigned char *)(a2 + v16 + 32);
  double v19 = (double)v16 * 0.1 + a4;
  type metadata accessor for VideoReactionPickerViewModel(0);
  lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  *CGFloat v12 = EnvironmentObject.init()();
  v12[1] = v20;
  uint64_t v21 = (uint64_t *)((char *)v12 + v10[5]);
  uint64_t *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  v22 = (char *)v12 + v10[6];
  uint64_t v33 = 0;
  BOOL v23 = 1;
  char v34 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGFloat?);
  State.init(wrappedValue:)();
  char v24 = v36;
  uint64_t v25 = v37;
  *(void *)v22 = v35;
  v22[8] = v24;
  *((void *)v22 + 2) = v25;
  v26 = (char *)v12 + v10[7];
  LOBYTE(v33) = 0;
  State.init(wrappedValue:)();
  uint64_t v27 = v36;
  char *v26 = v35;
  *((void *)v26 + 1) = v27;
  *((unsigned char *)v12 + v10[8]) = v18;
  *(double *)((char *)v12 + v10[9]) = v19;
  *(double *)((char *)v12 + v10[10]) = a5;
  outlined init with take of VideoReactionButton((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for VideoReactionButton);
  uint64_t v28 = *(unsigned __int8 *)(v17 + 32);
  uint64_t v29 = specialized BidirectionalCollection.last.getter(a2);
  if (v29 == 8)
  {
    char v30 = 0;
  }
  else
  {
    char v30 = specialized == infix<A>(_:_:)(v28, v29);
    BOOL v23 = (v30 & 1) == 0;
  }
  outlined init with copy of VideoReactionButton((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for VideoReactionButton);
  outlined init with copy of VideoReactionButton((uint64_t)v12, a3, (void (*)(void))type metadata accessor for VideoReactionButton);
  uint64_t v31 = a3
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VideoReactionButton, Spacer?))
               + 48);
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = v23;
  *(unsigned char *)(v31 + 9) = v30 & 1;
  outlined destroy of VideoReactionButtonStyle((uint64_t)v15, (void (*)(void))type metadata accessor for VideoReactionButton);
  outlined destroy of VideoReactionButtonStyle((uint64_t)v12, (void (*)(void))type metadata accessor for VideoReactionButton);
}

uint64_t protocol witness for View.body.getter in conformance VideoReactionButtonRow@<X0>(uint64_t a1@<X8>)
{
  return VideoReactionButtonRow.body.getter(*(void *)v1, a1, *(double *)(v1 + 8), *(double *)(v1 + 16));
}

uint64_t VideoReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  type metadata accessor for AccessibilityChildBehavior();
  OUTLINED_FUNCTION_4();
  uint64_t v52 = v3;
  uint64_t v53 = v2;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2_3();
  uint64_t v51 = v4;
  type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_5_102();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v55 = v12;
  uint64_t v56 = v11;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2_3();
  uint64_t v54 = v13;
  double v14 = VideoReactionPickerBubble.buttonVerticalSpacing.getter();
  uint64_t v48 = static HorizontalAlignment.center.getter();
  unint64_t v15 = *(void *)(v1 + 8);
  type metadata accessor for VideoReactionPickerViewModel(0);
  lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  unint64_t v49 = v15;
  swift_retain();
  uint64_t v47 = static ObservableObject.environmentStore.getter();
  uint64_t v50 = v1;
  outlined init with copy of VideoReactionButton(v1, (uint64_t)v10, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v46 = swift_allocObject();
  outlined init with take of VideoReactionButton((uint64_t)v10, v46 + v16, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
  swift_beginAccess();
  int v45 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  char v68 = 0;
  char v67 = 0;
  if (one-time initialization token for defaultTipWidth != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v61;
  uint64_t v44 = v65;
  uint64_t v42 = v63;
  uint64_t v43 = v66;
  char v26 = v68;
  char v27 = v67;
  char v70 = v62;
  char v69 = v64;
  uint64_t v28 = static Alignment.center.getter();
  uint64_t v30 = v29;
  outlined init with copy of VideoReactionButton(v50, (uint64_t)v10, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
  uint64_t v31 = swift_allocObject();
  outlined init with take of VideoReactionButton((uint64_t)v10, v31 + v16, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
  *(void *)&v60[0] = v48;
  *((double *)v60 + 1) = v14;
  LOBYTE(v60[1]) = v26;
  *((void *)&v60[1] + 1) = &outlined read-only object #0 of closure #1 in VideoReactionPickerBubble.body.getter;
  v60[2] = vdupq_n_s64(0x3FB999999999999AuLL);
  *(void *)&v60[3] = &outlined read-only object #1 of closure #1 in VideoReactionPickerBubble.body.getter;
  *(_OWORD *)((char *)&v60[3] + 8) = xmmword_1C37808E0;
  *((void *)&v60[4] + 1) = v47;
  v60[5] = v49;
  *(void *)&v60[6] = 0;
  *((void *)&v60[6] + 1) = partial apply for closure #2 in VideoReactionPickerBubble.body.getter;
  *(void *)&v60[7] = v46;
  BYTE8(v60[7]) = v45;
  *(void *)&v60[8] = v18;
  *((void *)&v60[8] + 1) = v20;
  *(void *)&v60[9] = v22;
  *((void *)&v60[9] + 1) = v24;
  LOBYTE(v60[10]) = v27;
  DWORD1(v60[10]) = *(_DWORD *)&v73[3];
  *(_DWORD *)((char *)&v60[10] + 1) = *(_DWORD *)v73;
  *((void *)&v60[10] + 1) = v25;
  LOBYTE(v60[11]) = v70;
  DWORD1(v60[11]) = *(_DWORD *)&v72[3];
  *(_DWORD *)((char *)&v60[11] + 1) = *(_DWORD *)v72;
  *((void *)&v60[11] + 1) = v42;
  LOBYTE(v60[12]) = v69;
  *(_DWORD *)((char *)&v60[12] + 1) = *(_DWORD *)v71;
  DWORD1(v60[12]) = *(_DWORD *)&v71[3];
  *((void *)&v60[12] + 1) = v44;
  *(void *)&v60[13] = v43;
  *((void *)&v60[13] + 1) = partial apply for closure #1 in closure #3 in VideoReactionPickerBubble.body.getter;
  *(void *)&v60[14] = v31;
  *((void *)&v60[14] + 1) = v28;
  *(void *)&v60[15] = v30;
  *((void *)&v60[15] + 1) = 0xD000000000000019;
  *(void *)&v60[16] = 0x80000001C3780930;
  static AccessibilityChildBehavior.contain.getter();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>);
  unint64_t v33 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>();
  View.accessibilityElement(children:)();
  OUTLINED_FUNCTION_26_2();
  v34();
  memcpy(v74, v60, 0x108uLL);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>((uint64_t)v74);
  id v35 = objc_msgSend(self, sel_conversationKit);
  v75._object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_4_6();
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v75._countAndFlagsBits = 0;
  Swift::String v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v35, v36, v75);

  v60[0] = v39;
  uint64_t v58 = v32;
  unint64_t v59 = v33;
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_2();
  return v40();
}

double VideoReactionPickerBubble.buttonVerticalSpacing.getter()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - v5;
  type metadata accessor for VideoReactionPickerBubble(0);
  specialized Environment.wrappedValue.getter();
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v7(v3, *MEMORY[0x1E4F3CB28], v0);
  char v8 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  double result = 6.0;
  if ((v8 & 1) == 0)
  {
    specialized Environment.wrappedValue.getter();
    v7(v3, *MEMORY[0x1E4F3CB30], v0);
    char v11 = static DynamicTypeSize.< infix(_:_:)();
    v9(v3, v0);
    v9(v6, v0);
    double result = 2.0;
    if ((v11 & 1) == 0)
    {
      specialized Environment.wrappedValue.getter();
      v7(v3, *MEMORY[0x1E4F3CB40], v0);
      char v12 = static DynamicTypeSize.< infix(_:_:)();
      v9(v3, v0);
      v9(v6, v0);
      double result = 4.0;
      if (v12) {
        return 5.0;
      }
    }
  }
  return result;
}

uint64_t closure #2 in VideoReactionPickerBubble.body.getter()
{
  swift_retain();
  VideoReactionPickerViewModel.isShowingPicker.setter();
  return swift_release();
}

uint64_t closure #1 in closure #3 in VideoReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v46 = type metadata accessor for Material();
  uint64_t v1 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v3 = &v44[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<ThoughtBubble, Material>);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>);
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>)
      - 8;
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v13 = VideoReactionPickerBubble.anchorPoint(for:)();
  uint64_t v15 = v14;
  BOOL v45 = VideoReactionPickerBubble.bubbleGrowsRightwards(for:)();
  double v16 = VideoReactionPickerBubble.cornerRadius.getter();
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_currentDevice);
  id v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

  swift_retain();
  char v20 = VideoReactionPickerViewModel.isShowingPicker.getter();
  uint64_t v21 = swift_release();
  double v22 = 1.0;
  if (v20) {
    double v23 = 1.0;
  }
  else {
    double v23 = 0.0;
  }
  BOOL v24 = v19 == (id)1;
  MEMORY[0x1C8772A80](v21);
  uint64_t v25 = v46;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(&v7[*(int *)(v5 + 60)], v3, v46);
  *(double *)uint64_t v7 = v13;
  *((void *)v7 + 1) = v15;
  *((double *)v7 + 2) = v23;
  *((double *)v7 + 3) = v16;
  BOOL v26 = v45;
  v7[32] = v45;
  v7[33] = v24;
  *(_WORD *)&v7[*(int *)(v5 + 64)] = 256;
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v25);
  static Color.white.getter();
  uint64_t v27 = Color.opacity(_:)();
  swift_release();
  double v28 = VideoReactionPickerBubble.cornerRadius.getter();
  id v29 = objc_msgSend(v17, sel_currentDevice);
  id v30 = objc_msgSend(v29, sel_userInterfaceIdiom);

  swift_retain();
  LOBYTE(v25) = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  if ((v25 & 1) == 0) {
    double v22 = 0.0;
  }
  BOOL v31 = v30 == (id)1;
  uint64_t v32 = v47;
  outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v47, &demangling cache variable for type metadata for _ShapeView<ThoughtBubble, Material>);
  unint64_t v33 = (double *)&v32[*(int *)(v9 + 44)];
  *(void *)unint64_t v33 = v27;
  v33[1] = v13;
  *((void *)v33 + 2) = v15;
  v33[3] = v22;
  v33[4] = v28;
  *((unsigned char *)v33 + 40) = v26;
  *((unsigned char *)v33 + 41) = v31;
  *((_WORD *)v33 + 21) = 256;
  outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for _ShapeView<ThoughtBubble, Material>);
  static Color.white.getter();
  id v34 = objc_msgSend(v17, sel_currentDevice);
  objc_msgSend(v34, sel_userInterfaceIdiom);

  uint64_t v35 = (uint64_t)v48;
  uint64_t v36 = Color.opacity(_:)();
  swift_release();
  outlined init with copy of FeatureEligibility?((uint64_t)v32, v35, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>);
  uint64_t v37 = v35 + *(int *)(v49 + 44);
  *(void *)uint64_t v37 = v36;
  *(_OWORD *)(v37 + 8) = xmmword_1C37808F0;
  *(void *)(v37 + 24) = 0x4014000000000000;
  outlined destroy of SystemUpdateNotice?((uint64_t)v32, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>);
  swift_retain();
  char v38 = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  uint64_t v39 = 0;
  if (v38) {
    uint64_t v39 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  }
  swift_retain();
  char v40 = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  v41 = v50;
  outlined init with copy of FeatureEligibility?(v35, (uint64_t)v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>);
  uint64_t v42 = &v41[*(int *)(v51 + 36)];
  *(void *)uint64_t v42 = v39;
  v42[8] = v40 & 1;
  outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>);
  return outlined init with take of Any?((uint64_t)v41, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>);
}

double VideoReactionPickerBubble.anchorPoint(for:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VideoReactionPickerBubble(0);
  char v64 = *(uint64_t **)(v2 - 8);
  uint64_t v3 = v64[8];
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v65 = (uint64_t *)((char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(double *)&uint64_t v8 = COERCE_DOUBLE(VideoReactionPickerViewModel.anchorPoint.getter());
  char v10 = v9;
  swift_release();
  if ((v10 & 1) == 0) {
    return *(double *)&v8;
  }
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v73.origin.CGFloat x = v13;
  v73.origin.CGFloat y = v15;
  v73.size.CGFloat width = v17;
  v73.size.CGFloat height = v19;
  double MidY = CGRectGetMidY(v73);
  uint64_t v21 = *(void *)(v0 + 8);
  double v22 = (CGRect *)(v21
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame);
  double v23 = CGRectGetMidY(*(CGRect *)(v21
                                + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame));
  v74.origin.CGFloat x = v13;
  v74.origin.CGFloat y = v15;
  v74.size.CGFloat width = v17;
  v74.size.CGFloat height = v19;
  double MaxX = CGRectGetMaxX(v74);
  double v25 = CGRectGetMaxX(*v22);
  v75.origin.CGFloat x = v13;
  v75.origin.CGFloat y = v15;
  uint64_t v63 = *(void *)&v17;
  v75.size.CGFloat width = v17;
  v75.size.CGFloat height = v19;
  double MinX = CGRectGetMinX(v75);
  double v28 = CGRectGetMinX(*v22);
  if (v23 >= MidY)
  {
    if (MinX >= v28)
    {
      if (v25 >= MaxX)
      {
        CGFloat x = v22->origin.x;
        CGFloat y = v22->origin.y;
        CGFloat width = v22->size.width;
        CGFloat height = v22->size.height;
        if ((*(unsigned char *)(v21
                       + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) & 0xFD) != 0)
          CGRectGetMaxX(*(CGRect *)&x);
        else {
          CGRectGetMinX(*(CGRect *)&x);
        }
        CGRectGetMinY(*v22);
      }
      else
      {
        CGRectGetMaxX(*v22);
        CGRectGetMinY(*v22);
      }
    }
  }
  else
  {
    if (MinX >= v28)
    {
      if (v25 >= MaxX)
      {
        CGFloat v29 = v22->origin.x;
        CGFloat v30 = v22->origin.y;
        CGFloat v31 = v22->size.width;
        CGFloat v32 = v22->size.height;
        if ((*(unsigned char *)(v21
                       + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) & 0xFD) != 0)
          CGRectGetMaxX(*(CGRect *)&v29);
        else {
          CGRectGetMinX(*(CGRect *)&v29);
        }
      }
      else
      {
        CGRectGetMaxX(*v22);
      }
    }
    else
    {
      CGRectGetMinX(*v22);
    }
    CGRectGetMaxY(*v22);
  }
  double v11 = TPNumberPadCharacter.rawValue.getter(v27);
  uint64_t v38 = v37;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  __swift_project_value_buffer(v39, (uint64_t)static Logger.conversationKit);
  char v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v66 = v43;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t aBlock = *(void *)&v13;
    uint64_t v68 = *(void *)&v15;
    char v69 = (uint64_t (*)(uint64_t))v63;
    CGFloat v70 = v19;
    type metadata accessor for CGRect(0);
    uint64_t v44 = String.init<A>(reflecting:)();
    uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    uint64_t aBlock = *(void *)&v11;
    uint64_t v68 = v38;
    type metadata accessor for CGPoint(0);
    uint64_t v46 = String.init<A>(reflecting:)();
    uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v40, v41, "frameInGlobalCoordinates:%s, anchorPointInBubbleCoordinates:%s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v43, -1, -1);
    MEMORY[0x1C87760E0](v42, -1, -1);
  }

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v63 = static OS_dispatch_queue.main.getter();
  uint64_t v48 = (uint64_t)v65;
  outlined init with copy of VideoReactionButton(v1, (uint64_t)v65, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
  unint64_t v49 = (*((unsigned __int8 *)v64 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v64 + 80);
  uint64_t v50 = swift_allocObject();
  outlined init with take of VideoReactionButton(v48, v50 + v49, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
  uint64_t v51 = (double *)(v50 + ((v3 + v49 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v51 = v11;
  *((void *)v51 + 1) = v38;
  v71 = partial apply for closure #1 in VideoReactionPickerBubble.anchorPoint(for:);
  uint64_t v72 = v50;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v68 = 1107296256;
  char v69 = thunk for @escaping @callee_guaranteed () -> ();
  CGFloat v70 = COERCE_DOUBLE(&block_descriptor_95);
  uint64_t v52 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v53 = type metadata accessor for DispatchQoS();
  uint64_t v65 = &v63;
  uint64_t v54 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (char *)&v63 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v57 = type metadata accessor for DispatchWorkItemFlags();
  char v64 = &v63;
  uint64_t v58 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  v60 = (char *)&v63 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v61 = (void *)v63;
  MEMORY[0x1C8773BA0](0, v56, v60, v52);
  _Block_release(v52);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
  return v11;
}

BOOL VideoReactionPickerBubble.bubbleGrowsRightwards(for:)()
{
  uint64_t v1 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = *(unsigned __int8 *)(*(void *)(v0 + 8)
                          + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards);
  if (v5 != 2) {
    return v5 & 1;
  }
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v14 = *(void *)(v0 + 8);
  uint64_t v15 = v7;
  uint64_t v16 = v9;
  uint64_t v17 = v11;
  uint64_t v18 = v13;
  if ((*(unsigned char *)(v14
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) & 0xFD) != 0)
  {
    double MinX = CGRectGetMinX(*(CGRect *)&v15);
    BOOL result = MinX <= CGRectGetMinX(*(CGRect *)(v14
                                             + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame));
  }
  else
  {
    double MaxX = CGRectGetMaxX(*(CGRect *)&v15);
    BOOL result = MaxX < CGRectGetMaxX(*(CGRect *)(v14
                                            + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame));
  }
  *(unsigned char *)(v14
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards) = result;
  return result;
}

double VideoReactionPickerBubble.cornerRadius.getter()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - v5;
  type metadata accessor for VideoReactionPickerBubble(0);
  specialized Environment.wrappedValue.getter();
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v7(v3, *MEMORY[0x1E4F3CB28], v0);
  char v8 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  double result = 22.0;
  if ((v8 & 1) == 0)
  {
    specialized Environment.wrappedValue.getter();
    v7(v3, *MEMORY[0x1E4F3CB40], v0);
    char v11 = static DynamicTypeSize.< infix(_:_:)();
    v9(v3, v0);
    v9(v6, v0);
    double result = 40.0;
    if (v11) {
      return 31.0;
    }
  }
  return result;
}

uint64_t closure #1 in VideoReactionPickerBubble.anchorPoint(for:)()
{
  swift_retain();
  VideoReactionPickerViewModel.anchorPoint.setter();
  return swift_release();
}

uint64_t key path getter for VideoReactionPickerViewController.shouldHidePickerAfterReaction : VideoReactionPickerViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x78))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for VideoReactionPickerViewController.shouldHidePickerAfterReaction : VideoReactionPickerViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x80))(*a1);
}

uint64_t VideoReactionPickerViewController.shouldHidePickerAfterReaction.getter()
{
  return *(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
                            + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction);
}

uint64_t VideoReactionPickerViewController.shouldHidePickerAfterReaction.setter(uint64_t result)
{
  *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction) = result;
  return result;
}

uint64_t (*VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model);
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v2
                                + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction);
  return VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify;
}

uint64_t VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)result + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction) = *(unsigned char *)(result + 8);
  return result;
}

id VideoReactionPickerViewController.__allocating_init(onReaction:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return VideoReactionPickerViewController.init(onReaction:)(a1, a2);
}

id VideoReactionPickerViewController.init(onReaction:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_reactionPickerBubble;
  uint64_t v6 = type metadata accessor for VideoReactionPickerBubble(0);
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  type metadata accessor for VideoReactionPickerViewModel(0);
  swift_allocObject();
  uint64_t v7 = v2;
  swift_retain();
  *(void *)&v7[OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model] = VideoReactionPickerViewModel.init(onReaction:)(a1, a2);

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for VideoReactionPickerViewController(0);
  id v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  return v8;
}

id VideoReactionPickerViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void VideoReactionPickerViewController.init(coder:)()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_reactionPickerBubble;
  uint64_t v2 = type metadata accessor for VideoReactionPickerBubble(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall VideoReactionPickerViewController.viewDidLoad()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for VideoReactionPickerViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_setAlpha_, 0.0);

    id v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = objc_msgSend(self, sel_clearColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Bool __swiftcall VideoReactionPickerViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall VideoReactionPickerViewController.initializeReactionPickerBubbleIfNecessary()()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  objc_super v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v65 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v65 - v11);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoReactionPickerBubble?);
  MEMORY[0x1F4188790](v13 - 8);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_reactionPickerBubble;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v17, (uint64_t)v16, &demangling cache variable for type metadata for VideoReactionPickerBubble?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v3);
  outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for VideoReactionPickerBubble?);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v68 = v17;
    type metadata accessor for VideoReactionPickerViewModel(0);
    lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
    swift_retain();
    *uint64_t v12 = ObservedObject.init(wrappedValue:)();
    v12[1] = v19;
    char v20 = (uint64_t *)((char *)v12 + *(int *)(v3 + 20));
    *char v20 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    outlined init with copy of VideoReactionButton((uint64_t)v12, (uint64_t)v9, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
    id v21 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<VideoReactionPickerBubble>));
    outlined init with copy of VideoReactionButton((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
    uint64_t v22 = (void *)UIHostingController.init(rootView:)();
    outlined destroy of VideoReactionButtonStyle((uint64_t)v9, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
    objc_msgSend(v2, sel_addChildViewController_, v22);
    id v23 = OUTLINED_FUNCTION_20_43();
    if (v23)
    {
      BOOL v24 = v23;
      id v25 = OUTLINED_FUNCTION_14_56();
      if (v25)
      {
        BOOL v26 = v25;
        objc_msgSend(v24, sel_addSubview_, v25);

        id v27 = OUTLINED_FUNCTION_14_56();
        if (v27)
        {
          double v28 = v27;
          objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

          id v29 = OUTLINED_FUNCTION_14_56();
          if (v29)
          {
            CGFloat v30 = v29;
            uint64_t v67 = v1;
            id v31 = objc_msgSend(self, sel_clearColor);
            objc_msgSend(v30, sel_setBackgroundColor_, v31);

            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = xmmword_1C3769580;
            id v33 = OUTLINED_FUNCTION_14_56();
            if (v33)
            {
              id v34 = v33;
              id v35 = objc_msgSend(v33, sel_topAnchor);

              id v36 = OUTLINED_FUNCTION_20_43();
              if (v36)
              {
                uint64_t v37 = v36;
                id v38 = objc_msgSend(v36, sel_topAnchor);

                id v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v38);
                *(void *)(v32 + 32) = v39;
                id v40 = OUTLINED_FUNCTION_14_56();
                if (v40)
                {
                  os_log_type_t v41 = v40;
                  id v42 = objc_msgSend(v40, sel_bottomAnchor);

                  id v43 = OUTLINED_FUNCTION_20_43();
                  if (v43)
                  {
                    uint64_t v44 = v43;
                    id v45 = objc_msgSend(v43, sel_bottomAnchor);

                    id v46 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v45);
                    *(void *)(v32 + 40) = v46;
                    id v47 = OUTLINED_FUNCTION_14_56();
                    if (v47)
                    {
                      uint64_t v48 = v47;
                      id v49 = objc_msgSend(v47, sel_leadingAnchor);

                      id v50 = OUTLINED_FUNCTION_20_43();
                      if (v50)
                      {
                        uint64_t v51 = v50;
                        id v52 = objc_msgSend(v50, sel_leadingAnchor);

                        id v53 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v52);
                        *(void *)(v32 + 48) = v53;
                        id v54 = OUTLINED_FUNCTION_14_56();
                        if (v54)
                        {
                          uint64_t v55 = v54;
                          uint64_t v66 = v3;
                          id v56 = objc_msgSend(v54, sel_trailingAnchor);

                          id v57 = OUTLINED_FUNCTION_20_43();
                          if (v57)
                          {
                            uint64_t v58 = v57;
                            uint64_t v59 = self;
                            id v60 = objc_msgSend(v58, sel_trailingAnchor);

                            id v61 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v60);
                            *(void *)(v32 + 56) = v61;
                            uint64_t v69 = v32;
                            specialized Array._endMutation()();
                            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                            Class isa = Array._bridgeToObjectiveC()().super.isa;
                            swift_bridgeObjectRelease();
                            objc_msgSend(v59, sel_activateConstraints_, isa);

                            objc_msgSend(v22, sel_didMoveToParentViewController_, v2);
                            uint64_t v63 = v67;
                            outlined init with copy of VideoReactionButton((uint64_t)v12, v67, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
                            __swift_storeEnumTagSinglePayload(v63, 0, 1, v66);
                            uint64_t v64 = v68;
                            swift_beginAccess();
                            outlined assign with take of VideoReactionPickerBubble?(v63, v64);
                            swift_endAccess();

                            outlined destroy of VideoReactionButtonStyle((uint64_t)v12, (void (*)(void))type metadata accessor for VideoReactionPickerBubble);
                            return;
                          }
LABEL_27:
                          __break(1u);
                          return;
                        }
LABEL_26:
                        __break(1u);
                        goto LABEL_27;
                      }
LABEL_25:
                      __break(1u);
                      goto LABEL_26;
                    }
LABEL_24:
                    __break(1u);
                    goto LABEL_25;
                  }
LABEL_23:
                  __break(1u);
                  goto LABEL_24;
                }
LABEL_22:
                __break(1u);
                goto LABEL_23;
              }
LABEL_21:
              __break(1u);
              goto LABEL_22;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
}

Swift::Void __swiftcall VideoReactionPickerViewController.showReactionPicker(from:corner:)(UIView *from, ConversationKit::MultiwayViewConstraintsController::MultiwayCorner corner)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4FBCBE8], v6);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v11, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  id v13 = objc_msgSend(v3, sel_view);
  if (!v13)
  {
    __break(1u);
    return;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_setAlpha_, 1.0);

  uint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model];
  [(UIView *)from bounds];
  -[UIView convertRect:toView:](from, sel_convertRect_toView_, 0);
  uint64_t v11 = (uint64_t *)(v15
                  + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame);
  uint64_t *v11 = v16;
  v11[1] = v17;
  v11[2] = v18;
  v11[3] = v19;
  *(unsigned char *)(v15
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) = corner;
  VideoReactionPickerViewModel.anchorPoint.setter();
  *(unsigned char *)(v15
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards) = 2;
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.conversationKit);
  id v21 = from;
  uint64_t v22 = v3;
  id v23 = v21;
  BOOL v24 = v22;
  id v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v42 = v39;
    *(_DWORD *)uint64_t v27 = 136315394;
    [(UIView *)v23 frame];
    *(void *)&long long v40 = v28;
    *((void *)&v40 + 1) = v29;
    *(void *)&long long v41 = v30;
    *((void *)&v41 + 1) = v31;
    type metadata accessor for CGRect(0);
    uint64_t v32 = String.init<A>(reflecting:)();
    *(void *)&long long v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    long long v34 = *((_OWORD *)v11 + 1);
    long long v40 = *(_OWORD *)v11;
    long long v41 = v34;
    uint64_t v35 = String.init<A>(reflecting:)();
    *(void *)&long long v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v25, v26, "sourceViewFrame:%s, convertedFrame:%s", (uint8_t *)v27, 0x16u);
    uint64_t v37 = v39;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v37, -1, -1);
    MEMORY[0x1C87760E0](v27, -1, -1);
  }
  else
  {
  }
  VideoReactionPickerViewModel.isShowingPicker.setter();
}

Swift::Void __swiftcall VideoReactionPickerViewController.hideReactionPicker()()
{
  uint64_t v2 = v0;
  uint64_t v3 = (void *)type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, void *))(v5 + 104))(v1, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, void *))(v5 + 8))(v1, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v3 = self;
  if (one-time initialization token for shared != -1) {
LABEL_5:
  }
    swift_once();
  double v8 = (*(double (**)(void))(*(void *)static Defaults.shared + 1016))();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  uint64_t v19 = partial apply for closure #1 in VideoReactionPickerViewController.hideReactionPicker();
  uint64_t v20 = v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v18 = &block_descriptor_70;
  uint64_t v10 = _Block_copy(&aBlock);
  id v11 = v2;
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  uint64_t v19 = partial apply for closure #2 in VideoReactionPickerViewController.hideReactionPicker();
  uint64_t v20 = v12;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  uint64_t v18 = &block_descriptor_29_4;
  id v13 = _Block_copy(&aBlock);
  id v14 = v11;
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_completion_, v10, v13, v8);
  _Block_release(v13);
  _Block_release(v10);
}

void closure #1 in VideoReactionPickerViewController.hideReactionPicker()(void *a1)
{
  id v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_setAlpha_, 0.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #2 in VideoReactionPickerViewController.hideReactionPicker()()
{
  return VideoReactionPickerViewModel.isShowingPicker.setter();
}

id VideoReactionPickerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void VideoReactionPickerViewController.init(nibName:bundle:)()
{
}

id VideoReactionPickerViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoReactionPickerViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t key path getter for VideoReactionPickerViewModel.anchorPoint : VideoReactionPickerViewModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = VideoReactionPickerViewModel.anchorPoint.getter();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t key path setter for VideoReactionPickerViewModel.anchorPoint : VideoReactionPickerViewModel()
{
  return VideoReactionPickerViewModel.anchorPoint.setter();
}

uint64_t type metadata accessor for VideoReactionButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionButton);
}

uint64_t type metadata accessor for VideoReactionButtonStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionButtonStyle);
}

uint64_t partial apply for closure #1 in VideoReactionButton.body.getter()
{
  return partial apply for closure #1 in VideoReactionButton.body.getter(type metadata accessor for VideoReactionButton, (uint64_t (*)(uint64_t))closure #1 in VideoReactionButton.body.getter);
}

uint64_t partial apply for closure #2 in VideoReactionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in VideoReactionButton.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Image.Scale> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of VideoReactionButton(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_90();
  v5(v4);
  return a2;
}

uint64_t objectdestroyTm_12()
{
  type metadata accessor for VideoReactionButton(0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #3 in VideoReactionButton.body.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_25_39();
  OUTLINED_FUNCTION_1_1(v0);
  return closure #2 in closure #3 in VideoReactionButton.body.getter();
}

uint64_t type metadata accessor for VideoReactionPickerViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionPickerViewModel);
}

uint64_t lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #4 in VideoReactionButton.body.getter(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for VideoReactionButton(0);
  OUTLINED_FUNCTION_1_1(v4);
  closure #4 in VideoReactionButton.body.getter(a1, a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _TransformEffect and conformance _TransformEffect();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>>);
    type metadata accessor for VideoReactionButtonStyle(255);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>>);
    lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle(&lazy protocol witness table cache variable for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle, (void (*)(uint64_t))type metadata accessor for VideoReactionButtonStyle);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle((unint64_t *)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _TransformEffect and conformance _TransformEffect()
{
  unint64_t result = lazy protocol witness table cache variable for type _TransformEffect and conformance _TransformEffect;
  if (!lazy protocol witness table cache variable for type _TransformEffect and conformance _TransformEffect)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _TransformEffect and conformance _TransformEffect);
  }
  return result;
}

uint64_t sub_1C342BF90()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in VideoReactionButtonRow.body.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  closure #1 in closure #1 in VideoReactionButtonRow.body.getter(a1, *(void *)(v2 + 16), a2, *(double *)(v2 + 24), *(double *)(v2 + 32));
}

unint64_t lazy protocol witness table accessor for type Range<Int> and conformance <> Range<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Range<Int> and conformance <> Range<A>;
  if (!lazy protocol witness table cache variable for type Range<Int> and conformance <> Range<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Range<Int>);
    lazy protocol witness table accessor for type Int and conformance Int();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Range<Int> and conformance <> Range<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Int and conformance Int()
{
  unint64_t result = lazy protocol witness table cache variable for type Int and conformance Int;
  if (!lazy protocol witness table cache variable for type Int and conformance Int)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Int and conformance Int);
  }
  return result;
}

uint64_t type metadata accessor for VideoReactionPickerBubble(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionPickerBubble);
}

uint64_t outlined init with copy of VideoReactionButton(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

uint64_t partial apply for closure #2 in VideoReactionPickerBubble.body.getter()
{
  return partial apply for closure #1 in VideoReactionButton.body.getter(type metadata accessor for VideoReactionPickerBubble, (uint64_t (*)(uint64_t))closure #2 in VideoReactionPickerBubble.body.getter);
}

uint64_t partial apply for closure #1 in VideoReactionButton.body.getter(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4);
}

uint64_t objectdestroy_15Tm_1()
{
  type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_1_6();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in VideoReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_1_1(v2);
  return closure #1 in closure #3 in VideoReactionPickerBubble.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _CoordinateSpaceModifier<String> and conformance _CoordinateSpaceModifier<A>, &demangling cache variable for type metadata for _CoordinateSpaceModifier<String>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 104);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v2);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t type metadata accessor for VideoReactionPickerViewController(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionPickerViewController);
}

uint64_t outlined destroy of VideoReactionButtonStyle(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t outlined assign with take of VideoReactionPickerBubble?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoReactionPickerBubble?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C342C794()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in VideoReactionPickerViewController.hideReactionPicker()()
{
  closure #1 in VideoReactionPickerViewController.hideReactionPicker()(*(void **)(v0 + 16));
}

uint64_t partial apply for closure #2 in VideoReactionPickerViewController.hideReactionPicker()()
{
  return closure #2 in VideoReactionPickerViewController.hideReactionPicker()();
}

unint64_t lazy protocol witness table accessor for type VideoReaction and conformance VideoReaction()
{
  unint64_t result = lazy protocol witness table cache variable for type VideoReaction and conformance VideoReaction;
  if (!lazy protocol witness table cache variable for type VideoReaction and conformance VideoReaction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoReaction and conformance VideoReaction);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in VideoReactionButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoReactionButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoReactionButtonRow()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoReactionPickerBubble()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ObjC metadata update function for VideoReactionPickerViewModel()
{
  return type metadata accessor for VideoReactionPickerViewModel(0);
}

void type metadata completion function for VideoReactionPickerViewModel()
{
  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<CGPoint?>();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for Published<CGPoint?>()
{
  if (!lazy cache variable for type metadata for Published<CGPoint?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CGPoint?);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<CGPoint?>);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for VideoReaction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C342CAD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for VideoReaction()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoReactionButtonStyle(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content)
                             - 8)
                 + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VideoReactionButtonStyle(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DynamicTypeSize();
    int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for VideoReactionButtonStyle(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for VideoReactionButtonStyle(void *a1, void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for VideoReactionButtonStyle(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for VideoReactionButtonStyle(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoReactionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C342CFF8);
}

uint64_t sub_1C342CFF8()
{
  OUTLINED_FUNCTION_86();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for VideoReactionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C342D054);
}

uint64_t sub_1C342D054()
{
  OUTLINED_FUNCTION_86();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

void type metadata completion function for VideoReactionButtonStyle()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA15DynamicTypeSizeO_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for XPositionPreferenceKey()
{
}

void *initializeBufferWithCopyOfBuffer for VideoReactionButton(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    id v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    id v14 = (char *)v7 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)id v14 = *(void *)v15;
    v14[8] = v15[8];
    *((void *)v14 + 2) = *((void *)v15 + 2);
    uint64_t v16 = (char *)v7 + v13;
    uint64_t v17 = (char *)a2 + v13;
    *uint64_t v16 = *v17;
    *((void *)v16 + 1) = *((void *)v17 + 1);
    uint64_t v18 = a3[9];
    *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)v7 + v18) = *(void *)((char *)a2 + v18);
    *(void *)((char *)v7 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for VideoReactionButton(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_release();
}

void *initializeWithCopy for VideoReactionButton(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  id v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  *((void *)v13 + 2) = *((void *)v14 + 2);
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  char *v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for VideoReactionButton(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of SystemUpdateNotice?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 2) = *((void *)v12 + 2);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char *v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for VideoReactionButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *assignWithTake for VideoReactionButton(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    outlined destroy of SystemUpdateNotice?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  *((void *)v12 + 2) = *((void *)v13 + 2);
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char *v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoReactionButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C342D944);
}

uint64_t sub_1C342D944(uint64_t *a1, int a2)
{
  if (a2 == 2147483646)
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
    int v3 = v2 - 1;
    if (v3 < 0) {
      int v3 = -1;
    }
    return (v3 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v5 = OUTLINED_FUNCTION_22_37();
    return __swift_getEnumTagSinglePayload(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for VideoReactionButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C342D9E4);
}

void sub_1C342D9E4()
{
  OUTLINED_FUNCTION_86();
  if (v2 == 2147483646)
  {
    *uint64_t v1 = v0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v3 = OUTLINED_FUNCTION_18_46();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

void type metadata completion function for VideoReactionButton()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA15DynamicTypeSizeO_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *assignWithCopy for VideoReactionButtonRow(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for VideoReactionButtonRow()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoReactionPickerBubble(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VideoReactionPickerBubble(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for VideoReactionPickerBubble(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for VideoReactionPickerBubble(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of SystemUpdateNotice?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for VideoReactionPickerBubble(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for VideoReactionPickerBubble(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    outlined destroy of SystemUpdateNotice?((uint64_t)a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoReactionPickerBubble(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C342E124);
}

uint64_t sub_1C342E124(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
    return (v2 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v4 = OUTLINED_FUNCTION_22_37();
    return __swift_getEnumTagSinglePayload(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for VideoReactionPickerBubble(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C342E1B8);
}

void sub_1C342E1B8()
{
  OUTLINED_FUNCTION_86();
  if (v2 == 0x7FFFFFFF)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v3 = OUTLINED_FUNCTION_18_46();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

void type metadata completion function for VideoReactionPickerBubble()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA15DynamicTypeSizeO_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t ObjC metadata update function for VideoReactionPickerViewController()
{
  return type metadata accessor for VideoReactionPickerViewController(0);
}

void type metadata completion function for VideoReactionPickerViewController()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA15DynamicTypeSizeO_GMaTm_0(319, &lazy cache variable for type metadata for VideoReactionPickerBubble?, type metadata accessor for VideoReactionPickerBubble, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for VideoReactionPickerViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VideoReactionPickerViewController);
}

uint64_t dispatch thunk of VideoReactionPickerViewController.shouldHidePickerAfterReaction.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.shouldHidePickerAfterReaction.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.__allocating_init(onReaction:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.initializeReactionPickerBubbleIfNecessary()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.showReactionPicker(from:corner:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.hideReactionPicker()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

void _s7SwiftUI11EnvironmentV7ContentOyAA15DynamicTypeSizeO_GMaTm_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C342E590()
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>)>>);
}

uint64_t sub_1C342E5CC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C342E63C()
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ForEach<Range<Int>, Int, TupleView<(VideoReactionButton, Spacer?)>>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ForEach<Range<Int>, Int, TupleView<(VideoReactionButton, Spacer?)>>>);
}

uint64_t sub_1C342E764@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = VideoReactionPickerViewModel.isShowingPicker.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C342E794()
{
  return VideoReactionPickerViewModel.isShowingPicker.setter();
}

uint64_t sub_1C342E7BC()
{
  type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_1_6();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VideoReactionPickerBubble.anchorPoint(for:)()
{
  type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_5_102();
  return closure #1 in VideoReactionPickerBubble.anchorPoint(for:)();
}

uint64_t partial apply for closure #1 in VideoReactionButton.offset.getter()
{
  return partial apply for closure #1 in VideoReactionButton.body.getter(type metadata accessor for VideoReactionButton, (uint64_t (*)(uint64_t))closure #1 in VideoReactionButton.offset.getter);
}

Swift::Void __swiftcall UIScrollView.toggleZoomEnabled(zoomEnabled:)(Swift::Bool zoomEnabled)
{
  BOOL v2 = zoomEnabled;
  if (zoomEnabled) {
    double v3 = 2.0;
  }
  else {
    double v3 = 1.0;
  }
  objc_msgSend(v1, sel_setScrollEnabled_, v2);
  objc_msgSend(v1, sel_setMaximumZoomScale_, v3);
  if (!v2)
  {
    objc_msgSend(v1, sel_setZoomScale_, 1.0);
  }
}

void MultiwayViewController.testing_callStatusDidChange(_:)(int a1)
{
  BOOL v2 = v1;
  char v4 = MultiwayViewController.currentTest()();
  if (v4 != 4)
  {
    char v5 = v4;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationKit);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      type metadata accessor for TUCallStatus(0);
      uint64_t v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v7, v8, "[Testing] call status did change %s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }

    if (v5 == 1 && a1 == 4)
    {
      notify_post("ToggleCleethorpes");
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = 1;
      *(void *)(v13 + 24) = v2;
      id v14 = v2;
      MultiwayViewController.executeAfterDelay(_:)((uint64_t)partial apply for closure #1 in MultiwayViewController.testing_callStatusDidChange(_:), v13);
      swift_release();
    }
  }
  OUTLINED_FUNCTION_22();
}

uint64_t MultiwayViewController.currentTest()()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_sharedApplication);
  unsigned __int8 v2 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD000000000000019, 0x80000001C3791FC0, v1);

  if (v2) {
    return 0;
  }
  id v4 = objc_msgSend(v0, sel_sharedApplication);
  unsigned __int8 v5 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD00000000000001ALL, 0x80000001C3791FA0, v4);

  if (v5) {
    return 1;
  }
  id v6 = objc_msgSend(v0, sel_sharedApplication);
  unsigned __int8 v7 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD000000000000015, 0x80000001C3791F80, v6);

  if (v7) {
    return 2;
  }
  id v8 = objc_msgSend(v0, sel_sharedApplication);
  unsigned __int8 v9 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD000000000000012, 0x80000001C3791F60, v8);

  if (v9) {
    return 3;
  }
  else {
    return 4;
  }
}

uint64_t MultiwayViewController.executeAfterDelay(_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for OS_dispatch_queue();
  uint64_t v27 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v25 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - v9;
  static DispatchTime.now()();
  MEMORY[0x1C8772E20](v10, 2.0);
  unint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v24 = v5 + 8;
  os_log_type_t v26 = v11;
  v11(v10, v4);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_71;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v22 = (void *)v27;
  MEMORY[0x1C8773B10](v8, v17, v21, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v26(v8, v25);
}

Swift::Void __swiftcall MultiwayViewController.testing_requestingLocalPreviewMinimize()()
{
  unsigned __int8 v0 = MultiwayViewController.currentTest()();
  if (v0 != 4)
  {
    unsigned __int8 v1 = v0;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationKit);
    double v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "[Testing] requesting local preview minimize");
      OUTLINED_FUNCTION_3();
    }

    if (v1 <= 1u)
    {
      id v7 = objc_msgSend(self, sel_sharedApplication);
      id v10 = v7;
      if (v1) {
        uint64_t v8 = 0xD00000000000001ALL;
      }
      else {
        uint64_t v8 = 0xD000000000000019;
      }
      if (v1) {
        uint64_t v9 = 0x80000001C3791FA0;
      }
      else {
        uint64_t v9 = 0x80000001C3791FC0;
      }
      outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0xD000000000000014, 0x80000001C37ADB70, v8, v9, v7, (SEL *)&selRef_startedSubTest_forTest_);
    }
  }
}

Swift::Void __swiftcall MultiwayViewController.testing_localPreviewDidFinishMinimize()()
{
  unsigned __int8 v1 = v0;
  unsigned __int8 v2 = MultiwayViewController.currentTest()();
  int v3 = v2;
  unsigned __int8 v4 = v2;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v7, "[Testing] did finish local preview minimize", v8, 2u);
    OUTLINED_FUNCTION_3();
  }

  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      id v9 = objc_msgSend(self, sel_sharedApplication);
      outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0x652D6F742D646E65, 0xEA0000000000646ELL, 0xD00000000000001ALL, 0x80000001C3791FA0, v9, (SEL *)&selRef_finishedSubTest_forTest_);

LABEL_7:
      id v10 = objc_msgSend(self, sel_sharedApplication);
      if (v4) {
        uint64_t v11 = 0xD00000000000001ALL;
      }
      else {
        uint64_t v11 = 0xD000000000000019;
      }
      if (v4) {
        uint64_t v12 = 0x80000001C3791FA0;
      }
      else {
        uint64_t v12 = 0x80000001C3791FC0;
      }
      outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0xD000000000000014, 0x80000001C37ADB70, v11, v12, v10, (SEL *)&selRef_finishedSubTest_forTest_);

      ConversationController.leaveConversation(reason:)();
      return;
    case 2:
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = 2;
      *(void *)(v13 + 24) = v1;
      id v14 = v1;
      uint64_t v15 = partial apply for closure #1 in MultiwayViewController.testing_localPreviewDidFinishMinimize();
      goto LABEL_16;
    case 3:
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v1;
      *(unsigned char *)(v13 + 24) = 3;
      id v16 = v1;
      uint64_t v15 = partial apply for closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize();
LABEL_16:
      MultiwayViewController.executeAfterDelay(_:)((uint64_t)v15, v13);
      swift_release();
      break;
    default:
      return;
  }
}

void closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v8 = 0xD000000000000019;
  unint64_t v9 = 0x80000001C3791FC0;
  id v10 = v7;
  switch(a1)
  {
    case 1:
      uint64_t v8 = 0xD00000000000001ALL;
      uint64_t v11 = "FaceTimeAnswerIncomingCall";
      goto LABEL_4;
    case 2:
      uint64_t v8 = 0xD000000000000015;
      uint64_t v11 = "FaceTimeEndActiveCall";
LABEL_4:
      unint64_t v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v9 = 0x80000001C3791F60;
      uint64_t v8 = 0xD000000000000012;
      break;
    default:
      break;
  }
  outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(a3, a4, v8, v9, v7, (SEL *)&selRef_startedSubTest_forTest_);

  ConversationController.leaveConversation(reason:)();
}

void closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize()(uint64_t a1, char a2)
{
  id v4 = objc_msgSend(self, sel_defaultCenter);
  if (one-time initialization token for localPreviewDidFinishRotationAnimation != -1) {
    swift_once();
  }
  objc_msgSend(v4, sel_addObserver_selector_name_object_, a1, sel_testing_didFinishLocalPreviewRotationAnimation, static Strings.Notifications.localPreviewDidFinishRotationAnimation, 0);

  id v5 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v6 = 0xD000000000000019;
  unint64_t v7 = 0x80000001C3791FC0;
  uint64_t v8 = v5;
  switch(a2)
  {
    case 1:
      uint64_t v6 = 0xD00000000000001ALL;
      unint64_t v9 = "FaceTimeAnswerIncomingCall";
      goto LABEL_6;
    case 2:
      uint64_t v6 = 0xD000000000000015;
      unint64_t v9 = "FaceTimeEndActiveCall";
LABEL_6:
      unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v7 = 0x80000001C3791F60;
      uint64_t v6 = 0xD000000000000012;
      break;
    default:
      break;
  }
  outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0x6D61632D70617773, 0xEB00000000617265, v6, v7, v5, (SEL *)&selRef_startedSubTest_forTest_);

  ConversationController.swapLocalParticipantCamera()();
}

void MultiwayViewController.testing_didFinishLocalPreviewRotationAnimation()()
{
  uint64_t v0 = 0xD000000000000012;
  char v1 = MultiwayViewController.currentTest()();
  switch(v1)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 4:
      return;
    default:
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v2)
      {
LABEL_5:
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v3 = type metadata accessor for Logger();
        __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
        id v4 = Logger.logObject.getter();
        os_log_type_t v5 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v4, v5))
        {
          uint64_t v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v6 = 0;
          _os_log_impl(&dword_1C2F90000, v4, v5, "[Testing] did finish local preview rotation", v6, 2u);
          MEMORY[0x1C87760E0](v6, -1, -1);
        }

        id v7 = objc_msgSend(self, sel_sharedApplication);
        unint64_t v8 = 0x80000001C3791F60;
        unint64_t v9 = v7;
        switch(v1)
        {
          case 1:
            uint64_t v0 = 0xD00000000000001ALL;
            id v10 = "FaceTimeEndActiveCall";
            goto LABEL_13;
          case 2:
            uint64_t v0 = 0xD000000000000015;
            id v10 = "FaceTimeSwapCamera";
LABEL_13:
            unint64_t v8 = (unint64_t)v10 | 0x8000000000000000;
            break;
          case 3:
            break;
          default:
            uint64_t v0 = 0xD000000000000019;
            unint64_t v8 = 0x80000001C3791FC0;
            break;
        }
        outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0x6D61632D70617773, 0xEB00000000617265, v0, v8, v7, (SEL *)&selRef_finishedSubTest_forTest_);

        ConversationController.leaveConversation(reason:)();
      }
      break;
  }
}

Swift::Void __swiftcall MultiwayViewController.testing_transitionedToInactiveState()()
{
  char v0 = MultiwayViewController.currentTest()();
  switch(v0)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 4:
      OUTLINED_FUNCTION_22();
      break;
    default:
      char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v1)
      {
LABEL_4:
        id v2 = objc_msgSend(self, sel_sharedApplication);
        uint64_t v3 = 0xD000000000000015;
        uint64_t v4 = 0x80000001C3791F80;
        os_log_type_t v5 = v2;
        switch(v0)
        {
          case 1:
            uint64_t v3 = 0xD00000000000001ALL;
            uint64_t v4 = 0x80000001C3791FA0;
            break;
          case 2:
            break;
          case 3:
            uint64_t v4 = 0x80000001C3791F60;
            uint64_t v3 = 0xD000000000000012;
            break;
          default:
            uint64_t v3 = 0xD000000000000019;
            uint64_t v4 = 0x80000001C3791FC0;
            break;
        }
        outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0x6C6C61632D646E65, 0xE800000000000000, v3, v4, v2, (SEL *)&selRef_finishedSubTest_forTest_);
      }
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationKit);
      id v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v9, v10, "[Testing] did transition to inactive state");
        OUTLINED_FUNCTION_3();
      }

      id v11 = objc_msgSend(self, sel_sharedApplication);
      uint64_t v12 = 0xD000000000000015;
      uint64_t v13 = 0x80000001C3791F80;
      switch(v0)
      {
        case 1:
          uint64_t v12 = 0xD00000000000001ALL;
          uint64_t v13 = 0x80000001C3791FA0;
          break;
        case 2:
          break;
        case 3:
          uint64_t v13 = 0x80000001C3791F60;
          uint64_t v12 = 0xD000000000000012;
          break;
        default:
          uint64_t v12 = 0xD000000000000019;
          uint64_t v13 = 0x80000001C3791FC0;
          break;
      }
      outlined bridged method (mbnn) of @objc UIApplication.finishedTest(_:)(v12, v13, v11);
      OUTLINED_FUNCTION_22();

      break;
  }
}

uint64_t sub_1C342FE38()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)()
{
  char v0 = OUTLINED_FUNCTION_2_109();
  closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)(v0, v2, v1 | 0x652D6F7400000000, 0xEA0000000000646ELL);
}

id outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a3, sel_isRunningTest_, v4);

  return v5;
}

uint64_t sub_1C342FEF8()
{
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize()()
{
  closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize()(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void partial apply for closure #1 in MultiwayViewController.testing_localPreviewDidFinishMinimize()()
{
  char v0 = OUTLINED_FUNCTION_2_109();
  closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)(v0, v2, v1 | 0x6C6C616300000000, 0xE800000000000000);
}

void outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  uint64_t v10 = (void *)MEMORY[0x1C87730B0]();
  id v11 = (id)MEMORY[0x1C87730B0](a3, a4);
  swift_bridgeObjectRelease();
  objc_msgSend(a5, *a6, v10, v11);
}

void outlined bridged method (mbnn) of @objc UIApplication.finishedTest(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_finishedTest_, v4);
}

uint64_t sub_1C3430058()
{
  swift_release();
  return swift_deallocObject();
}

double CGFloat.rounded(_:toScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = a2 * a3;
  double v16 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == *MEMORY[0x1E4FBBEA0])
  {
    double v12 = round(v10);
  }
  else if (v11 == *MEMORY[0x1E4FBBE98])
  {
    double v12 = rint(v10);
  }
  else if (v11 == *MEMORY[0x1E4FBBEA8])
  {
    double v12 = ceil(v10);
  }
  else if (v11 == *MEMORY[0x1E4FBBEB0])
  {
    double v12 = floor(v10);
  }
  else if (v11 == *MEMORY[0x1E4FBBE88])
  {
    double v12 = trunc(v10);
  }
  else if (v11 == *MEMORY[0x1E4FBBE90])
  {
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (v10 < 0.0) {
      double v12 = v13;
    }
  }
  else
  {
    Double._roundSlowPath(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v16;
  }
  return v12 / a2;
}

BOOL CGFloat.isApproximatelyEqual(to:tolerance:)(double a1, double a2, double a3)
{
  return vabdd_f64(a3, a1) < a2;
}

double CGFloat.adjustedPoints(with:scaleFactor:)(double a1, double a2, double a3)
{
  return a3 / a1 * a2;
}

double CGFloat.roundedToDisplay.getter(double a1)
{
  type metadata accessor for UIView();
  double v2 = static UIView.screenScale.getter();
  return round(v2 * a1) / v2;
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  id v5 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  double v7 = CGFloat.rounded(_:toScale:)(a1, v6, a3);

  return v7;
}

{
  double v5;
  uint64_t vars8;

  objc_msgSend(a2, sel_displayScale);
  return CGFloat.rounded(_:toScale:)(a1, v5, a3);
}

double CGFloat.rounded(_:toEvenPixelUsingScale:)(uint64_t a1, double a2, double a3)
{
  double v3 = CGFloat.rounded(_:toScale:)(a1, a2, a3 * 0.5);
  return v3 + v3;
}

BOOL CGFloat.isApproximatelyZero(tolerance:)(double a1, double a2)
{
  return fabs(a2) < a1;
}

double CGFloat.round(to:)(uint64_t a1, double a2)
{
  double v3 = __exp10((double)a1);
  return round(v3 * a2) / v3;
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, void *a2, double a3)
{
  swift_getObjectType();
  return specialized CGFloat.rounded(_:toScaleOf:)(a1, a2, a3);
}

double specialized CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  id v5 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  double v7 = CGFloat.rounded(_:toScale:)(a1, v6, a3);

  return v7;
}

id isTrue(_:_:)(id result, void *a2)
{
  if ((result & 1) == 0)
  {
    swift_willThrow();
    return a2;
  }
  return result;
}

uint64_t @objc TUCallCenter.autoPunchOutBehaviorRequiredForCurrentCalls.getter(void *a1)
{
  id v1 = a1;
  char v2 = TUCallCenter.autoPunchOutBehaviorRequiredForCurrentCalls.getter();

  return v2 & 1;
}

uint64_t TUCallCenter.autoPunchOutBehaviorRequiredForCurrentCalls.getter()
{
  uint64_t result = (uint64_t)objc_msgSend(v0, sel_frontmostAudioOrVideoCall);
  if (result)
  {
    char v2 = (void *)result;
    if (objc_msgSend(v0, sel_autoPunchOutBehaviorRequiredForFrontmostCall)
      && ((type metadata accessor for SpringBoardUtilities(), !static SpringBoardUtilities.checkSpringBoardState(for:)())
       || objc_msgSend(v2, sel_isThirdPartyVideo))
      && (id v3 = objc_msgSend(self, sel__carScreen),
          v2,
          (char v2 = v3) == 0))
    {
      return 1;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

unint64_t PlaceholderCall.Purpose.debugDescription.getter()
{
  unint64_t result = 0x69636570736E752ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static PlaceholderCall.Purpose.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void PlaceholderCall.Purpose.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int PlaceholderCall.Purpose.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t PlaceholderCall.__allocating_init(for:placeholderCallCenter:purpose:)(uint64_t a1, void *a2, char *a3)
{
  uint64_t v6 = swift_allocObject();
  PlaceholderCall.init(for:placeholderCallCenter:purpose:)(a1, a2, a3);
  return v6;
}

uint64_t PlaceholderCall.init(for:placeholderCallCenter:purpose:)(uint64_t a1, void *a2, char *a3)
{
  char v6 = *a3;
  *(unsigned char *)(v3 + 17) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 16842752;
  swift_unknownObjectWeakInit();
  uint64_t v7 = v3 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_conversationUUID;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v7, a1);
  swift_unknownObjectWeakAssign();

  *(unsigned char *)(v3 + 16) = v6;
  return v3;
}

void PlaceholderCall.purpose.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t PlaceholderCall.willSetAVModeSoon.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t PlaceholderCall.willSetAVModeSoon.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  *(unsigned char *)(v1 + 17) = a1;
  return result;
}

uint64_t (*PlaceholderCall.willSetAVModeSoon.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t PlaceholderCall.desiredAVMode.getter()
{
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v0 + 216))()) {
    return 2;
  }
  OUTLINED_FUNCTION_50();
  uint64_t result = 1;
  if (((*(uint64_t (**)(void))(v2 + 240))() & 1) == 0)
  {
    OUTLINED_FUNCTION_50();
    if ((*(uint64_t (**)(void))(v3 + 264))()) {
      return 0;
    }
  }
  return result;
}

void PlaceholderCall.bluetoothAudioFormat.didset(uint64_t a1)
{
  swift_beginAccess();
  if (*(void *)(v1 + 24) != a1)
  {
    uint64_t v3 = MEMORY[0x1C8776240](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      id v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();
    }
  }
}

uint64_t PlaceholderCall.bluetoothAudioFormat.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(void *)(v0 + 24);
}

void PlaceholderCall.bluetoothAudioFormat.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_18_0();
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = a1;
  PlaceholderCall.bluetoothAudioFormat.didset(v3);
}

void (*PlaceholderCall.bluetoothAudioFormat.modify())(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_37_0();
  *uint64_t v0 = v2;
  v2[4] = v1;
  OUTLINED_FUNCTION_2();
  v2[3] = *(void *)(v1 + 24);
  return PlaceholderCall.bluetoothAudioFormat.modify;
}

void PlaceholderCall.bluetoothAudioFormat.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  PlaceholderCall.bluetoothAudioFormat.setter(*(void *)(*(void *)a1 + 24));
  free(v1);
}

void PlaceholderCall.isSendingVideo.didset(char a1)
{
  int v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 32) != v2)
  {
    uint64_t v3 = MEMORY[0x1C8776240](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      id v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();
    }
  }
}

uint64_t PlaceholderCall.isSendingVideo.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 32);
}

void PlaceholderCall.isSendingVideo.setter(char a1)
{
  OUTLINED_FUNCTION_18_0();
  char v3 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v1 + 32) = a1;
  PlaceholderCall.isSendingVideo.didset(v3);
}

void (*PlaceholderCall.isSendingVideo.modify())(uint64_t a1, uint64_t a2)
{
  int v2 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v1 + 32) = *(unsigned char *)(v0 + 32);
  return PlaceholderCall.isSendingVideo.modify;
}

void PlaceholderCall.isSendingVideo.modify(uint64_t a1, uint64_t a2)
{
}

void PlaceholderCall.isSharingScreen.didset(char a1)
{
  int v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 33) != v2)
  {
    uint64_t v3 = MEMORY[0x1C8776240](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      id v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();
    }
  }
}

uint64_t PlaceholderCall.isSharingScreen.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 33);
}

void PlaceholderCall.isSharingScreen.setter(char a1)
{
  OUTLINED_FUNCTION_18_0();
  char v3 = *(unsigned char *)(v1 + 33);
  *(unsigned char *)(v1 + 33) = a1;
  PlaceholderCall.isSharingScreen.didset(v3);
}

void (*PlaceholderCall.isSharingScreen.modify())(uint64_t a1, uint64_t a2)
{
  int v2 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v1 + 32) = *(unsigned char *)(v0 + 33);
  return PlaceholderCall.isSharingScreen.modify;
}

void PlaceholderCall.isSharingScreen.modify(uint64_t a1, uint64_t a2)
{
}

void PlaceholderCall.isUplinkMuted.didset(char a1)
{
  int v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 34) != v2)
  {
    uint64_t v3 = MEMORY[0x1C8776240](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      id v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();
    }
  }
}

uint64_t PlaceholderCall.isUplinkMuted.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 34);
}

void PlaceholderCall.isUplinkMuted.setter(char a1)
{
  OUTLINED_FUNCTION_18_0();
  char v3 = *(unsigned char *)(v1 + 34);
  *(unsigned char *)(v1 + 34) = a1;
  PlaceholderCall.isUplinkMuted.didset(v3);
}

void (*PlaceholderCall.isUplinkMuted.modify())(uint64_t a1, uint64_t a2)
{
  int v2 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v1 + 32) = *(unsigned char *)(v0 + 34);
  return PlaceholderCall.isUplinkMuted.modify;
}

void PlaceholderCall.isUplinkMuted.modify(uint64_t a1, uint64_t a2)
{
}

void PlaceholderCall.isSendingVideo.modify(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  char v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(void *)a1 + 32));
  free(v3);
}

uint64_t PlaceholderCall.shouldSuppressRingtone.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t PlaceholderCall.shouldSuppressRingtone.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  *(unsigned char *)(v1 + 35) = a1;
  return result;
}

uint64_t (*PlaceholderCall.shouldSuppressRingtone.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t PlaceholderCall.conversation.getter()
{
  uint64_t result = MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
  if (result)
  {
    int v2 = (void *)result;
    uint64_t v3 = PlaceholderCallCenter.activeConversation(for:)(v0);

    return v3;
  }
  return result;
}

uint64_t PlaceholderCall.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_conversationUUID;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t PlaceholderCall.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_conversationUUID;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t static PlaceholderCall.== infix(_:_:)()
{
  uint64_t v0 = UUID.uuidString.getter();
  uint64_t v2 = v1;
  if (v0 == UUID.uuidString.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t PlaceholderCall.uniqueProxyIdentifier.getter()
{
  return UUID.uuidString.getter();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PlaceholderCall()
{
  return static PlaceholderCall.== infix(_:_:)() & 1;
}

void PlaceholderCall.cnk_disconnect(reason:)()
{
  if (MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter))
  {
    OUTLINED_FUNCTION_14_57();
    PlaceholderCallCenter.disconnect(_:)();
  }
}

Swift::Void __swiftcall PlaceholderCall.cnk_answerOrJoin()()
{
  if (MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter))
  {
    uint64_t v1 = OUTLINED_FUNCTION_14_57();
    PlaceholderCallCenter.answer(_:)(v1);
  }
}

void PlaceholderCall.setRemoteVideoPresentationState(_:)()
{
  OUTLINED_FUNCTION_9_71();
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_95();
  __break(1u);
}

uint64_t PlaceholderCall.callUUID.getter()
{
  return UUID.uuidString.getter();
}

void PlaceholderCall.setScreenShareAttributes(_:)()
{
  OUTLINED_FUNCTION_9_71();
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_95();
  __break(1u);
}

void PlaceholderCall.setSharingScreen(_:attributes:)()
{
  uint64_t v1 = MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
  if (v1)
  {
    id v2 = (id)v1;
    PlaceholderCallCenter.setSharingScreen(_:attributes:for:)();
  }
}

uint64_t PlaceholderCall.description.getter()
{
  _StringGuts.grow(_:)(33);
  uint64_t v0 = _typeName(_:qualified:)();
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0x65736F7072757028;
  v1._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v1);
  v2._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001C37ADD10;
  v3._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v3);
  PlaceholderCall.conversation.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUConversation?);
  v4._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return v0;
}

uint64_t PlaceholderCall.status.getter()
{
  uint64_t v0 = (void *)PlaceholderCall.conversation.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = v0;
  unint64_t v2 = (unint64_t)objc_msgSend(v0, sel_state);
  if (v2 < 5)
  {
    uint64_t v3 = dword_1C37810A0[v2];

    return v3;
  }
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, (SEL)&selRef_setMode_);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t result = OUTLINED_FUNCTION_6_95();
  __break(1u);
  return result;
}

uint64_t PlaceholderCall.uniqueProxyIdentifierUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_conversationUUID;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t PlaceholderCall.callGroupUUID.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (void *)PlaceholderCall.conversation.getter();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_groupUUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = type metadata accessor for UUID();
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

double PlaceholderCall.callDuration.getter()
{
  return 0.0;
}

uint64_t PlaceholderCall.callDurationString.getter()
{
  return 0;
}

void *PlaceholderCall.displayName.getter()
{
  uint64_t v0 = (void *)PlaceholderCall.conversation.getter();
  uint64_t v1 = v0;
  if (v0)
  {
    id v2 = objc_msgSend(v0, sel_displayName);

    uint64_t v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v1;
}

id PlaceholderCall.handle.getter()
{
  uint64_t v0 = (void *)PlaceholderCall.conversation.getter();
  id v1 = v0;
  if (v0)
  {
    id v2 = objc_msgSend(v0, sel_localMember);

    if (v2)
    {
      id v1 = objc_msgSend(v2, sel_handle);
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t PlaceholderCall.imageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

uint64_t PlaceholderCall.isActive.getter()
{
  if (PlaceholderCall.isConnected.getter()) {
    return 1;
  }
  return (uint64_t)PlaceholderCall.isConnecting.getter();
}

void *PlaceholderCall.isConnected.getter()
{
  uint64_t result = (void *)PlaceholderCall.conversation.getter();
  if (result)
  {
    id v1 = result;
    id v2 = objc_msgSend(result, sel_state);

    return (void *)(v2 == (id)3);
  }
  return result;
}

void *PlaceholderCall.isConnecting.getter()
{
  uint64_t result = (void *)PlaceholderCall.conversation.getter();
  if (result)
  {
    id v1 = result;
    id v2 = objc_msgSend(result, sel_state);

    return (void *)(v2 == (id)2);
  }
  return result;
}

id PlaceholderCall.provider.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_providerManager);

  id v2 = objc_msgSend(v1, sel_faceTimeProvider);
  return v2;
}

uint64_t PlaceholderCall.remoteParticipantHandles.getter()
{
  id v0 = (void *)PlaceholderCall.conversation.getter();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  if (!v0)
  {
LABEL_12:
    return specialized Set.init<A>(_:)(v1);
  }
  id v2 = v0;
  id v3 = objc_msgSend(v0, sel_remoteMembers);

  type metadata accessor for TUConversationMember();
  lazy protocol witness table accessor for type TUConversationMember and conformance NSObject();
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = specialized LazySequence<>.count.getter(v4);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v6 = v5;
  uint64_t v33 = v1;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v4 & 0xC000000000000001) == 0)
  {
    uint64_t result = specialized _NativeSet.startIndex.getter(v4);
    uint64_t v8 = result;
    uint64_t v10 = v31;
    char v11 = v32 & 1;
    if (v6 < 0) {
      goto LABEL_16;
    }
    do
    {
LABEL_5:
      char v12 = v11;
      uint64_t v13 = OUTLINED_FUNCTION_11_53();
      specialized Set.subscript.getter(v13, v14, v15, v16);
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      if ((v4 & 0xC000000000000001) != 0)
      {
        if ((v11 & 1) == 0) {
          goto LABEL_17;
        }
        uint64_t v20 = __CocoaSet.index(after:)();
        uint64_t v22 = v21;
        char v11 = 1;
        outlined consume of Set<TUHandle>.Index._Variant(v8, v10, 1);
        uint64_t v8 = v20;
        uint64_t v10 = v22;
      }
      else
      {
        uint64_t v23 = OUTLINED_FUNCTION_11_53();
        uint64_t v27 = specialized _NativeSet.index(after:)(v23, v24, v25, v26);
        uint64_t v29 = v28;
        char v11 = v30 & 1;
        outlined consume of Set<TUHandle>.Index._Variant(v8, v10, v12);
        uint64_t v8 = v27;
        uint64_t v10 = v29;
      }
      --v6;
    }
    while (v6);
    outlined consume of Set<TUHandle>.Index._Variant(v8, v10, v11);
    uint64_t v1 = v33;
    goto LABEL_11;
  }
  uint64_t result = __CocoaSet.startIndex.getter();
  uint64_t v8 = result;
  uint64_t v10 = v9;
  char v11 = 1;
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  __break(1u);
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

id PlaceholderCall.cnk_contactStoreConfiguration.getter()
{
  id v0 = self;
  uint64_t v1 = (void *)PlaceholderCall.conversation.getter();
  id v2 = objc_msgSend(v0, sel_tu_contactStoreConfigurationForConversation_, v1);

  return v2;
}

BOOL PlaceholderCall.cnk_supportsAVLessConversations.getter()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 184))() == 0;
}

void protocol witness for Call.setRemoteVideoPresentationState(_:) in conformance PlaceholderCall()
{
}

void protocol witness for Call.setScreenShareAttributes(_:) in conformance PlaceholderCall()
{
}

uint64_t protocol witness for Call.imageURL.getter in conformance PlaceholderCall@<X0>(uint64_t a1@<X8>)
{
  return PlaceholderCall.imageURL.getter(a1);
}

id protocol witness for Call.provider.getter in conformance PlaceholderCall()
{
  return PlaceholderCall.provider.getter();
}

uint64_t protocol witness for Call.bluetoothAudioFormat.getter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t protocol witness for Call.bluetoothAudioFormat.setter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t (*protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 208))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for Call.isSendingVideo.getter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t protocol witness for Call.isSendingVideo.setter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t (*protocol witness for Call.isSendingVideo.modify in conformance PlaceholderCall(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 232))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for Call.isSharingScreen.getter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t protocol witness for Call.isSharingScreen.setter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t (*protocol witness for Call.isSharingScreen.modify in conformance PlaceholderCall(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for Call.isUplinkMuted.getter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t protocol witness for Call.isUplinkMuted.setter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t (*protocol witness for Call.isUplinkMuted.modify in conformance PlaceholderCall(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 280))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for Call.shouldSuppressRingtone.getter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t protocol witness for Call.shouldSuppressRingtone.setter in conformance PlaceholderCall()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t (*protocol witness for Call.shouldSuppressRingtone.modify in conformance PlaceholderCall(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 304))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PlaceholderCall()
{
  return PlaceholderCall.description.getter();
}

unint64_t type metadata accessor for TUConversationMember()
{
  unint64_t result = lazy cache variable for type metadata for TUConversationMember;
  if (!lazy cache variable for type metadata for TUConversationMember)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  }
  return result;
}

uint64_t specialized LazySequence<>.count.getter(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return __CocoaSet.count.getter();
  }
  else {
    return *(void *)(a1 + 16);
  }
}

unint64_t lazy protocol witness table accessor for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose()
{
  unint64_t result = lazy protocol witness table cache variable for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose;
  if (!lazy protocol witness table cache variable for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for PlaceholderCall(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type PlaceholderCall and conformance PlaceholderCall();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type PlaceholderCall and conformance PlaceholderCall()
{
  unint64_t result = lazy protocol witness table cache variable for type PlaceholderCall and conformance PlaceholderCall;
  if (!lazy protocol witness table cache variable for type PlaceholderCall and conformance PlaceholderCall)
  {
    type metadata accessor for PlaceholderCall();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlaceholderCall and conformance PlaceholderCall);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderCall()
{
  uint64_t result = type metadata singleton initialization cache for PlaceholderCall;
  if (!type metadata singleton initialization cache for PlaceholderCall) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C34323F0()
{
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 160))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3432438()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1C343247C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_50();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 192))();
  *a1 = result;
  return result;
}

uint64_t sub_1C34324C4()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1C3432508()
{
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 216))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3432550()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1C3432594()
{
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 240))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C34325DC()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1C3432620()
{
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 264))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3432670()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t sub_1C34326BC()
{
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 288))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C343270C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t ObjC metadata update function for PlaceholderCall()
{
  return type metadata accessor for PlaceholderCall();
}

uint64_t type metadata completion function for PlaceholderCall()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PlaceholderCall(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaceholderCall);
}

uint64_t dispatch thunk of PlaceholderCall.__allocating_init(for:placeholderCallCenter:purpose:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PlaceholderCall.willSetAVModeSoon.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PlaceholderCall.willSetAVModeSoon.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PlaceholderCall.willSetAVModeSoon.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PlaceholderCall.desiredAVMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of PlaceholderCall.bluetoothAudioFormat.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PlaceholderCall.bluetoothAudioFormat.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PlaceholderCall.bluetoothAudioFormat.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of PlaceholderCall.isSendingVideo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of PlaceholderCall.isSendingVideo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PlaceholderCall.isSendingVideo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of PlaceholderCall.isSharingScreen.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of PlaceholderCall.isSharingScreen.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of PlaceholderCall.isSharingScreen.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of PlaceholderCall.isUplinkMuted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of PlaceholderCall.isUplinkMuted.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of PlaceholderCall.isUplinkMuted.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of PlaceholderCall.shouldSuppressRingtone.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of PlaceholderCall.shouldSuppressRingtone.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of PlaceholderCall.shouldSuppressRingtone.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

unsigned char *storeEnumTagSinglePayload for PlaceholderCall.Purpose(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3432C00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderCall.Purpose()
{
  return &type metadata for PlaceholderCall.Purpose;
}

void *PlatformFeatureChecker.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return static PlatformFeatureChecker.shared;
}

uint64_t iPadFeatureSupportChecker.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 1;
  return result;
}

uint64_t static PlatformFeatureChecker.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return outlined init with copy of IDSLookupManager((uint64_t)static PlatformFeatureChecker.shared, a1);
}

uint64_t static PlatformFeatureChecker.shared.setter(uint64_t *a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(static PlatformFeatureChecker.shared, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t (*static PlatformFeatureChecker.shared.modify())()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t PlatformFeatureChecker.__deallocating_deinit()
{
  return OUTLINED_FUNCTION_0_94();
}

uint64_t PlatformFeatureChecker.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t iPadFeatureSupportChecker.videoMessagingSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t iPadFeatureSupportChecker.__deallocating_deinit()
{
  return OUTLINED_FUNCTION_0_94();
}

uint64_t iPadFeatureSupportChecker.init()()
{
  uint64_t result = v0;
  *(unsigned char *)(v0 + 16) = 1;
  return result;
}

uint64_t type metadata accessor for PlatformFeatureChecker()
{
  return self;
}

uint64_t method lookup function for PlatformFeatureChecker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlatformFeatureChecker);
}

uint64_t dispatch thunk of PlatformFeatureChecker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PlatformFeatureSupportChecking.videoMessagingSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for iPhoneFeatureSupportChecker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for iPhoneFeatureSupportChecker);
}

uint64_t dispatch thunk of iPhoneFeatureSupportChecker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for iPadFeatureSupportChecker()
{
  return self;
}

uint64_t method lookup function for iPadFeatureSupportChecker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for iPadFeatureSupportChecker);
}

uint64_t dispatch thunk of iPadFeatureSupportChecker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C3432F88()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t RecentsListViewController.tipKitDismissTip(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.InvalidationReason?);
  uint64_t v3 = OUTLINED_FUNCTION_1(v2);
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v3);
  type metadata accessor for TPTipsHelper();
  static TPTipsHelper.taskQueue.getter();
  uint64_t v8 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  outlined init with copy of Tips.InvalidationReason?(a1, (uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  outlined init with take of Tips.InvalidationReason?((uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  *(void *)(v10 + ((v7 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

Swift::Void __swiftcall RecentsListViewController.tipKitStopObservation()()
{
}

uint64_t closure #1 in RecentsListViewController.tipKitStartObservation()(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = type metadata accessor for FaceTimeLinkTip();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  type metadata accessor for TPTipsHelper();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[11] = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #1 in RecentsListViewController.tipKitStartObservation();
  return MEMORY[0x1F41638B0]();
}

uint64_t closure #1 in RecentsListViewController.tipKitStartObservation()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  v2[12] = v6;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  OUTLINED_FUNCTION_16_44();
  v2[13] = v9;
  v2[14] = v10;
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStartObservation(), v8, v7);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_28_0();
  unint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[5] + 16;
  dispatch thunk of TPTipsHelper.setup()();

  OUTLINED_FUNCTION_2();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  v0[15] = v3;
  if (v3)
  {
    FaceTimeLinkTip.init()();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = closure #1 in RecentsListViewController.tipKitStartObservation();
    uint64_t v5 = v0[8];
    return specialized RecentsListViewController.observeTip<A>(_:)(v5);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    return v7();
  }
}

{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = (void *)v0[15];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[6];
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[13];
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStartObservation(), v9, v8);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitStartObservation()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_98(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in RecentsListViewController.tipKitStartObservation()(v0);
}

uint64_t specialized RecentsListViewController.observeTip<A>(_:)(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TPTipsHelper.Entry();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FaceTimeLinkTip();
  v2[15] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[16] = v6;
  v2[17] = *(void *)(v6 + 64);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v8;
  v2[23] = v7;
  return MEMORY[0x1F4188298](specialized RecentsListViewController.observeTip<A>(_:), v8, v7);
}

uint64_t specialized RecentsListViewController.observeTip<A>(_:)()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[7];
  uint64_t v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v7);
  uint64_t v8 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[24] = v9;
  v0[25] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v2, v6, v4);
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBCFD8];
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v2, v4);
  *(void *)(v12 + ((v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  v0[26] = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  type metadata accessor for TPTipsHelper();
  int v14 = (void *)swift_task_alloc();
  v0[27] = v14;
  *int v14 = v0;
  v14[1] = specialized RecentsListViewController.observeTip<A>(_:);
  OUTLINED_FUNCTION_24_5();
  return MEMORY[0x1F41638B0]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_2_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v5 = v4;
  *(void *)(v7 + 224) = v6;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_72();
  uint64_t v9 = *(void *)(v8 + 184);
  uint64_t v10 = *(void *)(v0 + 176);
  return MEMORY[0x1F4188298](specialized RecentsListViewController.observeTip<A>(_:), v10, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  void (*v7)(void);
  uint64_t (*v8)(void);
  void (*v10)(uint64_t *, uint64_t, uint64_t);
  void *v11;
  uint64_t v12;

  unint64_t v11 = (void *)v0[28];
  uint64_t v10 = (void (*)(uint64_t *, uint64_t, uint64_t))v0[24];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4FAD990], v4);
  v0[5] = v1;
  v0[6] = lazy protocol witness table accessor for type Tips.InvalidationReason and conformance Tips.InvalidationReason(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, MEMORY[0x1E4FAD9B0]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  v10(boxed_opaque_existential_1, v5, v1);
  swift_retain();
  TPTipsHelper.Entry.init(_:tip:observationTask:)();
  dispatch thunk of TPTipsHelper.addEntry(_:)();

  swift_release();
  OUTLINED_FUNCTION_12_1();
  v7();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v8();
}

uint64_t closure #1 in RecentsListViewController.tipKitStopObservation()(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[11] = v4;
  v1[12] = v3;
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStopObservation(), v4, v3);
}

uint64_t closure #1 in RecentsListViewController.tipKitStopObservation()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[5] + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  v0[13] = v2;
  if (v2)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = closure #1 in RecentsListViewController.tipKitStopObservation();
    return RecentsListViewController.dismissPopover()();
  }
  else
  {
    type metadata accessor for TPTipsHelper();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[15] = v5;
    *uint64_t v5 = v0;
    v5[1] = closure #1 in RecentsListViewController.tipKitStopObservation();
    return MEMORY[0x1F41638B0]();
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v10;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void **)(v4 + 104);
  uint64_t v6 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();

  type metadata accessor for TPTipsHelper();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 120) = v8;
  *uint64_t v8 = v6;
  v8[1] = closure #1 in RecentsListViewController.tipKitStopObservation();
  return MEMORY[0x1F41638B0]();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_2_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v5 = v4;
  *(void *)(v7 + 128) = v6;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_72();
  uint64_t v9 = *(void *)(v8 + 96);
  uint64_t v10 = *(void *)(v0 + 88);
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStopObservation(), v10, v9);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = (void *)v0[16];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4FAD990], v4);
  dispatch thunk of TPTipsHelper.removeEntries(_:)();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStopObservation(), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStopObservation(), v2, v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  if (one-time initialization token for tipUserInfo != -1) {
    swift_once();
  }
  type metadata accessor for RecentsListViewController.FaceTimeLinkTipUserInfo();
  uint64_t v1 = OUTLINED_FUNCTION_20();
  *(void *)(v1 + 16) = 0;
  static RecentsListViewController.tipUserInfo = (_UNKNOWN *)v1;
  swift_release();
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitStopObservation(), v2, v3);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t RecentsListViewController.dismissPopover()()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return MEMORY[0x1F4188298](RecentsListViewController.dismissPopover(), v3, v2);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = RecentsListViewController.tipPopoverController.getter();
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 16)) + 0x360))();
    uint64_t v4 = objc_msgSend(v3, sel_collectionViewLayout);

    objc_msgSend(v4, sel_invalidateLayout);
    uint64_t v5 = static MainActor.shared.getter();
    *(void *)(v0 + 64) = v5;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 72) = v6;
    *(void *)(v6 + 16) = v2;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = MEMORY[0x1E4FBC848];
    v7[1] = RecentsListViewController.dismissPopover();
    uint64_t v9 = MEMORY[0x1E4FBCFD8];
    return MEMORY[0x1F41880D8](v7, v5, v9, 0xD000000000000010, 0x80000001C37ADF80, partial apply for closure #1 in RecentsListViewController.dismissPopover(), v6, v8 + 8);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_6();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_72();
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(v0 + 40);
  return MEMORY[0x1F4188298](RecentsListViewController.dismissPopover(), v6, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 56);
  swift_release();

  OUTLINED_FUNCTION_6();
  return v2();
}

uint64_t closure #1 in RecentsListViewController.tipKitDismissTip(_:)(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  v2[7] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Tips.InvalidationReason?, Tips.InvalidationReason?));
  v2[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FaceTimeLinkTip();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.InvalidationReason?);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Tips.InvalidationReason();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[19] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[20] = v6;
  v2[21] = v5;
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitDismissTip(_:), v6, v5);
}

uint64_t closure #1 in RecentsListViewController.tipKitDismissTip(_:)()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  outlined init with copy of Tips.InvalidationReason?(v0[5], v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of UUID?(v0[14], &demangling cache variable for type metadata for Tips.InvalidationReason?);
  }
  else
  {
    uint64_t v3 = v0[18];
    uint64_t v4 = v0[15];
    uint64_t v5 = v0[16];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v0[14], v4);
    FaceTimeLinkTip.init()();
    lazy protocol witness table accessor for type Tips.InvalidationReason and conformance Tips.InvalidationReason(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, MEMORY[0x1E4FAD9B0]);
    Tip.invalidate(reason:)();
    OUTLINED_FUNCTION_12_1();
    v6();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v7 = v0[15];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[7];
  uint64_t v10 = v0[8];
  uint64_t v11 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v0[16] + 104))(v8, *MEMORY[0x1E4F422A0], v7);
  __swift_storeEnumTagSinglePayload(v8, 0, 1, v7);
  uint64_t v12 = v10 + *(int *)(v9 + 48);
  outlined init with copy of Tips.InvalidationReason?(v11, v10);
  outlined init with copy of Tips.InvalidationReason?(v8, v12);
  if (__swift_getEnumTagSinglePayload(v10, 1, v7) == 1)
  {
    outlined destroy of UUID?(v0[13], &demangling cache variable for type metadata for Tips.InvalidationReason?);
    OUTLINED_FUNCTION_11_54();
    if (!v13) {
      goto LABEL_11;
    }
    outlined destroy of UUID?(v0[8], &demangling cache variable for type metadata for Tips.InvalidationReason?);
LABEL_13:
    objc_msgSend(self, sel_logAnalyticsEventFaceTimeLink);
    goto LABEL_14;
  }
  outlined init with copy of Tips.InvalidationReason?(v0[8], v0[12]);
  OUTLINED_FUNCTION_11_54();
  if (v13)
  {
    uint64_t v14 = v0[15];
    uint64_t v15 = v0[16];
    uint64_t v16 = v0[12];
    outlined destroy of UUID?(v0[13], &demangling cache variable for type metadata for Tips.InvalidationReason?);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
LABEL_11:
    outlined destroy of UUID?(v0[8], &demangling cache variable for type metadata for (Tips.InvalidationReason?, Tips.InvalidationReason?));
    goto LABEL_14;
  }
  uint64_t v18 = v0[16];
  uint64_t v17 = v0[17];
  uint64_t v19 = v0[15];
  uint64_t v21 = v0[12];
  uint64_t v20 = v0[13];
  uint64_t v22 = v0[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v17, v12, v19);
  lazy protocol witness table accessor for type Tips.InvalidationReason and conformance Tips.InvalidationReason(&lazy protocol witness table cache variable for type Tips.InvalidationReason and conformance Tips.InvalidationReason, MEMORY[0x1E4F422B0]);
  char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v24(v17, v19);
  outlined destroy of UUID?(v20, &demangling cache variable for type metadata for Tips.InvalidationReason?);
  v24(v21, v19);
  outlined destroy of UUID?(v22, &demangling cache variable for type metadata for Tips.InvalidationReason?);
  if (v23) {
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v25 = v0[6] + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v26 = MEMORY[0x1C8776240](v25);
  v0[22] = v26;
  if (!v26)
  {
    swift_release();
    OUTLINED_FUNCTION_17_44();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_24_5();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v27 = (void *)swift_task_alloc();
  v0[23] = (uint64_t)v27;
  *uint64_t v27 = v0;
  v27[1] = closure #1 in RecentsListViewController.tipKitDismissTip(_:);
  OUTLINED_FUNCTION_24_5();
  return RecentsListViewController.dismissPopover()();
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  OUTLINED_FUNCTION_9_72();
  uint64_t v6 = *(void *)(v5 + 168);
  uint64_t v7 = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitDismissTip(_:), v7, v6);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_49_0();
  swift_release();
  OUTLINED_FUNCTION_17_44();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t closure #1 in RecentsListViewController.tipKitInvalidateLayout()(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 48) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in RecentsListViewController.tipKitInvalidateLayout(), v3, v2);
}

uint64_t closure #1 in RecentsListViewController.tipKitInvalidateLayout()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = RecentsListViewController.tipPopoverController.getter();

    if (v4)
    {
      uint64_t v5 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x360))();
      id v6 = objc_msgSend(v5, sel_collectionViewLayout);

      objc_msgSend(v6, sel_invalidateLayout);
    }
  }
  OUTLINED_FUNCTION_6();
  return v7();
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitInvalidateLayout()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_98(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in RecentsListViewController.tipKitInvalidateLayout()(v0);
}

uint64_t outlined init with copy of Tips.InvalidationReason?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.InvalidationReason?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C343517C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.InvalidationReason?);
  OUTLINED_FUNCTION_1(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = type metadata accessor for Tips.InvalidationReason();
  if (!__swift_getEnumTagSinglePayload(v0 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of Tips.InvalidationReason?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.InvalidationReason?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitDismissTip(_:)()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.InvalidationReason?);
  OUTLINED_FUNCTION_1(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = v0 + v6;
  uint64_t v8 = *(void *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_98(v9);
  *uint64_t v10 = v11;
  v10[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in RecentsListViewController.tipKitDismissTip(_:)(v7, v8);
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitStopObservation()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_98(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in RecentsListViewController.tipKitStopObservation()(v0);
}

uint64_t specialized closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Tips.Status();
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[16] = swift_task_alloc();
  v5[17] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[18] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>);
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>.Iterator);
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = type metadata accessor for MainActor();
  v5[27] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[28] = v10;
  v5[29] = v9;
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v10, v9);
}

uint64_t specialized closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  type metadata accessor for FaceTimeLinkTip();
  lazy protocol witness table accessor for type Tips.InvalidationReason and conformance Tips.InvalidationReason(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, MEMORY[0x1E4FAD9B0]);
  Tip.shouldDisplayUpdates.getter();
  MEMORY[0x1C8774690](v3);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncStream<Tips.Status> and conformance AsyncStream<A>, (uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  OUTLINED_FUNCTION_2();
  uint64_t v4 = static MainActor.shared.getter();
  v0[30] = v4;
  if (v4)
  {
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_16_44();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  v0[31] = v6;
  v0[32] = v5;
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v6, v5);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_28_0();
  v0[33] = AsyncMapSequence.Iterator.baseIterator.modify();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncStream<Tips.Status>.Iterator and conformance AsyncStream<A>.Iterator, &demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[34] = v1;
  *uint64_t v1 = v0;
  v1[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
  uint64_t v2 = v0[11];
  return MEMORY[0x1F4187C80](v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 248);
    uint64_t v8 = *(void *)(v3 + 256);
    uint64_t v9 = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
  }
  else
  {
    (*(void (**)(void))(v3 + 264))();
    uint64_t v7 = *(void *)(v3 + 248);
    uint64_t v8 = *(void *)(v3 + 256);
    uint64_t v9 = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
  }
  return MEMORY[0x1F4188298](v9, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void (*v12)(void);
  void *v13;
  uint64_t v14;
  int *v16;
  uint64_t v17;

  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  OUTLINED_FUNCTION_11_54();
  if (v3)
  {
    outlined destroy of UUID?(v1, &demangling cache variable for type metadata for Tips.Status?);
    swift_release();
    uint64_t v4 = v0[28];
    uint64_t v5 = v0[29];
    return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v4, v5);
  }
  else
  {
    uint64_t v7 = v0[24];
    uint64_t v6 = v0[25];
    uint64_t v8 = v0[22];
    uint64_t v9 = v0[23];
    (*(void (**)(void, uint64_t, uint64_t))(v0[13] + 32))(v0[14], v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[35] = v11;
    v0[36] = *(void *)(v9 + 8);
    v0[37] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    OUTLINED_FUNCTION_12_1();
    v12();
    uint64_t v16 = (int *)((char *)v10 + *v10);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[38] = v13;
    *uint64_t v13 = v0;
    v13[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
    uint64_t v14 = v0[14];
    return ((uint64_t (*)(void *, uint64_t))v16)(v0 + 45, v14);
  }
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_2_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v3 + 361) = *(unsigned char *)(v3 + 360);
  OUTLINED_FUNCTION_12_1();
  v5();
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 248);
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v7, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v1, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t);
  void *v15;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t (*v19)(void);
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;

  uint64_t v1 = MEMORY[0x1C8776240](*(void *)(v0 + 80) + 16);
  *(void *)(v0 + 312) = v1;
  if (!v1)
  {
    uint64_t v13 = OUTLINED_FUNCTION_7_87();
    v14(v13);
    goto LABEL_11;
  }
  uint64_t v2 = (void *)v1;
  if (*(unsigned char *)(v0 + 361))
  {
    OUTLINED_FUNCTION_4_8();
    uint64_t v4 = (*(uint64_t (**)(void))(v3 + 760))();
    *(void *)(v0 + 320) = v5;
    if (!v5)
    {
      uint64_t v17 = OUTLINED_FUNCTION_7_87();
      v18(v17);

      goto LABEL_11;
    }
    uint64_t v7 = v4;
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    uint64_t v10 = RecentsListViewController.tipPopoverController.getter();

    if (v10)
    {
      uint64_t v11 = OUTLINED_FUNCTION_7_87();
      v12(v11);

LABEL_11:
      swift_release();
LABEL_12:
      OUTLINED_FUNCTION_10_65();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6();
      return v19();
    }
    uint64_t v20 = objc_msgSend(v8, sel_window);

    if (!v20 || (uint64_t v21 = v9 & 1, (v9 & 1) == 0))
    {
      uint64_t v31 = OUTLINED_FUNCTION_7_87();
      v32(v31);

      swift_release();
      goto LABEL_12;
    }
    uint64_t v22 = *(void *)(v0 + 72);
    OUTLINED_FUNCTION_4_8();
    uint64_t v24 = (void *)(*(uint64_t (**)(void))(v23 + 864))();
    uint64_t v25 = objc_msgSend(v24, sel_collectionViewLayout);

    objc_msgSend(v25, sel_invalidateLayout);
    uint64_t v26 = static MainActor.shared.getter();
    *(void *)(v0 + 336) = v26;
    uint64_t v27 = swift_task_alloc();
    *(void *)(v0 + 344) = v27;
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = v7;
    *(void *)(v27 + 32) = v8;
    *(unsigned char *)(v27 + 40) = v21;
    *(void *)(v27 + 48) = v2;
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v28;
    *uint64_t v28 = v0;
    v28[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
    uint64_t v29 = MEMORY[0x1E4FBC848] + 8;
    char v30 = MEMORY[0x1E4FBCFD8];
    return MEMORY[0x1F41880D8](v28, v26, v30, 0x546576726573626FLL, 0xEE00293A5F287069, partial apply for specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:), v27, v29);
  }
  else
  {
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v15;
    char *v15 = v0;
    v15[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
    return RecentsListViewController.dismissPopover()();
  }
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_49_0();
  (*(void (**)(void, void))(v0[23] + 8))(v0[25], v0[22]);
  swift_release();
  OUTLINED_FUNCTION_10_65();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v1();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_72();
  uint64_t v5 = *(void *)(v4 + 232);
  uint64_t v6 = *(void *)(v0 + 224);
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v6, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();

  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 240) = v1;
  if (v1)
  {
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_16_44();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v2 = 0;
  }
  *(void *)(v0 + 248) = v3;
  *(void *)(v0 + 256) = v2;
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v3, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_72();
  uint64_t v5 = *(void *)(v4 + 232);
  uint64_t v6 = *(void *)(v0 + 224);
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v6, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();

  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 240) = v1;
  if (v1)
  {
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_16_44();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v2 = 0;
  }
  *(void *)(v0 + 248) = v3;
  *(void *)(v0 + 256) = v2;
  return MEMORY[0x1F4188298](specialized closure #1 in RecentsListViewController.observeTip<A>(_:), v3, v2);
}

void specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1, uint64_t a2, void *a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v63 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  type metadata accessor for TipUIPopoverViewController();
  uint64_t v13 = type metadata accessor for FaceTimeLinkTip();
  uint64_t v65 = (void *)v13;
  uint64_t v66 = lazy protocol witness table accessor for type Tips.InvalidationReason and conformance Tips.InvalidationReason(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, MEMORY[0x1E4FAD9B0]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, a2, v13);
  id v15 = a3;
  uint64_t v16 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
  uint64_t v17 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_setSourceItem_, v15);
  }
  objc_msgSend(v16, sel_setPreferredContentSize_, a4, *(double *)(MEMORY[0x1E4FB2C68] + 8));
  uint64_t v19 = TipUIPopoverViewController.popoverPresentationController.getter();
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C3769830;
    id v22 = objc_msgSend(a6, sel_view);
    if (!v22) {
      goto LABEL_46;
    }
    *(void *)(v21 + 32) = v22;
    aBlock[0] = v21;
    specialized Array._endMutation()();
    type metadata accessor for UIView();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setPassthroughViews_, isa);
  }
  uint64_t v24 = &selRef_trailingBarAlpha;
  id v25 = objc_msgSend(a6, sel_navigationController);
  if (v25)
  {
    uint64_t v26 = v25;
    id v27 = objc_msgSend(v25, sel_navigationBar);

    if (v27)
    {
      unint64_t v62 = v10;
      uint64_t v28 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
      if (v28)
      {
        uint64_t v29 = v28;
        id v30 = objc_msgSend(v28, sel_passthroughViews);
        if (!v30)
        {
          objc_msgSend(v29, sel_setPassthroughViews_, 0);

LABEL_18:
          uint64_t v10 = v62;
          goto LABEL_19;
        }
        uint64_t v31 = v30;
        v61[1] = type metadata accessor for UIView();
        unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        aBlock[0] = v32;
        if (v32 >> 62)
        {
          id v58 = v27;
          swift_bridgeObjectRetain();
          uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v59 < 0)
          {
            __break(1u);
            goto LABEL_44;
          }
        }
        else
        {
          id v33 = v27;
        }
        specialized Array.replaceSubrange<A>(_:with:)();
        if (aBlock[0])
        {
          v34.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        else
        {
          v34.super.Class isa = 0;
        }
        objc_msgSend(v29, sel_setPassthroughViews_, v34.super.isa);
      }
      goto LABEL_18;
    }
  }
LABEL_19:
  id v35 = objc_msgSend(a6, sel_navigationController);
  if (!v35) {
    goto LABEL_33;
  }
  unint64_t v36 = v35;
  id v27 = objc_msgSend(v35, sel_toolbar);

  if (!v27) {
    goto LABEL_33;
  }
  uint64_t v24 = (char **)v10;
  uint64_t v37 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (!v37) {
    goto LABEL_31;
  }
  uint64_t v29 = v37;
  id v38 = objc_msgSend(v37, sel_passthroughViews);
  if (v38)
  {
    uint64_t v39 = v38;
    unint64_t v62 = type metadata accessor for UIView();
    unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    aBlock[0] = v40;
    if (!(v40 >> 62))
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v42 = v27;
LABEL_25:
      if (v41 >= 1)
      {
        specialized Array.replaceSubrange<A>(_:with:)();
        if (aBlock[0])
        {
          v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        else
        {
          v43.super.Class isa = 0;
        }
        objc_msgSend(v29, sel_setPassthroughViews_, v43.super.isa);

LABEL_31:
        goto LABEL_32;
      }
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
LABEL_44:
    id v60 = v27;
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  objc_msgSend(v29, sel_setPassthroughViews_, 0);

LABEL_32:
  uint64_t v10 = (uint64_t)v24;
LABEL_33:
  uint64_t v44 = self;
  id v45 = v16;
  id v46 = objc_msgSend(v44, sel_currentTraitCollection);
  id v47 = objc_msgSend(v46, sel_userInterfaceStyle);

  objc_msgSend(v45, sel_setOverrideUserInterfaceStyle_, v47);
  uint64_t v48 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (v48)
  {
    id v49 = v48;
    objc_msgSend(v48, sel_setPermittedArrowDirections_, 1);
  }
  uint64_t v50 = TipUIPopoverViewController.popoverPresentationController.getter();
  if (v50)
  {
    uint64_t v51 = (void *)v50;
    id v52 = objc_msgSend(self, sel_systemGray3Color);
    objc_msgSend(v51, sel_setBackgroundColor_, v52);
  }
  if (one-time initialization token for tipUserInfo != -1) {
    swift_once();
  }
  if (static RecentsListViewController.tipUserInfo)
  {
    id v53 = (void *)*((void *)static RecentsListViewController.tipUserInfo + 2);
    *((void *)static RecentsListViewController.tipUserInfo + 2) = v45;
    id v54 = v45;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v63, v10);
  unint64_t v55 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v56 + v55, (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v66 = (uint64_t)partial apply for closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:);
  uint64_t v67 = v56;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v65 = &block_descriptor_39_1;
  id v57 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a6, sel_presentViewController_animated_completion_, v45, 1, v57);
  _Block_release(v57);
}

uint64_t closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  return CheckedContinuation.resume(returning:)();
}

void closure #1 in RecentsListViewController.dismissPopover()(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover();
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t aBlock[3] = &block_descriptor_72;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, v10);
  _Block_release(v10);
}

uint64_t closure #1 in closure #1 in RecentsListViewController.dismissPopover()()
{
  if (one-time initialization token for tipUserInfo != -1) {
    swift_once();
  }
  if (static RecentsListViewController.tipUserInfo)
  {
    uint64_t v0 = (void *)*((void *)static RecentsListViewController.tipUserInfo + 2);
    *((void *)static RecentsListViewController.tipUserInfo + 2) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  return CheckedContinuation.resume(returning:)();
}

void partial apply for closure #1 in RecentsListViewController.dismissPopover()(uint64_t a1)
{
  closure #1 in RecentsListViewController.dismissPopover()(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()()
{
  return partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()((uint64_t (*)(uint64_t))closure #1 in closure #1 in RecentsListViewController.dismissPopover());
}

uint64_t lazy protocol witness table accessor for type Tips.InvalidationReason and conformance Tips.InvalidationReason(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3436F8C()
{
  uint64_t v1 = type metadata accessor for FaceTimeLinkTip();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for FaceTimeLinkTip();
  OUTLINED_FUNCTION_1(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v11 = v0 + v8;
  uint64_t v12 = *(void *)(v0 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_98(v13);
  *uint64_t v14 = v15;
  v14[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return specialized closure #1 in RecentsListViewController.observeTip<A>(_:)(v2, v9, v10, v11, v12);
}

void partial apply for specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1)
{
  specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)(a1, *(void *)(v1 + 16), *(void **)(v1 + 32), *(double *)(v1 + 24), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t objectdestroy_19Tm()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  OUTLINED_FUNCTION_12_0();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  return partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()((uint64_t (*)(uint64_t))closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:));
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>)
                 - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t static ViewBuilder.buildIf<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a2, a1, v4);
}

uint64_t PositionalData.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PositionalData.init()();
  return v0;
}

uint64_t Published.init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __n128 v5 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  Published.init(initialValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t AutoScrollingList.init(rows:spacing:topInset:positionalData:content:headerView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  type metadata accessor for Binding();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v23 + 32))(a9, a1);
  uint64_t v24 = (int *)type metadata accessor for AutoScrollingList();
  *(double *)(a9 + v24[23]) = a10;
  *(double *)(a9 + v24[24]) = a11;
  *(void *)(a9 + v24[25]) = a2;
  id v25 = (void *)(a9 + v24[26]);
  *id v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(a9 + v24[27]);
  void *v26 = a5;
  v26[1] = a6;
  uint64_t v27 = a9 + v24[28];
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = a7;
  void v28[3] = a8;
  v28[4] = a12;
  v28[5] = a13;
  v28[6] = a14;
  v28[7] = a15;
  v28[8] = a16;
  v28[9] = a17;
  v28[10] = a18;
  uint64_t result = property wrapper backing initializer of AutoScrollingList.autoScrollViewModel();
  *(void *)uint64_t v27 = result;
  *(void *)(v27 + 8) = v30;
  *(unsigned char *)(v27 + 16) = v31 & 1;
  return result;
}

void *AutoScrollKey.defaultValue.unsafeMutableAddressor()
{
  return &static AutoScrollKey.defaultValue;
}

{
  return &static AutoScrollKey.defaultValue;
}

char *specialized static AutoScrollKey.reduce(value:nextValue:)(char *result, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v2 = result;
  if (*result)
  {
    char v3 = 1;
  }
  else
  {
    uint64_t result = (char *)a2(&v4);
    char v3 = v4;
  }
  *uint64_t v2 = v3;
  return result;
}

unsigned char *protocol witness for static PreferenceKey.defaultValue.getter in conformance AutoScrollKey@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AutoScrollKey.defaultValue.unsafeMutableAddressor();
  *a1 = *result;
  return result;
}

{
  unsigned char *result;

  uint64_t result = AutoScrollKey.defaultValue.unsafeMutableAddressor();
  *a1 = *result;
  return result;
}

void *HighestBoundsKey.defaultValue.unsafeMutableAddressor()
{
  return &static HighestBoundsKey.defaultValue;
}

void *specialized static HighestBoundsKey.reduce(value:nextValue:)(uint64_t a1, void *(*a2)(double *__return_ptr))
{
  uint64_t result = a2(&v14);
  uint64_t v4 = v18;
  if (v18)
  {
    double v5 = v14;
    double v6 = v15;
    double v7 = v16;
    double v8 = v17;
    CGFloat v9 = v14;
    CGFloat v10 = v15;
    CGFloat v11 = v16;
    CGFloat v12 = v17;
    if (*(void *)(a1 + 32)) {
      double MinY = CGRectGetMinY(*(CGRect *)a1);
    }
    else {
      double MinY = 1.79769313e308;
    }
    v20.origin.CGFloat x = v9;
    v20.origin.CGFloat y = v10;
    v20.size.CGFloat width = v11;
    v20.size.CGFloat height = v12;
    if (CGRectGetMinY(v20) >= MinY)
    {
      return (void *)swift_release();
    }
    else
    {
      uint64_t result = (void *)swift_release();
      *(double *)a1 = v5;
      *(double *)(a1 + 8) = v6;
      *(double *)(a1 + 16) = v7;
      *(double *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = v4;
    }
  }
  return result;
}

double ListAnchor.minY.getter()
{
  return CGRectGetMinY(*v0);
}

uint64_t protocol witness for static PreferenceKey.defaultValue.getter in conformance HighestBoundsKey@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = HighestBoundsKey.defaultValue.unsafeMutableAddressor();
  uint64_t v3 = v2[4];
  long long v4 = *((_OWORD *)v2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v3;
  return swift_retain();
}

double ListAnchor.bounds.getter()
{
  return *(double *)v0;
}

void ListAnchor.bounds.setter(double a1, double a2, double a3, double a4)
{
  *long long v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*ListAnchor.bounds.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ListAnchor.anchor.getter()
{
  return swift_retain();
}

uint64_t ListAnchor.anchor.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ListAnchor.anchor.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static ListAnchor.== infix(_:_:)(CGRect *a1, CGRect *a2)
{
  uint64_t result = CGRectEqualToRect(*a1, *a2);
  if (result)
  {
    type metadata accessor for CGRect(0);
    lazy protocol witness table accessor for type CGRect and conformance CGRect();
    OUTLINED_FUNCTION_26_34();
    return static Anchor<A>.== infix(_:_:)();
  }
  return result;
}

uint64_t ListAnchor.init(bounds:anchor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(void *)(a2 + 32) = result;
  return result;
}

uint64_t PositionalData.description.getter()
{
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(73);
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  v0._countAndFlagsBits = 0xD000000000000022;
  v0._object = (void *)0x80000001C37ADFA0;
  String.append(_:)(v0);
  OUTLINED_FUNCTION_13_30();
  OUTLINED_FUNCTION_41_19();
  v1();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v25, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CGRect?);
  v2._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x756F427473696C0ALL;
  v3._object = (void *)0xED0000203A73646ELL;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_13_30();
  OUTLINED_FUNCTION_42_19();
  v4();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v26, (uint64_t)&v20, &demangling cache variable for type metadata for ListAnchor?);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v26, (uint64_t)v27, &demangling cache variable for type metadata for ListAnchor?);
  uint64_t v5 = v28;
  if (v28)
  {
    long long v18 = v21;
    long long v19 = v20;
    swift_release();
    long long v7 = v18;
    long long v6 = v19;
  }
  else
  {
    long long v6 = 0uLL;
    long long v7 = 0uLL;
  }
  long long v20 = v6;
  long long v21 = v7;
  LOBYTE(v22) = v5 == 0;
  v8._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001C37ADFD0;
  v9._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v9);
  OUTLINED_FUNCTION_13_30();
  char v11 = (*(uint64_t (**)(void))(v10 + 224))();
  BOOL v12 = (v11 & 1) == 0;
  if (v11) {
    uint64_t v13 = 1702195828;
  }
  else {
    uint64_t v13 = 0x65736C6166;
  }
  if (v12) {
    unint64_t v14 = 0xE500000000000000;
  }
  else {
    unint64_t v14 = 0xE400000000000000;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 10506;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  return v23;
}

uint64_t static PositionalData.== infix(_:_:)()
{
  OUTLINED_FUNCTION_41_19();
  v0();
  OUTLINED_FUNCTION_13_30();
  OUTLINED_FUNCTION_41_19();
  v1();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v6, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  if (v16[32])
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v7, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v7, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
    if ((v15 & 1) != 0 || !OUTLINED_FUNCTION_13_62()) {
      goto LABEL_13;
    }
  }
  OUTLINED_FUNCTION_42_19();
  v2();
  OUTLINED_FUNCTION_13_30();
  OUTLINED_FUNCTION_42_19();
  v3();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v8, (uint64_t)v12, &demangling cache variable for type metadata for ListAnchor?);
  if (!v13)
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v9, (uint64_t)v10, &demangling cache variable for type metadata for ListAnchor?);
    if (!v11)
    {
      char v4 = 1;
      return v4 & 1;
    }
    goto LABEL_11;
  }
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v9, (uint64_t)v10, &demangling cache variable for type metadata for ListAnchor?);
  if (!v11)
  {
LABEL_11:
    swift_release();
    swift_release();
LABEL_13:
    char v4 = 0;
    return v4 & 1;
  }
  swift_retain();
  if (!OUTLINED_FUNCTION_13_62())
  {
    outlined release of ListAnchor?((uint64_t)&v9);
    outlined release of ListAnchor?((uint64_t)&v8);
    outlined release of ListAnchor?((uint64_t)&v8);
    goto LABEL_13;
  }
  type metadata accessor for CGRect(0);
  lazy protocol witness table accessor for type CGRect and conformance CGRect();
  char v4 = static Anchor<A>.== infix(_:_:)();
  outlined release of ListAnchor?((uint64_t)&v9);
  outlined release of ListAnchor?((uint64_t)&v8);
  outlined release of ListAnchor?((uint64_t)&v8);
  return v4 & 1;
}

uint64_t key path getter for PositionalData.scrollViewBounds : PositionalData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 128))(v4);
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v4, a2, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
}

uint64_t key path setter for PositionalData.scrollViewBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 136))(v4);
}

__n128 PositionalData.scrollViewBounds.getter@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_23_39();
  swift_release();
  swift_release();
  __n128 result = v3;
  *(__n128 *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t PositionalData.scrollViewBounds.setter(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  swift_retain();
  OUTLINED_FUNCTION_38_18();
  return PositionalData.updateBottomVisibility()();
}

void (*PositionalData.scrollViewBounds.modify())(void **a1, char a2)
{
  Swift::String v2 = malloc(0xA8uLL);
  OUTLINED_FUNCTION_22_38((uint64_t)v2);
  PositionalData.scrollViewBounds.getter(v3);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v0, v1, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  return PositionalData.scrollViewBounds.modify;
}

void PositionalData.scrollViewBounds.modify(void **a1, char a2)
{
  Swift::String v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 40;
  uint64_t v4 = (uint64_t)*a1 + 120;
  if (a2) {
    uint64_t v5 = (uint64_t)v2;
  }
  else {
    uint64_t v5 = v3;
  }
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v4, v5, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  PositionalData.scrollViewBounds.setter(v5);
  free(v2);
}

uint64_t key path setter for PositionalData.$scrollViewBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 160))(v7);
}

uint64_t PositionalData.$scrollViewBounds.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__scrollViewBounds, &demangling cache variable for type metadata for Published<CGRect?>);
}

uint64_t PositionalData.$scrollViewBounds.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>.Publisher);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v0);
  Swift::String v2 = OUTLINED_FUNCTION_18_7(v1, v7);
  v3(v2);
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  Published.projectedValue.setter();
  swift_endAccess();
  uint64_t v4 = OUTLINED_FUNCTION_14_58();
  return v5(v4);
}

void (*PositionalData.$scrollViewBounds.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>.Publisher);
  v3[4] = v4;
  OUTLINED_FUNCTION_1(v4);
  v3[5] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[6] = v7;
  v3[7] = malloc(v7);
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return PositionalData.$scrollViewBounds.modify;
}

void PositionalData.$scrollViewBounds.modify(uint64_t a1, char a2)
{
  Swift::String v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    MEMORY[0x1F4188790](a1);
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_2_1();
    v4();
    PositionalData.$scrollViewBounds.setter();
    uint64_t v5 = OUTLINED_FUNCTION_24_2();
    v6(v5);
  }
  else
  {
    PositionalData.$scrollViewBounds.setter();
  }
  free(v3);
  free(v2);
}

uint64_t key path getter for PositionalData.listBounds : PositionalData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 176))(v4);
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v4, a2, &demangling cache variable for type metadata for ListAnchor?);
}

uint64_t key path setter for PositionalData.listBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v5, &demangling cache variable for type metadata for ListAnchor?);
  uint64_t v3 = *(uint64_t (**)(unsigned char *))(**(void **)a2 + 184);
  outlined retain of ListAnchor?((uint64_t)v5);
  return v3(v5);
}

__n128 PositionalData.listBounds.getter@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_23_39();
  swift_release();
  swift_release();
  __n128 result = v3;
  *(__n128 *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t PositionalData.listBounds.setter(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v3, &demangling cache variable for type metadata for ListAnchor?);
  swift_retain();
  outlined retain of ListAnchor?(a1);
  OUTLINED_FUNCTION_38_18();
  PositionalData.updateBottomVisibility()();
  return outlined release of ListAnchor?(a1);
}

void (*PositionalData.listBounds.modify())(void **a1, char a2)
{
  Swift::String v2 = malloc(0xA8uLL);
  OUTLINED_FUNCTION_22_38((uint64_t)v2);
  PositionalData.listBounds.getter(v3);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v0, v1, &demangling cache variable for type metadata for ListAnchor?);
  return PositionalData.listBounds.modify;
}

void PositionalData.listBounds.modify(void **a1, char a2)
{
  Swift::String v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 120;
  if (a2)
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v3, (uint64_t)v2, &demangling cache variable for type metadata for ListAnchor?);
    outlined retain of ListAnchor?((uint64_t)v2);
    PositionalData.listBounds.setter((uint64_t)v2);
    swift_release();
  }
  else
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v3, (uint64_t)v2 + 40, &demangling cache variable for type metadata for ListAnchor?);
    PositionalData.listBounds.setter((uint64_t)v2 + 40);
  }
  free(v2);
}

uint64_t key path setter for PositionalData.$listBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 208))(v7);
}

uint64_t PositionalData.$listBounds.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__listBounds, &demangling cache variable for type metadata for Published<ListAnchor?>);
}

uint64_t PositionalData.$listBounds.setter(uint64_t a1)
{
  return PositionalData.$listBounds.setter(a1, &demangling cache variable for type metadata for Published<ListAnchor?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__listBounds, &demangling cache variable for type metadata for Published<ListAnchor?>);
}

void (*PositionalData.$listBounds.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>.Publisher);
  v3[4] = v4;
  OUTLINED_FUNCTION_1(v4);
  v3[5] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[6] = malloc(v7);
  v3[7] = malloc(v7);
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return PositionalData.$listBounds.modify;
}

void PositionalData.$listBounds.modify(uint64_t a1, char a2)
{
  Swift::String v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v5 = v2[4];
    uint64_t v6 = v2[5];
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_2_1();
    v7();
    PositionalData.$listBounds.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PositionalData.$listBounds.setter(*(void *)(*(void *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t key path getter for PositionalData.isBottomVisible : PositionalData@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for PositionalData.isBottomVisible : PositionalData()
{
  return PositionalData.isBottomVisible.setter();
}

uint64_t PositionalData.isBottomVisible.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t PositionalData.isBottomVisible.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t PositionalData.$isBottomVisible.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isBottomVisible, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t PositionalData.$isBottomVisible.setter(uint64_t a1)
{
  return PositionalData.$listBounds.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isBottomVisible, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t key path getter for PositionalData.isWithinAutoScrollTolerance : PositionalData@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 272))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for PositionalData.isWithinAutoScrollTolerance : PositionalData()
{
  return PositionalData.isWithinAutoScrollTolerance.setter();
}

uint64_t PositionalData.isWithinAutoScrollTolerance.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t PositionalData.isWithinAutoScrollTolerance.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t key path setter for PositionalData.$isBottomVisible : PositionalData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_5_3();
  __n128 v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 16))(v10, a1, v8);
  return a5(v10);
}

uint64_t PositionalData.$isWithinAutoScrollTolerance.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t PositionalData.$isWithinAutoScrollTolerance.setter(uint64_t a1)
{
  return PositionalData.$listBounds.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t PositionalData.$listBounds.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_2_1();
  v10();
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
}

double PositionalData.autoScrollTolerance.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData_autoScrollTolerance;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t PositionalData.autoScrollTolerance.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit14PositionalData_autoScrollTolerance);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return PositionalData.updateBottomVisibility()();
}

uint64_t (*PositionalData.autoScrollTolerance.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_6_1();
  return PositionalData.autoScrollTolerance.modify;
}

uint64_t PositionalData.autoScrollTolerance.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return PositionalData.updateBottomVisibility()();
  }
  return result;
}

uint64_t PositionalData.updateBottomVisibility()()
{
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_41_19();
  v0();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)&v4, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  if (v8[32]) {
    return PositionalData.isBottomVisible.setter();
  }
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_42_19();
  v1();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v5, (uint64_t)v6, &demangling cache variable for type metadata for ListAnchor?);
  if (!v7) {
    return PositionalData.isBottomVisible.setter();
  }
  PositionalData.isBottomVisible.setter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v2 + 320))();
  PositionalData.isWithinAutoScrollTolerance.setter();
  return outlined release of ListAnchor?((uint64_t)v5);
}

uint64_t PositionalData.deinit()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v2();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = *(void (**)(uint64_t))(v4 + 8);
  uint64_t v6 = OUTLINED_FUNCTION_14_58();
  v5(v6);
  ((void (*)(uint64_t, uint64_t))v5)(v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance, v3);
  return v0;
}

uint64_t PositionalData.__deallocating_deinit()
{
  PositionalData.deinit();
  OUTLINED_FUNCTION_3_2();
  return swift_deallocClassInstance();
}

uint64_t PositionalData.init()()
{
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_63();
  uint64_t v12 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__scrollViewBounds;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  OUTLINED_FUNCTION_5_3();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_21();
  uint64_t v19 = v18 - v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CGRect?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v19, v13);
  uint64_t v20 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__listBounds;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListAnchor?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v20, v1, v8);
  uint64_t v21 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__isBottomVisible;
  Published.init(initialValue:)();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v22(v21, v7, v25);
  uint64_t v23 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance;
  Published.init(initialValue:)();
  v22(v23, v7, v25);
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData_autoScrollTolerance) = 0;
  return v0;
}

uint64_t type metadata accessor for AutoScrollingList()
{
  return swift_getGenericMetadata();
}

uint64_t property wrapper backing initializer of AutoScrollViewModel.stickyRowIDs(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = type metadata accessor for Set();
  return Published.init(wrappedValue:)((uint64_t)&v3, v1);
}

uint64_t AutoScrollViewModel.stickyRowIDs.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AutoScrollViewModel.stickyRowIDs.setter()
{
  return static Published.subscript.setter();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance PositionalData@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PositionalData();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PositionalData()
{
  return static PositionalData.== infix(_:_:)() & 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PositionalData()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t property wrapper backing initializer of AutoScrollViewModel.shouldAutoScroll()
{
  return Published.init(initialValue:)();
}

uint64_t AutoScrollViewModel.shouldAutoScroll.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AutoScrollViewModel.shouldAutoScroll.setter()
{
  return static Published.subscript.setter();
}

uint64_t AutoScrollViewModel.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  type metadata accessor for Set();
  uint64_t v2 = type metadata accessor for Published();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t AutoScrollViewModel.__deallocating_deinit()
{
  AutoScrollViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t *AutoScrollViewModel.__allocating_init()()
{
  return AutoScrollViewModel.init()();
}

uint64_t *AutoScrollViewModel.init()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  type metadata accessor for Set();
  uint64_t v8 = type metadata accessor for Published();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = static Array._allocateUninitialized(_:)();
  if (MEMORY[0x1C87734D0](v12, v6))
  {
    uint64_t v13 = Set.init(_nonEmptyArrayLiteral:)(v12, v6, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC870];
  }
  uint64_t v14 = (uint64_t)v0 + *(void *)(*v0 + 96);
  property wrapper backing initializer of AutoScrollViewModel.stickyRowIDs(v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  uint64_t v15 = (uint64_t)v0 + *(void *)(*v0 + 104);
  property wrapper backing initializer of AutoScrollViewModel.shouldAutoScroll();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v5, v2);
  return v0;
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance AutoScrollViewModel<A>@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t AutoScrollingList.rows.getter(uint64_t a1)
{
  return AutoScrollingList.rows.getter(a1, MEMORY[0x1E4F3EE08]);
}

uint64_t key path getter for AutoScrollingList.rows : <A, B, C, D>AutoScrollingList<A, B, C, D>()
{
  uint64_t v0 = type metadata accessor for AutoScrollingList();
  return AutoScrollingList.rows.getter(v0);
}

uint64_t key path setter for AutoScrollingList.rows : <A, B, C, D>AutoScrollingList<A, B, C, D>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 72);
  long long v15 = *(_OWORD *)(a4 + a3 - 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v8 = *(void (**)(char *))(v7 + 16);
  long long v10 = *(_OWORD *)(v9 - 48);
  long long v13 = *(_OWORD *)(v9 - 32);
  long long v14 = v10;
  long long v12 = *(_OWORD *)(v9 - 16);
  v8(v6);
  uint64_t v16 = v4;
  long long v17 = v15;
  long long v18 = v14;
  long long v19 = v13;
  long long v20 = v12;
  type metadata accessor for AutoScrollingList();
  return AutoScrollingList.rows.setter();
}

uint64_t AutoScrollingList.rows.setter()
{
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_7(v1, v7);
  v3(v2);
  type metadata accessor for Binding();
  Binding.wrappedValue.setter();
  uint64_t v4 = OUTLINED_FUNCTION_14_58();
  return v5(v4);
}

void (*AutoScrollingList.rows.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v4 = malloc(0x38uLL);
  *a1 = v4;
  *uint64_t v4 = *(void *)(a2 + 24);
  OUTLINED_FUNCTION_5_3();
  *(void *)(v5 + 8) = v6;
  size_t v8 = *(void *)(v7 + 64);
  v4[2] = malloc(v8);
  v4[3] = malloc(v8);
  uint64_t v9 = type metadata accessor for Binding();
  v4[4] = v9;
  OUTLINED_FUNCTION_5_3();
  uint64_t v11 = v10;
  void v4[5] = v10;
  v4[6] = malloc(*(void *)(v12 + 64));
  (*(void (**)(void))(v11 + 16))();
  MEMORY[0x1C87728E0](v9);
  return AutoScrollingList.rows.modify;
}

void AutoScrollingList.rows.modify(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[6];
  uint64_t v4 = (void *)(*a1)[3];
  uint64_t v5 = (void *)(*a1)[2];
  if (a2)
  {
    uint64_t v6 = *v2;
    uint64_t v7 = v2[1];
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_2_1();
    v8();
    Binding.wrappedValue.setter();
    uint64_t v9 = OUTLINED_FUNCTION_43_16();
    v10(v9);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    Binding.wrappedValue.setter();
    uint64_t v11 = OUTLINED_FUNCTION_43_16();
    v12(v11);
  }
  free(v3);
  free(v4);
  free(v5);
  free(v2);
}

uint64_t AutoScrollingList.$rows.getter(uint64_t a1)
{
  return AutoScrollingList.rows.getter(a1, MEMORY[0x1E4F3EE10]);
}

uint64_t AutoScrollingList.rows.getter(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = type metadata accessor for Binding();
  return a2(v2);
}

double AutoScrollingList.spacing.getter(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 92));
}

double AutoScrollingList.topInset.getter(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 96));
}

uint64_t AutoScrollingList.positionalData.getter()
{
  return swift_retain();
}

uint64_t AutoScrollingList.content.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 104));
  swift_retain();
  return v2;
}

uint64_t AutoScrollingList.content.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 104));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*AutoScrollingList.content.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for AutoScrollingList.headerView : <A, B, C, D>AutoScrollingList<A, B, C, D>@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for AutoScrollingList() + 108));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_retain();
}

uint64_t key path setter for AutoScrollingList.headerView : <A, B, C, D>AutoScrollingList<A, B, C, D>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for AutoScrollingList() + 108));
  swift_retain();
  uint64_t result = swift_release();
  *uint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t AutoScrollingList.headerView.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 108));
  swift_retain();
  return v2;
}

uint64_t AutoScrollingList.headerView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 108));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*AutoScrollingList.headerView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t property wrapper backing initializer of AutoScrollingList.autoScrollViewModel()
{
  return StateObject.init(wrappedValue:)();
}

uint64_t *implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel()
{
  return AutoScrollViewModel.__allocating_init()();
}

uint64_t sub_1C343A220()
{
  return swift_deallocObject();
}

uint64_t *partial apply for implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel()
{
  return implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel();
}

unint64_t lazy protocol witness table accessor for type CGRect and conformance CGRect()
{
  unint64_t result = lazy protocol witness table cache variable for type CGRect and conformance CGRect;
  if (!lazy protocol witness table cache variable for type CGRect and conformance CGRect)
  {
    type metadata accessor for CGRect(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CGRect and conformance CGRect);
  }
  return result;
}

uint64_t AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_1();
  v8();
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v36 = *(void *)(a1 + 24);
  uint64_t v11 = v36;
  *(void *)(v10 + 16) = v12;
  *(void *)(v10 + 24) = v11;
  *(void *)(v10 + 32) = *(void *)(a1 + 32);
  long long v35 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v10 + 40) = v35;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v38 = *(void *)(a1 + 56);
  *(void *)(v10 + 56) = v38;
  *(void *)(v10 + 64) = v13;
  uint64_t v14 = *(void *)(a1 + 80);
  *(void *)(v10 + 72) = *(void *)(a1 + 72);
  *(void *)(v10 + 80) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  OUTLINED_FUNCTION_36_20();
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v17 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v56 = v14;
  uint64_t v57 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v51 = v16;
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v53 = WitnessTable;
  uint64_t v54 = AssociatedConformanceWitness;
  uint64_t v20 = type metadata accessor for IDView();
  uint64_t v21 = v36;
  uint64_t v51 = v36;
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v53 = v20;
  uint64_t v54 = v13;
  uint64_t v55 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = MEMORY[0x1E4F3C7E0];
  swift_getWitnessTable();
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  OUTLINED_FUNCTION_35_16();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  OUTLINED_FUNCTION_35_16();
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = MEMORY[0x1E4F3CE38];
  OUTLINED_FUNCTION_24_2();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_28_31();
  type metadata accessor for ScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  OUTLINED_FUNCTION_35_16();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, &demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  swift_getWitnessTable();
  OUTLINED_FUNCTION_36_20();
  uint64_t v24 = type metadata accessor for GeometryReader();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v51 = v24;
  uint64_t v52 = v21;
  uint64_t v26 = v38;
  uint64_t v53 = v25;
  uint64_t v54 = v38;
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  uint64_t v51 = v24;
  uint64_t v52 = v21;
  uint64_t v53 = v25;
  uint64_t v54 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = MEMORY[0x1E4F3DCD8];
  swift_getWitnessTable();
  uint64_t v40 = ScrollViewReader.init(content:)();
  uint64_t v41 = v27;
  type metadata accessor for ScrollViewReader();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_26_34();
  static ViewBuilder.buildExpression<A>(_:)(v28, v29, v30);
  swift_release();
  uint64_t v40 = v51;
  uint64_t v41 = v52;
  OUTLINED_FUNCTION_26_34();
  static ViewBuilder.buildExpression<A>(_:)(v31, v32, v33);
  return swift_release();
}

uint64_t closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v119 = a8;
  uint64_t v124 = a7;
  uint64_t v114 = a4;
  uint64_t v125 = a2;
  uint64_t v130 = a1;
  uint64_t v112 = a9;
  uint64_t v110 = type metadata accessor for ScrollViewProxy();
  v136 = *(void **)(v110 - 8);
  uint64_t v129 = v136[8];
  MEMORY[0x1F4188790](v110);
  v126 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v19);
  v127 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = a3;
  uint64_t v149 = a4;
  uint64_t v122 = a3;
  uint64_t v150 = a5;
  uint64_t v151 = a6;
  uint64_t v120 = a6;
  uint64_t v152 = a7;
  uint64_t v153 = a8;
  uint64_t v154 = a10;
  uint64_t v155 = a11;
  uint64_t v156 = a12;
  uint64_t v132 = a12;
  uint64_t v123 = type metadata accessor for AutoScrollingList();
  uint64_t v135 = *(void *)(v123 - 8);
  uint64_t v128 = *(void *)(v135 + 64);
  MEMORY[0x1F4188790](v123);
  v121 = (char *)&v94 - v21;
  v118 = (char *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t v134 = a11;
  uint64_t v133 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v23 = type metadata accessor for ModifiedContent();
  uint64_t v24 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v146 = a12;
  uint64_t v147 = v24;
  uint64_t v25 = MEMORY[0x1E4F3CC28];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v148 = v23;
  uint64_t v149 = AssociatedTypeWitness;
  uint64_t v150 = WitnessTable;
  uint64_t v151 = AssociatedConformanceWitness;
  uint64_t v28 = type metadata accessor for IDView();
  uint64_t v29 = v114;
  uint64_t v148 = v114;
  uint64_t v149 = AssociatedTypeWitness;
  uint64_t v150 = v28;
  uint64_t v151 = a10;
  uint64_t v131 = a10;
  uint64_t v152 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v144 = MEMORY[0x1E4F3C7E0];
  swift_getWitnessTable();
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  type metadata accessor for ModifiedContent();
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v142 = MEMORY[0x1E4F3CE38];
  uint64_t v109 = v25;
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  uint64_t v30 = type metadata accessor for ModifiedContent();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, &demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  uint64_t v139 = v31;
  uint64_t v140 = v32;
  v98 = (void *)v30;
  v99 = (void (*)(char *, uint64_t, uint64_t))swift_getWitnessTable();
  uint64_t v33 = type metadata accessor for GeometryReader();
  uint64_t v101 = v33;
  uint64_t v117 = swift_getWitnessTable();
  uint64_t v148 = v33;
  uint64_t v149 = v29;
  uint64_t v34 = v29;
  uint64_t v35 = v119;
  uint64_t v150 = v117;
  uint64_t v151 = v119;
  uint64_t v105 = MEMORY[0x1E4F3EA40];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v103 = OpaqueTypeMetadata2;
  uint64_t v107 = type metadata accessor for ModifiedContent();
  uint64_t v108 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  v106 = (char *)&v94 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  v102 = (char *)&v94 - v39;
  uint64_t v104 = *(void *)(OpaqueTypeMetadata2 - 8);
  __n128 v41 = MEMORY[0x1F4188790](v40);
  v118 = (char *)&v94 - v42;
  uint64_t v43 = v135;
  v113 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v135 + 16);
  uint64_t v115 = v135 + 16;
  uint64_t v44 = v121;
  uint64_t v45 = v125;
  uint64_t v46 = v123;
  v113(v121, v125, v123, v41);
  uint64_t v100 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v47 = (v100 + 88) & ~v100;
  uint64_t v95 = v47 + v128;
  v97 = (void (*)(char *, char *, uint64_t))v47;
  uint64_t v96 = v100 | 7;
  uint64_t v48 = (char *)swift_allocObject();
  uint64_t v49 = v122;
  *((void *)v48 + 2) = v122;
  *((void *)v48 + 3) = v34;
  uint64_t v50 = v120;
  *((void *)v48 + 4) = v133;
  *((void *)v48 + 5) = v50;
  uint64_t v51 = v124;
  *((void *)v48 + 6) = v124;
  *((void *)v48 + 7) = v35;
  uint64_t v52 = v134;
  *((void *)v48 + 8) = v131;
  *((void *)v48 + 9) = v52;
  *((void *)v48 + 10) = v132;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v135 = v43 + 32;
  v116 = v53;
  uint64_t v54 = v44;
  v53(&v48[v47], v44, v46);
  swift_checkMetadataState();
  uint64_t v148 = GeometryReader.init(content:)();
  uint64_t v149 = v55;
  AutoScrollingList.rows.getter(v46);
  ((void (*)(char *, uint64_t, uint64_t))v113)(v44, v45, v46);
  uint64_t v56 = v136;
  uint64_t v57 = (void (*)(char *, uint64_t, uint64_t))v136[2];
  v98 = v136 + 2;
  v99 = v57;
  id v58 = v126;
  uint64_t v59 = v110;
  v57(v126, v130, v110);
  uint64_t v60 = *((unsigned __int8 *)v56 + 80);
  uint64_t v61 = (v95 + v60) & ~v60;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v49;
  uint64_t v63 = v114;
  uint64_t v64 = v133;
  *(void *)(v62 + 24) = v114;
  *(void *)(v62 + 32) = v64;
  *(void *)(v62 + 40) = v50;
  *(void *)(v62 + 48) = v51;
  uint64_t v65 = v119;
  uint64_t v66 = v131;
  *(void *)(v62 + 56) = v119;
  *(void *)(v62 + 64) = v66;
  *(void *)(v62 + 72) = v134;
  uint64_t v67 = (char *)v97 + v62;
  *(void *)(v62 + 80) = v132;
  v116(v67, v54, v46);
  uint64_t v68 = (char *)v136[4];
  v136 += 4;
  v97 = (void (*)(char *, char *, uint64_t))v68;
  uint64_t v69 = v58;
  ((void (*)(uint64_t, char *, uint64_t))v68)(v62 + v61, v58, v59);
  uint64_t v70 = swift_checkMetadataState();
  uint64_t v71 = v63;
  uint64_t v72 = v65;
  OUTLINED_FUNCTION_1_3();
  CGRect v73 = v127;
  uint64_t v74 = v72;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  CGRect v75 = v73;
  uint64_t v76 = v71;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v75, v71);
  swift_release();
  uint64_t v77 = v59;
  v99(v69, v130, v59);
  v78 = v121;
  uint64_t v79 = v123;
  ((void (*)(char *, uint64_t, uint64_t))v113)(v121, v125, v123);
  uint64_t v80 = (v60 + 88) & ~v60;
  uint64_t v81 = (v129 + v100 + v80) & ~v100;
  v82 = (char *)swift_allocObject();
  *((void *)v82 + 2) = v122;
  *((void *)v82 + 3) = v76;
  uint64_t v83 = v120;
  *((void *)v82 + 4) = v133;
  *((void *)v82 + 5) = v83;
  *((void *)v82 + 6) = v124;
  *((void *)v82 + 7) = v74;
  uint64_t v84 = v134;
  *((void *)v82 + 8) = v131;
  *((void *)v82 + 9) = v84;
  *((void *)v82 + 10) = v132;
  v97(&v82[v80], v126, v77);
  v116(&v82[v81], v78, v79);
  uint64_t v148 = v70;
  uint64_t v149 = v76;
  uint64_t v150 = v117;
  uint64_t v151 = v74;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v86 = v102;
  uint64_t v87 = v103;
  v88 = v118;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v88, v87);
  uint64_t v137 = OpaqueTypeConformance2;
  uint64_t v138 = MEMORY[0x1E4F3DCD8];
  uint64_t v89 = v107;
  uint64_t v90 = swift_getWitnessTable();
  v91 = v106;
  static ViewBuilder.buildExpression<A>(_:)(v86, v89, v90);
  v92 = *(void (**)(char *, uint64_t))(v108 + 8);
  v92(v86, v89);
  static ViewBuilder.buildExpression<A>(_:)(v91, v89, v90);
  return ((uint64_t (*)(char *, uint64_t))v92)(v91, v89);
}

uint64_t closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v96 = a7;
  uint64_t v97 = a8;
  uint64_t v90 = a4;
  uint64_t v83 = a2;
  uint64_t v95 = a1;
  uint64_t v88 = a9;
  uint64_t v89 = a10;
  uint64_t v18 = type metadata accessor for GeometryProxy();
  uint64_t v85 = *(void *)(v18 - 8);
  uint64_t v86 = v18;
  uint64_t v87 = *(void *)(v85 + 64);
  MEMORY[0x1F4188790](v18);
  uint64_t v84 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = a3;
  uint64_t v123 = a4;
  uint64_t v93 = a6;
  uint64_t v94 = a3;
  uint64_t v124 = a5;
  uint64_t v125 = a6;
  uint64_t v126 = a7;
  uint64_t v127 = a8;
  uint64_t v128 = a10;
  uint64_t v129 = a11;
  uint64_t v130 = a12;
  uint64_t v92 = a12;
  uint64_t v20 = type metadata accessor for AutoScrollingList();
  uint64_t v80 = *(void *)(v20 - 8);
  uint64_t v81 = v20;
  uint64_t v82 = *(void *)(v80 + 64);
  MEMORY[0x1F4188790](v20);
  uint64_t v79 = (char *)&v70 - v21;
  GeometryProxy.size.getter();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t v91 = a11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v27 = type metadata accessor for ModifiedContent();
  uint64_t v28 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v120 = a12;
  uint64_t v121 = v28;
  uint64_t v29 = MEMORY[0x1E4F3CC28];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v70 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v122 = v27;
  uint64_t v123 = AssociatedTypeWitness;
  uint64_t v124 = WitnessTable;
  uint64_t v125 = AssociatedConformanceWitness;
  uint64_t v32 = type metadata accessor for IDView();
  uint64_t v34 = v89;
  uint64_t v33 = v90;
  uint64_t v122 = v90;
  uint64_t v123 = AssociatedTypeWitness;
  uint64_t v124 = v32;
  uint64_t v125 = v89;
  uint64_t v126 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  uint64_t v119 = swift_getWitnessTable();
  uint64_t v117 = swift_getWitnessTable();
  uint64_t v118 = MEMORY[0x1E4F3C7E0];
  uint64_t v78 = v29;
  swift_getWitnessTable();
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  type metadata accessor for ModifiedContent();
  uint64_t v115 = swift_getWitnessTable();
  uint64_t v116 = MEMORY[0x1E4F3CE38];
  swift_getWitnessTable();
  uint64_t v35 = type metadata accessor for ScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  uint64_t v72 = v35;
  uint64_t v36 = type metadata accessor for ModifiedContent();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v76 = v36;
  uint64_t v77 = v37;
  MEMORY[0x1F4188790](v36);
  CGRect v75 = (char *)&v70 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  CGRect v73 = (char *)&v70 - v40;
  uint64_t v74 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v71 = (char *)&v70 - v42;
  static Axis.Set.vertical.getter();
  uint64_t v43 = v95;
  uint64_t v98 = v94;
  uint64_t v99 = v33;
  uint64_t v100 = a5;
  uint64_t v101 = v93;
  uint64_t v102 = v96;
  uint64_t v103 = v97;
  uint64_t v104 = v34;
  uint64_t v105 = v91;
  uint64_t v44 = v83;
  uint64_t v106 = v92;
  uint64_t v107 = v83;
  uint64_t v109 = 0;
  uint64_t v110 = 0;
  uint64_t v108 = v95;
  uint64_t v111 = v23;
  uint64_t v112 = v25;
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v46 = v79;
  uint64_t v45 = v80;
  uint64_t v47 = v44;
  uint64_t v48 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v47, v81);
  uint64_t v49 = v84;
  uint64_t v50 = v85;
  uint64_t v51 = v43;
  uint64_t v52 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v51, v86);
  unint64_t v53 = (*(unsigned __int8 *)(v45 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v54 = (v82 + *(unsigned __int8 *)(v50 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v55 = (char *)swift_allocObject();
  uint64_t v56 = v90;
  *((void *)v55 + 2) = v94;
  *((void *)v55 + 3) = v56;
  uint64_t v57 = v93;
  *((void *)v55 + 4) = v70;
  *((void *)v55 + 5) = v57;
  uint64_t v58 = v97;
  *((void *)v55 + 6) = v96;
  *((void *)v55 + 7) = v58;
  uint64_t v59 = v91;
  *((void *)v55 + 8) = v89;
  *((void *)v55 + 9) = v59;
  *((void *)v55 + 10) = v92;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v55[v53], v46, v48);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v55[v54], v49, v52);
  uint64_t v60 = v72;
  uint64_t v61 = swift_getWitnessTable();
  lazy protocol witness table accessor for type HighestBoundsKey and conformance HighestBoundsKey();
  lazy protocol witness table accessor for type ListAnchor? and conformance <A> A?();
  uint64_t v62 = v73;
  uint64_t v63 = v71;
  View.onPreferenceChange<A>(_:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v63, v60);
  uint64_t v64 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, &demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  uint64_t v113 = v61;
  uint64_t v114 = v64;
  uint64_t v65 = v76;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = v75;
  static ViewBuilder.buildExpression<A>(_:)(v62, v65, v66);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v77 + 8);
  v68(v62, v65);
  static ViewBuilder.buildExpression<A>(_:)(v67, v65, v66);
  return ((uint64_t (*)(char *, uint64_t))v68)(v67, v65);
}

uint64_t closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v54 = a8;
  uint64_t v52 = a7;
  uint64_t v49 = a6;
  uint64_t v43 = a4;
  uint64_t v50 = a3;
  uint64_t v53 = a2;
  uint64_t v51 = a1;
  uint64_t v55 = a9;
  uint64_t v47 = a16;
  uint64_t v44 = a14;
  v42[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  v42[1] = type metadata accessor for Optional();
  uint64_t v46 = a15;
  uint64_t v45 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  type metadata accessor for ModifiedContent();
  uint64_t v81 = a16;
  uint64_t v82 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v48 = MEMORY[0x1E4F3CC28];
  swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v76 = a4;
  uint64_t v77 = AssociatedTypeWitness;
  uint64_t v78 = type metadata accessor for IDView();
  uint64_t v79 = a14;
  uint64_t v80 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v74 = MEMORY[0x1E4F3C7E0];
  swift_getWitnessTable();
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  uint64_t v24 = type metadata accessor for ZStack();
  uint64_t v25 = type metadata accessor for ModifiedContent();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v42 - v30;
  uint64_t v32 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)v42 - v34;
  static Alignment.bottomLeading.getter();
  uint64_t v56 = v50;
  uint64_t v57 = v43;
  uint64_t v58 = v45;
  uint64_t v59 = v49;
  uint64_t v60 = v52;
  uint64_t v61 = v54;
  uint64_t v62 = v44;
  uint64_t v63 = v46;
  uint64_t v64 = v47;
  uint64_t v65 = v51;
  uint64_t v66 = v53;
  double v67 = a10;
  double v68 = a11;
  double v69 = a12;
  double v70 = a13;
  ZStack.init(alignment:content:)();
  GeometryProxy.size.getter();
  uint64_t v41 = swift_getWitnessTable();
  default argument 6 of View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v24, v41, v36, v37);
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v24);
  uint64_t v71 = v41;
  uint64_t v72 = MEMORY[0x1E4F3CE38];
  uint64_t v38 = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v31, v25, v38);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v26 + 8);
  v39(v31, v25);
  static ViewBuilder.buildExpression<A>(_:)(v28, v25, v38);
  return ((uint64_t (*)(char *, uint64_t))v39)(v28, v25);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v41 = a8;
  uint64_t v39 = a7;
  uint64_t v36 = a6;
  uint64_t v37 = a3;
  uint64_t v40 = a2;
  uint64_t v38 = a1;
  uint64_t v42 = a9;
  uint64_t v35 = a16;
  v34[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  type metadata accessor for ModifiedContent();
  uint64_t v66 = a16;
  uint64_t v67 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = a4;
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v63 = type metadata accessor for IDView();
  uint64_t v64 = a14;
  uint64_t v65 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = MEMORY[0x1E4F3C7E0];
  swift_getWitnessTable();
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v24 = type metadata accessor for VStack();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)v34 - v29;
  static HorizontalAlignment.leading.getter();
  uint64_t v43 = v37;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v46 = v36;
  uint64_t v47 = v39;
  uint64_t v48 = v41;
  uint64_t v49 = a14;
  uint64_t v50 = a15;
  uint64_t v51 = v35;
  uint64_t v52 = v38;
  uint64_t v53 = v40;
  double v54 = a10;
  double v55 = a11;
  double v56 = a12;
  double v57 = a13;
  VStack.init(alignment:spacing:content:)();
  uint64_t v31 = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v30, v24, v31);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v25 + 8);
  v32(v30, v24);
  static ViewBuilder.buildExpression<A>(_:)(v27, v24, v31);
  return ((uint64_t (*)(char *, uint64_t))v32)(v27, v24);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v133 = a5;
  uint64_t v134 = a8;
  uint64_t v146 = a7;
  uint64_t v143 = a4;
  uint64_t v144 = a6;
  uint64_t v130 = a9;
  unint64_t v131 = a2;
  uint64_t v135 = a1;
  uint64_t v142 = a16;
  uint64_t v141 = a15;
  uint64_t v140 = a14;
  uint64_t v21 = type metadata accessor for GeometryProxy();
  uint64_t v128 = *(void *)(v21 - 8);
  uint64_t v129 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v126 = v22;
  uint64_t v127 = (char *)v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for PinnedScrollableViews();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v118 = (char *)v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ModifiedContent();
  uint64_t v132 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)v102 - v29;
  uint64_t v31 = type metadata accessor for Optional();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)v102 - v33;
  uint64_t v35 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = v25;
  uint64_t v138 = type metadata accessor for Optional();
  uint64_t v136 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v137 = (uint64_t)v102 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v145 = (uint64_t)v102 - v41;
  unint64_t v100 = static Alignment.center.getter();
  uint64_t v101 = v42;
  LOBYTE(v99) = 1;
  double v98 = 0.0;
  LOBYTE(v97) = 1;
  double v96 = 0.0;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v117 = v190;
  uint64_t v119 = v192;
  uint64_t v120 = v194;
  uint64_t v121 = v196;
  uint64_t v122 = v198;
  uint64_t v123 = v200;
  uint64_t v124 = v203;
  uint64_t v125 = v202;
  char v189 = 1;
  char v187 = v191;
  char v185 = v193;
  char v183 = v195;
  char v181 = v197;
  char v179 = v199;
  char v177 = v201;
  uint64_t v156 = (void *)a3;
  v157 = v143;
  uint64_t v158 = v133;
  uint64_t v159 = v144;
  uint64_t v160 = v146;
  uint64_t v161 = v134;
  uint64_t v162 = v140;
  uint64_t v163 = v141;
  uint64_t v164 = v142;
  uint64_t v115 = type metadata accessor for AutoScrollingList();
  (*(void (**)(void))(v135 + *(int *)(v115 + 108)))();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, a3);
  uint64_t v109 = a3;
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    uint64_t v44 = v137;
    __swift_storeEnumTagSinglePayload(v137, 1, 1, v139);
    v175[10] = v146;
    v175[11] = MEMORY[0x1E4F3C7D0];
    swift_getWitnessTable();
    static ViewBuilder.buildIf<A>(_:)(v44, v145);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
    uint64_t v116 = (v136 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v45(v44, v138);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v38, v34, a3);
    uint64_t v46 = a3;
    GeometryProxy.size.getter();
    static Alignment.center.getter();
    uint64_t v47 = v146;
    View.frame(width:height:alignment:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v46);
    uint64_t v147 = v47;
    uint64_t v148 = MEMORY[0x1E4F3C7D0];
    uint64_t v48 = v139;
    uint64_t WitnessTable = swift_getWitnessTable();
    static ViewBuilder.buildExpression<A>(_:)(v27, v48, WitnessTable);
    uint64_t v50 = *(void (**)(char *, uint64_t))(v132 + 8);
    v50(v27, v48);
    uint64_t v51 = v137;
    static ViewBuilder.buildExpression<A>(_:)(v30, v48, WitnessTable);
    v50(v30, v48);
    __swift_storeEnumTagSinglePayload(v51, 0, 1, v48);
    static ViewBuilder.buildIf<A>(_:)(v51, v145);
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
    uint64_t v116 = (v136 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v52(v51, v138);
  }
  uint64_t v53 = v133;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v55 = type metadata accessor for ModifiedContent();
  uint64_t v113 = MEMORY[0x1E4F3DA78];
  uint64_t v56 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v175[8] = v142;
  v175[9] = v56;
  uint64_t v132 = MEMORY[0x1E4F3CC28];
  uint64_t v57 = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v156 = (void *)v55;
  v157 = (void *)AssociatedTypeWitness;
  uint64_t v158 = v57;
  uint64_t v159 = AssociatedConformanceWitness;
  uint64_t v59 = type metadata accessor for IDView();
  uint64_t v156 = v143;
  v157 = (void *)AssociatedTypeWitness;
  uint64_t v158 = v59;
  uint64_t v159 = v140;
  uint64_t v160 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  v175[7] = swift_getWitnessTable();
  v175[5] = swift_getWitnessTable();
  v175[6] = MEMORY[0x1E4F3C7E0];
  swift_getWitnessTable();
  uint64_t v60 = type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  uint64_t v107 = type metadata accessor for ModifiedContent();
  uint64_t v114 = v102;
  uint64_t v110 = *(void *)(v107 - 8);
  uint64_t v112 = *(void *)(v110 + 64);
  MEMORY[0x1F4188790](v107);
  unint64_t v111 = (v61 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v106 = (char *)v102 - v111;
  uint64_t v108 = v102;
  MEMORY[0x1F4188790](v62);
  uint64_t v103 = (char *)v102 - v63;
  uint64_t v105 = v102;
  uint64_t v104 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v66 = (char *)v102 - v65;
  uint64_t v67 = static HorizontalAlignment.leading.getter();
  v102[1] = v102;
  MEMORY[0x1F4188790](v67);
  double v68 = v143;
  v102[-16] = v109;
  v102[-15] = v68;
  uint64_t v69 = v144;
  v102[-14] = v53;
  v102[-13] = v69;
  uint64_t v70 = v134;
  v102[-12] = v146;
  v102[-11] = v70;
  uint64_t v71 = v141;
  v102[-10] = v140;
  v102[-9] = v71;
  v102[-8] = v142;
  v102[-7] = v72;
  double v96 = a10;
  double v97 = a11;
  double v98 = a12;
  double v99 = a13;
  unint64_t v73 = v131;
  unint64_t v100 = v131;
  default argument 2 of LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  static Anchor.Source<A>.bounds.getter();
  CGRect v75 = v127;
  uint64_t v74 = v128;
  unint64_t v76 = v73;
  uint64_t v77 = v129;
  (*(void (**)(char *, unint64_t, uint64_t))(v128 + 16))(v127, v76, v129);
  unint64_t v78 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v79 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(v79 + v78, v75, v77);
  type metadata accessor for CGRect(0);
  uint64_t v80 = swift_getWitnessTable();
  unint64_t v100 = lazy protocol witness table accessor for type HighestBoundsKey and conformance HighestBoundsKey();
  uint64_t v81 = v103;
  View.anchorPreference<A, B>(key:value:transform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v66, v60);
  uint64_t v82 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, HighestBoundsKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  v175[3] = v80;
  v175[4] = v82;
  uint64_t v83 = v107;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v84 = v106;
  uint64_t v85 = v81;
  static ViewBuilder.buildExpression<A>(_:)(v81, v83, v144);
  uint64_t v86 = v110;
  uint64_t v87 = *(void (**)(char *, uint64_t))(v110 + 8);
  v87(v85, v83);
  uint64_t v156 = 0;
  LOBYTE(v157) = v189;
  *(_DWORD *)((char *)&v157 + 1) = *(_DWORD *)v188;
  HIDWORD(v157) = *(_DWORD *)&v188[3];
  uint64_t v158 = v117;
  LOBYTE(v159) = v187;
  *(_DWORD *)((char *)&v159 + 1) = *(_DWORD *)v186;
  HIDWORD(v159) = *(_DWORD *)&v186[3];
  uint64_t v160 = v119;
  LOBYTE(v161) = v185;
  *(_DWORD *)((char *)&v161 + 1) = *(_DWORD *)v184;
  HIDWORD(v161) = *(_DWORD *)&v184[3];
  uint64_t v162 = v120;
  LOBYTE(v163) = v183;
  *(_DWORD *)((char *)&v163 + 1) = *(_DWORD *)v182;
  HIDWORD(v163) = *(_DWORD *)&v182[3];
  uint64_t v164 = v121;
  char v165 = v181;
  *(_DWORD *)&v166[3] = *(_DWORD *)&v180[3];
  *(_DWORD *)v166 = *(_DWORD *)v180;
  uint64_t v167 = v122;
  char v168 = v179;
  *(_DWORD *)&v169[3] = *(_DWORD *)&v178[3];
  *(_DWORD *)v169 = *(_DWORD *)v178;
  uint64_t v170 = v123;
  char v171 = v177;
  *(_DWORD *)&v172[3] = *(_DWORD *)&v176[3];
  *(_DWORD *)v172 = *(_DWORD *)v176;
  uint64_t v173 = v125;
  uint64_t v174 = v124;
  v175[0] = &v156;
  uint64_t v88 = v137;
  uint64_t v89 = v136 + 16;
  uint64_t v90 = v138;
  uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v137, v145, v138);
  uint64_t v143 = v102;
  v175[1] = v88;
  __n128 v92 = MEMORY[0x1F4188790](v91);
  uint64_t v93 = (char *)v102 - v111;
  (*(void (**)(char *, char *, uint64_t, __n128))(v86 + 16))((char *)v102 - v111, v84, v83, v92);
  v175[2] = v93;
  v155[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  v155[1] = v90;
  v155[2] = v83;
  unint64_t v152 = lazy protocol witness table accessor for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
  uint64_t v150 = v146;
  uint64_t v151 = MEMORY[0x1E4F3C7D0];
  uint64_t v149 = swift_getWitnessTable();
  uint64_t v153 = swift_getWitnessTable();
  uint64_t v154 = v144;
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t)v175, 3, (uint64_t)v155);
  v87(v84, v83);
  uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v89 - 8);
  v94(v145, v90);
  v87(v93, v83);
  return ((uint64_t (*)(uint64_t, uint64_t))v94)(v88, v90);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v93 = a8;
  uint64_t v92 = a7;
  uint64_t v91 = a3;
  uint64_t v94 = a2;
  uint64_t v88 = a1;
  uint64_t v96 = a9;
  uint64_t v89 = type metadata accessor for GeometryProxy();
  uint64_t v87 = *(void *)(v89 - 8);
  uint64_t v90 = *(void *)(v87 + 64);
  MEMORY[0x1F4188790](v89);
  uint64_t v86 = (char *)v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = a3;
  uint64_t v106 = a4;
  uint64_t v107 = a5;
  uint64_t v108 = a6;
  uint64_t v81 = a6;
  uint64_t v109 = a7;
  uint64_t v110 = a8;
  uint64_t v111 = a14;
  uint64_t v112 = a15;
  uint64_t v113 = a16;
  uint64_t v78 = a16;
  uint64_t v27 = type metadata accessor for AutoScrollingList();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v97 = v27;
  uint64_t v98 = v28;
  uint64_t v82 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v27);
  uint64_t v79 = (char *)v70 - v29;
  uint64_t v30 = a4;
  MEMORY[0x1F4188790](v31);
  double v99 = (char *)v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a15;
  uint64_t v72 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v34 = type metadata accessor for ModifiedContent();
  uint64_t v35 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v103 = a16;
  uint64_t v104 = v35;
  uint64_t v95 = MEMORY[0x1E4F3CC28];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v105 = v34;
  uint64_t v106 = AssociatedTypeWitness;
  uint64_t v80 = AssociatedTypeWitness;
  uint64_t v107 = WitnessTable;
  uint64_t v108 = AssociatedConformanceWitness;
  uint64_t v75 = type metadata accessor for IDView();
  uint64_t v105 = v30;
  uint64_t v106 = AssociatedTypeWitness;
  uint64_t v38 = v30;
  uint64_t v107 = v75;
  uint64_t v108 = a14;
  v70[1] = a14;
  uint64_t v109 = AssociatedConformanceWitness;
  uint64_t v39 = type metadata accessor for ForEach();
  uint64_t v73 = v39;
  uint64_t v84 = type metadata accessor for ModifiedContent();
  uint64_t v85 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v83 = (char *)v70 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v41);
  unint64_t v76 = (char *)v70 - v42;
  uint64_t v77 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v71 = (char *)v70 - v44;
  uint64_t v45 = v97;
  uint64_t v46 = v88;
  AutoScrollingList.rows.getter(v97);
  uint64_t v47 = v98;
  uint64_t v48 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v79, v46, v45);
  uint64_t v49 = v87;
  uint64_t v50 = v86;
  uint64_t v51 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v94, v89);
  unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v53 = (v82 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (*(unsigned __int8 *)(v49 + 80) + v53 + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v55 = (char *)swift_allocObject();
  *((void *)v55 + 2) = v91;
  *((void *)v55 + 3) = v38;
  uint64_t v56 = v81;
  *((void *)v55 + 4) = v72;
  *((void *)v55 + 5) = v56;
  uint64_t v57 = v93;
  *((void *)v55 + 6) = v92;
  *((void *)v55 + 7) = v57;
  *((void *)v55 + 8) = a14;
  uint64_t v58 = v78;
  *((void *)v55 + 9) = v74;
  *((void *)v55 + 10) = v58;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v55[v52], v48, v97);
  uint64_t v59 = (double *)&v55[v53];
  *uint64_t v59 = a10;
  v59[1] = a11;
  v59[2] = a12;
  v59[3] = a13;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v55[v54], v50, v51);
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = v71;
  ForEach<>.init(_:content:)();
  uint64_t v102 = v60;
  uint64_t v62 = v73;
  uint64_t v63 = swift_getWitnessTable();
  default argument 1 of View.scaleEffect(_:anchor:)(v62, v63);
  uint64_t v64 = v76;
  View.scaleEffect(_:anchor:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v61, v62);
  uint64_t v100 = v63;
  uint64_t v101 = MEMORY[0x1E4F3C7E0];
  uint64_t v65 = v84;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = v83;
  static ViewBuilder.buildExpression<A>(_:)(v64, v65, v66);
  double v68 = *(void (**)(char *, uint64_t))(v85 + 8);
  v68(v64, v65);
  static ViewBuilder.buildExpression<A>(_:)(v67, v65, v66);
  return ((uint64_t (*)(char *, uint64_t))v68)(v67, v65);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v96 = a8;
  uint64_t v95 = a5;
  uint64_t v94 = a4;
  uint64_t v103 = a3;
  uint64_t v99 = a2;
  uint64_t v113 = a1;
  uint64_t v106 = a9;
  uint64_t v93 = a15;
  uint64_t v92 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v105 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v104 = (char *)&v76 - v26;
  uint64_t v91 = type metadata accessor for GeometryProxy();
  uint64_t v110 = *(void *)(v91 - 8);
  uint64_t v98 = *(void *)(v110 + 64);
  MEMORY[0x1F4188790](v91);
  uint64_t v109 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = *(void *)(a6 - 8);
  uint64_t v88 = *(void *)(v108 + 64);
  MEMORY[0x1F4188790](v28);
  uint64_t v84 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = a4;
  uint64_t v117 = a5;
  uint64_t v118 = a6;
  uint64_t v119 = a7;
  uint64_t v30 = a7;
  uint64_t v120 = a8;
  uint64_t v121 = a14;
  uint64_t v122 = a15;
  uint64_t v123 = a16;
  uint64_t v112 = a16;
  uint64_t v124 = a17;
  uint64_t v82 = a17;
  uint64_t v31 = type metadata accessor for AutoScrollingList();
  uint64_t v107 = *(void *)(v31 - 8);
  uint64_t v32 = *(void *)(v107 + 64);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v76 - v33;
  uint64_t v78 = (char *)&v76 - v33;
  uint64_t v83 = v30;
  uint64_t v102 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v81 = (char *)&v76 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v37 = type metadata accessor for ModifiedContent();
  uint64_t v38 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  uint64_t v114 = a17;
  uint64_t v115 = v38;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = WitnessTable;
  uint64_t v40 = a6;
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v116 = v37;
  uint64_t v117 = v41;
  uint64_t v86 = v37;
  uint64_t v118 = WitnessTable;
  uint64_t v119 = AssociatedConformanceWitness;
  uint64_t v100 = type metadata accessor for IDView();
  uint64_t v101 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v97 = (char *)&v76 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v85 = (char *)&v76 - v44;
  uint64_t v87 = *(void *)(v37 - 8);
  __n128 v46 = MEMORY[0x1F4188790](v45);
  uint64_t v80 = (char *)&v76 - v47;
  uint64_t v77 = v31;
  uint64_t v48 = v99;
  uint64_t v49 = v113;
  (*(void (**)(uint64_t, __n128))(v99 + *(int *)(v31 + 104)))(v113, v46);
  uint64_t v79 = static Anchor.Source<A>.bounds.getter();
  uint64_t v50 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v34, v48, v31);
  uint64_t v51 = v108;
  unint64_t v52 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v84, v49, a6);
  uint64_t v53 = v110;
  uint64_t v54 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v109, v103, v91);
  unint64_t v55 = (*(unsigned __int8 *)(v50 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v56 = (v32 + *(unsigned __int8 *)(v51 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v57 = (v88 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v58 = (*(unsigned __int8 *)(v53 + 80) + v57 + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v59 = (char *)swift_allocObject();
  uint64_t v60 = v95;
  *((void *)v59 + 2) = v94;
  *((void *)v59 + 3) = v60;
  uint64_t v61 = v83;
  *((void *)v59 + 4) = v40;
  *((void *)v59 + 5) = v61;
  uint64_t v62 = v92;
  *((void *)v59 + 6) = v96;
  *((void *)v59 + 7) = v62;
  uint64_t v63 = v112;
  *((void *)v59 + 8) = v93;
  *((void *)v59 + 9) = v63;
  *((void *)v59 + 10) = v82;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(&v59[v55], v78, v77);
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v59[v56], v52, v40);
  uint64_t v64 = (double *)&v59[v57];
  *uint64_t v64 = a10;
  v64[1] = a11;
  v64[2] = a12;
  v64[3] = a13;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v59[v58], v109, v54);
  type metadata accessor for CGRect(0);
  lazy protocol witness table accessor for type AutoScrollKey and conformance AutoScrollKey();
  uint64_t v65 = v80;
  uint64_t v66 = v81;
  View.anchorPreference<A, B>(key:value:transform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v66, v61);
  uint64_t v67 = v104;
  dispatch thunk of Identifiable.id.getter();
  double v68 = v85;
  uint64_t v69 = v86;
  uint64_t v70 = AssociatedTypeWitness;
  View.id<A>(_:)();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v67, v70);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v65, v69);
  uint64_t v71 = v100;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v73 = v97;
  static ViewBuilder.buildExpression<A>(_:)(v68, v71, v72);
  uint64_t v74 = *(void (**)(char *, uint64_t))(v101 + 8);
  v74(v68, v71);
  static ViewBuilder.buildExpression<A>(_:)(v73, v71, v72);
  return ((uint64_t (*)(char *, uint64_t))v74)(v73, v71);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, CGFloat a5@<X4>, CGFloat a6@<X5>, CGFloat a7@<X6>, CGFloat a8@<X7>, BOOL *a9@<X8>, CGFloat a10@<D0>, CGFloat a11@<D1>, CGFloat a12@<D2>, CGFloat a13@<D3>, long long a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v41 = a2;
  v39[1] = a1;
  uint64_t v47 = a9;
  long long v40 = a14;
  uint64_t v25 = type metadata accessor for GeometryProxy();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v43 = v25;
  uint64_t v44 = v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v42 = (char *)v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v31 = (char *)v39 - v30;
  v48.origin.CGFloat x = a5;
  v48.origin.CGFloat y = a6;
  v48.size.CGFloat width = a7;
  v48.size.CGFloat height = a8;
  long long v49 = v40;
  uint64_t v50 = a15;
  uint64_t v51 = a16;
  uint64_t v52 = a17;
  type metadata accessor for AutoScrollingList();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for AutoScrollViewModel();
  swift_getWitnessTable();
  StateObject.wrappedValue.getter();
  AutoScrollViewModel.stickyRowIDs.getter();
  swift_release();
  dispatch thunk of Identifiable.id.getter();
  uint64_t v32 = v43;
  char v33 = Set.contains(_:)();
  swift_bridgeObjectRelease();
  uint64_t v34 = v31;
  uint64_t v35 = v42;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, AssociatedTypeWitness);
  uint64_t v36 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v35, v46, v32);
  if (v33)
  {
    type metadata accessor for CGRect(0);
    GeometryProxy.subscript.getter();
    v53.origin.CGFloat x = a10;
    v53.origin.CGFloat y = a11;
    v53.size.CGFloat width = a12;
    v53.size.CGFloat height = a13;
    BOOL v37 = CGRectIntersectsRect(v53, v48);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v32);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v32);
    BOOL v37 = 0;
  }
  BOOL *v47 = v37;
  return result;
}

uint64_t default argument 2 of LazyVStack.init(alignment:spacing:pinnedViews:content:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = a1;
  return swift_retain();
}

uint64_t closure #2 in closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a8;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  long long v31 = a9;
  uint64_t v16 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v43, &demangling cache variable for type metadata for ListAnchor?);
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v39 = v32;
  long long v40 = v31;
  uint64_t v41 = a10;
  uint64_t v42 = a11;
  uint64_t v20 = *(void *)(v33 + *(int *)(type metadata accessor for AutoScrollingList() + 100));
  uint64_t v21 = *(void (**)(unsigned char *))(*(void *)v20 + 184);
  outlined retain of ListAnchor?((uint64_t)v43);
  v21(v43);
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v35 = v23;
  uint64_t v36 = v25;
  uint64_t v37 = v27;
  uint64_t v38 = v29;
  LOBYTE(v39) = 0;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v20 + 136))(&v35);
}

uint64_t closure #2 in closure #1 in AutoScrollingList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v47 = a8;
  uint64_t v62 = a7;
  uint64_t v45 = a5;
  uint64_t v56 = a4;
  uint64_t v64 = a3;
  uint64_t v46 = a13;
  uint64_t v60 = a10;
  uint64_t v59 = a9;
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = *(void *)(a11 + 8);
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v17;
  uint64_t v61 = a11;
  uint64_t v57 = v18;
  uint64_t v19 = type metadata accessor for ReversedCollection();
  MEMORY[0x1F4188790](v19);
  long long v49 = (char *)&v43 - v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = type metadata accessor for Slice();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v54 = v21;
  uint64_t v55 = v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v63 = (char *)&v43 - v23;
  uint64_t v77 = a5;
  uint64_t v78 = a6;
  uint64_t v24 = v62;
  uint64_t v79 = v62;
  uint64_t v80 = a8;
  uint64_t v81 = a9;
  uint64_t v82 = a10;
  uint64_t v83 = a11;
  uint64_t v84 = a12;
  uint64_t v58 = a12;
  uint64_t v85 = a13;
  uint64_t v25 = type metadata accessor for AutoScrollingList();
  uint64_t v50 = *(void *)(v64 + *(int *)(v25 + 112) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = v24;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AutoScrollViewModel();
  swift_getWitnessTable();
  uint64_t v50 = StateObject.wrappedValue.getter();
  AutoScrollingList.rows.getter(v25);
  uint64_t v27 = v57;
  BidirectionalCollection.reversed()();
  Collection.prefix(_:)();
  uint64_t v29 = v45;
  uint64_t v28 = v46;
  v76[12] = v45;
  v76[13] = v27;
  uint64_t v30 = v27;
  uint64_t v31 = v47;
  v76[14] = v26;
  v76[15] = v47;
  uint64_t v33 = v59;
  uint64_t v32 = v60;
  v76[16] = v59;
  v76[17] = v60;
  uint64_t v34 = v61;
  uint64_t v35 = v58;
  v76[18] = v61;
  v76[19] = v58;
  v76[20] = v46;
  uint64_t KeyPath = swift_getKeyPath();
  v76[2] = v29;
  v76[3] = v30;
  v76[4] = v31;
  v76[5] = v33;
  v76[6] = v32;
  v76[7] = v34;
  v76[8] = v35;
  v76[9] = v28;
  v76[10] = KeyPath;
  uint64_t v37 = v54;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v63;
  uint64_t v41 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for implicit closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter, (uint64_t)v76, v37, AssociatedTypeWitness, MEMORY[0x1E4FBC248], v38, MEMORY[0x1E4FBC278], v40);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v37);
  swift_release();
  uint64_t v77 = v41;
  type metadata accessor for Array();
  swift_getWitnessTable();
  Set.init<A>(_:)();
  AutoScrollViewModel.stickyRowIDs.setter();
  swift_release();
  uint64_t v65 = v29;
  uint64_t v66 = v57;
  uint64_t v67 = v62;
  uint64_t v68 = v31;
  uint64_t v69 = v59;
  uint64_t v70 = v60;
  uint64_t v71 = v61;
  uint64_t v72 = v58;
  uint64_t v73 = v28;
  uint64_t v74 = v64;
  uint64_t v75 = v56;
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t key path getter for Identifiable.id : <A, B, C, D>C()
{
  return dispatch thunk of Identifiable.id.getter();
}

uint64_t closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v58 = a1;
  uint64_t v59 = a8;
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v50 = a2;
  uint64_t v51 = v16;
  MEMORY[0x1F4188790](a1);
  uint64_t v56 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Optional();
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  long long v49 = (char *)&v44 - v18;
  uint64_t v60 = a10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = type metadata accessor for Optional();
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v55 = (char *)&v44 - v20;
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v57 = a4;
  uint64_t v63 = a5;
  uint64_t v64 = a6;
  uint64_t v65 = a7;
  uint64_t v66 = v59;
  uint64_t v48 = a9;
  uint64_t v67 = a9;
  uint64_t v68 = a10;
  uint64_t v69 = a11;
  uint64_t v21 = type metadata accessor for AutoScrollingList();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = v58;
  uint64_t v59 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v53 = AssociatedTypeWitness;
  type metadata accessor for AutoScrollViewModel();
  swift_getWitnessTable();
  StateObject.wrappedValue.getter();
  char v27 = AutoScrollViewModel.shouldAutoScroll.getter();
  swift_release();
  uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v25, v21);
  if ((v27 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  uint64_t v45 = AssociatedConformanceWitness;
  uint64_t v30 = v56;
  uint64_t v29 = v57;
  uint64_t v31 = v59;
  char v32 = (*(uint64_t (**)(uint64_t))(**(void **)&v24[*(int *)(v21 + 100)] + 272))(v28);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (v32)
  {
    AutoScrollingList.rows.getter(v21);
    uint64_t v34 = (uint64_t)v49;
    BidirectionalCollection.last.getter();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v29);
    uint64_t v35 = v31;
    uint64_t v36 = v34;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v34, 1, v35);
    uint64_t v38 = v52;
    uint64_t v39 = v53;
    uint64_t v40 = v54;
    uint64_t v41 = (uint64_t)v55;
    if (EnumTagSinglePayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v36, v47);
      uint64_t v42 = 1;
    }
    else
    {
      dispatch thunk of Identifiable.id.getter();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v36, v35);
      uint64_t v42 = 0;
    }
    uint64_t v43 = v45;
    __swift_storeEnumTagSinglePayload(v41, v42, 1, v39);
    uint64_t v70 = v43;
    swift_getWitnessTable();
    ScrollViewProxy.scrollTo<A>(_:anchor:)();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v41, v38);
  }
  return result;
}

uint64_t closure #3 in closure #1 in AutoScrollingList.body.getter()
{
  return withAnimation<A>(_:_:)();
}

uint64_t closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v36 = a1;
  uint64_t v35 = a8;
  uint64_t v29 = a3;
  uint64_t v33 = a2;
  uint64_t v30 = a11;
  uint64_t v31 = a6;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v28 = a9;
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Optional();
  uint64_t v26 = *(void *)(v17 - 8);
  uint64_t v27 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = type metadata accessor for Optional();
  uint64_t v34 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v26 - v21;
  uint64_t v37 = v29;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = v31;
  uint64_t v41 = a7;
  uint64_t v42 = v35;
  uint64_t v43 = v28;
  uint64_t v44 = a10;
  uint64_t v35 = a10;
  uint64_t v45 = v30;
  uint64_t v23 = type metadata accessor for AutoScrollingList();
  AutoScrollingList.rows.getter(v23);
  BidirectionalCollection.last.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
    uint64_t v24 = 1;
  }
  else
  {
    dispatch thunk of Identifiable.id.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(a5 - 8) + 8))(v19, a5);
    uint64_t v24 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v22, v24, 1, AssociatedTypeWitness);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getWitnessTable();
  ScrollViewProxy.scrollTo<A>(_:anchor:)();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v20);
}

uint64_t key path setter for AutoScrollViewModel.stickyRowIDs : <A>AutoScrollViewModel<A>()
{
  return AutoScrollViewModel.stickyRowIDs.setter();
}

uint64_t outlined retain of ListAnchor?(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C343FC60@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 224))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C343FCA8()
{
  return PositionalData.isBottomVisible.setter();
}

uint64_t sub_1C343FCD0@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 272))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C343FD20()
{
  return PositionalData.isWithinAutoScrollTolerance.setter();
}

void partial apply for closure #1 in AutoScrollingList.body.getter()
{
}

{
  char *v0;
  uint64_t v1;
  void (*v2)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_21_41();
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v3 = *((void *)v0 + 2);
  uint64_t v4 = *((void *)v0 + 3);
  long long v5 = *((void *)v0 + 4);
  long long v6 = *((void *)v0 + 5);
  uint64_t v7 = *((void *)v0 + 6);
  size_t v8 = *((void *)v0 + 7);
  unint64_t v9 = type metadata accessor for AutoScrollingList();
  OUTLINED_FUNCTION_1_1(v9);
  v12(v11, &v0[(*(unsigned __int8 *)(v10 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)], v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_249();
}

uint64_t associated type witness table accessor for View.Body : View in AutoScrollingList<A, B, C, D>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C343FDB8()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C343FDF8()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1C343FE38()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1C343FE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PositionalData.$isBottomVisible : PositionalData(a1, a2, a3, a4, (uint64_t (*)(char *))PositionalData.$isBottomVisible.setter);
}

uint64_t sub_1C343FEA0()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t sub_1C343FEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PositionalData.$isBottomVisible : PositionalData(a1, a2, a3, a4, (uint64_t (*)(char *))PositionalData.$isWithinAutoScrollTolerance.setter);
}

void sub_1C343FF10(double *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  *a1 = (*(double (**)(void))(v2 + 320))();
}

uint64_t sub_1C343FF5C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 328))();
}

void sub_1C343FFB0()
{
}

void sub_1C343FFC4()
{
}

uint64_t destroy for ListAnchor()
{
  return swift_release();
}

uint64_t initializeWithCopy for ListAnchor(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  return a1;
}

void *assignWithCopy for ListAnchor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ListAnchor(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListAnchor(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListAnchor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListAnchor()
{
  return &type metadata for ListAnchor;
}

uint64_t ObjC metadata update function for PositionalData()
{
  return type metadata accessor for PositionalData();
}

uint64_t type metadata accessor for PositionalData()
{
  uint64_t result = type metadata singleton initialization cache for PositionalData;
  if (!type metadata singleton initialization cache for PositionalData) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for PositionalData()
{
  type metadata accessor for Published<Set<TUHandle>?>(319, &lazy cache variable for type metadata for Published<CGRect?>, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Set<TUHandle>?>(319, &lazy cache variable for type metadata for Published<ListAnchor?>, &demangling cache variable for type metadata for ListAnchor?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for PositionalData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PositionalData);
}

uint64_t dispatch thunk of PositionalData.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of PositionalData.scrollViewBounds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PositionalData.scrollViewBounds.setter()
{
  OUTLINED_FUNCTION_50();
  unint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 136);
  long long v3 = v2[1];
  v6[0] = *v2;
  v6[1] = v3;
  char v7 = v4;
  return v1(v6);
}

uint64_t dispatch thunk of PositionalData.scrollViewBounds.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PositionalData.$scrollViewBounds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PositionalData.$scrollViewBounds.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PositionalData.$scrollViewBounds.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PositionalData.listBounds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PositionalData.listBounds.setter()
{
  OUTLINED_FUNCTION_50();
  unint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 184);
  long long v3 = v2[1];
  v6[0] = *v2;
  v6[1] = v3;
  uint64_t v7 = v4;
  return v1(v6);
}

uint64_t dispatch thunk of PositionalData.listBounds.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PositionalData.$listBounds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PositionalData.$listBounds.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of PositionalData.$listBounds.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of PositionalData.isBottomVisible.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PositionalData.$isBottomVisible.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of PositionalData.isWithinAutoScrollTolerance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of PositionalData.$isWithinAutoScrollTolerance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of PositionalData.autoScrollTolerance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of PositionalData.autoScrollTolerance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of PositionalData.autoScrollTolerance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of PositionalData.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

void type metadata completion function for AutoScrollViewModel()
{
  type metadata accessor for Set();
  type metadata accessor for Published();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for AutoScrollViewModel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata instantiation function for AutoScrollingList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 104);
}

uint64_t type metadata completion function for AutoScrollingList()
{
  uint64_t result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutoScrollingList(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = ((v6 + 16) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7
    || v8 != 0
    || ((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 17 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v13 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = ((unint64_t)v14 + v6 + 8) & ~v6;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v17(v15, v16, v4);
    uint64_t v18 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v19 = *v18;
    uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v21 = *v20;
    uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v22;
    uint64_t v24 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    unint64_t v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = *(void *)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    LOBYTE(v16) = *(unsigned char *)(v31 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
    *(void *)unint64_t v30 = v32;
    *(void *)(v30 + 8) = v33;
    *(unsigned char *)(v30 + 16) = v16;
  }
  return a1;
}

uint64_t destroy for AutoScrollingList(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))(((v3 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  return outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
}

void *initializeWithCopy for AutoScrollingList(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 24);
  int v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  swift_retain();
  swift_retain();
  v8(v11, v12, v7);
  uint64_t v13 = ((v10 + 16) & ~v10) + *(void *)(v9 + 48) + 7;
  unint64_t v14 = (unint64_t)a1 + v13;
  uint64_t v15 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  v14 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v14 = *v15;
  uint64_t v16 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v16;
  uint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v19 = *v18;
  uint64_t v20 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  unint64_t v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 8);
  LOBYTE(v12) = *(unsigned char *)(v27 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(void *)unint64_t v26 = v28;
  *(void *)(v26 + 8) = v29;
  *(unsigned char *)(v26 + 16) = v12;
  return a1;
}

void *assignWithCopy for AutoScrollingList(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 40) + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  unint64_t v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)v15;
  v15 += 15;
  *(void *)unint64_t v14 = v16;
  v14 += 15;
  unint64_t v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v14 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v15 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (v14 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_retain();
  swift_release();
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v17 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)(v17 + 8);
  *(void *)unint64_t v18 = *(void *)v17;
  *(void *)(v18 + 8) = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = (void *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  unint64_t v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  LOBYTE(v21) = *(unsigned char *)(v24 + 16);
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(void *)unint64_t v23 = v25;
  *(void *)(v23 + 8) = v26;
  *(unsigned char *)(v23 + 16) = (_BYTE)v21;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

void *initializeWithTake for AutoScrollingList(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9);
  uint64_t v10 = ((v9 + 16) & ~v9) + *(void *)(v8 + 32) + 7;
  uint64_t v11 = (void *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  void *v11 = *v12;
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  unint64_t v17 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v17 = *v18;
  uint64_t v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v19 = *v20;
  unint64_t v21 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 16);
  long long v23 = *(_OWORD *)v21;
  unint64_t v24 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v24 = v23;
  *(unsigned char *)(v24 + 16) = v22;
  return a1;
}

void *assignWithTake for AutoScrollingList(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 24) + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  unint64_t v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v14 = *v15;
  v14 += 15;
  uint64_t v16 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v14 & 0xFFFFFFFFFFFFFFF8) = *v16;
  unint64_t v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  v17 &= 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)unint64_t v17 = *v18;
  swift_release();
  uint64_t v19 = (_OWORD *)((v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v21 = *(_OWORD *)v20;
  v20 += 23;
  _OWORD *v19 = v21;
  swift_release();
  unint64_t v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v23 = *(unsigned char *)((v20 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)unint64_t v22 = *(_OWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v22 + 16) = v23;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoScrollingList(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((((((((((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 17;
    unsigned int v10 = (a2 - v8 + 255) >> (8 * v9);
    if (v9 < 4) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = a1[v9];
        if (!a1[v9]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)&a1[v9];
        if (*(_WORD *)&a1[v9]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C3441230);
      case 4:
        int v14 = *(_DWORD *)&a1[v9];
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = (v14 - 1) << (8 * v9);
        if (v9 >= 4) {
          int v16 = 0;
        }
        if (((((((((((((*(_DWORD *)(*(void *)(v4 - 8) + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFF8)
                     + 15) & 0xFFFFFFF8)
                   + 15) & 0xFFFFFFF8)
                 + 15) & 0xFFFFFFF8)
               + 23) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
          int v17 = *a1;
        else {
          int v17 = *(_DWORD *)a1;
        }
        return v8 + (v17 | v16) + 1;
      default:
        break;
    }
  }
  unint64_t v18 = (unint64_t *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v6 & 0x80000000) != 0) {
    return __swift_getEnumTagSinglePayload(((unint64_t)v18 + v7 + 8) & ~v7, v6, v4);
  }
  unint64_t v19 = *v18;
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void storeEnumTagSinglePayload for AutoScrollingList(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((((((((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  char v12 = 8 * v11;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = (a3 - v9 + 255) >> v12;
    if (v11 <= 3) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (v9 < a2)
  {
    unsigned int v17 = (~v9 + a2) >> v12;
    if (v11 < 4) {
      int v18 = v17 + 1;
    }
    else {
      int v18 = 1;
    }
    if (v11 >= 4) {
      int v19 = ~v9 + a2;
    }
    else {
      int v19 = (~(_BYTE)v9 + a2);
    }
    bzero(a1, v11);
    if (v11 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v16)
    {
      case 1:
        a1[v11] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v18;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v11] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1C3441478);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        unint64_t v20 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v8 & 0x80000000) != 0)
        {
          __swift_storeEnumTagSinglePayload(((unint64_t)v20 + v10 + 8) & ~v10, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v21 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v21 = (a2 - 1);
          }
          *unint64_t v20 = v21;
        }
      }
      return;
  }
}

void sub_1C34414A0()
{
}

void *type metadata accessor for HighestBoundsKey()
{
  return &unk_1F1EAC6A0;
}

void *type metadata accessor for AutoScrollKey()
{
  return &unk_1F1EAC6C0;
}

{
  return &unk_1F1EBC8A0;
}

uint64_t Set.init(_nonEmptyArrayLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v38 - v10;
  __n128 v12 = MEMORY[0x1F4188790](v11);
  unsigned int v14 = (char *)&v38 - v13;
  if (MEMORY[0x1C8773490](v12))
  {
    type metadata accessor for _SetStorage();
    uint64_t v15 = static _SetStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC870];
  }
  uint64_t v43 = MEMORY[0x1C87734D0](v5, a2);
  if (v43)
  {
    uint64_t v39 = v7;
    uint64_t v40 = v6;
    uint64_t v16 = 0;
    uint64_t v48 = (uint64_t (**)(char *, uint64_t *, uint64_t))(v6 + 16);
    uint64_t v49 = v15 + 56;
    uint64_t v45 = v6 + 32;
    uint64_t v47 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v41 = v5;
    uint64_t v42 = v14;
    while (1)
    {
      Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)();
      if (IsNativeType)
      {
        int v18 = *(uint64_t (**)(char *, uint64_t *, uint64_t))(v6 + 16);
        uint64_t result = v18(v14, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16), a2);
      }
      else
      {
        uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
        if (v39 != 8) {
          goto LABEL_24;
        }
        uint64_t v51 = result;
        int v18 = *v48;
        (*v48)(v14, &v51, a2);
        uint64_t result = swift_unknownObjectRelease();
      }
      BOOL v20 = __OFADD__(v16, 1);
      uint64_t v21 = v16 + 1;
      if (v20) {
        break;
      }
      uint64_t v46 = v21;
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v44(v50, v14, a2);
      uint64_t v22 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v23 = v15;
      uint64_t v24 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v25 = v22 & ~v24;
      unint64_t v26 = v25 >> 6;
      uint64_t v27 = *(void *)(v49 + 8 * (v25 >> 6));
      uint64_t v28 = 1 << v25;
      uint64_t v29 = *(void *)(v6 + 72);
      if (((1 << v25) & v27) != 0)
      {
        uint64_t v30 = ~v24;
        while (1)
        {
          v18(v8, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
          uint64_t v31 = a3;
          char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v33 = *v47;
          (*v47)(v8, a2);
          if (v32) {
            break;
          }
          unint64_t v25 = (v25 + 1) & v30;
          unint64_t v26 = v25 >> 6;
          uint64_t v27 = *(void *)(v49 + 8 * (v25 >> 6));
          uint64_t v28 = 1 << v25;
          a3 = v31;
          if ((v27 & (1 << v25)) == 0)
          {
            uint64_t v6 = v40;
            uint64_t v5 = v41;
            goto LABEL_14;
          }
        }
        v33(v50, a2);
        a3 = v31;
        uint64_t v6 = v40;
        uint64_t v5 = v41;
        uint64_t v15 = v23;
      }
      else
      {
LABEL_14:
        uint64_t v34 = v50;
        *(void *)(v49 + 8 * v26) = v28 | v27;
        unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
        uint64_t v15 = v23;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v44)(v35, v34, a2);
        uint64_t v36 = *(void *)(v23 + 16);
        BOOL v20 = __OFADD__(v36, 1);
        uint64_t v37 = v36 + 1;
        if (v20) {
          goto LABEL_23;
        }
        *(void *)(v23 + 16) = v37;
      }
      unsigned int v14 = v42;
      uint64_t v16 = v46;
      if (v46 == v43) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t objectdestroy_22Tm()
{
  type metadata accessor for AutoScrollingList();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_40_19();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26_2();
  v2(v0, v1);
  swift_release();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_37_3();
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  OUTLINED_FUNCTION_26_34();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in AutoScrollingList.body.getter()
{
}

uint64_t sub_1C3441E9C()
{
  return objectdestroy_53Tm(MEMORY[0x1E4F3CC40]);
}

#error "1C3441F70: call analysis failed (funcsize=53)"

uint64_t sub_1C3441F88()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_3_110();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_40_19();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26_2();
  v7(v5, v6);
  swift_release();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_37_3();
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return swift_deallocObject();
}

void partial apply for closure #3 in closure #1 in AutoScrollingList.body.getter()
{
  OUTLINED_FUNCTION_21_41();
  uint64_t v0 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1(v0);
  uint64_t v1 = type metadata accessor for AutoScrollingList();
  OUTLINED_FUNCTION_1_1(v1);
  closure #3 in closure #1 in AutoScrollingList.body.getter();
  OUTLINED_FUNCTION_249();
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(void, void);

  OUTLINED_FUNCTION_33_25();
  return v1(*(void *)(v0 + 88), *(void *)(v0 + 96));
}

void sub_1C3442208()
{
}

uint64_t partial apply for implicit closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter()
{
  return swift_getAtKeyPath();
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter();
}

uint64_t sub_1C34422A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AutoScrollViewModel.shouldAutoScroll.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C34422D8()
{
  return AutoScrollViewModel.shouldAutoScroll.setter();
}

void sub_1C3442300()
{
}

uint64_t sub_1C344230C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AutoScrollViewModel.stickyRowIDs.getter();
  *a1 = result;
  return result;
}

void sub_1C344233C()
{
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(void, void, double, double, double, double);

  OUTLINED_FUNCTION_33_25();
  return v1(*(void *)(v0 + 88), *(void *)(v0 + 96), *(double *)(v0 + 104), *(double *)(v0 + 112), *(double *)(v0 + 120), *(double *)(v0 + 128));
}

uint64_t sub_1C3442360()
{
  return objectdestroy_53Tm(MEMORY[0x1E4F3C848]);
}

uint64_t objectdestroy_53Tm(void (*a1)(void))
{
  OUTLINED_FUNCTION_3_110();
  a1(0);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_30_27();
  swift_release();
  OUTLINED_FUNCTION_39_21();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26_2();
  v4(v2, v3);
  swift_release();
  OUTLINED_FUNCTION_44_15();
  OUTLINED_FUNCTION_44_15();
  uint64_t v5 = OUTLINED_FUNCTION_15_60();
  v6(v5);
  return swift_deallocObject();
}

#error "1C344257C: call analysis failed (funcsize=53)"

unint64_t lazy protocol witness table accessor for type HighestBoundsKey and conformance HighestBoundsKey()
{
  unint64_t result = lazy protocol witness table cache variable for type HighestBoundsKey and conformance HighestBoundsKey;
  if (!lazy protocol witness table cache variable for type HighestBoundsKey and conformance HighestBoundsKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HighestBoundsKey and conformance HighestBoundsKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ListAnchor? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type ListAnchor? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ListAnchor? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ListAnchor?);
    lazy protocol witness table accessor for type ListAnchor and conformance ListAnchor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListAnchor? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ListAnchor and conformance ListAnchor()
{
  unint64_t result = lazy protocol witness table cache variable for type ListAnchor and conformance ListAnchor;
  if (!lazy protocol witness table cache variable for type ListAnchor and conformance ListAnchor)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListAnchor and conformance ListAnchor);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(*(void *)(v1 + 88), *(void *)(v1 + 128), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(double *)(v1 + 96), *(double *)(v1 + 104), *(double *)(v1 + 112), *(double *)(v1 + 120), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1C344275C()
{
  type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v0();
  OUTLINED_FUNCTION_26_34();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_1_1(v4);
  return closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(a1, a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PinnedScrollableViews and conformance PinnedScrollableViews()
{
  unint64_t result = lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews;
  if (!lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews)
  {
    type metadata accessor for PinnedScrollableViews();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews);
  }
  return result;
}

uint64_t sub_1C3442900()
{
  OUTLINED_FUNCTION_3_110();
  type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_30_27();
  swift_release();
  OUTLINED_FUNCTION_39_21();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26_2();
  v2(v0, v1);
  swift_release();
  OUTLINED_FUNCTION_44_15();
  OUTLINED_FUNCTION_44_15();
  uint64_t v3 = OUTLINED_FUNCTION_15_60();
  v4(v3);
  return swift_deallocObject();
}

#error "1C3442B20: call analysis failed (funcsize=59)"

uint64_t sub_1C3442B38()
{
  long long v13 = *(_OWORD *)(v0 + 32);
  type metadata accessor for AutoScrollingList();
  OUTLINED_FUNCTION_11_55();
  uint64_t v2 = v1;
  unint64_t v4 = (v3 + *(unsigned __int8 *)(v1 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_release();
  swift_release();
  type metadata accessor for Binding();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_26_2();
  v10();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  (*(void (**)(unint64_t, void))(v2 + 8))(v0 + v4, v13);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v12);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  CGFloat v22 = v2[3];
  CGFloat v23 = v2[2];
  CGFloat v3 = v2[4];
  CGFloat v21 = v2[5];
  uint64_t v4 = *((void *)v2 + 6);
  uint64_t v5 = *((void *)v2 + 7);
  uint64_t v7 = *((void *)v2 + 8);
  uint64_t v6 = *((void *)v2 + 9);
  uint64_t v8 = *((void *)v2 + 10);
  uint64_t v9 = type metadata accessor for AutoScrollingList();
  OUTLINED_FUNCTION_1(v9);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  OUTLINED_FUNCTION_11_55();
  unint64_t v14 = (v13 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (*(void *)(v15 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_1_1(v17);
  *((void *)&v20 + 1) = v5;
  *(void *)&long long v20 = v4;
  return closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(a1, (uint64_t)v2 + v11, (uint64_t)v2 + v14, (uint64_t)v2+ ((v16 + *(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v23, v22, v3, v21, a2, *(double *)((char *)v2 + v16), *(double *)((char *)v2 + v16 + 8), *(double *)((char *)v2 + v16 + 16), *(double *)((char *)v2 + v16 + 24), v20, v7, v6, v8);
}

unint64_t lazy protocol witness table accessor for type AutoScrollKey and conformance AutoScrollKey()
{
  unint64_t result = lazy protocol witness table cache variable for type AutoScrollKey and conformance AutoScrollKey;
  if (!lazy protocol witness table cache variable for type AutoScrollKey and conformance AutoScrollKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AutoScrollKey and conformance AutoScrollKey);
  }
  return result;
}

uint64_t EffectsBrowserViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(char *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(char *a1, uint64_t a2, id a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  char v11 = *a1;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = 0;
  objc_msgSend(a3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (a5)
  {
    id v12 = objc_msgSend(a3, sel_heightAnchor);
    id v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, 75.0);

    unint64_t v14 = *(void **)(v6 + 56);
    *(void *)(v6 + 56) = v13;

    *(void *)(v6 + 48) = MEMORY[0x1E4FBC860];
    *(unsigned char *)(v6 + 16) = v11;
    *(void *)(v6 + 24) = a2;
    *(void *)(v6 + 32) = a3;
    type metadata accessor for LocalParticipantView();
    uint64_t v15 = swift_dynamicCastClass();
    if (!v15)
    {

      uint64_t v15 = 0;
    }
  }
  else
  {
    id v16 = objc_msgSend(a3, sel_topAnchor);
    id v17 = objc_msgSend(a4, sel_topAnchor);
    id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 17.0);

    int v19 = *(void **)(v6 + 64);
    *(void *)(v6 + 64) = v18;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C3769F40;
    id v21 = objc_msgSend(a3, sel_bottomAnchor);
    id v22 = objc_msgSend(a4, sel_bottomAnchor);
    id v23 = OUTLINED_FUNCTION_3_111();

    *(void *)(v20 + 32) = v23;
    id v24 = objc_msgSend(a3, sel_leadingAnchor);
    id v25 = objc_msgSend(a4, sel_leadingAnchor);
    id v26 = OUTLINED_FUNCTION_3_111();

    *(void *)(v20 + 40) = v26;
    id v27 = objc_msgSend(a3, sel_trailingAnchor);
    id v28 = objc_msgSend(a4, sel_trailingAnchor);
    id v29 = OUTLINED_FUNCTION_3_111();

    *(void *)(v20 + 48) = v29;
    specialized Array._endMutation()();

    uint64_t v15 = 0;
    *(void *)(v6 + 48) = v20;
    *(unsigned char *)(v6 + 16) = v11;
    *(void *)(v6 + 24) = a2;
    *(void *)(v6 + 32) = a3;
  }
  *(void *)(v6 + 40) = v15;
  return v6;
}

uint64_t EffectsBrowserViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 17);
  uint64_t v5 = (void *)v1[7];
  unint64_t v49 = v1[6];
  if (v5)
  {
    if (v3 == 6 || v3 == 3) {
      double v7 = 75.0;
    }
    else {
      double v7 = 58.0;
    }
    swift_bridgeObjectRetain();
    id v8 = v5;
    objc_msgSend(v8, sel_setConstant_, v7);
    id v9 = v8;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_7_34();
    if (v10) {
      OUTLINED_FUNCTION_6_3();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  char v11 = (void *)v1[8];
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v12, sel_setConstant_, 17.0);
    id v13 = v12;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_7_34();
    if (v10) {
      OUTLINED_FUNCTION_6_3();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  unint64_t v14 = (char *)v1[5];
  if (!v14) {
    return v49;
  }
  uint64_t v15 = &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>;
  if (v4 >= 0x81)
  {
    id v18 = *(void **)&v14[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView];
    int v19 = v14;
    id v16 = objc_msgSend(v18, sel_bottomAnchor);
    if (one-time initialization token for browserVerticalPaddingFull != -1) {
      swift_once();
    }
    id v17 = &static Layout.EffectsControlsView.browserVerticalPaddingFull;
  }
  else
  {
    id v16 = objc_msgSend(v14, sel_bottomAnchor);
    if (one-time initialization token for browserVerticalPadding != -1) {
      swift_once();
    }
    id v17 = &static Layout.EffectsControlsView.browserVerticalPadding;
  }
  double v20 = *(double *)v17;
  id v21 = (id)v2[4];
  id v22 = objc_msgSend(v21, sel_topAnchor);
  id v23 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v16, v20);

  MEMORY[0x1C87733A0]();
  if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    OUTLINED_FUNCTION_6_3();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v4 < 0x81)
  {
    if ((v2[2] & 1) == 0) {
      goto LABEL_40;
    }
    id v24 = objc_msgSend(v21, sel_leadingAnchor);
    id v25 = (void *)v2[3];
    id v26 = objc_msgSend(v25, sel_leadingAnchor);
    double v27 = static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v15 = &static Defaults.shared;
    (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v28 + 488))();
    id v29 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, v27);

    id v30 = objc_msgSend(v25, sel_trailingAnchor);
    id v31 = objc_msgSend(v21, sel_trailingAnchor);
    double v32 = static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v33 + 384))();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v34 + 488))();
    id v21 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, v32);

    if (v49 >> 62)
    {
      OUTLINED_FUNCTION_10_3();
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = v35 + 2;
    if (!__OFADD__(v35, 2)) {
      goto LABEL_43;
    }
    __break(1u);
  }
  id v37 = objc_msgSend(v21, sel_leadingAnchor);
  uint64_t v38 = v15[426];
  id v39 = objc_msgSend(*(id *)(*(void *)&v14[v38]+ OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide), sel_leadingAnchor);
  id v29 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);

  id v40 = objc_msgSend(v21, sel_trailingAnchor);
  id v41 = objc_msgSend(*(id *)(*(void *)&v14[v38]+ OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide), sel_trailingAnchor);
  id v21 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  if (v49 >> 62)
  {
    OUTLINED_FUNCTION_10_3();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = v42 + 2;
  if (!__OFADD__(v42, 2)) {
    goto LABEL_43;
  }
  __break(1u);
LABEL_40:
  id v43 = objc_msgSend(v21, sel_centerXAnchor);
  id v44 = objc_msgSend(v14, sel_centerXAnchor);
  id v29 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  id v45 = objc_msgSend(v21, sel_widthAnchor);
  id v21 = objc_msgSend(v45, sel_constraintEqualToConstant_, 345.0);

  if (v49 >> 62)
  {
    OUTLINED_FUNCTION_10_3();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = v46 + 2;
  if (!__OFADD__(v46, 2))
  {
LABEL_43:
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(result, 1);
    specialized Array._endMutation()();
    id v47 = v29;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_3_18();
    if (v10) {
      OUTLINED_FUNCTION_6_3();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v48 = v21;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_3_18();
    if (v10) {
      OUTLINED_FUNCTION_6_3();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    return v49;
  }
  __break(1u);
  return result;
}

id *EffectsBrowserViewConstraintManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EffectsBrowserViewConstraintManager.__deallocating_deinit()
{
  EffectsBrowserViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance EffectsBrowserViewConstraintManager()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t type metadata accessor for EffectsBrowserViewConstraintManager()
{
  return self;
}

uint64_t method lookup function for EffectsBrowserViewConstraintManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EffectsBrowserViewConstraintManager);
}

uint64_t dispatch thunk of EffectsBrowserViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EffectsBrowserViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

BOOL static CameraPosition.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t CameraPosition.avDevicePosition.getter(unsigned __int8 a1)
{
  return 2 - a1;
}

void *CameraPosition.default.unsafeMutableAddressor()
{
  return &static CameraPosition.default;
}

ConversationKit::CameraPosition_optional __swiftcall CameraPosition.init(avDevicePosition:)(AVCaptureDevicePosition avDevicePosition)
{
  if ((unint64_t)avDevicePosition < (AVCaptureDevicePositionFront|AVCaptureDevicePositionBack)) {
    return (ConversationKit::CameraPosition_optional)(2 - avDevicePosition);
  }
  _StringGuts.grow(_:)(65);
  v2._object = (void *)0x80000001C37AE1E0;
  v2._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  result.value = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t static CameraPosition.default.getter()
{
  return 0;
}

void CameraPosition.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int CameraPosition.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CameraPosition(char *a1, char *a2)
{
  return static CameraPosition.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CameraPosition()
{
  return CameraPosition.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CameraPosition(uint64_t a1)
{
  CameraPosition.hash(into:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type CameraPosition and conformance CameraPosition()
{
  unint64_t result = lazy protocol witness table cache variable for type CameraPosition and conformance CameraPosition;
  if (!lazy protocol witness table cache variable for type CameraPosition and conformance CameraPosition)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CameraPosition and conformance CameraPosition);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CameraPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3443CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraPosition()
{
  return &type metadata for CameraPosition;
}

double SpringAnimationParameters.duration.getter()
{
  return *(double *)v0;
}

void SpringAnimationParameters.duration.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*SpringAnimationParameters.duration.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.mass.getter()
{
  return *(double *)(v0 + 8);
}

void SpringAnimationParameters.mass.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*SpringAnimationParameters.mass.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.stiffness.getter()
{
  return *(double *)(v0 + 16);
}

void SpringAnimationParameters.stiffness.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*SpringAnimationParameters.stiffness.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.damping.getter()
{
  return *(double *)(v0 + 24);
}

void SpringAnimationParameters.damping.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*SpringAnimationParameters.damping.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.initialVelocity.getter()
{
  return *(double *)(v0 + 32);
}

void SpringAnimationParameters.initialVelocity.setter(double a1, double a2)
{
  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*SpringAnimationParameters.initialVelocity.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 4 of SpringAnimationParameters.init(duration:mass:stiffness:damping:initialVelocity:)()
{
  return 0.0;
}

void SpringAnimationParameters.init(duration:mass:stiffness:damping:initialVelocity:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
}

id SpringAnimationParameters.provider.getter()
{
  double v1 = v0[1];
  double v2 = v0[2];
  double v3 = v0[3];
  double v4 = v0[4];
  double v5 = v0[5];
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1C58]);
  return objc_msgSend(v6, sel_initWithMass_stiffness_damping_initialVelocity_, v1, v2, v3, v4, v5);
}

ValueMetadata *type metadata accessor for SpringAnimationParameters()
{
  return &type metadata for SpringAnimationParameters;
}

uint64_t dispatch thunk of PowerSaverObserver.update(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PowerSaverManaging.shouldDisplayThermalWarning.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PowerSaverManaging.shouldDisplayPowerSaver.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PowerSaverManaging.powerSaverMessage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PowerSaverManaging.powerSaverStateEvent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

BOOL static Bool.< infix(_:_:)(char a1, char a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EC8]), sel_initWithBool_, a1 & 1);
  id v4 = objc_msgSend(v3, sel_integerValue);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EC8]), sel_initWithBool_, a2 & 1);
  id v6 = objc_msgSend(v5, sel_integerValue);

  return (uint64_t)v4 < (uint64_t)v6;
}

uint64_t base witness table accessor for Equatable in Bool()
{
  return MEMORY[0x1E4FBB3A8];
}

BOOL protocol witness for static Comparable.< infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return static Bool.< infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.<= infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return specialized static Comparable.<= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.>= infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return specialized static Comparable.>= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.> infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return specialized static Comparable.> infix(_:_:)(*a1, *a2);
}

id CubicAnimationParameters.mediaTimingFunction.getter()
{
  float v1 = v0[1];
  float v2 = v0[2];
  float v3 = v0[3];
  float v4 = v0[4];
  id v5 = objc_allocWithZone(MEMORY[0x1E4F39C10]);
  *(float *)&double v6 = v1;
  *(float *)&double v7 = v2;
  *(float *)&double v8 = v3;
  *(float *)&double v9 = v4;
  return objc_msgSend(v5, sel_initWithControlPoints__::, v6, v7, v8, v9);
}

UIViewPropertyAnimator __swiftcall UIViewPropertyAnimator.init(cubicAnimationParameters:)(ConversationKit::CubicAnimationParameters *cubicAnimationParameters)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double duration = cubicAnimationParameters->duration;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1698]), sel_initWithControlPoint1_controlPoint2_, cubicAnimationParameters->controlPoint1.x, cubicAnimationParameters->controlPoint1.y, cubicAnimationParameters->controlPoint2.x, cubicAnimationParameters->controlPoint2.y);
  id v5 = objc_msgSend(v2, sel_initWithDuration_timingParameters_, v4, duration);

  return (UIViewPropertyAnimator)v5;
}

double CubicAnimationParameters.duration.getter()
{
  return *(double *)v0;
}

double CubicAnimationParameters.controlPoint1.getter()
{
  return *(double *)(v0 + 8);
}

double CubicAnimationParameters.controlPoint2.getter()
{
  return *(double *)(v0 + 24);
}

void __swiftcall CubicAnimationParameters.init(duration:controlPoint1:controlPoint2:)(ConversationKit::CubicAnimationParameters *__return_ptr retstr, Swift::Double duration, CGPoint controlPoint1, CGPoint controlPoint2)
{
  retstr->double duration = duration;
  retstr->controlPoint1.CGFloat x = controlPoint1.x;
  retstr->controlPoint1.CGFloat y = controlPoint1.y;
  retstr->controlPoint2.CGFloat x = controlPoint2.x;
  retstr->controlPoint2.CGFloat y = controlPoint2.y;
}

id CubicAnimationParameters.cubicTimingParameters.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1698]);
  double v3 = OUTLINED_FUNCTION_41();
  return objc_msgSend(v1, v2, v3);
}

id CubicAnimationParameters.provider.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1698]);
  double v3 = OUTLINED_FUNCTION_41();
  return objc_msgSend(v1, v2, v3);
}

uint64_t getEnumTagSinglePayload for CubicAnimationParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CubicAnimationParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CubicAnimationParameters()
{
  return &type metadata for CubicAnimationParameters;
}

uint64_t VideoMessagePlayerManager.player.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t key path getter for VideoMessagePlayerManager.hostViewController : <A>VideoMessagePlayerManager<A>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)a1 + *(void *)(**(void **)a1 + 128);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for VideoMessagePlayerManager.hostViewController : <A>VideoMessagePlayerManager<A>()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t VideoMessagePlayerManager.hostViewController.getter()
{
  OUTLINED_FUNCTION_50();
  uint64_t v2 = v0 + *(void *)(v1 + 128);
  OUTLINED_FUNCTION_2();
  return MEMORY[0x1C8776240](v2);
}

void VideoMessagePlayerManager.hostViewController.setter(void *a1)
{
}

void (*VideoMessagePlayerManager.hostViewController.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_50();
  uint64_t v5 = *(void *)(v4 + 128);
  *(void *)(v6 + 40) = v5;
  uint64_t v7 = v1 + v5;
  OUTLINED_FUNCTION_6_1();
  v3[3] = MEMORY[0x1C8776240](v7);
  return TapInteraction.view.modify;
}

uint64_t VideoMessagePlayerManager.__allocating_init(videoMessageViewModel:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  VideoMessagePlayerManager.init(videoMessageViewModel:)(a1);
  return v2;
}

uint64_t VideoMessagePlayerManager.init(videoMessageViewModel:)(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1 + *(void *)(*(void *)v1 + 96), 1, 1, *(void *)(*(void *)v1 + 80));
  *(void *)(v1 + *(void *)(*(void *)v1 + 112)) = MEMORY[0x1E4FBC870];
  OUTLINED_FUNCTION_50();
  *(void *)(v1 + *(void *)(v3 + 120)) = 0;
  OUTLINED_FUNCTION_50();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_50();
  *(void *)(v1 + *(void *)(v4 + 104)) = a1;
  return v1;
}

uint64_t VideoMessagePlayerManager.setupVideo(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_9_73();
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  __n128 v10 = MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v19 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(v5 - 8) + 16))((char *)&v19 - v11, a1, v5, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v5);
  OUTLINED_FUNCTION_13_30();
  uint64_t v14 = v2 + *(void *)(v13 + 96);
  OUTLINED_FUNCTION_6_1();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v14, v12, v6);
  swift_endAccess();
  OUTLINED_FUNCTION_9_73();
  id v16 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v15 + 88) + 32))(v5);
  id v17 = implicit closure #1 in VideoMessagePlayerManager.setupVideo(with:)();
  if (v16)
  {
    ((void (*)(void *))v17)(v16);
    swift_release();
  }
  else
  {
    swift_release();
  }
  return VideoMessagePlayerManager.setUpNotifications()();
}

uint64_t (*implicit closure #1 in VideoMessagePlayerManager.setupVideo(with:)())()
{
  return partial apply for implicit closure #2 in implicit closure #1 in VideoMessagePlayerManager.setupVideo(with:);
}

void *VideoMessagePlayerManager.fetchDuration(from:)(void *a1)
{
  uint64_t v3 = v1;
  OUTLINED_FUNCTION_1_122();
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v7 - 8);
  OUTLINED_FUNCTION_6_96();
  uint64_t v9 = *(void **)(v1 + *(void *)(v8 + 104));
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x120))(&v16);
  if ((v16 & 1) == 0)
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v11);
    swift_allocObject();
    OUTLINED_FUNCTION_8_65();
    id v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = *(void *)(v6 + 80);
    v12[5] = *(void *)(v6 + 88);
    v12[6] = v9;
    v12[7] = a1;
    id v13 = a1;
    uint64_t v14 = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v2, (uint64_t)&async function pointer to partial apply for closure #1 in VideoMessagePlayerManager.fetchDuration(from:), (uint64_t)v12);
    outlined destroy of Environment<RedactionReasons>.Content(v2, &demangling cache variable for type metadata for TaskPriority?);
    OUTLINED_FUNCTION_13_30();
    *(void *)(v3 + *(void *)(v15 + 120)) = v14;
    return (void *)swift_release();
  }
  return result;
}

uint64_t VideoMessagePlayerManager.setUpNotifications()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_1_122();
  uint64_t v54 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  OUTLINED_FUNCTION_5_3();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_96();
  uint64_t v9 = *(void *)(v8 + 80);
  OUTLINED_FUNCTION_5_3();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = v0 + *(void *)(v0 + 96);
  OUTLINED_FUNCTION_2();
  if (!__swift_getEnumTagSinglePayload(v15, 1, v9))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v9);
    uint64_t v16 = *(uint64_t (**)(uint64_t))(*(void *)(v54 + 88) + 32);
    uint64_t v53 = *(void *)(v54 + 88);
    id v17 = (void *)v16(v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    if (v17)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
      uint64_t v52 = &v43;
      OUTLINED_FUNCTION_5_3();
      uint64_t v50 = v18;
      uint64_t v51 = v19;
      MEMORY[0x1F4188790](v18);
      OUTLINED_FUNCTION_21();
      uint64_t v46 = v21 - v20;
      uint64_t v45 = type metadata accessor for NSNotificationCenter.Publisher();
      id v48 = &v43;
      OUTLINED_FUNCTION_5_3();
      uint64_t v47 = v22;
      MEMORY[0x1F4188790](v23);
      OUTLINED_FUNCTION_21();
      uint64_t v44 = v25 - v24;
      id v26 = objc_msgSend(self, sel_defaultCenter);
      double v27 = (void *)MEMORY[0x1C87730B0](0xD000000000000028, 0x80000001C37AE260);
      id v28 = v17;
      id v49 = v28;
      NSNotificationCenter.publisher(for:object:)();

      id v55 = objc_msgSend(self, sel_mainRunLoop);
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
      uint64_t v43 = (uint64_t)&v43;
      MEMORY[0x1F4188790](v29 - 8);
      OUTLINED_FUNCTION_21();
      uint64_t v32 = v31 - v30;
      uint64_t v33 = type metadata accessor for NSRunLoop.SchedulerOptions();
      __swift_storeEnumTagSinglePayload(v32, 1, 1, v33);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      uint64_t v34 = v44;
      Publisher.receive<A>(on:options:)();
      outlined destroy of Environment<RedactionReasons>.Content(v32, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

      OUTLINED_FUNCTION_26_2();
      v35();
      swift_allocObject();
      OUTLINED_FUNCTION_8_65();
      uint64_t v36 = (void *)swift_allocObject();
      uint64_t v37 = v53;
      v36[2] = v9;
      v36[3] = v37;
      v36[4] = v34;
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      OUTLINED_FUNCTION_26_2();
      v38();
      OUTLINED_FUNCTION_13_30();
      OUTLINED_FUNCTION_6_1();
      AnyCancellable.store(in:)();
      swift_endAccess();

      swift_release();
    }
  }
  OUTLINED_FUNCTION_13_30();
  id v40 = *(void **)(v2 + *(void *)(v39 + 104));
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v40) + 0x108))();
  swift_allocObject();
  OUTLINED_FUNCTION_8_65();
  id v41 = (void *)swift_allocObject();
  v41[2] = v9;
  v41[3] = *(void *)(v54 + 88);
  v41[4] = v40;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<VideoMessageControlsView.PlayState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_6_1();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void VideoMessagePlayerManager.setupVideo(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVAsset);
  type metadata accessor for URL();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6 - v5, a1);
  id v9 = @nonobjc AVAsset.__allocating_init(url:)(v8);
  id v10 = objc_allocWithZone(MEMORY[0x1E4F16620]);
  id v11 = @nonobjc AVPlayerItem.init(asset:automaticallyLoadedAssetKeys:)(v9, (uint64_t)&outlined read-only object #0 of VideoMessagePlayerManager.setupVideo(with:));
  OUTLINED_FUNCTION_9_73();
  uint64_t v13 = *(void *)(v12 + 80);
  OUTLINED_FUNCTION_9_73();
  uint64_t v15 = *(void *)(v14 + 88);
  uint64_t v16 = *(void (**)(id, uint64_t, uint64_t))(v15 + 40);
  id v17 = v11;
  v16(v11, v13, v15);
  VideoMessagePlayerManager.setupVideo(with:)(a2);
}

id @nonobjc AVAsset.__allocating_init(url:)@<X0>(NSURL *a1@<X8>)
{
  URL._bridgeToObjectiveC()(a1);
  uint64_t v2 = v1;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_assetWithURL_, v1);

  type metadata accessor for URL();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v4();
  return v3;
}

void closure #1 in VideoMessagePlayerManager.setUpNotifications()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  id v10 = (void *)MEMORY[0x1E4FBC8C8];
  if (Strong)
  {
    id v11 = *(id *)(Strong + *(void *)(*(void *)Strong + 104));
    uint64_t v12 = swift_release();
    int v13 = (*(unsigned __int8 (**)(uint64_t))((*v10 & *v11) + 0xF0))(v12);

    if (!v13) {
      goto LABEL_5;
    }
  }
  swift_beginAccess();
  uint64_t v14 = swift_weakLoadStrong();
  if (v14)
  {
    uint64_t v15 = *(id *)(v14 + *(void *)(*(void *)v14 + 104));
    uint64_t v16 = swift_release();
    int v17 = (*(unsigned __int8 (**)(uint64_t))((*v10 & *v15) + 0xF0))(v16);

    if (v17 == 1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v18 = swift_weakLoadStrong();
      if (v18)
      {
        uint64_t v19 = *(id *)(v18 + *(void *)(*(void *)v18 + 104));
        swift_release();
        (*(void (**)(uint64_t))((*v10 & *v19) + 0xF8))(3);
      }
      swift_beginAccess();
      uint64_t v20 = swift_weakLoadStrong();
      if (v20)
      {
        uint64_t v21 = v20 + *(void *)(*(void *)v20 + 96);
        swift_beginAccess();
        if (__swift_getEnumTagSinglePayload(v21, 1, a3))
        {
          swift_release();
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, a3);
          swift_release();
          (*(void (**)(void, void, void, uint64_t, uint64_t))(a4 + 48))(*MEMORY[0x1E4F1FA48], *(void *)(MEMORY[0x1E4F1FA48] + 8), *(void *)(MEMORY[0x1E4F1FA48] + 16), a3, a4);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
        }
      }
    }
  }
}

uint64_t closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    VideoMessagePlayerManager.updatePlayer(with:)(v1);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    VideoMessagePlayerManager.updateHostController(using:)(v1);
    return swift_release();
  }
  return result;
}

uint64_t VideoMessagePlayerManager.updatePlayer(with:)(unsigned __int8 a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t)v1 + *(void *)(*v1 + 96);
  if (a1 > 1u)
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(v2 + 80);
    if (!__swift_getEnumTagSinglePayload(v3, 1, v6))
    {
      v7.n128_u64[0] = 0;
      (*(void (**)(uint64_t, __n128))(*(void *)(v2 + 88) + 16))(v6, v7);
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(v2 + 80);
    if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
    {
      v5.n128_u32[0] = 1.0;
      (*(void (**)(uint64_t, __n128))(*(void *)(v2 + 88) + 16))(v4, v5);
    }
  }
  return swift_endAccess();
}

void VideoMessagePlayerManager.updateHostController(using:)(char a1)
{
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = a1;
  v6[4] = partial apply for closure #1 in VideoMessagePlayerManager.updateHostController(using:);
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = thunk for @escaping @callee_guaranteed () -> ();
  v6[3] = &block_descriptor_73;
  __n128 v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_, v5, 0.25);
  _Block_release(v5);
}

uint64_t closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  return MEMORY[0x1F4188298](closure #1 in VideoMessagePlayerManager.fetchDuration(from:), 0, 0);
}

uint64_t closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_2();
  uint64_t Strong = swift_weakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    v0[11] = type metadata accessor for MainActor();
    v0[12] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return MEMORY[0x1F4188298](closure #1 in VideoMessagePlayerManager.fetchDuration(from:), v3, v2);
  }
  else
  {
    OUTLINED_FUNCTION_6();
    return v4();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  *(void *)(v0 + 104) = objc_msgSend(v1, sel_asset);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AVAsyncProperty<AVAsset, CMTime>);
  uint64_t v1 = static AVPartialAsyncProperty<A>.duration.getter();
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in VideoMessagePlayerManager.fetchDuration(from:);
  return MEMORY[0x1F4182DC0](v0 + 40, v1);
}

{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 104);
  if (v0) {

  }
  swift_release();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 40);
  *(void *)(v0 + 152) = *(void *)(v0 + 56);
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in VideoMessagePlayerManager.fetchDuration(from:), v2, v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  closure #1 in closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(v1);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t closure #1 in closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + *(void *)(*(void *)a1 + 104));
  CMTime.seconds.getter();
  if (v2 <= 0.0) {
    goto LABEL_6;
  }
  if (one-time initialization token for timeFormatter != -1) {
    swift_once();
  }
  id v3 = (id)static NSDateComponentsFormatter.timeFormatter;
  CMTime.seconds.getter();
  id v4 = objc_msgSend(v3, sel_stringFromTimeInterval_);

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
LABEL_6:
    uint64_t v5 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v7 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x158))(v5, v7);
}

void closure #1 in VideoMessagePlayerManager.updateHostController(using:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + *(void *)(*(void *)a1 + 128);
  swift_beginAccess();
  id v4 = (void *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_navigationController);

    if (v6)
    {
      id v7 = objc_msgSend(v6, sel_navigationBar);

      double v8 = 1.0;
      if (!a2) {
        double v8 = 0.0;
      }
      objc_msgSend(v7, sel_setAlpha_, v8);
    }
  }
}

uint64_t VideoMessagePlayerManager.deinit()
{
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v1();

  OUTLINED_FUNCTION_50();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50();
  swift_release();
  OUTLINED_FUNCTION_50();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t VideoMessagePlayerManager.__deallocating_deinit()
{
  VideoMessagePlayerManager.deinit();
  return swift_deallocClassInstance();
}

id protocol witness for VideoMessagePlayer.rate.getter in conformance AVPlayer()
{
  return @nonobjc AVPlayer.rate.getter();
}

id @nonobjc AVPlayer.rate.getter()
{
  return objc_msgSend(v0, sel_rate);
}

id protocol witness for VideoMessagePlayer.rate.setter in conformance AVPlayer()
{
  return @nonobjc AVPlayer.rate.setter();
}

id (*protocol witness for VideoMessagePlayer.rate.modify in conformance AVPlayer(uint64_t a1))(uint64_t a1, double a2)
{
  uint64_t v3 = *v1;
  *(void *)a1 = *v1;
  objc_msgSend(v3, sel_rate);
  *(_DWORD *)(a1 + 8) = v4;
  return protocol witness for VideoMessagePlayer.rate.modify in conformance AVPlayer;
}

id protocol witness for VideoMessagePlayer.rate.modify in conformance AVPlayer(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  return objc_msgSend(*(id *)a1, sel_setRate_, a2);
}

id protocol witness for VideoMessagePlayer.currentItem.getter in conformance AVPlayer()
{
  return @nonobjc AVPlayer.currentItem.getter();
}

Class protocol witness for VideoMessagePlayer.init(playerItem:) in conformance AVPlayer@<X0>(AVPlayerItem_optional a1@<0:X0, 8:X1, 16:W2.1>, Class *a2@<X8>)
{
  Class result = AVPlayer.__allocating_init(playerItem:)(a1).super.isa;
  *a2 = result;
  return result;
}

id protocol witness for VideoMessagePlayer.seek(to:) in conformance AVPlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return @nonobjc AVPlayer.seek(to:)(a1, a2, a3);
}

id @nonobjc AVPlayerItem.init(asset:automaticallyLoadedAssetKeys:)(void *a1, uint64_t a2)
{
  if (a2)
  {
    v4.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }
  id v5 = objc_msgSend(v2, sel_initWithAsset_automaticallyLoadedAssetKeys_, a1, v4.super.isa);

  return v5;
}

uint64_t sub_1C344614C()
{
  return 16;
}

__n128 sub_1C3446158(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of VideoMessagePlayer.rate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VideoMessagePlayer.rate.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of VideoMessagePlayer.rate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of VideoMessagePlayer.currentItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of VideoMessagePlayer.init(playerItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of VideoMessagePlayer.seek(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t type metadata completion function for VideoMessagePlayerManager()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for VideoMessagePlayerManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for VideoMessagePlayerManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VideoMessagePlayerManager);
}

uint64_t dispatch thunk of VideoMessagePlayerManager.__allocating_init(videoMessageViewModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C34462E4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C344631C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = partial apply for closure #1 in closure #1 in CallRecordingViewModel.startCountdown();
  *(_OWORD *)(v2 + 64) = v3;
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C3446408()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in VideoMessagePlayerManager.updateHostController(using:)()
{
  closure #1 in VideoMessagePlayerManager.updateHostController(using:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C344644C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  return closure #2 in VideoMessagePlayerManager.setUpNotifications()(a1);
}

void partial apply for closure #1 in VideoMessagePlayerManager.setUpNotifications()(uint64_t a1)
{
  closure #1 in VideoMessagePlayerManager.setUpNotifications()(a1, v1[4], v1[2], v1[3]);
}

void specialized Array.reserveCapacity(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || a1 > *(void *)(v3 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = v4;
  }
  *uint64_t v1 = v3;
}

void *CellularAudioSampleNormalizer.Constants.numBands.unsafeMutableAddressor()
{
  return &static CellularAudioSampleNormalizer.Constants.numBands;
}

uint64_t static CellularAudioSampleNormalizer.Constants.numBands.getter()
{
  return 14;
}

uint64_t static CellularAudioSampleNormalizer.Errors.== infix(_:_:)()
{
  return 1;
}

void CellularAudioSampleNormalizer.Errors.hash(into:)()
{
}

Swift::Int CellularAudioSampleNormalizer.Errors.hashValue.getter()
{
  return Hasher._finalize()();
}

void CellularAudioSampleNormalizer.frameCount.getter()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    OUTLINED_FUNCTION_50();
    float v2 = (*(float (**)(void))(v1 + 480))();
    OUTLINED_FUNCTION_50();
    float v4 = ceilf(v2 / (*(float (**)(void))(v3 + 504))());
    if ((~LODWORD(v4) & 0x7F800000) != 0)
    {
      if (v4 > -9.2234e18)
      {
        if (v4 < 9.2234e18)
        {
          *(void *)(v0 + 16) = (uint64_t)v4;
          *(unsigned char *)(v0 + 24) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t CellularAudioSampleNormalizer.frameCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 24) = 0;
  return result;
}

void *(*CellularAudioSampleNormalizer.frameCount.modify(uint64_t a1))(void *result)
{
  OUTLINED_FUNCTION_3_7(a1);
  CellularAudioSampleNormalizer.frameCount.getter();
  *uint64_t v1 = v2;
  return CellularAudioSampleNormalizer.frameCount.modify;
}

void *CellularAudioSampleNormalizer.frameCount.modify(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 16) = *result;
  *(unsigned char *)(v1 + 24) = 0;
  return result;
}

void CellularAudioSampleNormalizer.log2FrameCount.getter()
{
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    OUTLINED_FUNCTION_50();
    uint64_t v2 = (*(uint64_t (**)(void))(v1 + 192))();
    double v3 = round(log2((double)v2));
    if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -1.0)
      {
        if (v3 < 1.84467441e19)
        {
          *(void *)(v0 + 32) = (unint64_t)v3;
          *(unsigned char *)(v0 + 40) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t CellularAudioSampleNormalizer.log2FrameCount.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 40) = 0;
  return result;
}

void *(*CellularAudioSampleNormalizer.log2FrameCount.modify(uint64_t a1))(void *result)
{
  OUTLINED_FUNCTION_3_7(a1);
  CellularAudioSampleNormalizer.log2FrameCount.getter();
  *uint64_t v1 = v2;
  return CellularAudioSampleNormalizer.log2FrameCount.modify;
}

void *CellularAudioSampleNormalizer.log2FrameCount.modify(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 32) = *result;
  *(unsigned char *)(v1 + 40) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.bufferSizePowerOf2.getter()
{
  if (*(unsigned char *)(v0 + 56) != 1) {
    return *(void *)(v0 + 48);
  }
  OUTLINED_FUNCTION_50();
  unint64_t v2 = (*(uint64_t (**)(void))(v1 + 216))();
  if (v2 >= 0x40) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = 1 << v2;
  }
  *(void *)(v0 + 48) = result;
  *(unsigned char *)(v0 + 56) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.bufferSizePowerOf2.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 56) = 0;
  return result;
}

void *(*CellularAudioSampleNormalizer.bufferSizePowerOf2.modify(uint64_t a1))(void *result)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.bufferSizePowerOf2.getter();
  return CellularAudioSampleNormalizer.bufferSizePowerOf2.modify;
}

void *CellularAudioSampleNormalizer.bufferSizePowerOf2.modify(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 48) = *result;
  *(unsigned char *)(v1 + 56) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.inputCount.getter()
{
  if (*(unsigned char *)(v0 + 72) != 1) {
    return *(void *)(v0 + 64);
  }
  OUTLINED_FUNCTION_50();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))() / 2;
  *(void *)(v0 + 64) = result;
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.inputCount.setter(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  *(unsigned char *)(v1 + 72) = 0;
  return result;
}

void *(*CellularAudioSampleNormalizer.inputCount.modify(uint64_t a1))(void *result)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.inputCount.getter();
  return CellularAudioSampleNormalizer.inputCount.modify;
}

void *CellularAudioSampleNormalizer.inputCount.modify(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 64) = *result;
  *(unsigned char *)(v1 + 72) = 0;
  return result;
}

float CellularAudioSampleNormalizer.normalizationFactor.getter()
{
  if ((*(unsigned char *)(v0 + 80) & 1) == 0) {
    return *(float *)(v0 + 76);
  }
  OUTLINED_FUNCTION_50();
  float result = 2.0 / (float)(*(uint64_t (**)(void))(v1 + 264))();
  *(float *)(v0 + 76) = result;
  *(unsigned char *)(v0 + 80) = 0;
  return result;
}

void CellularAudioSampleNormalizer.normalizationFactor.setter(float a1)
{
  *(float *)(v1 + 76) = a1;
  *(unsigned char *)(v1 + 80) = 0;
}

uint64_t *(*CellularAudioSampleNormalizer.normalizationFactor.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  *(float *)(a1 + 8) = CellularAudioSampleNormalizer.normalizationFactor.getter();
  return CellularAudioSampleNormalizer.normalizationFactor.modify;
}

uint64_t *CellularAudioSampleNormalizer.normalizationFactor.modify(uint64_t *result)
{
  uint64_t v1 = *result;
  *(_DWORD *)(v1 + 76) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 80) = 0;
  return result;
}

uint64_t key path setter for CellularAudioSampleNormalizer.realBuffer : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 320);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t CellularAudioSampleNormalizer.realBuffer.getter()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    OUTLINED_FUNCTION_50();
    uint64_t v3 = (*(uint64_t (**)(void))(v2 + 264))();
    uint64_t v1 = specialized Array.init(repeating:count:)(v3, 0.0);
    *(void *)(v0 + 88) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CellularAudioSampleNormalizer.realBuffer.setter(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return OUTLINED_FUNCTION_2_110();
}

uint64_t (*CellularAudioSampleNormalizer.realBuffer.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.realBuffer.getter();
  return CellularAudioSampleNormalizer.realBuffer.modify;
}

uint64_t CellularAudioSampleNormalizer.realBuffer.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.realBuffer.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.imagBuffer : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 344);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t CellularAudioSampleNormalizer.imagBuffer.getter()
{
  if (*(void *)(v0 + 96))
  {
    uint64_t v1 = *(void *)(v0 + 96);
  }
  else
  {
    OUTLINED_FUNCTION_50();
    uint64_t v3 = (*(uint64_t (**)(void))(v2 + 264))();
    uint64_t v1 = specialized Array.init(repeating:count:)(v3, 0.0);
    *(void *)(v0 + 96) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CellularAudioSampleNormalizer.imagBuffer.setter(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_2_110();
}

uint64_t (*CellularAudioSampleNormalizer.imagBuffer.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.imagBuffer.getter();
  return CellularAudioSampleNormalizer.imagBuffer.modify;
}

uint64_t CellularAudioSampleNormalizer.imagBuffer.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.imagBuffer.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.transferBuffer : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 368);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t CellularAudioSampleNormalizer.transferBuffer.getter()
{
  if (*(void *)(v0 + 104))
  {
    uint64_t v1 = *(void *)(v0 + 104);
  }
  else
  {
    OUTLINED_FUNCTION_50();
    uint64_t v3 = (*(uint64_t (**)(void))(v2 + 240))();
    uint64_t v1 = specialized Array.init(repeating:count:)(v3, 0.0);
    *(void *)(v0 + 104) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CellularAudioSampleNormalizer.transferBuffer.setter(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return OUTLINED_FUNCTION_2_110();
}

uint64_t (*CellularAudioSampleNormalizer.transferBuffer.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.transferBuffer.getter();
  return CellularAudioSampleNormalizer.transferBuffer.modify;
}

uint64_t CellularAudioSampleNormalizer.transferBuffer.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.transferBuffer.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.magnitudes : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 392);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t CellularAudioSampleNormalizer.magnitudes.getter()
{
  if (*(void *)(v0 + 112))
  {
    uint64_t v1 = *(void *)(v0 + 112);
  }
  else
  {
    OUTLINED_FUNCTION_50();
    uint64_t v3 = (*(uint64_t (**)(void))(v2 + 264))();
    uint64_t v1 = specialized Array.init(repeating:count:)(v3, 0.0);
    *(void *)(v0 + 112) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CellularAudioSampleNormalizer.magnitudes.setter(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  return OUTLINED_FUNCTION_2_110();
}

uint64_t (*CellularAudioSampleNormalizer.magnitudes.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.magnitudes.getter();
  return CellularAudioSampleNormalizer.magnitudes.modify;
}

uint64_t CellularAudioSampleNormalizer.magnitudes.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.magnitudes.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.hannWindow : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 416);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t CellularAudioSampleNormalizer.hannWindow.getter()
{
  if (*(void *)(v0 + 120))
  {
    uint64_t v1 = *(void *)(v0 + 120);
  }
  else
  {
    uint64_t v1 = closure #1 in CellularAudioSampleNormalizer.hannWindow.getter(v0);
    *(void *)(v0 + 120) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t closure #1 in CellularAudioSampleNormalizer.hannWindow.getter(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)a1 + 240);
  uint64_t v2 = v1();
  uint64_t v3 = specialized Array.init(repeating:count:)(v2, 0.0);
  uint64_t v4 = v1();
  if (v4 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    vDSP_Length v5 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v3 = v6;
    }
    vDSP_hann_window((float *)(v3 + 32), v5, 2);
    return v3;
  }
  return result;
}

uint64_t CellularAudioSampleNormalizer.hannWindow.setter(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return OUTLINED_FUNCTION_2_110();
}

uint64_t (*CellularAudioSampleNormalizer.hannWindow.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.hannWindow.getter();
  return CellularAudioSampleNormalizer.hannWindow.modify;
}

uint64_t CellularAudioSampleNormalizer.hannWindow.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.hannWindow.setter);
}

uint64_t CellularAudioSampleNormalizer.realBuffer.modify(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  if ((a2 & 1) == 0) {
    return a3(*a1);
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  a3(v4);
  return swift_bridgeObjectRelease();
}

FFTSetup CellularAudioSampleNormalizer.fftSetup.getter()
{
  if (*(unsigned char *)(v0 + 136) != 1) {
    return *(FFTSetup *)(v0 + 128);
  }
  OUTLINED_FUNCTION_50();
  vDSP_Length v2 = (*(uint64_t (**)(void))(v1 + 216))();
  FFTSetup result = vDSP_create_fftsetup(v2, 0);
  *(void *)(v0 + 128) = result;
  *(unsigned char *)(v0 + 136) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.fftSetup.setter(uint64_t result)
{
  *(void *)(v1 + 128) = result;
  *(unsigned char *)(v1 + 136) = 0;
  return result;
}

void *(*CellularAudioSampleNormalizer.fftSetup.modify(uint64_t a1))(void *result)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = CellularAudioSampleNormalizer.fftSetup.getter();
  return CellularAudioSampleNormalizer.fftSetup.modify;
}

void *CellularAudioSampleNormalizer.fftSetup.modify(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 128) = *result;
  *(unsigned char *)(v1 + 136) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.tapType.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t CellularAudioSampleNormalizer.tapType.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = OUTLINED_FUNCTION_18_0();
  *(unsigned char *)(v1 + 137) = v2;
  return result;
}

uint64_t (*CellularAudioSampleNormalizer.tapType.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

float CellularAudioSampleNormalizer.sampleRate.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(float *)(v0 + 140);
}

uint64_t CellularAudioSampleNormalizer.sampleRate.setter(float a1)
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  *(float *)(v1 + 140) = a1;
  return result;
}

uint64_t (*CellularAudioSampleNormalizer.sampleRate.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

float CellularAudioSampleNormalizer.refreshFrequency.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(float *)(v0 + 144);
}

uint64_t CellularAudioSampleNormalizer.refreshFrequency.setter(float a1)
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  *(float *)(v1 + 144) = a1;
  return result;
}

uint64_t (*CellularAudioSampleNormalizer.refreshFrequency.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t CellularAudioSampleNormalizer.__allocating_init(with:)(char a1)
{
  char v1 = a1 & 1;
  uint64_t v2 = swift_allocObject();
  CellularAudioSampleNormalizer.init(with:)(v1);
  return v2;
}

uint64_t CellularAudioSampleNormalizer.init(with:)(char a1)
{
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 72) = 1;
  *(_DWORD *)(v1 + 76) = 0;
  *(unsigned char *)(v1 + 80) = 1;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(unsigned char *)(v1 + 136) = 1;
  *(void *)(v1 + 140) = 0x41A00000473B8000;
  *(unsigned char *)(v1 + 137) = a1 & 1;
  return v1;
}

uint64_t CellularAudioSampleNormalizer.deinit()
{
  OUTLINED_FUNCTION_50();
  uint64_t v2 = (OpaqueFFTSetup *)(*(uint64_t (**)(void))(v1 + 432))();
  vDSP_destroy_fftsetup(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CellularAudioSampleNormalizer.__deallocating_deinit()
{
  CellularAudioSampleNormalizer.deinit();
  return swift_deallocClassInstance();
}

uint64_t CellularAudioSampleNormalizer.process(_:sampleCount:)(const float *a1, unsigned int a2)
{
  uint64_t result = CellularAudioSampleNormalizer.fft(samples:count:)(a1, a2);
  if (!v2)
  {
    CellularAudioSampleNormalizer.bin(fftSamples:)(result);
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t CellularAudioSampleNormalizer.fft(samples:count:)(const float *a1, unsigned int a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = specialized Array.init(repeating:count:)(a2, 0.0);
  OUTLINED_FUNCTION_50();
  v6 += 33;
  id v7 = *v6;
  if ((*v6)() >= a2)
  {
    double v27 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v2 + 328))(v31);
    uint64_t v14 = v13;
    uint64_t v15 = *v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v14 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t v15 = v25;
      *uint64_t v14 = v25;
    }
    int v17 = *(float **)(v15 + 16);
    v30[0] = (float *)(v15 + 32);
    v30[1] = v17;
    uint64_t v18 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 352))(v29);
    uint64_t v20 = v19;
    uint64_t v21 = *v19;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v20 = v21;
    if ((v22 & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t v21 = v26;
      *uint64_t v20 = v26;
    }
    uint64_t v23 = *(float **)(v21 + 16);
    v28[0] = (float *)(v21 + 32);
    v28[1] = v23;
    closure #1 in closure #1 in CellularAudioSampleNormalizer.fft(samples:count:)(v28, v30, a1, v3, a2, (uint64_t)&v32);
    *uint64_t v20 = v21;
    v18(v29, 0);
    *uint64_t v14 = v15;
    v27(v31, 0);
    return v32;
  }
  else
  {
    if (one-time initialization token for audioNormalizer != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.audioNormalizer);
    swift_retain();
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 67109376;
      uint64_t v12 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 8) = 2048;
      v31[0] = ((uint64_t (*)(uint64_t))v7)(v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl(&dword_1C2F90000, v9, v10, "Invalid sample. count (%u) > bufferSize (%ld)", (uint8_t *)v11, 0x12u);
      MEMORY[0x1C87760E0](v11, -1, -1);
    }
    else
    {

      swift_release();
    }
    lazy protocol witness table accessor for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors();
    swift_allocError();
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
}

void CellularAudioSampleNormalizer.bin(fftSamples:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v4 + 16) = 14;
  *(_OWORD *)(v4 + 32) = 0u;
  uint64_t v36 = v4 + 32;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(void *)(v4 + 80) = 0;
  uint64_t v5 = *(float (**)(void))(*(void *)v1 + 480);
  float v6 = v5();
  uint64_t v37 = *(void *)(a1 + 16);
  float v7 = (float)(100.0 / v6) * (float)v37;
  if ((~LODWORD(v7) & 0x7F800000) == 0)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v7 <= -9.2234e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v7 >= 9.2234e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  float v8 = (float)(8000.0 / v5()) * (float)v37;
  if ((~LODWORD(v8) & 0x7F800000) == 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v8 <= -9.2234e18)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v8 >= 9.2234e18)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v9 = (uint64_t)v7;
  uint64_t v10 = (uint64_t)v8;
  if ((uint64_t)v8 < (uint64_t)v7)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (!__OFSUB__((uint64_t)v8, (uint64_t)v7))
  {
    float v11 = (float)((uint64_t)v8 - (uint64_t)v7);
    uint64_t v35 = a1 + 32;
    unint64_t v12 = v9;
    uint64_t v38 = v4;
    while (1)
    {
      if (__OFSUB__(v12, v9))
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      float v13 = (float)((float)(uint64_t)(v12 - v9) * 14.0) / v11;
      if ((LODWORD(v13) & 0x7F800000) != 0x7F800000 || (LODWORD(v13) & 0x7FFFFF) == 0)
      {
        if ((LODWORD(v13) & 0x7F800000) == 0x7F800000) {
          goto LABEL_53;
        }
        if (v13 <= -9.2234e18) {
          goto LABEL_54;
        }
        if (v13 >= 9.2234e18) {
          goto LABEL_55;
        }
        unint64_t v15 = (uint64_t)v13;
        if ((uint64_t)v13 <= 13)
        {
          if (v12 >= v37) {
            goto LABEL_58;
          }
          if ((v15 & 0x8000000000000000) != 0) {
            goto LABEL_59;
          }
          if (*(void *)(v4 + 16) <= v15) {
            goto LABEL_60;
          }
          *(float *)(v36 + 4 * v15) = *(float *)(v35 + 4 * v12) + *(float *)(v36 + 4 * v15);
        }
      }
      else
      {
        (*(void (**)(void))(*(void *)v2 + 456))();
        if (one-time initialization token for audioNormalizer != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        __swift_project_value_buffer(v16, (uint64_t)static Logger.audioNormalizer);
        int v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = swift_slowAlloc();
          uint64_t v20 = swift_slowAlloc();
          uint64_t v39 = v20;
          *(_DWORD *)uint64_t v19 = 136315138;
          uint64_t v21 = String.init<A>(reflecting:)();
          *(void *)(v19 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v39);
          uint64_t v4 = v38;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v17, v18, "current band for tapType %s is NaN", (uint8_t *)v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v20, -1, -1);
          MEMORY[0x1C87760E0](v19, -1, -1);
        }
      }
      if (v10 == v12) {
        break;
      }
      if (__OFADD__(v12++, 1)) {
        goto LABEL_51;
      }
    }
    unint64_t v24 = 0;
    uint64_t v25 = *(uint64_t (**)(void))(*(void *)v2 + 456);
    while (1)
    {
      char v26 = v25();
      unint64_t v27 = *(void *)(v4 + 16);
      if (v26)
      {
        if (v24 >= v27) {
          goto LABEL_57;
        }
        unint64_t v28 = v4 + 4 * v24;
        float v29 = *(float *)(v28 + 32) * 3.0;
      }
      else
      {
        if (v24 >= v27) {
          goto LABEL_56;
        }
        unint64_t v28 = v4 + 4 * v24;
        float v29 = *(float *)(v28 + 32) * 6.0;
      }
      *(float *)(v28 + 32) = v29;
      if (v24 >= v27) {
        break;
      }
      float v30 = powf(v29, 0.66667);
      if (v30 <= 1.0) {
        float v31 = v30;
      }
      else {
        float v31 = 1.0;
      }
      float v32 = (float)(uint64_t)v24;
      if (v24 > 4) {
        float v33 = (float)((float)(v32 + -5.0) * -0.08) + 1.0;
      }
      else {
        float v33 = (float)(powf(v32 * 0.4, 0.33333) * 0.5) + 0.5;
      }
      float v34 = v31 * v33;
      if (v34 > 1.0) {
        float v34 = 1.0;
      }
      *(float *)(v4 + 4 * v24++ + 32) = v34;
      if (v24 == 14) {
        return;
      }
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_68:
  __break(1u);
}

uint64_t protocol witness for AudioSampleNormalizer.sampleRate.getter in conformance CellularAudioSampleNormalizer()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 480))();
}

uint64_t protocol witness for AudioSampleNormalizer.refreshFrequency.getter in conformance CellularAudioSampleNormalizer()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 504))();
}

uint64_t protocol witness for AudioSampleNormalizer.tapType.getter in conformance CellularAudioSampleNormalizer()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 456))() & 1;
}

uint64_t protocol witness for AudioSampleNormalizer.process(_:sampleCount:) in conformance CellularAudioSampleNormalizer()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 536))();
}

uint64_t protocol witness for AudioSampleNormalizer.init(with:) in conformance CellularAudioSampleNormalizer@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 528))(a1 & 1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CellularAudioSampleNormalizer()
{
  swift_getWitnessTable();
  return AudioSampleNormalizer.description.getter();
}

uint64_t closure #1 in closure #1 in CellularAudioSampleNormalizer.fft(samples:count:)(float **a1, float **a2, const float *a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  __B[4] = *MEMORY[0x1E4F143B8];
  if (!*a2)
  {
    __break(1u);
    goto LABEL_8;
  }
  float v6 = *a1;
  if (!*a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __Z.realp = *a2;
  __Z.imagp = v6;
  uint64_t v10 = (const float *)((*(uint64_t (**)(void))(*(void *)a4 + 408))() + 32);
  float v11 = *(uint64_t (**)(void *))(*(void *)a4 + 376);
  unint64_t v12 = (void (*)(void *, void))v11(__B);
  uint64_t v14 = v13;
  specialized Array.reserveCapacity(_:)(0);
  uint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  vDSP_Length v38 = a5;
  vDSP_vmul(a3, 1, v10, 1, (float *)(v15 + 32), 1, a5);
  v12(__B, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t (*)(void *, void))v11(__B);
  os_log_type_t v18 = v17;
  uint64_t v19 = *v17;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *os_log_type_t v18 = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v19 = v36;
    *os_log_type_t v18 = v36;
  }
  (*(void (**)(void))(*(void *)a4 + 360))();
  swift_bridgeObjectRelease();
  vDSP_ctoz(v19 + 4, 2, &__Z, 1, a5);
  *os_log_type_t v18 = v19;
  uint64_t v21 = v16(__B, 0);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 432))(v21);
  if (!v22) {
LABEL_9:
  }
    __break(1u);
  uint64_t v23 = (OpaqueFFTSetup *)v22;
  vDSP_Length v24 = (*(uint64_t (**)(void))(*(void *)a4 + 216))();
  vDSP_fft_zrip(v23, &__Z, 1, v24, 1);
  uint64_t v25 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)a4 + 400))(__B);
  unint64_t v27 = v26;
  specialized Array.reserveCapacity(_:)(0);
  uint64_t v28 = *v27;
  swift_bridgeObjectRetain();
  vDSP_zvmags(&__Z, 1, (float *)(v28 + 32), 1, a5);
  v25(__B, 0);
  uint64_t v29 = swift_bridgeObjectRelease();
  float v30 = *(uint64_t (**)(uint64_t))(*(void *)a4 + 384);
  __B[0] = v30(v29);
  MEMORY[0x1F4188790](*(void *)(__B[0] + 16));
  uint64_t v32 = specialized Array.init(_unsafeUninitializedCapacity:initializingWith:)(v31, (uint64_t (*)(void *, uint64_t *))partial apply for specialized closure #1 in static vForce.sqrt<A>(_:));
  swift_bridgeObjectRelease();
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 392))(v32);
  float v34 = (const float *)(v30(v33) + 32);
  LODWORD(__B[0]) = (*(float (**)(void))(*(void *)a4 + 288))();
  specialized Array.reserveCapacity(_:)(0);
  vDSP_vsmul(v34, 1, (const float *)__B, (float *)(*(void *)a6 + 32), 1, v38);
  return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors()
{
  unint64_t result = lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors;
  if (!lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors;
  if (!lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for CellularAudioSampleNormalizer(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CellularAudioSampleNormalizer()
{
  return self;
}

uint64_t sub_1C34485E4()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 192))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3448624()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1C3448668()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 216))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C34486A8()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1C34486EC()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C344872C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1C3448770()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 264))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C34487B8()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 272))();
}

void sub_1C3448804()
{
  OUTLINED_FUNCTION_6_4();
  *uint64_t v0 = (*(float (**)(void))(v1 + 288))();
}

uint64_t sub_1C344884C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t sub_1C3448898()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 312))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C34488E4()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 336))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3448930()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 360))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C344897C()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 384))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C34489C8()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 408))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3448A14()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 432))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3448A5C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t sub_1C3448AA8()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 456))();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_1C3448AF4()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 464))();
}

void sub_1C3448B40()
{
  OUTLINED_FUNCTION_6_4();
  *uint64_t v0 = (*(float (**)(void))(v1 + 480))();
}

uint64_t sub_1C3448B88()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 488))();
}

void sub_1C3448BD4()
{
  OUTLINED_FUNCTION_6_4();
  *uint64_t v0 = (*(float (**)(void))(v1 + 504))();
}

uint64_t sub_1C3448C1C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t method lookup function for CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CellularAudioSampleNormalizer);
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.frameCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.frameCount.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.frameCount.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.log2FrameCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.log2FrameCount.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.log2FrameCount.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.bufferSizePowerOf2.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.bufferSizePowerOf2.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.bufferSizePowerOf2.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.inputCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.inputCount.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.inputCount.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.normalizationFactor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.normalizationFactor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.normalizationFactor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.realBuffer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.realBuffer.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.realBuffer.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.imagBuffer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.imagBuffer.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.imagBuffer.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.transferBuffer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.transferBuffer.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.transferBuffer.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.magnitudes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.magnitudes.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.magnitudes.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.hannWindow.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.hannWindow.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.hannWindow.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.fftSetup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.fftSetup.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.fftSetup.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.tapType.getter()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 456))() & 1;
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.tapType.setter()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.tapType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.sampleRate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.sampleRate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.sampleRate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.refreshFrequency.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.refreshFrequency.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.refreshFrequency.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.__allocating_init(with:)(char a1)
{
  return (*(uint64_t (**)(void))(v1 + 528))(a1 & 1);
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.process(_:sampleCount:)()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 536))();
}

ValueMetadata *type metadata accessor for CellularAudioSampleNormalizer.Constants()
{
  return &type metadata for CellularAudioSampleNormalizer.Constants;
}

unsigned char *storeEnumTagSinglePayload for CellularAudioSampleNormalizer.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C344949CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularAudioSampleNormalizer.Errors()
{
  return &type metadata for CellularAudioSampleNormalizer.Errors;
}

void specialized closure #1 in static vForce.sqrt<A>(_:)(uint64_t a1, void *a2, uint64_t a3)
{
  *a2 = *(void *)(a3 + 16);
}

uint64_t specialized Array.init(_unsafeUninitializedCapacity:initializingWith:)(uint64_t result, uint64_t (*a2)(void *, uint64_t *))
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  if (result)
  {
    uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v5 + 16) = v4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = v5 + 32;
  v7[1] = v4;
  uint64_t v8 = 0;
  v7[0] = v5 + 32;
  uint64_t result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(void *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(void *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void specialized static vForce.sqrt<A, B>(_:result:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 8))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 >> 31)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  int v3 = *(void *)(a1 + 16);
  if (!*(void *)a2) {
    goto LABEL_7;
  }
  vvsqrtf(*(float **)a2, (const float *)(a1 + 32), &v3);
}

void specialized closure #1 in static vForce.sqrt<A>(_:)(uint64_t a1, void *a2, uint64_t *a3)
{
}

void partial apply for specialized closure #1 in static vForce.sqrt<A>(_:)(uint64_t a1, void *a2)
{
  specialized closure #1 in static vForce.sqrt<A>(_:)(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t *CallRecordingAvailabilityManager.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static CallRecordingAvailabilityManager.shared;
}

BOOL static CallRecordingAvailability.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void CallRecordingAvailability.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int CallRecordingAvailability.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t CallRecordingAvailabilityManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static CallRecordingAvailabilityManager.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static CallRecordingAvailabilityManager.shared.setter(uint64_t a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  static CallRecordingAvailabilityManager.shared = a1;
  return swift_release();
}

uint64_t (*static CallRecordingAvailabilityManager.shared.modify())()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t CallRecordingAvailabilityManager.availability.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AppleIntelligenceAvailability();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (unsigned __int8 *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static AppleIntelligenceManager.shared) + 0x50);
  uint64_t v6 = static AppleIntelligenceManager.shared;
  v5();

  int v7 = *v4;
  outlined destroy of AppleIntelligenceAvailability((uint64_t)v4);
  uint64_t result = TUCallTranscriptionSupported();
  if (result) {
    char v9 = 2;
  }
  else {
    char v9 = 3;
  }
  if (!v7) {
    char v9 = result;
  }
  *a1 = v9;
  return result;
}

uint64_t CallRecordingAvailabilityManager.deinit()
{
  return v0;
}

uint64_t CallRecordingAvailabilityManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t CallRecordingAvailabilityManager.init()()
{
  return v0;
}

uint64_t outlined destroy of AppleIntelligenceAvailability(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppleIntelligenceAvailability();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type CallRecordingAvailability and conformance CallRecordingAvailability()
{
  unint64_t result = lazy protocol witness table cache variable for type CallRecordingAvailability and conformance CallRecordingAvailability;
  if (!lazy protocol witness table cache variable for type CallRecordingAvailability and conformance CallRecordingAvailability)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingAvailability and conformance CallRecordingAvailability);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CallRecordingAvailability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3449C50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingAvailability()
{
  return &type metadata for CallRecordingAvailability;
}

uint64_t type metadata accessor for CallRecordingAvailabilityManager()
{
  return self;
}

uint64_t method lookup function for CallRecordingAvailabilityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallRecordingAvailabilityManager);
}

uint64_t dispatch thunk of CallRecordingAvailabilityManager.availability.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of CallRecordingAvailabilityManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

double ShutterModel.maxTime.getter()
{
  return *(double *)(v0 + 16);
}

void key path getter for ShutterModel.targetPercentComplete : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 176))();
}

uint64_t key path setter for ShutterModel.targetPercentComplete : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 184))(*a1);
}

double ShutterModel.targetPercentComplete.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1C3449DAC(double *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  *a1 = (*(double (**)(void))(v2 + 176))();
}

uint64_t sub_1C3449DF0()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t ShutterModel.targetPercentComplete.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ShutterModel.targetPercentComplete.modify())()
{
  Swift::UInt v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$targetPercentComplete : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 208))(v7);
}

uint64_t ShutterModel.$targetPercentComplete.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__targetPercentComplete, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$targetPercentComplete.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_2_1();
  v6();
  OUTLINED_FUNCTION_5_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

void (*ShutterModel.$targetPercentComplete.modify())(uint64_t a1, char a2)
{
  Swift::UInt v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$targetPercentComplete.modify;
}

void ShutterModel.$targetPercentComplete.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for ShutterModel.isActive : ShutterModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShutterModel.isActive : ShutterModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 232))(*a1);
}

uint64_t ShutterModel.isActive.getter()
{
  return ShutterModel.isActive.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C344A128@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 224))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C344A170()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t ShutterModel.isActive.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t (*ShutterModel.isActive.modify())()
{
  Swift::UInt v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$isActive : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 256))(v7);
}

uint64_t ShutterModel.$isActive.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShutterModel.$isActive.setter(uint64_t a1)
{
  return ShutterModel.$isActive.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void (*ShutterModel.$isActive.modify())(uint64_t a1, char a2)
{
  Swift::UInt v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = malloc(v5);
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$isActive.modify;
}

void ShutterModel.$isActive.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for ShutterModel.mode : ShutterModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 272))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ShutterModel.mode : ShutterModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 280))(*a1);
}

uint64_t ShutterModel.mode.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C344A544@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 272))();
  *a1 = result;
  return result;
}

uint64_t sub_1C344A590()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 280))(*v1);
}

uint64_t ShutterModel.mode.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*ShutterModel.mode.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$mode : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 304))(v7);
}

uint64_t ShutterModel.$mode.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode, &demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
}

uint64_t ShutterModel.$mode.setter(uint64_t a1)
{
  return ShutterModel.$isActive.setter(a1, &demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode, &demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
}

void (*ShutterModel.$mode.modify())(uint64_t a1, char a2)
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = malloc(v5);
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$mode.modify;
}

void ShutterModel.$mode.modify(uint64_t a1, char a2)
{
}

void ShutterModel.$isActive.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  size_t v5 = *(void **)(*(void *)a1 + 48);
  uint64_t v6 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v7 = v4[4];
    uint64_t v8 = v4[5];
    OUTLINED_FUNCTION_2_1();
    v9();
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 56));
  }
  free(v6);
  free(v5);
  free(v4);
}

void key path getter for ShutterModel.diameter : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 320))();
}

uint64_t key path setter for ShutterModel.diameter : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 328))(*a1);
}

double ShutterModel.diameter.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1C344AA2C(double *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  *a1 = (*(double (**)(void))(v2 + 320))();
}

uint64_t sub_1C344AA78()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t ShutterModel.diameter.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

uint64_t (*ShutterModel.diameter.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$diameter : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 352))(v7);
}

uint64_t ShutterModel.$diameter.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__diameter, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$diameter.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1);
}

void (*ShutterModel.$diameter.modify())(uint64_t a1, char a2)
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$diameter.modify;
}

void ShutterModel.$diameter.modify(uint64_t a1, char a2)
{
}

void ShutterModel.$targetPercentComplete.modify(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  size_t v5 = *(void **)a1;
  uint64_t v6 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v7 = v5[5];
    uint64_t v8 = v5[4];
    MEMORY[0x1F4188790](a1);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_2_1();
    v9();
    a3(v3);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    a3(*(void *)(*(void *)a1 + 56));
  }
  free(v6);
  free(v5);
}

void key path getter for ShutterModel.lineThickness : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 368))();
}

uint64_t key path setter for ShutterModel.lineThickness : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 376))(*a1);
}

double ShutterModel.lineThickness.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1C344AEAC(double *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  *a1 = (*(double (**)(void))(v2 + 368))();
}

uint64_t sub_1C344AEF8()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t ShutterModel.lineThickness.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

uint64_t (*ShutterModel.lineThickness.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$lineThickness : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 400))(v7);
}

uint64_t ShutterModel.$lineThickness.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__lineThickness, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$lineThickness.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1);
}

void (*ShutterModel.$lineThickness.modify())(uint64_t a1, char a2)
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$lineThickness.modify;
}

void ShutterModel.$lineThickness.modify(uint64_t a1, char a2)
{
}

void key path getter for ShutterModel.gapWidth : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 416))();
}

uint64_t key path setter for ShutterModel.gapWidth : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 424))(*a1);
}

double ShutterModel.gapWidth.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1C344B258(double *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  *a1 = (*(double (**)(void))(v2 + 416))();
}

uint64_t sub_1C344B2A4()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t ShutterModel.gapWidth.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

uint64_t (*ShutterModel.gapWidth.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$gapWidth : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 448))(v7);
}

uint64_t ShutterModel.$gapWidth.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__gapWidth, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$gapWidth.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1);
}

void (*ShutterModel.$gapWidth.modify())(uint64_t a1, char a2)
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$gapWidth.modify;
}

void ShutterModel.$gapWidth.modify(uint64_t a1, char a2)
{
}

void key path getter for ShutterModel.actualPercentComplete : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 464))();
}

uint64_t key path setter for ShutterModel.actualPercentComplete : ShutterModel()
{
  return ShutterModel.actualPercentComplete.setter();
}

double ShutterModel.actualPercentComplete.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1C344B648(double *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  *a1 = (*(double (**)(void))(v2 + 464))();
}

uint64_t sub_1C344B694()
{
  return ShutterModel.actualPercentComplete.setter();
}

uint64_t ShutterModel.actualPercentComplete.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

uint64_t key path setter for ShutterModel.$actualPercentComplete : ShutterModel(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  __n128 v3 = MEMORY[0x1F4188790](v2);
  size_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return ShutterModel.$actualPercentComplete.setter((uint64_t)v5);
}

uint64_t ShutterModel.$actualPercentComplete.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__actualPercentComplete, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$actualPercentComplete.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1);
}

uint64_t key path getter for ShutterModel.showsProgress : ShutterModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 512))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShutterModel.showsProgress : ShutterModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 520))(*a1);
}

uint64_t ShutterModel.showsProgress.getter()
{
  return ShutterModel.isActive.getter();
}

uint64_t sub_1C344BA44@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 512))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C344BA94()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t ShutterModel.showsProgress.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t (*ShutterModel.showsProgress.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShutterModel.$showsProgress : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 544))(v7);
}

uint64_t ShutterModel.$showsProgress.getter()
{
  return ShutterModel.$targetPercentComplete.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShutterModel.$targetPercentComplete.getter(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t ShutterModel.$showsProgress.setter(uint64_t a1)
{
  return ShutterModel.$isActive.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShutterModel.$isActive.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_2_1();
  v10();
  OUTLINED_FUNCTION_5_11();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
}

void (*ShutterModel.$showsProgress.modify())(uint64_t a1, char a2)
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v0 + 48) = malloc(v5);
  uint64_t v6 = malloc(v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShutterModel.$showsProgress.modify;
}

void ShutterModel.$showsProgress.modify(uint64_t a1, char a2)
{
}

uint64_t ShutterModel.__allocating_init(_:)(double a1)
{
  uint64_t v2 = swift_allocObject();
  ShutterModel.init(_:)(a1);
  return v2;
}

uint64_t ShutterModel.init(_:)(double a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
  OUTLINED_FUNCTION_4();
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_21();
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_21();
  uint64_t v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  Published.init(initialValue:)();
  uint64_t v16 = *(void (**)(void))(v14 + 32);
  OUTLINED_FUNCTION_8_66();
  v16();
  uint64_t v17 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive;
  Published.init(initialValue:)();
  unint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v27(v17, v12, v28);
  uint64_t v18 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v18, v7, v25);
  OUTLINED_FUNCTION_21_42();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_16_45();
  Published.init(initialValue:)();
  OUTLINED_FUNCTION_8_66();
  v16();
  OUTLINED_FUNCTION_21_42();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_16_45();
  OUTLINED_FUNCTION_20_44(0x4012000000000000);
  OUTLINED_FUNCTION_8_66();
  v16();
  OUTLINED_FUNCTION_21_42();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_16_45();
  OUTLINED_FUNCTION_20_44(0x4008000000000000);
  OUTLINED_FUNCTION_8_66();
  v16();
  OUTLINED_FUNCTION_21_42();
  MEMORY[0x1F4188790](v22);
  Published.init(initialValue:)();
  OUTLINED_FUNCTION_8_66();
  v16();
  uint64_t v23 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress;
  Published.init(initialValue:)();
  v27(v23, v12, v28);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerUpdateInterval) = 0x3F91111111111111;
  *(double *)(v1 + 16) = a1;
  return v1;
}

Swift::Void __swiftcall ShutterModel.start()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v3 + 232))(0);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink;
  if (!*(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink))
  {
    uint64_t v5 = swift_allocObject();
    *(double *)(v5 + 16) = (*(double (**)(void))(*(void *)v0 + 176))() * v0[2];
    (*(void (**)(double))(*(void *)v0 + 184))(1.0);
    type metadata accessor for NSTimer();
    id v6 = objc_msgSend(self, sel_mainRunLoop);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
    MEMORY[0x1F4188790](v7 - 8);
    OUTLINED_FUNCTION_64();
    uint64_t v8 = type metadata accessor for NSRunLoop.SchedulerOptions();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v8);
    static NSTimer.publish(every:tolerance:on:in:options:)();

    outlined destroy of NSRunLoop.SchedulerOptions?(v1);
    type metadata accessor for NSTimer.TimerPublisher();
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher();
    ConnectablePublisher.autoconnect()();
    swift_release();
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v5;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>();
    uint64_t v11 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(void *)((char *)v2 + v4) = v11;
    swift_release();
    swift_release();
  }
}

uint64_t sub_1C344C50C()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher()
{
  unint64_t result = lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher;
  if (!lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher)
  {
    type metadata accessor for NSTimer.TimerPublisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher);
  }
  return result;
}

uint64_t sub_1C344C560()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in ShutterModel.start()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = (double *)result;
    double v6 = *(double *)(result + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerUpdateInterval);
    swift_beginAccess();
    double v7 = v6 + *(double *)(a3 + 16);
    *(double *)(a3 + 16) = v7;
    double v8 = v5[2];
    *(double *)((char *)v5 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete) = v7 / v8;
    ShutterModel.actualPercentComplete.setter();
    uint64_t v9 = swift_beginAccess();
    if (v8 <= *(double *)(a3 + 16)) {
      (*(void (**)(uint64_t))(*(void *)v5 + 632))(v9);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C344C694()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShutterModel.start()(uint64_t a1)
{
  return closure #1 in ShutterModel.start()(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>;
  if (!lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>);
  }
  return result;
}

Swift::Void __swiftcall ShutterModel.pause()()
{
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink) = 0;
  swift_release();
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v1 + 184))();
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)v0 + 232);
  v2(1);
}

Swift::Void __swiftcall ShutterModel.stop()()
{
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete) = 0;
  ShutterModel.actualPercentComplete.setter();
  OUTLINED_FUNCTION_50();
  (*(void (**)(double))(v1 + 184))(0.0);
  uint64_t v2 = *(void (**)(void))(*(void *)v0 + 624);
  v2();
}

uint64_t ShutterModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__targetPercentComplete;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(v1, v2);
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_0();
  double v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v10 + 8))(v9);
  uint64_t v11 = OUTLINED_FUNCTION_7_88(OBJC_IVAR____TtC15ConversationKit12ShutterModel__diameter);
  ((void (*)(uint64_t))v4)(v11);
  uint64_t v12 = OUTLINED_FUNCTION_7_88(OBJC_IVAR____TtC15ConversationKit12ShutterModel__lineThickness);
  ((void (*)(uint64_t))v4)(v12);
  uint64_t v13 = OUTLINED_FUNCTION_7_88(OBJC_IVAR____TtC15ConversationKit12ShutterModel__gapWidth);
  ((void (*)(uint64_t))v4)(v13);
  uint64_t v14 = OUTLINED_FUNCTION_7_88(OBJC_IVAR____TtC15ConversationKit12ShutterModel__actualPercentComplete);
  ((void (*)(uint64_t))v4)(v14);
  v8(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress, v6);
  swift_release();
  return v0;
}

uint64_t ShutterModel.__deallocating_deinit()
{
  ShutterModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ShutterModel@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ShutterModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C344CA4C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1C344CA8C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1C344CACC()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t sub_1C344CB14()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t sub_1C344CB5C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t sub_1C344CBA4()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t sub_1C344CBEC()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 488))();
}

uint64_t sub_1C344CC34()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 536))();
}

uint64_t ObjC metadata update function for ShutterModel()
{
  return type metadata accessor for ShutterModel();
}

uint64_t type metadata accessor for ShutterModel()
{
  uint64_t result = type metadata singleton initialization cache for ShutterModel;
  if (!type metadata singleton initialization cache for ShutterModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for ShutterModel()
{
  type metadata accessor for Published<CGFloat>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for ShutterModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShutterModel);
}

uint64_t dispatch thunk of ShutterModel.targetPercentComplete.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ShutterModel.targetPercentComplete.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ShutterModel.targetPercentComplete.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ShutterModel.$targetPercentComplete.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ShutterModel.$targetPercentComplete.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ShutterModel.$targetPercentComplete.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ShutterModel.isActive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ShutterModel.isActive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ShutterModel.isActive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ShutterModel.$isActive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ShutterModel.$isActive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ShutterModel.$isActive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ShutterModel.mode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ShutterModel.mode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ShutterModel.mode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ShutterModel.$mode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ShutterModel.$mode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of ShutterModel.$mode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ShutterModel.diameter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of ShutterModel.diameter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ShutterModel.diameter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of ShutterModel.$diameter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of ShutterModel.$diameter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of ShutterModel.$diameter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of ShutterModel.lineThickness.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of ShutterModel.lineThickness.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of ShutterModel.lineThickness.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of ShutterModel.$lineThickness.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of ShutterModel.$lineThickness.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of ShutterModel.$lineThickness.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of ShutterModel.gapWidth.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of ShutterModel.gapWidth.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ShutterModel.gapWidth.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of ShutterModel.$gapWidth.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ShutterModel.$gapWidth.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of ShutterModel.$gapWidth.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of ShutterModel.actualPercentComplete.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of ShutterModel.$actualPercentComplete.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of ShutterModel.showsProgress.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of ShutterModel.showsProgress.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of ShutterModel.showsProgress.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of ShutterModel.$showsProgress.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of ShutterModel.$showsProgress.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of ShutterModel.$showsProgress.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of ShutterModel.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 608))();
}

uint64_t dispatch thunk of ShutterModel.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of ShutterModel.pause()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of ShutterModel.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

void type metadata accessor for Published<CGFloat>()
{
  if (!lazy cache variable for type metadata for Published<CGFloat>)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<CGFloat>);
    }
  }
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didTapBuzz:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didApprove:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didKick:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

void HUDActivityManager.BannerUpdate.init(score:type:requestedSizeClass:temporary:associatedCall:uuid:controlsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = *v23;
  uint64_t v25 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v26 = v22 + v25[11];
  *(void *)(v26 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)uint64_t v22 = v24;
  outlined init with copy of ConversationControlsType(v20, v22 + 8);
  *(void *)(v22 + 56) = v18;
  *(unsigned char *)(v22 + 64) = v16 & 1;
  *(void *)(v26 + 8) = v12;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(v22 + 65) = v14;
  uint64_t v27 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  uint64_t v29 = v28;
  OUTLINED_FUNCTION_2_1();
  v30();
  uint64_t v31 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v33 = v32;
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_21();
  uint64_t v37 = v36 - v35;
  static Date.now.getter();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v10, v27);
  outlined destroy of ConversationControlsType(v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v22 + v25[9], v37, v31);
  *(void *)(v22 + v25[10]) = a9;
  OUTLINED_FUNCTION_33_2();
}

uint64_t type metadata accessor for HUDActivityManager.BannerUpdate(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for HUDActivityManager.BannerUpdate);
}

BOOL specialized static Comparable.>= infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL specialized static Comparable.>= infix(_:_:)()
{
  static HUDActivityManager.BannerUpdate.< infix(_:_:)();
  return (v0 & 1) == 0;
}

BOOL specialized static Comparable.>= infix(_:_:)(double a1, double a2)
{
  return a1 >= a2;
}

BOOL specialized static Comparable.>= infix(_:_:)(char a1, char a2)
{
  return !static Bool.< infix(_:_:)(a1, a2);
}

BOOL specialized static Comparable.> infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

void specialized static Comparable.> infix(_:_:)()
{
}

BOOL specialized static Comparable.> infix(_:_:)(double a1, double a2)
{
  return a2 < a1;
}

BOOL specialized static Comparable.> infix(_:_:)(char a1, char a2)
{
  return static Bool.< infix(_:_:)(a2, a1);
}

uint64_t ConversationControlsType.defaultRelevanceScore.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = outlined init with copy of ConversationControlsType(v1, (uint64_t)&v10);
  if (v13 == 3)
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    if (v13 == 4)
    {
      uint64_t v9 = 0x4085E00000000000;
      goto LABEL_18;
    }
    if (v13 != 6
      || ((v10 & 0xFFFFFFFFFFFFFFFELL) != 0x18 ? (BOOL v4 = v10 == 21) : (BOOL v4 = 1),
          !v4 ? (BOOL v5 = v10 == 6) : (BOOL v5 = 1),
          (int8x16_t v6 = vorrq_s8(v11, v12), v7 = vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)), v5)
        ? (BOOL v8 = *(void *)&v7 == 0)
        : (BOOL v8 = 0),
          !v8))
    {
      *a1 = 0x4082C00000000000;
      return outlined destroy of ConversationControlsType((uint64_t)&v10);
    }
  }
  uint64_t v9 = 0x4089000000000000;
LABEL_18:
  *a1 = v9;
  return result;
}

uint64_t ConversationControlsType.isTemporary.getter()
{
  outlined init with copy of ConversationControlsType(v0, (uint64_t)&v6);
  if (v11 == 3 || v11 == 5)
  {
    uint64_t v2 = 0;
  }
  else
  {
    if (v11 == 6)
    {
      if (!(v9 | v10 | v6 | v8 | v7)) {
        return 0;
      }
      BOOL v3 = (v6 & 0xFFFFFFFFFFFFFFEFLL) == 9 || (v6 & 0xFFFFFFFFFFFFFFFBLL) == 3;
      if (v3 && (v9 | v10 | v8 | v7) == 0) {
        return 0;
      }
    }
    uint64_t v2 = 1;
  }
  outlined destroy of ConversationControlsType((uint64_t)&v6);
  return v2;
}

uint64_t key path getter for HUDActivity.dismissed : HUDActivity@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 112))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for HUDActivity.dismissed : HUDActivity(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 120))(*a1);
}

uint64_t HUDActivity.dismissed.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C344DB6C@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_50();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 112))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C344DBB8()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t HUDActivity.dismissed.setter()
{
  return static Published.subscript.setter();
}

void (*HUDActivity.dismissed.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for HUDActivity.$dismissed : HUDActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 144))(v7);
}

uint64_t HUDActivity.$dismissed.getter()
{
  return swift_endAccess();
}

uint64_t HUDActivity.$dismissed.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_2_1();
  v6();
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

void (*HUDActivity.$dismissed.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[4] = v4;
  OUTLINED_FUNCTION_1(v4);
  v3[5] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[6] = malloc(v7);
  v3[7] = malloc(v7);
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return HUDActivity.$dismissed.modify;
}

void HUDActivity.$dismissed.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v5 = v2[4];
    uint64_t v6 = v2[5];
    OUTLINED_FUNCTION_2_1();
    v7();
    HUDActivity.$dismissed.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    HUDActivity.$dismissed.setter(*(void *)(*(void *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t HUDActivity.activityId.getter()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t key path setter for HUDActivity.relatedUpdate : HUDActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 192))(v6);
}

uint64_t HUDActivity.relatedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of HUDActivityManager.BannerUpdate(v3, a1);
}

uint64_t outlined init with copy of HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HUDActivity.relatedUpdate.setter()
{
  OUTLINED_FUNCTION_6_1();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  outlined assign with take of HUDActivityManager.BannerUpdate(v0, v1);
  return swift_endAccess();
}

uint64_t outlined assign with take of HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*HUDActivity.relatedUpdate.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

BOOL HUDActivity.isPersistent.getter()
{
  uint64_t v1 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_32_24();
  v3();
  outlined init with copy of ConversationControlsType(v0 + 8, (uint64_t)v6);
  outlined destroy of HUDActivityManager.BannerUpdate(v0);
  char v4 = ConversationControlsType.isTemporary.getter();
  outlined destroy of ConversationControlsType((uint64_t)v6);
  return (v4 & 1) == 0;
}

uint64_t HUDActivity.__allocating_init(withUpdate:dismissHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  HUDActivity.init(withUpdate:dismissHandler:)(a1, a2, a3);
  return v6;
}

uint64_t HUDActivity.init(withUpdate:dismissHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_64();
  uint64_t v12 = v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity__dismissed;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v4, v8);
  char v13 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_dismissHandler);
  *char v13 = 0;
  v13[1] = 0;
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate);
  uint64_t v14 = *v13;
  *char v13 = a2;
  v13[1] = a3;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v14);
  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v15 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_21();
  uint64_t v21 = v20 - v19;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_2_1();
  v22();
  outlined destroy of HUDActivityManager.BannerUpdate(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId, v21, v15);
  return v3;
}

Swift::Void __swiftcall HUDActivity.end()()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v12 = v1;
  uint64_t v13 = v2;
  uint64_t v3 = v0;
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.banners);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    size_t v7 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v11 = OUTLINED_FUNCTION_9_0();
    *size_t v7 = 136315138;
    type metadata accessor for HUDActivity(0);
    swift_retain();
    uint64_t v8 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_268(&dword_1C2F90000, v5, v6, "HUDActivity %s ending");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    OUTLINED_FUNCTION_33_8();
  }

  (*(void (**)(uint64_t))(*(void *)v3 + 120))(1);
  uint64_t v10 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_dismissHandler);
  if (v10)
  {
    swift_retain();
    v10(v3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
  }
}

uint64_t HUDActivity.deinit()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_0();
  uint64_t v1 = OUTLINED_FUNCTION_28_6();
  v2(v1);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_dismissHandler));
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  v4(v3);
  outlined destroy of HUDActivityManager.BannerUpdate(v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate);
  return v0;
}

uint64_t HUDActivity.__deallocating_deinit()
{
  HUDActivity.deinit();
  return swift_deallocClassInstance();
}

uint64_t CoupledHUDActivity.childActivityObserver.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivityObserver);
  *(void *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivityObserver) = a1;
  swift_retain();
  if (v2)
  {
    MEMORY[0x1C8773690](v2, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    swift_release();
  }
  return swift_release();
}

uint64_t CoupledHUDActivity.childActivity.didset()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  size_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t result = CoupledHUDActivity.childActivityObserver.setter(0);
  uint64_t v15 = *(void *)(v0
                  + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity);
  if (v15)
  {
    uint64_t v25 = v8;
    uint64_t v26 = v4;
    uint64_t v16 = *(uint64_t (**)(uint64_t))(**(void **)(v0
                                                          + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                            + 208);
    uint64_t v17 = swift_retain();
    if (v16(v17))
    {
      return swift_release();
    }
    else
    {
      (*(void (**)(void))(*(void *)v15 + 136))();
      uint64_t v18 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
      MEMORY[0x1C8770AF0](v5, v18);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
      uint64_t v19 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v19);
      uint64_t v20 = v28;
      uint64_t v21 = v25;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v10, v13, v25);
      unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = 0;
      *(void *)(v23 + 24) = 0;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v23 + v22, v10, v21);
      *(void *)(v23 + ((v9 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
      swift_retain();
      uint64_t v24 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      CoupledHUDActivity.childActivityObserver.setter(v24);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v21);
    }
  }
  return result;
}

uint64_t closure #1 in CoupledHUDActivity.childActivity.didset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[7] = *a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](closure #1 in CoupledHUDActivity.childActivity.didset, 0, 0);
}

uint64_t closure #1 in CoupledHUDActivity.childActivity.didset()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  AsyncPublisher.makeAsyncIterator()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in CoupledHUDActivity.childActivity.didset;
  return MEMORY[0x1F4187C78](v0 + 112);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  *(void *)(v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #1 in CoupledHUDActivity.childActivity.didset;
  }
  else {
    uint64_t v2 = closure #1 in CoupledHUDActivity.childActivity.didset;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

{
  uint64_t v0;

  *(unsigned char *)(v0 + 113) = *(unsigned char *)(v0 + 112);
  return MEMORY[0x1F4188298](closure #1 in CoupledHUDActivity.childActivity.didset, 0, 0);
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  unint64_t v22 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 113);
  if (v1 == 2)
  {
    uint64_t v2 = OUTLINED_FUNCTION_45_10();
    v3(v2);
    swift_task_dealloc();
    OUTLINED_FUNCTION_263();
    __asm { BRAA            X1, X16 }
  }
  if (v1)
  {
    if (one-time initialization token for banners != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.banners);
    swift_retain_n();
    uint64_t v10 = Logger.logObject.getter();
    uint64_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = *(void *)(v0 + 48);
      uint64_t v13 = (_DWORD *)OUTLINED_FUNCTION_37();
      uint64_t v21 = OUTLINED_FUNCTION_9_0();
      *uint64_t v13 = 136315138;
      *(void *)(v0 + 24) = v12;
      swift_retain();
      uint64_t v14 = String.init<A>(reflecting:)();
      *(void *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      OUTLINED_FUNCTION_268(&dword_1C2F90000, v10, v11, "CoupledHUDActivity - Learned about childActivity dismissing. Ending CoupledHUDActivity %s");
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      swift_release_n();
    }

    type metadata accessor for MainActor();
    *(void *)(v0 + 104) = static MainActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_263();
    return MEMORY[0x1F4188298](v16, v17, v18);
  }
  else
  {
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v6;
    *uint64_t v6 = v0;
    v6[1] = closure #1 in CoupledHUDActivity.childActivity.didset;
    OUTLINED_FUNCTION_263();
    return MEMORY[0x1F4187C78](v7);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  *(void *)(v0 + 16) = *(void *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v1 = MEMORY[0x1E4FBC248];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x1E4FBC278];
  return MEMORY[0x1F41868E8](v2, v1, v3);
}

{
  uint64_t v1;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  CoupledHUDActivity.end()();
  return MEMORY[0x1F4188298](closure #1 in CoupledHUDActivity.childActivity.didset, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = OUTLINED_FUNCTION_45_10();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t CoupledHUDActivity.end()()
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(v0
                                              + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                + 224))();
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity);
  if (v2)
  {
    uint64_t v3 = *(void (**)(uint64_t))(*(void *)v2 + 224);
    uint64_t v4 = swift_retain();
    v3(v4);
    return swift_release();
  }
  return result;
}

uint64_t CoupledHUDActivity.childActivity.setter(uint64_t a1)
{
  *(void *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity) = a1;
  swift_retain();
  swift_release();
  CoupledHUDActivity.childActivity.didset();
  return swift_release();
}

uint64_t CoupledHUDActivity.__allocating_init(withUpdate:dismissHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CoupledHUDActivity.init(withUpdate:dismissHandler:)(a1, a2, a3);
}

uint64_t CoupledHUDActivity.init(withUpdate:dismissHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivityObserver) = 0;
  *(void *)(v3
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity) = 0;
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v10);
  type metadata accessor for HUDActivity(0);
  uint64_t v11 = swift_allocObject();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  HUDActivity.init(withUpdate:dismissHandler:)((uint64_t)v10, a2, a3);
  *(void *)(v4
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity) = v11;
  swift_release();
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v10);
  HUDActivity.init(withUpdate:dismissHandler:)((uint64_t)v10, 0, 0);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a2);
  outlined destroy of HUDActivityManager.BannerUpdate(a1);
  return v4;
}

uint64_t CoupledHUDActivity.relatedUpdate.getter()
{
  return (*(uint64_t (**)(void))(**(void **)(v0
                                            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                              + 184))();
}

uint64_t CoupledHUDActivity.relatedUpdate.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1
                 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity);
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v5);
  (*(void (**)(char *))(*(void *)v6 + 192))(v5);
  return outlined destroy of HUDActivityManager.BannerUpdate(a1);
}

void (*CoupledHUDActivity.relatedUpdate.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for HUDActivityManager.BannerUpdate(0) - 8) + 64);
  a1[1] = malloc(v3);
  a1[2] = malloc(v3);
  (*(void (**)(void))(**(void **)(v1
                                  + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                    + 184))();
  return CoupledHUDActivity.relatedUpdate.modify;
}

void CoupledHUDActivity.relatedUpdate.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  size_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v3, (uint64_t)v2);
    CoupledHUDActivity.relatedUpdate.setter((uint64_t)v2);
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v3);
  }
  else
  {
    CoupledHUDActivity.relatedUpdate.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

uint64_t CoupledHUDActivity.__ivar_destroyer()
{
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner);
  swift_release();
  return swift_release();
}

uint64_t CoupledHUDActivity.deinit()
{
  HUDActivity.deinit();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner);
  swift_release();
  swift_release();
  return v0;
}

uint64_t CoupledHUDActivity.__deallocating_deinit()
{
  CoupledHUDActivity.deinit();
  return swift_deallocClassInstance();
}

id one-time initialization function for shared(uint64_t a1)
{
  return one-time initialization function for shared(a1, type metadata accessor for HUDActivityManager, &static HUDActivityManager.shared);
}

{
  return one-time initialization function for shared(a1, type metadata accessor for BannerActivityManager, &static BannerActivityManager.shared);
}

id HUDActivityManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static HUDActivityManager.shared.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static HUDActivityManager.shared);
}

uint64_t key path getter for HUDActivityManager.displayResolver : HUDActivityManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x78))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for HUDActivityManager.displayResolver : HUDActivityManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  size_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x80);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t HUDActivityManager.displayResolver.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t HUDActivityManager.displayResolver.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___CNKHUDActivityManager_displayResolver);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*HUDActivityManager.displayResolver.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

ConversationKit::HUDActivityManager::RelevanceScore __swiftcall HUDActivityManager.RelevanceScore.init(rawValue:)(ConversationKit::HUDActivityManager::RelevanceScore rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static HUDActivityManager.RelevanceScore.emergency.getter(void *a1@<X8>)
{
}

void static HUDActivityManager.RelevanceScore.userInput.getter(void *a1@<X8>)
{
}

void static HUDActivityManager.RelevanceScore.notice.getter(void *a1@<X8>)
{
}

void static HUDActivityManager.RelevanceScore.default.getter(void *a1@<X8>)
{
}

void static HUDActivityManager.RelevanceScore.low.getter(void *a1@<X8>)
{
}

double HUDActivityManager.RelevanceScore.rawValue.getter()
{
  return *(double *)v0;
}

BOOL static HUDActivityManager.RelevanceScore.< infix(_:_:)(double *a1, double *a2)
{
  return *a1 < *a2;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance HUDActivityManager.RelevanceScore()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance HUDActivityManager.RelevanceScore()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(*v0);
}

BOOL protocol witness for static Comparable.<= infix(_:_:) in conformance HUDActivityManager.RelevanceScore(double *a1, double *a2)
{
  return specialized static Comparable.<= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.>= infix(_:_:) in conformance HUDActivityManager.RelevanceScore(double *a1, double *a2)
{
  return specialized static Comparable.>= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.> infix(_:_:) in conformance HUDActivityManager.RelevanceScore(double *a1, double *a2)
{
  return specialized static Comparable.> infix(_:_:)(*a1, *a2);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance HUDActivityManager.RelevanceScore(Swift::Double *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 8) = 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance HUDActivityManager.RelevanceScore(double *a1@<X8>)
{
  *a1 = HUDActivityManager.RelevanceScore.rawValue.getter();
}

double HUDActivityManager.BannerUpdate.score.getter@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t HUDActivityManager.BannerUpdate.type.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ConversationControlsType(v1 + 8, a1);
}

uint64_t HUDActivityManager.BannerUpdate.requestedSizeClass.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t HUDActivityManager.BannerUpdate.temporary.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t HUDActivityManager.BannerUpdate.uuid.getter()
{
  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t HUDActivityManager.BannerUpdate.timestamp.getter()
{
  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

void *HUDActivityManager.BannerUpdate.controlsManager.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for HUDActivityManager.BannerUpdate(0) + 40));
  id v2 = v1;
  return v1;
}

uint64_t key path getter for HUDActivityManager.BannerUpdate.associatedCall : HUDActivityManager.BannerUpdate@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  size_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v7);
  uint64_t v8 = &v7[*(int *)(v5 + 52)];
  uint64_t v9 = MEMORY[0x1C8776240](v8);
  uint64_t v10 = *((void *)v8 + 1);
  uint64_t result = outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v7);
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t key path setter for HUDActivityManager.BannerUpdate.associatedCall : HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a2 + *(int *)(type metadata accessor for HUDActivityManager.BannerUpdate(0) + 44) + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t HUDActivityManager.BannerUpdate.associatedCall.getter()
{
  uint64_t v1 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  return MEMORY[0x1C8776240](v0 + *(int *)(v1 + 44));
}

void static HUDActivityManager.BannerUpdate.< infix(_:_:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_41_20();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_86_6();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (double *)&v19[-v13];
  outlined init with copy of ConversationControlsType((uint64_t)(v8 + 1), (uint64_t)v19);
  outlined init with copy of ConversationControlsType((uint64_t)(v6 + 1), (uint64_t)v20);
  if (!v19[40])
  {
    if (v21)
    {
      outlined destroy of ConversationControlsType((uint64_t)v19);
      outlined destroy of ConversationControlsType((uint64_t)v20);
      goto LABEL_13;
    }
LABEL_7:
    outlined destroy of ConversationControlsType((uint64_t)v20);
    outlined destroy of ConversationControlsType((uint64_t)v19);
    goto LABEL_13;
  }
  if (!v21) {
    goto LABEL_7;
  }
  double v15 = *v8;
  double v16 = *v6;
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, (uint64_t)v14);
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v6, (uint64_t)v0);
  if (v15 >= v16)
  {
    double v17 = *v14;
    double v18 = *v0;
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v14, v2);
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v0, v1);
    if (v17 == v18) {
      Date.compare(_:)();
    }
    outlined destroy of HUDActivityManager.BannerUpdate(v1);
    outlined destroy of HUDActivityManager.BannerUpdate(v2);
  }
  outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v0);
  outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v14);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, &demangling cache variable for type metadata for (ConversationControlsType, ConversationControlsType));
LABEL_13:
  OUTLINED_FUNCTION_33_2();
}

void static HUDActivityManager.BannerUpdate.== infix(_:_:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v40 = v5;
  uint64_t v41 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_86_6();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_59_9();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v39 - v18;
  double v20 = *v10;
  double v21 = *v8;
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v10, (uint64_t)&v39 - v18);
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v4);
  if (v20 != v21)
  {
    outlined destroy of HUDActivityManager.BannerUpdate(v4);
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v19);
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v10, v2);
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v3);
    goto LABEL_7;
  }
  char v22 = static ConversationControlsType.== infix(_:_:)((uint64_t)(v19 + 8));
  outlined destroy of HUDActivityManager.BannerUpdate(v4);
  outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v19);
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v10, v2);
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v3);
  if ((v22 & 1) == 0) {
    goto LABEL_7;
  }
  char v23 = *(unsigned char *)(v3 + 64);
  if (*(unsigned char *)(v2 + 64))
  {
    outlined destroy of HUDActivityManager.BannerUpdate(v3);
    outlined destroy of HUDActivityManager.BannerUpdate(v2);
    if (v23)
    {
      OUTLINED_FUNCTION_84_5();
      outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v1);
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  if (*(unsigned char *)(v3 + 64))
  {
LABEL_7:
    outlined destroy of HUDActivityManager.BannerUpdate(v3);
    outlined destroy of HUDActivityManager.BannerUpdate(v2);
LABEL_8:
    OUTLINED_FUNCTION_84_5();
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v1);
LABEL_9:
    outlined destroy of HUDActivityManager.BannerUpdate(v1);
    outlined destroy of HUDActivityManager.BannerUpdate(v0);
    goto LABEL_10;
  }
  uint64_t v24 = *(void *)(v2 + 56);
  uint64_t v25 = *(void *)(v3 + 56);
  outlined destroy of HUDActivityManager.BannerUpdate(v3);
  outlined destroy of HUDActivityManager.BannerUpdate(v2);
  OUTLINED_FUNCTION_84_5();
  outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v1);
  if (v24 != v25) {
    goto LABEL_9;
  }
LABEL_13:
  uint64_t v26 = v0 + *(int *)(v11 + 44);
  if (MEMORY[0x1C8776240](v26))
  {
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 48))(ObjectType, v27);
    uint64_t v31 = v30;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  uint64_t v32 = v1 + *(int *)(v11 + 44);
  if (MEMORY[0x1C8776240](v32))
  {
    uint64_t v33 = *(void *)(v32 + 8);
    uint64_t v34 = swift_getObjectType();
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 48))(v34, v33);
    uint64_t v37 = v36;
    swift_unknownObjectRelease();
    if (v31)
    {
      if (v37)
      {
        if (v29 != v35 || v31 != v37) {
          _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate(v1);
        outlined destroy of HUDActivityManager.BannerUpdate(v0);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      outlined destroy of HUDActivityManager.BannerUpdate(v1);
      outlined destroy of HUDActivityManager.BannerUpdate(v0);
      swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
  }
  else
  {
    if (v31) {
      goto LABEL_25;
    }
    uint64_t v37 = 0;
  }
  outlined destroy of HUDActivityManager.BannerUpdate(v1);
  outlined destroy of HUDActivityManager.BannerUpdate(v0);
  if (v37) {
    swift_bridgeObjectRelease();
  }
LABEL_10:
  OUTLINED_FUNCTION_33_2();
}

uint64_t key path getter for HUDActivityManager.bannerPresentationManager : HUDActivityManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for HUDActivityManager.bannerPresentationManager : HUDActivityManager(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xB0);
  id v4 = *a1;
  return v3(v2);
}

void HUDActivityManager.bannerPresentationManager.setter(void *a1)
{
  id v2 = (void *)MEMORY[0x1C8776240](v1 + OBJC_IVAR___CNKHUDActivityManager__bannerPresentationManager);

  if (!v2) {
    swift_unknownObjectWeakAssign();
  }
}

void HUDActivityManager.bannerPresentationManager.getter()
{
}

void (*HUDActivityManager.bannerPresentationManager.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = MEMORY[0x1C8776240](v1 + OBJC_IVAR___CNKHUDActivityManager__bannerPresentationManager);
  return HUDActivityManager.bannerPresentationManager.modify;
}

void HUDActivityManager.bannerPresentationManager.modify(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    HUDActivityManager.bannerPresentationManager.setter(v2);
  }
  else
  {
    HUDActivityManager.bannerPresentationManager.setter(*a1);
  }
}

uint64_t HUDActivityManager.presentedActivity.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

void HUDActivityManager.updateWith(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v1;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_17_0();
  uint64_t v48 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_41_20();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v46 - v14;
  if (*(void *)(v1 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
  {
    uint64_t v47 = v0;
    uint64_t v16 = v1;
    OUTLINED_FUNCTION_50();
    uint64_t v18 = *(void (**)(void))(v17 + 184);
    swift_retain();
    OUTLINED_FUNCTION_56_11();
    v18();
    static HUDActivityManager.BannerUpdate.== infix(_:_:)();
    char v20 = v19;
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v15);
    if (v20)
    {
      uint64_t v49 = 25;
      long long v50 = 0u;
      long long v51 = 0u;
      char v52 = 6;
      char v21 = static ConversationControlsType.== infix(_:_:)(v6 + 8);
      outlined destroy of ConversationControlsType((uint64_t)&v49);
      if (v21)
      {
        if (one-time initialization token for banners != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = OUTLINED_FUNCTION_83_5(v22, (uint64_t)static Logger.banners);
        outlined init with copy of HUDActivityManager.BannerUpdate(v23, v3);
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.default.getter();
        BOOL v26 = os_log_type_enabled(v24, v25);
        uint64_t v27 = v47;
        if (v26)
        {
          uint64_t v28 = (_DWORD *)OUTLINED_FUNCTION_37();
          uint64_t v49 = OUTLINED_FUNCTION_9_0();
          *uint64_t v28 = 136315138;
          v46[1] = v28 + 1;
          outlined init with copy of HUDActivityManager.BannerUpdate(v3, v27);
          uint64_t v29 = OUTLINED_FUNCTION_75_6();
          unint64_t v31 = v30;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?(v27, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
          uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v49);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v3);
          OUTLINED_FUNCTION_268(&dword_1C2F90000, v24, v25, "HUDActivityManager - adding bannerUpdate: %s, same as presentedActivity, not adding");
          OUTLINED_FUNCTION_110();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {
          outlined destroy of HUDActivityManager.BannerUpdate(v3);
        }

        goto LABEL_17;
      }
    }
    swift_release();
    uint64_t v4 = v16;
    uint64_t v0 = v47;
  }
  uint64_t v32 = (uint64_t *)(v4 + OBJC_IVAR___CNKHUDActivityManager_updates);
  OUTLINED_FUNCTION_2();
  uint64_t v33 = *v32;
  swift_bridgeObjectRetain();
  specialized Collection<>.firstIndex(of:)(v6, v33);
  char v35 = v34;
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_1();
    specialized Array.remove(at:)();
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v15);
    swift_endAccess();
  }
  OUTLINED_FUNCTION_6_1();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v36 = *(void *)(*v32 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v36);
  *(void *)(*v32 + 16) = v36 + 1;
  OUTLINED_FUNCTION_50_12();
  outlined init with copy of HUDActivityManager.BannerUpdate(v6, v37 + *(void *)(v10 + 72) * v36);
  swift_endAccess();
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v39 = OUTLINED_FUNCTION_83_5(v38, (uint64_t)static Logger.banners);
  outlined init with copy of HUDActivityManager.BannerUpdate(v39, v2);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v47 = v4;
    uint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v54 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v42 = 136315138;
    OUTLINED_FUNCTION_84_5();
    uint64_t v43 = OUTLINED_FUNCTION_75_6();
    unint64_t v45 = v44;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of HUDActivityManager.BannerUpdate(v2);
    _os_log_impl(&dword_1C2F90000, v40, v41, "HUDActivityManager - adding bannerUpdate: %s", v42, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of HUDActivityManager.BannerUpdate(v2);
  }

  HUDActivityManager.checkUpdatesAndPresentIfNeeded()();
LABEL_17:
  OUTLINED_FUNCTION_28();
}

uint64_t HUDActivityManager.checkUpdatesAndPresentIfNeeded()()
{
  void (*v114)(id *__return_ptr, uint64_t, uint64_t);
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint8_t *v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint8_t *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  os_log_t v136;
  void *v137;
  uint64_t v138;
  int v139;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  void *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  void *v150;
  void *v151;
  char *v152;
  char *v153;
  uint64_t (*v154)(void);
  char *v155;
  void *v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, char *, void, char *, void, uint64_t, uint8_t *);
  char *v162;
  char *v163;
  char *v164;
  void *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  uint8_t *v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  NSObject *v182;
  os_log_type_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  id v189;
  uint64_t v190;
  unint64_t v191;
  void *v192;
  unsigned char *v193;
  uint64_t v194;
  int8x16_t v195;
  uint64_t v196;
  NSObject *v197;
  os_log_type_t v198;
  uint8_t *v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  void *v204;
  void *v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  void *v213;
  NSObject *v214;
  os_log_type_t v215;
  uint8_t *v216;
  unsigned char *v217;
  char *v218;
  char v219;
  void *v221;
  uint64_t v222;
  uint8_t *v223;
  NSObject *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint8_t *v232;
  uint64_t v233;
  void *v234;
  os_log_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  char *v240;
  void *v241;
  char *v242;
  unsigned char aBlock[48];
  uint64_t v244;
  uint64_t v245;
  char v246;
  id v247;

  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  MEMORY[0x1F4188790](v1 - 8);
  v238 = (char *)&v221 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v3 = *(void *)(v239 - 8);
  MEMORY[0x1F4188790](v239);
  v230 = (char *)&v221 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v228 = (uint64_t)&v221 - v6;
  MEMORY[0x1F4188790](v7);
  v227 = (uint64_t)&v221 - v8;
  MEMORY[0x1F4188790](v9);
  v233 = (uint64_t)&v221 - v10;
  MEMORY[0x1F4188790](v11);
  v232 = (uint8_t *)&v221 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v221 - v14;
  MEMORY[0x1F4188790](v16);
  v240 = (char *)&v221 - v17;
  MEMORY[0x1F4188790](v18);
  v235 = (os_log_t)((char *)&v221 - v19);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v221 - v21;
  v226 = v23;
  MEMORY[0x1F4188790](v24);
  BOOL v26 = (char *)&v221 - v25;
  uint64_t v27 = (uint64_t *)&v0[OBJC_IVAR___CNKHUDActivityManager_updates];
  swift_beginAccess();
  v237 = (uint64_t)v27;
  specialized MutableCollection<>.sort(by:)(v27);
  v234 = 0;
  swift_endAccess();
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.banners);
  unint64_t v30 = v0;
  unint64_t v31 = Logger.logObject.getter();
  LODWORD(v236) = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v31, (os_log_type_t)v236);
  v241 = (void *)v29;
  v242 = v22;
  v229 = v3;
  v231 = v15;
  if (v32)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    v225 = (char *)swift_slowAlloc();
    v247 = v225;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v34 = *(void *)v237;
    uint64_t v35 = *(void *)(*(void *)v237 + 16);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    if (v35)
    {
      v223 = v33;
      v224 = v31;
      v245 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      unint64_t v37 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v222 = v34;
      uint64_t v38 = v34 + v37;
      uint64_t v39 = *(void *)(v3 + 72);
      uint64_t v36 = v245;
      do
      {
        outlined init with copy of HUDActivityManager.BannerUpdate(v38, (uint64_t)v26);
        outlined init with copy of ConversationControlsType((uint64_t)(v26 + 8), (uint64_t)aBlock);
        v244 = *(void *)v26;
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v36 = v245;
        }
        unint64_t v40 = *(void *)(v36 + 16);
        if (v40 >= *(void *)(v36 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v36 = v245;
        }
        *(void *)(v36 + 16) = v40 + 1;
        uint64_t v41 = v36 + 56 * v40;
        long long v42 = *(_OWORD *)aBlock;
        long long v43 = *(_OWORD *)&aBlock[16];
        long long v44 = *(_OWORD *)&aBlock[32];
        *(void *)(v41 + 80) = v244;
        *(_OWORD *)(v41 + 48) = v43;
        *(_OWORD *)(v41 + 64) = v44;
        *(_OWORD *)(v41 + 32) = v42;
        v38 += v39;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
      unint64_t v31 = v224;
      uint64_t v33 = v223;
    }
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore));
    uint64_t v46 = MEMORY[0x1C87733E0](v36, v45);
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, (uint64_t *)&v247);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v31, (os_log_type_t)v236, "HUDActivityManager currentUpdates: %s", v33, 0xCu);
    uint64_t v49 = v225;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v49, -1, -1);
    MEMORY[0x1C87760E0](v33, -1, -1);
  }
  else
  {
  }
  HUDActivityManager.shouldReplace()();
  char v51 = v50;
  char v52 = v30;
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(void *)uint64_t aBlock = v56;
    *(_DWORD *)uint64_t v55 = 67109378;
    LODWORD(v247) = v51 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v55 + 8) = 2080;
    HUDActivityManager.shouldUpdate()();
    LOBYTE(v247) = v57 & 1;
    uint64_t v58 = String.init<A>(reflecting:)();
    v247 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v53, v54, "HUDActivityManager - shouldReplace: %{BOOL}d shouldUpdate: %s", (uint8_t *)v55, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v56, -1, -1);
    MEMORY[0x1C87760E0](v55, -1, -1);
  }
  else
  {
  }
  uint64_t v60 = (uint64_t)v238;
  uint64_t v61 = (uint64_t)v240;
  if ((v51 & 1) == 0)
  {
    HUDActivityManager.shouldUpdate()();
    if ((v62 & 1) == 0) {
      return 0;
    }
  }
  HUDActivityManager.getCurrentUpdate()(v60);
  if (__swift_getEnumTagSinglePayload(v60, 1, v239) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v60, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    return 0;
  }
  outlined init with take of HUDActivityManager.BannerUpdate(v60, (uint64_t)v242);
  uint64_t v64 = HUDActivityManager.presentedDynamicIsland.getter();
  uint64_t v66 = (void *)MEMORY[0x1E4FBC8C8];
  if (v64)
  {
    uint64_t v67 = v65;
    goto LABEL_24;
  }
  uint64_t v89 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v52) + 0xA8))();
  if (v89)
  {
    uint64_t v90 = v89;
    uint64_t v91 = (*(uint64_t (**)(void))((*v66 & *v89) + 0x1E0))();

    if (v91)
    {
      type metadata accessor for SystemBannerHostViewController();
      uint64_t v64 = swift_dynamicCastClass();
      if (v64)
      {
        uint64_t v67 = (uint8_t *)&protocol witness table for SystemBannerHostViewController;
LABEL_24:
        uint64_t v68 = *(char **)&v52[OBJC_IVAR___CNKHUDActivityManager_presentedActivity];
        v238 = (char *)v64;
        v223 = v67;
        if (v51)
        {
          if (v68)
          {
            uint64_t v69 = OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity;
            uint64_t v70 = *(void (**)(uint64_t))(**(void **)&v68[OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity]
                                                 + 184);
            uint64_t v71 = swift_retain();
            v70(v71);
            char v72 = v26[65];
            uint64_t v73 = outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v26);
            if ((v72 & 1) == 0)
            {
              (*(void (**)(uint64_t))(**(void **)&v68[v69] + 184))(v73);
              uint64_t v74 = v237;
              swift_beginAccess();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              uint64_t v75 = *(void *)(*(void *)v74 + 16);
              specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v75);
              uint64_t v76 = *(void *)v74;
              *(void *)(v76 + 16) = v75 + 1;
              outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v26, v76+ ((*(unsigned __int8 *)(v229 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v229 + 80))+ *(void *)(v229 + 72) * v75);
              swift_endAccess();
            }
          }
          outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v242, (uint64_t)v26);
          uint64_t v77 = swift_allocObject();
          swift_unknownObjectWeakInit();
          type metadata accessor for CoupledHUDActivity(0);
          swift_allocObject();
          uint64_t v78 = CoupledHUDActivity.init(withUpdate:dismissHandler:)((uint64_t)v26, (uint64_t)partial apply for closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded(), v77);
          swift_release();
          uint64_t v79 = v52;
          uint64_t v80 = Logger.logObject.getter();
          os_log_type_t v81 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v82 = (uint8_t *)swift_slowAlloc();
            uint64_t v83 = (void *)swift_slowAlloc();
            v247 = v83;
            *(_DWORD *)uint64_t v82 = 136315138;
            uint64_t v84 = HUDActivityManager.presentedDynamicIsland.getter();
            if (v84)
            {
              *(void *)uint64_t aBlock = v84;
              *(void *)&aBlock[8] = v85;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActivityBanner);
              uint64_t v86 = String.init<A>(reflecting:)();
              unint64_t v88 = v87;
            }
            else
            {
              uint64_t v86 = 7104878;
              unint64_t v88 = 0xE300000000000000;
            }
            *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v86, v88, (uint64_t *)&v247);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1C2F90000, v80, v81, "HUDActivityManager - current DI %s", v82, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C87760E0](v83, -1, -1);
            MEMORY[0x1C87760E0](v82, -1, -1);

            uint64_t v66 = (void *)MEMORY[0x1E4FBC8C8];
            uint64_t v67 = v223;
          }
          else
          {
          }
          *(void *)(v78
                    + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner
                    + 8) = v67;
          uint64_t v92 = swift_unknownObjectWeakAssign();
          uint64_t v68 = (char *)v78;
          uint64_t v93 = (uint64_t)v242;
          uint64_t v61 = (uint64_t)v240;
        }
        else
        {
          uint64_t v92 = swift_retain();
          uint64_t v93 = (uint64_t)v242;
        }
        if (((*(uint64_t (**)(uint64_t))((*v66 & **(void **)&v52[OBJC_IVAR___CNKHUDActivityManager_features])
                                                 + 0x50))(v92) & 1) == 0)
        {
          uint64_t v94 = Logger.logObject.getter();
          os_log_type_t v95 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v94, v95))
          {
            uint64_t v96 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v96 = 0;
            _os_log_impl(&dword_1C2F90000, v94, v95, "HUDActivityManager - Invalid state: features.isSystemApertureEnabled is false but presentedSystemApertureElement != nil", v96, 2u);
            uint64_t v97 = v96;
            uint64_t v61 = (uint64_t)v240;
            MEMORY[0x1C87760E0](v97, -1, -1);
          }
        }
        v236 = v93 + 8;
        ConversationControlsType.associatedNotice.getter((uint64_t)aBlock);
        uint64_t v98 = *(void *)&aBlock[24];
        if (*(void *)&aBlock[24])
        {
          uint64_t v99 = *(void *)&aBlock[32];
          __swift_project_boxed_opaque_existential_1(aBlock, *(uint64_t *)&aBlock[24]);
          (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v99 + 64))(&v247, v98, v99);
          char v100 = (char)v247;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
          if (v100)
          {
            char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v102 = swift_bridgeObjectRelease();
            uint64_t v61 = (uint64_t)v240;
            if ((v101 & 1) == 0) {
              goto LABEL_54;
            }
          }
          else
          {
            uint64_t v102 = swift_bridgeObjectRelease();
            uint64_t v61 = (uint64_t)v240;
          }
          uint64_t v103 = (void *)(*(uint64_t (**)(uint64_t))((*v66 & *(void *)v52) + 0xA8))(v102);
          if (v103)
          {
            uint64_t v104 = v103;
            uint64_t v105 = (void *)(*(uint64_t (**)(void))((*v66 & *v103) + 0x188))();

            if (v105)
            {
              uint64_t v106 = (*(uint64_t (**)(void))((*v66 & *v105) + 0x1D8))();

              if (v106 == 3)
              {
                uint64_t ObjectType = swift_getObjectType();
                LODWORD(v222) = (*((uint64_t (**)(uint64_t, uint8_t *))v67 + 1))(ObjectType, v67);
                goto LABEL_55;
              }
            }
          }
        }
        else
        {
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for Notice?);
        }
LABEL_54:
        LODWORD(v222) = 1;
LABEL_55:
        uint64_t v108 = swift_getObjectType();
        uint64_t v109 = (uint64_t (*)(uint64_t, uint8_t *))*((void *)v67 + 1);
        v237 = v108;
        char v110 = v109(v108, v67);
        os_log_t v111 = v235;
        outlined init with copy of HUDActivityManager.BannerUpdate(v93, (uint64_t)v235);
        v225 = v68;
        if (v110)
        {
          ConversationControlsType.associatedNotice.getter((uint64_t)aBlock);
          uint64_t v112 = *(void *)&aBlock[24];
          if (*(void *)&aBlock[24])
          {
            uint64_t v113 = *(void *)&aBlock[32];
            __swift_project_boxed_opaque_existential_1(aBlock, *(uint64_t *)&aBlock[24]);
            uint64_t v114 = *(void (**)(id *__return_ptr, uint64_t, uint64_t))(v113 + 64);
            uint64_t v115 = v113;
            uint64_t v61 = (uint64_t)v240;
            v114(&v247, v112, v115);
            uint64_t v116 = (char)v247;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
            LODWORD(v224) = specialized == infix<A>(_:_:)(v116, 0);
          }
          else
          {
            outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for Notice?);
            LODWORD(v224) = 0;
          }
          os_log_t v111 = v235;
        }
        else
        {
          LODWORD(v224) = 0;
        }
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v111);
        outlined init with copy of HUDActivityManager.BannerUpdate(v93, v61);
        uint64_t v117 = (uint64_t)v231;
        outlined init with copy of HUDActivityManager.BannerUpdate(v93, (uint64_t)v231);
        uint64_t v118 = (uint64_t)v232;
        outlined init with copy of HUDActivityManager.BannerUpdate(v93, (uint64_t)v232);
        swift_unknownObjectRetain_n();
        uint64_t v119 = Logger.logObject.getter();
        LODWORD(v240) = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v119, (os_log_type_t)v240))
        {
          v235 = v119;
          uint64_t v120 = swift_slowAlloc();
          uint64_t v121 = v118;
          v221 = (void *)swift_slowAlloc();
          v247 = v221;
          *(_DWORD *)uint64_t v120 = 136447490;
          outlined init with copy of ConversationControlsType(v61 + 8, (uint64_t)aBlock);
          uint64_t v122 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
          uint64_t v123 = v67;
          uint64_t v125 = v124;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
          *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v122, v125, (uint64_t *)&v247);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v61);
          *(_WORD *)(v120 + 12) = 2080;
          ConversationControlsType.associatedNotice.getter((uint64_t)aBlock);
          uint64_t v126 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
          uint64_t v128 = v127;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for Notice?);
          *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v128, (uint64_t *)&v247);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v117);
          *(_WORD *)(v120 + 22) = 2082;
          uint64_t v129 = v123;
          *(void *)uint64_t aBlock = (*((uint64_t (**)(uint64_t, uint8_t *))v123 + 2))(v237, v123);
          uint64_t v130 = String.init<A>(reflecting:)();
          *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v247);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease_n();
          *(_WORD *)(v120 + 32) = 2082;
          if (*(unsigned char *)(v121 + 64))
          {
            uint64_t v132 = 7104878;
            uint64_t v133 = 0xE300000000000000;
          }
          else
          {
            *(void *)uint64_t aBlock = *(void *)(v121 + 56);
            uint64_t v132 = String.init<A>(reflecting:)();
            uint64_t v133 = v135;
          }
          uint64_t v134 = (char)v224;
          *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v132, v133, (uint64_t *)&v247);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v121);
          *(_WORD *)(v120 + 42) = 1024;
          *(_DWORD *)uint64_t aBlock = v222 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v120 + 48) = 1024;
          *(_DWORD *)uint64_t aBlock = v134 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v136 = v235;
          _os_log_impl(&dword_1C2F90000, v235, (os_log_type_t)v240, "HUDActivityManager - updateSystemApertureElement type:%{public}s,\nnotice:%s,\ncurrent sizeClass:%{public}s,\nupdated sizeClass:%{public}s,\nshouldDismissPresentedBanner:%{BOOL}d,\nshouldIgnoreSizeClassUpdate:%{BOOL}d", (uint8_t *)v120, 0x36u);
          uint64_t v137 = v221;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v137, -1, -1);
          MEMORY[0x1C87760E0](v120, -1, -1);

          uint64_t v93 = (uint64_t)v242;
          uint64_t v67 = v129;
        }
        else
        {
          outlined destroy of HUDActivityManager.BannerUpdate(v61);
          outlined destroy of HUDActivityManager.BannerUpdate(v117);
          swift_unknownObjectRelease_n();
          outlined destroy of HUDActivityManager.BannerUpdate(v118);

          uint64_t v134 = (char)v224;
        }
        uint64_t v138 = v233;
        if (v134)
        {
          v240 = 0;
          uint64_t v139 = 1;
        }
        else
        {
          v240 = *(char **)(v93 + 56);
          uint64_t v139 = *(unsigned __int8 *)(v93 + 64);
        }
        LODWORD(v235) = v139;
        outlined init with copy of HUDActivityManager.BannerUpdate(v93, v233);
        uint64_t v140 = Logger.logObject.getter();
        uint64_t v141 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v140, v141))
        {
          uint64_t v142 = (uint8_t *)swift_slowAlloc();
          uint64_t v143 = (void *)swift_slowAlloc();
          v247 = v143;
          *(_DWORD *)uint64_t v142 = 136446210;
          v232 = v142 + 4;
          outlined init with copy of ConversationControlsType(v138 + 8, (uint64_t)aBlock);
          uint64_t v144 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
          uint64_t v145 = v52;
          uint64_t v146 = v138;
          uint64_t v148 = v147;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
          *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v144, v148, (uint64_t *)&v247);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v149 = v146;
          char v52 = v145;
          uint64_t v67 = v223;
          outlined destroy of HUDActivityManager.BannerUpdate(v149);
          _os_log_impl(&dword_1C2F90000, v140, v141, "HUDActivityManager - Updating banner %{public}s", v142, 0xCu);
          swift_arrayDestroy();
          uint64_t v150 = v143;
          uint64_t v93 = (uint64_t)v242;
          MEMORY[0x1C87760E0](v150, -1, -1);
          MEMORY[0x1C87760E0](v142, -1, -1);
        }
        else
        {
          outlined destroy of HUDActivityManager.BannerUpdate(v138);
        }

        uint64_t v151 = (void *)MEMORY[0x1E4FBC8C8];
        unint64_t v152 = *(char **)(v93 + *(int *)(v239 + 40));
        uint64_t v153 = v152;
        if (!v152)
        {
          if (MEMORY[0x1C8776240](v93 + *(int *)(v239 + 44)))
          {
            type metadata accessor for ConversationControlsManager(0);
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v153 = specialized ConversationControlsManager.__allocating_init(activeCall:)();
            uint64_t v154 = *(uint64_t (**)(void))((*v151 & *(void *)v52) + 0xA8);
            uint64_t v155 = v153;
            v239 = (uint64_t)v154;
            uint64_t v156 = (void *)v154();
            v157 = v151;
            if (v156)
            {
              uint64_t v158 = v156;
              uint64_t v159 = (*(uint64_t (**)(void))((*v157 & *v156) + 0x100))();
            }
            else
            {
              uint64_t v159 = 0;
            }
            uint64_t v160 = (*(uint64_t (**)(uint64_t))((*v157 & *(void *)v155) + 0x468))(v159);
            ((uint64_t (*)(uint64_t))v239)(v160);
            (*(void (**)(void))((*v157 & *(void *)v155) + 0x408))();
            swift_unknownObjectRelease();

            uint64_t v151 = v157;
            uint64_t v67 = v223;
          }
          else
          {
            uint64_t v153 = 0;
          }
        }
        uint64_t v161 = (void (*)(uint64_t, char *, void, char *, void, uint64_t, uint8_t *))*((void *)v67 + 4);
        uint64_t v162 = v152;
        uint64_t v163 = v153;
        uint64_t v164 = v153;
        char v165 = v234;
        v161(v236, v240, v235, v164, 0, v237, v67);
        if (v165)
        {

          v247 = v165;
          v166 = v165;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
          if (swift_dynamicCast())
          {
            uint64_t v167 = (uint64_t)v242;
            char v168 = (uint64_t)v230;
            if (v246 == 3)
            {

              uint64_t v196 = v228;
              outlined init with copy of HUDActivityManager.BannerUpdate(v167, v228);
              char v197 = Logger.logObject.getter();
              uint64_t v198 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v197, v198))
              {
                char v199 = (uint8_t *)swift_slowAlloc();
                uint64_t v200 = swift_slowAlloc();
                v245 = v200;
                *(_DWORD *)char v199 = 136446210;
                outlined init with copy of ConversationControlsType(v196 + 8, (uint64_t)aBlock);
                char v201 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
                uint64_t v203 = v202;
                outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
                *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v201, v203, &v245);
                uint64_t v167 = (uint64_t)v242;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                outlined destroy of HUDActivityManager.BannerUpdate(v196);
                _os_log_impl(&dword_1C2F90000, v197, v198, "HUDActivityManager - Unable to update presented system aperture element during continuity session for type %{public}s", v199, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C87760E0](v200, -1, -1);
                MEMORY[0x1C87760E0](v199, -1, -1);
              }
              else
              {
                outlined destroy of HUDActivityManager.BannerUpdate(v196);
              }

              lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
              uint64_t v63 = swift_allocError();
              v219 = 10;
              goto LABEL_116;
            }
            if (v246 == 2)
            {

              v169 = v227;
              outlined init with copy of HUDActivityManager.BannerUpdate(v167, v227);
              uint64_t v170 = Logger.logObject.getter();
              char v171 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v170, v171))
              {
                v172 = (uint8_t *)swift_slowAlloc();
                uint64_t v173 = swift_slowAlloc();
                v245 = v173;
                *(_DWORD *)v172 = 136446210;
                outlined init with copy of ConversationControlsType(v169 + 8, (uint64_t)aBlock);
                uint64_t v174 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
                v176 = v175;
                outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
                *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v174, v176, &v245);
                uint64_t v167 = (uint64_t)v242;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                outlined destroy of HUDActivityManager.BannerUpdate(v169);
                _os_log_impl(&dword_1C2F90000, v170, v171, "HUDActivityManager - Unable to update presented system aperture element for unsupported type %{public}s", v172, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C87760E0](v173, -1, -1);
                MEMORY[0x1C87760E0](v172, -1, -1);
              }
              else
              {
                outlined destroy of HUDActivityManager.BannerUpdate(v169);
              }

              lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
              uint64_t v63 = swift_allocError();
              v219 = 9;
LABEL_116:
              *v218 = v219;
              swift_unknownObjectRelease();
              outlined destroy of HUDActivityManager.BannerUpdate(v167);

LABEL_117:
              swift_release();
              return v63;
            }
          }
          else
          {
            uint64_t v167 = (uint64_t)v242;
            char v168 = (uint64_t)v230;
          }

          outlined init with copy of HUDActivityManager.BannerUpdate(v167, v168);
          v180 = v165;
          char v181 = v165;
          v182 = Logger.logObject.getter();
          char v183 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v182, v183))
          {
            v184 = swift_slowAlloc();
            v241 = (void *)swift_slowAlloc();
            v247 = v241;
            *(_DWORD *)v184 = 136446466;
            outlined init with copy of ConversationControlsType(v168 + 8, (uint64_t)aBlock);
            char v185 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
            v186 = v168;
            v188 = v187;
            outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
            *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v185, v188, (uint64_t *)&v247);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined destroy of HUDActivityManager.BannerUpdate(v186);
            *(_WORD *)(v184 + 12) = 2080;
            *(void *)uint64_t aBlock = v165;
            char v189 = v165;
            uint64_t v190 = String.init<A>(reflecting:)();
            *(void *)uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v190, v191, (uint64_t *)&v247);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1C2F90000, v182, v183, "HUDActivityManager - Unable to update presented system aperture element for type %{public}s: %s", (uint8_t *)v184, 0x16u);
            uint64_t v192 = v241;
            swift_arrayDestroy();
            uint64_t v167 = (uint64_t)v242;
            MEMORY[0x1C87760E0](v192, -1, -1);
            MEMORY[0x1C87760E0](v184, -1, -1);
          }
          else
          {
            outlined destroy of HUDActivityManager.BannerUpdate(v168);
          }
          dismissExistingBanner #1 () in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(v222 & 1);
          lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
          uint64_t v63 = swift_allocError();
          *char v193 = 8;

          swift_unknownObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v167);
          goto LABEL_117;
        }

        char v177 = v225;
        v178 = swift_retain();
        HUDActivityManager.presentedActivity.setter(v178);
        if (v177) {
          char v179 = MEMORY[0x1C8776240](&v177[OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner]);
        }
        else {
          char v179 = 0;
        }
        HUDActivityManager.presentedDynamicIsland.setter(v179);
        uint64_t v194 = outlined init with copy of ConversationControlsType(v236, (uint64_t)aBlock);
        if (aBlock[40] == 3)
        {
          uint64_t v194 = outlined destroy of ConversationControlsType((uint64_t)aBlock);
        }
        else if (aBlock[40] != 4)
        {
          if (aBlock[40] != 6
            || *(void *)aBlock != 25
            || (char v195 = vorrq_s8(*(int8x16_t *)&aBlock[8], *(int8x16_t *)&aBlock[24]),
                *(void *)&vorr_s8(*(int8x8_t *)v195.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v195, v195, 8uLL))))
          {
            outlined destroy of ConversationControlsType((uint64_t)aBlock);
            goto LABEL_106;
          }
        }
        v204 = (void *)(*(uint64_t (**)(uint64_t))((*v151 & *(void *)v52) + 0xA8))(v194);
        if (v204)
        {
          v205 = v204;
          v206 = (void *)(*(uint64_t (**)(void))((*v151 & *v204) + 0xE8))();

          if (v206)
          {
            v207 = swift_allocObject();
            swift_unknownObjectWeakInit();
            v208 = swift_allocObject();
            swift_weakInit();
            v209 = (uint64_t)v242;
            outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v242, (uint64_t)v26);
            v210 = (*(unsigned __int8 *)(v229 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v229 + 80);
            v211 = (v226 + v210 + 7) & 0xFFFFFFFFFFFFFFF8;
            v212 = swift_allocObject();
            *(void *)(v212 + 16) = v207;
            outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v26, v212 + v210);
            *(void *)(v212 + v211) = v208;
            *(void *)&aBlock[32] = partial apply for closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded();
            *(void *)&aBlock[40] = v212;
            *(void *)uint64_t aBlock = MEMORY[0x1E4F143A8];
            *(void *)&aBlock[8] = 1107296256;
            *(void *)&aBlock[16] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
            *(void *)&aBlock[24] = &block_descriptor_74;
            v213 = _Block_copy(aBlock);
            swift_release();
            objc_msgSend(v206, sel_bannerPresentationManagerRequestToPresentBanner_, v213);
            _Block_release(v213);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            outlined destroy of HUDActivityManager.BannerUpdate(v209);
LABEL_107:

            return 0;
          }
        }
LABEL_106:
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v242);
        swift_unknownObjectRelease();
        goto LABEL_107;
      }
      swift_unknownObjectRelease();
    }
  }
  v214 = Logger.logObject.getter();
  v215 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v214, v215))
  {
    v216 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v216 = 0;
    _os_log_impl(&dword_1C2F90000, v214, v215, "HUDActivityManager - Unable to makeSystemApertureElementProvider", v216, 2u);
    MEMORY[0x1C87760E0](v216, -1, -1);
  }

  lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
  uint64_t v63 = swift_allocError();
  *v217 = 8;
  outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v242);
  return v63;
}

uint64_t HUDActivityManager.activityWith(_:)()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(v0 + 240))();
  uint64_t v3 = v2;

  return v3;
}

Swift::Void __swiftcall HUDActivityManager.dismissPresentedActivity()()
{
  if (*(void *)&v0[OBJC_IVAR___CNKHUDActivityManager_presentedActivity])
  {
    uint64_t v1 = v0;
    swift_retain();
    HUDActivityManager.dismissActivity(_:)();
    swift_release();
  }
}

Swift::Void __swiftcall HUDActivityManager.reset()()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR___CNKHUDActivityManager_updates);
  swift_beginAccess();
  *uint64_t v1 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v2 + 256))();
}

Swift::Void __swiftcall HUDActivityManager.dismissTemporaryActivity()()
{
  if (*(void *)(v0 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
  {
    swift_retain();
    if (!HUDActivity.isPersistent.getter()) {
      HUDActivityManager.dismissActivity(_:)();
    }
    swift_release();
  }
}

void HUDActivityManager.shouldUpdate()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v7 = OUTLINED_FUNCTION_1(v6);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_43_17();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_59_9();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_41_20();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_225();
  uint64_t v15 = v1 + OBJC_IVAR___CNKHUDActivityManager_updates;
  OUTLINED_FUNCTION_2();
  uint64_t v16 = *(void *)(*(void *)v15 + 16);
  if (v16)
  {
    outlined init with copy of HUDActivityManager.BannerUpdate(*(void *)v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * (v16 - 1), v0);
    if (*(void *)(v1 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
    {
      OUTLINED_FUNCTION_50();
      uint64_t v18 = *(void (**)(void))(v17 + 184);
      swift_retain();
      OUTLINED_FUNCTION_82_6();
      v18();
      swift_release();
      uint64_t v19 = OUTLINED_FUNCTION_43();
      outlined init with take of HUDActivityManager.BannerUpdate(v19, v20);
      char v21 = static ConversationControlsType.== infix(_:_:)(v0 + 8);
      if (one-time initialization token for banners != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      __swift_project_value_buffer(v22, (uint64_t)static Logger.banners);
      outlined init with copy of HUDActivityManager.BannerUpdate(v2, (uint64_t)v5);
      outlined init with copy of HUDActivityManager.BannerUpdate(v2, v4);
      outlined init with copy of HUDActivityManager.BannerUpdate(v0, (uint64_t)v3);
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        os_log_type_t v35 = v24;
        uint64_t v25 = swift_slowAlloc();
        v37[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315906;
        outlined init with copy of ConversationControlsType((uint64_t)(v5 + 1), (uint64_t)v36);
        uint64_t v26 = OUTLINED_FUNCTION_96_6(*v5);
        uint64_t v34 = v23;
        unint64_t v28 = v27;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v36, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
        uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, v37);
        OUTLINED_FUNCTION_66_7(v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v5);
        *(_WORD *)(v25 + 12) = 2080;
        LOBYTE(v36[0]) = *(unsigned char *)(v4 + 65);
        uint64_t v30 = String.init<A>(reflecting:)();
        v36[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate(v4);
        *(_WORD *)(v25 + 22) = 2080;
        outlined init with copy of ConversationControlsType((uint64_t)(v3 + 1), (uint64_t)v36);
        OUTLINED_FUNCTION_96_6(*v3);
        OUTLINED_FUNCTION_281();
        uint64_t v32 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v36, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
        v36[0] = OUTLINED_FUNCTION_95_5(v32, v33, v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v3);
        *(_WORD *)(v25 + 32) = 1024;
        LODWORD(v36[0]) = v21 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1C2F90000, v34, v35, "HUDActivityManager - current score: %s, temporary: %s, new score: %s shouldUpdate: %{BOOL}d", (uint8_t *)v25, 0x26u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v3);
        outlined destroy of HUDActivityManager.BannerUpdate(v4);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v5);
      }
      outlined destroy of HUDActivityManager.BannerUpdate(v2);
      outlined destroy of HUDActivityManager.BannerUpdate(v0);
    }
    else
    {
      outlined destroy of HUDActivityManager.BannerUpdate(v0);
    }
  }
  OUTLINED_FUNCTION_28();
}

void HUDActivityManager.shouldReplace()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = OUTLINED_FUNCTION_47_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_10_5();
  uint64_t v50 = v12;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v13);
  char v51 = (char *)&v49 - v14;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_58();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_43_17();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_225();
  char v21 = (uint64_t *)(v1 + OBJC_IVAR___CNKHUDActivityManager_updates);
  OUTLINED_FUNCTION_2();
  if (*(void *)(*v21 + 16) || *(void *)(v1 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
  {
    specialized BidirectionalCollection.last.getter(*v21, v4);
    if (__swift_getEnumTagSinglePayload(v4, 1, v10) == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v4, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    }
    else
    {
      outlined init with take of HUDActivityManager.BannerUpdate(v4, v0);
      if (*(void *)(v1 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
      {
        OUTLINED_FUNCTION_50();
        uint64_t v23 = *(void (**)(void))(v22 + 184);
        swift_retain();
        OUTLINED_FUNCTION_82_6();
        v23();
        swift_release();
        outlined init with take of HUDActivityManager.BannerUpdate(v3, v2);
        static HUDActivityManager.BannerUpdate.< infix(_:_:)();
        char v25 = v24;
        outlined init with copy of HUDActivityManager.BannerUpdate(v2, v6);
        if (v25)
        {
          int v26 = *(unsigned __int8 *)(v6 + 65);
          outlined init with copy of HUDActivityManager.BannerUpdate(v6, v7);
          uint64_t v27 = v50;
          uint64_t v28 = (uint64_t)v51;
          if (v26 == 1) {
            char v29 = ConversationControlsType.isInterruptable.getter();
          }
          else {
            char v29 = 0;
          }
          outlined destroy of HUDActivityManager.BannerUpdate(v7);
        }
        else
        {
          char v29 = 1;
          uint64_t v27 = v50;
          uint64_t v28 = (uint64_t)v51;
        }
        outlined destroy of HUDActivityManager.BannerUpdate(v6);
        if (one-time initialization token for banners != -1) {
          swift_once();
        }
        uint64_t v30 = type metadata accessor for Logger();
        __swift_project_value_buffer(v30, (uint64_t)static Logger.banners);
        outlined init with copy of HUDActivityManager.BannerUpdate(v2, (uint64_t)v5);
        outlined init with copy of HUDActivityManager.BannerUpdate(v2, v28);
        outlined init with copy of HUDActivityManager.BannerUpdate(v0, v27);
        unint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        int v33 = v32;
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v34 = swift_slowAlloc();
          HIDWORD(v49) = v33;
          uint64_t v35 = v34;
          uint64_t v50 = swift_slowAlloc();
          v53[0] = v50;
          *(_DWORD *)uint64_t v35 = 136315906;
          outlined init with copy of ConversationControlsType((uint64_t)(v5 + 1), (uint64_t)v52);
          uint64_t v36 = (double *)v27;
          uint64_t v37 = OUTLINED_FUNCTION_96_6(*v5);
          unint64_t v39 = v38;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v52, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
          uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, v53);
          OUTLINED_FUNCTION_66_7(v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v5);
          *(_WORD *)(v35 + 12) = 2080;
          uint64_t v41 = (uint64_t)v51;
          LOBYTE(v52[0]) = v51[65];
          uint64_t v42 = String.init<A>(reflecting:)();
          uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, v53);
          OUTLINED_FUNCTION_76_6(v44);
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v41);
          *(_WORD *)(v35 + 22) = 2080;
          outlined init with copy of ConversationControlsType((uint64_t)(v36 + 1), (uint64_t)v52);
          uint64_t v45 = OUTLINED_FUNCTION_96_6(*v36);
          unint64_t v47 = v46;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v52, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
          uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v47, v53);
          OUTLINED_FUNCTION_76_6(v48);
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v36);
          *(_WORD *)(v35 + 32) = 1024;
          v52[0] = v29 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl(&dword_1C2F90000, v31, BYTE4(v49), "HUDActivityManager - current score: %s, temporary: %s, new score: %s shouldReplace: %{BOOL}d", (uint8_t *)v35, 0x26u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {

          outlined destroy of HUDActivityManager.BannerUpdate(v27);
          outlined destroy of HUDActivityManager.BannerUpdate(v28);
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v5);
        }
        outlined destroy of HUDActivityManager.BannerUpdate(v2);
        outlined destroy of HUDActivityManager.BannerUpdate(v0);
      }
      else
      {
        outlined destroy of HUDActivityManager.BannerUpdate(v0);
      }
    }
  }
  OUTLINED_FUNCTION_28();
}

void HUDActivityManager.dismissActivity(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.banners);
  id v5 = v0;
  swift_retain_n();
  uint64_t v6 = (char *)v5;
  uint64_t v7 = v4;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = OUTLINED_FUNCTION_15_1();
    v28[0] = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v12 = OUTLINED_FUNCTION_8(v11);
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_60();
    uint64_t v13 = *(void *)&v6[OBJC_IVAR___CNKHUDActivityManager_presentedActivity];
    os_log_type_t v27 = v9;
    if (v13)
    {
      uint64_t v14 = v13 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId;
      uint64_t v15 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v7, v14, v15);
      uint64_t v17 = v7;
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v15 = type metadata accessor for UUID();
      uint64_t v17 = v7;
      uint64_t v18 = 1;
    }
    __swift_storeEnumTagSinglePayload(v17, v18, 1, v15);
    uint64_t v19 = specialized >> prefix<A>(_:)(v7);
    unint64_t v21 = v20;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type UUID and conformance UUID();
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_8();
    _os_log_impl(&dword_1C2F90000, v8, v27, "HUDActivityManager Trying to dismiss activity %s -- %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    OUTLINED_FUNCTION_33_8();
  }
  if (*(void *)&v6[OBJC_IVAR___CNKHUDActivityManager_presentedActivity])
  {
    swift_retain();
    if (static UUID.== infix(_:_:)())
    {
      uint64_t v24 = HUDActivityManager.presentedActivity.setter(0);
      char v25 = (void *)HUDActivityManager.checkUpdatesAndPresentIfNeeded()(v24);
      swift_release();

      swift_release();
LABEL_15:
      OUTLINED_FUNCTION_28();
      return;
    }
    swift_release();
  }
  int v26 = (uint64_t *)&v6[OBJC_IVAR___CNKHUDActivityManager_updates];
  OUTLINED_FUNCTION_6_1();
  swift_retain();
  if (*(void *)(*v26 + 16) >= specialized MutableCollection._halfStablePartition(isSuffixElement:)(v26, v2))
  {
    specialized Array.replaceSubrange<A>(_:with:)();
    swift_endAccess();
    goto LABEL_15;
  }
  __break(1u);
}

id HUDActivityManager.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR___CNKHUDActivityManager_displayResolver];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR___CNKHUDActivityManager_features;
  uint64_t v3 = one-time initialization token for shared;
  uint64_t v4 = v0;
  if (v3 != -1) {
    swift_once();
  }
  id v5 = static Features.shared;
  *(void *)&v4[v2] = static Features.shared;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR___CNKHUDActivityManager_presentedActivity] = 0;
  *(void *)&v4[OBJC_IVAR___CNKHUDActivityManager_updates] = MEMORY[0x1E4FBC860];
  id v6 = v5;

  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for HUDActivityManager();
  return objc_msgSendSuper2(&v8, sel_init);
}

id HUDActivityManager.__deallocating_deinit()
{
  return HUDActivityManager.__deallocating_deinit(type metadata accessor for HUDActivityManager);
}

BOOL SystemBannerHostViewController.systemApertureElementIsShowingHUD.getter()
{
  OUTLINED_FUNCTION_4_13();
  if ((*(uint64_t (**)(void))(v0 + 1360))() != 4) {
    return 0;
  }
  OUTLINED_FUNCTION_4_13();
  return (*(uint64_t (**)(void))(v1 + 472))() == 0;
}

uint64_t HUDActivityManager.presentedDynamicIsland.getter()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = (*(uint64_t (**)(void))((*v1 & *v2) + 0x1A0))();

  return v4;
}

uint64_t HUDActivityManager.presentedDynamicIsland.setter(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA8))();
  if (v4)
  {
    id v5 = (void *)v4;
    if (a1)
    {
      type metadata accessor for SystemBannerHostViewController();
      uint64_t v6 = swift_dynamicCastClass();
      if (v6) {
        swift_unknownObjectRetain();
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    (*(void (**)(uint64_t))((*v3 & *v5) + 0x1A8))(v6);
  }
  return swift_unknownObjectRelease();
}

uint64_t HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.getter()
{
  OUTLINED_FUNCTION_5_13();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 168))();
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (void *)v1;
  OUTLINED_FUNCTION_34_22();
  uint64_t v4 = (void *)(*(uint64_t (**)(void))(v3 + 416))();

  if (!v4) {
    return 0;
  }
  OUTLINED_FUNCTION_5_13();
  char v6 = (*(uint64_t (**)(void))(v5 + 1096))();

  return v6 & 1;
}

void HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.setter(char a1)
{
  OUTLINED_FUNCTION_5_13();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 168))();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    OUTLINED_FUNCTION_34_22();
    id v7 = (id)(*(uint64_t (**)(void))(v5 + 416))();

    if (v7)
    {
      OUTLINED_FUNCTION_34_22();
      (*(void (**)(void))(v6 + 1104))(a1 & 1);
    }
  }
}

void (*HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.getter() & 1;
  return HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.modify;
}

void HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.modify(uint64_t a1)
{
}

uint64_t HUDActivityManager.getCurrentUpdate()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v6);
  objc_super v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v28 - v10;
  swift_beginAccess();
  specialized RangeReplaceableCollection<>.popLast()((uint64_t)v5);
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, (uint64_t)v6) != 1)
  {
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v5, (uint64_t)v11);
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v11, a1);
    goto LABEL_6;
  }
  uint64_t v12 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  if (!(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78))(v12))
  {
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    unsigned __int8 v31 = -1;
    goto LABEL_8;
  }
  uint64_t v14 = v13;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 40))(v29, ObjectType, v14);
  swift_unknownObjectRelease();
  if (v31 == 255)
  {
LABEL_8:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v29, &demangling cache variable for type metadata for ConversationControlsType?);
    uint64_t v25 = a1;
    uint64_t v26 = 1;
    return __swift_storeEnumTagSinglePayload(v25, v26, 1, (uint64_t)v6);
  }
  outlined init with take of ConversationControlsType(v29, v32);
  outlined init with copy of ConversationControlsType((uint64_t)v32, (uint64_t)v29);
  uint64_t v16 = type metadata accessor for UUID();
  v28[1] = v28;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  unint64_t v20 = &v8[v6[11]];
  *((void *)v20 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(void *)objc_super v8 = 0x4082C00000000000;
  outlined init with copy of ConversationControlsType((uint64_t)v29, (uint64_t)(v8 + 8));
  *((void *)v8 + 7) = 0;
  v8[64] = 1;
  *((void *)v20 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v8[65] = 1;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(&v8[v6[8]], v19, v16);
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  outlined destroy of ConversationControlsType((uint64_t)v29);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v8[v6[9]], v24, v21);
  *(void *)&v8[v6[10]] = 0;
  outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v8, a1);
  outlined destroy of ConversationControlsType((uint64_t)v32);
LABEL_6:
  uint64_t v25 = a1;
  uint64_t v26 = 0;
  return __swift_storeEnumTagSinglePayload(v25, v26, 1, (uint64_t)v6);
}

uint64_t specialized RangeReplaceableCollection<>.popLast()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v6);
  objc_super v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)v1 + 16))
  {
    specialized Array._customRemoveLast()((uint64_t)v5);
    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      specialized Array.remove(at:)();
    }
    else
    {
      outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v5, (uint64_t)v8);
      outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v8, a1);
    }
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
  }
  else
  {
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v6);
  }
}

void dismissExistingBanner #1 () in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(char a1)
{
  if (a1)
  {
    if (one-time initialization token for banners != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)static Logger.banners);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1C2F90000, v2, v3, "HUDActivityManager - Dismissing current banner", v4, 2u);
      MEMORY[0x1C87760E0](v4, -1, -1);
    }

    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    HUDActivityManager.dismissPresentedBanner(forReason:animated:)(v5, 0);
  }
}

Swift::Void __swiftcall HUDActivityManager.dismissPresentedBanner(forReason:animated:)(Swift::String forReason, Swift::Bool animated)
{
  object = forReason._object;
  uint64_t countAndFlagsBits = forReason._countAndFlagsBits;
  OUTLINED_FUNCTION_0_20();
  uint64_t v6 = (*(uint64_t (**)(void))(v5 + 168))();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = (id)MEMORY[0x1C87730B0](countAndFlagsBits, object);
    objc_msgSend(v7, sel_dismissPresentedBannerForReason_animated_, v8, animated);
  }
}

uint64_t closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x1C8776240](a2 + 16);
  uint64_t v10 = (void *)MEMORY[0x1E4FBC8C8];
  if (!v9) {
    goto LABEL_6;
  }
  uint64_t v11 = v9;
  uint64_t v12 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0xA8))();

  if (!v12) {
    goto LABEL_9;
  }
  uint64_t v13 = (void *)(*(uint64_t (**)(void))((*v10 & *(void *)v12) + 0xE8))();

  if (v13)
  {
    if (objc_msgSend(v13, sel_respondsToSelector_, sel_bannerPresentationManagerWantsSpringBoardIsLockedStatus))LOBYTE(v12) = objc_msgSend(v13, sel_bannerPresentationManagerWantsSpringBoardIsLockedStatus); {
    else
    }
      LOBYTE(v12) = 0;
    swift_unknownObjectRelease();
  }
  else
  {
LABEL_6:
    LOBYTE(v12) = 0;
  }
LABEL_9:
  outlined init with copy of HUDActivityManager.BannerUpdate(a3, (uint64_t)v8);
  if ((a1 & 1) == 0) {
    return outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);
  }
  outlined init with copy of ConversationControlsType((uint64_t)(v8 + 8), (uint64_t)&v22);
  if (v25 == 4
    || v25 == 6
    && v22 == 25
    && (int8x16_t v14 = vorrq_s8(v23, v24),
        !*(void *)&vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL))))
  {
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);
  }
  else
  {
    outlined destroy of ConversationControlsType((uint64_t)&v22);
    uint64_t result = outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);
    if (v12) {
      return result;
    }
  }
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.banners);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_1C2F90000, v17, v18, "HUDActivityManager - Presenting banner because ICS full screen", v19, 2u);
    MEMORY[0x1C87760E0](v19, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v20 = (*(uint64_t (**)(uint64_t))((*v10 & *(void *)static BannerActivityManager.shared) + 0x108))(a3);
    CoupledHUDActivity.childActivity.setter(v20);
    return swift_release();
  }
  return result;
}

id one-time initialization function for shared(uint64_t a1, uint64_t (*a2)(void), void *a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)a2()), sel_init);
  *a3 = result;
  return result;
}

id static BannerActivityManager.shared.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static BannerActivityManager.shared);
}

uint64_t key path getter for BannerActivityManager.bannerPresentationManager : BannerActivityManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x90))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for BannerActivityManager.bannerPresentationManager : BannerActivityManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x98);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t BannerActivityManager.bannerPresentationManager.setter(uint64_t a1, uint64_t a2)
{
  return BannerActivityManager.bannerPresentationManager.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__bannerPresentationManager);
}

uint64_t BannerActivityManager.bannerPresentationManager.getter()
{
  return BannerActivityManager.bannerPresentationManager.getter(&OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__bannerPresentationManager);
}

uint64_t (*BannerActivityManager.bannerPresentationManager.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__bannerPresentationManager;
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a1 = v4;
  a1[1] = v5;
  return BannerActivityManager.bannerPresentationManager.modify;
}

uint64_t BannerActivityManager.bannerPresentationManager.modify(uint64_t *a1, char a2)
{
  return BannerActivityManager.bannerPresentationManager.modify(a1, a2, BannerActivityManager.bannerPresentationManager.setter);
}

uint64_t key path getter for BannerActivityManager.callUIPresentationStateProvider : BannerActivityManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xC0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for BannerActivityManager.callUIPresentationStateProvider : BannerActivityManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xC8);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t BannerActivityManager.callUIPresentationStateProvider.setter(uint64_t a1, uint64_t a2)
{
  return BannerActivityManager.bannerPresentationManager.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__callUIPresentationStateProvider);
}

uint64_t BannerActivityManager.bannerPresentationManager.setter(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  if (MEMORY[0x1C8776240](v5))
  {
    swift_unknownObjectRelease();
  }
  else
  {
    *(void *)(v5 + 8) = a2;
    swift_unknownObjectWeakAssign();
  }
  return swift_unknownObjectRelease();
}

uint64_t BannerActivityManager.callUIPresentationStateProvider.getter()
{
  return BannerActivityManager.bannerPresentationManager.getter(&OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__callUIPresentationStateProvider);
}

uint64_t BannerActivityManager.bannerPresentationManager.getter(void *a1)
{
  return MEMORY[0x1C8776240](v1 + *a1);
}

uint64_t (*BannerActivityManager.callUIPresentationStateProvider.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__callUIPresentationStateProvider;
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a1 = v4;
  a1[1] = v5;
  return BannerActivityManager.callUIPresentationStateProvider.modify;
}

uint64_t BannerActivityManager.callUIPresentationStateProvider.modify(uint64_t *a1, char a2)
{
  return BannerActivityManager.bannerPresentationManager.modify(a1, a2, BannerActivityManager.callUIPresentationStateProvider.setter);
}

uint64_t BannerActivityManager.bannerPresentationManager.modify(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[1];
  if ((a2 & 1) == 0) {
    return a3(*a1, v4);
  }
  uint64_t v5 = swift_unknownObjectRetain();
  a3(v5, v4);
  return swift_unknownObjectRelease();
}

uint64_t static BannerActivityManager.DismissActivityRequest.Reason.== infix(_:_:)()
{
  return 1;
}

void BannerActivityManager.DismissActivityRequest.Reason.hash(into:)()
{
}

Swift::Int BannerActivityManager.DismissActivityRequest.Reason.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance BannerActivityManager.DismissActivityRequest.Reason()
{
  return BannerActivityManager.DismissActivityRequest.Reason.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance BannerActivityManager.DismissActivityRequest.Reason()
{
}

uint64_t BannerActivityManager.presentedActivity.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

void BannerActivityManager.start(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_47_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_55_0();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.banners);
  outlined init with copy of HUDActivityManager.BannerUpdate(v5, (uint64_t)v11);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v25 = v5;
    uint64_t v15 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v16 = OUTLINED_FUNCTION_9_0();
    uint64_t v24 = v2;
    v27[0] = v16;
    uint64_t v26 = v3;
    _DWORD *v15 = 136315138;
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v11, v1);
    uint64_t v17 = OUTLINED_FUNCTION_93_3();
    unint64_t v19 = v18;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, v27);
    OUTLINED_FUNCTION_8_5(v20);
    uint64_t v3 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v5 = v25;
    swift_bridgeObjectRelease();
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v11);
    OUTLINED_FUNCTION_268(&dword_1C2F90000, v13, v14, "BannerActivityManager - start bannerUpdate: %s");
    swift_arrayDestroy();
    uint64_t v2 = v24;
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v11);
  }

  uint64_t v21 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x138))(v5);
  if (v21)
  {
    int8x16_t v23 = *(void (**)(void))(*(void *)v21 + 184);
    swift_retain();
    OUTLINED_FUNCTION_56_11();
    v23();
    outlined init with copy of ConversationControlsType(v2 + 8, (uint64_t)v27);
    outlined destroy of HUDActivityManager.BannerUpdate(v2);
    BannerActivityManager.presentNewBanner(as:type:activityUUID:fromActivityManager:)();
    swift_release();
    outlined destroy of ConversationControlsType((uint64_t)v27);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t BannerActivityManager.dismissPresentedActivity(request:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 272))();
}

void BannerActivityManager.dismissActivity(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.banners);
  id v5 = v0;
  swift_retain_n();
  uint64_t v6 = v5;
  uint64_t v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, (os_log_type_t)v8))
  {
    int v41 = v8;
    uint64_t v9 = OUTLINED_FUNCTION_15_1();
    uint64_t v40 = OUTLINED_FUNCTION_14_3();
    v44[0] = v40;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    v39[1] = v39;
    uint64_t v11 = OUTLINED_FUNCTION_8(v10);
    MEMORY[0x1F4188790](v11);
    OUTLINED_FUNCTION_60();
    uint64_t v12 = *(void *)((char *)v6 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity);
    uint64_t v42 = v4;
    if (v12)
    {
      uint64_t v13 = v12 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId;
      uint64_t v14 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v8, v13, v14);
      uint64_t v16 = v8;
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v14 = type metadata accessor for UUID();
      uint64_t v16 = v8;
      uint64_t v17 = 1;
    }
    __swift_storeEnumTagSinglePayload(v16, v17, 1, v14);
    uint64_t v18 = specialized >> prefix<A>(_:)(v8);
    unint64_t v20 = v19;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type UUID and conformance UUID();
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C2F90000, v7, (os_log_type_t)v41, "BannerActivityManager dismiss activity %s -- %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    swift_release_n();
  }
  if (*(void *)((char *)v6 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity))
  {
    swift_retain();
    OUTLINED_FUNCTION_35();
    if (static UUID.== infix(_:_:)())
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v6) + 0x150))(0xD000000000000015, 0x80000001C37AE870, 1);
      BannerActivityManager.presentedActivity.setter(0);
      int8x16_t v23 = (void *)((char *)v6 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
      OUTLINED_FUNCTION_6_1();
      swift_retain();
      if (*(void *)(*v23 + 16) >= specialized MutableCollection._halfStablePartition(isSuffixElement:)(v23, v2))
      {
        specialized Array.replaceSubrange<A>(_:with:)();
        swift_endAccess();
        uint64_t v24 = v6;
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          os_log_type_t v27 = (_DWORD *)OUTLINED_FUNCTION_37();
          v44[0] = OUTLINED_FUNCTION_9_0();
          *os_log_type_t v27 = 136315138;
          uint64_t v43 = *v23;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
          uint64_t v28 = String.init<A>(reflecting:)();
          uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v44);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v25, v26, "BannerActivityManager current updates left to present %s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {
        }
        BannerActivityManager.presentTopMostUpdate()();
        swift_release();
LABEL_22:
        OUTLINED_FUNCTION_28();
        return;
      }
      goto LABEL_24;
    }
    swift_release();
  }
  uint64_t v30 = (void *)((char *)v6 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
  OUTLINED_FUNCTION_6_1();
  swift_retain();
  unsigned __int8 v31 = (uint64_t *)OUTLINED_FUNCTION_43();
  if (*(void *)(*v30 + 16) >= specialized MutableCollection._halfStablePartition(isSuffixElement:)(v31, v32))
  {
    specialized Array.replaceSubrange<A>(_:with:)();
    swift_endAccess();
    int v33 = v6;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (_DWORD *)OUTLINED_FUNCTION_37();
      v44[0] = OUTLINED_FUNCTION_9_0();
      _DWORD *v36 = 136315138;
      uint64_t v43 = *v30;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
      uint64_t v37 = String.init<A>(reflecting:)();
      uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v34, v35, "BannerActivityManager all updates %s left after dismissal");
      OUTLINED_FUNCTION_110();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    goto LABEL_22;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void BannerActivityManager.presentTopMostUpdate()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_59_9();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v29 - v7;
  uint64_t v9 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_43_17();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_6_1();
  specialized RangeReplaceableCollection<>.popLast()((uint64_t)v8);
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  }
  else
  {
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v8, v0);
    uint64_t v12 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x138))(v0);

    if (v12)
    {
      if (one-time initialization token for banners != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.banners);
      swift_retain_n();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      int v17 = v16;
      if (os_log_type_enabled(v15, v16))
      {
        int v31 = v17;
        uint64_t v18 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v30 = OUTLINED_FUNCTION_9_0();
        v32[0] = v30;
        long long v29[2] = v18;
        *uint64_t v18 = 136315138;
        v29[1] = v18 + 1;
        OUTLINED_FUNCTION_32_24();
        v19();
        uint64_t v20 = OUTLINED_FUNCTION_93_3();
        unint64_t v22 = v21;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v3, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, v32);
        OUTLINED_FUNCTION_8_5(v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v15, (os_log_type_t)v31, "BannerActivityManager - HUDActivityPresenting: %s");
        OUTLINED_FUNCTION_110();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
        swift_release_n();
      }

      OUTLINED_FUNCTION_32_24();
      v28();
      outlined init with copy of ConversationControlsType(v2 + 8, (uint64_t)v32);
      outlined destroy of HUDActivityManager.BannerUpdate(v2);
      BannerActivityManager.presentNewBanner(as:type:activityUUID:fromActivityManager:)();
      swift_release();
      outlined destroy of ConversationControlsType((uint64_t)v32);
    }
    else
    {
      if (one-time initialization token for banners != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      __swift_project_value_buffer(v24, (uint64_t)static Logger.banners);
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v27 = (uint8_t *)OUTLINED_FUNCTION_8_0();
        *(_WORD *)os_log_type_t v27 = 0;
        _os_log_impl(&dword_1C2F90000, v25, v26, "BannerActivityManager -No activity", v27, 2u);
        OUTLINED_FUNCTION_3();
      }
    }
    outlined destroy of HUDActivityManager.BannerUpdate(v0);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t BannerActivityManager.isPresentingFullScreenCallUI.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v0 + 192))();
  if (result)
  {
    uint64_t v3 = v2;
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    swift_unknownObjectRelease();
    return v3 & 1;
  }
  return result;
}

void BannerActivityManager.canPresent(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v153 = (_DWORD *)v4;
  uint64_t v5 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_4();
  uint64_t v146 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_10_5();
  uint64_t v150 = v8;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v9);
  uint64_t v142 = (char *)&v133 - v10;
  uint64_t v11 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_10_5();
  uint64_t v136 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  uint64_t v149 = (char *)&v133 - v15;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v133 - v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_8_4();
  uint64_t v134 = v20;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_8_4();
  uint64_t v137 = v22;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v23);
  uint64_t v141 = (uint64_t)&v133 - v24;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v25);
  uint64_t v140 = (uint64_t)&v133 - v26;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_8_4();
  uint64_t v139 = v28;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_8_4();
  uint64_t v145 = v30;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v31);
  int v33 = (char *)&v133 - v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v35 = OUTLINED_FUNCTION_8(v34);
  MEMORY[0x1F4188790](v35);
  uint64_t v138 = (uint64_t)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_8_4();
  uint64_t v144 = v38;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_8_4();
  uint64_t v147 = v40;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_8_4();
  uint64_t v143 = v42;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v43);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v44);
  OUTLINED_FUNCTION_58();
  MEMORY[0x1F4188790](v45);
  unint64_t v47 = (char *)&v133 - v46;
  uint64_t v48 = (uint64_t *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
  OUTLINED_FUNCTION_2();
  uint64_t v49 = *v48;
  uint64_t v154 = v47;
  specialized BidirectionalCollection.last.getter(v49, (uint64_t)v47);
  uint64_t v50 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
  uint64_t v152 = v11;
  if (v50)
  {
    OUTLINED_FUNCTION_50();
    char v52 = *(void (**)(void))(v51 + 184);
    swift_retain();
    OUTLINED_FUNCTION_56_11();
    v52();
    uint64_t v11 = v152;
    swift_release();
    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v53 = 1;
  }
  __swift_storeEnumTagSinglePayload(v2, v53, 1, v11);
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v151 = v5;
  uint64_t v54 = __swift_project_value_buffer(v5, (uint64_t)static Logger.banners);
  outlined init with copy of HUDActivityManager.BannerUpdate?(v2, v1);
  uint64_t v55 = v3;
  uint64_t v148 = v54;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = OUTLINED_FUNCTION_15_1();
    uint64_t v59 = OUTLINED_FUNCTION_14_3();
    uint64_t v135 = v2;
    uint64_t v133 = v59;
    v156[0] = v59;
    *(_DWORD *)uint64_t v58 = 136315394;
    uint64_t v60 = specialized >> prefix<A>(_:)();
    uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, v156);
    OUTLINED_FUNCTION_319(v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v155 = *v48;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    uint64_t v63 = String.init<A>(reflecting:)();
    uint64_t v155 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v56, v57, "BannerActivityManager -PresentedActivity:%s CurrentUpdates %s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    uint64_t v2 = v135;
    OUTLINED_FUNCTION_3();
    uint64_t v11 = v152;
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  }
  uint64_t v65 = v150;
  char v66 = BannerActivityManager.isPresentingFullScreenCallUI.getter();
  uint64_t v67 = v151;
  uint64_t v68 = (uint64_t)v149;
  if (v66)
  {
    ConversationControlsType.canShowOverICS.getter();
    if ((v69 & 1) == 0)
    {
      outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v153, (uint64_t)v33);
      char v110 = (void *)Logger.logObject.getter();
      os_log_type_t v111 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_92(v111))
      {
        uint64_t v112 = (_DWORD *)OUTLINED_FUNCTION_37();
        v156[0] = OUTLINED_FUNCTION_9_0();
        *uint64_t v112 = 136315138;
        uint64_t v113 = v143;
        outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v33, v143);
        uint64_t v114 = OUTLINED_FUNCTION_25_41();
        uint64_t v135 = v2;
        unint64_t v116 = v115;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v113, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v117 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v114, v116, v156);
        OUTLINED_FUNCTION_319(v117);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v33);
        OUTLINED_FUNCTION_73_0(&dword_1C2F90000, v118, v119, "BannerActivityManager - denying presentation of %s because CallUI is full-screen");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        uint64_t v85 = v135;
      }
      else
      {

        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v33);
        uint64_t v85 = v2;
      }
      goto LABEL_37;
    }
  }
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v154, 1, v11);
  uint64_t v71 = v147;
  outlined init with copy of HUDActivityManager.BannerUpdate?(v2, v147);
  if (EnumTagSinglePayload == 1 && (OUTLINED_FUNCTION_9_1(v71), v72))
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v71, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v73 = v136;
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v153, v136);
    uint64_t v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = v11;
      uint64_t v77 = (_DWORD *)OUTLINED_FUNCTION_37();
      v156[0] = OUTLINED_FUNCTION_9_0();
      *uint64_t v77 = 136315138;
      uint64_t v153 = v77 + 1;
      uint64_t v78 = v73;
      uint64_t v79 = v143;
      outlined init with copy of HUDActivityManager.BannerUpdate(v78, v143);
      __swift_storeEnumTagSinglePayload(v79, 0, 1, v76);
      uint64_t v80 = v2;
      uint64_t v81 = specialized >> prefix<A>(_:)();
      unint64_t v83 = v82;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v79, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      uint64_t v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v83, v156);
      OUTLINED_FUNCTION_319(v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of HUDActivityManager.BannerUpdate(v136);
      OUTLINED_FUNCTION_268(&dword_1C2F90000, v74, v75, "BannerActivityManager - allowing presentation of %s because no banners are tracked");
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

      uint64_t v85 = v80;
LABEL_37:
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v85, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      goto LABEL_38;
    }

    outlined destroy of HUDActivityManager.BannerUpdate(v73);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v71, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v86 = v144;
    outlined init with copy of HUDActivityManager.BannerUpdate?(v2, v144);
    OUTLINED_FUNCTION_9_1(v86);
    if (!v72)
    {
      uint64_t v94 = v86;
      uint64_t v95 = v145;
      outlined init with take of HUDActivityManager.BannerUpdate(v94, v145);
      uint64_t v96 = v146;
      uint64_t v97 = v142;
      OUTLINED_FUNCTION_2_1();
      v98();
      uint64_t v99 = v139;
      outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v153, v139);
      uint64_t v100 = v140;
      outlined init with copy of HUDActivityManager.BannerUpdate(v95, v140);
      uint64_t v101 = v141;
      outlined init with copy of HUDActivityManager.BannerUpdate(v95, v141);
      uint64_t v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_92(v103))
      {
        uint64_t v105 = swift_slowAlloc();
        uint64_t v150 = OUTLINED_FUNCTION_9_0();
        v156[0] = v150;
        *(_DWORD *)uint64_t v105 = 67109378;
        OUTLINED_FUNCTION_100_4();
        outlined destroy of HUDActivityManager.BannerUpdate(v99);
        outlined destroy of HUDActivityManager.BannerUpdate(v100);
        LODWORD(v155) = v97;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v105 + 8) = 2080;
        uint64_t v149 = (char *)(v105 + 10);
        uint64_t v106 = v143;
        outlined init with copy of HUDActivityManager.BannerUpdate(v101, v143);
        OUTLINED_FUNCTION_25_41();
        OUTLINED_FUNCTION_281();
        uint64_t v107 = outlined destroy of OS_dispatch_queue.SchedulerOptions?(v106, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v109 = OUTLINED_FUNCTION_95_5(v107, v108, v156);
        OUTLINED_FUNCTION_319(v109);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate(v101);
        _os_log_impl(&dword_1C2F90000, v102, (os_log_type_t)v11, "BannerActivityManager - allowing presentation %{BOOL}d currently presented %s", (uint8_t *)v105, 0x12u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        (*(void (**)(char *, uint64_t))(v96 + 8))(v142, v151);
      }
      else
      {
        outlined destroy of HUDActivityManager.BannerUpdate(v99);
        outlined destroy of HUDActivityManager.BannerUpdate(v100);
        outlined destroy of HUDActivityManager.BannerUpdate(v101);

        (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v67);
      }
      uint64_t v132 = v145;
LABEL_36:
      outlined destroy of HUDActivityManager.BannerUpdate(v132);
      uint64_t v85 = v2;
      goto LABEL_37;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v86, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v87 = v138;
    outlined init with copy of HUDActivityManager.BannerUpdate?((uint64_t)v154, v138);
    OUTLINED_FUNCTION_9_1(v87);
    uint64_t v88 = v146;
    if (!v72)
    {
      uint64_t v120 = v87;
      uint64_t v121 = v137;
      outlined init with take of HUDActivityManager.BannerUpdate(v120, v137);
      OUTLINED_FUNCTION_2_1();
      v122();
      uint64_t v123 = v134;
      outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v153, v134);
      outlined init with copy of HUDActivityManager.BannerUpdate(v121, (uint64_t)v18);
      outlined init with copy of HUDActivityManager.BannerUpdate(v121, v68);
      uint64_t v124 = Logger.logObject.getter();
      os_log_type_t v125 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_12(v125))
      {
        uint64_t v127 = swift_slowAlloc();
        LODWORD(v148) = v65;
        uint64_t v128 = v127;
        uint64_t v147 = OUTLINED_FUNCTION_9_0();
        v156[0] = v147;
        *(_DWORD *)uint64_t v128 = 67109378;
        OUTLINED_FUNCTION_100_4();
        outlined destroy of HUDActivityManager.BannerUpdate(v123);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v18);
        LODWORD(v155) = v65;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v128 + 8) = 2080;
        uint64_t v145 = v128 + 10;
        uint64_t v129 = v143;
        outlined init with copy of HUDActivityManager.BannerUpdate(v68, v143);
        OUTLINED_FUNCTION_25_41();
        OUTLINED_FUNCTION_281();
        uint64_t v130 = outlined destroy of OS_dispatch_queue.SchedulerOptions?(v129, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v155 = OUTLINED_FUNCTION_95_5(v130, v131, v156);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of HUDActivityManager.BannerUpdate(v68);
        _os_log_impl(&dword_1C2F90000, v124, (os_log_type_t)v148, "BannerActivityManager - allowing presentation2 %{BOOL}d topMostUpdate: %s", (uint8_t *)v128, 0x12u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v150, v151);
      }
      else
      {
        outlined destroy of HUDActivityManager.BannerUpdate(v123);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v18);
        outlined destroy of HUDActivityManager.BannerUpdate(v68);

        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v65, v67);
      }
      uint64_t v132 = v137;
      goto LABEL_36;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v87, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v89 = (void *)Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_12(v90))
    {
      uint64_t v91 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v91);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v92, v93, "BannerActivityManager - allowing presentation3 ");
      OUTLINED_FUNCTION_3();
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
LABEL_38:
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v154, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_28();
}

void BannerActivityManager.presentIfAble(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_41_20();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v70 - v10;
  uint64_t v12 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_58();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v70 - v18;
  OUTLINED_FUNCTION_0_3();
  if ((*(uint64_t (**)(uint64_t))(v20 + 304))(v6))
  {
    if (one-time initialization token for banners != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    uint64_t v22 = OUTLINED_FUNCTION_83_5(v21, (uint64_t)static Logger.banners);
    outlined init with copy of HUDActivityManager.BannerUpdate(v22, (uint64_t)v19);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v74 = OUTLINED_FUNCTION_9_0();
      uint64_t v75 = v6;
      v76[0] = v74;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v73 = (uint64_t)(v25 + 4);
      outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v19, (uint64_t)v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
      uint64_t v26 = specialized >> prefix<A>(_:)();
      unint64_t v28 = v27;
      uint64_t v6 = v75;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, v76);
      OUTLINED_FUNCTION_32_4(v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v19);
      _os_log_impl(&dword_1C2F90000, v23, v24, "BannerActivityManager - presenting new bannerUpdate: %s", v25, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v19);
    }

    outlined init with copy of HUDActivityManager.BannerUpdate(v6, v1);
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for HUDActivity(0);
    uint64_t v41 = swift_allocObject();
    HUDActivity.init(withUpdate:dismissHandler:)(v1, (uint64_t)partial apply for closure #1 in BannerActivityManager.presentIfAble(_:), v40);
    BannerActivityManager.presentedActivity.setter(v41);
    swift_retain();
    goto LABEL_28;
  }
  uint64_t v73 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity;
  uint64_t v30 = *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
  uint64_t v75 = v2;
  if (v30)
  {
    uint64_t v74 = (uint64_t)v11;
    uint64_t v31 = *(void (**)(uint64_t))(*(void *)v30 + 184);
    uint64_t v32 = swift_retain();
    v31(v32);
    outlined init with copy of ConversationControlsType(v1 + 8, (uint64_t)v76);
    outlined destroy of HUDActivityManager.BannerUpdate(v1);
    char v33 = static ConversationControlsType.== infix(_:_:)((uint64_t)v76);
    outlined destroy of ConversationControlsType((uint64_t)v76);
    if (v33)
    {
      if (one-time initialization token for banners != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.banners);
      uint64_t v35 = (void *)Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_12(v36))
      {
        uint64_t v37 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_23_1(v37);
        OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v38, v39, "BannerActivityManager - allowing banner update since it has the same type as currently presented update");
        OUTLINED_FUNCTION_3();
      }

      goto LABEL_28;
    }
    swift_release();
    uint64_t v11 = (char *)v74;
    uint64_t v2 = v75;
  }
  uint64_t v42 = (uint64_t *)&v4[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
  OUTLINED_FUNCTION_6_1();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v43 = *(void *)(*v42 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
  *(void *)(*v42 + 16) = v43 + 1;
  OUTLINED_FUNCTION_50_12();
  outlined init with copy of HUDActivityManager.BannerUpdate(v6, v44 + *(void *)(v14 + 72) * v43);
  specialized MutableCollection<>.sort(by:)(v42);
  swift_endAccess();
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  uint64_t v46 = OUTLINED_FUNCTION_83_5(v45, (uint64_t)static Logger.banners);
  outlined init with copy of HUDActivityManager.BannerUpdate(v46, v3);
  uint64_t v74 = (uint64_t)v42;
  unint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v72 = v12;
  if (v49)
  {
    uint64_t v50 = (uint8_t *)OUTLINED_FUNCTION_37();
    v76[0] = OUTLINED_FUNCTION_9_0();
    uint64_t v71 = v42;
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v70 = v50 + 4;
    outlined init with copy of HUDActivityManager.BannerUpdate(v3, (uint64_t)v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    uint64_t v51 = specialized >> prefix<A>(_:)();
    unint64_t v53 = v52;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v54 = v51;
    uint64_t v2 = v75;
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v53, v76);
    OUTLINED_FUNCTION_32_4(v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v42 = v71;
    swift_bridgeObjectRelease();
    outlined destroy of HUDActivityManager.BannerUpdate(v3);
    _os_log_impl(&dword_1C2F90000, v47, v48, "BannerActivityManager - cannot present banner so queueing it up %s", v50, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of HUDActivityManager.BannerUpdate(v3);
  }

  uint64_t v56 = v4;
  os_log_type_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = OUTLINED_FUNCTION_15_1();
    v76[0] = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v59 = 136315394;
    if (*(void *)&v4[v73])
    {
      OUTLINED_FUNCTION_50();
      unint64_t v61 = *(void (**)(void))(v60 + 184);
      swift_retain();
      OUTLINED_FUNCTION_56_11();
      v61();
      swift_release();
      uint64_t v62 = 0;
    }
    else
    {
      uint64_t v62 = 1;
    }
    __swift_storeEnumTagSinglePayload(v2, v62, 1, v72);
    uint64_t v63 = specialized >> prefix<A>(_:)();
    unint64_t v65 = v64;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v65, v76);
    OUTLINED_FUNCTION_32_4(v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v59 + 12) = 2080;
    uint64_t v77 = *v42;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    uint64_t v67 = String.init<A>(reflecting:)();
    uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v57, v58, "BannerActivityManager -Current state after queue:%s CurrentUpdates %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
  swift_allocError();
  *char v69 = 8;
LABEL_28:
  OUTLINED_FUNCTION_28();
}

void closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = a2 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    a3(a1);
  }
}

Swift::Bool __swiftcall BannerActivityManager.presentHUD()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v96 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  uint64_t v91 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v4);
  uint64_t v93 = (uint64_t)&v90 - v5;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v90 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_55_0();
  MEMORY[0x1F4188790](v11);
  uint64_t v94 = (uint64_t)&v90 - v12;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v90 - v14;
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.banners);
  uint64_t v18 = v0;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v92 = v8;
    uint64_t v21 = OUTLINED_FUNCTION_15_1();
    v98[0] = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = *(void *)&v18[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
    uint64_t v95 = v17;
    if (v22)
    {
      OUTLINED_FUNCTION_50();
      os_log_type_t v24 = *(void (**)(uint64_t))(v23 + 184);
      uint64_t v25 = swift_retain();
      v24(v25);
      swift_release();
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v15, v26, 1, v96);
    uint64_t v27 = specialized >> prefix<A>(_:)();
    unint64_t v29 = v28;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, v98);
    OUTLINED_FUNCTION_23_40(v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v31 = &v18[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
    OUTLINED_FUNCTION_2();
    v97[0] = *(void *)v31;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    uint64_t v32 = String.init<A>(reflecting:)();
    v97[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v19, v20, "BannerActivityManager -PresentedActivity:%s CurrentUpdates %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    uint64_t v17 = v95;
    uint64_t v8 = v92;
  }
  else
  {
  }
  uint64_t v34 = *(void *)&v18[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
  if (v34)
  {
    OUTLINED_FUNCTION_78_5();
    os_log_type_t v36 = *(uint64_t (**)(uint64_t))(v35 + 208);
    uint64_t v37 = swift_retain();
    if (v36(v37))
    {
      swift_retain_n();
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        OUTLINED_FUNCTION_37();
        uint64_t v40 = OUTLINED_FUNCTION_9_0();
        uint64_t v95 = v17;
        OUTLINED_FUNCTION_77_5(v40, 4.8149e-34);
        uint64_t v93 = v41;
        OUTLINED_FUNCTION_78_5();
        uint64_t v42 = v94;
        OUTLINED_FUNCTION_32_24();
        v43();
        uint64_t v44 = OUTLINED_FUNCTION_79_6();
        unint64_t v46 = v45;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v42, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, v98);
        OUTLINED_FUNCTION_23_40(v47);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_88_3();
        OUTLINED_FUNCTION_268(&dword_1C2F90000, v38, v39, "BannerActivityManager - Presenting hud for presented activity: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
        OUTLINED_FUNCTION_88_3();
      }

LABEL_27:
      swift_retain_n();
      uint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v73, v74))
      {
        OUTLINED_FUNCTION_37();
        uint64_t v75 = OUTLINED_FUNCTION_9_0();
        OUTLINED_FUNCTION_77_5(v75, 4.8149e-34);
        uint64_t v95 = v76;
        OUTLINED_FUNCTION_78_5();
        uint64_t v77 = v94;
        OUTLINED_FUNCTION_32_24();
        v78();
        uint64_t v79 = OUTLINED_FUNCTION_79_6();
        unint64_t v81 = v80;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v77, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v81, v98);
        OUTLINED_FUNCTION_23_40(v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_88_3();
        OUTLINED_FUNCTION_268(&dword_1C2F90000, v73, v74, "BannerActivityManager - asked to present HUD: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
        OUTLINED_FUNCTION_88_3();
      }

      OUTLINED_FUNCTION_71();
      if ((*(uint64_t (**)(void))(v83 + 144))())
      {
        uint64_t v85 = v84;
        uint64_t ObjectType = swift_getObjectType();
        memset(v98, 0, sizeof(v98));
        char v99 = 6;
        OUTLINED_FUNCTION_78_5();
        uint64_t v87 = (uint64_t)v91;
        OUTLINED_FUNCTION_32_24();
        v88();
        outlined init with copy of ConversationControlsType(v87 + 8, (uint64_t)v97);
        outlined destroy of HUDActivityManager.BannerUpdate(v87);
        (*(void (**)(void, uint64_t *, void *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v85 + 16))(0, v98, v97, v34 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId, 1, 0, 0, ObjectType, v85);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v97, &demangling cache variable for type metadata for ConversationControlsType?);
        outlined destroy of ConversationControlsType((uint64_t)v98);
      }
      else
      {
        swift_release();
        swift_release();
      }
      goto LABEL_33;
    }
    swift_release();
  }
  OUTLINED_FUNCTION_6_1();
  specialized RangeReplaceableCollection<>.popLast()(v1);
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload(v1, 1, v96) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    os_log_type_t v48 = (void *)Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_12(v49))
    {
      uint64_t v50 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v50);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v51, v52, "BannerActivityManager - Default HUD should be presented");
      OUTLINED_FUNCTION_3();
    }
  }
  else
  {
    outlined init with take of HUDActivityManager.BannerUpdate(v1, (uint64_t)v8);
    uint64_t v53 = v93;
    outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v8, v93);
    uint64_t v54 = (void *)Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_92(v55))
    {
      uint64_t v56 = (_DWORD *)OUTLINED_FUNCTION_37();
      uint64_t v57 = OUTLINED_FUNCTION_9_0();
      uint64_t v92 = v8;
      v98[0] = v57;
      uint64_t v95 = v17;
      *uint64_t v56 = 136315138;
      uint64_t v58 = v94;
      outlined init with copy of HUDActivityManager.BannerUpdate(v53, v94);
      __swift_storeEnumTagSinglePayload(v58, 0, 1, v96);
      uint64_t v59 = specialized >> prefix<A>(_:)();
      unint64_t v61 = v60;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v58, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, v98);
      OUTLINED_FUNCTION_23_40(v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of HUDActivityManager.BannerUpdate(v93);
      OUTLINED_FUNCTION_73_0(&dword_1C2F90000, v63, v64, "BannerActivityManager - Presenting hud for topmostupdate: %s");
      OUTLINED_FUNCTION_110();
      uint64_t v8 = v92;
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      outlined destroy of HUDActivityManager.BannerUpdate(v53);
    }

    OUTLINED_FUNCTION_71();
    uint64_t v34 = (*(uint64_t (**)(char *))(v65 + 312))(v8);
    uint64_t v67 = v66;
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);

    if (v34) {
      goto LABEL_27;
    }
  }
  unint64_t v68 = (void *)Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12(v69))
  {
    uint64_t v70 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_23_1(v70);
    OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v71, v72, "BannerActivityManager -No activity");
    OUTLINED_FUNCTION_3();
  }

LABEL_33:
  OUTLINED_FUNCTION_28();
  return result;
}

uint64_t BannerActivityManager.presentNewBanner(as:type:activityUUID:fromActivityManager:)()
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
  if (result)
  {
    swift_getObjectType();
    uint64_t v2 = OUTLINED_FUNCTION_43();
    v3(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall BannerActivityManager.dismissPresentedBanner(forReason:animated:)(Swift::String forReason, Swift::Bool animated)
{
  object = forReason._object;
  uint64_t countAndFlagsBits = forReason._countAndFlagsBits;
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v5 + 144))())
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, Swift::Bool, uint64_t, uint64_t))(v7 + 24))(countAndFlagsBits, object, animated, ObjectType, v7);
    swift_unknownObjectRelease();
  }
}

void BannerActivityManager.bannerDismissed(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v133 = v6;
  uint64_t v8 = v7;
  uint64_t v132 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_4();
  uint64_t v128 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_21();
  uint64_t v131 = v12 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v14 = OUTLINED_FUNCTION_8(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_43_17();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_225();
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v126 = v2;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static Logger.banners);
  swift_unknownObjectRetain_n();
  os_log_type_t v20 = v1;
  uint64_t v21 = Logger.logObject.getter();
  int v22 = static os_log_type_t.default.getter();
  uint64_t v125 = v3;
  uint64_t v127 = v5;
  uint64_t v129 = v8;
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    int v123 = v22;
    os_log_t v124 = v21;
    uint64_t v130 = v19;
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    uint64_t v122 = OUTLINED_FUNCTION_14_3();
    v136[0] = v122;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v121 = v23 + 4;
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v4 = &v121;
    OUTLINED_FUNCTION_4();
    uint64_t v26 = v25;
    MEMORY[0x1F4188790](v27);
    OUTLINED_FUNCTION_62();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(v133 + 24))(ObjectType);
    lazy protocol witness table accessor for type UUID and conformance UUID();
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v31 = v30;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v3, v24);
    uint64_t v134 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    if (*(void *)&v20[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity])
    {
      OUTLINED_FUNCTION_50();
      unint64_t v33 = *(void (**)(uint64_t, uint64_t))(v32 + 184);
      swift_retain();
      OUTLINED_FUNCTION_56_11();
      v33(v34, v35);
      swift_release();
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v36 = 1;
    }
    __swift_storeEnumTagSinglePayload(v0, v36, 1, v132);
    uint64_t v37 = specialized >> prefix<A>(_:)();
    unint64_t v39 = v38;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    uint64_t v134 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    os_log_t v40 = v124;
    _os_log_impl(&dword_1C2F90000, v124, (os_log_type_t)v123, "BannerActivityManager - banner dismissed %s, presented activity %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    uint64_t v19 = v130;
  }
  else
  {
    swift_unknownObjectRelease_n();
  }
  uint64_t v41 = v20;
  uint64_t v42 = (void *)Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_92(v43))
  {
    uint64_t v44 = (_DWORD *)OUTLINED_FUNCTION_37();
    v136[0] = OUTLINED_FUNCTION_9_0();
    *uint64_t v44 = 136315138;
    uint64_t v4 = (uint64_t *)(v44 + 1);
    unint64_t v45 = (uint64_t *)&v41[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
    OUTLINED_FUNCTION_2();
    uint64_t v135 = *v45;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    uint64_t v46 = String.init<A>(reflecting:)();
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_73_0(&dword_1C2F90000, v48, v49, "BannerActivityManager - banner dismissed updates %s");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v50 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity;
  uint64_t v51 = *(void *)&v41[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
  if (v51)
  {
    uint64_t v52 = *(void (**)(uint64_t))(*(void *)v51 + 184);
    uint64_t v53 = swift_retain();
    uint64_t v54 = v131;
    v52(v53);
    int v55 = *(unsigned __int8 *)(v54 + 65);
    outlined destroy of HUDActivityManager.BannerUpdate(v54);
    if (v55 == 1)
    {
      uint64_t v56 = v41;
      uint64_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v60 = OUTLINED_FUNCTION_9_0();
        uint64_t v133 = v60;
        v136[0] = v60;
        *(_DWORD *)uint64_t v59 = 136315138;
        os_log_t v124 = v50;
        if (*(Class *)((char *)&v50->isa + (void)v41))
        {
          OUTLINED_FUNCTION_50();
          uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v61 + 184);
          swift_retain();
          uint64_t v63 = (uint64_t)v127;
          OUTLINED_FUNCTION_82_6();
          v62(v64, v65);
          uint64_t v60 = swift_release();
          uint64_t v66 = 0;
        }
        else
        {
          uint64_t v66 = 1;
          uint64_t v63 = (uint64_t)v127;
        }
        uint64_t v89 = OUTLINED_FUNCTION_89_3(v60, v66);
        unint64_t v91 = v90;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v63, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v89, v91, v136);
        OUTLINED_FUNCTION_27_35(v92);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2F90000, v57, v58, "BannerActivityManager - temporary banner dismissed %s", v59, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        uint64_t v50 = v124;
      }
      else
      {
      }
      if (*(Class *)((char *)&v50->isa + (void)v41))
      {
        OUTLINED_FUNCTION_50();
        uint64_t v94 = *(void (**)(uint64_t))(v93 + 224);
        uint64_t v95 = swift_retain();
        v94(v95);
        swift_release();
      }
      BannerActivityManager.presentedActivity.setter(0);
      BannerActivityManager.presentTopMostUpdate()();
      goto LABEL_41;
    }
    uint64_t v127 = (void (*)(uint64_t, uint64_t))v52;
    os_log_t v124 = v50;
    uint64_t v130 = v19;
    uint64_t v67 = swift_getObjectType();
    uint64_t v68 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    uint64_t v70 = v69;
    MEMORY[0x1F4188790](v71);
    OUTLINED_FUNCTION_64();
    (*(void (**)(uint64_t))(v133 + 24))(v67);
    char v72 = static UUID.== infix(_:_:)();
    (*(void (**)(uint64_t *, uint64_t))(v70 + 8))(v4, v68);
    if (v72)
    {
      uint64_t v73 = v41;
      os_log_type_t v74 = Logger.logObject.getter();
      int v75 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v74, (os_log_type_t)v75))
      {
        LODWORD(v133) = v75;
        uint64_t v76 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v129 = OUTLINED_FUNCTION_9_0();
        v136[0] = v129;
        *uint64_t v76 = 136315138;
        if (*(Class *)((char *)&v124->isa + (void)v41))
        {
          OUTLINED_FUNCTION_50();
          uint64_t v78 = *(void (**)(uint64_t))(v77 + 184);
          uint64_t v79 = swift_retain();
          uint64_t v80 = v125;
          v78(v79);
          swift_release();
          uint64_t v81 = 0;
        }
        else
        {
          uint64_t v81 = 1;
          uint64_t v80 = v125;
        }
        __swift_storeEnumTagSinglePayload(v80, v81, 1, v132);
        specialized >> prefix<A>(_:)();
        OUTLINED_FUNCTION_281();
        uint64_t v96 = outlined destroy of OS_dispatch_queue.SchedulerOptions?(v80, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v98 = OUTLINED_FUNCTION_95_5(v96, v97, v136);
        OUTLINED_FUNCTION_27_35(v98);
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_268(&dword_1C2F90000, v74, (os_log_type_t)v133, "BannerActivityManager - presented activity dismissed so queueing%s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      os_log_t v99 = v124;
      uint64_t v100 = v131;
      v127(v87, v88);
      uint64_t v101 = (uint64_t *)&v73[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
      OUTLINED_FUNCTION_6_1();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v102 = *(void *)(*v101 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v102);
      *(void *)(*v101 + 16) = v102 + 1;
      OUTLINED_FUNCTION_50_12();
      outlined init with take of HUDActivityManager.BannerUpdate(v100, v104 + *(void *)(v103 + 72) * v102);
      specialized MutableCollection<>.sort(by:)(v101);
      swift_endAccess();
      BannerActivityManager.presentedActivity.setter(0);
      uint64_t v105 = v73;
      uint64_t v82 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v82, v106))
      {
        uint64_t v107 = OUTLINED_FUNCTION_15_1();
        uint64_t v108 = OUTLINED_FUNCTION_14_3();
        uint64_t v133 = v108;
        v136[0] = v108;
        *(_DWORD *)uint64_t v107 = 136315394;
        if (*(Class *)((char *)&v99->isa + (void)v41))
        {
          OUTLINED_FUNCTION_50();
          char v110 = *(void (**)(uint64_t, uint64_t))(v109 + 184);
          swift_retain();
          uint64_t v111 = v126;
          OUTLINED_FUNCTION_82_6();
          v110(v112, v113);
          uint64_t v108 = swift_release();
          uint64_t v114 = 0;
        }
        else
        {
          uint64_t v114 = 1;
          uint64_t v111 = v126;
        }
        uint64_t v115 = OUTLINED_FUNCTION_89_3(v108, v114);
        unint64_t v117 = v116;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v111, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        uint64_t v118 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v115, v117, v136);
        OUTLINED_FUNCTION_27_35(v118);
        swift_bridgeObjectRelease();

        *(_WORD *)(v107 + 12) = 2080;
        uint64_t v135 = *v101;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
        uint64_t v119 = String.init<A>(reflecting:)();
        uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v119, v120, v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2F90000, v82, v106, "BannerActivityManager -Current state after queue:%s CurrentUpdates %s", (uint8_t *)v107, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        goto LABEL_40;
      }
      swift_release();
    }
    else
    {
      uint64_t v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_12(v83))
      {
        uint64_t v84 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_23_1(v84);
        OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v85, v86, "BannerActivityManager - not tracking dismissed banner");
LABEL_40:
        OUTLINED_FUNCTION_3();

LABEL_41:
        swift_release();
        goto LABEL_42;
      }
      swift_release();
    }
  }
LABEL_42:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall BannerActivityManager.presentNextBannerIfNeeded()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for banners != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.banners);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C2F90000, v3, v4, "BannerActivityManager - Present next banner if needed", v5, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity;
  if (*(void *)&v0[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity])
  {
    uint64_t v7 = v0;
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (_DWORD *)OUTLINED_FUNCTION_37();
      uint64_t v14 = OUTLINED_FUNCTION_9_0();
      *uint64_t v9 = 136315138;
      if (*(void *)&v1[v6])
      {
        type metadata accessor for HUDActivity(0);
        swift_retain();
        uint64_t v10 = String.init<A>(reflecting:)();
        unint64_t v12 = v11;
      }
      else
      {
        unint64_t v12 = 0xE300000000000000;
        uint64_t v10 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_39_22(&dword_1C2F90000, oslog, v8, "BannerActivityManager - Already presenting an activity %s");
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
  }
  else
  {
    BannerActivityManager.presentTopMostUpdate()();
  }
}

id BannerActivityManager.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_features;
  uint64_t v2 = one-time initialization token for shared;
  uint64_t v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  os_log_type_t v4 = static Features.shared;
  *(void *)&v3[v1] = static Features.shared;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__bannerPresentationManager + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__callUIPresentationStateProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates] = MEMORY[0x1E4FBC860];
  id v5 = v4;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for BannerActivityManager();
  return objc_msgSendSuper2(&v7, sel_init);
}

id BannerActivityManager.__deallocating_deinit()
{
  return HUDActivityManager.__deallocating_deinit(type metadata accessor for BannerActivityManager);
}

id HUDActivityManager.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for HUDActivity(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for HUDActivity);
}

uint64_t type metadata accessor for HUDActivityManager()
{
  return self;
}

uint64_t outlined init with copy of HUDActivityManager.BannerUpdate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError()
{
  unint64_t result = lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError;
  if (!lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError;
  if (!lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError);
  }
  return result;
}

uint64_t sub_1C3459154()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in BannerActivityManager.presentIfAble(_:)(uint64_t a1)
{
  closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(a1, v1, (void (*)(uint64_t))BannerActivityManager.dismissActivity(_:));
}

uint64_t type metadata accessor for BannerActivityManager()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore()
{
  unint64_t result = lazy protocol witness table cache variable for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore;
  if (!lazy protocol witness table cache variable for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type HUDActivityManager.BannerUpdate and conformance HUDActivityManager.BannerUpdate()
{
  unint64_t result = lazy protocol witness table cache variable for type HUDActivityManager.BannerUpdate and conformance HUDActivityManager.BannerUpdate;
  if (!lazy protocol witness table cache variable for type HUDActivityManager.BannerUpdate and conformance HUDActivityManager.BannerUpdate)
  {
    type metadata accessor for HUDActivityManager.BannerUpdate(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HUDActivityManager.BannerUpdate and conformance HUDActivityManager.BannerUpdate);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason()
{
  unint64_t result = lazy protocol witness table cache variable for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason;
  if (!lazy protocol witness table cache variable for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason);
  }
  return result;
}

uint64_t sub_1C34592D4()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C3459318()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1C3459374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.getter();
  *a1 = result & 1;
  return result;
}

void sub_1C34593A4(char *a1)
{
}

uint64_t ObjC metadata update function for HUDActivity()
{
  return type metadata accessor for HUDActivity(0);
}

void type metadata completion function for HUDActivity()
{
  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      type metadata accessor for HUDActivityManager.BannerUpdate(319);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for HUDActivity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HUDActivity);
}

uint64_t dispatch thunk of HUDActivity.dismissed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of HUDActivity.dismissed.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of HUDActivity.dismissed.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of HUDActivity.$dismissed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of HUDActivity.$dismissed.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of HUDActivity.$dismissed.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of HUDActivity.relatedUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of HUDActivity.relatedUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of HUDActivity.relatedUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of HUDActivity.isPersistent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of HUDActivity.__allocating_init(withUpdate:dismissHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of HUDActivity.end()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t ObjC metadata update function for CoupledHUDActivity()
{
  return type metadata accessor for CoupledHUDActivity(0);
}

uint64_t type metadata accessor for CoupledHUDActivity(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CoupledHUDActivity);
}

uint64_t type metadata completion function for CoupledHUDActivity()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for HUDActivityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HUDActivityManager);
}

uint64_t dispatch thunk of HUDActivityManager.displayResolver.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HUDActivityManager.displayResolver.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HUDActivityManager.displayResolver.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of HUDActivityManager.bannerPresentationManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of HUDActivityManager.bannerPresentationManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HUDActivityManager.bannerPresentationManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HUDActivityManager.updateWith(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of HUDActivityManager.activityWith(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HUDActivityManager.dismissPresentedActivity()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of HUDActivityManager.reset()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of HUDActivityManager.dismissTemporaryActivity()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

void type metadata accessor for HUDActivityManager.RelevanceScore()
{
}

void *initializeBufferWithCopyOfBuffer for HUDActivityManager.BannerUpdate(void *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    objc_super v7 = a1 + 1;
    os_log_type_t v8 = (void **)(a2 + 1);
    switch(*((unsigned char *)a2 + 48))
    {
      case 0:
        long long v9 = *((_OWORD *)a2 + 2);
        *((_OWORD *)v4 + 2) = v9;
        (**(void (***)(_OWORD *, void **))(v9 - 8))(v7, v8);
        *((unsigned char *)v4 + 48) = 0;
        break;
      case 1:
        uint64_t v11 = a2[2];
        v4[1] = a2[1];
        v4[2] = v11;
        char v12 = 1;
        goto LABEL_8;
      case 2:
        uint64_t v13 = *v8;
        v4[1] = *v8;
        *((unsigned char *)v4 + 48) = 2;
        id v14 = v13;
        break;
      case 3:
        uint64_t v15 = a2[2];
        v4[1] = a2[1];
        v4[2] = v15;
        char v12 = 3;
LABEL_8:
        *((unsigned char *)v4 + 48) = v12;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)(v4 + 1) = *(_OWORD *)v8;
        *((unsigned char *)v4 + 48) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v16 = *(_OWORD *)(a2 + 3);
        *objc_super v7 = *(_OWORD *)v8;
        *(_OWORD *)(v4 + 3) = v16;
        *(_OWORD *)((char *)v4 + 33) = *(_OWORD *)((char *)a2 + 33);
        break;
    }
    v4[7] = a2[7];
    *((_WORD *)v4 + 32) = *((_WORD *)a2 + 32);
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[9];
    int v22 = (char *)v4 + v21;
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = *(void **)((char *)a2 + v25);
    *(void *)((char *)v4 + v25) = v27;
    unint64_t v28 = (char *)v4 + v26;
    uint64_t v29 = (uint64_t)a2 + v26;
    id v30 = v27;
    swift_unknownObjectWeakCopyInit();
    *((void *)v28 + 1) = *(void *)(v29 + 8);
  }
  return v4;
}

uint64_t destroy for HUDActivityManager.BannerUpdate(uint64_t a1, int *a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 48);
  int v5 = (id *)(a1 + 8);
  switch(v4)
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2 + 1;
  *(void *)a1 = v7;
  uint64_t v8 = (_OWORD *)(a1 + 8);
  switch(*((unsigned char *)a2 + 48))
  {
    case 0:
      long long v9 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 32) = v9;
      (**(void (***)(_OWORD *, uint64_t))(v9 - 8))(v8, (uint64_t)v6);
      *(unsigned char *)(a1 + 48) = 0;
      break;
    case 1:
      uint64_t v10 = a2[2];
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v10;
      char v11 = 1;
      goto LABEL_6;
    case 2:
      char v12 = (void *)*v6;
      *(void *)(a1 + 8) = *v6;
      *(unsigned char *)(a1 + 48) = 2;
      id v13 = v12;
      break;
    case 3:
      uint64_t v14 = a2[2];
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v14;
      char v11 = 3;
LABEL_6:
      *(unsigned char *)(a1 + 48) = v11;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
      *(unsigned char *)(a1 + 48) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      long long v15 = *((_OWORD *)v6 + 1);
      *uint64_t v8 = *(_OWORD *)v6;
      v8[1] = v15;
      *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v6 + 25);
      break;
  }
  *(void *)(a1 + 56) = a2[7];
  *(_WORD *)(a1 + 64) = *((_WORD *)a2 + 32);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t)a2 + v16;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t)a2 + v20;
  uint64_t v23 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = *(void **)((char *)a2 + v24);
  *(void *)(a1 + v24) = v26;
  uint64_t v27 = a1 + v25;
  uint64_t v28 = (uint64_t)a2 + v25;
  id v29 = v26;
  swift_unknownObjectWeakCopyInit();
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  return a1;
}

uint64_t assignWithCopy for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (long long *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = (_OWORD *)(a1 + 8);
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1 + 8);
    switch(*(unsigned char *)(a2 + 48))
    {
      case 0:
        uint64_t v8 = *(void *)(a2 + 32);
        *(void *)(a1 + 32) = v8;
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        (**(void (***)(_OWORD *, long long *))(v8 - 8))(v7, v6);
        *(unsigned char *)(a1 + 48) = 0;
        break;
      case 1:
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v9 = 1;
        goto LABEL_7;
      case 2:
        uint64_t v10 = *(void **)v6;
        *(void *)(a1 + 8) = *(void *)v6;
        *(unsigned char *)(a1 + 48) = 2;
        id v11 = v10;
        break;
      case 3:
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v9 = 3;
LABEL_7:
        *(unsigned char *)(a1 + 48) = v9;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)(a1 + 8) = *v6;
        *(unsigned char *)(a1 + 48) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v12 = *v6;
        long long v13 = v6[1];
        *(_OWORD *)((char *)v7 + 25) = *(long long *)((char *)v6 + 25);
        *uint64_t v7 = v12;
        v7[1] = v13;
        break;
    }
  }
  uint64_t v14 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)(a1 + v23);
  uint64_t v25 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v25;
  id v26 = v25;

  uint64_t v27 = a2 + a3[11];
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *(void *)(v27 + 8);
  return a1;
}

uint64_t initializeWithTake for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 33);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 33) = v6;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *(void *)(a2 + v15 + 8);
  return a1;
}

uint64_t assignWithTake for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  uint64_t v16 = a2 + a3[11];
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *(void *)(v16 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C345A3EC);
}

uint64_t sub_1C345A3EC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[8];
  }
  else
  {
    type metadata accessor for Date();
    OUTLINED_FUNCTION_1_5();
    if (*(_DWORD *)(v11 + 84) != a2)
    {
      uint64_t v13 = a1 + a3[11];
      uint64_t v14 = *(void *)(v13 + 8);
      int v15 = *(_DWORD *)v13 & 0x7FFFFFFF;
      if ((v14 & 0xF000000000000007) != 0) {
        return (v15 + 1);
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v10;
    uint64_t v9 = a3[9];
  }
  return __swift_getEnumTagSinglePayload(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C345A4B8);
}

void sub_1C345A4B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[8];
  }
  else
  {
    type metadata accessor for Date();
    OUTLINED_FUNCTION_1_5();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      uint64_t v14 = (void *)(a1 + a4[11]);
      *uint64_t v14 = (a2 - 1);
      v14[1] = 1;
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a4[9];
  }
  __swift_storeEnumTagSinglePayload(a1 + v11, a2, a2, v10);
}

uint64_t type metadata completion function for HUDActivityManager.BannerUpdate()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of ActivityBanner.systemApertureElementIsShowingHUD.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityBanner.sizeClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ActivityBanner.activityUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActivityBanner.updateContent(for:using:controllingWith:fromActivityManager:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a7 + 32))(a1, a2, a3 & 1);
}

uint64_t method lookup function for BannerActivityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BannerActivityManager);
}

uint64_t dispatch thunk of BannerActivityManager.bannerPresentationManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BannerActivityManager.bannerPresentationManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BannerActivityManager.bannerPresentationManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BannerActivityManager.callUIPresentationStateProvider.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BannerActivityManager.callUIPresentationStateProvider.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BannerActivityManager.callUIPresentationStateProvider.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BannerActivityManager.start(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BannerActivityManager.dismissPresentedActivity(request:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of BannerActivityManager.canPresent(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of BannerActivityManager.presentIfAble(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of BannerActivityManager.presentHUD()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of BannerActivityManager.dismissPresentedBanner(forReason:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of BannerActivityManager.bannerDismissed(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of BannerActivityManager.presentNextBannerIfNeeded()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

void type metadata accessor for BannerActivityManager.DismissActivityRequest()
{
}

unsigned char *storeEnumTagSinglePayload for BannerActivityManager.DismissActivityRequest.Reason(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C345AAB8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for BannerActivityManager.DismissActivityRequest.Reason()
{
}

uint64_t dispatch thunk of BannerPresenter.presentNewBanner(as:type:activityUUID:fromActivityManager:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t dispatch thunk of BannerPresenter.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 16))();
}

uint64_t dispatch thunk of BannerPresenter.dismissPresentedBanner(forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of CallUIPresentationStateProvider.isPresentingFullScreenCallUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)()
{
  OUTLINED_FUNCTION_69_6();
  Swift::Int v1 = v0;
  int v3 = v2;
  uint64_t v124 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_4();
  uint64_t v122 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_10_5();
  uint64_t v120 = v6;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_8_4();
  uint64_t v129 = v8;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_8_4();
  uint64_t v127 = (double *)v10;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v11);
  uint64_t v126 = (double *)((char *)&v114 - v12);
  Swift::Int v13 = v3[1];
  Swift::Int v14 = _minimumMergeRunLength(_:)(v13);
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_138;
    }
    if (v13) {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)();
    }
    goto LABEL_117;
  }
  Swift::Int v117 = v14;
  uint64_t v115 = specialized static Array._allocateUninitialized(_:)(v13 / 2);
  uint64_t v116 = v13;
  uint64_t v123 = v15;
  if (v13 <= 0)
  {
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v59 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_103:
    if (v59 >= 2)
    {
      if (!*v3) {
        goto LABEL_146;
      }
      while (1)
      {
        unint64_t v108 = v59 - 2;
        uint64_t v109 = v17;
        uint64_t v110 = *(void *)&v17[16 * v59];
        uint64_t v111 = *(void *)&v17[16 * v59 + 24];
        specialized _merge<A>(low:mid:high:buffer:by:)();
        if (v1) {
          break;
        }
        if (v111 < v110) {
          goto LABEL_133;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v109 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v109);
        }
        if (v108 >= *((void *)v109 + 2)) {
          goto LABEL_134;
        }
        uint64_t v112 = &v109[16 * v108 + 32];
        *(void *)uint64_t v112 = v110;
        *((void *)v112 + 1) = v111;
        unint64_t v113 = *((void *)v109 + 2);
        if (v59 > v113) {
          goto LABEL_135;
        }
        memmove(&v109[16 * v59 + 16], &v109[16 * v59 + 32], 16 * (v113 - v59));
        uint64_t v17 = v109;
        *((void *)v109 + 2) = v113 - 1;
        unint64_t v59 = v113 - 1;
        if (v113 <= 2) {
          goto LABEL_115;
        }
      }
LABEL_113:
      swift_bridgeObjectRelease();
      if (v116 >= -1) {
        goto LABEL_116;
      }
      __break(1u);
    }
LABEL_115:
    swift_bridgeObjectRelease();
    if (v116 < -1) {
      goto LABEL_142;
    }
LABEL_116:
    *(void *)(v115 + 16) = 0;
    swift_bridgeObjectRelease();
LABEL_117:
    OUTLINED_FUNCTION_57_7();
    return;
  }
  Swift::Int v16 = 0;
  uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  Swift::Int v18 = v13;
  uint64_t v128 = v3;
  while (1)
  {
    Swift::Int v19 = v16 + 1;
    uint64_t v119 = v17;
    Swift::Int v121 = v16;
    if (v16 + 1 >= v18)
    {
      Swift::Int v28 = v16 + 1;
    }
    else
    {
      Swift::Int v20 = *v3;
      uint64_t v21 = *(void *)(v122 + 72);
      uint64_t v22 = v126;
      outlined init with copy of HUDActivityManager.BannerUpdate(*v3 + v21 * v19, (uint64_t)v126);
      uint64_t v23 = v127;
      outlined init with copy of HUDActivityManager.BannerUpdate(v20 + v21 * v16, (uint64_t)v127);
      double v24 = *v22;
      double v25 = *v23;
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v23);
      uint64_t v26 = (uint64_t)v22;
      Swift::Int v27 = v20;
      outlined destroy of HUDActivityManager.BannerUpdate(v26);
      Swift::Int v28 = v16 + 2;
      Swift::Int v118 = v27;
      uint64_t v130 = v21;
      if (v16 + 2 >= v18)
      {
        uint64_t v34 = v21;
      }
      else
      {
        Swift::Int v114 = v1;
        uint64_t v125 = v21 * v19;
        uint64_t v29 = v21 * v28;
        while (1)
        {
          Swift::Int v30 = v18;
          unint64_t v31 = v126;
          outlined init with copy of HUDActivityManager.BannerUpdate(v27 + v29, (uint64_t)v126);
          uint64_t v32 = v127;
          outlined init with copy of HUDActivityManager.BannerUpdate(v27 + v125, (uint64_t)v127);
          BOOL v33 = *v31 >= *v32;
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v32);
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v31);
          if (v24 < v25 == v33) {
            break;
          }
          ++v28;
          uint64_t v34 = v130;
          v27 += v130;
          Swift::Int v18 = v30;
          if (v28 >= v30)
          {
            Swift::Int v28 = v30;
            Swift::Int v1 = v114;
            Swift::Int v16 = v121;
            goto LABEL_13;
          }
        }
        Swift::Int v1 = v114;
        Swift::Int v16 = v121;
        Swift::Int v18 = v30;
        uint64_t v34 = v130;
      }
LABEL_13:
      if (v24 < v25)
      {
        if (v28 < v16) {
          goto LABEL_139;
        }
        if (v16 < v28)
        {
          Swift::Int v114 = v18;
          uint64_t v35 = 0;
          uint64_t v36 = v34 * (v28 - 1);
          Swift::Int v37 = v28 * v34;
          Swift::Int v38 = v16;
          uint64_t v39 = v16 * v34;
          do
          {
            if (v38 != v28 + v35 - 1)
            {
              Swift::Int v40 = v118;
              if (!v118) {
                goto LABEL_145;
              }
              unint64_t v41 = v118 + v39;
              uint64_t v125 = v118 + v36;
              outlined init with take of HUDActivityManager.BannerUpdate(v118 + v39, v120);
              if (v39 < v36 || v41 >= v40 + v37)
              {
                uint64_t v43 = v125;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v43 = v125;
                if (v39 != v36) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              outlined init with take of HUDActivityManager.BannerUpdate(v120, v43);
              int v3 = v128;
              uint64_t v34 = v130;
            }
            ++v38;
            --v35;
            v36 -= v34;
            v37 -= v34;
            v39 += v34;
          }
          while (v38 < v28 + v35);
          Swift::Int v16 = v121;
          Swift::Int v18 = v114;
        }
      }
    }
    if (v28 < v18)
    {
      if (__OFSUB__(v28, v16)) {
        goto LABEL_137;
      }
      if (v28 - v16 < v117) {
        break;
      }
    }
LABEL_48:
    if (v28 < v16) {
      goto LABEL_136;
    }
    Swift::Int v132 = v28;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v17 = v119;
    }
    else {
      uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v119 + 2) + 1, 1, v119);
    }
    unint64_t v58 = *((void *)v17 + 2);
    unint64_t v57 = *((void *)v17 + 3);
    unint64_t v59 = v58 + 1;
    if (v58 >= v57 >> 1) {
      uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v57 > 1), v58 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v59;
    uint64_t v60 = v17 + 32;
    uint64_t v61 = &v17[16 * v58 + 32];
    *(void *)uint64_t v61 = v16;
    *((void *)v61 + 1) = v132;
    if (v58)
    {
      while (1)
      {
        unint64_t v62 = v59 - 1;
        if (v59 >= 4)
        {
          uint64_t v67 = &v60[16 * v59];
          uint64_t v68 = *((void *)v67 - 8);
          uint64_t v69 = *((void *)v67 - 7);
          BOOL v73 = __OFSUB__(v69, v68);
          uint64_t v70 = v69 - v68;
          if (v73) {
            goto LABEL_122;
          }
          uint64_t v72 = *((void *)v67 - 6);
          uint64_t v71 = *((void *)v67 - 5);
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v65 = v71 - v72;
          char v66 = v73;
          if (v73) {
            goto LABEL_123;
          }
          unint64_t v74 = v59 - 2;
          int v75 = &v60[16 * v59 - 32];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v73 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v73) {
            goto LABEL_124;
          }
          BOOL v73 = __OFADD__(v65, v78);
          uint64_t v79 = v65 + v78;
          if (v73) {
            goto LABEL_126;
          }
          if (v79 >= v70)
          {
            uint64_t v97 = &v60[16 * v62];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v73 = __OFSUB__(v98, v99);
            uint64_t v100 = v98 - v99;
            if (v73) {
              goto LABEL_132;
            }
            BOOL v90 = v65 < v100;
            goto LABEL_85;
          }
        }
        else
        {
          if (v59 != 3)
          {
            uint64_t v91 = *((void *)v17 + 4);
            uint64_t v92 = *((void *)v17 + 5);
            BOOL v73 = __OFSUB__(v92, v91);
            uint64_t v84 = v92 - v91;
            char v85 = v73;
            goto LABEL_79;
          }
          uint64_t v64 = *((void *)v17 + 4);
          uint64_t v63 = *((void *)v17 + 5);
          BOOL v73 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          char v66 = v73;
        }
        if (v66) {
          goto LABEL_125;
        }
        unint64_t v74 = v59 - 2;
        uint64_t v80 = &v60[16 * v59 - 32];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v83 = __OFSUB__(v81, v82);
        uint64_t v84 = v81 - v82;
        char v85 = v83;
        if (v83) {
          goto LABEL_127;
        }
        uint64_t v86 = &v60[16 * v62];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v73 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v73) {
          goto LABEL_129;
        }
        if (__OFADD__(v84, v89)) {
          goto LABEL_131;
        }
        if (v84 + v89 >= v65)
        {
          BOOL v90 = v65 < v89;
LABEL_85:
          if (v90) {
            unint64_t v62 = v74;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v85) {
          goto LABEL_128;
        }
        uint64_t v93 = &v60[16 * v62];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v73 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v73) {
          goto LABEL_130;
        }
        if (v96 < v84) {
          goto LABEL_96;
        }
LABEL_87:
        unint64_t v101 = v62 - 1;
        if (v62 - 1 >= v59)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v3) {
          goto LABEL_144;
        }
        uint64_t v102 = v17;
        uint64_t v103 = &v60[16 * v101];
        uint64_t v104 = *(void *)v103;
        uint64_t v105 = &v60[16 * v62];
        uint64_t v106 = *((void *)v105 + 1);
        specialized _merge<A>(low:mid:high:buffer:by:)();
        if (v1) {
          goto LABEL_113;
        }
        if (v106 < v104) {
          goto LABEL_119;
        }
        if (v62 > *((void *)v102 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v103 = v104;
        *(void *)&v60[16 * v101 + 8] = v106;
        unint64_t v107 = *((void *)v102 + 2);
        if (v62 >= v107) {
          goto LABEL_121;
        }
        unint64_t v59 = v107 - 1;
        memmove(&v60[16 * v62], v105 + 16, 16 * (v107 - 1 - v62));
        uint64_t v17 = v102;
        *((void *)v102 + 2) = v107 - 1;
        int v3 = v128;
        if (v107 <= 2) {
          goto LABEL_96;
        }
      }
    }
    unint64_t v59 = 1;
LABEL_96:
    Swift::Int v18 = v3[1];
    Swift::Int v16 = v132;
    if (v132 >= v18) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v16, v117)) {
    goto LABEL_140;
  }
  if (v16 + v117 >= v18) {
    Swift::Int v44 = v18;
  }
  else {
    Swift::Int v44 = v16 + v117;
  }
  if (v44 >= v16)
  {
    if (v28 != v44)
    {
      Swift::Int v114 = v1;
      uint64_t v45 = *(void *)(v122 + 72);
      uint64_t v131 = v45 * (v28 - 1);
      uint64_t v125 = v45;
      Swift::Int v46 = v28 * v45;
      Swift::Int v118 = v44;
      do
      {
        uint64_t v47 = 0;
        while (1)
        {
          Swift::Int v48 = v28;
          Swift::Int v49 = *v3;
          uint64_t v50 = v126;
          outlined init with copy of HUDActivityManager.BannerUpdate(v46 + v47 + *v3, (uint64_t)v126);
          uint64_t v51 = v131 + v47 + v49;
          uint64_t v52 = v127;
          outlined init with copy of HUDActivityManager.BannerUpdate(v51, (uint64_t)v127);
          double v53 = *v50;
          double v54 = *v52;
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v52);
          outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v50);
          if (v53 >= v54) {
            break;
          }
          Swift::Int v55 = *v3;
          if (!*v3) {
            goto LABEL_143;
          }
          uint64_t v56 = v55 + v131 + v47;
          outlined init with take of HUDActivityManager.BannerUpdate(v55 + v46 + v47, v129);
          swift_arrayInitWithTakeFrontToBack();
          outlined init with take of HUDActivityManager.BannerUpdate(v129, v56);
          v47 -= v125;
          ++v16;
          Swift::Int v28 = v48;
          int v3 = v128;
          if (v48 == v16) {
            goto LABEL_46;
          }
        }
        Swift::Int v28 = v48;
LABEL_46:
        ++v28;
        v131 += v125;
        v46 += v125;
        Swift::Int v16 = v121;
      }
      while (v28 != v118);
      Swift::Int v28 = v118;
      Swift::Int v1 = v114;
    }
    goto LABEL_48;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)()
{
  OUTLINED_FUNCTION_69_6();
  Swift::Int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v26 = v6;
  uint64_t v27 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_3_27();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_87_4();
  uint64_t v30 = v8;
  OUTLINED_FUNCTION_81_9();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (double *)((char *)&v24 - v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (double *)((char *)&v24 - v14);
  uint64_t v29 = v3;
  uint64_t v25 = v5;
  if (v3 != v5)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
    while (2)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v26;
      do
      {
        uint64_t v19 = *v1;
        outlined init with copy of HUDActivityManager.BannerUpdate(v31 + v17 + *v1, (uint64_t)v15);
        outlined init with copy of HUDActivityManager.BannerUpdate(v32 + v17 + v19, (uint64_t)v11);
        double v20 = *v15;
        double v21 = *v11;
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v11);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v15);
        if (v20 >= v21) {
          break;
        }
        uint64_t v22 = *v1;
        if (!*v1)
        {
          __break(1u);
          return;
        }
        uint64_t v23 = v22 + v32 + v17;
        outlined init with take of HUDActivityManager.BannerUpdate(v22 + v31 + v17, v30);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of HUDActivityManager.BannerUpdate(v30, v23);
        v17 -= v28;
        ++v18;
      }
      while (v29 != v18);
      v32 += v28;
      v31 += v28;
      if (++v29 != v25) {
        continue;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_57_7();
}

void specialized _merge<A>(low:mid:high:buffer:by:)()
{
  OUTLINED_FUNCTION_69_6();
  uint64_t v2 = v1;
  unint64_t v55 = v3;
  unint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v60 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1F4188790](v60);
  uint64_t v9 = (double *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (double *)((char *)&v54 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  int64_t v15 = v5 - v7;
  if (v5 - v7 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_76;
  }
  int64_t v17 = v55 - v5;
  if (v55 - v5 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_77;
  }
  uint64_t v59 = v2;
  uint64_t v54 = v0;
  uint64_t v19 = v15 / v14;
  uint64_t v20 = v14;
  uint64_t v21 = v17 / v14;
  if (v15 / v14 >= v17 / v14)
  {
    unint64_t v24 = v59;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v5, v17 / v14, v59);
    unint64_t v25 = v24 + v21 * v20;
    BOOL v36 = v21 * v20 < 1 || v7 >= v5;
    uint64_t v28 = v20;
    if (v36) {
      goto LABEL_70;
    }
    uint64_t v57 = -v20;
    unint64_t v58 = v9;
    unint64_t v37 = v55;
    uint64_t v56 = v20;
    while (1)
    {
      uint64_t v38 = v57;
      unint64_t v39 = v37 + v57;
      unint64_t v40 = v25 + v57;
      unint64_t v41 = v25;
      outlined init with copy of HUDActivityManager.BannerUpdate(v25 + v57, (uint64_t)v12);
      unint64_t v42 = v5 + v38;
      uint64_t v43 = v5 + v38;
      Swift::Int v44 = v12;
      uint64_t v45 = v58;
      outlined init with copy of HUDActivityManager.BannerUpdate(v43, (uint64_t)v58);
      double v46 = *v44;
      double v47 = *v45;
      uint64_t v48 = (uint64_t)v45;
      uint64_t v12 = v44;
      outlined destroy of HUDActivityManager.BannerUpdate(v48);
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v44);
      if (v46 < v47) {
        break;
      }
      if (v37 < v41 || v39 >= v41)
      {
        OUTLINED_FUNCTION_94_2();
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v25 = v40;
        unint64_t v24 = v59;
LABEL_65:
        uint64_t v28 = v56;
        unint64_t v37 = v39;
        goto LABEL_66;
      }
      unint64_t v24 = v59;
      if (v37 == v41)
      {
        unint64_t v25 = v40;
        goto LABEL_65;
      }
      unint64_t v37 = v39;
      OUTLINED_FUNCTION_94_2();
      swift_arrayInitWithTakeBackToFront();
      unint64_t v25 = v40;
      uint64_t v28 = v56;
LABEL_66:
      if (v25 <= v24 || v5 <= v7) {
        goto LABEL_70;
      }
    }
    unint64_t v55 = v41;
    if (v37 < v5 || v39 >= v5)
    {
      OUTLINED_FUNCTION_91_3();
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v5 = v42;
      unint64_t v24 = v59;
      uint64_t v28 = v56;
    }
    else
    {
      uint64_t v28 = v56;
      if (v37 != v5)
      {
        unint64_t v37 = v39;
        OUTLINED_FUNCTION_91_3();
        swift_arrayInitWithTakeBackToFront();
        unint64_t v5 = v42;
        unint64_t v24 = v59;
LABEL_63:
        unint64_t v25 = v55;
        goto LABEL_66;
      }
      unint64_t v5 = v42;
      unint64_t v24 = v59;
    }
    unint64_t v37 = v39;
    goto LABEL_63;
  }
  uint64_t v22 = v59;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v15 / v14, v59);
  uint64_t v23 = v19 * v20;
  unint64_t v24 = v22;
  unint64_t v25 = v22 + v23;
  unint64_t v26 = v55;
  BOOL v27 = v23 < 1 || v5 >= v55;
  uint64_t v28 = v20;
  if (!v27)
  {
    do
    {
      unint64_t v29 = v25;
      outlined init with copy of HUDActivityManager.BannerUpdate(v5, (uint64_t)v12);
      outlined init with copy of HUDActivityManager.BannerUpdate(v24, (uint64_t)v9);
      double v30 = *v12;
      double v31 = *v9;
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v9);
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v12);
      if (v30 >= v31)
      {
        if (v7 < v24 || v7 >= v24 + v28)
        {
          OUTLINED_FUNCTION_72_6();
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v7 != v24)
        {
          OUTLINED_FUNCTION_72_6();
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v32 = v5;
        v24 += v28;
        unint64_t v26 = v55;
      }
      else
      {
        unint64_t v32 = v5 + v28;
        if (v7 < v5 || v7 >= v32)
        {
          OUTLINED_FUNCTION_74_4();
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v7 != v5)
        {
          OUTLINED_FUNCTION_74_4();
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v25 = v29;
      v7 += v28;
      BOOL v35 = v24 >= v29 || v32 >= v26;
      unint64_t v5 = v32;
    }
    while (!v35);
  }
  unint64_t v5 = v7;
LABEL_70:
  int64_t v52 = v25 - v24;
  if (v28 != -1 || v52 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v24, v52 / v28, v5);
    OUTLINED_FUNCTION_57_7();
    return;
  }
LABEL_78:
  __break(1u);
}

uint64_t specialized Array._customRemoveLast()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v3 = result;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    uint64_t v7 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
    outlined init with take of HUDActivityManager.BannerUpdate(v3+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80))+ *(void *)(*(void *)(v7 - 8) + 72) * v6, a1);
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C345DE4C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C345DE84()
{
  uint64_t v1 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  unint64_t v4 = (id *)(v0 + v2 + 8);
  switch(*(unsigned char *)(v0 + v2 + 48))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v5 = v3 + v1[8];
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v6 + 8))(v5);
  uint64_t v7 = v3 + v1[9];
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v8 + 8))(v7);

  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(char a1)
{
  uint64_t v3 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_1(v3);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(a1, v5, v6);
}

void specialized Array._customRemoveLast()(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v3 = v6;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    outlined init with take of Notice((long long *)(v3 + 40 * (v4 - 1) + 32), a1);
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
  else
  {
    __break(1u);
  }
}

void partial apply for closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(uint64_t a1)
{
  closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(a1, v1, (void (*)(uint64_t))HUDActivityManager.dismissActivity(_:));
}

uint64_t sub_1C345E170()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CoupledHUDActivity.childActivity.didset(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_1(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v9;
  uint64_t v13 = *(void **)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = partial apply for closure #1 in CoupledHUDActivity.childActivity.didset;
  return closure #1 in CoupledHUDActivity.childActivity.didset(a1, v10, v11, v12, v13);
}

uint64_t partial apply for closure #1 in CoupledHUDActivity.childActivity.didset()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_6()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(void *)(v1 - 168));
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_76_6(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_83_5(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_91_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_95_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_96_6(double a1)
{
  *(double *)(v1 - 120) = a1;
  return specialized >> prefix<A>(_:)(v1 - 168);
}

uint64_t OUTLINED_FUNCTION_99_5@<X0>(uint64_t a1@<X8>)
{
  return a1 - (v1 & 0xFFFFFFFFFFFFFFF0);
}

void InCallControlsPTTCallDetailsViewModel.init(pttCall:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_provider);
  id v5 = objc_msgSend(v4, sel_localizedName);

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  uint64_t v9 = outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(objc_msgSend(a1, sel_provider));
  if (v10) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v10) {
    unint64_t v12 = v10;
  }
  else {
    unint64_t v12 = 0xE000000000000000;
  }
  id v13 = objc_msgSend(a1, sel_channelDisplayName);
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *a2 = v6;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v14;
  a2[5] = v16;
  a2[6] = (uint64_t)a1;
}

uint64_t InCallControlsPTTCallDetailsViewModel.providerName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InCallControlsPTTCallDetailsViewModel.providerBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InCallControlsPTTCallDetailsViewModel.channelName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

id InCallControlsPTTCallDetailsViewModel.pttCall.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t InCallControlsPTTCallDetailsViewModel.init(providerName:providerBundleIdentifier:channelName:pttCall:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

void destroy for InCallControlsPTTCallDetailsViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
}

void *initializeWithCopy for InCallControlsPTTCallDetailsViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

void *assignWithCopy for InCallControlsPTTCallDetailsViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[6];
  uint64_t v5 = (void *)a1[6];
  a1[6] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for InCallControlsPTTCallDetailsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for InCallControlsPTTCallDetailsViewModel()
{
  return &type metadata for InCallControlsPTTCallDetailsViewModel;
}

uint64_t >> prefix<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_5_3();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - v8;
  OUTLINED_FUNCTION_5_3();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    return 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, a2);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v17, a2);
    uint64_t v18 = String.init<A>(reflecting:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, a2);
  }
  return v18;
}

uint64_t Logger.conversationControls.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for conversationControls, (uint64_t)static Logger.conversationControls);
}

uint64_t Logger.recordingSession.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for recordingSession, (uint64_t)static Logger.recordingSession);
}

uint64_t *OS_os_log.conversationKit.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  return &static OS_os_log.conversationKit;
}

uint64_t Logger.sidebar.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for sidebar, (uint64_t)static Logger.sidebar);
}

uint64_t Log.clarityUI.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for clarityUI, (uint64_t)static Log.clarityUI);
}

uint64_t Logger.conversationKit.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for conversationKit, (uint64_t)static Logger.conversationKit);
}

uint64_t Logger.audioTap.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for audioTap, (uint64_t)static Logger.audioTap);
}

uint64_t Log.default.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for default, (uint64_t)static Log.default);
}

uint64_t Log.screenSharing.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for screenSharing, (uint64_t)static Log.screenSharing);
}

uint64_t Logger.videoMessaging.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for videoMessaging, (uint64_t)static Logger.videoMessaging);
}

uint64_t Logger.peoplePicker.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for peoplePicker, (uint64_t)static Logger.peoplePicker);
}

uint64_t Logger.peoplePickerAutocomplete.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for peoplePickerAutocomplete, (uint64_t)static Logger.peoplePickerAutocomplete);
}

uint64_t Logger.spam.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for spam, (uint64_t)static Logger.spam);
}

uint64_t Log.screenTime.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for screenTime, (uint64_t)static Log.screenTime);
}

uint64_t Logger.answeringMachine.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for answeringMachine, (uint64_t)static Logger.answeringMachine);
}

uint64_t Logger.preCall.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for preCall, (uint64_t)static Logger.preCall);
}

uint64_t Logger.shareableContent.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for shareableContent, (uint64_t)static Logger.shareableContent);
}

uint64_t Logger.appleIntelligence.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for appleIntelligence, (uint64_t)static Logger.appleIntelligence);
}

uint64_t String.init(namedPropertyValues:for:)(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v5 = a1 + 32;
    do
    {
      outlined init with copy of LinkShareCoordinatorProtocol?(v5, (uint64_t)&v32, &demangling cache variable for type metadata for (name: String, value: Any?));
      uint64_t v30 = v32;
      unint64_t v31 = v33;
      swift_bridgeObjectRetain();
      v6._uint64_t countAndFlagsBits = 61;
      v6._object = (void *)0xE100000000000000;
      String.append(_:)(v6);
      outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)&v34, (uint64_t)&v27, &demangling cache variable for type metadata for Any?);
      if (v28)
      {
        outlined init with take of Any(&v27, v29);
        outlined init with copy of Any((uint64_t)v29, (uint64_t)&v27);
        uint64_t v7 = String.init<A>(reflecting:)();
        uint64_t v9 = v8;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v27, &demangling cache variable for type metadata for Any?);
        uint64_t v9 = (void *)0xE300000000000000;
        uint64_t v7 = 7104878;
      }
      v10._uint64_t countAndFlagsBits = v7;
      v10._object = v9;
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      v11._uint64_t countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      uint64_t v12 = v30;
      unint64_t v13 = v31;
      outlined destroy of Any?((uint64_t)&v32, &demangling cache variable for type metadata for (name: String, value: Any?));
      uint64_t v14 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v14 = v35;
      }
      unint64_t v15 = *(void *)(v14 + 16);
      if (v15 >= *(void *)(v14 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v14 = v35;
      }
      *(void *)(v14 + 16) = v15 + 1;
      uint64_t v16 = v14 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      v5 += 48;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v2 = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v17 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v32 = 60;
  unint64_t v33 = 0xE100000000000000;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  swift_getDynamicType();
  v20._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22._uint64_t countAndFlagsBits = v17;
  v22._object = v19;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  uint64_t v24 = String.init<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return v24;
}

uint64_t Logger.nickname.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for nickname, (uint64_t)static Logger.nickname);
}

uint64_t Logger.banners.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for banners, (uint64_t)static Logger.banners);
}

uint64_t Logger.audioNormalizer.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for audioNormalizer, (uint64_t)static Logger.audioNormalizer);
}

id static OS_os_log.conversationKit.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for conversationKit, (void **)&static OS_os_log.conversationKit);
}

uint64_t one-time initialization function for conversationKitOversized()
{
  type metadata accessor for OS_os_log();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  static OS_os_log.conversationKitOversized = result;
  return result;
}

uint64_t *OS_os_log.conversationKitOversized.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationKitOversized != -1) {
    swift_once();
  }
  return &static OS_os_log.conversationKitOversized;
}

id static OS_os_log.conversationKitOversized.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for conversationKitOversized, (void **)&static OS_os_log.conversationKitOversized);
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for default, (uint64_t)static Log.default, a1);
}

uint64_t static Log.screenSharing.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for screenSharing, (uint64_t)static Log.screenSharing, a1);
}

uint64_t one-time initialization function for requestToShare()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.requestToShare);
  __swift_project_value_buffer(v0, (uint64_t)static Log.requestToShare);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.requestToShare.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for requestToShare, (uint64_t)static Log.requestToShare);
}

uint64_t static Log.requestToShare.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for requestToShare, (uint64_t)static Log.requestToShare, a1);
}

uint64_t one-time initialization function for screenTime()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.screenTime);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_6_97();
  return Logger.init(subsystem:category:)();
}

uint64_t static Log.screenTime.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for screenTime, (uint64_t)static Log.screenTime, a1);
}

uint64_t one-time initialization function for clarityUI()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.clarityUI);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_0_95();
  return Logger.init(subsystem:category:)();
}

uint64_t static Log.clarityUI.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for clarityUI, (uint64_t)static Log.clarityUI, a1);
}

uint64_t static Logger.conversationKit.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for conversationKit, (uint64_t)static Logger.conversationKit, a1);
}

uint64_t one-time initialization function for banners()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.banners);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_7_89();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.banners.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for banners, (uint64_t)static Logger.banners, a1);
}

uint64_t static Logger.conversationControls.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for conversationControls, (uint64_t)static Logger.conversationControls, a1);
}

uint64_t one-time initialization function for conversationController()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.conversationController);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_7_89();
  return OUTLINED_FUNCTION_2_111();
}

uint64_t Logger.conversationController.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for conversationController, (uint64_t)static Logger.conversationController);
}

uint64_t static Logger.conversationController.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for conversationController, (uint64_t)static Logger.conversationController, a1);
}

uint64_t one-time initialization function for audioTap()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.audioTap);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_7_89();
  return OUTLINED_FUNCTION_2_111();
}

uint64_t static Logger.audioTap.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for audioTap, (uint64_t)static Logger.audioTap, a1);
}

uint64_t one-time initialization function for answeringMachine()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.answeringMachine);
  OUTLINED_FUNCTION_8_67();
  OUTLINED_FUNCTION_47();
  return OUTLINED_FUNCTION_3_112();
}

uint64_t static Logger.answeringMachine.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for answeringMachine, (uint64_t)static Logger.answeringMachine, a1);
}

uint64_t one-time initialization function for videoMessaging()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.videoMessaging);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_0_95();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.videoMessaging.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for videoMessaging, (uint64_t)static Logger.videoMessaging, a1);
}

uint64_t one-time initialization function for shareableContent()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.shareableContent);
  OUTLINED_FUNCTION_8_67();
  OUTLINED_FUNCTION_47();
  return OUTLINED_FUNCTION_3_112();
}

uint64_t static Logger.shareableContent.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for shareableContent, (uint64_t)static Logger.shareableContent, a1);
}

uint64_t one-time initialization function for sidebar()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.sidebar);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_5_103();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.sidebar.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for sidebar, (uint64_t)static Logger.sidebar, a1);
}

uint64_t one-time initialization function for preCall()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.preCall);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_5_103();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.preCall.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for preCall, (uint64_t)static Logger.preCall, a1);
}

uint64_t one-time initialization function for nickname()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.nickname);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_0_95();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.nickname.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for nickname, (uint64_t)static Logger.nickname, a1);
}

uint64_t one-time initialization function for audioNormalizer()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.audioNormalizer);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_0_95();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.audioNormalizer.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for audioNormalizer, (uint64_t)static Logger.audioNormalizer, a1);
}

uint64_t one-time initialization function for attentionAwareness()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.attentionAwareness);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.attentionAwareness);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.attentionAwareness.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for attentionAwareness, (uint64_t)static Logger.attentionAwareness);
}

uint64_t static Logger.attentionAwareness.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for attentionAwareness, (uint64_t)static Logger.attentionAwareness, a1);
}

uint64_t one-time initialization function for dfrController()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.dfrController);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.dfrController);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.dfrController.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for dfrController, (uint64_t)static Logger.dfrController);
}

uint64_t Logger.conversationControls.unsafeMutableAddressor(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static Logger.dfrController.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for dfrController, (uint64_t)static Logger.dfrController, a1);
}

uint64_t one-time initialization function for peoplePicker()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.peoplePicker);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_7_89();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.peoplePicker.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for peoplePicker, (uint64_t)static Logger.peoplePicker, a1);
}

uint64_t one-time initialization function for peoplePickerAutocomplete()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.peoplePickerAutocomplete);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_10_66();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.peoplePickerAutocomplete.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for peoplePickerAutocomplete, (uint64_t)static Logger.peoplePickerAutocomplete, a1);
}

uint64_t one-time initialization function for spam()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.spam);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_0_95();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.spam.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for spam, (uint64_t)static Logger.spam, a1);
}

uint64_t one-time initialization function for recordingSession()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.recordingSession);
  OUTLINED_FUNCTION_8_67();
  OUTLINED_FUNCTION_47();
  return OUTLINED_FUNCTION_3_112();
}

uint64_t static Logger.recordingSession.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for recordingSession, (uint64_t)static Logger.recordingSession, a1);
}

uint64_t one-time initialization function for appleIntelligence()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.appleIntelligence);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_10_66();
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.appleIntelligence.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for appleIntelligence, (uint64_t)static Logger.appleIntelligence, a1);
}

uint64_t static Log.default.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, a2);
  OUTLINED_FUNCTION_48();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 16);
  return v7(a3);
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t static Notification.contextMenuDidDismiss(target:)(void *a1)
{
  return static Notification.contextMenuDidDismiss(target:)(a1, &one-time initialization token for contextMenuDidDismiss, (void **)&static NSNotificationName.contextMenuDidDismiss);
}

uint64_t NSNotificationCenter.post(_:afterAnimatorCompletes:)(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v10 = v9(v8, a1, v5);
  MEMORY[0x1F4188790](v10);
  v9(v8, (uint64_t)v8, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, v8, v5);
  *(void *)(v12 + ((v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  if (a2)
  {
    unint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
    id v14 = v2;
    swift_unknownObjectRetain();
    v13(v8, v5);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = partial apply for closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:);
    *(void *)(v15 + 24) = v12;
    aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t aBlock[3] = &block_descriptor_75;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(a2, sel_addCompletion_, v16);
    _Block_release(v16);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)((uint64_t)v8, v2);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void specialized _dictionaryUpCast<A, B, C, D>(_:)()
{
  OUTLINED_FUNCTION_40_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>);
    uint64_t v2 = OUTLINED_FUNCTION_10_67();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v31 = v0 + 64;
  OUTLINED_FUNCTION_8_68();
  uint64_t v5 = v4 & v3;
  int64_t v30 = (unint64_t)(63 - v6) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v32 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  v5 &= v5 - 1;
  while (1)
  {
    OUTLINED_FUNCTION_19_43();
    *(void *)&v33[0] = v1;
    id v17 = v16;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v18 = (_OWORD *)OUTLINED_FUNCTION_17_45();
    outlined init with take of Any(v18, v33);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v1 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_59();
    if (((v21 << v20) & ~*(void *)(v7 + 8 * v19)) == 0)
    {
      OUTLINED_FUNCTION_36_15();
      while (1)
      {
        OUTLINED_FUNCTION_111();
        if (v25)
        {
          if (v22) {
            break;
          }
        }
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        if (*(void *)(v7 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_37_1();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_36:
    OUTLINED_FUNCTION_23_41();
    *(void *)(v7 + v26) |= v27;
    OUTLINED_FUNCTION_21_43(v28);
    outlined init with take of Any(v33, v29);
    OUTLINED_FUNCTION_95();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v8 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      goto LABEL_40;
    }
    if (v8 >= v30) {
      goto LABEL_38;
    }
    uint64_t v9 = *(void *)(v31 + 8 * v8);
    int64_t v10 = v32 + 1;
    if (!v9)
    {
      OUTLINED_FUNCTION_26_35();
      if (v11 == v12) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_24_40();
      if (!v9)
      {
        OUTLINED_FUNCTION_26_35();
        if (v11 == v12) {
          goto LABEL_38;
        }
        OUTLINED_FUNCTION_24_40();
        if (!v9)
        {
          OUTLINED_FUNCTION_26_35();
          if (v11 == v12) {
            goto LABEL_38;
          }
          OUTLINED_FUNCTION_24_40();
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v5 = (v9 - 1) & v9;
    int64_t v32 = v10;
  }
  int64_t v14 = v13 + 4;
  if (v14 >= v30)
  {
LABEL_38:
    swift_release();
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return;
  }
  uint64_t v9 = *(void *)(v31 + 8 * v14);
  if (v9)
  {
    int64_t v10 = v14;
    goto LABEL_25;
  }
  while (!__OFADD__(v14, 1))
  {
    OUTLINED_FUNCTION_26_35();
    if (v11 == v12) {
      goto LABEL_38;
    }
    OUTLINED_FUNCTION_24_40();
    int64_t v14 = v15 + 1;
    if (v9) {
      goto LABEL_25;
    }
  }
LABEL_41:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  long long v24;
  long long v25;
  uint64_t v26;
  _OWORD v27[2];
  long long v28;
  long long v29;
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[3];
  _OWORD v33[2];
  long long v34;
  _OWORD v35[2];

  OUTLINED_FUNCTION_40_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    uint64_t v3 = OUTLINED_FUNCTION_10_67();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_0_96();
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v2) {
    goto LABEL_6;
  }
LABEL_5:
  OUTLINED_FUNCTION_16_46();
  while (1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v0 + 48) + 16 * v4);
    uint64_t v15 = *v13;
    int64_t v14 = v13[1];
    outlined init with copy of Any(*(void *)(v0 + 56) + 32 * v4, (uint64_t)v35);
    *(void *)&uint64_t v34 = v15;
    *((void *)&v34 + 1) = v14;
    v32[2] = v34;
    v33[0] = v35[0];
    v33[1] = v35[1];
    *(void *)&v32[0] = v15;
    *((void *)&v32[0] + 1) = v14;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    outlined init with take of Any(v33, v27);
    uint64_t v28 = v24;
    unint64_t v29 = v25;
    int64_t v30 = v26;
    outlined init with take of Any(v27, v31);
    uint64_t v24 = v28;
    char v25 = v29;
    uint64_t v26 = v30;
    outlined init with take of Any(v31, v32);
    outlined init with take of Any(v32, &v28);
    AnyHashable._rawHashValue(seed:)(*(void *)(v3 + 40));
    OUTLINED_FUNCTION_7_90();
    if (v16) {
      break;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_36:
    OUTLINED_FUNCTION_3_113(v17);
    *(_OWORD *)uint64_t v21 = v24;
    *(_OWORD *)(v21 + 16) = v25;
    *(void *)(v21 + 32) = v26;
    outlined init with take of Any(&v28, (_OWORD *)(*(void *)(v3 + 56) + 32 * v22));
    OUTLINED_FUNCTION_95();
    if (v2) {
      goto LABEL_5;
    }
LABEL_6:
    OUTLINED_FUNCTION_11_56();
    if (v5 == v6)
    {
LABEL_38:
      OUTLINED_FUNCTION_13_63();
      OUTLINED_FUNCTION_25_42();
      return;
    }
    OUTLINED_FUNCTION_18_48();
    if (!v7)
    {
      OUTLINED_FUNCTION_1_124();
      if (v5 == v6) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_5_14();
      if (!v8)
      {
        OUTLINED_FUNCTION_1_124();
        if (v5 == v6) {
          goto LABEL_38;
        }
        OUTLINED_FUNCTION_5_14();
        if (!v9)
        {
          OUTLINED_FUNCTION_1_124();
          if (v5 == v6) {
            goto LABEL_38;
          }
          OUTLINED_FUNCTION_5_14();
          if (!v10)
          {
            OUTLINED_FUNCTION_11_56();
            if (v5 == v6) {
              goto LABEL_38;
            }
            if (!*(void *)(v23 + 8 * v11))
            {
              while (!__OFADD__(v11, 1))
              {
                OUTLINED_FUNCTION_1_124();
                if (v5 == v6) {
                  goto LABEL_38;
                }
                OUTLINED_FUNCTION_15_61();
                if (v12) {
                  goto LABEL_25;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_12_56();
  }
  OUTLINED_FUNCTION_36_15();
  while (1)
  {
    OUTLINED_FUNCTION_111();
    if (v16)
    {
      if (v18) {
        break;
      }
    }
    if (v19 == v20) {
      uint64_t v19 = 0;
    }
    if (*(void *)(v3 + 64 + 8 * v19) != -1)
    {
      OUTLINED_FUNCTION_37_1();
      goto LABEL_36;
    }
  }
  __break(1u);
  __break(1u);
LABEL_40:
  __break(1u);
}

{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _OWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  _OWORD v27[2];

  OUTLINED_FUNCTION_40_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorAttributeName, Any>);
    uint64_t v2 = OUTLINED_FUNCTION_10_67();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_8_68();
  uint64_t v5 = v4 & v3;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v26 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  v5 &= v5 - 1;
  while (1)
  {
    OUTLINED_FUNCTION_19_43();
    *(void *)&v27[0] = v1;
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[UIFontDescriptorFeatureKey : Int]]);
    swift_dynamicCast();
    int64_t v14 = (_OWORD *)OUTLINED_FUNCTION_17_45();
    outlined init with take of Any(v14, v27);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v1 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_59();
    if (((v17 << v16) & ~*(void *)(v6 + 8 * v15)) == 0)
    {
      OUTLINED_FUNCTION_36_15();
      while (1)
      {
        OUTLINED_FUNCTION_111();
        if (v21)
        {
          if (v18) {
            break;
          }
        }
        if (v19 == v20) {
          uint64_t v19 = 0;
        }
        if (*(void *)(v6 + 8 * v19) != -1)
        {
          OUTLINED_FUNCTION_37_1();
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_38:
    OUTLINED_FUNCTION_23_41();
    *(void *)(v6 + v22) |= v23;
    OUTLINED_FUNCTION_21_43(v24);
    outlined init with take of Any(v27, v25);
    OUTLINED_FUNCTION_95();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v26, 1)) {
      goto LABEL_42;
    }
    OUTLINED_FUNCTION_11_56();
    if (v7 == v8) {
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_18_48();
    if (!v10)
    {
      OUTLINED_FUNCTION_1_124();
      if (v7 == v8) {
        goto LABEL_40;
      }
      OUTLINED_FUNCTION_5_14();
      if (!v10)
      {
        OUTLINED_FUNCTION_1_124();
        if (v7 == v8) {
          goto LABEL_40;
        }
        OUTLINED_FUNCTION_5_14();
        if (!v10)
        {
          OUTLINED_FUNCTION_1_124();
          if (v7 == v8) {
            goto LABEL_40;
          }
          OUTLINED_FUNCTION_5_14();
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v5 = (v10 - 1) & v10;
    uint64_t v26 = v9;
  }
  OUTLINED_FUNCTION_11_56();
  if (v7 == v8)
  {
LABEL_40:
    OUTLINED_FUNCTION_13_63();
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return;
  }
  int64_t v10 = *(void *)(v0 + 64 + 8 * v11);
  if (v10)
  {
    uint64_t v9 = v11;
    goto LABEL_27;
  }
  while (!__OFADD__(v11, 1))
  {
    OUTLINED_FUNCTION_1_124();
    if (v7 == v8) {
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_15_61();
    if (v10) {
      goto LABEL_27;
    }
  }
LABEL_43:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  long long v23;
  long long v24;
  uint64_t v25;
  long long v26;
  long long v27;
  long long v28;
  uint64_t v29;
  _OWORD v30[2];
  _OWORD v31[2];

  OUTLINED_FUNCTION_40_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    uint64_t v3 = OUTLINED_FUNCTION_10_67();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_0_96();
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v2) {
    goto LABEL_6;
  }
LABEL_5:
  OUTLINED_FUNCTION_16_46();
  while (1)
  {
    uint64_t v13 = (void *)(*(void *)(v0 + 48) + 16 * v4);
    int64_t v14 = v13[1];
    *(void *)&v31[0] = *v13;
    *((void *)&v31[0] + 1) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    swift_dynamicCast();
    uint64_t v27 = v23;
    uint64_t v28 = v24;
    unint64_t v29 = v25;
    outlined init with take of Any(&v26, v30);
    uint64_t v23 = v27;
    uint64_t v24 = v28;
    char v25 = v29;
    outlined init with take of Any(v30, v31);
    outlined init with take of Any(v31, &v27);
    AnyHashable._rawHashValue(seed:)(*(void *)(v3 + 40));
    OUTLINED_FUNCTION_7_90();
    if (v15) {
      break;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_36:
    OUTLINED_FUNCTION_3_113(v16);
    *(_OWORD *)char v20 = v23;
    *(_OWORD *)(v20 + 16) = v24;
    *(void *)(v20 + 32) = v25;
    outlined init with take of Any(&v27, (_OWORD *)(*(void *)(v3 + 56) + 32 * v21));
    OUTLINED_FUNCTION_95();
    if (v2) {
      goto LABEL_5;
    }
LABEL_6:
    OUTLINED_FUNCTION_11_56();
    if (v5 == v6)
    {
LABEL_38:
      OUTLINED_FUNCTION_13_63();
      OUTLINED_FUNCTION_25_42();
      return;
    }
    OUTLINED_FUNCTION_18_48();
    if (!v7)
    {
      OUTLINED_FUNCTION_1_124();
      if (v5 == v6) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_5_14();
      if (!v8)
      {
        OUTLINED_FUNCTION_1_124();
        if (v5 == v6) {
          goto LABEL_38;
        }
        OUTLINED_FUNCTION_5_14();
        if (!v9)
        {
          OUTLINED_FUNCTION_1_124();
          if (v5 == v6) {
            goto LABEL_38;
          }
          OUTLINED_FUNCTION_5_14();
          if (!v10)
          {
            OUTLINED_FUNCTION_11_56();
            if (v5 == v6) {
              goto LABEL_38;
            }
            if (!*(void *)(v22 + 8 * v11))
            {
              while (!__OFADD__(v11, 1))
              {
                OUTLINED_FUNCTION_1_124();
                if (v5 == v6) {
                  goto LABEL_38;
                }
                OUTLINED_FUNCTION_15_61();
                if (v12) {
                  goto LABEL_25;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_12_56();
  }
  OUTLINED_FUNCTION_36_15();
  while (1)
  {
    OUTLINED_FUNCTION_111();
    if (v15)
    {
      if (v17) {
        break;
      }
    }
    if (v18 == v19) {
      uint64_t v18 = 0;
    }
    if (*(void *)(v3 + 64 + 8 * v18) != -1)
    {
      OUTLINED_FUNCTION_37_1();
      goto LABEL_36;
    }
  }
  __break(1u);
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v36);
    v35[0] = v36[0];
    v35[1] = v36[1];
    swift_dynamicCast();
    outlined init with take of Any(v35, v29);
    long long v30 = v26;
    long long v31 = v27;
    uint64_t v32 = v28;
    outlined init with take of Any(v29, v33);
    long long v26 = v30;
    long long v27 = v31;
    uint64_t v28 = v32;
    outlined init with take of Any(v33, v34);
    outlined init with take of Any(v34, &v30);
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6))) == 0)
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v16) >> 6;
      while (++v18 != v21 || (v20 & 1) == 0)
      {
        BOOL v22 = v18 == v21;
        if (v18 == v21) {
          unint64_t v18 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v7 + 8 * v18);
        if (v23 != -1)
        {
          unint64_t v19 = __clz(__rbit64(~v23)) + (v18 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v7 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v24 = *(void *)(v2 + 48) + 40 * v19;
    *(_OWORD *)uint64_t v24 = v26;
    *(_OWORD *)(v24 + 16) = v27;
    *(void *)(v24 + 32) = v28;
    uint64_t result = (uint64_t)outlined init with take of Any(&v30, (_OWORD *)(*(void *)(v2 + 56) + 32 * v19));
    ++*(void *)(v2 + 16);
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v12 >= v25) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    int64_t v14 = v9 + 1;
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v25) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v25) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 4;
          if (v9 + 4 >= v25) {
            goto LABEL_36;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v9 = v14;
  }
  int64_t v15 = v9 + 5;
  if (v9 + 5 >= v25)
  {
LABEL_36:
    swift_release();
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return v2;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v25) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t static Notification.contextMenuWillPresent(target:)(void *a1)
{
  return static Notification.contextMenuDidDismiss(target:)(a1, &one-time initialization token for contextMenuWillPresent, (void **)&static NSNotificationName.contextMenuWillPresent);
}

uint64_t static Notification.contextMenuDidDismiss(target:)(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v5 = *a3;
  type metadata accessor for UIView();
  id v6 = v5;
  id v7 = a1;
  uint64_t v8 = UIView.contextMenuUserInfo.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v8);
  swift_bridgeObjectRelease();
  return Notification.init(name:object:userInfo:)();
}

uint64_t *NSNotificationName.contextMenuWillPresent.unsafeMutableAddressor()
{
  if (one-time initialization token for contextMenuWillPresent != -1) {
    swift_once();
  }
  return &static NSNotificationName.contextMenuWillPresent;
}

uint64_t *NSNotificationName.contextMenuDidDismiss.unsafeMutableAddressor()
{
  if (one-time initialization token for contextMenuDidDismiss != -1) {
    swift_once();
  }
  return &static NSNotificationName.contextMenuDidDismiss;
}

uint64_t one-time initialization function for contextMenuWillPresent()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000022, 0x80000001C37AEA60);
  static NSNotificationName.contextMenuWillPresent = result;
  return result;
}

id static NSNotificationName.contextMenuWillPresent.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for contextMenuWillPresent, (void **)&static NSNotificationName.contextMenuWillPresent);
}

uint64_t one-time initialization function for contextMenuDidDismiss()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000021, 0x80000001C37AEA90);
  static NSNotificationName.contextMenuDidDismiss = result;
  return result;
}

id static NSNotificationName.contextMenuDidDismiss.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for contextMenuDidDismiss, (void **)&static NSNotificationName.contextMenuDidDismiss);
}

void closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)(uint64_t a1, void *a2)
{
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Log.default);
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  int64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v19[2] = a1;
    uint64_t v11 = swift_slowAlloc();
    char v20 = a2;
    int64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    v19[1] = v19;
    uint64_t v14 = v13;
    uint64_t v22 = v13;
    *(_DWORD *)int64_t v12 = 136315138;
    uint64_t v21 = Notification.name.getter();
    type metadata accessor for NSNotificationName(0);
    uint64_t v15 = String.init<A>(reflecting:)();
    uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_1C2F90000, v9, v10, "Posting %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v14, -1, -1);
    unint64_t v17 = v12;
    a2 = v20;
    MEMORY[0x1C87760E0](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a2, sel_postNotification_, isa);
}

uint64_t sub_1C34614C8()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void partial apply for closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notification() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)(v0 + v2, v3);
}

uint64_t sub_1C34615F8()
{
  swift_release();
  return swift_deallocObject();
}

void one-time initialization function for labelSpacing()
{
  static LabeledButtonView.labelSpacing = 0x4014000000000000;
}

uint64_t key path getter for LabeledButtonView.control : LabeledButtonView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t key path setter for LabeledButtonView.control : LabeledButtonView(id *a1, void **a2)
{
  id v2 = *a1;
  unint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x70);
  id v4 = *a1;
  return v3(v2);
}

void *LabeledButtonView.control.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void LabeledButtonView.control.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t (*LabeledButtonView.control.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for LabeledButtonView.label : LabeledButtonView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t key path setter for LabeledButtonView.label : LabeledButtonView(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x88))(*a1);
}

id LabeledButtonView.label.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setTextAlignment_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void LabeledButtonView.label.setter(uint64_t a1)
{
}

void (*LabeledButtonView.label.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = LabeledButtonView.label.getter();
  return LabeledButtonView.label.modify;
}

void LabeledButtonView.label.modify(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    LabeledButtonView.label.setter((uint64_t)v3);
  }
  else
  {
    LabeledButtonView.label.setter((uint64_t)v2);
  }
}

uint64_t LabeledButtonView.preferredFocusEnvironments.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIFocusEnvironment?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  *(void *)(inited + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
  specialized Array._endMutation()();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (*(void *)(inited + 32))
  {
    uint64_t v3 = swift_unknownObjectRetain();
    MEMORY[0x1C87733A0](v3);
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v2 = v5;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void LabeledButtonView.labelTopConstraint.setter(uint64_t a1)
{
}

void *LabeledButtonView.__allocating_init(control:text:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return LabeledButtonView.init(control:text:)(a1, a2, a3);
}

void *LabeledButtonView.init(control:text:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void **)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control];
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint] = 0;
  swift_beginAccess();
  uint64_t v8 = *v7;
  *id v7 = a1;
  id v9 = a1;

  v20.receiver = v3;
  v20.super_class = (Class)type metadata accessor for LabeledButtonView();
  os_log_type_t v10 = objc_msgSendSuper2(&v20, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x80);
  int64_t v12 = v10;
  uint64_t v13 = (void *)v11();
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)MEMORY[0x1C87730B0](a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  objc_msgSend(v13, sel_setText_, v14);

  if (a1)
  {
    id v15 = v9;
    if (a3)
    {
      unint64_t v16 = (void *)MEMORY[0x1C87730B0](a2, a3);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v16 = 0;
    }
    objc_msgSend(v9, sel_setAccessibilityLabel_, v16);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LabeledButtonView.configureAppearance()();

  if (a1)
  {
    type metadata accessor for ConversationControlsButton();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      uint64_t v18 = v17 + OBJC_IVAR___CNKConversationControlsButton_delegate;
      swift_beginAccess();
      *(void *)(v18 + 8) = &protocol witness table for LabeledButtonView;
      swift_unknownObjectWeakAssign();
    }
  }
  return v12;
}

uint64_t type metadata accessor for LabeledButtonView()
{
  return self;
}

id LabeledButtonView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LabeledButtonView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void LabeledButtonView.configureAppearance()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v0) + 0x68))();
  if (v3)
  {
    id v4 = (void *)v3;
    id v5 = objc_msgSend(v0, sel_addSubview_, v3);
    id v6 = *(uint64_t (**)(void))((*v2 & *(void *)v0) + 0x80);
    id v7 = (void *)((uint64_t (*)(id))v6)(v5);
    objc_msgSend(v1, sel_addSubview_, v7);

    uint64_t v64 = v6;
    uint64_t v8 = (void *)((uint64_t (*)(id))v6)(objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0));
    id v9 = objc_msgSend(v8, sel_topAnchor);

    id v10 = objc_msgSend(v4, sel_bottomAnchor);
    if (one-time initialization token for labelSpacing != -1) {
      swift_once();
    }
    id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, *(double *)&static LabeledButtonView.labelSpacing);

    LabeledButtonView.labelTopConstraint.setter((uint64_t)v11);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C3769600;
    id v13 = objc_msgSend(v1, sel_widthAnchor);
    id v14 = objc_msgSend(v4, sel_widthAnchor);
    id v15 = OUTLINED_FUNCTION_4_100();

    *(void *)(v12 + 32) = v15;
    id v16 = objc_msgSend(v4, sel_topAnchor);
    id v17 = objc_msgSend(v1, sel_topAnchor);
    id v18 = OUTLINED_FUNCTION_4_100();

    *(void *)(v12 + 40) = v18;
    id v19 = objc_msgSend(v4, sel_centerXAnchor);
    id v20 = objc_msgSend(v1, sel_centerXAnchor);
    id v21 = OUTLINED_FUNCTION_4_100();

    *(void *)(v12 + 48) = v21;
    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint];
    if (v22)
    {
      id v62 = self;
      *(void *)(v12 + 56) = v22;
      uint64_t v23 = (void *)((uint64_t (*)(void *))v64)(v22);
      id v24 = objc_msgSend(v23, sel_centerXAnchor);

      id v25 = objc_msgSend(v1, sel_centerXAnchor);
      id v26 = objc_msgSend(v24, (SEL)0x1F74DE2EELL, v25);

      *(void *)(v12 + 64) = v26;
      v67[0] = v12;
      specialized Array._endMutation()();
      type metadata accessor for NSLayoutConstraint();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_activateConstraints_, isa);

      id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
      objc_msgSend(v63, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      objc_msgSend(v1, sel_addSubview_, v63);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C3771690;
      unint64_t v29 = (void *)v64();
      id v30 = objc_msgSend(v29, sel_leadingAnchor);

      id v31 = objc_msgSend(v1, (SEL)&selRef_shouldShowCallDetailsWhenReady + 2);
      static Layout.ConversationControls.values.getter((uint64_t)v65);
      id v32 = objc_msgSend(v30, sel_constraintGreaterThanOrEqualToAnchor_constant_, v31, -v66);

      *(void *)(v28 + 32) = v32;
      OUTLINED_FUNCTION_0_97();
      unint64_t v33 = (void *)v64();
      id v34 = objc_msgSend(v33, sel_trailingAnchor);

      id v35 = objc_msgSend(v1, sel_trailingAnchor);
      static Layout.ConversationControls.values.getter((uint64_t)v67);
      id v36 = objc_msgSend(v34, sel_constraintLessThanOrEqualToAnchor_constant_, v35, *(double *)&v67[28]);

      *(void *)(v28 + 40) = v36;
      OUTLINED_FUNCTION_0_97();
      unint64_t v37 = (void *)v64();
      id v38 = objc_msgSend(v37, sel_bottomAnchor);

      id v39 = objc_msgSend(v63, sel_topAnchor);
      id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

      *(void *)(v28 + 48) = v40;
      id v41 = objc_msgSend(v63, sel_leadingAnchor);
      id v42 = OUTLINED_FUNCTION_1_125((uint64_t)objc_msgSend(v1, sel_leadingAnchor));

      *(void *)(v28 + 56) = v42;
      id v43 = objc_msgSend(v63, sel_trailingAnchor);
      id v44 = OUTLINED_FUNCTION_1_125((uint64_t)objc_msgSend(v1, sel_trailingAnchor));

      *(void *)(v28 + 64) = v44;
      id v45 = objc_msgSend(v63, sel_bottomAnchor);
      id v46 = OUTLINED_FUNCTION_1_125((uint64_t)objc_msgSend(v1, sel_bottomAnchor));

      *(void *)(v28 + 72) = v46;
      id v47 = objc_msgSend(v63, sel_heightAnchor);
      id v48 = objc_msgSend(v47, sel_constraintEqualToConstant_, 0.0);

      LODWORD(v49) = 1132068864;
      objc_msgSend(v48, sel_setPriority_, v49);
      *(void *)(v28 + 80) = v48;
      specialized Array._endMutation()();
      Class v50 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_activateConstraints_, v50);

      LODWORD(v51) = 1144750080;
      int64_t v52 = (void *)((uint64_t (*)(id))v64)(objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 1, v51));
      type metadata accessor for UILayoutPriority(0);
      lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
      OUTLINED_FUNCTION_3_114();
      LODWORD(v53) = v28;
      objc_msgSend(v52, sel_setContentHuggingPriority_forAxis_, 0, v53);

      OUTLINED_FUNCTION_0_97();
      uint64_t v54 = (void *)v64();
      LODWORD(v55) = 1144750080;
      objc_msgSend(v54, sel_setContentHuggingPriority_forAxis_, 1, v55);

      OUTLINED_FUNCTION_0_97();
      uint64_t v56 = (void *)v64();
      OUTLINED_FUNCTION_3_114();
      LODWORD(v57) = v28;
      objc_msgSend(v56, sel_setContentCompressionResistancePriority_forAxis_, 0, v57);

      OUTLINED_FUNCTION_0_97();
      unint64_t v58 = (void *)v64();
      id v59 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28D8]);
      objc_msgSend(v58, sel_setFont_, v59);

      OUTLINED_FUNCTION_0_97();
      uint64_t v60 = (void *)v64();
      objc_msgSend(v60, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27D0]);

      OUTLINED_FUNCTION_0_97();
      uint64_t v61 = (void *)v64();
      objc_msgSend(v61, sel_setAdjustsFontForContentSizeCategory_, 1);
    }
    else
    {
      __break(1u);
    }
  }
}

id LabeledButtonView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void LabeledButtonView.init(frame:)()
{
}

id LabeledButtonView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabeledButtonView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void LabeledButtonView.buttonDidUpdateLocalizedName(_:)(uint64_t a1)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x80))();
  id v4 = (uint64_t *)(a1 + OBJC_IVAR___CNKConversationControlsButton_localizedName);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    id v7 = (void *)MEMORY[0x1C87730B0](v6, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  objc_msgSend(v3, sel_setText_, v7);
}

uint64_t method lookup function for LabeledButtonView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LabeledButtonView);
}

uint64_t dispatch thunk of LabeledButtonView.control.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LabeledButtonView.control.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of LabeledButtonView.control.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of LabeledButtonView.label.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of LabeledButtonView.label.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of LabeledButtonView.label.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LabeledButtonView.__allocating_init(control:text:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

id ParticipantMediaPriorities.remoteIdentifiers.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  id v7 = *(id *)v1;
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t ParticipantMediaPriorities.remoteIdentifiers.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(void *)(v1 + 32) = v6;
  return result;
}

uint64_t (*ParticipantMediaPriorities.remoteIdentifiers.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float ParticipantMediaPriorities.audioPriority.getter()
{
  return *(float *)(v0 + 40);
}

void ParticipantMediaPriorities.audioPriority.setter(float a1)
{
  *(float *)(v1 + 40) = a1;
}

uint64_t (*ParticipantMediaPriorities.audioPriority.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float ParticipantMediaPriorities.videoPriority.getter()
{
  return *(float *)(v0 + 44);
}

void ParticipantMediaPriorities.videoPriority.setter(float a1)
{
  *(float *)(v1 + 44) = a1;
}

uint64_t (*ParticipantMediaPriorities.videoPriority.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantMediaPriorities.init(remoteIdentifiers:audioPriority:videoPriority:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v4 = *(void *)(result + 8);
  char v5 = *(unsigned char *)(result + 16);
  *(void *)a2 = *(void *)result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
  *(float *)(a2 + 40) = a3;
  *(float *)(a2 + 44) = a4;
  return result;
}

float ParticipantMediaPriorities.init(conversationParticipant:)@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_handle);
  id v5 = objc_msgSend(a1, sel_identifier);
  id v6 = objc_msgSend(a1, sel_avcIdentifier);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  float v10 = (float)(uint64_t)objc_msgSend(a1, sel_audioPriority);
  id v11 = objc_msgSend(a1, sel_videoPriority);

  float result = (float)(uint64_t)v11;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v9;
  *(float *)(a2 + 40) = v10;
  *(float *)(a2 + 44) = (float)(uint64_t)v11;
  return result;
}

uint64_t destroy for ParticipantMediaPriorities(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParticipantMediaPriorities(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParticipantMediaPriorities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  return a1;
}

uint64_t assignWithTake for ParticipantMediaPriorities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for ParticipantMediaPriorities()
{
  return &type metadata for ParticipantMediaPriorities;
}

BOOL static Platform.istvOS.getter()
{
  return static Platform.current.getter() == 2;
}

BOOL static Platform.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t static Platform.isCatalystOrMacOS.getter()
{
  return 0;
}

BOOL static Platform.isIPad.getter()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1 == (id)1;
}

BOOL static Platform.isiOS.getter()
{
  return static Platform.current.getter() < 2u;
}

uint64_t static Platform.isCatalyst.getter()
{
  return 0;
}

uint64_t static Platform.isMacOS.getter()
{
  return 0;
}

uint64_t static Platform.isNotMacOS.getter()
{
  return 1;
}

void Platform.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int Platform.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Platform(char *a1, char *a2)
{
  return static Platform.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Platform()
{
  return Platform.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance Platform(uint64_t a1)
{
  Platform.hash(into:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type Platform and conformance Platform()
{
  unint64_t result = lazy protocol witness table cache variable for type Platform and conformance Platform;
  if (!lazy protocol witness table cache variable for type Platform and conformance Platform)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Platform and conformance Platform);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Platform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C346319CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

id CNKCrossFadeAnimatorFactory.makeAnimator()()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for CrossFadeAnimator());
  return objc_msgSend(v0, sel_init);
}

id CrossFadeAnimator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t type metadata accessor for CrossFadeAnimator()
{
  return self;
}

CNKCrossFadeAnimatorFactory __swiftcall CNKCrossFadeAnimatorFactory.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (CNKCrossFadeAnimatorFactory)objc_msgSend(v0, sel_init);
}

id CNKCrossFadeAnimatorFactory.init()()
{
  v1.super_class = (Class)CNKCrossFadeAnimatorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

id CrossFadeAnimator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CrossFadeAnimator();
  return objc_msgSendSuper2(&v2, sel_init);
}

double CrossFadeAnimator.transitionDuration(using:)()
{
  return 0.3;
}

void CrossFadeAnimator.animateTransition(using:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_viewForKey_, *MEMORY[0x1E4FB30D0]);
  if (v2)
  {
    int v3 = v2;
    objc_msgSend(v2, sel_setAlpha_, 0.0);
    id v4 = objc_msgSend(a1, sel_containerView);
    objc_msgSend(v4, sel_addSubview_, v3);

    objc_msgSend(v3, sel_layoutIfNeeded);
    uint64_t v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    id v15 = partial apply for closure #2 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout();
    uint64_t v16 = v6;
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 1107296256;
    id v13 = thunk for @escaping @callee_guaranteed () -> ();
    id v14 = &block_descriptor_76;
    uint64_t v7 = _Block_copy(&v11);
    id v8 = v3;
    swift_release();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    id v15 = partial apply for closure #2 in CrossFadeAnimator.animateTransition(using:);
    uint64_t v16 = v9;
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 1107296256;
    id v13 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    id v14 = &block_descriptor_6_3;
    float v10 = _Block_copy(&v11);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v5, sel_animateWithDuration_delay_options_animations_completion_, 0, v7, v10, 0.3, 0.0);

    _Block_release(v10);
    _Block_release(v7);
  }
  else
  {
    objc_msgSend(a1, sel_completeTransition_, 0);
  }
}

uint64_t sub_1C3463608()
{
  return swift_deallocObject();
}

uint64_t sub_1C3463640()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id partial apply for closure #2 in CrossFadeAnimator.animateTransition(using:)()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_completeTransition_, 1);
}

id CrossFadeAnimator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CrossFadeAnimator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t type metadata accessor for CNKCrossFadeAnimatorFactory()
{
  unint64_t result = lazy cache variable for type metadata for CNKCrossFadeAnimatorFactory;
  if (!lazy cache variable for type metadata for CNKCrossFadeAnimatorFactory)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNKCrossFadeAnimatorFactory);
  }
  return result;
}

uint64_t method lookup function for CrossFadeAnimator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CrossFadeAnimator);
}

uint64_t dispatch thunk of CrossFadeAnimator.transitionDuration(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of CrossFadeAnimator.animateTransition(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v3 = v11;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      outlined init with copy of Any(i, (uint64_t)v10);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v3 = v11;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      if (v5 >= *(void *)(v3 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v3 = v11;
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    while (1)
    {
      outlined init with copy of Any(v3, (uint64_t)v4);
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMSPIMessage);
      if (!swift_dynamicCast()) {
        break;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v3 += 32;
      if (!--v2) {
        goto LABEL_7;
      }
    }
    swift_release();
  }
LABEL_7:
  OUTLINED_FUNCTION_55_13();
}

void RecentsCollectionViewCollator.__allocating_init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)()
{
  id v1 = objc_allocWithZone(v0);
  OUTLINED_FUNCTION_71_7();
  RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)();
}

uint64_t RecentsControllable.recentCallsCount.getter()
{
  return 0;
}

id RecentsCollectionViewCollator.updateQueue.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue);
}

uint64_t RecentsCollectionViewCollator.recentsController.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of IDSLookupManager(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController, a1);
}

id RecentsCollectionViewCollator.conversationManager.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager);
}

id RecentsCollectionViewCollator.dataSource.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_dataSource);
}

uint64_t key path getter for RecentsCollectionViewCollator.linkController : RecentsCollectionViewCollator@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for RecentsCollectionViewCollator.linkController : RecentsCollectionViewCollator(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xD8);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t RecentsCollectionViewCollator.linkController.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t (*RecentsCollectionViewCollator.linkController.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for RecentsCollectionViewCollator.messageInboxController : RecentsCollectionViewCollator@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xE8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for RecentsCollectionViewCollator.messageInboxController : RecentsCollectionViewCollator(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xF0);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t RecentsCollectionViewCollator.messageInboxController.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t (*RecentsCollectionViewCollator.messageInboxController.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for RecentsCollectionViewCollator.hasFinishedFirstLoad : RecentsCollectionViewCollator@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x100))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for RecentsCollectionViewCollator.hasFinishedFirstLoad : RecentsCollectionViewCollator()
{
  return RecentsCollectionViewCollator.hasFinishedFirstLoad.setter();
}

uint64_t key path getter for RecentsCollectionViewCollator.$hasFinishedFirstLoad : RecentsCollectionViewCollator(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x118))();
}

uint64_t key path setter for RecentsCollectionViewCollator.$hasFinishedFirstLoad : RecentsCollectionViewCollator(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __n128 v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return RecentsCollectionViewCollator.$hasFinishedFirstLoad.setter((uint64_t)v5);
}

uint64_t RecentsCollectionViewCollator.$hasFinishedFirstLoad.getter()
{
  return swift_endAccess();
}

uint64_t RecentsCollectionViewCollator.$hasFinishedFirstLoad.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, a1, v3);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
}

uint64_t RecentsCollectionViewCollator.recentCallsDidChangeObserver.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentCallsDidChangeObserver) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1C34640B0()
{
  return RecentsCollectionViewCollator.hasFinishedFirstLoad.setter();
}

id RecentsCollectionViewCollator.__deallocating_deinit()
{
  RecentsCollectionViewCollator.deregisterRecentCallsDidChangeObserver()();
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_linkController];
  swift_beginAccess();
  uint64_t v2 = *(void (**)(uint64_t))(**(void **)v1 + 264);
  uint64_t v3 = swift_retain();
  v2(v3);
  swift_release();
  uint64_t v4 = *(void (**)(void, void))(**(void **)v1 + 136);
  swift_retain();
  v4(0, 0);
  swift_release();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for RecentsCollectionViewCollator();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

void RecentsCollectionViewCollator.callItem(for:identifier:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_62();
  char v12 = *v7;
  uint64_t v13 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_24_6(v13);
  id v14 = *(NSObject **)&v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  *(void *)(v15 + 24) = v0;
  *(unsigned char *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v5;
  *(void *)(v15 + 48) = v3;
  uint64_t v16 = OUTLINED_FUNCTION_26();
  *(void *)(v16 + 16) = partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:);
  *(void *)(v16 + 24) = v15;
  v20[4] = partial apply for thunk for @callee_guaranteed () -> ();
  v20[5] = v16;
  v20[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v20[2] = thunk for @escaping @callee_guaranteed () -> ();
  v20[3] = &block_descriptor_77;
  id v17 = _Block_copy(v20);
  id v18 = v0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v14, v17);
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    outlined init with take of RecentsCallItem?(v1, v9);
    swift_release();
    OUTLINED_FUNCTION_28();
  }
}

uint64_t closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsCollectionViewCollator.model.getter(&v33);
  uint64_t v12 = v33;
  if (!*(void *)(v33 + 16) || (uint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(a3), (v14 & 1) == 0))
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
    swift_bridgeObjectRetain();
LABEL_14:
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v29 = a1;
  uint64_t v17 = v15 + 32;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    outlined init with copy of IDSLookupManager(v17, (uint64_t)&v30);
    uint64_t v18 = v31;
    uint64_t v19 = v32;
    __swift_project_boxed_opaque_existential_1(&v30, v31);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19) == a4 && v20 == a5) {
      break;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
    v17 += 40;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      a1 = v29;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  outlined init with take of Notice(&v30, (uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v29;
LABEL_16:
  if (*((void *)&v35 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
    uint64_t v23 = type metadata accessor for RecentsCallItem(0);
    uint64_t v24 = swift_dynamicCast() ^ 1;
    uint64_t v25 = (uint64_t)v11;
    uint64_t v26 = v23;
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v34, &demangling cache variable for type metadata for RecentsCollectionViewSectionable?);
    uint64_t v26 = type metadata accessor for RecentsCallItem(0);
    uint64_t v25 = (uint64_t)v11;
    uint64_t v24 = 1;
  }
  __swift_storeEnumTagSinglePayload(v25, v24, 1, v26);
  return outlined assign with take of RecentsCallItem?((uint64_t)v11, a1);
}

void RecentsCollectionViewCollator.callItem(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_63();
  uint64_t v10 = type metadata accessor for RecentsCallItem(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v10);
  uint64_t v11 = *(NSObject **)&v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue];
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v1;
  v12[3] = v0;
  v12[4] = v5;
  v12[5] = v3;
  uint64_t v13 = OUTLINED_FUNCTION_26();
  *(void *)(v13 + 16) = partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:);
  *(void *)(v13 + 24) = v12;
  v17[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v17[5] = v13;
  v17[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v17[2] = thunk for @escaping @callee_guaranteed () -> ();
  v17[3] = &block_descriptor_18_1;
  char v14 = _Block_copy(v17);
  uint64_t v15 = v0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    outlined init with take of RecentsCallItem?(v1, v7);
    swift_release();
    OUTLINED_FUNCTION_28();
  }
}

uint64_t closure #1 in RecentsCollectionViewCollator.callItem(for:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsCollectionViewCollator.model.getter(&v7);
  uint64_t v6 = v7;
  RecentsCollectionViewModel.sectionable(with:)();
  swift_bridgeObjectRelease();
  return outlined assign with take of RecentsCallItem?((uint64_t)v4, a1);
}

void RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_48_14();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v8);
  uint64_t v9 = *(NSObject **)&v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue];
  uint64_t v10 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v10, v16);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v1;
  *(void *)(v18 + 24) = v0;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v19 = OUTLINED_FUNCTION_26();
  *(void *)(v19 + 16) = partial apply for closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:);
  *(void *)(v19 + 24) = v18;
  v23[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v23[5] = v19;
  v23[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v23[2] = thunk for @escaping @callee_guaranteed () -> ();
  v23[3] = &block_descriptor_28_3;
  uint64_t v20 = _Block_copy(v23);
  id v21 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v9, v20);
  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    outlined init with take of RecentsCallItem?(v1, v5);
    swift_release();
    OUTLINED_FUNCTION_28();
  }
}

uint64_t closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsCollectionViewCollator.model.getter(&v7);
  uint64_t v6 = v7;
  RecentsCollectionViewModel.videoMessageCallItem(withUUID:)();
  swift_bridgeObjectRelease();
  return outlined assign with take of RecentsCallItem?((uint64_t)v4, a1);
}

BOOL RecentsCollectionViewCollator.isActive.getter()
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v0 + 208))();
  OUTLINED_FUNCTION_17_8();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 128))();
  swift_release();
  if (v2) {
    swift_unknownObjectRelease();
  }
  return v2 != 0;
}

Swift::Void __swiftcall RecentsCollectionViewCollator.suspend()()
{
  RecentsCollectionViewCollator.deregisterRecentCallsDidChangeObserver()();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager), sel_removeDelegate_, v0);
  OUTLINED_FUNCTION_0_20();
  uint64_t v2 = *(void (**)(void))(v1 + 208);
  v2();
  OUTLINED_FUNCTION_2_10();
  (*(void (**)(void))(v3 + 264))();
  uint64_t v4 = swift_release();
  ((void (*)(uint64_t))v2)(v4);
  OUTLINED_FUNCTION_17_8();
  (*(void (**)(void, void))(v5 + 136))(0, 0);
  swift_release();
}

void closure #1 in RecentsCollectionViewCollator.doReloadData(completion:)(uint64_t a1, void *a2)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
  id v4 = a2;
  swift_bridgeObjectRetain_n();
  id v16 = v4;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v7 = 138412546;
    id v10 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v16;

    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v11 = type metadata accessor for RecentsCallItem(0);
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x1C87733E0](v12, v11);
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v5, v6, "When updating %@ found dupes in items %s", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void RecentsCollectionViewCollator.deleteCallItems(_:completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v0;
  v8[3] = v7;
  v8[4] = v5;
  v8[5] = v3;
  v18[4] = partial apply for closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:);
  v18[5] = v8;
  v18[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v18[2] = thunk for @escaping @callee_guaranteed () -> ();
  v18[3] = &block_descriptor_51;
  uint64_t v9 = _Block_copy(v18);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_63();
  id v14 = v0;
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_5_1();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF28]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v1, v7, v9);
  _Block_release(v9);
  uint64_t v16 = OUTLINED_FUNCTION_48_3();
  v17(v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v10);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:)(uint64_t a1, Swift::OpaquePointer a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<RecentsCollectionViewSection, RecentsCallItem>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  NSDiffableDataSourceSnapshot.deleteItems(_:)(a2);
  RecentsCollectionViewCollator.apply(_:animatingDifferences:completion:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x228))();
  }
}

void RecentsCollectionViewCollator.deregisterRecentCallsDidChangeObserver()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentCallsDidChangeObserver);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);

    RecentsCollectionViewCollator.recentCallsDidChangeObserver.setter(0);
    swift_unknownObjectRelease();
  }
}

id RecentsCollectionViewCollator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RecentsCollectionViewCollator.init()()
{
}

BOOL static CombiningType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void CombiningType.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int CombiningType.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)()
{
  void (*v2)(long long *__return_ptr, uint64_t, void *);
  void (*v3)(long long *__return_ptr, uint64_t, void *);
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  unint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t (*v46)(void);
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  BOOL v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void v72[2];
  unint64_t v73;
  void (*v74)(long long *__return_ptr, uint64_t, void *);
  uint64_t v75;
  uint64_t v76;
  long long v77;
  void *v78;
  unsigned int v79;
  char *v80;
  uint64_t v81;
  void *v82;
  long long v83[3];

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  id v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = *v10;
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v82 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v13 = (char *)type metadata accessor for UUID();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [GroupCombinable]);
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCA0]);
  uint64_t v81 = Dictionary.init(dictionaryLiteral:)();
  id v14 = *(void *)(v9 + 16);
  if (v14)
  {
    uint64_t v79 = v11;
    BOOL v73 = v5;
    unint64_t v74 = v3;
    int v75 = v7;
    uint64_t v76 = v1;
    uint64_t v15 = (void *)(v9 + 32);
    OUTLINED_FUNCTION_45_11(*(void *)(*((void *)v13 - 1) + 64));
    v72[1] = v9;
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v77 = xmmword_1C3769620;
    uint64_t v80 = v13;
    while (1)
    {
      MEMORY[0x1F4188790](v16);
      uint64_t v13 = (char *)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v19 = OUTLINED_FUNCTION_8(v18);
      MEMORY[0x1F4188790](v19);
      OUTLINED_FUNCTION_20_45();
      OUTLINED_FUNCTION_57_8();
      v20();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v80) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined init with copy of IDSLookupManager((uint64_t)v15, (uint64_t)v83);
        uint64_t v12 = v82;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_28_5();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v47;
        }
        id v21 = v12[2];
        if (v21 >= v12[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v48;
        }
        v12[2] = v21 + 1;
        uint64_t v16 = outlined init with take of Notice(v83, (uint64_t)&v12[5 * v21 + 4]);
        uint64_t v82 = v12;
        goto LABEL_34;
      }
      uint64_t v78 = v72;
      OUTLINED_FUNCTION_89_4();
      v22();
      uint64_t v23 = v81;
      if (*(void *)(v81 + 16) && (uint64_t v24 = specialized __RawDictionaryStorage.find<A>(_:)(), (v25 & 1) != 0))
      {
        uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
        outlined init with copy of IDSLookupManager((uint64_t)v15, (uint64_t)v83);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_28_5();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v26 = v49;
        }
        long long v27 = *(void *)(v26 + 16);
        if (v27 >= *(void *)(v26 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v26 = v50;
        }
        *(void *)(v26 + 16) = v27 + 1;
        outlined init with take of Notice(v83, v26 + 40 * v27 + 32);
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_58_10();
        OUTLINED_FUNCTION_87_5();
        if (v30) {
          goto LABEL_85;
        }
        uint64_t v31 = v28;
        uint64_t v32 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>);
        if (OUTLINED_FUNCTION_81_10())
        {
          specialized __RawDictionaryStorage.find<A>(_:)();
          OUTLINED_FUNCTION_29_29();
          if (!v34) {
            goto LABEL_88;
          }
          uint64_t v31 = v33;
        }
        long long v35 = *(void *)&v83[0];
        if ((v32 & 1) == 0)
        {
          uint64_t v36 = OUTLINED_FUNCTION_11_57();
          v37(v36);
          *(void *)(*(void *)(v35 + 56) + 8 * v31) = v26;
          OUTLINED_FUNCTION_86_7();
          if (v30) {
            goto LABEL_86;
          }
LABEL_32:
          *(void *)(v35 + 16) = v38;
          goto LABEL_33;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GroupCombinable>);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = v77;
        outlined init with copy of IDSLookupManager((uint64_t)v15, v26 + 32);
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_58_10();
        OUTLINED_FUNCTION_87_5();
        if (v30) {
          goto LABEL_83;
        }
        uint64_t v31 = v39;
        id v41 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>);
        if (OUTLINED_FUNCTION_81_10())
        {
          specialized __RawDictionaryStorage.find<A>(_:)();
          OUTLINED_FUNCTION_29_29();
          if (!v34) {
            goto LABEL_88;
          }
          uint64_t v31 = v42;
        }
        long long v35 = *(void *)&v83[0];
        if ((v41 & 1) == 0)
        {
          id v44 = OUTLINED_FUNCTION_11_57();
          v45(v44);
          *(void *)(*(void *)(v35 + 56) + 8 * v31) = v26;
          OUTLINED_FUNCTION_86_7();
          if (v30) {
            goto LABEL_84;
          }
          goto LABEL_32;
        }
      }
      id v43 = *(void *)(v35 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v43 + 8 * v31) = v26;
LABEL_33:
      uint64_t v81 = v35;
      swift_bridgeObjectRelease();
      uint64_t v12 = v78;
      OUTLINED_FUNCTION_26_2();
      uint64_t v16 = v46();
LABEL_34:
      v15 += 5;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v75;
        uint64_t v1 = v76;
        id v3 = v74;
        uint64_t v5 = v73;
        uint64_t v11 = v79;
        break;
      }
    }
  }
  double v51 = *(void *)(v7 + 16);
  if (v51)
  {
    uint64_t v12 = (void *)(v7 + 32);
    swift_bridgeObjectRetain();
    do
    {
      closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v12, v11, (uint64_t *)&v82, &v81, v3, v1, v5);
      v12 += 5;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
  }
  specialized _NativeDictionary.makeIterator()(v83, v81);
  OUTLINED_FUNCTION_36_21();
  int64_t v52 = MEMORY[0x1E4FBC860];
  if (!v13) {
    goto LABEL_42;
  }
LABEL_41:
  OUTLINED_FUNCTION_67_8();
  while (1)
  {
    OUTLINED_FUNCTION_70_6();
    if (v30) {
      break;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v11 > *(void *)(v52 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      int64_t v52 = v63;
    }
    if (*(void *)(v7 + 16))
    {
      OUTLINED_FUNCTION_83_6();
      if (v64 != v30) {
        goto LABEL_80;
      }
      OUTLINED_FUNCTION_34_23();
      double v66 = v66 || v5 >= v65;
      if (!v66) {
        goto LABEL_87;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupCombinable);
      OUTLINED_FUNCTION_76_7();
      if (v3)
      {
        uint64_t v67 = *(void *)(v52 + 16);
        long long v30 = __OFADD__(v67, v3);
        uint64_t v68 = (char *)v3 + v67;
        if (v30) {
          goto LABEL_81;
        }
        *(void *)(v52 + 16) = v68;
      }
    }
    else if (v3)
    {
      goto LABEL_79;
    }
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_41;
    }
LABEL_42:
    if (__OFADD__(v1, 1)) {
      goto LABEL_82;
    }
    if (v1 + 1 >= (uint64_t)v12) {
      goto LABEL_77;
    }
    OUTLINED_FUNCTION_84_6();
    if (!v54)
    {
      if (v53 + 1 >= (uint64_t)v12) {
        goto LABEL_77;
      }
      OUTLINED_FUNCTION_35_17();
      if (!v56)
      {
        if (v55 + 2 >= (uint64_t)v12) {
          goto LABEL_77;
        }
        OUTLINED_FUNCTION_35_17();
        if (!v58)
        {
          if (v57 + 3 >= (uint64_t)v12) {
            goto LABEL_77;
          }
          OUTLINED_FUNCTION_35_17();
          if (!v60)
          {
            if (v59 + 4 >= (uint64_t)v12) {
              goto LABEL_77;
            }
            OUTLINED_FUNCTION_35_17();
            if (!v62)
            {
              if (v61 + 5 >= (uint64_t)v12) {
                goto LABEL_77;
              }
              OUTLINED_FUNCTION_84_6();
              if (!v69)
              {
                uint64_t v70 = v1 + 7;
                while (v70 < (uint64_t)v12)
                {
                  if (*(void *)&v80[8 * v70++]) {
                    goto LABEL_53;
                  }
                }
LABEL_77:
                swift_bridgeObjectRelease();
                swift_release();
                specialized Array.append<A>(contentsOf:)();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_28();
                return;
              }
            }
          }
        }
      }
    }
LABEL_53:
    OUTLINED_FUNCTION_49_12();
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  OUTLINED_FUNCTION_50_13();
  OUTLINED_FUNCTION_60_9();
  __break(1u);
LABEL_88:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void closure #1 in RecentsCollectionViewCollator.linkCallItems(combining:with:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v36 = v1;
  uint64_t v37 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_36();
  uint64_t v10 = v8 - v9;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v35 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_36();
  uint64_t v21 = v19 - v20;
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v35 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v35 - v27;
  MEMORY[0x1F4188790](v26);
  long long v30 = (char *)&v35 - v29;
  outlined init with copy of IDSLookupManager(v3, (uint64_t)v38);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupCombinable);
  if ((swift_dynamicCast() & 1) == 0)
  {
    OUTLINED_FUNCTION_53((uint64_t)v16);
    uint64_t v33 = (uint64_t)v16;
LABEL_7:
    outlined destroy of SystemUpdateNotice?(v33, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    *(void *)(v5 + 32) = 0;
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    goto LABEL_8;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v17);
  uint64_t v31 = OUTLINED_FUNCTION_69_0();
  outlined init with take of RecentsCallItem(v31, v32);
  outlined init with copy of IDSLookupManager(v37, (uint64_t)v38);
  if ((swift_dynamicCast() & 1) == 0)
  {
    OUTLINED_FUNCTION_53((uint64_t)v14);
    outlined destroy of RecentsCallItem((uint64_t)v30);
    uint64_t v33 = (uint64_t)v14;
    goto LABEL_7;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v17);
  outlined init with take of RecentsCallItem((uint64_t)v14, (uint64_t)v28);
  outlined init with copy of ObjectTracker.RuleGroup((uint64_t)v30, (uint64_t)v25, (void (*)(void))type metadata accessor for RecentsCallItem);
  outlined init with copy of ObjectTracker.RuleGroup((uint64_t)v28, v21, (void (*)(void))type metadata accessor for RecentsCallItem);
  v36(v25, v21);
  if (__swift_getEnumTagSinglePayload(v10, 1, v17) == 1)
  {
    outlined destroy of RecentsCallItem((uint64_t)v28);
    outlined destroy of RecentsCallItem((uint64_t)v30);
    outlined destroy of SystemUpdateNotice?(v10, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    *(void *)(v5 + 32) = 0;
  }
  else
  {
    *(void *)(v5 + 24) = v17;
    *(void *)(v5 + 32) = &protocol witness table for RecentsCallItem;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v5);
    outlined init with take of RecentsCallItem(v10, (uint64_t)boxed_opaque_existential_1);
    outlined destroy of RecentsCallItem((uint64_t)v28);
    outlined destroy of RecentsCallItem((uint64_t)v30);
  }
LABEL_8:
  OUTLINED_FUNCTION_28();
}

uint64_t specialized closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(void *a1, char a2, uint64_t *a3, void *a4, uint64_t a5)
{
  uint64_t v25 = a4;
  int v30 = a2 & 1;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v27 = v10;
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v26 = (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_61();
  char v31 = v30;
  uint64_t v14 = v28;
  OUTLINED_FUNCTION_57_8();
  v15();
  if (__swift_getEnumTagSinglePayload(v5, 1, v14) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)(*a3 + 16));
    return OUTLINED_FUNCTION_38_19();
  }
  uint64_t v17 = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v5, v14);
  uint64_t v18 = specialized Dictionary.subscript.getter(v17, *v25);
  uint64_t v19 = v17;
  if (!v18) {
    goto LABEL_9;
  }
  uint64_t v20 = *(void *)(v18 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)(*a3 + 16));
    OUTLINED_FUNCTION_38_19();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v19, v14);
  }
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v21 = v18 + 32;
  do
  {
    specialized closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v21, a1, a3, &v29, a5);
    v21 += 40;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_bridgeObjectRetain();
  specialized Dictionary._Variant.setValue(_:forKey:)(v22, v26);
  OUTLINED_FUNCTION_26_2();
  v23();
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(void *a1, char a2, uint64_t *a3, void *a4, void (*a5)(long long *__return_ptr, uint64_t, void *), uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a7;
  uint64_t v33 = a4;
  int v38 = a2 & 1;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v34 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  __n128 v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v39 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(&v39, v13, v14, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v36) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v19 = *(void *)(*a3 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
    uint64_t v20 = *a3;
    *(void *)(v20 + 16) = v19 + 1;
    return outlined init with copy of IDSLookupManager((uint64_t)a1, v20 + 40 * v19 + 32);
  }
  uint64_t v22 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v34, v18, v36);
  uint64_t v23 = specialized Dictionary.subscript.getter(v22, *v33);
  uint64_t v24 = v22;
  if (!v23) {
    goto LABEL_9;
  }
  uint64_t v25 = *(void *)(v23 + 16);
  if (!v25)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v30 = *(void *)(*a3 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
    uint64_t v31 = *a3;
    *(void *)(v31 + 16) = v30 + 1;
    outlined init with copy of IDSLookupManager((uint64_t)a1, v31 + 40 * v30 + 32);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v24, v36);
  }
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v26 = v23 + 32;
  uint64_t v27 = v32;
  do
  {
    closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v26, a5, a6, a1, a3, &v37, v27);
    v26 += 40;
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = v34;
  specialized Dictionary._Variant.setValue(_:forKey:)(v28, v34);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v29, v36);
  return swift_bridgeObjectRelease();
}

uint64_t specialized closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(uint64_t a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  closure #1 in RecentsCollectionViewCollator.linkCallItems(combining:with:)();
  if (!v34)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v33, &demangling cache variable for type metadata for GroupCombinable?);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    OUTLINED_FUNCTION_66_8();
    OUTLINED_FUNCTION_65_9();
    outlined init with copy of IDSLookupManager(a1, v30 + 40 * a5 + 32);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    OUTLINED_FUNCTION_66_8();
    OUTLINED_FUNCTION_65_9();
    return outlined init with copy of IDSLookupManager((uint64_t)a2, v31 + 40 * a5 + 32);
  }
  outlined init with take of Notice(&v33, (uint64_t)v36);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v11 = *(void *)(*a4 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
  uint64_t v12 = *a4;
  *(void *)(v12 + 16) = v11 + 1;
  outlined init with copy of IDSLookupManager((uint64_t)v36, v12 + 40 * v11 + 32);
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v13);
  char v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a5, v13, v14);
  outlined init with copy of IDSLookupManager((uint64_t)a2, (uint64_t)&v33);
  if ((v15 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v16 = *a3;
  uint64_t v17 = *(void *)(*a3 + 16);
  if (v17)
  {
    uint64_t v37 = v5;
    uint64_t v18 = (void *)(v16 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      __swift_project_boxed_opaque_existential_1(v18, v18[3]);
      uint64_t v19 = OUTLINED_FUNCTION_18_3();
      uint64_t v21 = v20(v19);
      uint64_t v23 = v22;
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      __swift_project_boxed_opaque_existential_1(&v33, v34);
      if (v21 == (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24) && v23 == v26)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        break;
      }
      v18 += 5;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_16:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  OUTLINED_FUNCTION_66_8();
  OUTLINED_FUNCTION_65_9();
  outlined init with copy of IDSLookupManager((uint64_t)a2, v29 + 40 * v17 + 32);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, void *), uint64_t a3, void *a4, uint64_t *a5, uint64_t *a6, uint64_t a7)
{
  a2(&v38, a1, a4);
  if (!v39)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v38, &demangling cache variable for type metadata for GroupCombinable?);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v33 = *(void *)(*a5 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
    uint64_t v34 = *a5;
    *(void *)(v34 + 16) = v33 + 1;
    outlined init with copy of IDSLookupManager(a1, v34 + 40 * v33 + 32);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v35 = *(void *)(*a5 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
    uint64_t v36 = *a5;
    *(void *)(v36 + 16) = v35 + 1;
    return outlined init with copy of IDSLookupManager((uint64_t)a4, v36 + 40 * v35 + 32);
  }
  outlined init with take of Notice(&v38, (uint64_t)v41);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v13 = *(void *)(*a6 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
  uint64_t v14 = *a6;
  *(void *)(v14 + 16) = v13 + 1;
  outlined init with copy of IDSLookupManager((uint64_t)v41, v14 + 40 * v13 + 32);
  uint64_t v15 = a4[3];
  uint64_t v16 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v15);
  char v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(a7, v15, v16);
  outlined init with copy of IDSLookupManager((uint64_t)a4, (uint64_t)&v38);
  if ((v17 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v18 = *a5;
  uint64_t v19 = *(void *)(*a5 + 16);
  if (v19)
  {
    uint64_t v42 = v7;
    uint64_t v20 = (void *)(v18 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v21 = v20[3];
      uint64_t v22 = v20[4];
      __swift_project_boxed_opaque_existential_1(v20, v21);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      uint64_t v25 = v24;
      uint64_t v27 = v39;
      uint64_t v26 = v40;
      __swift_project_boxed_opaque_existential_1(&v38, v39);
      if (v23 == (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26) && v25 == v28)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        break;
      }
      v20 += 5;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_16:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v31 = *(void *)(*a5 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
  uint64_t v32 = *a5;
  *(void *)(v32 + 16) = v31 + 1;
  outlined init with copy of IDSLookupManager((uint64_t)a4, v32 + 40 * v31 + 32);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)()
{
  return RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t vars8;

  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v1 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228);
  return v1();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:stateChangedFor:)()
{
  return RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:removedActiveConversation:)()
{
  return RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:didChangeActivatedLinks:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v3 + 208))();
  OUTLINED_FUNCTION_2_10();
  (*(void (**)(uint64_t))(v4 + 336))(a2);
  return swift_release();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:linkChangedFor:)()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v0 + 208))();
  OUTLINED_FUNCTION_2_10();
  (*(void (**)(void))(v1 + 344))();
  return swift_release();
}

void RecentsCollectionViewCollator.recentsLinkControllerRefreshedLinks(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_31();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  os_log(_:dso:log:type:_:)();
  if (objc_msgSend(self, sel_isMainThread))
  {
    OUTLINED_FUNCTION_28();
    v15(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v34 = static OS_dispatch_queue.main.getter();
    uint64_t v23 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    v35[4] = partial apply for closure #1 in RecentsCollectionViewCollator.recentsLinkControllerRefreshedLinks(_:);
    v35[5] = v23;
    v35[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
    _OWORD v35[2] = thunk for @escaping @callee_guaranteed () -> ();
    v35[3] = &block_descriptor_55;
    uint64_t v24 = _Block_copy(v35);
    swift_release();
    type metadata accessor for DispatchQoS();
    _OWORD v33[2] = v33;
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v25);
    OUTLINED_FUNCTION_90_0();
    static DispatchQoS.unspecified.getter();
    uint64_t v26 = type metadata accessor for DispatchWorkItemFlags();
    v33[1] = v33;
    OUTLINED_FUNCTION_4();
    uint64_t v28 = v27;
    MEMORY[0x1F4188790](v29);
    OUTLINED_FUNCTION_61();
    v35[0] = v14;
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF28]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    char v30 = (void *)v34;
    MEMORY[0x1C8773BA0](0, v12, v13, v24);
    _Block_release(v24);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v13, v26);
    uint64_t v31 = OUTLINED_FUNCTION_56_12();
    v32(v31);
    OUTLINED_FUNCTION_28();
  }
}

void closure #1 in closure #1 in RecentsCollectionViewCollator.reloadData()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  OUTLINED_FUNCTION_5_0();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x228))();
  }
}

uint64_t sub_1C34673B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C34673EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:)()
{
  return closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t outlined init with take of RecentsCallItem?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C34674A8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:)()
{
  return closure #1 in RecentsCollectionViewCollator.callItem(for:)(*(void *)(v0 + 16));
}

uint64_t sub_1C34674F8()
{
  uint64_t v1 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)()
{
  type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 + 16);
  return closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)(v1);
}

uint64_t sub_1C3467610()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:)()
{
  v1._rawValue = *(void **)(v0 + 24);
  return closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:)(*(void *)(v0 + 16), v1);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14();
  a17 = v18;
  a18 = v19;
  char v21 = v20;
  uint64_t v23 = v22;
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_1_126();
  if (v25)
  {
    __break(1u);
LABEL_11:
    type metadata accessor for UUID();
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  char v26 = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<UUID, Date>);
  if (OUTLINED_FUNCTION_23_42(v21 & 1))
  {
    specialized __RawDictionaryStorage.find<A>(_:)();
    OUTLINED_FUNCTION_7_91();
    if (!v27) {
      goto LABEL_11;
    }
  }
  if (v26)
  {
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_15_0();
    v31(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10);
  }
  else
  {
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v36);
    (*(void (**)(char *, uint64_t))(v38 + 16))((char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
    OUTLINED_FUNCTION_39_23();
    specialized _NativeDictionary._insert(at:key:value:)(v39, v40, v41, v42);
    OUTLINED_FUNCTION_15_0();
  }
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  return specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, a4, a5, &demangling cache variable for type metadata for _NativeDictionary<MultiwayViewConstraintsController.OverallLayoutState, [NSLayoutConstraint]>, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized _NativeDictionary._insert(at:key:value:));
}

{
  return specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, a4, a5, &demangling cache variable for type metadata for _NativeDictionary<MultiwayViewConstraintsController.OverallLayoutState, [()]>, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized _NativeDictionary._insert(at:key:value:));
}

id specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, void *a2)
{
  specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)a2);
  OUTLINED_FUNCTION_1_126();
  if (v6)
  {
    __break(1u);
LABEL_12:
    type metadata accessor for NSAttributedStringKey(0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v7 = v4;
  char v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<NSAttributedStringKey, Swift.AnyObject>);
  if (OUTLINED_FUNCTION_27_36())
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)a2);
    OUTLINED_FUNCTION_29_29();
    if (!v10) {
      goto LABEL_12;
    }
    unint64_t v7 = v9;
  }
  uint64_t v11 = *v2;
  if (v8)
  {
    uint64_t v12 = *(void *)(v11 + 56);
    id result = (id)swift_unknownObjectRelease();
    *(void *)(v12 + 8 * v7) = a1;
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v7, (uint64_t)a2, a1, v11);
    return a2;
  }
  return result;
}

#error "1C34679EC: call analysis failed (funcsize=75)"

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a2 & 1;
  uint64_t v13 = a4 & 0x10101FF01FFFFLL;
  specialized __RawDictionaryStorage.find<A>(_:)(a2 & 1, a3, a4 & 0x10101FF01FFFFLL);
  OUTLINED_FUNCTION_1_126();
  if (v16)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v17 = v14;
  char v18 = v15;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  if (!OUTLINED_FUNCTION_23_42(a5 & 1)) {
    goto LABEL_5;
  }
  unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(v12, a3, v13);
  if ((v18 & 1) != (v20 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v17 = v19;
LABEL_5:
  uint64_t v21 = *v7;
  if (v18)
  {
    uint64_t v22 = *(void *)(v21 + 56);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v22 + 8 * v17) = a1;
  }
  else
  {
    return a7(v17, v12, a3, v13, a1, v21);
  }
  return result;
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(_OWORD *a1)
{
  specialized __RawDictionaryStorage.find<A>(_:)();
  OUTLINED_FUNCTION_1_126();
  if (v5)
  {
    __break(1u);
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v6 = v3;
  char v7 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ContextMenuNotificationUserInfoKey, Any>);
  if (OUTLINED_FUNCTION_27_36())
  {
    specialized __RawDictionaryStorage.find<A>(_:)();
    OUTLINED_FUNCTION_29_29();
    if (!v9) {
      goto LABEL_14;
    }
    unint64_t v6 = v8;
  }
  uint64_t v10 = *v1;
  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1(*(void *)(v10 + 56) + 32 * v6);
    uint64_t v11 = (_OWORD *)OUTLINED_FUNCTION_35();
    outlined init with take of Any(v11, v12);
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v6, a1, v10);
  }
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_6_98(v4, v5, v6);
  OUTLINED_FUNCTION_1_126();
  if (v9)
  {
    __break(1u);
LABEL_14:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = v7;
  char v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
  if (OUTLINED_FUNCTION_12_57())
  {
    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_7_91();
    if (!v13) {
      goto LABEL_14;
    }
    unint64_t v10 = v12;
  }
  uint64_t v14 = *v3;
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1(*(void *)(v14 + 56) + 32 * v10);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_15_0();
    return outlined init with take of Any(v15, v16);
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v10, v2, v1, v0, v14);
    OUTLINED_FUNCTION_15_0();
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = OUTLINED_FUNCTION_13_64(a1, a2);
  specialized __RawDictionaryStorage.find<A>(_:)(v7);
  OUTLINED_FUNCTION_1_126();
  if (v8)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<AnyHashable, Any>);
  if (OUTLINED_FUNCTION_8_69())
  {
    uint64_t v9 = OUTLINED_FUNCTION_54_12();
    specialized __RawDictionaryStorage.find<A>(_:)(v9);
    OUTLINED_FUNCTION_7_91();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v5 = v10;
  }
  uint64_t v12 = *v4;
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1(*(void *)(v12 + 56) + 32 * v5);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_55_13();
    outlined init with take of Any(v13, v14);
  }
  else
  {
    outlined init with copy of AnyHashable(v3, (uint64_t)v16);
    specialized _NativeDictionary._insert(at:key:value:)(v5, (uint64_t)v16, v2, v12);
    OUTLINED_FUNCTION_55_13();
  }
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, (uint64_t)&demangling cache variable for type metadata for _NativeDictionary<UUID, Set<String>>, (uint64_t)specialized _NativeDictionary._insert(at:key:value:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

{
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, (uint64_t)&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>, (uint64_t)specialized _NativeDictionary._insert(at:key:value:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t, uint64_t);
  void (*v25)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t *v26;
  uint64_t *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  OUTLINED_FUNCTION_31();
  a19 = v22;
  a20 = v23;
  char v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_1_126();
  if (v34)
  {
    __break(1u);
LABEL_11:
    type metadata accessor for UUID();
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v35 = v32;
  uint64_t v36 = v33;
  __swift_instantiateConcreteTypeFromMangledName(v27);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v29 & 1, (Swift::Int)v21))
  {
    specialized __RawDictionaryStorage.find<A>(_:)();
    OUTLINED_FUNCTION_18_49();
    if (!v38) {
      goto LABEL_11;
    }
    uint64_t v35 = v37;
  }
  unint64_t v39 = *v21;
  if (v36)
  {
    uint64_t v40 = *(void *)(v39 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v40 + 8 * v35) = v20;
  }
  else
  {
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v41);
    id v43 = (char *)&a9 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t))(v44 + 16))(v43, v31);
    v25(v35, v43, v20, v39);
  }
  OUTLINED_FUNCTION_28();
}

unint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, double a2, double a3)
{
  specialized __RawDictionaryStorage.find<A>(_:)(a1);
  OUTLINED_FUNCTION_1_126();
  if (v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v10 = v7;
  char v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<LayoutPosition, CGSize>);
  unint64_t result = OUTLINED_FUNCTION_27_36();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_11:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
LABEL_5:
  uint64_t v14 = *v3;
  if (v11)
  {
    uint64_t v15 = (double *)(*(void *)(v14 + 56) + 16 * v10);
    double *v15 = a2;
    v15[1] = a3;
  }
  else
  {
    return specialized _NativeDictionary._insert(at:key:value:)(v10, a1, v14);
  }
  return result;
}

#error "1C3468998: call analysis failed (funcsize=66)"

unint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(Swift::UInt a1, double a2, double a3, double a4, double a5)
{
  specialized __RawDictionaryStorage.find<A>(_:)(a1);
  OUTLINED_FUNCTION_1_126();
  if (v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<InCallControlsState, CGRect>);
  unint64_t result = OUTLINED_FUNCTION_27_36();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
LABEL_5:
  uint64_t v18 = *v5;
  if (v15)
  {
    uint64_t v19 = (double *)(*(void *)(v18 + 56) + 32 * v14);
    double *v19 = a2;
    v19[1] = a3;
    v19[2] = a4;
    void v19[3] = a5;
  }
  else
  {
    return specialized _NativeDictionary._insert(at:key:value:)(v14, a1, v18);
  }
  return result;
}

void partial apply for closure #1 in RecentsCollectionViewCollator.recentsLinkControllerRefreshedLinks(_:)()
{
  closure #1 in closure #1 in RecentsCollectionViewCollator.reloadData()(v0);
}

unint64_t lazy protocol witness table accessor for type CombiningType and conformance CombiningType()
{
  unint64_t result = lazy protocol witness table cache variable for type CombiningType and conformance CombiningType;
  if (!lazy protocol witness table cache variable for type CombiningType and conformance CombiningType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CombiningType and conformance CombiningType);
  }
  return result;
}

uint64_t dispatch thunk of RecentsControllable.didChangeNotificationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecentsControllable.recentCallItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RecentsControllable.recentCallsCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RecentsControllable.recentFaceTimeCallsCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecentsControllable.prePopulateContactsCache()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RecentsControllable.isLoadingOlderCalls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RecentsControllable.finishedLoadingOlderCalls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t ObjC metadata update function for RecentsCollectionViewCollator()
{
  return type metadata accessor for RecentsCollectionViewCollator();
}

uint64_t method lookup function for RecentsCollectionViewCollator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecentsCollectionViewCollator);
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.linkController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.linkController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.linkController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.messageInboxController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.messageInboxController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.messageInboxController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.hasFinishedFirstLoad.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.$hasFinishedFirstLoad.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.__allocating_init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.callItem(for:identifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.callItem(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.isActive.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.resume()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.suspend()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.reloadData()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.deleteCallItems(_:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of GroupCombinable.dataSourceId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of GroupCombinable.combiningUUID(forType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of GroupCombinable.includeOriginalIfCombined(after:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unsigned char *storeEnumTagSinglePayload for CombiningType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3469384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CombiningType()
{
  return &type metadata for CombiningType;
}

uint64_t sub_1C346940C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C3469454()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsCollectionViewCollator.doReloadData(completion:)(uint64_t a1)
{
  closure #1 in RecentsCollectionViewCollator.doReloadData(completion:)(a1, *(void **)(v1 + 16));
}

void partial apply for closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()(uint64_t a1)
{
  closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()(a1, v1);
}

uint64_t outlined assign with take of RecentsCallItem?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined assign with take of ScreenSharingStateMonitor.Observation(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_76_7()
{
  return swift_arrayInitWithCopy();
}

BOOL OUTLINED_FUNCTION_81_10()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

BOOL OUTLINED_FUNCTION_82_7()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

id TULinkShareItem.linkMetadata.getter()
{
  id v1 = objc_msgSend(v0, sel_tuConversationLink);
  id v2 = objc_msgSend(v1, sel_URL);

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v5, v7, 1, v6);
  uint64_t v8 = outlined bridged method (pb) of @objc SWCollaborationHighlight.title.getter(v0);
  id v10 = TULinkShareItem.linkMetadata(forURL:withTitle:)((uint64_t)v5, v8, v9);
  swift_bridgeObjectRelease();
  outlined destroy of URL?((uint64_t)v5);
  return v10;
}

void TULinkShareItem.activityViewControllerPlaceholderItem(_:)(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_placeholder);
  a1[3] = type metadata accessor for URL();
  __swift_allocate_boxed_opaque_existential_1(a1);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

id @objc TULinkShareItem.activityViewControllerPlaceholderItem(_:)(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  TULinkShareItem.activityViewControllerPlaceholderItem(_:)(v8);

  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  uint64_t v6 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t TULinkShareItem.activityViewController(_:itemForActivityType:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  id v5 = objc_msgSend(v1, sel_tuConversationLink, MEMORY[0x1F4188790](v3 - 8).n128_f64[0]);
  id v6 = objc_msgSend(v5, sel_URL);

  MEMORY[0x1F4188790](v7);
  if (v6)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = (char *)&v13 - v4;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = (char *)&v13 - v4;
    uint64_t v10 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v10, 1, v8);
  outlined init with take of URL?((uint64_t)&v13 - v4, (uint64_t)&v13 - v4);
  type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)&v13 - v4, 1, v8) == 1)
  {
    uint64_t result = outlined destroy of URL?((uint64_t)&v13 - v4);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    *(void *)(a1 + 24) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(boxed_opaque_existential_1, (char *)&v13 - v4, v8);
  }
  return result;
}

id @objc TULinkShareItem.activityViewController(_:itemForActivityType:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  TULinkShareItem.activityViewController(_:itemForActivityType:)((uint64_t)v17);

  uint64_t v9 = v18;
  if (v18)
  {
    uint64_t v10 = __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = MEMORY[0x1F4188790](v10);
    unint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    char v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    char v15 = 0;
  }
  return v15;
}

Swift::String __swiftcall TULinkShareItem.activityViewController(_:subjectForActivityType:)(UIActivityViewController *_, UIActivityType_optional subjectForActivityType)
{
  uint64_t v3 = outlined bridged method (ob) of @objc TUConversationLink.linkName.getter(objc_msgSend(v2, sel_tuConversationLink));
  if (!v4)
  {
    uint64_t v3 = 0;
    unint64_t v4 = (void *)0xE000000000000000;
  }
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

id @objc TULinkShareItem.activityViewController(_:subjectForActivityType:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  Swift::String v10 = TULinkShareItem.activityViewController(_:subjectForActivityType:)(v8, v9);

  uint64_t v11 = (void *)MEMORY[0x1C87730B0](v10._countAndFlagsBits, v10._object);
  swift_bridgeObjectRelease();
  return v11;
}

id @objc TULinkShareItem.activityViewControllerLinkMetadata(_:)(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = (void *)TULinkShareItem.activityViewControllerLinkMetadata(_:)(v5);

  return v6;
}

id TULinkShareItem.linkMetadata(forURL:withTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30A78]), sel_init);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  outlined init with copy of URL?(a1, (uint64_t)&v20 - v9);
  uint64_t v10 = type metadata accessor for URL();
  __n128 v12 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)&v20 - v9, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    __n128 v12 = v13;
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))((char *)&v20 - v9, v10);
  }
  objc_msgSend(v6, sel_setOriginalURL_, v12);

  MEMORY[0x1F4188790](v14);
  outlined init with copy of URL?(a1, (uint64_t)&v20 - v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)&v20 - v9, 1, v10) == 1)
  {
    char v16 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v15);
    char v16 = v17;
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))((char *)&v20 - v9, v10);
  }
  objc_msgSend(v6, sel_setURL_, v16);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30A20]), sel_init);
  if (a3) {
    outlined bridged method (mbgnn) of @objc LPFaceTimeInviteMetadata.title.setter(a2, a3, v18);
  }
  objc_msgSend(v6, sel_setSpecialization_, v18);

  return v6;
}

uint64_t TULinkShareItem.dataRepresentation.getter()
{
  id v0 = TULinkShareItem.linkMetadata.getter();
  id v1 = objc_msgSend(v0, sel_dataRepresentation);

  uint64_t v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  return v2;
}

void outlined bridged method (mbgnn) of @objc LPFaceTimeInviteMetadata.title.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  objc_msgSend(a3, sel_setTitle_, v4);
}

uint64_t outlined init with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined bridged method (ob) of @objc TUConversationLink.linkName.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_linkName);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t View.screenSharingTouchShield(isActive:isCapturingTouch:)(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = 0;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<(), Error>?);
  State.init(wrappedValue:)();
  uint64_t v12 = v15;
  uint64_t v13 = v16;
  LOBYTE(v15) = a1;
  long long v16 = xmmword_1C37826C0;
  uint64_t v17 = v12;
  uint64_t v18 = v13;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  char v21 = a4;
  MEMORY[0x1C87723E0](&v15, a5, &type metadata for ScreenSharingTouchShield, a6);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ScreenSharingTouchShield.isActive.getter()
{
  return *v0;
}

uint64_t ScreenSharingTouchShield.isCapturingTouch.getter()
{
  OUTLINED_FUNCTION_4_9();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C87728E0](&v2, v0);
  return v2;
}

uint64_t ScreenSharingTouchShield.isCapturingTouch.setter()
{
  return Binding.wrappedValue.setter();
}

void (*ScreenSharingTouchShield.isCapturingTouch.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  v3[4] = v4;
  v3[5] = v5;
  char v6 = *(unsigned char *)(v1 + 56);
  *((unsigned char *)v3 + 19) = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  outlined retain of AnyLocation<String>?((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C87728E0]();
  return ClarityUIDialerView.isPresented.modify;
}

uint64_t ScreenSharingTouchShield.$isCapturingTouch.getter()
{
  OUTLINED_FUNCTION_4_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ScreenSharingTouchShield.gesture.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocalCoordinateSpace();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = type metadata accessor for DragGesture();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v11 = (_OWORD *)swift_allocObject();
  long long v12 = v1[1];
  v11[1] = *v1;
  v11[2] = v12;
  v11[3] = v1[2];
  *(_OWORD *)((char *)v11 + 57) = *(_OWORD *)((char *)v1 + 41);
  outlined retain of ScreenSharingTouchShield((uint64_t)v1);
  lazy protocol witness table accessor for type DragGesture and conformance DragGesture(&lazy protocol witness table cache variable for type DragGesture and conformance DragGesture, MEMORY[0x1E4F3C640]);
  lazy protocol witness table accessor for type DragGesture and conformance DragGesture(&lazy protocol witness table cache variable for type DragGesture.Value and conformance DragGesture.Value, MEMORY[0x1E4F3C628]);
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v13 = (_OWORD *)swift_allocObject();
  long long v14 = v1[1];
  v13[1] = *v1;
  v13[2] = v14;
  v13[3] = v1[2];
  *(_OWORD *)((char *)v13 + 57) = *(_OWORD *)((char *)v1 + 41);
  outlined retain of ScreenSharingTouchShield((uint64_t)v1);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ChangedGesture<DragGesture> and conformance _ChangedGesture<A>, &demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  Gesture.onEnded(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void *closure #1 in ScreenSharingTouchShield.gesture.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Error>?>);
  State.wrappedValue.getter();
  if (v2)
  {
    uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C8773690](v2, MEMORY[0x1E4FBC848] + 8, v0, MEMORY[0x1E4FBC0F0]);
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Swift::String result = MEMORY[0x1C87728E0](&v2);
  if ((v2 & 1) == 0)
  {
    LOBYTE(v2) = 1;
    return (void *)Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  type metadata accessor for MainActor();
  outlined retain of ScreenSharingTouchShield((uint64_t)a2);
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBCFD8];
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v9;
  long long v10 = a2[1];
  *(_OWORD *)(v8 + 32) = *a2;
  *(_OWORD *)(v8 + 48) = v10;
  *(_OWORD *)(v8 + 64) = a2[2];
  *(_OWORD *)(v8 + 73) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v11 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v5, (uint64_t)&async function pointer to partial apply for closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter, v8);
  long long v14 = *(_OWORD *)((char *)a2 + 24);
  v13[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Error>?>);
  return State.wrappedValue.setter();
}

uint64_t closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v7;
  v4[11] = v6;
  return MEMORY[0x1F4188298](closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter, v7, v6);
}

uint64_t closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&async function pointer to specialized Clock.sleep(for:tolerance:)
                             + async function pointer to specialized Clock.sleep(for:tolerance:));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter;
  return v3();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v10;

  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 48);
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v8 = closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter;
  }
  else {
    uint64_t v8 = closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter;
  }
  return MEMORY[0x1F4188298](v8, v7, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  long long v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v2 = *(_OWORD *)(v1 + 40);
  *(unsigned char *)(v0 + 32) = *(unsigned char *)(v1 + 56);
  *(_OWORD *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + 33) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.wrappedValue.setter();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ScreenSharingTouchShield.body(content:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = type metadata accessor for SensoryFeedback();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_21();
  uint64_t v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sensoryFeedback<A>(_:trigger:condition:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v30 = v14;
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_21();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = static Alignment.center.getter();
  uint64_t v21 = v20;
  uint64_t v22 = v13 + *(int *)(v10 + 36);
  closure #1 in ScreenSharingTouchShield.body(content:)((unsigned char *)v2, v22);
  uint64_t v23 = (uint64_t *)(v22
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>)
                           + 36));
  *uint64_t v23 = v19;
  v23[1] = v21;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingTouchShield>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v13, a1, v24);
  static SensoryFeedback.error.getter();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C87728E0](&v32, v25);
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>();
  View.sensoryFeedback<A>(_:trigger:condition:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v29);
  outlined destroy of ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>(v13);
  LOBYTE(v32) = *(unsigned char *)v2;
  char v26 = (_OWORD *)swift_allocObject();
  long long v27 = *(_OWORD *)(v2 + 16);
  v26[1] = *(_OWORD *)v2;
  v26[2] = v27;
  v26[3] = *(_OWORD *)(v2 + 32);
  *(_OWORD *)((char *)v26 + 57) = *(_OWORD *)(v2 + 41);
  outlined retain of ScreenSharingTouchShield(v2);
  swift_getOpaqueTypeConformance2();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v18, v30);
}

uint64_t closure #1 in ScreenSharingTouchShield.body(content:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.gesture<A>(_:including:)>>.0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    uint64_t v14 = static Color.clear.getter();
    char v15 = 0;
    ScreenSharingTouchShield.gesture.getter();
    v13[3] = static GestureMask.all.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _ContentShapeModifier<Rectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EndedGesture<_ChangedGesture<DragGesture>> and conformance _EndedGesture<A>, &demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
    View.gesture<A>(_:including:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v8);
  }
  else
  {
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v8);
  }
}

uint64_t closure #2 in ScreenSharingTouchShield.body(content:)(uint64_t a1, unsigned __int8 *a2)
{
  return *a2;
}

unsigned char *closure #3 in ScreenSharingTouchShield.body(content:)(unsigned char *result)
{
  if ((*result & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Error>?>);
    State.wrappedValue.getter();
    if (v2)
    {
      uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      MEMORY[0x1C8773690](v2, MEMORY[0x1E4FBC848] + 8, v1, MEMORY[0x1E4FBC0F0]);
      swift_release();
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
    return (unsigned char *)Binding.wrappedValue.setter();
  }
  return result;
}

__n128 ScreenSharingTouchShield.init(isActive:isCapturingTouch:)@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<(), Error>?);
  State.init(wrappedValue:)();
  __n128 result = v11;
  *(unsigned char *)a5 = a1;
  *(_OWORD *)(a5 + 8) = xmmword_1C37826C0;
  *(__n128 *)(a5 + 24) = v11;
  *(void *)(a5 + 40) = a2;
  *(void *)(a5 + 48) = a3;
  *(unsigned char *)(a5 + 56) = a4;
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ScreenSharingTouchShield> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingTouchShield>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined destroy of ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *partial apply for closure #3 in ScreenSharingTouchShield.body(content:)()
{
  return closure #3 in ScreenSharingTouchShield.body(content:)((unsigned char *)(v0 + 16));
}

uint64_t outlined retain of ScreenSharingTouchShield(uint64_t a1)
{
  return a1;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ScreenSharingTouchShield()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance ScreenSharingTouchShield(uint64_t a1)
{
  return ScreenSharingTouchShield.body(content:)(a1);
}

uint64_t sub_1C346B584@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ScreenSharingTouchShield.isCapturingTouch.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C346B5B4()
{
  return ScreenSharingTouchShield.isCapturingTouch.setter();
}

uint64_t destroy for ScreenSharingTouchShield()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ScreenSharingTouchShield(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScreenSharingTouchShield(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for ScreenSharingTouchShield(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingTouchShield(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingTouchShield(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingTouchShield()
{
  return &type metadata for ScreenSharingTouchShield;
}

uint64_t sub_1C346B858()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.sensoryFeedback<A>(_:trigger:condition:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C346B908()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Color, _ContentShapeModifier<Rectangle>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ContentShapeModifier<Rectangle> and conformance _ContentShapeModifier<A>, &demangling cache variable for type metadata for _ContentShapeModifier<Rectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *partial apply for closure #1 in ScreenSharingTouchShield.gesture.getter()
{
  return closure #1 in ScreenSharingTouchShield.gesture.getter();
}

uint64_t lazy protocol witness table accessor for type DragGesture and conformance DragGesture(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_13()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1)
{
  return closure #2 in ScreenSharingTouchShield.gesture.getter(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_1C346BABC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter(a1, v4, v5, v1 + 32);
}

void *static CallParticipantLabelDescriptor.labelDescriptor(for:callCount:alertAvailable:allowsDuration:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (!v8) {
    return 0;
  }
  uint64_t v9 = (void *)v8;
  swift_unknownObjectRetain();
  uint64_t v10 = static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:alertAvailable:allowsDuration:)(v9, a3, a4 & 1, a5 & 1);
  swift_unknownObjectRelease();
  return v10;
}

id thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?)(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = v3();
  uint64_t v7 = v6;
  swift_release();

  if (v7)
  {
    uint64_t v8 = (void *)MEMORY[0x1C87730B0](v5, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  return v8;
}

uint64_t thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)(uint64_t a1, uint64_t a2)
{
  id v2 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t key path getter for CNKCallParticipantLabelDescriptorFactory.organizationNameProvider : CNKCallParticipantLabelDescriptorFactory@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_organizationNameProvider);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)partial apply;
  *(void *)(result + 24) = v4;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?);
  a2[1] = result;
  return result;
}

void key path setter for CNKCallParticipantLabelDescriptorFactory.organizationNameProvider : CNKCallParticipantLabelDescriptorFactory(uint64_t *a1, void **a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *a2;
  uint64_t v8[4] = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?);
  v8[5] = v5;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?);
  v8[3] = &block_descriptor_26_1;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_setOrganizationNameProvider_, v7);
  _Block_release(v7);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?)(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v4 = a1;
  a2(&v3, &v4);
  return v3;
}

id CNKCallParticipantLabelDescriptorFactory.makeLabel()()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
  return OUTLINED_FUNCTION_33_26();
}

uint64_t CallParticipantLabelDescriptor.__allocating_init(string:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C3769620;
    *(void *)(v5 + 32) = a1;
    *(void *)(v5 + 40) = a2;
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, void))(v2 + 272);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, void))(v2 + 272);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v7 = a1;
    uint64_t v8 = a1;
  }
  return v6(v5, v7, 0, v8, 0, 0);
}

uint64_t CNKCallParticipantLabelDescriptorFactory.makeLabel(using:)(uint64_t a1, uint64_t a2)
{
  return CallParticipantLabelDescriptor.__allocating_init(string:)(a1, a2);
}

id CNKCallParticipantLabelDescriptorFactory.makeLabel(using:secondaryString:layoutState:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  if (a2)
  {
    swift_bridgeObjectRetain_n();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v6 = v5;
    unint64_t v7 = *(void *)(v5 + 16);
    if (v7 >= *(void *)(v5 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v6 = v10;
    }
    *(void *)(v6 + 16) = v7 + 1;
    uint64_t v8 = v6 + 16 * v7;
    *(void *)(v8 + 32) = a1;
    *(void *)(v8 + 40) = a2;
  }
  swift_release();
  objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
  swift_bridgeObjectRetain();
  return CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
}

id CallParticipantLabelDescriptor.__allocating_init(strings:secondaryString:durationString:layoutState:)()
{
  OUTLINED_FUNCTION_39_24();
  id v1 = objc_allocWithZone(v0);
  return CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
}

void *CNKCallParticipantLabelDescriptorFactory.labelDescriptor(call:callCount:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, char a3, unsigned int a4)
{
  return static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:alertAvailable:allowsDuration:)(a1, a2, a3, a4);
}

void *static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, char a3, unsigned int a4)
{
  id v8 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v9 = static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(a1, a2, v8, a3, a4);

  return v9;
}

void *CNKCallParticipantLabelDescriptorFactory.labelDescriptor(call:callCount:callCenter:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, void *a3, char a4, unsigned int a5)
{
  return static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(a1, a2, a3, a4, a5);
}

void *static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, void *a3, char a4, unsigned int a5)
{
  uint64_t v6 = v5;
  v280 = (char **)MEMORY[0x1E4FBC860];
  unsigned __int8 v279 = 0;
  id v12 = objc_msgSend(a1, sel_provider);
  uint64_t v13 = 0;
  if ((objc_msgSend(v12, sel_isTelephonyProvider) & 1) == 0) {
    uint64_t v13 = TUCall.cnk_isAudio.getter() & (a2 == 1);
  }
  id v14 = objc_msgSend(a1, sel_status);
  if (TUCallScreeningEnabled() && objc_msgSend(a1, sel_isScreening))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
    *(void *)(v15 + 32) = OUTLINED_FUNCTION_22_39();
    *(void *)(v15 + 40) = v16;
    id v17 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
    id v18 = CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();

    return v18;
  }
  uint64_t v277 = v6;
  if (objc_msgSend(a1, sel_canDisplayAlertUI_, a4 & 1))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v20 = static OS_os_log.conversationKit;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_11_58();
LABEL_14:
    String.localizedAlerts.getter();
    OUTLINED_FUNCTION_36_9();
    OUTLINED_FUNCTION_26_37();
    uint64_t v22 = v21;
    unint64_t v23 = *(void *)(v21 + 16);
    if (v23 >= *(void *)(v21 + 24) >> 1)
    {
      OUTLINED_FUNCTION_26_37();
      uint64_t v22 = v255;
    }
    *(void *)(v22 + 16) = v23 + 1;
    uint64_t v24 = v22 + 16 * v23;
    *(void *)(v24 + 32) = v20;
    *(void *)(v24 + 40) = v14;
    v280 = (char **)v22;
    id v25 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
    char v26 = OUTLINED_FUNCTION_33_26();
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v26) + 0xE8))(0);
    goto LABEL_269;
  }
  if (objc_msgSend(a1, sel_canDisplayRedirectingUI))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v20 = static OS_os_log.conversationKit;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_31_30();
    OUTLINED_FUNCTION_47();
    goto LABEL_14;
  }
  unsigned int v271 = a5;
  id v275 = v12;
  v276 = a1;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v274 = static OS_os_log.conversationKit;
  uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C376BA00;
  LODWORD(v278[0]) = v14;
  type metadata accessor for TUCallStatus(0);
  uint64_t v28 = String.init<A>(reflecting:)();
  uint64_t v30 = v29;
  uint64_t v31 = (void *)MEMORY[0x1E4FBB1A0];
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v32 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v27 + 64) = v32;
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v30;
  uint64_t v33 = v276;
  objc_msgSend(v276, sel_isEmergency);
  uint64_t v34 = OUTLINED_FUNCTION_50_14();
  *(void *)(v27 + 96) = v31;
  *(void *)(v27 + 104) = v32;
  *(void *)(v27 + 72) = v34;
  *(void *)(v27 + 80) = v35;
  objc_msgSend(v33, sel_isFailureExpected);
  uint64_t v36 = OUTLINED_FUNCTION_50_14();
  *(void *)(v27 + 136) = v31;
  *(void *)(v27 + 144) = v32;
  *(void *)(v27 + 112) = v36;
  *(void *)(v27 + 120) = v37;
  uint64_t v38 = OUTLINED_FUNCTION_50_14();
  *(void *)(v27 + 176) = v31;
  *(void *)(v27 + 184) = v32;
  *(void *)(v27 + 152) = v38;
  *(void *)(v27 + 160) = v39;
  LOBYTE(v278[0]) = objc_msgSend(v33, sel_hasBeenRedirected);
  uint64_t v40 = OUTLINED_FUNCTION_50_14();
  *(void *)(v27 + 216) = v31;
  *(void *)(v27 + 224) = v32;
  v273 = (char *)v32;
  *(void *)(v27 + 192) = v40;
  *(void *)(v27 + 200) = v41;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v42 = swift_bridgeObjectRelease();
  int v43 = v14 - 1;
  id v44 = &selRef_trailingBarAlpha;
  id v45 = &selRef_trailingBarAlpha;
  id v46 = (char *)&selRef_trailingBarAlpha;
  uint64_t v47 = (uint64_t)&selRef_trailingBarAlpha;
  switch(v43)
  {
    case 0:
      id v48 = &selRef_setEffectsPickerDrawer_;
      if (v13)
      {
        if ((OUTLINED_FUNCTION_34_24(v42, sel_isOutgoing) & 1) != 0
          || (objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_isConnected) & 1) != 0)
        {
          id v12 = v275;
          if (objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_wantsHoldMusic))
          {
LABEL_24:
            specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v48, &v279);
LABEL_105:
            OUTLINED_FUNCTION_13_65();
LABEL_106:
            OUTLINED_FUNCTION_14_60();
            goto LABEL_194;
          }
          if (objc_msgSend(v275, sel_isFaceTimeProvider))
          {
            OUTLINED_FUNCTION_2_112();
            if (v271)
            {
              id v44 = v77;
              uint64_t v78 = OUTLINED_FUNCTION_1_127();
              specialized static Array._adoptStorage(_:count:)(v78, 1);
              OUTLINED_FUNCTION_46_6();
              uint64_t v79 = (char *)specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v276, &v279);
              selRef_loadViewIfNeeded = (char *)MEMORY[0x1E4FBB1A0];
              selRef_setControlsState_animated_ = v273;
              selRef_setEffectsPickerDrawer_ = v79;
              selRef_initWithDelegate_contentPresenter_ = v80;
              id v48 = (char **)v276;
              TPNumberPadCharacter.rawValue.getter(&selRef_trailingBarAlpha);
              id v46 = (char *)String.init(format:_:)();
              id v45 = v81;
              swift_bridgeObjectRelease();
            }
            else
            {
              OUTLINED_FUNCTION_13_65();
            }
            id v173 = OUTLINED_FUNCTION_27_37();
            if (!v173) {
              goto LABEL_106;
            }
            outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v173, (SEL *)&selRef_callDirectoryLabel);
            if (!v174) {
              goto LABEL_193;
            }
            goto LABEL_212;
          }
          if (!objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_isThirdPartyVideo))
          {
            if (v271)
            {
              id v45 = (char **)OUTLINED_FUNCTION_2_112();
              uint64_t v175 = OUTLINED_FUNCTION_20_46();
              specialized static Array._adoptStorage(_:count:)(v175, 2);
              OUTLINED_FUNCTION_28_33();
              id v176 = objc_msgSend(v275, sel_localizedName);
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              OUTLINED_FUNCTION_35_18();
              char v177 = (char *)MEMORY[0x1E4FBB1A0];
              selRef_configurationWithFont_scale_ = (char *)MEMORY[0x1E4FBB1A0];
              selRef_effectForBlurEffect_style_ = v273;
              selRef_trailingBarAlpha = (char *)v275;
              selRef_telephonyUISubheadlineShortEmphasizedFont = (char *)&selRef_trailingBarAlpha;
              id v48 = (char **)v276;
              v178 = (char *)specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v276, &v279);
              selRef_setTrailingBarAlpha_ = v177;
              selRef_supportsConversations = v273;
              selRef_configurationWithFont_ = v178;
              selRef_telephonyUISubheadlineShortSemiboldFont = v179;
              TPNumberPadCharacter.rawValue.getter(v271);
              String.init(format:_:)();
              OUTLINED_FUNCTION_13_65();
            }
            else
            {
              OUTLINED_FUNCTION_2_112();
              uint64_t v207 = OUTLINED_FUNCTION_1_127();
              specialized static Array._adoptStorage(_:count:)(v207, 1);
              OUTLINED_FUNCTION_47_6();
              id v208 = objc_msgSend(v275, sel_localizedName);
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              OUTLINED_FUNCTION_35_18();
              selRef_configurationWithFont_scale_ = (char *)MEMORY[0x1E4FBB1A0];
              selRef_effectForBlurEffect_style_ = v273;
              selRef_trailingBarAlpha = (char *)v275;
              selRef_telephonyUISubheadlineShortEmphasizedFont = (char *)&selRef_trailingBarAlpha;
              TPNumberPadCharacter.rawValue.getter(&selRef_trailingBarAlpha);
              String.init(format:_:)();
              OUTLINED_FUNCTION_13_65();
              id v48 = (char **)v276;
            }
            swift_bridgeObjectRelease();
            id v209 = OUTLINED_FUNCTION_27_37();
            id v12 = v275;
            if (!v209) {
              goto LABEL_106;
            }
            outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v209, (SEL *)&selRef_callDirectoryLabel);
            if (!v210) {
              goto LABEL_193;
            }
LABEL_212:
            id v211 = OUTLINED_FUNCTION_21_44();
            if (v211)
            {
              uint64_t v212 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v211, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
              uint64_t v214 = v213;
              if (v213)
              {
                uint64_t v215 = v212;
                OUTLINED_FUNCTION_2_112();
                uint64_t v216 = OUTLINED_FUNCTION_20_46();
                uint64_t v217 = specialized static Array._adoptStorage(_:count:)(v216, 2);
                uint64_t v218 = MEMORY[0x1E4FBB1A0];
                v219 = v273;
                v220[3] = MEMORY[0x1E4FBB1A0];
                v220[4] = (uint64_t)v219;
                uint64_t *v220 = v215;
                v220[1] = v214;
                v220[8] = v218;
                v220[9] = (uint64_t)v219;
                v220[5] = (uint64_t)v48;
                v220[6] = (uint64_t)v44;
                TPNumberPadCharacter.rawValue.getter(v217);
                String.init(format:_:)();
                id v12 = v275;
                swift_bridgeObjectRelease();
                goto LABEL_193;
              }
            }
LABEL_192:
            swift_bridgeObjectRelease();
LABEL_193:
            id v48 = (char **)v276;
LABEL_194:
            if (objc_msgSend(v48, sel_isConnected) && objc_msgSend(v48, sel_wantsHoldMusic))
            {
              OUTLINED_FUNCTION_16_47();
              uint64_t v194 = OUTLINED_FUNCTION_1_127();
              *(_OWORD *)(v194 + 16) = xmmword_1C3769620;
              char v195 = v273;
              *(void *)(v194 + 56) = MEMORY[0x1E4FBB1A0];
              *(void *)(v194 + 64) = v195;
              *(void *)(v194 + 32) = v46;
              *(void *)(v194 + 40) = v45;
              uint64_t v196 = String.init(format:_:)();
              id v45 = v197;
              swift_bridgeObjectRelease();
              uint64_t v198 = v280;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_26_37();
                uint64_t v198 = v268;
              }
              char v199 = v271;
              unint64_t v200 = (unint64_t)v198[2];
              if (v200 >= (unint64_t)v198[3] >> 1)
              {
                OUTLINED_FUNCTION_26_37();
                uint64_t v198 = v269;
              }
              v198[2] = (char *)(v200 + 1);
              char v201 = &v198[2 * v200];
              v201[4] = (char *)v196;
              uint64_t v202 = v201 + 4;
              id v48 = (char **)v276;
            }
            else
            {
              uint64_t v198 = v280;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_26_37();
                uint64_t v198 = v263;
              }
              unint64_t v203 = (unint64_t)v198[2];
              if (v203 >= (unint64_t)v198[3] >> 1)
              {
                OUTLINED_FUNCTION_26_37();
                uint64_t v198 = v264;
              }
              v198[2] = (char *)(v203 + 1);
              v204 = &v198[2 * v203];
              v204[4] = v46;
              uint64_t v202 = v204 + 4;
              char v199 = v271;
            }
            v202[1] = (char *)v45;
            v280 = v198;
            if (v199)
            {
              outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v48, (SEL *)&selRef_callDurationString);
              uint64_t v206 = v205;
              swift_bridgeObjectRelease();
              if (v206)
              {
                OUTLINED_FUNCTION_11_0();
                unsigned __int8 v279 = 1;
              }
            }
            goto LABEL_268;
          }
          if (v271)
          {
            OUTLINED_FUNCTION_2_112();
            OUTLINED_FUNCTION_47_6();
            uint64_t v122 = OUTLINED_FUNCTION_20_46();
            uint64_t v123 = specialized static Array._adoptStorage(_:count:)(v122, 2);
            uint64_t v125 = v124;
            id v126 = objc_msgSend(v275, sel_localizedName);
            uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v129 = v128;

            uint64_t v130 = MEMORY[0x1E4FBB1A0];
            uint64_t v131 = v273;
            v125[3] = MEMORY[0x1E4FBB1A0];
            v125[4] = (uint64_t)v131;
            *uint64_t v125 = v127;
            v125[1] = v129;
            id v12 = v275;
            Swift::Int v132 = (char **)v276;
            uint64_t v133 = specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v276, &v279);
            v125[8] = v130;
            v125[9] = (uint64_t)v131;
            v125[5] = v133;
            v125[6] = v134;
            id v48 = v132;
            TPNumberPadCharacter.rawValue.getter(v123);
            id v46 = (char *)String.init(format:_:)();
            id v45 = v135;
            swift_bridgeObjectRelease();
            goto LABEL_106;
          }
        }
        else
        {
          id v12 = v275;
          if (objc_msgSend(v275, sel_isFaceTimeProvider))
          {
            OUTLINED_FUNCTION_2_112();
            goto LABEL_105;
          }
          objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_isThirdPartyVideo);
        }
        OUTLINED_FUNCTION_2_112();
        uint64_t v190 = OUTLINED_FUNCTION_1_127();
        specialized static Array._adoptStorage(_:count:)(v190, 1);
        OUTLINED_FUNCTION_46_6();
        id v191 = objc_msgSend(v12, sel_localizedName);
        id v46 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        char v193 = v192;

        id v12 = v275;
        selRef_loadViewIfNeeded = (char *)MEMORY[0x1E4FBB1A0];
        selRef_setControlsState_animated_ = v273;
        selRef_setEffectsPickerDrawer_ = v46;
        selRef_initWithDelegate_contentPresenter_ = v193;
        TPNumberPadCharacter.rawValue.getter(&selRef_trailingBarAlpha);
        String.init(format:_:)();
        OUTLINED_FUNCTION_13_65();
        goto LABEL_192;
      }
      id v55 = objc_msgSend(v275, sel_isFaceTimeProvider);
      if (v55)
      {
        id v55 = objc_msgSend(v276, sel_isVideo);
        if (v55)
        {
          if (!OUTLINED_FUNCTION_34_24((uint64_t)v55, sel_isConnected))
          {
            OUTLINED_FUNCTION_22_39();
            String.init(format:_:)();
            OUTLINED_FUNCTION_13_65();
            goto LABEL_143;
          }
          OUTLINED_FUNCTION_47();
LABEL_68:
          String.localizedCallStatus.getter();
          uint64_t v67 = OUTLINED_FUNCTION_1_127();
          *(_OWORD *)(v67 + 16) = xmmword_1C3769620;
          uint64_t v68 = specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(&selRef_setEffectsPickerDrawer_, &v279);
          uint64_t v69 = v273;
          *(void *)(v67 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v67 + 64) = v69;
          *(void *)(v67 + 32) = v68;
          *(void *)(v67 + 40) = v70;
          id v46 = (char *)String.init(format:_:)();
          id v45 = v71;
LABEL_143:
          swift_bridgeObjectRelease();
LABEL_144:
          OUTLINED_FUNCTION_14_60();
          id v12 = v275;
          goto LABEL_194;
        }
      }
      if ((OUTLINED_FUNCTION_34_24((uint64_t)v55, sel_isOutgoing) & 1) == 0
        && (objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_isConnected) & 1) == 0
        && (objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_isHostedOnCurrentDevice) & 1) == 0)
      {
        OUTLINED_FUNCTION_22_39();
        OUTLINED_FUNCTION_13_65();
        goto LABEL_144;
      }
      if (objc_msgSend(&selRef_setEffectsPickerDrawer_, sel_isEmergency))
      {
        OUTLINED_FUNCTION_11_58();
        goto LABEL_68;
      }
      id v83 = OUTLINED_FUNCTION_27_37();
      if (v83)
      {
        outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v83, (SEL *)&selRef_callDirectoryLabel);
        if (v84)
        {
          OUTLINED_FUNCTION_13_65();
          id v85 = OUTLINED_FUNCTION_27_37();
          if (v85)
          {
            uint64_t v86 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v85, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
            if (v87)
            {
              uint64_t v88 = v86;
              uint64_t v89 = v87;
              if (a2 != 1)
              {
                swift_bridgeObjectRelease();
                specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v276, &v279);
                OUTLINED_FUNCTION_13_65();
              }
              OUTLINED_FUNCTION_2_112();
              uint64_t v90 = OUTLINED_FUNCTION_1_127();
              uint64_t v91 = specialized static Array._adoptStorage(_:count:)(v90, 1);
              uint64_t v92 = v273;
              v93[3] = MEMORY[0x1E4FBB1A0];
              v93[4] = (uint64_t)v92;
              *uint64_t v93 = v88;
              v93[1] = v89;
              TPNumberPadCharacter.rawValue.getter(v91);
              String.init(format:_:)();
              swift_bridgeObjectRelease();
              id v12 = v275;
              id v48 = (char **)v276;
              goto LABEL_194;
            }
          }
          swift_bridgeObjectRelease();
          id v48 = (char **)v276;
        }
      }
      id v12 = v275;
      if ((v271 & 1) == 0)
      {
        id v46 = 0;
        id v45 = (char **)0xE000000000000000;
        goto LABEL_194;
      }
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      v180 = static Features.shared;
      if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0x60))() & 1) == 0) {
        goto LABEL_247;
      }
      id v181 = objc_msgSend(v48, sel_imageURL);
      uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      MEMORY[0x1F4188790](v182 - 8);
      OUTLINED_FUNCTION_3_6();
      if (v181)
      {
        uint64_t v183 = type metadata accessor for URL();
        id v46 = (char *)&v270;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v184);
        OUTLINED_FUNCTION_25_43();

        uint64_t v185 = OUTLINED_FUNCTION_46_17();
        v186(v185);
        OUTLINED_FUNCTION_47_16();
        if (__swift_getEnumTagSinglePayload((uint64_t)v180, 1, v183) != 1)
        {
          outlined destroy of URL?((uint64_t)v180);
          uint64_t v187 = outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v48, (SEL *)&selRef_localizedLabel);
          id v12 = v275;
          if (v188)
          {
            id v45 = v188;
            if (a2 == 1)
            {
              id v46 = (char *)v187;
              outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v48, (SEL *)&selRef_companyDepartment);
              goto LABEL_194;
            }
            swift_bridgeObjectRelease();
          }
LABEL_247:
          id v45 = (char **)static Features.shared;
          if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0x60))())
          {
            uint64_t v247 = outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v48, (SEL *)&selRef_suggestedDisplayName);
            if (v248)
            {
              unint64_t v249 = v248;
              if (a2 == 1)
              {
                id v45 = (char **)v247;
                uint64_t v250 = HIBYTE(v248) & 0xF;
                if ((v248 & 0x2000000000000000) == 0) {
                  uint64_t v250 = v247 & 0xFFFFFFFFFFFFLL;
                }
                if (v250)
                {
                  static String._createEmpty(withInitialCapacity:)(7);
                  swift_bridgeObjectRelease();
                  v278[0] = v45;
                  v278[1] = v249;
                  id v45 = (char **)v278;
                  v251._uint64_t countAndFlagsBits = 2108704;
                  v251._object = (void *)0xE300000000000000;
                  String.append(_:)(v251);
                  v252._uint64_t countAndFlagsBits = specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v48, &v279);
                  String.append(_:)(v252);
                  swift_bridgeObjectRelease();
                  String.init(stringInterpolation:)();
                  goto LABEL_105;
                }
              }
              swift_bridgeObjectRelease();
            }
          }
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v246 = type metadata accessor for URL();
        OUTLINED_FUNCTION_13_18(v246);
      }
      outlined destroy of URL?((uint64_t)v180);
      id v12 = v275;
      goto LABEL_247;
    case 1:
      if (!objc_msgSend(a3, sel_isAmbiguous)) {
        goto LABEL_42;
      }
      uint64_t v49 = specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v276, &v279);
      goto LABEL_43;
    case 2:
      if (OUTLINED_FUNCTION_34_24(v42, sel_wasPulledToCurrentDevice))
      {
        OUTLINED_FUNCTION_31_30();
        OUTLINED_FUNCTION_47();
        goto LABEL_60;
      }
      if (v13)
      {
        id v44 = (char **)0xD000000000000011;
        uint64_t v47 = (uint64_t)objc_msgSend(v31, sel_isConnecting);
        id v12 = v275;
        unsigned int v59 = objc_msgSend(v275, (SEL)&selRef__applicationIconImageForBundleIdentifier_format_);
        if (v47)
        {
          if (v59) {
            goto LABEL_148;
          }
          goto LABEL_145;
        }
        if (!v59)
        {
LABEL_145:
          objc_msgSend(v31, sel_isThirdPartyVideo);
LABEL_262:
          OUTLINED_FUNCTION_2_112();
          uint64_t v256 = OUTLINED_FUNCTION_1_127();
          specialized static Array._adoptStorage(_:count:)(v256, 1);
          OUTLINED_FUNCTION_42_1();
          id v257 = objc_msgSend(v12, sel_localizedName);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_35_18();
          v258 = v273;
          *(void *)(v13 + 24) = MEMORY[0x1E4FBB1A0];
          *(void *)(v13 + 32) = v258;
          *(void *)uint64_t v13 = v12;
          *(void *)(v13 + 8) = &selRef_trailingBarAlpha;
          id v12 = v275;
          TPNumberPadCharacter.rawValue.getter(v44);
          OUTLINED_FUNCTION_19_44();
          OUTLINED_FUNCTION_37_19();
          goto LABEL_263;
        }
        OUTLINED_FUNCTION_2_112();
        v280 = &selRef_trailingBarAlpha;
        if ((OUTLINED_FUNCTION_49_13() & 1) == 0) {
          goto LABEL_110;
        }
        goto LABEL_89;
      }
      if (objc_msgSend(v275, (SEL)&selRef__applicationIconImageForBundleIdentifier_format_)
        && objc_msgSend(v31, (SEL)&selRef_setState_))
      {
        if (objc_msgSend(v31, sel_isConnecting)) {
          OUTLINED_FUNCTION_11_58();
        }
        else {
          OUTLINED_FUNCTION_47();
        }
        String.localizedCallStatus.getter();
        OUTLINED_FUNCTION_28_33();
LABEL_183:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        OUTLINED_FUNCTION_40_21();
        uint64_t v162 = OUTLINED_FUNCTION_32_25();
LABEL_184:
        uint64_t v189 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v162, v163, v164);
        TPNumberPadCharacter.rawValue.getter(v189);
LABEL_185:
        OUTLINED_FUNCTION_14_60();
LABEL_186:
        id v12 = v275;
        goto LABEL_268;
      }
      if (objc_msgSend(v31, sel_isEmergency))
      {
        OUTLINED_FUNCTION_43_0();
        OUTLINED_FUNCTION_2_112();
        v280 = &selRef_trailingBarAlpha;
        id v12 = v275;
        if ((OUTLINED_FUNCTION_49_13() & 1) == 0)
        {
LABEL_110:
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          id v45 = v103;
          v280 = v103;
        }
LABEL_89:
        uint64_t v82 = (uint64_t)v45[2];
        goto LABEL_265;
      }
      id v12 = v275;
      if (objc_msgSend(v31, sel_wasDialAssisted))
      {
        String.localizedCallStatus.getter();
        OUTLINED_FUNCTION_24_41();
        OUTLINED_FUNCTION_9_74();
        uint64_t v136 = OUTLINED_FUNCTION_12_58();
        TPNumberPadCharacter.rawValue.getter(v136);
      }
      uint64_t v137 = outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_localizedLabel);
      if (v138)
      {
        uint64_t v139 = v137;
        uint64_t v140 = v138;
        if (String.count.getter() >= 1)
        {
          OUTLINED_FUNCTION_43_0();
          OUTLINED_FUNCTION_2_112();
          uint64_t v141 = OUTLINED_FUNCTION_1_127();
          uint64_t v142 = specialized static Array._adoptStorage(_:count:)(v141, 1);
          uint64_t v143 = v273;
          v144[3] = MEMORY[0x1E4FBB1A0];
          v144[4] = (uint64_t)v143;
          *uint64_t v144 = v139;
          v144[1] = v140;
          TPNumberPadCharacter.rawValue.getter(v142);
          String.init(format:_:)();
          OUTLINED_FUNCTION_28_33();
LABEL_263:
          swift_bridgeObjectRelease();
          goto LABEL_264;
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_244;
    case 3:
      if (v13)
      {
        id v51 = v275;
        if (objc_msgSend(v275, (SEL)&selRef__applicationIconImageForBundleIdentifier_format_))
        {
          uint64_t v52 = OUTLINED_FUNCTION_2_112();
          uint64_t v54 = v53;
        }
        else
        {
          objc_msgSend(v276, sel_isThirdPartyVideo);
          OUTLINED_FUNCTION_2_112();
          id v44 = (char **)OUTLINED_FUNCTION_1_127();
          *((_OWORD *)v44 + 1) = xmmword_1C3769620;
          id v51 = objc_msgSend(v51, sel_localizedName);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_35_18();
          uint64_t v104 = v273;
          v44[7] = (char *)MEMORY[0x1E4FBB1A0];
          v44[8] = v104;
          unsigned char v44[4] = (char *)&selRef_setEffectsPickerDrawer_;
          v44[5] = (char *)&selRef_trailingBarAlpha;
          uint64_t v52 = String.init(format:_:)();
          uint64_t v54 = v105;
          swift_bridgeObjectRelease();
        }
        uint64_t v106 = outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v276);
        if (!v106 || (uint64_t v107 = *(void *)(v106 + 16), swift_bridgeObjectRelease(), !v107))
        {
          id v108 = [v276 (SEL)0x1F6B13BECLL];
          if (v108)
          {
            outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v108, (SEL *)&selRef_callDirectoryLabel);
            if (v109)
            {
              id v110 = OUTLINED_FUNCTION_21_44();
              if (v110)
              {
                uint64_t v111 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v110, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
                if (v112)
                {
                  uint64_t v113 = v111;
                  uint64_t v114 = v112;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  uint64_t v115 = (uint64_t)v280[2];
                  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v115);
                  uint64_t v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v52, v54);
                  TPNumberPadCharacter.rawValue.getter(v116);
                  OUTLINED_FUNCTION_2_112();
                  uint64_t v117 = OUTLINED_FUNCTION_20_46();
                  uint64_t v118 = specialized static Array._adoptStorage(_:count:)(v117, 2);
                  uint64_t v119 = MEMORY[0x1E4FBB1A0];
                  uint64_t v120 = v273;
                  v121[3] = MEMORY[0x1E4FBB1A0];
                  v121[4] = (uint64_t)v120;
                  uint64_t *v121 = v113;
                  v121[1] = v114;
                  v121[8] = v119;
                  v121[9] = (uint64_t)v120;
                  v121[5] = (uint64_t)v51;
                  v121[6] = (uint64_t)v44;
                  TPNumberPadCharacter.rawValue.getter(v118);
                  OUTLINED_FUNCTION_19_44();
                  swift_bridgeObjectRelease();
                  goto LABEL_186;
                }
              }
              swift_bridgeObjectRelease();
            }
          }
          outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v276, (SEL *)&selRef_suggestedDisplayName);
          if (v160)
          {
            OUTLINED_FUNCTION_28_33();
            swift_bridgeObjectRelease();
            goto LABEL_183;
          }
        }
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v161 = (uint64_t)v280[2];
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v161);
        uint64_t v162 = v161;
        uint64_t v163 = v52;
        uint64_t v164 = v54;
        goto LABEL_184;
      }
      uint64_t v60 = (char ***)&selRef_setEffectsPickerDrawer_;
      id v12 = v275;
      if (OUTLINED_FUNCTION_34_24(v42, (const char *)&selRef_setState_))
      {
        if (objc_msgSend(v31, (SEL)&selRef_currentVideoCallCount + 4))
        {
          if (objc_msgSend(v31, (SEL)&selRef_provider))
          {
            outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_callDurationString);
            if (v61)
            {
              OUTLINED_FUNCTION_36_9();
              id v44 = (char **)OUTLINED_FUNCTION_16_47();
              uint64_t v62 = OUTLINED_FUNCTION_1_127();
              uint64_t v63 = specialized static Array._adoptStorage(_:count:)(v62, 1);
              uint64_t v64 = v273;
              v65[3] = MEMORY[0x1E4FBB1A0];
              v65[4] = v64;
              *uint64_t v65 = &selRef_trailingBarAlpha;
              v65[1] = &selRef_setEffectsPickerDrawer_;
              TPNumberPadCharacter.rawValue.getter(v63);
              String.init(format:_:)();
              OUTLINED_FUNCTION_42_1();
              swift_bridgeObjectRelease();
LABEL_150:
              v280 = (char **)v47;
              if ((OUTLINED_FUNCTION_44_16() & 1) == 0)
              {
                OUTLINED_FUNCTION_7_92();
                uint64_t v47 = (uint64_t)v266;
                v280 = v266;
              }
              unint64_t v165 = *(void *)(v47 + 16);
              if (v165 >= *(void *)(v47 + 24) >> 1)
              {
                specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                v280 = v267;
              }
              uint64_t v166 = v165;
              uint64_t v167 = (uint64_t)v44;
              uint64_t v168 = v13;
              goto LABEL_266;
            }
          }
        }
        else
        {
          uint64_t v47 = 0xD000000000000011;
          if (!objc_msgSend(v31, sel_isConnecting))
          {
LABEL_148:
            OUTLINED_FUNCTION_47();
            goto LABEL_149;
          }
        }
        OUTLINED_FUNCTION_11_58();
LABEL_149:
        String.localizedCallStatus.getter();
        OUTLINED_FUNCTION_42_1();
        goto LABEL_150;
      }
      uint64_t v72 = outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v31);
      if (v72)
      {
        uint64_t v60 = *(char ****)(v72 + 16);
        swift_bridgeObjectRelease();
        if (v60)
        {
          outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_supplementalInCallString);
          if (v73)
          {
            OUTLINED_FUNCTION_24_41();
            OUTLINED_FUNCTION_9_74();
            uint64_t v74 = OUTLINED_FUNCTION_12_58();
            TPNumberPadCharacter.rawValue.getter(v74);
          }
          (*(void (**)(void *))(v277 + 280))(v31);
          if (v75)
          {
            OUTLINED_FUNCTION_24_41();
            OUTLINED_FUNCTION_9_74();
            uint64_t v76 = OUTLINED_FUNCTION_12_58();
            TPNumberPadCharacter.rawValue.getter(v76);
          }
          goto LABEL_258;
        }
      }
      if (objc_msgSend(v31, sel_isInternational))
      {
        OUTLINED_FUNCTION_2_112();
        OUTLINED_FUNCTION_36_9();
        specialized static Array._allocateUninitialized(_:)(0);
        OUTLINED_FUNCTION_19_44();
        OUTLINED_FUNCTION_37_19();
        swift_bridgeObjectRelease();
        unint64_t v94 = (unint64_t)&v280;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        OUTLINED_FUNCTION_9_74();
        uint64_t v95 = OUTLINED_FUNCTION_12_58();
        TPNumberPadCharacter.rawValue.getter(v95);
        uint64_t v96 = outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_suggestedDisplayName);
        if (v97)
        {
          unint64_t v94 = v96;
          uint64_t v47 = v97;
          uint64_t v98 = HIBYTE(v97) & 0xF;
          if ((v97 & 0x2000000000000000) == 0) {
            uint64_t v98 = v96 & 0xFFFFFFFFFFFFLL;
          }
          if (v98)
          {
            OUTLINED_FUNCTION_2_112();
            uint64_t v99 = OUTLINED_FUNCTION_1_127();
            uint64_t v100 = specialized static Array._adoptStorage(_:count:)(v99, 1);
            unint64_t v101 = v273;
            v102[3] = MEMORY[0x1E4FBB1A0];
            v102[4] = (unint64_t)v101;
            unint64_t *v102 = v94;
            v102[1] = v47;
            TPNumberPadCharacter.rawValue.getter(v100);
            String.init(format:_:)();
            swift_bridgeObjectRelease();
            goto LABEL_268;
          }
          swift_bridgeObjectRelease();
        }
        outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_localizedLabel);
        if (v244)
        {
          OUTLINED_FUNCTION_36_9();
          swift_bridgeObjectRelease();
          uint64_t v245 = HIBYTE(v94) & 0xF;
          if ((v94 & 0x2000000000000000) == 0) {
            uint64_t v245 = v47 & 0xFFFFFFFFFFFFLL;
          }
          if (v245)
          {
            outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_localizedLabel);
            goto LABEL_268;
          }
        }
      }
      else
      {
        id v145 = OUTLINED_FUNCTION_27_37();
        if (v145)
        {
          uint64_t v146 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v145, (SEL *)&selRef_callDirectoryLabel);
          if (v147)
          {
            uint64_t v148 = v146;
            uint64_t v149 = v147;
            id v150 = OUTLINED_FUNCTION_27_37();
            if (v150)
            {
              uint64_t v151 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v150, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
              if (v152)
              {
                uint64_t v153 = v151;
                uint64_t v154 = v152;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                OUTLINED_FUNCTION_40_21();
                uint64_t v155 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v148, v149);
                TPNumberPadCharacter.rawValue.getter(v155);
                OUTLINED_FUNCTION_2_112();
                uint64_t v156 = OUTLINED_FUNCTION_1_127();
                uint64_t v157 = specialized static Array._adoptStorage(_:count:)(v156, 1);
                uint64_t v158 = v273;
                v159[3] = MEMORY[0x1E4FBB1A0];
                v159[4] = (uint64_t)v158;
                *uint64_t v159 = v153;
                v159[1] = v154;
                TPNumberPadCharacter.rawValue.getter(v157);
                OUTLINED_FUNCTION_19_44();
                swift_bridgeObjectRelease();
                goto LABEL_186;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v31 = v276;
          }
        }
        outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_supplementalInCallString);
        if (v221)
        {
          id v44 = v221;
          uint64_t v60 = &v280;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          OUTLINED_FUNCTION_9_74();
          uint64_t v222 = OUTLINED_FUNCTION_45_12();
          TPNumberPadCharacter.rawValue.getter(v222);
        }
        outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_suggestedDisplayName);
        id v12 = v275;
        if (v223)
        {
          id v44 = v223;
          uint64_t v60 = &v280;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          OUTLINED_FUNCTION_9_74();
          uint64_t v224 = OUTLINED_FUNCTION_45_12();
          TPNumberPadCharacter.rawValue.getter(v224);
        }
        if (!objc_msgSend(v31, sel_isJunk))
        {
          id v234 = objc_msgSend(v31, sel_imageURL);
          uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          MEMORY[0x1F4188790](v235 - 8);
          OUTLINED_FUNCTION_3_6();
          if (v234)
          {
            uint64_t v236 = type metadata accessor for URL();
            OUTLINED_FUNCTION_4();
            MEMORY[0x1F4188790](v237);
            OUTLINED_FUNCTION_25_43();

            uint64_t v238 = OUTLINED_FUNCTION_46_17();
            v239(v238);
            OUTLINED_FUNCTION_47_16();
            id v12 = v275;
            if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v236) != 1)
            {
              outlined destroy of URL?((uint64_t)v60);
              outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_localizedLabel);
              if (v240)
              {
                OUTLINED_FUNCTION_24_41();
                v241 = v31;
                uint64_t v242 = (uint64_t)v280[2];
                specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v242);
                uint64_t v243 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v242, (uint64_t)v234, v236);
                TPNumberPadCharacter.rawValue.getter(v243);
                outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v241, (SEL *)&selRef_companyDepartment);
                goto LABEL_268;
              }
LABEL_258:
              outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v31, (SEL *)&selRef_localizedLabel);
              if (!v254) {
                goto LABEL_267;
              }
              goto LABEL_259;
            }
          }
          else
          {
            uint64_t v253 = type metadata accessor for URL();
            OUTLINED_FUNCTION_13_18(v253);
          }
          outlined destroy of URL?((uint64_t)v60);
          goto LABEL_258;
        }
        String.localizedCallStatus.getter();
        OUTLINED_FUNCTION_28_33();
        v225 = (char **)(*(uint64_t (**)(void *))(v277 + 288))(v31);
        v227 = v226;
        swift_bridgeObjectRetain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        OUTLINED_FUNCTION_40_21();
        uint64_t v228 = OUTLINED_FUNCTION_32_25();
        uint64_t v231 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v228, v229, v230);
        TPNumberPadCharacter.rawValue.getter(v231);
        if (&selRef_trailingBarAlpha == v225 && v44 == v227)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v233 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v233 & 1) == 0) {
            goto LABEL_268;
          }
          swift_bridgeObjectRelease();
        }
      }
LABEL_267:
      OUTLINED_FUNCTION_14_60();
      goto LABEL_268;
    case 4:
      id v44 = (char **)v276;
      if (objc_msgSend(v276, sel_wasDeclined))
      {
        id v12 = v275;
        if (v13)
        {
          if (OUTLINED_FUNCTION_23_43()) {
            goto LABEL_58;
          }
          goto LABEL_107;
        }
        OUTLINED_FUNCTION_15_62();
      }
      else
      {
        id v12 = v275;
        if (v13)
        {
          if (OUTLINED_FUNCTION_23_43())
          {
LABEL_58:
            OUTLINED_FUNCTION_47();
            goto LABEL_83;
          }
LABEL_107:
          objc_msgSend(v276, sel_isThirdPartyVideo);
          uint64_t v47 = OUTLINED_FUNCTION_2_112();
          uint64_t v169 = OUTLINED_FUNCTION_1_127();
          specialized static Array._adoptStorage(_:count:)(v169, 1);
          OUTLINED_FUNCTION_47_6();
          id v170 = objc_msgSend(v12, sel_localizedName);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_35_18();
          char v171 = v273;
          *((void *)v276 + 3) = MEMORY[0x1E4FBB1A0];
          unsigned char v44[4] = v171;
          *id v44 = (char *)v12;
          v44[1] = (char *)&selRef_trailingBarAlpha;
          id v12 = v275;
          TPNumberPadCharacter.rawValue.getter(&selRef_trailingBarAlpha);
          String.init(format:_:)();
          OUTLINED_FUNCTION_47_6();
          swift_bridgeObjectRelease();
LABEL_155:
          if ((OUTLINED_FUNCTION_44_16() & 1) == 0)
          {
            OUTLINED_FUNCTION_7_92();
            uint64_t v47 = v262;
          }
LABEL_157:
          unint64_t v56 = *(void *)(v47 + 16);
          unint64_t v57 = v56 + 1;
          if (v56 < *(void *)(v47 + 24) >> 1) {
            goto LABEL_158;
          }
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_41_21();
      }
LABEL_83:
      String.localizedCallStatus.getter();
      OUTLINED_FUNCTION_47_6();
      goto LABEL_155;
    case 5:
      uint64_t v47 = (uint64_t)&selRef_setEffectsPickerDrawer_;
      id v44 = (char **)v276;
      if (objc_msgSend(v276, sel_disconnectedReason) != 15)
      {
        if (objc_msgSend(v276, sel_disconnectedReason) == 7)
        {
LABEL_60:
          id v45 = (char **)String.localizedCallStatus.getter();
          id v44 = v66;
          if ((OUTLINED_FUNCTION_44_16() & 1) == 0)
          {
            OUTLINED_FUNCTION_7_92();
            uint64_t v47 = v265;
          }
          id v12 = v275;
          goto LABEL_157;
        }
        id v12 = v275;
        if (objc_msgSend(v276, sel_disconnectedReasonRequiresCallFailureUI)) {
          goto LABEL_83;
        }
        if (objc_msgSend(v276, sel_disconnectedReasonRequiresCallBackUI))
        {
          if (!v13) {
            goto LABEL_267;
          }
          if (OUTLINED_FUNCTION_23_43()) {
            goto LABEL_190;
          }
LABEL_260:
          objc_msgSend(v276, sel_isThirdPartyVideo);
          goto LABEL_262;
        }
        if (objc_msgSend(v276, sel_wasDeclined))
        {
          if (v13)
          {
            if (!objc_msgSend(v275, (SEL)&selRef__applicationIconImageForBundleIdentifier_format_)) {
              goto LABEL_260;
            }
            OUTLINED_FUNCTION_31_30();
LABEL_190:
            OUTLINED_FUNCTION_47();
            goto LABEL_244;
          }
          OUTLINED_FUNCTION_15_62();
        }
        else
        {
          if (v13)
          {
            if (!objc_msgSend(v275, (SEL)&selRef__applicationIconImageForBundleIdentifier_format_))
            {
              objc_msgSend(v276, sel_isThirdPartyVideo);
              OUTLINED_FUNCTION_43_0();
              goto LABEL_262;
            }
            OUTLINED_FUNCTION_43_0();
            goto LABEL_190;
          }
          OUTLINED_FUNCTION_41_21();
        }
LABEL_244:
        String.localizedCallStatus.getter();
LABEL_259:
        OUTLINED_FUNCTION_28_33();
LABEL_264:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v82 = (uint64_t)v280[2];
LABEL_265:
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v82);
        uint64_t v166 = OUTLINED_FUNCTION_32_25();
LABEL_266:
        uint64_t v259 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v166, v167, v168);
        TPNumberPadCharacter.rawValue.getter(v259);
        goto LABEL_267;
      }
LABEL_42:
      uint64_t v49 = String.localizedCallStatus.getter();
LABEL_43:
      id v45 = (char **)v49;
      id v44 = v50;
      if ((OUTLINED_FUNCTION_44_16() & 1) == 0)
      {
        OUTLINED_FUNCTION_7_92();
        uint64_t v47 = v261;
      }
      unint64_t v56 = *(void *)(v47 + 16);
      unint64_t v57 = v56 + 1;
      id v12 = v275;
      if (v56 < *(void *)(v47 + 24) >> 1) {
        goto LABEL_158;
      }
LABEL_46:
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v47 = v58;
LABEL_158:
      OUTLINED_FUNCTION_14_60();
      *(void *)(v47 + 16) = v57;
      uint64_t v172 = v47 + 16 * v56;
      *(void *)(v172 + 32) = v45;
      *(void *)(v172 + 40) = v44;
      v280 = (char **)v47;
LABEL_268:
      id v260 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
      swift_bridgeObjectRetain();
      char v26 = CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
      swift_beginAccess();
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v26) + 0xE8))(v279);
      swift_bridgeObjectRelease();
LABEL_269:

      return v26;
    default:
      goto LABEL_185;
  }
}

CNKCallParticipantLabelDescriptorFactory __swiftcall CNKCallParticipantLabelDescriptorFactory.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (CNKCallParticipantLabelDescriptorFactory)objc_msgSend(v0, sel_init);
}

id CNKCallParticipantLabelDescriptorFactory.init()()
{
  v1.super_class = (Class)CNKCallParticipantLabelDescriptorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t CallParticipantLabelDescriptor.strings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CallParticipantLabelDescriptor.strings.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  *objc_super v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t key path getter for CallParticipantLabelDescriptor.strings : CallParticipantLabelDescriptor@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t key path setter for CallParticipantLabelDescriptor.strings : CallParticipantLabelDescriptor(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x88);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t (*CallParticipantLabelDescriptor.strings.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t CallParticipantLabelDescriptor.secondaryString.getter()
{
  return CallParticipantLabelDescriptor.secondaryString.getter(&OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_secondaryString);
}

uint64_t CallParticipantLabelDescriptor.secondaryString.setter(uint64_t a1, uint64_t a2)
{
  return CallParticipantLabelDescriptor.secondaryString.setter(a1, a2);
}

{
  void *v2;

  OUTLINED_FUNCTION_0_1();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t key path getter for CallParticipantLabelDescriptor.secondaryString : CallParticipantLabelDescriptor@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x98))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for CallParticipantLabelDescriptor.secondaryString : CallParticipantLabelDescriptor(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA0);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*CallParticipantLabelDescriptor.secondaryString.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id @objc CallParticipantLabelDescriptor.secondaryString.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  if (v4)
  {
    uint64_t v5 = (void *)MEMORY[0x1C87730B0](v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v5;
}

uint64_t CallParticipantLabelDescriptor.durationString.getter()
{
  return CallParticipantLabelDescriptor.secondaryString.getter(&OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_durationString);
}

void @objc CallParticipantLabelDescriptor.secondaryString.setter(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  id v8 = a1;
  a4(v4, v5);
}

uint64_t CallParticipantLabelDescriptor.durationString.setter(uint64_t a1, uint64_t a2)
{
  return CallParticipantLabelDescriptor.secondaryString.setter(a1, a2);
}

uint64_t key path getter for CallParticipantLabelDescriptor.durationString : CallParticipantLabelDescriptor@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xB0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for CallParticipantLabelDescriptor.durationString : CallParticipantLabelDescriptor(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xB8);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*CallParticipantLabelDescriptor.durationString.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t CallParticipantLabelDescriptor.layoutState.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_layoutState;
  OUTLINED_FUNCTION_5_0();
  return *(void *)v1;
}

uint64_t CallParticipantLabelDescriptor.layoutState.setter(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t key path getter for CallParticipantLabelDescriptor.layoutState : CallParticipantLabelDescriptor@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for CallParticipantLabelDescriptor.layoutState : CallParticipantLabelDescriptor(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xD0))(*a1);
}

uint64_t (*CallParticipantLabelDescriptor.layoutState.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t CallParticipantLabelDescriptor.isDynamic.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_isDynamic);
  OUTLINED_FUNCTION_5_0();
  return *v1;
}

uint64_t CallParticipantLabelDescriptor.isDynamic.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t key path getter for CallParticipantLabelDescriptor.isDynamic : CallParticipantLabelDescriptor@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xE0))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for CallParticipantLabelDescriptor.isDynamic : CallParticipantLabelDescriptor(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xE8))(*a1);
}

uint64_t (*CallParticipantLabelDescriptor.isDynamic.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t CallParticipantLabelDescriptor.localizedSenderIdentity.getter()
{
  return CallParticipantLabelDescriptor.secondaryString.getter(&OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_localizedSenderIdentity);
}

uint64_t CallParticipantLabelDescriptor.secondaryString.getter(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  OUTLINED_FUNCTION_5_0();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t CallParticipantLabelDescriptor.localizedSenderIdentity.setter(uint64_t a1, uint64_t a2)
{
  return CallParticipantLabelDescriptor.secondaryString.setter(a1, a2);
}

uint64_t key path getter for CallParticipantLabelDescriptor.localizedSenderIdentity : CallParticipantLabelDescriptor@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xF8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for CallParticipantLabelDescriptor.localizedSenderIdentity : CallParticipantLabelDescriptor(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x100);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*CallParticipantLabelDescriptor.localizedSenderIdentity.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t CallParticipantLabelDescriptor.__allocating_init(strings:)(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, void))(v1 + 272))(a1, 0, 0, 0, 0, 0);
}

id CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)()
{
  OUTLINED_FUNCTION_39_24();
  uint64_t v6 = &v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_secondaryString];
  *uint64_t v6 = 0;
  v6[1] = 0;
  unint64_t v7 = &v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_durationString];
  *unint64_t v7 = 0;
  v7[1] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_isDynamic] = 0;
  id v8 = &v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_localizedSenderIdentity];
  *id v8 = 0;
  v8[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_strings] = v9;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  v6[1] = v4;
  uint64_t v10 = v1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_0();
  *unint64_t v7 = v3;
  v7[1] = v2;
  swift_bridgeObjectRelease();
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_layoutState] = v0;

  v12.receiver = v10;
  v12.super_class = (Class)type metadata accessor for CallParticipantLabelDescriptor();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(void *a1, unsigned char *a2)
{
  uint64_t v3 = outlined bridged method (pb) of @objc TUCall.callDurationString.getter(a1, (SEL *)&selRef_callDurationString);
  if (v4)
  {
    uint64_t v5 = v3;
    swift_beginAccess();
    *a2 = 1;
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSString);
    uint64_t v6 = NSString.init(stringLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C37696D0;
    uint64_t v8 = MEMORY[0x1E4FBB550];
    uint64_t v9 = MEMORY[0x1E4FBB5C8];
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v7 + 64) = v9;
    *(void *)(v7 + 32) = 0;
    *(void *)(v7 + 96) = v8;
    *(void *)(v7 + 104) = v9;
    *(void *)(v7 + 72) = 0;
    uint64_t v10 = (void *)static NSString.localizedStringWithFormat(_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v5;
}

void *static CallParticipantLabelDescriptor.organizationName(for:)(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = (void (*)(void *))static CallParticipantLabelDescriptor.organizationNameProvider;
  swift_retain();
  v2(a1);
  OUTLINED_FUNCTION_37_19();
  swift_release();
  return a1;
}

uint64_t static CallParticipantLabelDescriptor.identificationCategoryDisplayString(for:)(void *a1)
{
  switch((unint64_t)objc_msgSend(a1, sel_identificationCategory))
  {
    case 3uLL:
      id v2 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x5542000000000000;
      uint64_t v4 = 0x5353454E4953;
      goto LABEL_9;
    case 4uLL:
    case 7uLL:
      id v8 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_29_30();
      OUTLINED_FUNCTION_47();
      break;
    case 5uLL:
      id v5 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x4D45000000000000;
      unint64_t v6 = 0xEF59434E45475245;
      break;
    case 6uLL:
      id v7 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x5246000000000000;
      unint64_t v6 = 0xEB00000000445541;
      break;
    case 8uLL:
      id v9 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x4548000000000000;
      uint64_t v10 = 1213484097;
      goto LABEL_15;
    case 9uLL:
    case 0xDuLL:
    case 0x12uLL:
      id v19 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_4_16();
      OUTLINED_FUNCTION_47();
      uint64_t v3 = 0xD000000000000013;
      break;
    case 0xAuLL:
      id v11 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x4F4E000000000000;
      unint64_t v6 = 0xEF5449464F52504ELL;
      break;
    case 0xBuLL:
      id v12 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x4550000000000000;
      uint64_t v4 = 0x4C414E4F5352;
LABEL_9:
      unint64_t v6 = v4 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    case 0xCuLL:
      id v13 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x4F50000000000000;
      unint64_t v6 = 0xEF4C41434954494CLL;
      break;
    case 0xEuLL:
      id v14 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x5250000000000000;
      uint64_t v10 = 1313821513;
      goto LABEL_15;
    case 0x10uLL:
      id v16 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x5053000000000000;
      unsigned int v17 = 1162235727;
      goto LABEL_18;
    case 0x11uLL:
      id v18 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x5553000000000000;
      uint64_t v10 = 1497716306;
LABEL_15:
      unint64_t v6 = v10 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 0x13uLL:
      id v20 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x5254000000000000;
      unsigned int v17 = 1163154261;
LABEL_18:
      unint64_t v6 = v17 | 0xED00004400000000;
      break;
    default:
      id v15 = objc_msgSend(self, sel_conversationKit);
      uint64_t v3 = OUTLINED_FUNCTION_0_98() & 0xFFFFFFFFFFFFLL | 0x554A000000000000;
      unint64_t v6 = 0xEA00000000004B4ELL;
      break;
  }
  v21.value._uint64_t countAndFlagsBits = 0x746174536C6C6143;
  v21.value._object = (void *)0xEA00000000007375;
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  uint64_t v23 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v21, (NSBundle)v1, v22, *(Swift::String *)(&v26 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t closure #1 in variable initialization expression of static CallParticipantLabelDescriptor.organizationNameProvider(void *a1)
{
  v50[3] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = (void *)outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(a1);
  if (!v2) {
    return 0;
  }
  if (!v2[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v4 = (void *)v2[4];
  uint64_t v3 = (void *)v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_tu_contactStoreConfigurationForCall_, a1);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_initWithConfiguration_, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3769580;
  id v8 = (void *)*MEMORY[0x1E4F1ADF0];
  id v9 = (void *)*MEMORY[0x1E4F1AEA0];
  *(void *)(v7 + 32) = *MEMORY[0x1E4F1ADF0];
  *(void *)(v7 + 40) = v9;
  uint64_t v10 = (void *)*MEMORY[0x1E4F1ADE0];
  id v11 = (void *)*MEMORY[0x1E4F1AED8];
  *(void *)(v7 + 48) = *MEMORY[0x1E4F1ADE0];
  *(void *)(v7 + 56) = v11;
  specialized Array._endMutation()();
  id v12 = v8;
  id v13 = v9;
  id v49 = v10;
  id v14 = v11;
  id v15 = (void *)MEMORY[0x1C87730B0](v4, v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v50[0] = 0;
  id v17 = objc_msgSend(v6, sel_unifiedContactWithIdentifier_keysToFetch_error_, v15, isa, v50);

  if (!v17)
  {
    id v41 = v50[0];
    uint64_t v42 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1C3769620;
    v50[0] = v4;
    v50[1] = v3;
    uint64_t v44 = MEMORY[0x1E4FBB1A0];
    uint64_t v45 = String.init<A>(reflecting:)();
    uint64_t v47 = v46;
    *(void *)(v43 + 56) = v44;
    *(void *)(v43 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v47;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  id v18 = v50[0];
  swift_bridgeObjectRelease();
  if (!objc_msgSend(v17, sel_isKeyAvailable_, v14)) {
    goto LABEL_22;
  }
  id v19 = objc_msgSend(v17, sel_organizationName);
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v22 = v21;

  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
LABEL_22:

LABEL_26:
    return 0;
  }
  if (!objc_msgSend(v17, sel_isKeyAvailable_, v12)) {
    goto LABEL_19;
  }
  id v24 = objc_msgSend(v17, sel_givenName);
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = v26;

  swift_bridgeObjectRelease();
  uint64_t v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28)
  {
LABEL_19:
    if (!objc_msgSend(v17, sel_isKeyAvailable_, v13)) {
      goto LABEL_32;
    }
    id v29 = objc_msgSend(v17, sel_middleName);
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    swift_bridgeObjectRelease();
    uint64_t v33 = HIBYTE(v32) & 0xF;
    if ((v32 & 0x2000000000000000) == 0) {
      uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
    }
    if (!v33)
    {
LABEL_32:
      if (!objc_msgSend(v17, sel_isKeyAvailable_, v49)) {
        goto LABEL_29;
      }
      id v34 = objc_msgSend(v17, sel_familyName);
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      swift_bridgeObjectRelease();
      uint64_t v38 = HIBYTE(v37) & 0xF;
      if ((v37 & 0x2000000000000000) == 0) {
        uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
      }
      if (!v38)
      {
LABEL_29:

        return 0;
      }
    }
  }
  id v39 = objc_msgSend(v17, sel_organizationName);
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v40;
}

uint64_t (*CNKCallParticipantLabelDescriptorFactory.organizationNameProvider.getter())()
{
  OUTLINED_FUNCTION_5_0();
  uint64_t v0 = static CallParticipantLabelDescriptor.organizationNameProvider;
  swift_retain();
  return v0;
}

uint64_t CNKCallParticipantLabelDescriptorFactory.organizationNameProvider.setter(uint64_t (*a1)(), uint64_t a2)
{
  static CallParticipantLabelDescriptor.organizationNameProvider = a1;
  qword_1EC674098 = a2;
  return swift_release();
}

uint64_t (*static CallParticipantLabelDescriptor.organizationNameProvider.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id CallParticipantLabelDescriptor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CallParticipantLabelDescriptor.init()()
{
}

id CallParticipantLabelDescriptor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallParticipantLabelDescriptor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t @objc TUCall.disconnectedReasonRequiresCallBackUI.getter(void *a1)
{
  id v1 = a1;
  char v2 = TUCall.disconnectedReasonRequiresCallBackUI.getter();

  return v2 & 1;
}

uint64_t TUCall.disconnectedReasonRequiresCallBackUI.getter()
{
  id v1 = v0;
  unsigned int v2 = objc_msgSend(v0, sel_disconnectedReason);
  if (v2 > 0x18 || ((1 << v2) & 0x1C2C020) == 0) {
    return 0;
  }
  id v4 = objc_msgSend(self, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_activeConversationForCall_, v1);

  if (v5)
  {
    unsigned int v6 = objc_msgSend(v5, sel_isOneToOneModeEnabled);
  }
  else
  {
    id v7 = objc_msgSend(v1, sel_remoteParticipantHandles);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = specialized Set.count.getter(v8);
    swift_bridgeObjectRelease();
    unsigned int v6 = v9 == 1;
  }
  type metadata accessor for SpringBoardUtilities();
  OUTLINED_FUNCTION_47();
  BOOL v10 = static SpringBoardUtilities.checkSpringBoardState(for:)();
  if (objc_msgSend(v1, sel_isIncoming) && !objc_msgSend(v1, sel_isConnecting) || v10)
  {

    return 0;
  }
  unsigned int v12 = objc_msgSend(v1, sel_isConversation);

  return v12 ^ 1 | v6;
}

uint64_t @objc TUCall.disconnectedReasonRequiresCallFailureUI.getter(void *a1)
{
  id v1 = a1;
  char v2 = TUCall.disconnectedReasonRequiresCallFailureUI.getter();

  return v2 & 1;
}

uint64_t TUCall.disconnectedReasonRequiresCallFailureUI.getter()
{
  unsigned int v1 = objc_msgSend(v0, sel_disconnectedReason);
  return (v1 < 0x19) & (0x1C24000u >> v1);
}

uint64_t type metadata accessor for CallParticipantLabelDescriptor()
{
  return self;
}

uint64_t outlined bridged method (pb) of @objc TUCall.callDurationString.getter(void *a1)
{
  return outlined bridged method (pb) of @objc TUCall.callDurationString.getter(a1, (SEL *)&selRef_callDurationString);
}

uint64_t outlined bridged method (pb) of @objc TUCall.callDurationString.getter(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_36_9();

  return v2;
}

char *keypath_get_selector_organizationNameProvider()
{
  return sel_organizationNameProvider;
}

uint64_t type metadata accessor for CNKCallParticipantLabelDescriptorFactory(uint64_t a1)
{
  return type metadata accessor for NSObject(a1, (unint64_t *)&lazy cache variable for type metadata for CNKCallParticipantLabelDescriptorFactory);
}

uint64_t method lookup function for CallParticipantLabelDescriptor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallParticipantLabelDescriptor);
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.strings.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.strings.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.strings.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.secondaryString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.secondaryString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.secondaryString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.durationString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.durationString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.durationString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.layoutState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.layoutState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.layoutState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.isDynamic.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.isDynamic.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.isDynamic.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.localizedSenderIdentity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.localizedSenderIdentity.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.localizedSenderIdentity.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.__allocating_init(strings:secondaryString:durationString:layoutState:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of static CallParticipantLabelDescriptor.organizationName(for:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of static CallParticipantLabelDescriptor.identificationCategoryDisplayString(for:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t sub_1C3470CB8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)(uint64_t a1)
{
  return thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C3470CF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?)(uint64_t a1)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?)(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_21()
{
  return 0x444E455F4C4C4143;
}

uint64_t CallScreening.MachineStateObserver.init(logger:stateMachine:statusService:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(a4, a1);
  uint64_t result = type metadata accessor for CallScreening.MachineStateObserver(0);
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  *(void *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for CallScreening.MachineStateObserver(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallScreening.MachineStateObserver);
}

uint64_t CallScreening.MachineStateObserver.start()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CallScreening.MachineStateObserver(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  outlined init with copy of CallScreening.MachineStateObserver(v1, (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v9 = static CKStateMachineActor.shared;
  unint64_t v10 = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v10;
  outlined init with take of CallScreening.MachineStateObserver((uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  swift_retain();
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
}

BOOL BackgroundTask.isInvalid.getter()
{
  return *(void *)(v0
                   + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask) == *MEMORY[0x1E4FB2748];
}

uint64_t BackgroundTask.init(onExpire:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_logger;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationKit);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, v8, v7);
  *(void *)(v3 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask) = *MEMORY[0x1E4FB2748];
  uint64_t v9 = (void *)(v3 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_onExpire);
  *uint64_t v9 = a1;
  v9[1] = a2;
  swift_retain();
  unint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v14 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v10, v11, "%{public}s created", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v13, -1, -1);
    MEMORY[0x1C87760E0](v12, -1, -1);
  }

  swift_release();
  return v3;
}

void BackgroundTask.end()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask);
  uint64_t v3 = *MEMORY[0x1E4FB2748];
  oslog = Logger.logObject.getter();
  if (v2 == v3)
  {
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v17 = v6;
      *(_DWORD *)uint64_t v5 = 136446210;
      uint64_t v7 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, oslog, v4, "%{public}s end failed", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v6, -1, -1);
      MEMORY[0x1C87760E0](v5, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)unint64_t v10 = 136446210;
      uint64_t v12 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, oslog, v9, "%{public}s endBackgroundTask", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v11, -1, -1);
      MEMORY[0x1C87760E0](v10, -1, -1);
    }

    id v14 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v15 = OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask;
    objc_msgSend(v14, sel_endBackgroundTask_, *(void *)(v1+ OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask));

    *(void *)(v1 + v15) = v3;
  }
}

void BackgroundTask.start()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)((char *)v0
                 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask);
  uint64_t v4 = *MEMORY[0x1E4FB2748];
  oslog = Logger.logObject.getter();
  if (v3 == v4)
  {
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      aBlock[0] = v7;
      *(_DWORD *)uint64_t v6 = 136446466;
      uint64_t v8 = _typeName(_:qualified:)();
      uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000010, 0x80000001C37AE9C0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, oslog, v5, "%{public}s beginBackgroundTask %{public}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v7, -1, -1);
      MEMORY[0x1C87760E0](v6, -1, -1);
    }

    id v10 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v1;
    v11[3] = 0xD000000000000010;
    v11[4] = 0x80000001C37AE9C0;
    v11[5] = v2;
    aBlock[4] = (uint64_t)partial apply for closure #1 in BackgroundTask.start();
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    uint64_t aBlock[3] = (uint64_t)&block_descriptor_79;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v13 = outlined bridged method (mbgnnn) of @objc UIApplication.beginBackgroundTask(withName:expirationHandler:)(0xD000000000000010, 0x80000001C37AE9C0, (uint64_t)v12, v10);
    _Block_release(v12);

    *(void *)((char *)v1
              + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask) = v13;
  }
  else
  {
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      aBlock[0] = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v17 = _typeName(_:qualified:)();
      uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, oslog, v14, "%{public}s start failed", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v16, -1, -1);
      MEMORY[0x1C87760E0](v15, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t closure #1 in BackgroundTask.start()(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v6, v7, "%{public}s backgroundTask %{public}s expired", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = *(void (**)(uint64_t))(a1
                                       + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_onExpire);
  uint64_t v13 = swift_retain();
  v12(v13);
  return swift_release();
}

uint64_t BackgroundTask.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t CallScreening.MachineStateObserver.logger.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t CallScreening.MachineStateObserver.stateMachine.getter()
{
  type metadata accessor for CallScreening.MachineStateObserver(0);
  return swift_retain();
}

uint64_t CallScreening.MachineStateObserver.statusService.getter()
{
  type metadata accessor for CallScreening.MachineStateObserver(0);
  return swift_retain();
}

uint64_t closure #1 in CallScreening.MachineStateObserver.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned char v4[40] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>);
  v4[41] = v5;
  v4[42] = *(void *)(v5 - 8);
  v4[43] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator);
  v4[44] = v6;
  v4[45] = *(void *)(v6 - 8);
  v4[46] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[47] = v7;
  v4[48] = *(void *)(v7 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CallScreening.MachineStateObserver(0);
  v4[52] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[53] = v9;
  v4[54] = *(void *)(v9 + 64);
  v4[55] = swift_task_alloc();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v10 = static CKStateMachineActor.shared;
  v4[56] = static CKStateMachineActor.shared;
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MachineStateObserver.start(), v10, 0);
}

uint64_t closure #1 in CallScreening.MachineStateObserver.start()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[40];
  v0[33] = 0;
  v0[34] = 0;
  outlined init with copy of CallScreening.MachineStateObserver(v3, v1);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  v0[57] = v5;
  outlined init with take of CallScreening.MachineStateObserver(v1, v5 + v4);
  type metadata accessor for MainActor();
  v0[58] = OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_39_1();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[56];
  swift_release();
  type metadata accessor for BackgroundTask(0);
  swift_allocObject();
  v0[59] = BackgroundTask.init(onExpire:)((uint64_t)partial apply for closure #1 in closure #1 in CallScreening.MachineStateObserver.start(), v1);
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MachineStateObserver.start(), v2, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  uint64_t v1 = v0[51];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  unint64_t v4 = v0[40];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[60] = v5;
  v0[61] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = Logger.logObject.getter();
  uint64_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v7, "Started listening to StateMachine changes for StateMachine", v8, 2u);
    OUTLINED_FUNCTION_3();
  }
  uint64_t v10 = v0[51];
  uint64_t v9 = v0[52];
  unint64_t v11 = v0[47];
  uint64_t v12 = v0[48];
  os_log_type_t v14 = v0[42];
  uint64_t v13 = v0[43];
  uint64_t v15 = v0[40];
  id v24 = v0[41];

  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[62] = v16;
  v0[63] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v10, v11);
  uint64_t v17 = *(void *)(v15 + *(int *)(v9 + 20));
  v0[37] = *(void *)(v17 + *(void *)(*(void *)v17 + 120));
  unint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>);
  id v19 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>);
  MEMORY[0x1C8770AF0](v18, v19);
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v24);
  v0[64] = static CKStateMachineActor.shared;
  v0[65] = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator);
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_31(v20);
  char *v21 = v22;
  v21[1] = closure #1 in CallScreening.MachineStateObserver.start();
  return MEMORY[0x1F4187C78](v0 + 2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v12;

  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_2_2();
  *unint64_t v4 = v3;
  *unint64_t v4 = *v1;
  *(void *)(v3 + 536) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 512);
  if (v0)
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v10 = closure #1 in CallScreening.MachineStateObserver.start();
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v9;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v10 = closure #1 in CallScreening.MachineStateObserver.start();
  }
  return MEMORY[0x1F4188298](v10, v6, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  long long v2;

  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 544) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 560) = v2;
  *(_OWORD *)(v0 + 576) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 592) = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 73) = *(unsigned char *)(v0 + 72);
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MachineStateObserver.start(), v1, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned __int8 v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unsigned __int8 v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(void);
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unsigned __int8 v77;
  Swift::String v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t);
  uint64_t v128;
  os_log_type_t v129;
  void (*v130)(uint64_t, uint64_t);
  _DWORD *v131;

  if (*(unsigned __int8 *)(v0 + 73) == 255)
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 480);
    id v48 = *(void *)(v0 + 400);
    id v49 = *(void *)(v0 + 376);
    Class v50 = *(void *)(v0 + 320);
    OUTLINED_FUNCTION_27_38();
    v51();
    swift_bridgeObjectRelease();
    v47(v48, v50, v49);
    uint64_t v52 = Logger.logObject.getter();
    uint64_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_1C2F90000, v52, v53, "stopped listening to changes for StateMachine", v54, 2u);
      OUTLINED_FUNCTION_3();
    }
    id v55 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    unint64_t v56 = *(void *)(v0 + 400);
    unint64_t v57 = *(void *)(v0 + 376);
    swift_release();

    v55(v56, v57);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_33_1();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_17_46();
  unint64_t v4 = *(void *)(v0 + 392);
  (*(void (**)(uint64_t, void, void))(v0 + 480))(v4, *(void *)(v0 + 320), *(void *)(v0 + 376));
  uint64_t v5 = OUTLINED_FUNCTION_9_75();
  outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(v5, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v13 = OUTLINED_FUNCTION_9_75();
  outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = Logger.logObject.getter();
  unint64_t v22 = static os_log_type_t.default.getter();
  uint64_t v23 = os_log_type_enabled(v21, v22);
  id v24 = *(unsigned __int8 *)(v0 + 73);
  if (v23)
  {
    uint64_t v129 = v22;
    uint64_t v25 = v0 + 304;
    unint64_t v26 = (_DWORD *)OUTLINED_FUNCTION_37();
    *(void *)(v0 + 304) = swift_slowAlloc();
    uint64_t v131 = v26;
    void *v26 = 136446210;
    if (v24)
    {
      if (v24 == 1)
      {
        unint64_t v27 = *(void *)(v0 + 592);
        OUTLINED_FUNCTION_20_47();
        *(void *)(v0 + 192) = v25;
        *(void *)(v0 + 200) = v26;
        *(void *)(v0 + 208) = v1;
        *(void *)(v0 + 216) = v2;
        *(void *)(v0 + 224) = v4;
        *(void *)(v0 + 232) = v3;
        *(void *)(v0 + 240) = v27;
        *(void *)(v0 + 280) = 0x2064657265746E45;
        *(void *)(v0 + 288) = 0xE800000000000000;
        uint64_t v28 = OUTLINED_FUNCTION_13_66();
        outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(v28, v29, v30, v31, v32, v33, v34, v35);
        unint64_t v36 = OUTLINED_FUNCTION_13_66();
        outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v36, v37, v38, v39, v40, v41, v42, v43);
        v44._uint64_t countAndFlagsBits = CallScreening.State.description.getter();
        String.append(_:)(v44);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_14_61();
        OUTLINED_FUNCTION_14_61();
        uint64_t v45 = *(void *)(v0 + 280);
        uint64_t v46 = *(void *)(v0 + 288);
      }
      else
      {
        uint64_t v79 = OUTLINED_FUNCTION_1_128();
        outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v79, v80, v81, v82, v83, v84, v85, 2u);
        uint64_t v46 = 0xE700000000000000;
        uint64_t v45 = 0x65756C61566F6ELL;
      }
    }
    else
    {
      uint64_t v61 = *(void *)(v0 + 592);
      OUTLINED_FUNCTION_20_47();
      *(void *)(v0 + 80) = v25;
      *(void *)(v0 + 88) = v26;
      *(void *)(v0 + 96) = v1;
      *(void *)(v0 + 104) = v2;
      *(void *)(v0 + 112) = v4;
      *(void *)(v0 + 120) = v3;
      *(void *)(v0 + 128) = v61;
      *(void *)(v0 + 248) = 0x20676E6974697845;
      *(void *)(v0 + 256) = 0xE800000000000000;
      uint64_t v62 = OUTLINED_FUNCTION_15_63();
      outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(v62, v63, v64, v65, v66, v67, v68, v69);
      uint64_t v70 = OUTLINED_FUNCTION_15_63();
      outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v70, v71, v72, v73, v74, v75, v76, v77);
      v78._uint64_t countAndFlagsBits = CallScreening.State.description.getter();
      String.append(_:)(v78);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_16_48();
      OUTLINED_FUNCTION_16_48();
      uint64_t v45 = *(void *)(v0 + 248);
      uint64_t v46 = *(void *)(v0 + 256);
    }
    uint64_t v127 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    id v126 = *(void *)(v0 + 392);
    uint64_t v124 = *(void *)(v0 + 592);
    uint64_t v125 = *(void *)(v0 + 376);
    uint64_t v86 = *(unsigned char *)(v0 + 73);
    *(void *)(v131 + 1) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, (uint64_t *)(v0 + 304));
    swift_bridgeObjectRelease();
    uint64_t v87 = OUTLINED_FUNCTION_21_45();
    outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v87, v88, v89, v90, v91, v92, v124, v86);
    uint64_t v93 = OUTLINED_FUNCTION_21_45();
    outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v93, v94, v95, v96, v97, v98, v124, v86);
    _os_log_impl(&dword_1C2F90000, v21, v129, "StateMachine Reported statemachine update %{public}s", (uint8_t *)v131, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    v127(v126, v125);
  }
  else
  {
    OUTLINED_FUNCTION_17_46();
    uint64_t v130 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    uint64_t v60 = *(void *)(v0 + 392);
    uint64_t v128 = *(void *)(v0 + 376);
    OUTLINED_FUNCTION_10_69();
    OUTLINED_FUNCTION_10_69();

    v130(v60, v128);
  }
  if (*(unsigned char *)(v0 + 73))
  {
    if (*(unsigned char *)(v0 + 73) == 1)
    {
      uint64_t v99 = OUTLINED_FUNCTION_1_128();
      *(void *)(v0 + 136) = v99;
      *(void *)(v0 + 144) = v100;
      *(void *)(v0 + 152) = v101;
      *(void *)(v0 + 160) = v102;
      *(void *)(v0 + 168) = v103;
      *(void *)(v0 + 176) = v104;
      *(void *)(v0 + 184) = v105;
      outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v99, v100, v101, v102, v103, v104, v105, 1u);
      uint64_t v106 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v106;
      char *v106 = v0;
      v106[1] = closure #1 in CallScreening.MachineStateObserver.start();
      OUTLINED_FUNCTION_33_1();
      return CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)(v107, v108, v109);
    }
  }
  else
  {
    uint64_t v112 = OUTLINED_FUNCTION_1_128();
    outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v112, v113, v114, v115, v116, v117, v118, 0);
  }
  *(void *)(v0 + 512) = static CKStateMachineActor.shared;
  *(void *)(v0 + 520) = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator);
  uint64_t v119 = swift_task_alloc();
  uint64_t v120 = (void *)OUTLINED_FUNCTION_29_31(v119);
  *uint64_t v120 = v121;
  v120[1] = closure #1 in CallScreening.MachineStateObserver.start();
  OUTLINED_FUNCTION_28_34();
  OUTLINED_FUNCTION_33_1();
  return MEMORY[0x1F4187C78](v122);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  *(void *)(v0 + 312) = *(void *)(v0 + 536);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v1 = MEMORY[0x1E4FBC248];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x1E4FBC278];
  return MEMORY[0x1F41868E8](v2, v1, v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = *(void *)(v1 + 448);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_2_2();
  *unint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MachineStateObserver.start(), v2, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = OUTLINED_FUNCTION_1_128();
  outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v1, v2, v3, v4, v5, v6, v7, 1u);
  uint64_t v8 = OUTLINED_FUNCTION_1_128();
  outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v8, v9, v10, v11, v12, v13, v14, *(unsigned char *)(v0 + 73));
  *(void *)(v0 + 512) = static CKStateMachineActor.shared;
  *(void *)(v0 + 520) = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator);
  uint64_t v15 = swift_task_alloc();
  uint64_t v16 = (void *)OUTLINED_FUNCTION_29_31(v15);
  *uint64_t v16 = v17;
  v16[1] = closure #1 in CallScreening.MachineStateObserver.start();
  unint64_t v18 = OUTLINED_FUNCTION_28_34();
  return MEMORY[0x1F4187C78](v18);
}

uint64_t outlined init with copy of CallScreening.MachineStateObserver(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CallScreening.MachineStateObserver(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in closure #1 in CallScreening.MachineStateObserver.start()(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1C2F90000, v7, v8, "MainAnsweringMachine: Recieved expiration notice for background task.", v9, 2u);
    MEMORY[0x1C87760E0](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[39] = a3;
  unsigned char v4[40] = v3;
  v4[37] = a1;
  v4[38] = a2;
  uint64_t v5 = type metadata accessor for Logger();
  v4[41] = v5;
  v4[42] = *(void *)(v5 - 8);
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:), 0, 0);
}

uint64_t CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)()
{
  uint64_t v26 = v0;
  outlined init with take of CallScreening.State(*(long long **)(v0 + 296), v0 + 16);
  unint64_t v1 = *(void *)(v0 + 64);
  switch(v1 >> 61)
  {
    case 2uLL:
      OUTLINED_FUNCTION_34_25(v1);
      uint64_t v5 = *(void *)(v0 + 32);
      unint64_t v4 = *(void *)(v0 + 40);
      goto LABEL_5;
    case 3uLL:
    case 4uLL:
      OUTLINED_FUNCTION_34_25(v1);
      uint64_t v5 = *(void *)(v0 + 16);
      unint64_t v4 = *(void *)(v0 + 24);
LABEL_5:
      *uint64_t v3 = v5;
      v3[1] = v4;
      swift_bridgeObjectRetain();
      if (v4) {
        goto LABEL_6;
      }
      goto LABEL_14;
    case 5uLL:
      OUTLINED_FUNCTION_34_25(v1);
      long long v15 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 16);
      *(_OWORD *)(v0 + 200) = v15;
      *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 48);
      outlined init with take of CallScreening.EndingAction(v16, v0 + 256);
      outlined init with take of CallScreening.EndingAction((long long *)(v0 + 256), v0 + 232);
      uint64_t v17 = *(void **)(v0 + 304);
      if (*(unsigned __int8 *)(v0 + 248) > 1u)
      {
        *uint64_t v17 = 0;
        v17[1] = 0;
LABEL_14:
        OUTLINED_FUNCTION_24_42();
        *(void *)(v0 + 448) = OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_47_4();
        OUTLINED_FUNCTION_35_0();
        goto LABEL_15;
      }
      uint64_t v18 = *(void *)(v0 + 240);
      *uint64_t v17 = *(void *)(v0 + 232);
      v17[1] = v18;
      outlined retain of CallScreening.EndingAction(v0 + 256);
      id v19 = *(uint64_t **)(v0 + 304);
      uint64_t v5 = *v19;
      unint64_t v4 = v19[1];
      if (!v4) {
        goto LABEL_14;
      }
LABEL_6:
      uint64_t v6 = OUTLINED_FUNCTION_5_104();
      v7(v6);
      swift_bridgeObjectRetain_n();
      os_log_type_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      BOOL v10 = os_log_type_enabled(v8, v9);
      uint64_t v11 = *(void *)(v0 + 352);
      uint64_t v13 = *(void *)(v0 + 328);
      uint64_t v12 = *(void *)(v0 + 336);
      if (v10)
      {
        uint64_t v24 = *(void *)(v0 + 352);
        os_log_type_t v14 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v14 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 288) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v4, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C2F90000, v8, v9, "MainAnsweringMachine: Starting background task due to tracked call %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v13);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      }
      type metadata accessor for MainActor();
      *(void *)(v0 + 368) = OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_47_4();
      OUTLINED_FUNCTION_35_0();
LABEL_15:
      OUTLINED_FUNCTION_39_1();
      return MEMORY[0x1F4188298](v20, v21, v22);
    default:
      uint64_t v2 = *(void **)(v0 + 304);
      OUTLINED_FUNCTION_34_25(v1);
      type metadata accessor for MainActor();
      *uint64_t v2 = 0;
      v2[1] = 0;
      *(void *)(v0 + 360) = static MainActor.shared.getter();
      OUTLINED_FUNCTION_47_4();
      OUTLINED_FUNCTION_35_0();
      goto LABEL_15;
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  BackgroundTask.end()();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v0, v1, v2);
}

{
  void *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  id v19 = v0;
  unint64_t v1 = (uint64_t *)v0[38];
  uint64_t v2 = v1[1];
  if (v2)
  {
    uint64_t v3 = *v1;
    unint64_t v4 = OUTLINED_FUNCTION_5_104();
    v5(v4);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = Logger.logObject.getter();
    uint64_t v7 = static os_log_type_t.default.getter();
    os_log_type_t v8 = os_log_type_enabled(v6, v7);
    os_log_type_t v9 = v0[44];
    uint64_t v11 = v0[41];
    BOOL v10 = v0[42];
    if (v8)
    {
      uint64_t v17 = v0[44];
      uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_bridgeObjectRetain();
      v0[36] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v2, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v6, v7, "MainAnsweringMachine: Starting background task due to tracked call %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v11);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    type metadata accessor for MainActor();
    v0[46] = OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_35_0();
  }
  else
  {
    OUTLINED_FUNCTION_24_42();
    v0[56] = OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_35_0();
  }
  OUTLINED_FUNCTION_39_1();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  BackgroundTask.start()();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v0, v1, v2);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_17_2();
  unint64_t v1 = (void *)v0[38];
  uint64_t v2 = v1[1];
  v0[47] = v2;
  uint64_t v3 = v0[40];
  if (v2)
  {
    v0[48] = *v1;
    unint64_t v4 = type metadata accessor for CallScreening.MachineStateObserver(0);
    v0[49] = v4;
    v0[50] = *(void *)(v3 + *(int *)(v4 + 24));
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    v0[51] = static MainActor.shared.getter();
  }
  else
  {
    uint64_t v5 = type metadata accessor for CallScreening.MachineStateObserver(0);
    v0[54] = v5;
    v0[55] = *(void *)(v3 + *(int *)(v5 + 24));
    type metadata accessor for MainActor();
    v0[56] = OUTLINED_FUNCTION_57();
  }
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_39_1();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = *(void **)(v0 + 376);
  unint64_t v1 = *(void *)(v0 + 384);
  swift_release();
  v3._uint64_t countAndFlagsBits = 0x6168436574617453;
  v3._object = (void *)0xEB0000000065676ELL;
  v4._uint64_t countAndFlagsBits = v1;
  v4._object = v2;
  CallStatusService.currentStatus(updateSource:for:)((ConversationKit::AnsweringMachineCallStatus *)(v0 + 128), v3, v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  OUTLINED_FUNCTION_17_2();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v1;
  *unint64_t v1 = v0;
  v1[1] = CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:);
  return CKStateMachine<>.update(with:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  unint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *(void *)(v3 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_5_8();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
  else
  {
    outlined release of AnsweringMachineCallStatus(v3 + 128);
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    return v9();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  *(void *)(v0 + 456) = CallStatusService.currentStatusForAllCalls()();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  long long v3;
  long long v4;
  long long v5;
  void *v6;
  uint64_t (*v8)(void);
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  unint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 464) = v2;
  if (v2)
  {
    *(_DWORD *)(v0 + 124) = *(_DWORD *)(*(void *)(v0 + 432) + 20);
    *(void *)(v0 + 472) = 0;
    unint64_t v4 = *(_OWORD *)(v1 + 48);
    uint64_t v3 = *(_OWORD *)(v1 + 64);
    uint64_t v5 = *(_OWORD *)(v1 + 32);
    *(unsigned char *)(v0 + 120) = *(unsigned char *)(v1 + 80);
    *(_OWORD *)(v0 + 88) = v4;
    *(_OWORD *)(v0 + 104) = v3;
    *(_OWORD *)(v0 + 72) = v5;
    outlined retain of AnsweringMachineCallStatus(v0 + 72);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v6;
    *uint64_t v6 = v0;
    v6[1] = CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:);
    return CKStateMachine<>.update(with:)();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    return v8();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  unint64_t v4 = v2 + 72;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 488) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  outlined release of AnsweringMachineCallStatus(v4);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  long long v5;
  long long v6;
  long long v7;
  void *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  unint64_t v1 = *(void *)(v0 + 472) + 1;
  if (v1 == *(void *)(v0 + 464))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    return v2();
  }
  else
  {
    *(void *)(v0 + 472) = v1;
    unint64_t v4 = *(void *)(v0 + 456) + 56 * v1;
    uint64_t v6 = *(_OWORD *)(v4 + 48);
    uint64_t v5 = *(_OWORD *)(v4 + 64);
    uint64_t v7 = *(_OWORD *)(v4 + 32);
    *(unsigned char *)(v0 + 120) = *(unsigned char *)(v4 + 80);
    *(_OWORD *)(v0 + 88) = v6;
    *(_OWORD *)(v0 + 104) = v5;
    *(_OWORD *)(v0 + 72) = v7;
    outlined retain of AnsweringMachineCallStatus(v0 + 72);
    os_log_type_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v8;
    *os_log_type_t v8 = v0;
    v8[1] = CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:);
    return CKStateMachine<>.update(with:)();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t (*v14)(void);
  uint64_t v16;

  outlined release of AnsweringMachineCallStatus(v0 + 128);
  uint64_t v2 = *(void **)(v0 + 424);
  uint64_t v3 = OUTLINED_FUNCTION_5_104();
  v4(v3);
  uint64_t v5 = v2;
  uint64_t v6 = v2;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    OUTLINED_FUNCTION_37();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    OUTLINED_FUNCTION_33_27(5.8381e-34);
    BOOL v10 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_23_44(v10);
    *os_log_type_t v9 = v1;

    OUTLINED_FUNCTION_52_1(&dword_1C2F90000, v11, v12, "Failed to update stateMachine with callstatus error: %{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  OUTLINED_FUNCTION_27_38();
  v13();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v14();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t (*v14)(void);
  uint64_t v16;

  uint64_t v2 = *(void **)(v0 + 488);
  uint64_t v3 = OUTLINED_FUNCTION_5_104();
  v4(v3);
  uint64_t v5 = v2;
  uint64_t v6 = v2;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    OUTLINED_FUNCTION_37();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    OUTLINED_FUNCTION_33_27(5.8381e-34);
    BOOL v10 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_23_44(v10);
    *os_log_type_t v9 = v1;

    OUTLINED_FUNCTION_52_1(&dword_1C2F90000, v11, v12, "Failed to update stateMachine with callstatus error: %{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  OUTLINED_FUNCTION_27_38();
  v13();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v14();
}

uint64_t sub_1C3473F64()
{
  type metadata accessor for CallScreening.MachineStateObserver(0);
  OUTLINED_FUNCTION_1_6();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0();
  (*(void (**)(unint64_t))(v3 + 8))(v0 + v2);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of CallScreening.MachineStateObserver(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CallScreening.MachineStateObserver(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in CallScreening.MachineStateObserver.start()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for CallScreening.MachineStateObserver(0);
  OUTLINED_FUNCTION_1_1(v4);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = v0 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *os_log_type_t v9 = v1;
  v9[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in CallScreening.MachineStateObserver.start()(v3, v6, v7, v8);
}

uint64_t ObjC metadata update function for BackgroundTask()
{
  return type metadata accessor for BackgroundTask(0);
}

uint64_t type metadata accessor for BackgroundTask(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for BackgroundTask);
}

uint64_t type metadata completion function for BackgroundTask()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CallScreening.MachineStateObserver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C347424C);
}

uint64_t sub_1C347424C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CallScreening.MachineStateObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C34742EC);
}

void sub_1C34742EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1C3474374()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in BackgroundTask.start()()
{
  return closure #1 in BackgroundTask.start()(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

id outlined bridged method (mbgnnn) of @objc UIApplication.beginBackgroundTask(withName:expirationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
  id v7 = objc_msgSend(a4, sel_beginBackgroundTaskWithName_expirationHandler_, v6, a3);

  return v7;
}

uint64_t sub_1C3474418()
{
  type metadata accessor for CallScreening.MachineStateObserver(0);
  OUTLINED_FUNCTION_1_6();
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CallScreening.MachineStateObserver.start()()
{
  uint64_t v1 = type metadata accessor for CallScreening.MachineStateObserver(0);
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return closure #1 in closure #1 in CallScreening.MachineStateObserver.start()(v3);
}

uint64_t outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF) {
    return outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 <= 1u) {
    return outlined copy of CallScreening.State(result, a2, a3, a4, a5, a6, a7);
  }
  return result;
}

uint64_t outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF) {
    return outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 <= 1u) {
    return outlined consume of CallScreening.State(result, a2, a3, a4, a5, a6, a7);
  }
  return result;
}

id TUConversation.joinConversationRequest()()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBE8]), sel_initWithConversation_originatingUIType_, v0, 20);
  objc_msgSend(v1, sel_setWantsStagingArea_, 1);
  objc_msgSend(v1, sel_setAvMode_, objc_msgSend(v0, sel_resolvedAudioVideoMode));
  objc_msgSend(v1, sel_setVideoEnabled_, objc_msgSend(v0, sel_resolvedAudioVideoMode) == (id)2);
  return v1;
}

double SystemApertureIcon.init(asset:accessibilityLabel:wantsPillForDetachedAppearance:leadingOffsetForConcentricWhenCompact:)@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  outlined init with take of ConversationControlsType(a1, v15);
  uint64_t v11 = v16;
  char v12 = v17;
  double result = *(double *)v15;
  long long v14 = v15[1];
  *(_OWORD *)a5 = v15[0];
  *(_OWORD *)(a5 + 16) = v14;
  *(void *)(a5 + 32) = v11;
  *(unsigned char *)(a5 + 40) = v12;
  *(void *)(a5 + 48) = a2;
  *(void *)(a5 + 56) = a3;
  *(unsigned char *)(a5 + 64) = a4;
  *(double *)(a5 + 72) = a6;
  return result;
}

char *SystemApertureIconView.__allocating_init(icon:isDetached:)(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return SystemApertureIconView.init(icon:isDetached:)(a1, a2);
}

uint64_t static SystemApertureIconAsset.== infix(_:_:)(long long *a1, long long *a2)
{
  outlined init with take of ConversationControlsType(a1, &v22);
  if (v26)
  {
    long long v27 = v22;
    id v5 = v23;
    uint64_t v4 = v24;
    uint64_t v6 = v25;
    outlined init with take of ConversationControlsType(a2, &v17);
    if (v21 != 1) {
      goto LABEL_22;
    }
    uint64_t v8 = v18;
    uint64_t v7 = v19;
    uint64_t v9 = v20;
    long long v28 = v27;
    long long v29 = v17;
    BOOL v10 = (void)v27 == (void)v17 && *((void *)&v27 + 1) == *((void *)&v17 + 1);
    if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_22;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    outlined retain of String((uint64_t)&v28);
    swift_bridgeObjectRetain();
    id v11 = v5;
    outlined retain of String((uint64_t)&v29);
    swift_bridgeObjectRetain();
    id v12 = v8;
    if (static NSObject.== infix(_:_:)())
    {
      if (!v6)
      {
        outlined release of String((uint64_t)&v29);
        if (!v9)
        {

          outlined release of String((uint64_t)&v28);
          goto LABEL_29;
        }
        swift_bridgeObjectRelease();

        outlined release of String((uint64_t)&v28);
        goto LABEL_21;
      }
      if (v9)
      {
        if (v4 != v7 || v6 != v9)
        {
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          outlined release of String((uint64_t)&v29);
          swift_bridgeObjectRelease();

          outlined release of String((uint64_t)&v28);
          swift_bridgeObjectRelease();

          if (v14) {
            goto LABEL_30;
          }
          goto LABEL_22;
        }
        outlined release of String((uint64_t)&v29);
        swift_bridgeObjectRelease();

        outlined release of String((uint64_t)&v28);
        swift_bridgeObjectRelease();
LABEL_29:

LABEL_30:
        char v15 = 1;
        return v15 & 1;
      }
      outlined release of String((uint64_t)&v29);
    }
    else
    {
      outlined release of String((uint64_t)&v29);
      swift_bridgeObjectRelease();
    }

    outlined release of String((uint64_t)&v28);
    swift_bridgeObjectRelease();
LABEL_21:

    goto LABEL_22;
  }
  outlined init with take of ConversationControlsType(a2, &v17);
  if (v21)
  {
LABEL_22:
    char v15 = 0;
    return v15 & 1;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  outlined retain of SystemApertureIconAsset((uint64_t)a1, (void (*)(void, void, void, void, void, void))outlined copy of SystemApertureIconAsset);
  outlined retain of SystemApertureIconAsset((uint64_t)a2, (void (*)(void, void, void, void, void, void))outlined copy of SystemApertureIconAsset);
  char v15 = static NSObject.== infix(_:_:)();
  outlined retain of SystemApertureIconAsset((uint64_t)a2, (void (*)(void, void, void, void, void, void))outlined consume of SystemApertureIconAsset);
  outlined retain of SystemApertureIconAsset((uint64_t)a1, (void (*)(void, void, void, void, void, void))outlined consume of SystemApertureIconAsset);
  return v15 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureIconAsset(long long *a1, long long *a2)
{
  outlined init with take of ConversationControlsType(a1, v4);
  outlined init with take of ConversationControlsType(a2, v5);
  return static SystemApertureIconAsset.== infix(_:_:)(v4, v5) & 1;
}

uint64_t SystemApertureIcon.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SystemApertureIconAsset(v1, a1);
}

uint64_t SystemApertureIcon.accessibilityLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemApertureIcon.wantsPillForDetachedAppearance.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

double SystemApertureIcon.leadingOffsetForConcentricWhenCompact.getter()
{
  return *(double *)(v0 + 72);
}

void SystemApertureIcon.leadingOffsetForConcentricWhenCompact.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t (*SystemApertureIcon.leadingOffsetForConcentricWhenCompact.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL static SystemApertureIcon.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  outlined init with take of ConversationControlsType((long long *)a1, v8);
  outlined init with take of ConversationControlsType((long long *)a2, v7);
  if ((static SystemApertureIconAsset.== infix(_:_:)(v8, v7) & 1) == 0) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if ((*(unsigned __int8 *)(a1 + 64) ^ *(unsigned __int8 *)(a2 + 64))) {
      return 0;
    }
    return *(double *)(a1 + 72) == *(double *)(a2 + 72);
  }
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureIcon(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static SystemApertureIcon.== infix(_:_:)((uint64_t)v4, (uint64_t)__dst);
}

void *key path getter for SystemApertureIconView.icon : SystemApertureIconView@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x68))(v4);
  return memcpy(a2, v4, 0x50uLL);
}

uint64_t key path setter for SystemApertureIconView.icon : SystemApertureIconView(void *__src, void **a2)
{
  memcpy(v5, __src, sizeof(v5));
  uint64_t v3 = *(uint64_t (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x70);
  outlined retain of SystemApertureIcon((uint64_t)v5);
  return v3(v5);
}

id SystemApertureIconView.icon.didset(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v7 = *(void **)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  char v9 = *(unsigned char *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  int v16 = *(unsigned __int8 *)(v3 + 64);
  double v12 = *(double *)(v3 + 72);
  *(void *)&long long v18 = *(void *)v3;
  char v5 = (void *)v18;
  *((void *)&v18 + 1) = v4;
  uint64_t v19 = v7;
  uint64_t v20 = v6;
  uint64_t v21 = v8;
  char v22 = v9;
  outlined init with take of ConversationControlsType((long long *)a1, v17);
  outlined copy of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
  swift_bridgeObjectRetain();
  if ((static SystemApertureIconAsset.== infix(_:_:)(&v18, v17) & 1) == 0)
  {
    outlined consume of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
    swift_bridgeObjectRelease();
    return SystemApertureIconView.updateIconView()();
  }
  if (v10 == *(void *)(a1 + 48) && v11 == *(void *)(a1 + 56))
  {
    outlined consume of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
    id result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined consume of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
    id result = (id)swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return SystemApertureIconView.updateIconView()();
    }
  }
  if (((v16 ^ *(unsigned __int8 *)(a1 + 64)) & 1) != 0 || v12 != *(double *)(a1 + 72)) {
    return SystemApertureIconView.updateIconView()();
  }
  return result;
}

uint64_t SystemApertureIconView.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon;
  swift_beginAccess();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  char v9 = *(unsigned char *)(v3 + 40);
  uint64_t v11 = *(void *)(v3 + 48);
  uint64_t v10 = *(void *)(v3 + 56);
  char v14 = *(unsigned char *)(v3 + 64);
  uint64_t v12 = *(void *)(v3 + 72);
  outlined copy of SystemApertureIconAsset(*(void **)v3, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v12;
  return swift_bridgeObjectRetain();
}

uint64_t SystemApertureIconView.icon.setter(const void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon);
  swift_beginAccess();
  memcpy(__dst, v3, sizeof(__dst));
  uint64_t v4 = *v3;
  uint64_t v5 = (uint64_t)v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = (uint64_t)v3[3];
  uint64_t v8 = (uint64_t)v3[4];
  char v9 = *((unsigned char *)v3 + 40);
  memcpy(v3, a1, 0x50uLL);
  outlined retain of SystemApertureIcon((uint64_t)__dst);
  outlined retain of SystemApertureIcon((uint64_t)a1);
  outlined consume of SystemApertureIconAsset(v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  SystemApertureIconView.icon.didset((uint64_t)__dst);
  outlined release of SystemApertureIcon((uint64_t)a1);
  return outlined release of SystemApertureIcon((uint64_t)__dst);
}

void (*SystemApertureIconView.icon.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x110uLL);
  *a1 = v3;
  v3[33] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon;
  swift_beginAccess();
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = *(void **)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 32);
  char v10 = *(unsigned char *)(v4 + 40);
  uint64_t v11 = *(void *)(v4 + 48);
  uint64_t v12 = *(void *)(v4 + 56);
  char v13 = *(unsigned char *)(v4 + 64);
  uint64_t v14 = *(void *)(v4 + 72);
  v3[20] = *(void *)v4;
  v3[21] = v6;
  v3 += 20;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  *((unsigned char *)v3 + 40) = v10;
  v3[6] = v11;
  v3[7] = v12;
  *((unsigned char *)v3 + 64) = v13;
  v3[9] = v14;
  outlined copy of SystemApertureIconAsset(v5, v6, v7, v8, v9, v10);
  swift_bridgeObjectRetain();
  return SystemApertureIconView.icon.modify;
}

void SystemApertureIconView.icon.modify(void **a1, char a2)
{
  uint64_t v3 = (char *)*a1;
  uint64_t v4 = (char *)*a1 + 160;
  if (a2)
  {
    memcpy(*a1, v4, 0x50uLL);
    outlined retain of SystemApertureIcon((uint64_t)v3);
    SystemApertureIconView.icon.setter(v3);
    outlined consume of SystemApertureIconAsset(*((void **)v3 + 20), *((void *)v3 + 21), *((void **)v3 + 22), *((void *)v3 + 23), *((void *)v3 + 24), v3[200]);
    swift_bridgeObjectRelease();
  }
  else
  {
    memcpy(v3 + 80, v4, 0x50uLL);
    SystemApertureIconView.icon.setter(v3 + 80);
  }
  free(v3);
}

void SystemApertureIconView.iconView.setter(uint64_t a1, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView);
  *(void *)uint64_t v3 = a1;
  *(unsigned char *)(v3 + 8) = a2 & 1;
}

char *SystemApertureIconView.init(icon:isDetached:)(uint64_t a1, char a2)
{
  swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView];
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  uint64_t v7 = v2;
  *(void *)uint64_t v5 = objc_msgSend(v6, sel_init);
  v5[8] = 0;
  memcpy(&v7[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon], (const void *)a1, 0x50uLL);
  if (a2 & 1) != 0 && (*(unsigned char *)(a1 + 64)) {
    double v8 = 45.0;
  }
  else {
    double v8 = 1.0;
  }
  *(double *)&v7[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_minimumWidth] = v8;
  outlined retain of SystemApertureIcon(a1);

  v24.receiver = v7;
  v24.super_class = (Class)type metadata accessor for SystemApertureIconView();
  id v9 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = one-time initialization token for conversationControls;
  uint64_t v11 = (char *)v9;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.conversationControls);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    char v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)char v15 = 136446210;
    uint64_t v17 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v13, v14, "[SystemAperture] %{public}s created", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v16, -1, -1);
    MEMORY[0x1C87760E0](v15, -1, -1);
  }

  SystemApertureIconView.updateIconView()();
  objc_msgSend(v11, sel_addSubview_, *(void *)&v11[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView]);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = v11;
  swift_bridgeObjectRetain();
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(v19, v20, v21);
  outlined release of SystemApertureIcon(a1);
  swift_bridgeObjectRelease();

  return v21;
}

uint64_t outlined retain of SystemApertureIconAsset(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t outlined init with copy of SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for SystemApertureIconView()
{
  return self;
}

id SystemApertureIconView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureIconView.init(frame:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView];
  *(void *)uint64_t v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  v1[8] = 0;

  OUTLINED_FUNCTION_2_113();
  __break(1u);
}

id SystemApertureIconView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureIconView.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView];
  *(void *)uint64_t v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  v1[8] = 0;

  OUTLINED_FUNCTION_2_113();
  __break(1u);
}

Swift::Void __swiftcall SystemApertureIconView.layoutSubviews()()
{
  uint64_t v1 = type metadata accessor for FloatingPointRoundingRule();
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  uint64_t v7 = v6 - v5;
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for SystemApertureIconView();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView;
  id v9 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v9, sel_sizeThatFits_, v10, v11);
  double v13 = v12;
  double v15 = v14;

  objc_msgSend(v0, sel_bounds);
  double v16 = (CGRectGetWidth(v24) - v13) * 0.5;
  objc_msgSend(v0, sel_bounds);
  double v17 = (CGRectGetHeight(v25) - v15) * 0.5;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, *MEMORY[0x1E4FBBEB0], v1);
  id v18 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v18, sel_displayScale);
  double v20 = v19;
  double v21 = CGFloat.rounded(_:toScale:)(v7, v19, v16);
  double v22 = CGFloat.rounded(_:toScale:)(v7, v20, v17);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  objc_msgSend(*(id *)&v0[v8], sel_setFrame_, v21, v22, v13, v15);
}

CGSize __swiftcall SystemApertureIconView.sizeThatFits(_:)(CGSize a1)
{
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView), sel_sizeThatFits_, a1.width, a1.height);
  if (v2 <= *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_minimumWidth)) {
    double v2 = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_minimumWidth);
  }
  result.CGFloat height = v3;
  result.CGFloat width = v2;
  return result;
}

id SystemApertureIconView.sizeThatFits(_:for:)()
{
  return objc_msgSend(v0, sel_sizeThatFits_);
}

void *SystemApertureIconView.preferredLayoutMargins.getter@<X0>(uint64_t a1@<X8>)
{
  void (*v3)(long long *__return_ptr);
  char v4;
  void *result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  long long v9[5];
  void v10[10];
  long long v11[3];
  long long v12;
  char v13;

  double v3 = *(void (**)(long long *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68);
  v3(v9);
  outlined init with take of ConversationControlsType(v9, v11);
  outlined retain of SystemApertureIconAsset((uint64_t)v11, (void (*)(void, void, void, void, void, void))outlined copy of SystemApertureIconAsset);
  outlined release of SystemApertureIcon((uint64_t)v9);
  outlined init with take of ConversationControlsType(v11, &v12);
  uint64_t v4 = v13;
  CGSize result = (void *)outlined retain of SystemApertureIconAsset((uint64_t)v11, (void (*)(void, void, void, void, void, void))outlined consume of SystemApertureIconAsset);
  if (v4)
  {
    uint64_t v1 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0x4025000000000000;
    uint64_t v8 = 0x4025000000000000;
  }
  else
  {
    ((void (*)(void *__return_ptr, void *))v3)(v10, result);
    outlined release of SystemApertureIcon((uint64_t)v10);
    uint64_t v7 = v10[9];
    CGSize result = v1;
    uint64_t v8 = 0;
    uint64_t v6 = 1;
  }
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v6;
  return result;
}

void SystemApertureIconView.updateIconView(using:)(uint64_t *a1)
{
  double v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = (void *)a1[2];
  objc_allocWithZone(MEMORY[0x1E4F4F8A0]);
  swift_bridgeObjectRetain();
  id v7 = v6;
  id v8 = @nonobjc BSUICAPackageView.init(packageName:in:)(v4, v5, v6);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView], sel_removeFromSuperview);
    objc_msgSend(v2, sel_addSubview_, v9);
    uint64_t v10 = a1[4];
    if (v10)
    {
      uint64_t v11 = a1[3];
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      swift_bridgeObjectRetain();
      uint64_t v47 = static OS_dispatch_queue.main.getter();
      uint64_t v12 = type metadata accessor for DispatchTime();
      id v48 = v42;
      uint64_t v45 = v12;
      OUTLINED_FUNCTION_5_3();
      uint64_t v14 = v13;
      uint64_t v16 = MEMORY[0x1F4188790](v15);
      uint64_t v43 = v42;
      MEMORY[0x1F4188790](v16);
      id v18 = (char *)v42 - v17;
      static DispatchTime.now()();
      MEMORY[0x1C8772E20](v18, 1.0);
      double v19 = *(void (**)(void *, uint64_t))(v14 + 8);
      uint64_t v44 = v14 + 8;
      uint64_t v46 = v19;
      v19(v18, v12);
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      double v21 = (void *)swift_allocObject();
      v21[2] = v20;
      v21[3] = v9;
      v21[4] = v11;
      v21[5] = v10;
      aBlock[4] = partial apply for closure #1 in SystemApertureIconView.updateIconView(using:);
      aBlock[5] = v21;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      uint64_t aBlock[3] = &block_descriptor_80;
      double v22 = _Block_copy(aBlock);
      id v49 = v2;
      objc_super v23 = v22;
      id v24 = v9;
      swift_release();
      uint64_t v25 = type metadata accessor for DispatchQoS();
      v42[2] = v42;
      OUTLINED_FUNCTION_5_3();
      uint64_t v27 = v26;
      MEMORY[0x1F4188790](v28);
      OUTLINED_FUNCTION_21();
      uint64_t v31 = v30 - v29;
      static DispatchQoS.unspecified.getter();
      uint64_t v32 = type metadata accessor for DispatchWorkItemFlags();
      v42[1] = v42;
      OUTLINED_FUNCTION_5_3();
      uint64_t v34 = v33;
      MEMORY[0x1F4188790](v35);
      OUTLINED_FUNCTION_21();
      uint64_t v38 = v37 - v36;
      aBlock[0] = MEMORY[0x1E4FBC860];
      lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v39 = v43;
      uint64_t v40 = (void *)v47;
      MEMORY[0x1C8773B10](v43, v31, v38, v23);
      _Block_release(v23);

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v38, v32);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v25);
      v46(v39, v45);
    }
    id v41 = v9;
    SystemApertureIconView.iconView.setter((uint64_t)v9, 1);
  }
}

void closure #1 in SystemApertureIconView.updateIconView(using:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](v7);
  if (v8)
  {
    id v9 = (void *)v8;
    if (*(void **)(v8 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView) == a2) {
      outlined bridged method (mbgnn) of @objc BSUICAPackageView.setState(_:)(a3, a4, a2);
    }
  }
}

id SystemApertureIconView.updateIconView()()
{
  void (*v1)(long long *__return_ptr);
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  long long v12[5];
  void v13[10];
  long long v14[3];
  _OWORD v15[2];
  uint64_t v16;
  long long v17;
  long long v18;
  uint64_t v19;
  char v20;
  long long v21;
  long long v22;
  uint64_t v23;
  long long v24;
  unsigned char v25[24];

  uint64_t v1 = *(void (**)(long long *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68);
  v1(v12);
  outlined init with take of ConversationControlsType(v12, v14);
  outlined retain of SystemApertureIconAsset((uint64_t)v14, (void (*)(void, void, void, void, void, void))outlined copy of SystemApertureIconAsset);
  outlined release of SystemApertureIcon((uint64_t)v12);
  double v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView);
  double v3 = *((unsigned char *)v0 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView + 8);
  outlined init with take of ConversationControlsType(v14, &v17);
  if (v20)
  {
    double v21 = v17;
    double v22 = v18;
    objc_super v23 = v19;
    v15[0] = v17;
    v15[1] = v18;
    uint64_t v16 = v19;
    SystemApertureIconView.updateIconView(using:)((uint64_t *)v15);
    id v24 = v21;
    outlined release of String((uint64_t)&v24);

    outlined init with take of String?((uint64_t)&v22 + 8, (uint64_t)v25);
    uint64_t v4 = outlined release of String((uint64_t)v25);
  }
  else
  {
    uint64_t v5 = v17;
    if (v3)
    {
      uint64_t v6 = v2;
      objc_msgSend(v6, sel_removeFromSuperview);
      uint64_t v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
      objc_msgSend(v7, sel_setImage_, v5);
      objc_msgSend(v0, sel_addSubview_, v7);
      uint64_t v8 = v7;
      SystemApertureIconView.iconView.setter((uint64_t)v7, 0);
    }
    else
    {
      objc_msgSend(v2, sel_setImage_, (void)v17);
    }
    uint64_t v4 = outlined retain of SystemApertureIconAsset((uint64_t)v14, (void (*)(void, void, void, void, void, void))outlined consume of SystemApertureIconAsset);
  }
  ((void (*)(void *__return_ptr, uint64_t))v1)(v13, v4);
  id v9 = v13[6];
  uint64_t v10 = v13[7];
  swift_bridgeObjectRetain();
  outlined release of SystemApertureIcon((uint64_t)v13);
  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v9, v10, v0);
  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t SystemApertureIconView.shouldReplace(_:)(void *a1)
{
  void *(*v6)(void *__return_ptr);
  id v7;
  void *v8;
  char v9;
  void v11[10];
  void v12[10];

  type metadata accessor for SystemApertureIconView();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v6 = *(void *(**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68);
    uint64_t v7 = a1;
    uint64_t v8 = v6(v11);
    (*(void (**)(void *__return_ptr, void *))((*v5 & *v4) + 0x68))(v12, v8);
    LOBYTE(v4) = static SystemApertureIcon.== infix(_:_:)((uint64_t)v11, (uint64_t)v12);

    outlined release of SystemApertureIcon((uint64_t)v12);
    outlined release of SystemApertureIcon((uint64_t)v11);
    id v9 = v4 ^ 1;
  }
  else
  {
    id v9 = 1;
  }
  return v9 & 1;
}

id SystemApertureIconView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemApertureIconView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureAccessoryView.preferredLayoutMargins.getter in conformance SystemApertureIconView@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA8))(v4);
  return outlined init with take of SystemApertureLayoutMargins((uint64_t)v4, a1);
}

uint64_t protocol witness for SystemApertureAccessoryView.shouldReplace(_:) in conformance SystemApertureIconView()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

id @nonobjc BSUICAPackageView.init(packageName:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v6 = objc_msgSend(v3, sel_initWithPackageName_inBundle_, v5, a3);

  return v6;
}

void destroy for SystemApertureIconAsset(uint64_t a1)
{
}

uint64_t initializeWithCopy for SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v4, v5, v6, v7, v8);
  id v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  outlined consume of SystemApertureIconAsset(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;
  outlined consume of SystemApertureIconAsset(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureIconAsset(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureIconAsset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)CGSize result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for SystemApertureIconAsset(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t destructiveInjectEnumTag for SystemApertureIconAsset(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureIconAsset()
{
  return &type metadata for SystemApertureIconAsset;
}

uint64_t destroy for SystemApertureIcon(uint64_t a1)
{
  outlined consume of SystemApertureIconAsset(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SystemApertureIcon(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SystemApertureIcon(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void **)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void **)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 40);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  outlined consume of SystemApertureIconAsset(v10, v11, v12, v13, v14, v15);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for SystemApertureIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void **)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  outlined consume of SystemApertureIconAsset(v6, v7, v8, v9, v10, v11);
  uint64_t v13 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureIcon(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)CGSize result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureIcon()
{
  return &type metadata for SystemApertureIcon;
}

uint64_t method lookup function for SystemApertureIconView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SystemApertureIconView);
}

uint64_t dispatch thunk of SystemApertureIconView.icon.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SystemApertureIconView.icon.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_6_16(a1);
  OUTLINED_FUNCTION_1_35();
  return v1();
}

uint64_t dispatch thunk of SystemApertureIconView.icon.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SystemApertureIconView.__allocating_init(icon:isDetached:)(uint64_t a1)
{
  OUTLINED_FUNCTION_6_16(a1);
  OUTLINED_FUNCTION_1_35();
  return v1();
}

uint64_t dispatch thunk of SystemApertureIconView.sizeThatFits(_:for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SystemApertureIconView.preferredLayoutMargins.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SystemApertureIconView.shouldReplace(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t initializeBufferWithCopyOfBuffer for SystemApertureIconView.IconView(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SystemApertureIconView.IconView(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for SystemApertureIconView.IconView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

void *type metadata accessor for SystemApertureIconView.IconView()
{
  return &unk_1F1EADB28;
}

uint64_t sub_1C3476B04()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C3476B3C()
{
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in SystemApertureIconView.updateIconView(using:)()
{
  closure #1 in SystemApertureIconView.updateIconView(using:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id outlined bridged method (mbgnn) of @objc BSUICAPackageView.setState(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  char v4 = (void *)MEMORY[0x1C87730B0]();
  id v5 = objc_msgSend(a3, sel_setState_, v4);

  return v5;
}

uint64_t outlined init with take of String?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TUConversationManager.conversation(with:)(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_activeConversations);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  _sSo14TUConversationCSo8NSObjectCSH10ObjectiveCWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v8[2] = a1;
  specialized Sequence.first(where:)(partial apply for closure #1 in TUConversationManager.conversation(with:), (uint64_t)v8, v4);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t closure #1 in TUConversationManager.conversation(with:)(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_UUID);
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  char v6 = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t partial apply for closure #1 in TUConversationManager.conversation(with:)(id *a1)
{
  return closure #1 in TUConversationManager.conversation(with:)(a1) & 1;
}

uint64_t protocol witness for ConversationManager.activatedConversationLinks.getter in conformance TUConversationManager()
{
  return @nonobjc TUConversationManager.activatedConversationLinks.getter();
}

uint64_t @nonobjc TUConversationManager.activatedConversationLinks.getter()
{
  id v1 = objc_msgSend(v0, sel_activatedConversationLinks);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  _sSo14TUConversationCSo8NSObjectCSH10ObjectiveCWlTm_1(&lazy protocol witness table cache variable for type TUConversationLink and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id protocol witness for ConversationManager.add(_:queue:) in conformance TUConversationManager(uint64_t a1, uint64_t a2)
{
  return @nonobjc TUConversationManager.add(_:queue:)(a1, a2);
}

uint64_t dispatch thunk of ConversationManager.activatedConversationLinks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationManager.add(_:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

id @nonobjc TUConversationManager.add(_:queue:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(v2, sel_addDelegate_queue_, a1, a2);
}

uint64_t _sSo14TUConversationCSo8NSObjectCSH10ObjectiveCWlTm_1(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void CornerButtonViews.changeLayoutButton.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*CornerButtonViews.changeLayoutButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *CornerButtonViews.changeLayoutButtonBackgroundView.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void CornerButtonViews.changeLayoutButtonBackgroundView.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*CornerButtonViews.changeLayoutButtonBackgroundView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *CornerButtonViews.deskViewButton.getter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  return a3;
}

void CornerButtonViews.deskViewButton.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*CornerButtonViews.deskViewButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *CornerButtonViews.stackView.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  return a4;
}

void CornerButtonViews.stackView.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*CornerButtonViews.stackView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.createCornerButtonsViews(listViewControllerParticipantCount:)(uint64_t a1)
{
  id v2 = MultiwayViewController.createChangeLayoutButton()();
  if (static Platform.current.getter())
  {
    id v3 = 0;
  }
  else
  {
    id v4 = objc_allocWithZone((Class)type metadata accessor for ButtonGradientBackgroundView());
    id v3 = ButtonGradientBackgroundView.init(participantCount:)(a1);
  }
  if (static Platform.current.getter() == 2
    || !static Platform.current.getter() && (MultiwayViewController.layoutIdiom.getter(&v6), !v6))
  {
    if (v3) {
      objc_msgSend(v3, sel_setHidden_, 1);
    }
    objc_msgSend(v2, sel_setHidden_, 1);
  }
  return v2;
}

id MultiwayViewController.createChangeLayoutButton()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  MEMORY[0x1F4188790](v2 - 8);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIButton);
  MultiwayViewController.changeLayoutButtonConfiguration(wantsImage:)(1);
  id v3 = (void *)UIButton.init(configuration:primaryAction:)();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(unsigned char *)(v5 + 24) = 1;
  aBlock[4] = partial apply for closure #1 in MultiwayViewController.createChangeLayoutButton();
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  uint64_t aBlock[3] = &block_descriptor_15_2;
  BOOL v6 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v3, sel_setConfigurationUpdateHandler_, v6);
  _Block_release(v6);
  uint64_t v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  swift_beginAccess();
  LODWORD(v7) = *v7;
  uint64_t v8 = self;
  uint64_t v9 = &selRef_blackColor;
  if (!v7) {
    uint64_t v9 = &selRef_whiteColor;
  }
  id v10 = [v8 *v9];
  objc_msgSend(v3, sel_setTintColor_, v10);

  char v11 = self;
  id v12 = v3;
  id v13 = objc_msgSend(v11, sel_conversationKit);
  v24._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 1145655879;
  v14._object = (void *)0xE400000000000000;
  v15.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v15.value._object = (void *)0xEF74694B6E6F6974;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v24);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v17._countAndFlagsBits, (uint64_t)v17._object, v12);
  id v18 = objc_msgSend(v12, sel_titleLabel);
  if (v18)
  {
    double v19 = v18;
    id v20 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28D0]);
    objc_msgSend(v19, sel_setFont_, v20);
  }
  id v21 = objc_msgSend(v12, sel_titleLabel);
  objc_msgSend(v21, sel_setAdjustsFontForContentSizeCategory_, 1);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v12, sel_addTarget_action_forControlEvents_, v1, sel_didTapChangeLayoutButton, 64);
  return v12;
}

uint64_t MultiwayViewController.changeLayoutButtonConfiguration(wantsImage:)(char a1)
{
  uint64_t v3 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  static UIButton.Configuration.gray()();
  uint64_t v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  swift_beginAccess();
  LODWORD(v7) = *v7;
  uint64_t v8 = self;
  if (v7 == 1) {
    id v9 = objc_msgSend(v8, sel_whiteColor);
  }
  else {
    id v9 = objc_msgSend(v8, sel_tertiarySystemBackgroundColor);
  }
  id v10 = v9;
  char v11 = (void (*)(void *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  v11(v20, 0);
  id v12 = objc_msgSend(self, sel_conversationKit);
  v25._object = (void *)0xE000000000000000;
  v13._uint64_t countAndFlagsBits = 1145655879;
  v13._object = (void *)0xE400000000000000;
  v14.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v14.value._object = (void *)0xEF74694B6E6F6974;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v25);

  UIButton.Configuration.title.setter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FB1218], v3);
  uint64_t result = UIButton.Configuration.cornerStyle.setter();
  if (a1)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    Swift::String v17 = (void *)*MEMORY[0x1E4FB28D0];
    v20[0] = 0xD000000000000014;
    v20[1] = 0x80000001C37AFC70;
    v20[2] = 2;
    v20[3] = v17;
    __int16 v21 = 0;
    uint64_t v22 = 4;
    char v23 = 0;
    uint64_t v24 = 0;
    id v18 = v17;
    static UIImage.symbolImage(for:)((uint64_t)v20);

    swift_bridgeObjectRelease();
    UIButton.Configuration.image.setter();
    UIButton.Configuration.imagePadding.setter();
    return UIButton.Configuration.contentInsets.setter();
  }
  return result;
}

void closure #1 in MultiwayViewController.createChangeLayoutButton()(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
  if (v8)
  {
    id v9 = (void *)v8;
    MultiwayViewController.changeLayoutButtonConfiguration(wantsImage:)(a3 & 1);
    uint64_t v10 = type metadata accessor for UIButton.Configuration();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
    UIButton.configuration.setter();
  }
}

uint64_t MultiwayViewController.didTapDeskViewButton()()
{
  uint64_t v1 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v3);
  }
  return result;
}

Swift::Void __swiftcall MultiwayViewController.updateChangeLayoutButtonAppearanceState()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_0_32();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v9);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v9, (uint64_t)v10);
  if (getEnumTag for TapInteraction.EventType(v10) != 1)
  {
    uint64_t v2 = *(void **)(v1 + 168);
    if (v2)
    {
      uint64_t v3 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
      OUTLINED_FUNCTION_0_32();
      int v4 = *v3;
      uint64_t v5 = self;
      id v6 = v2;
      uint64_t v7 = &selRef_blackColor;
      if (!v4) {
        uint64_t v7 = &selRef_whiteColor;
      }
      id v8 = [v5 *v7];
      objc_msgSend(v6, sel_setTintColor_, v8);
    }
  }
}

Swift::Void __swiftcall MultiwayViewController.updateCornerButtonsVisibility()()
{
  MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
  MultiwayViewController.updateDeskViewButtonVisibility()();
  MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
}

Swift::Void __swiftcall MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_0_32();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v10);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11);
  if (getEnumTag for TapInteraction.EventType(v11) == 1 || !*(void *)(v1 + 192))
  {
    int v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    aBlock[4] = (uint64_t)partial apply for closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded();
    aBlock[5] = v5;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    uint64_t aBlock[3] = (uint64_t)&block_descriptor_81;
    id v6 = _Block_copy(aBlock);
    id v7 = v0;
    swift_release();
    objc_msgSend(v4, sel_animateWithDuration_animations_, v6, 0.2);
    _Block_release(v6);
  }
  else
  {
    outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v8);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v8, (uint64_t)aBlock);
    if (getEnumTag for TapInteraction.EventType(aBlock) != 1)
    {
      uint64_t v2 = *(void **)(v1 + 168);
      if (v2)
      {
        id v3 = v2;
        objc_msgSend(v3, sel_setHidden_, (MultiwayViewController.shouldShowChangeLayoutButton.getter() & 1) == 0);
      }
    }
  }
}

Swift::Void __swiftcall MultiwayViewController.updateDeskViewButtonVisibility()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_0_32();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v4);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v5);
  if (getEnumTag for TapInteraction.EventType(v5) != 1)
  {
    uint64_t v2 = *(void **)(v1 + 184);
    if (v2)
    {
      id v3 = v2;
      objc_msgSend(v3, sel_setHidden_, (ConversationController.hasAvailableDeskViewCameras.getter() & 1) == 0);
    }
  }
}

void MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(char a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v3, (uint64_t)v11);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v12);
  if (getEnumTag for TapInteraction.EventType(v12) != 1)
  {
    id v4 = v13;
    if (v13)
    {
      if (a1)
      {
        uint64_t v5 = self;
        uint64_t v6 = swift_allocObject();
        *(void *)(v6 + 16) = v4;
        *(void *)(v6 + 24) = v1;
        aBlock[4] = partial apply for closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:);
        aBlock[5] = v6;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        uint64_t aBlock[3] = &block_descriptor_6_4;
        id v7 = _Block_copy(aBlock);
        id v8 = v4;
        outlined retain of MultiwayViewController.ViewContent?(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of MultiwayViewController.ViewContent?);
        id v9 = v1;
        swift_release();
        objc_msgSend(v5, sel_animateWithDuration_animations_, v7, 0.2);

        outlined retain of MultiwayViewController.ViewContent?(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of MultiwayViewController.ViewContent?);
        _Block_release(v7);
      }
      else
      {
        objc_msgSend(v13, sel_setHidden_, !MultiwayViewController.areControlsVisible.getter());
      }
    }
  }
}

uint64_t MultiwayViewController.shouldShowChangeLayoutButton.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v9);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v9, (uint64_t)v10);
  if (getEnumTag for TapInteraction.EventType(v10) != 1)
  {
    uint64_t v2 = (unsigned __int8 *)(v10[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    int v3 = *v2;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    outlined retain of MultiwayViewController.ViewContent?(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of MultiwayViewController.ViewContent?);
    uint64_t v4 = MultiwayViewController.activeRemoteParticipants(in:)();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    if ((v10[24] || MultiwayViewController.areControlsVisible.getter()) && v5 >= 3 && v3 != 129)
    {
      char v8 = ConversationController.isOneToOneModeEnabled.getter();
      outlined retain of MultiwayViewController.ViewContent?(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of MultiwayViewController.ViewContent?);
      char v6 = v8 ^ 1;
      return v6 & 1;
    }
    outlined retain of MultiwayViewController.ViewContent?(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of MultiwayViewController.ViewContent?);
  }
  char v6 = 0;
  return v6 & 1;
}

BOOL MultiwayViewController.areControlsVisible.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v4);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v5);
  if (getEnumTag for TapInteraction.EventType(v5) == 1) {
    return 0;
  }
  int v3 = (unsigned __int8 *)(*(void *)(v1 + 48)
                         + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  return *v3 == 1;
}

BOOL MultiwayViewController.shouldShowChangeLayoutButtonBackground.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v7);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, (uint64_t)v8);
  if (getEnumTag for TapInteraction.EventType(v8) != 1)
  {
    if (*(void *)(v1 + 176))
    {
      outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v5);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v5, (uint64_t)v6);
      if (getEnumTag for TapInteraction.EventType(v6) != 1)
      {
        id v2 = *(id *)v1;
        if (MultiwayViewController.shouldShowChangeLayoutButton.getter())
        {
          uint64_t v3 = ParticipantListViewController.participantCount.getter();

          return v3 > 0;
        }
      }
    }
  }
  return 0;
}

void closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v12);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v13);
  if (getEnumTag for TapInteraction.EventType(v13) != 1)
  {
    id v2 = *(void **)(v1 + 168);
    if (v2)
    {
      id v3 = v2;
      char v4 = MultiwayViewController.shouldShowChangeLayoutButton.getter();
      double v5 = 0.0;
      if (v4) {
        double v5 = 1.0;
      }
      objc_msgSend(v3, sel_setAlpha_, v5);
    }
  }
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v10);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11);
  if (getEnumTag for TapInteraction.EventType(v11) != 1)
  {
    char v6 = *(void **)(v1 + 176);
    if (v6)
    {
      id v7 = v6;
      BOOL v8 = MultiwayViewController.shouldShowChangeLayoutButtonBackground.getter();
      double v9 = 0.0;
      if (v8) {
        double v9 = 1.0;
      }
      objc_msgSend(v7, sel_setAlpha_, v9);
    }
  }
}

uint64_t sub_1C34783C4()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()()
{
  closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()(*(void *)(v0 + 16));
}

void destroy for CornerButtonViews(uint64_t a1)
{
  id v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for CornerButtonViews(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  char v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  double v5 = *(void **)(a2 + 16);
  char v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t assignWithCopy for CornerButtonViews(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  double v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  id v13 = *(void **)(a1 + 24);
  Swift::String_optional v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  return a1;
}

uint64_t assignWithTake for CornerButtonViews(uint64_t a1, _OWORD *a2)
{
  char v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  double v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for CornerButtonViews()
{
  return &type metadata for CornerButtonViews;
}

id outlined copy of MultiwayViewController.ViewContent?(id result, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  if (result)
  {
    uint64_t v33 = result;
    id v34 = a27;
    id v35 = v33;
    id v36 = a2;
    id v37 = a3;
    id v38 = a4;
    id v39 = a5;
    id v40 = a7;
    id v41 = a8;
    id v42 = a9;
    id v43 = a10;
    id v44 = a11;
    id v45 = a12;
    id v46 = a13;
    id v47 = a14;
    id v48 = a15;
    id v49 = a16;
    id v50 = a17;
    id v51 = a18;
    swift_retain();
    swift_retain();
    id v52 = a21;
    id v53 = a22;
    id v54 = a23;
    id v55 = a24;
    id v56 = a25;
    return a26;
  }
  return result;
}

void *outlined retain of MultiwayViewController.ViewContent?(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

void outlined consume of MultiwayViewController.ViewContent?(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  if (a1)
  {

    swift_release();
    swift_release();
  }
}

id closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(void *a1)
{
  BOOL v2 = MultiwayViewController.areControlsVisible.getter();
  double v3 = 0.0;
  if (v2) {
    double v3 = 1.0;
  }
  return objc_msgSend(a1, sel_setAlpha_, v3);
}

uint64_t sub_1C3478970()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)()
{
  return closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(*(void **)(v0 + 16));
}

uint64_t sub_1C34789B8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C34789F0()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.createChangeLayoutButton()(uint64_t a1)
{
  closure #1 in MultiwayViewController.createChangeLayoutButton()(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

Swift::Bool __swiftcall TUCall.canDisplayAlertUI(_:)(Swift::Bool a1)
{
  BOOL v3 = objc_msgSend(v1, sel_callStatus) == 6 || objc_msgSend(v1, sel_callStatus) == 1;
  if (!objc_msgSend(v1, sel_isEmergency)
    || (objc_msgSend(v1, sel_isFailureExpected) ^ 1 | v3) == 1)
  {
    return 0;
  }
  return a1;
}

BOOL @objc TUCall.canDisplayAlertUI(_:)(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  Swift::Bool v5 = TUCall.canDisplayAlertUI(_:)(a3);

  return v5;
}

Swift::Bool __swiftcall TUCall.canDisplayRedirectingUI()()
{
  BOOL v1 = objc_msgSend(v0, sel_callStatus) == 6 || objc_msgSend(v0, sel_callStatus) == 1;
  unsigned int v2 = objc_msgSend(v0, sel_isEmergency);
  Swift::Bool result = 0;
  if (v2)
  {
    if (!v1) {
      return objc_msgSend(v0, sel_hasBeenRedirected);
    }
  }
  return result;
}

BOOL @objc TUCall.canDisplayRedirectingUI()(void *a1)
{
  id v1 = a1;
  Swift::Bool v2 = TUCall.canDisplayRedirectingUI()();

  return v2;
}

uint64_t ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(a1, a2, a3, a4, a5, a6, specialized ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:));
}

uint64_t ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(a1, a2, a3, a4, a5, a6, specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:));
}

uint64_t ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v15);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_21();
  uint64_t v19 = v18 - v17;
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  uint64_t v21 = a7(a1, v19, a3, a4, a5, a6, v7, v15, v14);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v21;
}

uint64_t ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v10 - 8);
  OUTLINED_FUNCTION_21();
  Logger.traceFunctionStart(file:function:line:)();
  ScreeningService.screen(_:)(a1, a2);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  id v13 = &demangling cache variable for type metadata for ShakyMaker?;
  if (os_log_type_enabled(v11, v12))
  {
    swift_slowAlloc();
    uint64_t v22 = OUTLINED_FUNCTION_9_76();
    MEMORY[0] = 136446466;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, (unint64_t)a2, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    MEMORY[0xC] = 2050;
    swift_release();
    id v13 = &demangling cache variable for type metadata for ShakyMaker?;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_1C2F90000, v11, v12, "onEnterScreeningState: Starting timer for %{public}s with %{public}ld seconds", 0, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  uint64_t v14 = specialized static Duration.seconds<A>(_:)(*(void *)(v5 + v13[187]));
  uint64_t v16 = v15;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v5;
  long long v17[3] = a1;
  v17[4] = a2;
  v17[5] = a3;
  void v17[6] = a4;
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = a1;
  uint64_t v20 = (uint64_t)v18;
  v18[2] = v5;
  v18[3] = v19;
  v18[4] = a2;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  TimerService.start(duration:onFire:onCancel:)(v14, v16, (uint64_t)&async function pointer to partial apply for closure #1 in ScreeningService.startScreening(callUUID:endCall:), (uint64_t)v17, (uint64_t)&async function pointer to partial apply for closure #2 in ScreeningService.startScreening(callUUID:endCall:), v20);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ScreeningService.screen(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MovingToScreeningStateService();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken + 8);
  uint64_t v13 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
  uint64_t v14 = &v9[*(int *)(v7 + 28)];
  *(void *)uint64_t v14 = v12;
  *((void *)v14 + 1) = v11;
  uint64_t v15 = &v9[*(int *)(v7 + 32)];
  *(void *)uint64_t v15 = &async function pointer to partial apply for closure #1 in ScreeningService.screen(_:);
  *((void *)v15 + 1) = v3;
  swift_retain();
  swift_retain();
  v16._uint64_t countAndFlagsBits = a1;
  v16._object = a2;
  MovingToScreeningStateService.startScreening(callUUID:)(v16);
  return outlined destroy of MovingToScreeningStateService((uint64_t)v9);
}

uint64_t closure #1 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v5[9] = swift_task_alloc();
  v5[10] = type metadata accessor for MainActor();
  v5[11] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in ScreeningService.startScreening(callUUID:endCall:), v7, v6);
}

uint64_t closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[6];
  swift_release();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = v0[6];
    uint64_t v18 = v0[5];
    uint64_t v5 = v0[4];
    swift_slowAlloc();
    uint64_t v19 = OUTLINED_FUNCTION_9_76();
    *(_DWORD *)uint64_t v1 = 134349314;
    uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_maxSecondsForScreening);
    swift_release();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v1 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v4, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v2, v3, "onEnterScreeningState: timer was exceeded for %{public}ld seconds for call %{public}s", (uint8_t *)v1, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    swift_release_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v7 = v0[9];
  uint64_t v9 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v11 = v0[5];
  uint64_t v10 = v0[6];
  static TaskPriority.userInitiated.getter();
  uint64_t v12 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v7, 0, 1, v12);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBCFD8];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v9;
  v14[5] = v8;
  v14[6] = v11;
  v14[7] = v10;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v16();
}

uint64_t closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[2] = type metadata accessor for MainActor();
  long long v7[3] = static MainActor.shared.getter();
  uint64_t v13 = (int *)((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[4] = v11;
  void *v11 = v7;
  v11[1] = closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:);
  return ((uint64_t (*)(uint64_t, uint64_t, void))v13)(a6, a7, 0);
}

uint64_t closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #3 in ScreeningService.startScreening(callUUID:endCall:), v4, v3);
}

uint64_t closure #2 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #2 in ScreeningService.startScreening(callUUID:endCall:), v5, v4);
}

uint64_t closure #2 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v9 = v0;
  uint64_t v1 = (uint8_t *)v0[5];
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[4];
    unint64_t v4 = v0[5];
    swift_slowAlloc();
    uint64_t v8 = OUTLINED_FUNCTION_9_76();
    *(_DWORD *)uint64_t v1 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v4, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v2, v3, "onEnterScreeningState: Canceled timer for %{public}s", v1, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_6();
  return v6();
}

uint64_t closure #3 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = type metadata accessor for MainActor();
  long long v8[3] = static MainActor.shared.getter();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v13 = (void *)swift_task_alloc();
  void v8[4] = v13;
  *uint64_t v13 = v8;
  v13[1] = closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:);
  return v15(a6, a7, a8);
}

Swift::Void __swiftcall ScreeningService.stopScreening()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v2 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v7, "onExitScreeningState: exiting state and ending captions.", v8, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  if (*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider))
  {
    uint64_t v10 = v9[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(void (**)(void, uint64_t, uint64_t))(v10 + 48);
    swift_unknownObjectRetain();
    v12(0, ObjectType, v10);
    swift_unknownObjectRelease();
    uint64_t v13 = *v9;
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v9[1];
  *uint64_t v9 = 0;
  v9[1] = 0;
  if (one-time initialization token for viewModel != -1) {
    swift_once();
  }
  swift_retain();
  TranscriptionViewModel.state.setter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v15 = static CallScreeningRTTHelper.shared;
  uint64_t v16 = TranscriptionViewModel.captions.getter();
  uint64_t v17 = TranscriptionViewModel.callUUID.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v15 + 160))(v16, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  TranscriptionViewModel.callUUID.setter();
  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService;
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService);
  type metadata accessor for TimerService();
  swift_allocObject();
  swift_retain();
  *(void *)(v1 + v19) = TimerService.init()();
  swift_release();
  static TaskPriority.userInitiated.getter();
  uint64_t v21 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v21);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v22 = static MainActor.shared.getter();
  char v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBCFD8];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v20;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  swift_release();
  swift_release();
  $defer #1 () in ScreeningService.stopScreening()(v1, v13, v14);
  swift_unknownObjectRelease();
}

uint64_t $defer #1 () in ScreeningService.stopScreening()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in ScreeningService.stopScreening()()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in ScreeningService.stopScreening();
  return TimerService.cancel()();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary(), v4, v3);
}

uint64_t closure #1 in ScreeningService.screen(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5[3] = a2;
  v5[4] = a5;
  v5[2] = a1;
  uint64_t v6 = type metadata accessor for Logger();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in ScreeningService.screen(_:), v8, v7);
}

uint64_t closure #1 in ScreeningService.screen(_:)()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  swift_release();
  uint64_t v7 = (void *)(v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  *uint64_t v7 = v6;
  v7[1] = v4;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger, v2);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for ScreeningCaptions();
  swift_allocObject();
  uint64_t v9 = ScreeningCaptions.init(logger:onUpdateCaptions:)(v1, (uint64_t)partial apply for closure #1 in closure #1 in ScreeningService.screen(_:), v8);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions;
  *(void *)(v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions) = v9;
  swift_release();
  TranscriptionViewModel.state.setter();
  if (*(void *)(v5 + v10)) {
    uint64_t v11 = &protocol witness table for ScreeningCaptions;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 24);
  uint64_t v14 = swift_retain();
  v13(v14, v11, ObjectType, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(1, ObjectType, v4);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v15();
}

uint64_t closure #1 in closure #1 in ScreeningService.screen(_:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      char v3 = TranscriptionViewModel.isGibberish.getter();
      swift_release();
      if (v3)
      {
        swift_retain();
        TranscriptionViewModel.isGibberish.setter();
        swift_release();
      }
      swift_retain();
      TranscriptionViewModel.captions.setter();
      swift_release();
    }
    else
    {
      swift_retain();
      TranscriptionViewModel.isGibberish.setter();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t ScreeningService.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_callServices);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ScreeningService.__deallocating_deinit()
{
  ScreeningService.deinit();
  return swift_deallocClassInstance();
}

uint64_t ScreeningService.EndCallReason.description.getter(void *a1)
{
  if (!a1) {
    return 0x74756F656D6954;
  }
  id v2 = a1;
  v3._uint64_t countAndFlagsBits = 0x28726F727245;
  v3._object = (void *)0xE600000000000000;
  String.append(_:)(v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  _print_unlocked<A, B>(_:_:)();

  return 0;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ScreeningService.EndCallReason()
{
  return ScreeningService.EndCallReason.description.getter(*v0);
}

uint64_t closure #1 in $defer #1 () in ScreeningService.stopScreening()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  void v6[6] = v8;
  v6[7] = *(void *)(v8 + 64);
  unsigned char v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v6[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[11] = v10;
  v6[12] = v9;
  return MEMORY[0x1F4188298](closure #1 in $defer #1 () in ScreeningService.stopScreening(), v10, v9);
}

uint64_t closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  MEMORY[0x1C87735F0]();
  uint64_t v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v9);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  v0[13] = OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v8 + v10, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v12 = (v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v13 + v11, v2, v5);
  uint64_t v14 = (void *)(v13 + v12);
  *uint64_t v14 = v7;
  v14[1] = v6;
  swift_unknownObjectRetain();
  v0[14] = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening(), v13);
  outlined destroy of TaskPriority?(v1);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  void *v15 = v0;
  v15[1] = closure #1 in $defer #1 () in ScreeningService.stopScreening();
  return MEMORY[0x1F4187DC0]();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v5 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](closure #1 in $defer #1 () in ScreeningService.stopScreening(), v5, v4);
}

{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_28_0();
  swift_release();
  uint64_t v0 = Logger.logObject.getter();
  uint64_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v0, v1))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_15_4(&dword_1C2F90000, v2, v3, "Screening Service: Finished deinitialization of provider.");
    OUTLINED_FUNCTION_3();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v4();
}

uint64_t closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening(), 0, 0);
}

uint64_t closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v0, v1))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_15_4(&dword_1C2F90000, v2, v3, "Screening Service: About to deinitialize provider.");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_6();
  return v4();
}

uint64_t specialized ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = a6;
  uint64_t v15 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, a8);
  uint64_t v19 = specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(a1, (uint64_t)v17, a3, a4, a5, v22, v18, a8, a9);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, a8);
  return v19;
}

uint64_t specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = a8;
  uint64_t v26 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a2, a8);
  uint64_t v18 = (void *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  *uint64_t v18 = 0;
  v18[1] = 0;
  *(void *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions) = 0;
  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService;
  type metadata accessor for TimerService();
  swift_allocObject();
  *(void *)(a7 + v19) = TimerService.init()();
  uint64_t v20 = a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  uint64_t v21 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a1, v21);
  outlined init with take of Notice(&v24, a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_callServices);
  *(void *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_viewModel) = a3;
  uint64_t v22 = (void *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken);
  void *v22 = a4;
  v22[1] = a5;
  *(void *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_maxSecondsForScreening) = a6;
  return a7;
}

uint64_t sub_1C347B090()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ScreeningService.startScreening(callUUID:endCall:)()
{
  OUTLINED_FUNCTION_11_59();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_98(v3);
  *uint64_t v4 = v5;
  v4[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v6 = OUTLINED_FUNCTION_6_99();
  return closure #3 in ScreeningService.startScreening(callUUID:endCall:)(v6, v7, v8, v9, v10, v11, v1, v2);
}

uint64_t sub_1C347B198()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_98(v6);
  *uint64_t v7 = v8;
  v7[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in ScreeningService.startScreening(callUUID:endCall:)(v1, v2, v3, v4, v5);
}

uint64_t sub_1C347B298()
{
  return objectdestroy_7Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t partial apply for closure #2 in ScreeningService.startScreening(callUUID:endCall:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_98(v4);
  *uint64_t v5 = v6;
  v5[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #2 in ScreeningService.startScreening(callUUID:endCall:)(v1, v2, v3);
}

uint64_t sub_1C347B364()
{
  return objectdestroy_7Tm_0(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_7Tm_0(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreeningService.stopScreening()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_98(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in ScreeningService.stopScreening()();
}

uint64_t ObjC metadata update function for ScreeningService()
{
  return type metadata accessor for ScreeningService();
}

uint64_t type metadata accessor for ScreeningService()
{
  uint64_t result = type metadata singleton initialization cache for ScreeningService;
  if (!type metadata singleton initialization cache for ScreeningService) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for ScreeningService()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ScreeningService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScreeningService);
}

uint64_t dispatch thunk of ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void *initializeBufferWithCopyOfBuffer for ScreeningService.EndCallReason(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for ScreeningService.EndCallReason(id *a1)
{
}

void **assignWithCopy for ScreeningService.EndCallReason(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for ScreeningService.EndCallReason(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ScreeningService.EndCallReason()
{
  return &type metadata for ScreeningService.EndCallReason;
}

uint64_t sub_1C347B6A4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  OUTLINED_FUNCTION_11_59();
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_98(v7);
  *uint64_t v8 = v9;
  v8[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in $defer #1 () in ScreeningService.stopScreening()(v0, v2, v3, v4, v5, v6);
}

uint64_t sub_1C347B7A8()
{
  uint64_t v1 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void *)(type metadata accessor for Logger() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v3 = swift_task_alloc();
  unint64_t v4 = (void *)OUTLINED_FUNCTION_98(v3);
  *unint64_t v4 = v5;
  v4[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  v4[2] = v2;
  return MEMORY[0x1F4188298](closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening(), 0, 0);
}

uint64_t sub_1C347B944()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  OUTLINED_FUNCTION_11_59();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_98(v2);
  *uint64_t v3 = v4;
  v3[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v5 = OUTLINED_FUNCTION_6_99();
  return closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)(v5, v6, v7, v8, v9, v10, v1);
}

uint64_t partial apply for closure #1 in ScreeningService.screen(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_98(v9);
  *uint64_t v10 = v11;
  v10[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in ScreeningService.screen(_:)(a1, a2, a3, a4, v4);
}

uint64_t outlined destroy of MovingToScreeningStateService(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MovingToScreeningStateService();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C347BB54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreeningService.screen(_:)(uint64_t a1)
{
  return closure #1 in closure #1 in ScreeningService.screen(_:)(a1);
}

uint64_t WeakBox.__allocating_init(_:)()
{
  uint64_t v0 = swift_allocObject();
  WeakBox.init(_:)();
  return v0;
}

uint64_t WeakBox.box.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C8776240](v0 + 16);
}

uint64_t WeakBox.box.setter()
{
  return swift_unknownObjectRelease();
}

void (*WeakBox.box.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C8776240](v1 + 16);
  return WeakBox.box.modify;
}

void WeakBox.box.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t WeakBox.init(_:)()
{
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WeakBox.deinit()
{
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t WeakBox.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C347BE38()
{
  return 8;
}

void *sub_1C347BE44(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for WeakBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeakBox);
}

uint64_t dispatch thunk of WeakBox.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void specialized Sequence.first(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    lazy protocol witness table accessor for type TUConversation and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v31;
    uint64_t v26 = v32;
    uint64_t v3 = v33;
    int64_t v4 = v34;
    unint64_t v5 = v35;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v26 = a1 + 56;
    uint64_t v8 = ~v6;
    uint64_t v9 = -v6;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v5 = v10 & v7;
    swift_bridgeObjectRetain();
    uint64_t v3 = v8;
    int64_t v4 = 0;
  }
  v24[1] = v3;
  v24[4] = v2 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v25 = (unint64_t)(v3 + 64) >> 6;
  v24[3] = MEMORY[0x1E4FBC838] + 8;
  if (v2 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v11 = (v5 - 1) & v5;
    unint64_t v12 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v13 = v4;
    goto LABEL_29;
  }
  int64_t v16 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v16 < v25)
    {
      unint64_t v17 = *(void *)(v26 + 8 * v16);
      int64_t v13 = v4 + 1;
      if (v17) {
        goto LABEL_28;
      }
      int64_t v13 = v4 + 2;
      if (v4 + 2 >= v25) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v13);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v13 = v4 + 3;
      if (v4 + 3 >= v25) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v13);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v13 = v4 + 4;
      if (v4 + 4 >= v25) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v13);
      if (v17)
      {
LABEL_28:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_29:
        for (i = *(id *)(*(void *)(v2 + 48) + 8 * v12); i; uint64_t v11 = v5)
        {
          unint64_t v27 = v5;
          id v19 = objc_msgSend(i, sel_UUID);
          uint64_t v20 = type metadata accessor for UUID();
          uint64_t v29 = v24;
          uint64_t v21 = *(void *)(v20 - 8);
          MEMORY[0x1F4188790](v20);
          char v23 = (char *)v24 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v19) = static UUID.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
          if (v19) {
            break;
          }

          int64_t v4 = v13;
          unint64_t v5 = v11;
          if ((v2 & 0x8000000000000000) == 0) {
            goto LABEL_8;
          }
LABEL_10:
          uint64_t v14 = __CocoaSet.Iterator.next()();
          if (!v14) {
            break;
          }
          uint64_t v30 = v14;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id i = v36;
          swift_unknownObjectRelease();
          int64_t v13 = v4;
        }
        goto LABEL_33;
      }
      int64_t v13 = v4 + 5;
      if (v4 + 5 < v25)
      {
        unint64_t v17 = *(void *)(v26 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v4 + 6;
          while (v18 < v25)
          {
            unint64_t v17 = *(void *)(v26 + 8 * v18++);
            if (v17)
            {
              int64_t v13 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    swift_release();
    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, char *a2)
{
  uint64_t v30 = a2;
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    lazy protocol witness table accessor for type TUConversation and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v38;
    uint64_t v34 = v39;
    uint64_t v3 = v40;
    int64_t v4 = v41;
    unint64_t v5 = v42;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v34 = a1 + 56;
    uint64_t v8 = ~v6;
    uint64_t v9 = -v6;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v5 = v10 & v7;
    swift_bridgeObjectRetain();
    uint64_t v3 = v8;
    int64_t v4 = 0;
  }
  v28[1] = v3;
  uint64_t v32 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v33 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v11 = &selRef_ringButton;
  uint64_t v31 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v29 = v2;
  if (v2 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v12 = (v5 - 1) & v5;
    unint64_t v13 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v14 = v4;
    goto LABEL_29;
  }
  int64_t v17 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v17 < v33)
    {
      unint64_t v18 = *(void *)(v34 + 8 * v17);
      int64_t v14 = v4 + 1;
      if (v18) {
        goto LABEL_28;
      }
      int64_t v14 = v4 + 2;
      if (v4 + 2 >= v33) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v34 + 8 * v14);
      if (v18) {
        goto LABEL_28;
      }
      int64_t v14 = v4 + 3;
      if (v4 + 3 >= v33) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v34 + 8 * v14);
      if (v18) {
        goto LABEL_28;
      }
      int64_t v14 = v4 + 4;
      if (v4 + 4 >= v33) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v34 + 8 * v14);
      if (v18)
      {
LABEL_28:
        uint64_t v12 = (v18 - 1) & v18;
        unint64_t v13 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_29:
        for (i = *(id *)(*(void *)(v2 + 48) + 8 * v13); i; uint64_t v11 = &selRef_ringButton)
        {
          if ([i v11[236]])
          {
            if ([i v11[236]] != (id)4)
            {
              if (!objc_msgSend(i, sel_avMode)) {
                break;
              }
              uint64_t v20 = (uint64_t *)&v30[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_expectedAVLessConversationUUIDs];
              swift_beginAccess();
              uint64_t v21 = *v20;
              swift_bridgeObjectRetain();
              id v22 = objc_msgSend(i, sel_UUID);
              uint64_t v23 = type metadata accessor for UUID();
              uint64_t v36 = v4;
              uint64_t v24 = v23;
              unint64_t v35 = v28;
              uint64_t v25 = *(void *)(v23 - 8);
              MEMORY[0x1F4188790](v23);
              unint64_t v27 = (char *)v28 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              LOBYTE(v22) = specialized Set.contains(_:)((uint64_t)v27, v21);
              uint64_t v11 = &selRef_ringButton;
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
              uint64_t v2 = v29;
              if (v22) {
                break;
              }
            }
          }

          int64_t v4 = v14;
          unint64_t v5 = v12;
          if ((v2 & 0x8000000000000000) == 0) {
            goto LABEL_8;
          }
LABEL_10:
          uint64_t v15 = __CocoaSet.Iterator.next()();
          if (!v15) {
            break;
          }
          uint64_t v37 = v15;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id i = v43;
          swift_unknownObjectRelease();
          int64_t v14 = v4;
          uint64_t v12 = v5;
        }
        goto LABEL_36;
      }
      int64_t v14 = v4 + 5;
      if (v4 + 5 < v33)
      {
        unint64_t v18 = *(void *)(v34 + 8 * v14);
        if (!v18)
        {
          int64_t v19 = v4 + 6;
          while (v19 < v33)
          {
            unint64_t v18 = *(void *)(v34 + 8 * v19++);
            if (v18)
            {
              int64_t v14 = v19 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();

    return;
  }
  __break(1u);
}

void PlaceholderCallCenter.avLessConversation(for:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = PlaceholderCallCenter.avLessConversation.getter();
  if (!v7) {
    goto LABEL_6;
  }
  uint64_t v8 = (void *)v7;
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 472))(ObjectType, v2) & 1) == 0)
  {
    uint64_t v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_expectedAVLessConversationUUIDs);
    swift_beginAccess();
    uint64_t v11 = *v10;
    swift_bridgeObjectRetain();
    id v12 = objc_msgSend(v8, sel_UUID);
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_64();
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v12) = specialized Set.contains(_:)(v4, v11);
    swift_bridgeObjectRelease();
    uint64_t v14 = OUTLINED_FUNCTION_36_22();
    v15(v14);
    if ((v12 & 1) == 0)
    {

LABEL_6:
      *(void *)(v6 + 32) = 0;
      *(_OWORD *)uint64_t v6 = 0u;
      *(_OWORD *)(v6 + 16) = 0u;
      goto LABEL_7;
    }
  }
  *(void *)(v6 + 24) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  *(void *)(v6 + 32) = &protocol witness table for TUConversation;
  *(void *)uint64_t v6 = v8;
LABEL_7:
  OUTLINED_FUNCTION_15_0();
}

uint64_t PlaceholderCallCenter.downgradeToAVLess(for:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized PlaceholderCallCenter.downgradeToAVLess(for:)((uint64_t)v4, v1, v2, v3);
}

void PlaceholderCallCenter.updateAVModeSoon(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *uint64_t v1 = v9;
  OUTLINED_FUNCTION_19();
  v10();
  v9;
  uint64_t v11 = _dispatchPreconditionTest(_:)();
  uint64_t v12 = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v1, v5);
  if (v11)
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)v4 + 160))(v12) & 1) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 168))(1);
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = v4;
      v29[4] = partial apply for closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:);
      v29[5] = v14;
      v29[0] = MEMORY[0x1E4F143A8];
      v29[1] = 1107296256;
      _OWORD v29[2] = thunk for @escaping @callee_guaranteed () -> ();
      void v29[3] = &block_descriptor_82;
      uint64_t v15 = _Block_copy(v29);
      uint64_t v26 = type metadata accessor for DispatchQoS();
      unint64_t v27 = &v25;
      OUTLINED_FUNCTION_4();
      uint64_t v17 = v16;
      MEMORY[0x1F4188790](v18);
      OUTLINED_FUNCTION_64();
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      uint64_t v19 = type metadata accessor for DispatchWorkItemFlags();
      uint64_t v25 = (uint64_t)&v25;
      OUTLINED_FUNCTION_4();
      uint64_t v21 = v20;
      MEMORY[0x1F4188790](v22);
      uint64_t v24 = (char *)&v25 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v28 = MEMORY[0x1E4FBC860];
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF18]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C8773BA0](0, v11, v24, v15);
      _Block_release(v15);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v26);
      swift_release();
      swift_release();
    }
    OUTLINED_FUNCTION_28();
  }
  else
  {
    __break(1u);
  }
}

uint64_t PlaceholderCallCenter.activeConversation(for:)(uint64_t a1)
{
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager), sel_activeConversations);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject();
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  specialized Sequence.first(where:)(v4, a1);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  return v6;
}

void PlaceholderCallCenter.disconnect(_:)()
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *uint64_t v1 = v3;
  uint64_t v4 = OUTLINED_FUNCTION_29_32();
  v5(v4);
  id v6 = v3;
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_28_35();
  v8(v7);
  if (v3)
  {
    uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, sel_leaveConversationWithUUID_, isa);
  }
  else
  {
    __break(1u);
  }
}

void PlaceholderCallCenter.answer(_:)(uint64_t a1)
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *uint64_t v2 = v5;
  uint64_t v6 = OUTLINED_FUNCTION_29_32();
  v7(v6);
  id v8 = v5;
  _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_28_35();
  v10(v9);
  if (v5)
  {
    uint64_t v11 = PlaceholderCallCenter.activeConversation(for:)(a1);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBE8]), sel_initWithConversation_originatingUIType_, v11, 45);
      objc_msgSend(v13, sel_joinConversationWithRequest_, v14);
    }
  }
  else
  {
    __break(1u);
  }
}

void PlaceholderCallCenter.setSharingScreen(_:attributes:for:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  char v6 = v5;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *uint64_t v1 = v8;
  OUTLINED_FUNCTION_19();
  v9();
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t v11 = OUTLINED_FUNCTION_36_22();
  v12(v11);
  if (v8)
  {
    id v13 = objc_msgSend(self, sel_defaultAttributes);
    TUScreenShareAttributes.update(with:)(v4);
    id v14 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
    id v15 = v13;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, sel_setScreenEnabled_withScreenShareAttributes_forConversationWithUUID_, v6 & 1, v15, isa);

    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

id static PlaceholderCallCenter.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static PlaceholderCallCenter.shared;
  return v0;
}

id PlaceholderCallCenter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PlaceholderCallCenter.init()()
{
}

id PlaceholderCallCenter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderCallCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PlaceholderCallCenter.avLessConversation.getter()
{
  id v1 = v0;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 856))() & 1) == 0) {
    return 0;
  }
  id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager], sel_activeConversations);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.first(where:)(v3, (char *)v1);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

void PlaceholderCallCenter.setAVMode(_:for:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  id v8 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *id v1 = v8;
  OUTLINED_FUNCTION_19();
  v9();
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v1, v4);
  if (v8)
  {
    uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, sel_setLocalParticipantAudioVideoMode_forConversationUUID_, v3, isa);

    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if ((*(uint64_t (**)(void))(*(void *)a2 + 160))())
    {
      (*(void (**)(void))(*(void *)a2 + 184))();
      PlaceholderCallCenter.setAVMode(_:for:)();
      (*(void (**)(void))(*(void *)a2 + 168))(0);
    }
  }
}

void PlaceholderCallCenter.activeCall.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = (void *)type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  id v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue];
  *id v8 = v9;
  OUTLINED_FUNCTION_19();
  v10();
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  id v13 = *(void (**)(void *, void *))(v5 + 8);
  uint64_t v12 = v5 + 8;
  v13(v8, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  PlaceholderCallCenter.conversationNeedingPlaceholderCall.getter((uint64_t)&v31);
  uint64_t v3 = v31;
  if (!v31) {
    goto LABEL_9;
  }
  char v14 = v32;
  unsigned __int8 v30 = v32;
  if (PlaceholderCallCenter.activeCall(for:purpose:)(v31, &v30))
  {

LABEL_9:
    OUTLINED_FUNCTION_15_0();
    return;
  }
  uint64_t v2 = &_OBJC_LABEL_PROTOCOL___CNKSharedContentPippable;
  id v15 = objc_msgSend(v3, sel_UUID);
  id v8 = (void *)type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_63();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  char v29 = v14;
  type metadata accessor for PlaceholderCall();
  swift_allocObject();
  id v1 = v0;
  uint64_t v17 = PlaceholderCall.init(for:placeholderCallCenter:purpose:)(v12, v1, &v29);
  id v18 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls];
  swift_retain();
  id v19 = objc_msgSend(v3, sel_UUID);
  if (v19)
  {
    uint64_t v20 = v19;
    objc_msgSend(v18, sel_setObject_forKey_, v17, v19);

    swift_release();
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v21 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v21 + 16) = xmmword_1C3769620;
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v23 = OUTLINED_FUNCTION_8(v22);
      MEMORY[0x1F4188790](v23);
      OUTLINED_FUNCTION_64();
      id v24 = [v3 (SEL)v2[105]];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, (uint64_t)v8);
      uint64_t v25 = specialized >> prefix<A>(_:)((uint64_t)v1);
      uint64_t v27 = v26;
      outlined destroy of UUID?((uint64_t)v1);
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v21 + 32) = v25;
      *(void *)(v21 + 40) = v27;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_38_20();

      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
LABEL_11:
    swift_once();
    goto LABEL_8;
  }
  __break(1u);
}

void PlaceholderCallCenter.conversationNeedingPlaceholderCall.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = (void *)PlaceholderCallCenter.avLessConversation.getter();
  if (v9)
  {
    uint64_t v6 = v9;
    id v10 = objc_msgSend(v9, sel_presentationContext);
    id v11 = objc_msgSend(v10, sel_mode);

    if (v11 == (id)2)
    {
      char v18 = 2;
LABEL_16:
      *(void *)a1 = v6;
      goto LABEL_17;
    }
    if (v11 == (id)1)
    {
LABEL_15:
      char v18 = 1;
      goto LABEL_16;
    }
    if (v11)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.fault.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C3769620;
      uint64_t v25 = v6;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      uint64_t v20 = v6;
      uint64_t v21 = String.init<A>(reflecting:)();
      uint64_t v23 = v22;
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v19 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v19 + 32) = v21;
      *(void *)(v19 + 40) = v23;
      goto LABEL_14;
    }
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C3769620;
      uint64_t v25 = v6;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      id v13 = v6;
      uint64_t v14 = String.init<A>(reflecting:)();
      uint64_t v16 = v15;
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v12 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v16;
LABEL_14:
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_7;
  }
  id v17 = PlaceholderCallCenter.handoffEligibleConversation.getter();
  if (v17)
  {
    *(void *)a1 = v17;
    char v18 = 3;
LABEL_17:
    *(unsigned char *)(a1 + 8) = v18;
    return;
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

unsigned __int8 *PlaceholderCallCenter.activeCall(for:purpose:)(void *a1, unsigned __int8 *a2)
{
  int v4 = *a2;
  id v5 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls);
  uint64_t result = (unsigned __int8 *)objc_msgSend(a1, sel_UUID);
  if (result)
  {
    uint64_t v7 = result;
    id v8 = (unsigned __int8 *)objc_msgSend(v5, sel_objectForKey_, result);

    if (v8)
    {
      if (v8[16] != v4)
      {
        swift_release();
        return 0;
      }
    }
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderCallCenter.handoffEligibleConversation.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 584))()) {
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager), sel_handoffEligibleConversation);
  }
  else {
    return 0;
  }
}

void PlaceholderCallCenter.conversationManager(_:stateChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_state) != (id)3)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v4 = OUTLINED_FUNCTION_8(v3);
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_17_47();
    id v5 = objc_msgSend(v2, sel_UUID);
    uint64_t v6 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v7);
    OUTLINED_FUNCTION_9_77();

    OUTLINED_FUNCTION_20_48();
    specialized Set._Variant.remove(_:)();
    uint64_t v8 = OUTLINED_FUNCTION_35_19();
    v9(v8);
    swift_endAccess();
    OUTLINED_FUNCTION_13_67();
    if (v0 != 1)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v10 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
      MEMORY[0x1F4188790](v10);
      OUTLINED_FUNCTION_18_50();
      id v11 = objc_msgSend(v2, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_15_64();
      OUTLINED_FUNCTION_33_28();
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v6;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_38_20();
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_28();
}

void PlaceholderCallCenter.conversationManager(_:removedActiveConversation:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_17_47();
  id v4 = OUTLINED_FUNCTION_50_15();
  uint64_t v5 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_9_77();

  OUTLINED_FUNCTION_20_48();
  specialized Set._Variant.remove(_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  swift_endAccess();
  OUTLINED_FUNCTION_13_67();
  if (v0 != 1)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v9 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v9 + 16) = xmmword_1C3769620;
    MEMORY[0x1F4188790](v9);
    OUTLINED_FUNCTION_18_50();
    id v10 = OUTLINED_FUNCTION_50_15();
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_15_64();
    OUTLINED_FUNCTION_33_28();
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v5;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_38_20();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void PlaceholderCallCenter.conversationManager(_:avModeChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  if (!objc_msgSend(v1, sel_avMode))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v24 = OUTLINED_FUNCTION_8(v23);
    MEMORY[0x1F4188790](v24);
    OUTLINED_FUNCTION_17_47();
    id v25 = objc_msgSend(v2, sel_UUID);
    uint64_t v26 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v27);
    OUTLINED_FUNCTION_9_77();

    OUTLINED_FUNCTION_20_48();
    specialized Set._Variant.remove(_:)();
    uint64_t v28 = OUTLINED_FUNCTION_35_19();
    v29(v28);
    swift_endAccess();
    OUTLINED_FUNCTION_13_67();
    if (v0 != 1)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v30 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v30 + 16) = xmmword_1C3769620;
      MEMORY[0x1F4188790](v30);
      OUTLINED_FUNCTION_18_50();
      id v31 = objc_msgSend(v2, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_15_64();
      OUTLINED_FUNCTION_33_28();
      *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v30 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v30 + 32) = v31;
      *(void *)(v30 + 40) = v26;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_11;
    }
LABEL_12:
    OUTLINED_FUNCTION_28();
    return;
  }
  LOBYTE(v33) = 1;
  uint64_t v3 = PlaceholderCallCenter.activeCall(for:purpose:)(v2, (unsigned __int8 *)&v33);
  if (!v3) {
    goto LABEL_12;
  }
  id v4 = v3;
  id v5 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls);
  id v6 = OUTLINED_FUNCTION_50_15();
  if (v6)
  {
    uint64_t v7 = v6;
    objc_msgSend(v5, sel_removeObjectForKey_, v6);

    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v32 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C376BA10;
    int64_t v33 = v4;
    type metadata accessor for PlaceholderCall();
    swift_retain();
    uint64_t v9 = String.init<A>(reflecting:)();
    uint64_t v11 = v10;
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v8 + 64) = v13;
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v15 = OUTLINED_FUNCTION_8(v14);
    MEMORY[0x1F4188790](v15);
    OUTLINED_FUNCTION_64();
    id v16 = OUTLINED_FUNCTION_50_15();
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload(v9, 0, 1, v17);
    uint64_t v18 = specialized >> prefix<A>(_:)(v9);
    uint64_t v20 = v19;
    outlined destroy of UUID?(v9);
    *(void *)(v8 + 96) = v12;
    *(void *)(v8 + 104) = v13;
    *(void *)(v8 + 72) = v18;
    *(void *)(v8 + 80) = v20;
    int64_t v33 = (unsigned __int8 *)objc_msgSend(v2, sel_avMode, v32);
    type metadata accessor for TUConversationAVMode(0);
    uint64_t v21 = String.init<A>(reflecting:)();
    *(void *)(v8 + 136) = v12;
    *(void *)(v8 + 144) = v13;
    *(void *)(v8 + 112) = v21;
    *(void *)(v8 + 120) = v22;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_release();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
}

void specialized _NativeSet.copy()()
{
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  const void *v26;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UUID>);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (!v3)
  {
    swift_release();
LABEL_28:
    *uint64_t v2 = v0;
    OUTLINED_FUNCTION_28();
    return;
  }
  id v4 = (void *)OUTLINED_FUNCTION_48_15();
  id v6 = (unint64_t)(v5 + 63) >> 6;
  id v25 = v0;
  uint64_t v26 = v1 + 7;
  if (v0 != v1 || v4 >= &v1[v6 + 7]) {
    memmove(v4, v26, 8 * v6);
  }
  uint64_t v8 = 0;
  v0[2] = v1[2];
  OUTLINED_FUNCTION_46_18();
  uint64_t v11 = v10 & v9;
  unint64_t v13 = (unint64_t)(v12 + 63) >> 6;
  if ((v10 & v9) == 0) {
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (id i = v14 | (v8 << 6); ; id i = __clz(__rbit64(v17)) + (v8 << 6))
  {
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void *)(v23 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v1[6] + v24, v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v0[6] + v24, v22, v19);
    if (v11) {
      goto LABEL_9;
    }
LABEL_10:
    id v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    uint64_t v17 = *((void *)v26 + v16);
    ++v8;
    if (!v17)
    {
      uint64_t v8 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      uint64_t v17 = *((void *)v26 + v8);
      if (!v17)
      {
        uint64_t v8 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_26;
        }
        uint64_t v17 = *((void *)v26 + v8);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v11 = (v17 - 1) & v17;
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= v13)
  {
LABEL_26:
    swift_release();
    uint64_t v2 = v25;
    goto LABEL_28;
  }
  uint64_t v17 = *((void *)v26 + v18);
  if (v17)
  {
    uint64_t v8 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_26;
    }
    uint64_t v17 = *((void *)v26 + v8);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<String>);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (!v6)
  {
LABEL_26:
    swift_release();
    *uint64_t v0 = v0;
    OUTLINED_FUNCTION_15_0();
    return;
  }
  uint64_t v7 = (void *)OUTLINED_FUNCTION_1_129();
  if (v10) {
    uint64_t v11 = (unint64_t)v7 >= v9;
  }
  else {
    uint64_t v11 = 1;
  }
  if (v11) {
    OUTLINED_FUNCTION_24_43(v7, v8);
  }
  OUTLINED_FUNCTION_3_115();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_9:
  OUTLINED_FUNCTION_19_45();
  while (1)
  {
    uint64_t v15 = (void *)(*(void *)(v1 + 48) + 16 * v12);
    id v16 = v15[1];
    uint64_t v17 = (void *)(v0[6] + 16 * v12);
    *uint64_t v17 = *v15;
    v17[1] = v16;
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_9;
    }
LABEL_10:
    unint64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v3) {
      goto LABEL_26;
    }
    ++v4;
    if (!*(void *)(v2 + 8 * v13))
    {
      id v4 = v13 + 1;
      if (v13 + 1 >= v3) {
        goto LABEL_26;
      }
      if (!*(void *)(v2 + 8 * v4))
      {
        id v4 = v13 + 2;
        if (v13 + 2 >= v3) {
          goto LABEL_26;
        }
        if (!*(void *)(v2 + 8 * v4)) {
          break;
        }
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_14_62();
  }
  uint64_t v14 = v13 + 3;
  if (v14 >= v3) {
    goto LABEL_26;
  }
  if (*(void *)(v2 + 8 * v14))
  {
    id v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    id v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v3) {
      goto LABEL_26;
    }
    ++v14;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  id v5 = v4(0);
  MEMORY[0x1F4188790](v5 - 8);
  __swift_instantiateConcreteTypeFromMangledName(v2);
  id v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  if (!*(void *)(v6 + 16))
  {
LABEL_26:
    swift_release();
    *uint64_t v3 = v7;
    OUTLINED_FUNCTION_28();
    return;
  }
  uint64_t v8 = (void *)OUTLINED_FUNCTION_48_15();
  uint64_t v9 = v6 + 56;
  uint64_t v11 = (unint64_t)(v10 + 63) >> 6;
  if (v7 != v6 || (unint64_t)v8 >= v6 + 56 + 8 * v11) {
    memmove(v8, (const void *)(v6 + 56), 8 * v11);
  }
  unint64_t v13 = 0;
  *(void *)(v7 + 16) = *(void *)(v6 + 16);
  OUTLINED_FUNCTION_46_18();
  id v16 = v15 & v14;
  uint64_t v18 = (unint64_t)(v17 + 63) >> 6;
  if ((v15 & v14) == 0) {
    goto LABEL_10;
  }
LABEL_9:
  for (v16 &= v16 - 1; ; id v16 = (v20 - 1) & v20)
  {
    _s15ConversationKit15RecentsCallItemVWOcTm_3();
    _s15ConversationKit15RecentsCallItemVWObTm_2();
    if (v16) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v18) {
      goto LABEL_26;
    }
    uint64_t v20 = *(void *)(v9 + 8 * v19);
    ++v13;
    if (!v20)
    {
      unint64_t v13 = v19 + 1;
      if (v19 + 1 >= v18) {
        goto LABEL_26;
      }
      uint64_t v20 = *(void *)(v9 + 8 * v13);
      if (!v20)
      {
        unint64_t v13 = v19 + 2;
        if (v19 + 2 >= v18) {
          goto LABEL_26;
        }
        uint64_t v20 = *(void *)(v9 + 8 * v13);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    ;
  }
  uint64_t v21 = v19 + 3;
  if (v21 >= v18) {
    goto LABEL_26;
  }
  uint64_t v20 = *(void *)(v9 + 8 * v21);
  if (v20)
  {
    unint64_t v13 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    unint64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_26;
    }
    uint64_t v20 = *(void *)(v9 + 8 * v13);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<RecentsCallHandle>);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (!v6)
  {
LABEL_26:
    swift_release();
    *uint64_t v0 = v0;
    OUTLINED_FUNCTION_15_0();
    return;
  }
  uint64_t v7 = (void *)OUTLINED_FUNCTION_1_129();
  if (v10) {
    uint64_t v11 = (unint64_t)v7 >= v9;
  }
  else {
    uint64_t v11 = 1;
  }
  if (v11) {
    OUTLINED_FUNCTION_24_43(v7, v8);
  }
  OUTLINED_FUNCTION_3_115();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_9:
  OUTLINED_FUNCTION_19_45();
  while (1)
  {
    uint64_t v15 = 3 * v12;
    id v16 = *(void *)(v1 + 48) + 8 * v15;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v19 = v0[6] + 8 * v15;
    *(unsigned char *)uint64_t v19 = *(unsigned char *)v16;
    *(void *)(v19 + 8) = v18;
    *(void *)(v19 + 16) = v17;
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_9;
    }
LABEL_10:
    unint64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v3) {
      goto LABEL_26;
    }
    ++v4;
    if (!*(void *)(v2 + 8 * v13))
    {
      id v4 = v13 + 1;
      if (v13 + 1 >= v3) {
        goto LABEL_26;
      }
      if (!*(void *)(v2 + 8 * v4))
      {
        id v4 = v13 + 2;
        if (v13 + 2 >= v3) {
          goto LABEL_26;
        }
        if (!*(void *)(v2 + 8 * v4)) {
          break;
        }
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_14_62();
  }
  uint64_t v14 = v13 + 3;
  if (v14 >= v3) {
    goto LABEL_26;
  }
  if (*(void *)(v2 + 8 * v14))
  {
    id v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    id v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v3) {
      goto LABEL_26;
    }
    ++v14;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (!v7)
  {
LABEL_26:
    swift_release();
    *uint64_t v0 = v0;
    OUTLINED_FUNCTION_15_0();
    return;
  }
  uint64_t v8 = (void *)OUTLINED_FUNCTION_1_129();
  if (v11) {
    uint64_t v12 = (unint64_t)v8 >= v10;
  }
  else {
    uint64_t v12 = 1;
  }
  if (v12) {
    OUTLINED_FUNCTION_24_43(v8, v9);
  }
  OUTLINED_FUNCTION_3_115();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_9:
  OUTLINED_FUNCTION_19_45();
  while (1)
  {
    id v16 = *(void **)(*(void *)(v1 + 48) + 8 * v13);
    *(void *)(v0[6] + 8 * v13) = v16;
    uint64_t v17 = v16;
    if (v5) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v3) {
      goto LABEL_26;
    }
    ++v4;
    if (!*(void *)(v2 + 8 * v14))
    {
      id v4 = v14 + 1;
      if (v14 + 1 >= v3) {
        goto LABEL_26;
      }
      if (!*(void *)(v2 + 8 * v4))
      {
        id v4 = v14 + 2;
        if (v14 + 2 >= v3) {
          goto LABEL_26;
        }
        if (!*(void *)(v2 + 8 * v4)) {
          break;
        }
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_14_62();
  }
  uint64_t v15 = v14 + 3;
  if (v15 >= v3) {
    goto LABEL_26;
  }
  if (*(void *)(v2 + 8 * v15))
  {
    id v4 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    id v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v3) {
      goto LABEL_26;
    }
    ++v15;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<BezelEffect>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<VideoReaction>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<TranscriptionViewModel.CaptionID>);
}

{
  specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<CaptionSectioner.CaptionID>);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<InCallControlsState>);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (v2)
  {
    uint64_t v3 = (void *)OUTLINED_FUNCTION_1_129();
    if (v6) {
      uint64_t v7 = (unint64_t)v3 >= v5;
    }
    else {
      uint64_t v7 = 1;
    }
    if (v7) {
      OUTLINED_FUNCTION_24_43(v3, v4);
    }
    OUTLINED_FUNCTION_2_114();
    if (!v10) {
      goto LABEL_10;
    }
LABEL_9:
    OUTLINED_FUNCTION_8_70();
    while (1)
    {
      OUTLINED_FUNCTION_27_39();
      if (v19) {
        goto LABEL_9;
      }
LABEL_10:
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v9 + 1 >= v8) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_44_17();
      if (!v11)
      {
        OUTLINED_FUNCTION_43_18();
        if (v13 == v14) {
          goto LABEL_28;
        }
        if (!*(void *)(v1 + 8 * v12))
        {
          OUTLINED_FUNCTION_41_22();
          if (v13 == v14) {
            goto LABEL_28;
          }
          if (!*(void *)(v1 + 8 * v15))
          {
            OUTLINED_FUNCTION_40_22();
            if (v13 == v14) {
              goto LABEL_28;
            }
            if (!*(void *)(v1 + 8 * v17)) {
              break;
            }
          }
        }
      }
LABEL_25:
      OUTLINED_FUNCTION_11_60();
    }
    while (!__OFADD__(v17, 1))
    {
      if (v17 + 1 >= v16) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_42_21();
      if (v18) {
        goto LABEL_25;
      }
    }
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_28:
    swift_release();
    *uint64_t v0 = v0;
  }
}

void specialized _NativeSet.copy()(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (v4)
  {
    id v5 = (void *)OUTLINED_FUNCTION_1_129();
    if (v8) {
      BOOL v9 = (unint64_t)v5 >= v7;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9) {
      OUTLINED_FUNCTION_24_43(v5, v6);
    }
    OUTLINED_FUNCTION_2_114();
    if (!v12) {
      goto LABEL_10;
    }
LABEL_9:
    OUTLINED_FUNCTION_8_70();
    while (1)
    {
      *(unsigned char *)(v1[6] + v14) = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      if (v13) {
        goto LABEL_9;
      }
LABEL_10:
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v11 + 1 >= v10) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_44_17();
      if (!v15)
      {
        OUTLINED_FUNCTION_43_18();
        if (v17 == v18) {
          goto LABEL_28;
        }
        if (!*(void *)(v3 + 8 * v16))
        {
          OUTLINED_FUNCTION_41_22();
          if (v17 == v18) {
            goto LABEL_28;
          }
          if (!*(void *)(v3 + 8 * v19))
          {
            OUTLINED_FUNCTION_40_22();
            if (v17 == v18) {
              goto LABEL_28;
            }
            if (!*(void *)(v3 + 8 * v21)) {
              break;
            }
          }
        }
      }
LABEL_25:
      OUTLINED_FUNCTION_11_60();
    }
    while (!__OFADD__(v21, 1))
    {
      if (v21 + 1 >= v20) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_42_21();
      if (v22) {
        goto LABEL_25;
      }
    }
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_28:
    swift_release();
    *uint64_t v1 = v1;
  }
}

{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_22_40();
  if (v3)
  {
    uint64_t v4 = (void *)OUTLINED_FUNCTION_1_129();
    if (v7) {
      char v8 = (unint64_t)v4 >= v6;
    }
    else {
      char v8 = 1;
    }
    if (v8) {
      OUTLINED_FUNCTION_24_43(v4, v5);
    }
    OUTLINED_FUNCTION_2_114();
    if (!v11) {
      goto LABEL_10;
    }
LABEL_9:
    OUTLINED_FUNCTION_8_70();
    while (1)
    {
      OUTLINED_FUNCTION_27_39();
      if (v20) {
        goto LABEL_9;
      }
LABEL_10:
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v10 + 1 >= v9) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_44_17();
      if (!v12)
      {
        OUTLINED_FUNCTION_43_18();
        if (v14 == v15) {
          goto LABEL_28;
        }
        if (!*(void *)(v2 + 8 * v13))
        {
          OUTLINED_FUNCTION_41_22();
          if (v14 == v15) {
            goto LABEL_28;
          }
          if (!*(void *)(v2 + 8 * v16))
          {
            OUTLINED_FUNCTION_40_22();
            if (v14 == v15) {
              goto LABEL_28;
            }
            if (!*(void *)(v2 + 8 * v18)) {
              break;
            }
          }
        }
      }
LABEL_25:
      OUTLINED_FUNCTION_11_60();
    }
    while (!__OFADD__(v18, 1))
    {
      if (v18 + 1 >= v17) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_42_21();
      if (v19) {
        goto LABEL_25;
      }
    }
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_28:
    swift_release();
    *uint64_t v1 = v1;
  }
}

void specialized Set._Variant.remove(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *v0;
  uint64_t v6 = type metadata accessor for UUID();
  unint64_t v7 = _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
  swift_bridgeObjectRetain();
  uint64_t v31 = v2;
  dispatch thunk of Hashable._rawHashValue(seed:)();
  OUTLINED_FUNCTION_52_13();
  uint64_t v9 = v5;
  uint64_t v30 = v5 + 56;
  if ((*(void *)(v5 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    id v25 = v0;
    uint64_t v26 = v4;
    uint64_t v27 = ~v8;
    uint64_t v10 = *(void **)(v6 - 8);
    uint64_t v11 = v10[8];
    uint64_t v29 = v10[9];
    uint64_t v28 = (void (*)(char *, unint64_t, uint64_t))v10[2];
    uint64_t v24 = v10;
    uint64_t v12 = (void (**)(char *, uint64_t))(v10 + 1);
    while (1)
    {
      uint64_t v13 = MEMORY[0x1F4188790](v9);
      unint64_t v14 = v29 * v7;
      v28((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v13 + 48) + v29 * v7, v6);
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v12)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v15) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v27;
      uint64_t v9 = v13;
      if (((*(void *)(v30 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v26;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    char v18 = v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v18;
    uint64_t v32 = *v18;
    *char v18 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      specialized _NativeSet.copy()();
      uint64_t v20 = v32;
    }
    unint64_t v21 = *(void *)(v20 + 48) + v14;
    uint64_t v22 = v26;
    ((void (*)(uint64_t, unint64_t, uint64_t))v24[4])(v26, v21, v6);
    specialized _NativeSet._delete(at:)(v7);
    *char v18 = v32;
    swift_bridgeObjectRelease();
    uint64_t v16 = v22;
    uint64_t v17 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v16 = v4;
    uint64_t v17 = 1;
  }
  __swift_storeEnumTagSinglePayload(v16, v17, 1, v6);
  OUTLINED_FUNCTION_28();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for CountdownVoucher(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = *v0;
  Hasher.init(_seed:)();
  uint64_t v8 = type metadata accessor for UUID();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  Hasher._finalize()();
  OUTLINED_FUNCTION_52_13();
  if ((*(void *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v16 = v0;
    uint64_t v17 = v2;
    uint64_t v10 = ~v9;
    while (1)
    {
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      uint64_t v11 = static UUID.== infix(_:_:)();
      outlined destroy of CountdownVoucher((uint64_t)v6, (void (*)(void))type metadata accessor for CountdownVoucher);
      if (v11) {
        break;
      }
      uint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = 1;
        uint64_t v2 = v17;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v18 = *v13;
    *uint64_t v13 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      specialized _NativeSet.copy()();
    }
    uint64_t v2 = v17;
    _s15ConversationKit15RecentsCallItemVWObTm_2();
    specialized _NativeSet._delete(at:)();
    *uint64_t v13 = v18;
    swift_bridgeObjectRelease();
    uint64_t v12 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = 1;
  }
LABEL_10:
  __swift_storeEnumTagSinglePayload(v2, v12, 1, v3);
  OUTLINED_FUNCTION_28();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  unsigned __int8 *v39;
  int v40;
  int v41;
  unsigned __int8 *v42;
  int v43;
  int v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  double v66 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v69 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v51 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v51 - v11;
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v51 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v68 = (char *)&v51 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v51 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v51 - v22;
  id v51 = v0;
  uint64_t v24 = *v0;
  Hasher.init(_seed:)();
  uint64_t v60 = v3;
  uint64_t v67 = type metadata accessor for UUID();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  id v25 = Hasher._finalize()();
  uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
  uint64_t v27 = v25 & ~v26;
  uint64_t v67 = v24 + 56;
  if ((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27))
  {
    id v52 = v2;
    uint64_t v62 = ~v26;
    uint64_t v63 = *((void *)v66 + 9);
    uint64_t v64 = v24;
    uint64_t v65 = v15;
    double v66 = v12;
    while (1)
    {
      uint64_t v61 = v63 * v27;
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      static Participant.State.== infix(_:_:)();
      uint64_t v29 = v28;
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      uint64_t v30 = (uint64_t)v20;
      uint64_t v31 = (uint64_t)v68;
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      if ((v29 & 1) == 0) {
        break;
      }
      uint64_t v32 = static UUID.== infix(_:_:)();
      outlined destroy of CountdownVoucher(v31, (void (*)(void))type metadata accessor for Participant);
      outlined destroy of CountdownVoucher(v30, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      uint64_t v20 = (char *)v30;
      if ((v32 & 1) == 0) {
        goto LABEL_15;
      }
      int64_t v33 = (uint64_t)v15;
      uint64_t v34 = v69;
      unint64_t v35 = v60;
      uint64_t v36 = *(void *)(v33 + *(int *)(v60 + 28)) != 0;
      outlined destroy of CountdownVoucher(v33, (void (*)(void))type metadata accessor for Participant);
      LOBYTE(v35) = *(void *)&v12[*(int *)(v35 + 28)] == 0;
      outlined destroy of CountdownVoucher((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
      uint64_t v37 = v36 ^ v35;
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      uint64_t v20 = (char *)v30;
      _s15ConversationKit15RecentsCallItemVWOcTm_3();
      if ((v37 & 1) == 0) {
        goto LABEL_16;
      }
      uint64_t v38 = v60;
      uint64_t v39 = (unsigned __int8 *)&v9[*(int *)(v60 + 24)];
      uint64_t v40 = *v39;
      uint64_t v58 = v39[1];
      unsigned int v59 = v40;
      unint64_t v57 = v39[2];
      id v55 = v39[3];
      uint64_t v41 = v39[4];
      outlined destroy of CountdownVoucher((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      unint64_t v42 = (unsigned __int8 *)(v69 + *(int *)(v38 + 24));
      id v43 = *v42;
      id v44 = v42[1];
      id v56 = v42[2];
      id v54 = v42[3];
      id v53 = v42[4];
      outlined destroy of CountdownVoucher(v34, (void (*)(void))type metadata accessor for Participant);
      id v45 = v59 == v43;
      uint64_t v20 = (char *)v30;
      if (!v45 || ((v58 ^ v44) & 1) != 0 || ((v57 ^ v56) & 1) != 0 || ((v55 ^ v54) & 1) != 0) {
        goto LABEL_17;
      }
      outlined destroy of CountdownVoucher((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
      id v45 = v41 == v53;
      char v15 = v65;
      uint64_t v12 = v66;
      if (v45)
      {
        swift_bridgeObjectRelease();
        id v48 = v51;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v70 = *v48;
        *id v48 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          specialized _NativeSet.copy()();
        }
        id v50 = v52;
        _s15ConversationKit15RecentsCallItemVWObTm_2();
        specialized _NativeSet._delete(at:)();
        *id v48 = v70;
        swift_bridgeObjectRelease();
        id v46 = v50;
        id v47 = 0;
        goto LABEL_22;
      }
LABEL_18:
      uint64_t v27 = (v27 + 1) & v62;
      if (((*(void *)(v67 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v52;
        goto LABEL_21;
      }
    }
    outlined destroy of CountdownVoucher(v31, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of CountdownVoucher(v30, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit15RecentsCallItemVWOcTm_3();
    _s15ConversationKit15RecentsCallItemVWOcTm_3();
    uint64_t v20 = (char *)v30;
LABEL_15:
    outlined destroy of CountdownVoucher((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of CountdownVoucher((uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit15RecentsCallItemVWOcTm_3();
    _s15ConversationKit15RecentsCallItemVWOcTm_3();
LABEL_16:
    outlined destroy of CountdownVoucher(v69, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of CountdownVoucher((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
LABEL_17:
    outlined destroy of CountdownVoucher((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
    char v15 = v65;
    uint64_t v12 = v66;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
LABEL_21:
  id v46 = v2;
  id v47 = 1;
LABEL_22:
  __swift_storeEnumTagSinglePayload(v46, v47, 1, v60);
  OUTLINED_FUNCTION_28();
}

uint64_t specialized Set._Variant.remove(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  OUTLINED_FUNCTION_53_12();
  if ((v9 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  uint64_t v11 = (void *)(v10 + 16 * v8);
  BOOL v12 = *v11 == a1 && v11[1] == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v24 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v24;
      OUTLINED_FUNCTION_53_12();
      if ((v25 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v26 = (void *)(v10 + 16 * v8);
      BOOL v27 = *v26 == a1 && v26[1] == a2;
    }
    while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_10_70();
  if (!v14)
  {
    specialized _NativeSet.copy()();
    uint64_t v13 = v30;
  }
  uint64_t v15 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  unint64_t v16 = specialized _NativeSet._delete(at:)(v8);
  OUTLINED_FUNCTION_26_38(v16, v17, v18, v19, v20, v21, v22, v23, v29, v30);
  return v15;
}

uint64_t specialized Set._Variant.remove(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    Swift::Int v8 = *(void *)(v4 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
    uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v11 = v9 & ~v10;
    OUTLINED_FUNCTION_49_14();
    if (v12)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
      id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v14 = static NSObject.== infix(_:_:)();

      if (v14)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_10_70();
        if (!v20)
        {
          specialized _NativeSet.copy()();
          uint64_t v19 = v22;
        }
        uint64_t v7 = *(void *)(*(void *)(v19 + 48) + 8 * v11);
        specialized _NativeSet._delete(at:)(v11);
        *uint64_t v2 = v22;
        goto LABEL_12;
      }
      uint64_t v15 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v15;
        OUTLINED_FUNCTION_49_14();
        if ((v16 & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
        char v18 = static NSObject.== infix(_:_:)();

        if (v18) {
          goto LABEL_9;
        }
      }
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  id v5 = a1;
  char v6 = __CocoaSet.contains(_:)();

  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v7 = specialized Set._Variant._migrateToNative(_:removing:)();
LABEL_12:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t specialized Set._Variant.remove(_:)()
{
  OUTLINED_FUNCTION_34_26();
  static Hasher._hash(seed:_:)();
  OUTLINED_FUNCTION_21_46();
  if ((v1 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_47_17();
  while (!v2)
  {
    OUTLINED_FUNCTION_12_59();
    if ((v3 & 1) == 0) {
      return 0;
    }
    OUTLINED_FUNCTION_47_17();
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_10_70();
  if (!v4) {
    specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
  }
  unint64_t v5 = OUTLINED_FUNCTION_25_44();
  unint64_t v6 = specialized _NativeSet._delete(at:)(v5);
  OUTLINED_FUNCTION_26_38(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return v0;
}

{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_34_26();
  static Hasher._hash(seed:_:)();
  OUTLINED_FUNCTION_21_46();
  if ((v1 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_47_17();
  while (!v2)
  {
    OUTLINED_FUNCTION_12_59();
    if ((v3 & 1) == 0) {
      return 0;
    }
    OUTLINED_FUNCTION_47_17();
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_10_70();
  if (!v4) {
    specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
  }
  unint64_t v5 = OUTLINED_FUNCTION_25_44();
  unint64_t v6 = specialized _NativeSet._delete(at:)(v5);
  OUTLINED_FUNCTION_26_38(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return v0;
}

Swift::UInt specialized Set._Variant.remove(_:)(Swift::UInt a1)
{
  uint64_t v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  unint64_t v4 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v3 + 32));
  if (((*(void *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  if (*(void *)(*(void *)(v3 + 48) + 8 * v4) != a1)
  {
    do
    {
      OUTLINED_FUNCTION_12_59();
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v5 + 8 * v4) != a1);
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_10_70();
  if (!v7) {
    specialized _NativeSet.copy()();
  }
  unint64_t v8 = OUTLINED_FUNCTION_25_44();
  unint64_t v9 = specialized _NativeSet._delete(at:)(v8);
  OUTLINED_FUNCTION_26_38(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19);
  return a1;
}

uint64_t specialized Set._Variant._migrateToNative(_:removing:)()
{
  char v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = specialized _NativeSet.init(_:capacity:)(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      specialized _NativeSet._delete(at:)(v8);
      if (static NSObject.== infix(_:_:)())
      {
        *char v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t specialized _NativeSet._delete(at:)(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    unint64_t v35 = v1;
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      unint64_t v10 = type metadata accessor for UUID();
      unint64_t v11 = v10;
      id v12 = *(void **)(v10 - 8);
      char v13 = (void (*)(char *, unint64_t, unint64_t))v12[2];
      uint64_t v38 = v12 + 2;
      uint64_t v39 = v13;
      uint64_t v14 = v12[8];
      uint64_t v15 = v12[9];
      uint64_t v40 = v4;
      uint64_t v41 = v15;
      uint64_t v36 = (uint64_t (**)(char *, unint64_t))(v12 + 1);
      uint64_t v37 = v14;
      do
      {
        MEMORY[0x1F4188790](v10);
        uint64_t v17 = v7;
        uint64_t v18 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v19 = v41 * v6;
        v39(v18, *(void *)(v3 + 48) + v41 * v6, v11);
        uint64_t v20 = v3;
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v22 = v18;
        uint64_t v7 = v17;
        unint64_t v10 = (*v36)(v22, v11);
        unint64_t v23 = v21 & v17;
        if (v2 >= (uint64_t)v9)
        {
          if (v23 < v9 || v2 < (uint64_t)v23)
          {
LABEL_20:
            uint64_t v3 = v20;
            goto LABEL_24;
          }
        }
        else if (v23 < v9 && v2 < (uint64_t)v23)
        {
          goto LABEL_20;
        }
        uint64_t v3 = v20;
        uint64_t v25 = *(void *)(v20 + 48);
        int64_t v26 = v41 * v2;
        unint64_t v10 = v25 + v41 * v2;
        unint64_t v27 = v25 + v19 + v41;
        if (v41 * v2 < v19 || v10 >= v27)
        {
          unint64_t v10 = swift_arrayInitWithTakeFrontToBack();
LABEL_23:
          int64_t v2 = v6;
          goto LABEL_24;
        }
        int64_t v2 = v6;
        if (v26 != v19)
        {
          unint64_t v10 = swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v6 = (v6 + 1) & v17;
        uint64_t v4 = v40;
      }
      while (((*(void *)(v40 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
    char v1 = v35;
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v30 = *v1;
  uint64_t v31 = *(void *)(*v1 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v30 + 16) = v33;
    ++*(_DWORD *)(v30 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        unint64_t v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
            uint64_t v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              void *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  int64_t v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  void *v17;
  void *v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void *)(v3 + 40);
        unint64_t v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        id v12 = NSObject._rawHashValue(seed:)(v10);

        char v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_15:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            int64_t v19 = v2 != v6 || v17 >= v18 + 1;
            int64_t v2 = v6;
            if (v19)
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  uint64_t v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void *)(v3 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        id v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            uint64_t v16 = v2 != v6 || v15 >= v11 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              void *v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  uint64_t v18 = __OFSUB__(v17, 1);
  int64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void *)(v3 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        id v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            uint64_t v16 = v2 != v6 || v15 >= v11 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              void *v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  uint64_t v18 = __OFSUB__(v17, 1);
  int64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  Swift::Int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::UInt v10;
  Swift::Int v11;
  uint64_t v14;
  void *v15;
  void *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (void *)(v14 + 8 * v2);
            uint64_t v16 = (void *)(v14 + 8 * v6);
            uint64_t v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              void *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  int64_t v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void specialized _NativeSet._delete(at:)()
{
  OUTLINED_FUNCTION_31();
  v32[1] = v1;
  uint64_t v33 = v2;
  int64_t v4 = v3;
  uint64_t v34 = v5(0);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)v32 - v9;
  uint64_t v11 = *v0;
  uint64_t v12 = *v0 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(*v0 + 32);
  unint64_t v14 = (v4 + 1) & ~v13;
  if (((1 << v14) & *(void *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    v32[0] = v0;
    uint64_t v15 = ~v13;
    swift_retain();
    uint64_t v16 = _HashTable.previousHole(before:)();
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v17 = (v16 + 1) & v15;
      uint64_t v35 = *(void *)(v7 + 72);
      while (1)
      {
        int64_t v18 = v35 * v14;
        _s15ConversationKit15RecentsCallItemVWOcTm_3();
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
        dispatch thunk of Hashable.hash(into:)();
        Swift::Int v19 = Hasher._finalize()();
        outlined destroy of CountdownVoucher((uint64_t)v10, v33);
        Swift::Int v20 = v19 & v15;
        if (v4 >= (uint64_t)v17)
        {
          if (v20 < v17 || v4 < v20) {
            goto LABEL_24;
          }
        }
        else if (v20 < v17 && v4 < v20)
        {
          goto LABEL_24;
        }
        uint64_t v23 = *(void *)(v11 + 48);
        int64_t v24 = v35 * v4;
        unint64_t v25 = v23 + v35 * v4;
        unint64_t v26 = v23 + v18 + v35;
        if (v35 * v4 < v18 || v25 >= v26) {
          break;
        }
        int64_t v4 = v14;
        if (v24 != v18)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v14 = (v14 + 1) & v15;
        if (((*(void *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_25;
        }
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_23:
      int64_t v4 = v14;
      goto LABEL_24;
    }
LABEL_25:
    *(void *)(v12 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v4) - 1;
    swift_release();
    uint64_t v0 = (uint64_t *)v32[0];
  }
  else
  {
    *(void *)(v12 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v4) - 1;
  }
  uint64_t v28 = *v0;
  uint64_t v29 = *(void *)(*v0 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v28 + 16) = v31;
    ++*(_DWORD *)(v28 + 36);
    OUTLINED_FUNCTION_28();
  }
}

uint64_t specialized Set._Variant.update(with:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *int64_t v2 = 0x8000000000000000;
  specialized _NativeSet.update(with:isUnique:)(a1, isUniquelyReferenced_nonNull_native, a2);
  *int64_t v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t specialized _NativeSet.update(with:isUnique:)@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v46) = a2;
  uint64_t v45 = a3;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for UUID();
  unint64_t v52 = a1;
  uint64_t v44 = _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v50 = v5 + 56;
  uint64_t v51 = v5;
  if ((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v48 = ~v8;
    unint64_t v10 = *(void **)(v6 - 8);
    id v49 = (void (*)(char *, unint64_t, uint64_t))v10[2];
    uint64_t v12 = v10[8];
    uint64_t v11 = v10[9];
    uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 1);
    do
    {
      MEMORY[0x1F4188790](v7);
      v49((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v51 + 48) + v11 * v9, v6);
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
      char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v7 = (*v13)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v14) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v48;
    }
    while (((*(void *)(v50 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v14 = 0;
  }
  uint64_t v15 = v47;
  uint64_t v16 = *(void *)(*v47 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v19 = *(void *)(*v47 + 24);
  if (v19 >= v18 && (v46 & 1) != 0)
  {
    if (v14)
    {
LABEL_11:
      Swift::Int v20 = *(void **)(v6 - 8);
LABEL_27:
      uint64_t v37 = *v15;
      uint64_t v38 = *(void *)(*v15 + 48);
      uint64_t v39 = (void (*)(uint64_t, unint64_t, uint64_t))v20[4];
      unint64_t v40 = v20[9] * v9;
      uint64_t v41 = v45;
      v39(v45, v38 + v40, v6);
      v39(*(void *)(v37 + 48) + v40, v52, v6);
      uint64_t v35 = v41;
      uint64_t v36 = 0;
      return __swift_storeEnumTagSinglePayload(v35, v36, 1, v6);
    }
    goto LABEL_16;
  }
  if (v46)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v19 >= v18)
    {
      specialized _NativeSet.copy()();
      if (v14) {
        goto LABEL_11;
      }
LABEL_16:
      unint64_t v21 = v9 >> 6;
      uint64_t v22 = 1 << v9;
      goto LABEL_24;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  uint64_t v23 = *v15;
  uint64_t v24 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v25 = -1 << *(unsigned char *)(v23 + 32);
  unint64_t v9 = v24 & ~v25;
  unint64_t v21 = v9 >> 6;
  uint64_t v50 = v23 + 56;
  uint64_t v51 = v23;
  uint64_t v22 = 1 << v9;
  if (((1 << v9) & *(void *)(v23 + 56 + 8 * (v9 >> 6))) != 0)
  {
    unint64_t v26 = *(void **)(v6 - 8);
    uint64_t v48 = ~v25;
    id v46 = v26;
    id v49 = (void (*)(char *, unint64_t, uint64_t))v26[2];
    uint64_t v44 = (v6 - 8) & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    uint64_t v28 = v26[8];
    uint64_t v27 = v26[9];
    uint64_t v29 = (uint64_t (**)(char *, uint64_t))(v26 + 1);
    while (1)
    {
      MEMORY[0x1F4188790](v24);
      v49((char *)&v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v51 + 48) + v27 * v9, v6);
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v24 = (*v29)((char *)&v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v30) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v48;
      unint64_t v21 = v9 >> 6;
      uint64_t v22 = 1 << v9;
      if ((*(void *)(v50 + 8 * (v9 >> 6)) & (1 << v9)) == 0)
      {
        uint64_t v15 = v47;
        goto LABEL_23;
      }
    }
    Swift::Int v20 = v46;
    uint64_t v15 = v47;
    if (v14) {
      goto LABEL_27;
    }
  }
  else
  {
LABEL_23:
    if ((v14 & 1) == 0)
    {
LABEL_24:
      uint64_t v31 = *v15;
      *(void *)(*v15 + 8 * v21 + 56) |= v22;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(*(void *)(v31 + 48) + *(void *)(*(void *)(v6 - 8) + 72) * v9, v52, v6);
      uint64_t v32 = *(void *)(v31 + 16);
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (!v33)
      {
        *(void *)(v31 + 16) = v34;
        uint64_t v35 = v45;
        uint64_t v36 = 1;
        return __swift_storeEnumTagSinglePayload(v35, v36, 1, v6);
      }
      goto LABEL_30;
    }
  }
LABEL_31:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t specialized PlaceholderCallCenter.downgradeToAVLess(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __n128 v8 = MEMORY[0x1F4188790](a1);
  unint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (void *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  void *v15 = v16;
  (*(void (**)(void *, void, uint64_t, __n128))(v12 + 104))(v15, *MEMORY[0x1E4FBCBE8], v11, v13);
  id v17 = v16;
  unint64_t v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v43 = v7;
  uint64_t v19 = type metadata accessor for UUID();
  unint64_t v42 = v36;
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __n128 v22 = MEMORY[0x1F4188790](v19);
  unint64_t v18 = (unint64_t)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 8))(a3, a4, v22);
  PlaceholderCallCenter.setAVMode(_:for:)();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v36[1] = v36;
  uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v39 = a3;
  unint64_t v40 = v10;
  unint64_t v37 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v25 = (char *)v36 - v37;
  __n128 v27 = MEMORY[0x1F4188790](v26);
  uint64_t v41 = v20;
  uint64_t v16 = *(void **)(v20 + 16);
  uint64_t v38 = v19;
  ((void (*)(unint64_t, unint64_t, uint64_t, __n128))v16)(v18, v18, v19, v27);
  swift_beginAccess();
  specialized Set._Variant.update(with:)(v18, (uint64_t)v25);
  outlined destroy of UUID?((uint64_t)v25);
  swift_endAccess();
  if (one-time initialization token for conversationKit != -1) {
LABEL_5:
  }
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C3769620;
  __n128 v29 = MEMORY[0x1F4188790](v28);
  uint64_t v30 = v38;
  uint64_t v31 = (char *)v36 - v37;
  ((void (*)(char *, unint64_t, uint64_t, __n128))v16)((char *)v36 - v37, v18, v38, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v30);
  uint64_t v32 = specialized >> prefix<A>(_:)((uint64_t)v31);
  uint64_t v34 = v33;
  outlined destroy of UUID?((uint64_t)v31);
  *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v28 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v28 + 32) = v32;
  *(void *)(v28 + 40) = v34;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v41 + 8))(v18, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v40, v39);
}

uint64_t sub_1C3481C60()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C3481C98()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:)()
{
  closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t method lookup function for PlaceholderCallCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaceholderCallCenter);
}

uint64_t dispatch thunk of PlaceholderCallCenter.__allocating_init(conversationManager:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t outlined destroy of CountdownVoucher(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void ClarityUIFavoritesView.navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  JUMPOUT(0x1C87728E0);
}

uint64_t key path setter for ClarityUIFavoritesView.navigationPath : ClarityUIFavoritesView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return ClarityUIFavoritesView.navigationPath.setter((uint64_t)v5);
}

uint64_t ClarityUIFavoritesView.navigationPath.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  Binding.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*ClarityUIFavoritesView.navigationPath.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = type metadata accessor for NavigationPath();
  *uint64_t v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  v3[4] = v7;
  OUTLINED_FUNCTION_0();
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  v3[5] = v9;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v1, (uint64_t)v9, &demangling cache variable for type metadata for Binding<NavigationPath>);
  MEMORY[0x1C87728E0](v7);
  return ClarityUIOutgoingCallActionsView.navigationPath.modify;
}

uint64_t ClarityUIFavoritesView.$navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  return Binding.projectedValue.getter();
}

uint64_t ClarityUIFavoritesView.isDialerPresented.getter()
{
  type metadata accessor for ClarityUIFavoritesView();
  OUTLINED_FUNCTION_3_116();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C87728E0](&v2, v0);
  return v2;
}

uint64_t type metadata accessor for ClarityUIFavoritesView()
{
  uint64_t result = type metadata singleton initialization cache for ClarityUIFavoritesView;
  if (!type metadata singleton initialization cache for ClarityUIFavoritesView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClarityUIFavoritesView.isDialerPresented.setter()
{
  return Binding.wrappedValue.setter();
}

void (*ClarityUIFavoritesView.isDialerPresented.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ClarityUIFavoritesView() + 20));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[3] = *v4;
  v3[4] = v6;
  LOBYTE(v4) = *((unsigned char *)v4 + 16);
  *((unsigned char *)v3 + 19) = (_BYTE)v4;
  *uint64_t v3 = v5;
  v3[1] = v6;
  *((unsigned char *)v3 + 16) = (_BYTE)v4;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C87728E0]();
  return AnimatedSaveView.saveState.modify;
}

uint64_t ClarityUIFavoritesView.$isDialerPresented.getter()
{
  type metadata accessor for ClarityUIFavoritesView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ClarityUIFavoritesView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>);
  return List<>.init(content:)();
}

uint64_t closure #1 in ClarityUIFavoritesView.body.getter@<X0>(char **a1@<X0>, char *a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v108 = (uint64_t)v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v106 = (char *)v86 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<Label<Text, Image>, Never>);
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v91 = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v86 - v10;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.badge(_:)>>.0);
  uint64_t v97 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v96 = (char *)v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v95 = (char *)v86 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v92 = (char *)v86 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v89 = (char *)v86 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v102 = (char *)v86 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v109 = (char *)v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v86 - v24;
  uint64_t v26 = type metadata accessor for ClarityUIFavoritesView();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>);
  uint64_t v104 = *(void *)(v29 - 8);
  uint64_t v105 = v29;
  MEMORY[0x1F4188790](v29);
  uint64_t v103 = (char *)v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)v86 - v32;
  uint64_t v113 = ClarityUIFavoritesList.favorites.getter();
  outlined init with copy of ClarityUIFavoritesView((uint64_t)a1, (uint64_t)v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v35 = (v34 + 16) & ~v34;
  uint64_t v98 = v34 | 7;
  uint64_t v99 = v35 + v28;
  uint64_t v36 = swift_allocObject();
  uint64_t v100 = v35;
  uint64_t v101 = (uint64_t)v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with take of ClarityUIFavoritesView(v101, v36 + v35);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ClarityUIFavorite]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [ClarityUIFavorite] and conformance [A], &demangling cache variable for type metadata for [ClarityUIFavorite]);
  lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?();
  lazy protocol witness table accessor for type ClarityUIFavorite and conformance ClarityUIFavorite();
  id v110 = v33;
  ForEach<>.init(_:content:)();
  id v37 = (id)*(int *)(v26 + 24);
  if (ClarityUIPreferences.canCallContacts.getter())
  {
    uint64_t v87 = v25;
    char v112 = 0;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
    unint64_t v39 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
    lazy protocol witness table accessor for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination();
    NavigationLink<>.init<A>(value:label:)();
    unint64_t v40 = ClarityUICallHistory.recentCalls.getter();
    unint64_t v41 = v40;
    if (v40 >> 62) {
      goto LABEL_20;
    }
    uint64_t v42 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    for (uint64_t result = swift_bridgeObjectRetain(); ; v42 = result)
    {
      uint64_t v88 = a1;
      v86[2] = v37;
      v86[1] = v39;
      if (!v42)
      {
LABEL_14:
        swift_bridgeObjectRelease_n();
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, Image>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, Image>, Never>);
        uint64_t v51 = v11;
        v86[0] = v38;
        unint64_t v52 = v89;
        uint64_t v53 = v94;
        View.badge(_:)();
        uint64_t v54 = v90;
        id v55 = *(void (**)(char *, uint64_t))(v93 + 8);
        v55(v51, v53);
        uint64_t v56 = v97;
        unint64_t v57 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
        v57(v102, v52, v54);
        char v111 = 0;
        lazy protocol witness table accessor for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination();
        uint64_t v58 = v91;
        NavigationLink<>.init<A>(value:label:)();
        unsigned int v59 = v95;
        View.badge(_:)();
        v55(v58, v53);
        uint64_t v60 = v92;
        v57(v92, v59, v54);
        uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
        uint64_t v62 = v102;
        v61(v59, v102, v54);
        uint64_t v63 = v96;
        v61(v96, v60, v54);
        uint64_t v64 = (uint64_t)v109;
        v61(v109, v59, v54);
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0));
        v61((char *)(v64 + *(int *)(v65 + 48)), v63, v54);
        double v66 = *(void (**)(char *, uint64_t))(v56 + 8);
        v66(v60, v54);
        v66(v62, v54);
        v66(v63, v54);
        v66(v59, v54);
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>);
        __swift_storeEnumTagSinglePayload(v64, 0, 1, v67);
        uint64_t v50 = (uint64_t)v87;
        outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v64, (uint64_t)v87, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
        a1 = v88;
        goto LABEL_15;
      }
      if (v42 < 1) {
        break;
      }
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      unint64_t v39 = v41 & 0xC000000000000001;
      a1 = &selRef_setEffectsPickerDrawer_;
      while (1)
      {
        id v46 = v39 ? (id)MEMORY[0x1C87744F0](v44, v41) : *(id *)(v41 + 8 * v44 + 32);
        id v47 = v46;
        id v37 = objc_msgSend(v46, sel_unreadCount);

        BOOL v48 = __OFADD__(v45, v37);
        v45 += (uint64_t)v37;
        if (v48) {
          break;
        }
        if (v42 == ++v44) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    }
    __break(1u);
  }
  else
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v49);
    uint64_t v50 = (uint64_t)v25;
LABEL_15:
    char v68 = ClarityUIPreferences.dialerKeypadEnabled.getter();
    uint64_t v69 = (uint64_t)v106;
    if (v68)
    {
      uint64_t v70 = (uint64_t)a1;
      uint64_t v71 = v101;
      outlined init with copy of ClarityUIFavoritesView(v70, v101);
      uint64_t v72 = swift_allocObject();
      outlined init with take of ClarityUIFavoritesView(v71, v72 + v100);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
      Button.init(action:label:)();
      uint64_t v73 = 0;
    }
    else
    {
      uint64_t v73 = 1;
    }
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>);
    __swift_storeEnumTagSinglePayload(v69, v73, 1, v74);
    uint64_t v75 = v103;
    uint64_t v76 = v104;
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    uint64_t v78 = v105;
    v77(v103, v110, v105);
    uint64_t v79 = v50;
    uint64_t v80 = v50;
    uint64_t v81 = (uint64_t)v109;
    outlined init with copy of Environment<DynamicTypeSize>.Content(v80, (uint64_t)v109, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    uint64_t v82 = v108;
    outlined init with copy of Environment<DynamicTypeSize>.Content(v69, v108, &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    id v83 = v107;
    v77(v107, v75, v78);
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?));
    outlined init with copy of Environment<DynamicTypeSize>.Content(v81, (uint64_t)&v83[*(int *)(v84 + 48)], &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    outlined init with copy of Environment<DynamicTypeSize>.Content(v82, (uint64_t)&v83[*(int *)(v84 + 64)], &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v69, &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v79, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    id v85 = *(void (**)(char *, uint64_t))(v76 + 8);
    v85(v110, v78);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v82, &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    return ((uint64_t (*)(char *, uint64_t))v85)(v75, v78);
  }
  return result;
}

uint64_t partial apply for closure #1 in ClarityUIFavoritesView.body.getter@<X0>(char *a1@<X8>)
{
  return closure #1 in ClarityUIFavoritesView.body.getter(*(char ***)(v1 + 16), a1);
}

uint64_t closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>.Storage);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
  uint64_t v78 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.badge(_:)>>.0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v92 = *((void *)a1 + 6);
  long long v17 = a1[2];
  long long v18 = *a1;
  long long v90 = a1[1];
  long long v91 = v17;
  long long v89 = v18;
  unint64_t v19 = *(void *)(v90 + 16);
  if (v19 >= 2)
  {
    uint64_t v76 = v6;
    uint64_t v77 = v9;
    uint64_t v74 = v10;
    uint64_t v20 = (void *)v91;
    uint64_t v21 = v92;
    uint64_t v70 = *((void *)&v91 + 1);
    id v81 = (id)*((void *)&v90 + 1);
    long long v82 = v91;
    uint64_t v83 = v92;
    uint64_t v84 = v90;
    MEMORY[0x1F4188790](v16);
    id v75 = v4;
    *(&v66 - 2) = (uint64_t)&v89;
    uint64_t v72 = v14;
    uint64_t v73 = v22;
    uint64_t v24 = v23;
    uint64_t v71 = v25;
    id v27 = v26;
    id v28 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
    uint64_t v29 = v12;
    uint64_t v30 = v78;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Label<Text, ClarityUIContactAvatar> and conformance Label<A, B>, (uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
    lazy protocol witness table accessor for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination();
    NavigationLink<>.init<A>(value:label:)();
    type metadata accessor for ClarityUIFavoritesView();
    id v81 = v27;
    *(void *)&long long v82 = v28;
    *((void *)&v82 + 1) = v70;
    uint64_t v83 = v21;
    id v31 = v27;
    id v32 = v28;
    swift_bridgeObjectRetain();
    v94.cnContact.super.Class isa = (Class)&v81;
    ClarityUICallHistory.badgeCount(for:)(v94);
    swift_bridgeObjectRelease();

    uint64_t v33 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    uint64_t v34 = v71;
    uint64_t v35 = (void *)v74;
    View.badge(_:)();
    (*(void (**)(char *, void *))(v30 + 8))(v29, v35);
    uint64_t v36 = v72;
    uint64_t v37 = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v73, v34, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v76, v37, v24);
    swift_storeEnumTagMultiPayload();
    id v81 = v35;
    *(void *)&long long v82 = v33;
    swift_getOpaqueTypeConformance2();
    uint64_t v38 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v24);
LABEL_5:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>);
    __swift_storeEnumTagSinglePayload(v38, 0, 1, v62);
    return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v38, v80, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
  }
  if (v19)
  {
    char v68 = &v66;
    uint64_t v39 = *(void *)(v90 + 32);
    uint64_t v40 = *(void *)(v90 + 40);
    uint64_t v41 = *(unsigned __int8 *)(v90 + 48);
    uint64_t v43 = *(void *)(v90 + 56);
    uint64_t v42 = *(void *)(v90 + 64);
    uint64_t v44 = (void *)*((void *)&v90 + 1);
    uint64_t v67 = *((void *)&v91 + 1);
    id v75 = (id)v91;
    uint64_t v74 = v10;
    uint64_t v45 = v92;
    id v81 = (id)*((void *)&v90 + 1);
    long long v82 = v91;
    uint64_t v83 = v92;
    uint64_t v84 = v39;
    uint64_t v85 = v40;
    uint64_t v70 = v40;
    uint64_t v86 = v41;
    uint64_t v87 = v43;
    uint64_t v88 = v42;
    uint64_t v69 = v42;
    MEMORY[0x1F4188790](v91);
    uint64_t v76 = v6;
    uint64_t v77 = v9;
    *(&v66 - 2) = (uint64_t)&v89;
    uint64_t v73 = v46;
    uint64_t v72 = v14;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    swift_bridgeObjectRetain();
    uint64_t v71 = v43;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v43);
    swift_bridgeObjectRetain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v43);
    id v51 = v44;
    id v52 = v75;
    swift_bridgeObjectRetain();
    id v75 = v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
    uint64_t v53 = v12;
    uint64_t v54 = v78;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Label<Text, ClarityUIContactAvatar> and conformance Label<A, B>, (uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
    lazy protocol witness table accessor for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination();
    NavigationLink<>.init<A>(value:label:)();
    type metadata accessor for ClarityUIFavoritesView();
    id v81 = v51;
    *(void *)&long long v82 = v52;
    *((void *)&v82 + 1) = v67;
    uint64_t v83 = v45;
    id v55 = v51;
    id v56 = v52;
    swift_bridgeObjectRetain();
    v95.cnContact.super.Class isa = (Class)&v81;
    ClarityUICallHistory.badgeCount(for:)(v95);
    swift_bridgeObjectRelease();

    uint64_t v57 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    uint64_t v58 = v74;
    View.badge(_:)();
    unsigned int v59 = (void *)v58;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v58);
    uint64_t v60 = v72;
    uint64_t v61 = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v73, v50, v48);
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v76, v61, v48);
    swift_storeEnumTagMultiPayload();
    id v81 = v59;
    *(void *)&long long v82 = v57;
    swift_getOpaqueTypeConformance2();
    uint64_t v38 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)();
    swift_bridgeObjectRelease();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v71);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v48);
    goto LABEL_5;
  }
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>);
  uint64_t v65 = v80;
  return __swift_storeEnumTagSinglePayload(v65, 1, 1, v64);
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 40);
  v8[0] = *(_OWORD *)(a1 + 24);
  v8[1] = v3;
  outlined retain of ClarityUIContact((uint64_t)v8);
  CNContact.clarityUIDisplayName.getter();
  outlined release of ClarityUIContact((uint64_t)v8);
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6 & 1;
  *(void *)(a2 + 24) = v7;
  return result;
}

id closure #2 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 24);
  id v5 = *(id *)(a1 + 32);
  *a2 = v2;
  a2[1] = v5;
  id v3 = v2;
  return v5;
}

uint64_t closure #2 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #2 in closure #1 in ClarityUIFavoritesView.body.getter(MEMORY[0x1E4F59E70]);
}

uint64_t closure #4 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #2 in closure #1 in ClarityUIFavoritesView.body.getter(MEMORY[0x1E4F59E78]);
}

uint64_t closure #2 in closure #1 in ClarityUIFavoritesView.body.getter(void (*a1)(__n128))
{
  uint64_t v2 = type metadata accessor for ClarityUINavigationTitle();
  __n128 v3 = MEMORY[0x1F4188790](v2 - 8);
  a1(v3);
  return Label<>.init(_:)();
}

uint64_t closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return swift_release();
}

uint64_t closure #1 in closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return Binding.wrappedValue.setter();
}

uint64_t closure #6 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001C37B0150;
  v2.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  lazy protocol witness table accessor for type String and conformance String();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t ClarityUIFavoritesView.init(navigationPath:isDialerPresented:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, a5, &demangling cache variable for type metadata for Binding<NavigationPath>);
  uint64_t v9 = (int *)type metadata accessor for ClarityUIFavoritesView();
  uint64_t v10 = a5 + v9[5];
  *(void *)uint64_t v10 = a2;
  *(void *)(v10 + 8) = a3;
  *(unsigned char *)(v10 + 16) = a4;
  uint64_t v11 = v9[6];
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  *(void *)(a5 + v11) = static ClarityUIPreferences.shared;
  uint64_t v12 = v9[7];
  uint64_t v13 = one-time initialization token for shared;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  *(void *)(a5 + v12) = static ClarityUICallHistory.shared;
  uint64_t v14 = v9[8];
  uint64_t v15 = one-time initialization token for shared;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  *(void *)(a5 + v14) = static ClarityUIFavoritesList.shared;
  return swift_retain();
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIFavoritesView()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C3483C0C()
{
}

uint64_t sub_1C3483C34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ClarityUIFavoritesView.isDialerPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C3483C64()
{
  return ClarityUIFavoritesView.isDialerPresented.setter();
}

uint64_t *initializeBufferWithCopyOfBuffer for ClarityUIFavoritesView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
                + 32);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v7 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v14[16] = v15[16];
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v7 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityUIFavoritesView(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v3 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ClarityUIFavoritesView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  v13[16] = v14[16];
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v16 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ClarityUIFavoritesView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  v11[16] = v12[16];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for ClarityUIFavoritesView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  long long v15 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(_OWORD *)uint64_t v13 = v15;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v16 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  return a1;
}

void *assignWithTake for ClarityUIFavoritesView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_release();
  v11[16] = v12[16];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIFavoritesView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3484308);
}

uint64_t sub_1C3484308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ClarityUIFavoritesView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C34843B0);
}

void sub_1C34843B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

void type metadata completion function for ClarityUIFavoritesView()
{
  type metadata accessor for Binding<NavigationPath>();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C34844E8()
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type List<Never, TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>>);
}

uint64_t outlined init with copy of ClarityUIFavoritesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClarityUIFavoritesView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ClarityUIFavoritesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClarityUIFavoritesView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ClarityUIFavoritesView();
  OUTLINED_FUNCTION_1_1(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(a1, v7, a2);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
    lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ClarityUIFavorite and conformance ClarityUIFavorite()
{
  unint64_t result = lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite;
  if (!lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite;
  if (!lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite);
  }
  return result;
}

uint64_t objectdestroyTm_14()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ClarityUIFavoritesView() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_release();
  swift_release();
  uint64_t v3 = v2
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  type metadata accessor for NavigationPath();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v4 + 8))(v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  uint64_t v0 = type metadata accessor for ClarityUIFavoritesView();
  OUTLINED_FUNCTION_1_1(v0);
  return closure #5 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t partial apply for closure #1 in closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #1 in closure #5 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t outlined retain of ClarityUIContact(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(id *)a1;
  id v4 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of ClarityUIContact(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(*(void *)(v1 + 16), a1);
}

id partial apply for closure #2 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(void *a1@<X8>)
{
  return closure #2 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(*(void *)(v1 + 16), a1);
}

char *MomentsIndicatorBubble.__allocating_init(model:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return MomentsIndicatorBubble.init(model:)(a1);
}

id one-time initialization function for font()
{
  id result = objc_msgSend(self, sel_systemFontOfSize_, 16.0);
  static MomentsIndicatorBubble.font = (uint64_t)result;
  return result;
}

uint64_t *MomentsIndicatorBubble.font.unsafeMutableAddressor()
{
  if (one-time initialization token for font != -1) {
    swift_once();
  }
  return &static MomentsIndicatorBubble.font;
}

id static MomentsIndicatorBubble.font.getter()
{
  if (one-time initialization token for font != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MomentsIndicatorBubble.font;
  return v0;
}

void one-time initialization function for layoutPadding()
{
  static MomentsIndicatorBubble.layoutPadding = 0x4024000000000000;
}

uint64_t *MomentsIndicatorBubble.layoutPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for layoutPadding != -1) {
    swift_once();
  }
  return &static MomentsIndicatorBubble.layoutPadding;
}

double static MomentsIndicatorBubble.layoutPadding.getter()
{
  if (one-time initialization token for layoutPadding != -1) {
    swift_once();
  }
  return *(double *)&static MomentsIndicatorBubble.layoutPadding;
}

uint64_t key path getter for MomentsIndicatorBubble.model : MomentsIndicatorBubble@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MomentsIndicatorBubble.model : MomentsIndicatorBubble(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x80);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t MomentsIndicatorBubble.model.getter()
{
  return swift_retain();
}

uint64_t MomentsIndicatorBubble.model.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t (*MomentsIndicatorBubble.model.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for MomentsIndicatorBubble.delegate : MomentsIndicatorBubble(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x90))();
}

uint64_t key path setter for MomentsIndicatorBubble.delegate : MomentsIndicatorBubble(uint64_t a1, void **a2)
{
  outlined init with copy of MomentsIndicatorBubbleDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x98))(v4);
}

uint64_t MomentsIndicatorBubble.delegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate;
  swift_beginAccess();
  return outlined init with copy of MomentsIndicatorBubbleDelegate?(v3, a1);
}

uint64_t MomentsIndicatorBubble.delegate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate;
  swift_beginAccess();
  outlined assign with take of MomentsIndicatorBubbleDelegate?(a1, v3);
  return swift_endAccess();
}

uint64_t (*MomentsIndicatorBubble.delegate.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for MomentsIndicatorBubble.bottomConstraint : MomentsIndicatorBubble@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MomentsIndicatorBubble.bottomConstraint : MomentsIndicatorBubble(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xB0);
  id v4 = *a1;
  return v3(v2);
}

void *MomentsIndicatorBubble.bottomConstraint.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void MomentsIndicatorBubble.bottomConstraint.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*MomentsIndicatorBubble.bottomConstraint.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

void MomentsIndicatorBubble.timer.setter(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer) = a1;
}

char *MomentsIndicatorBubble.init(model:)(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = &v1[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_bottomConstraint] = 0;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_model] = a1;
  swift_retain();

  v40.receiver = v6;
  v40.super_class = (Class)type metadata accessor for MomentsIndicatorBubble();
  id v7 = objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setUserInteractionEnabled_, 0);
  uint64_t v8 = (char *)v7;
  id v9 = static MomentsIndicatorBubble.makeBackgroundColor()();
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v10, sel_setCornerRadius_, 10.0);

  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator;
  uint64_t v12 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator];
  objc_msgSend(v8, sel_addSubview_, v12);
  uint64_t v13 = *(uint64_t (**)(void))(*(void *)a1 + 104);
  id v14 = v12;
  uint64_t v15 = v13();
  outlined bridged method (mbnn) of @objc UILabel.text.setter(v15, v16, v14);

  uint64_t v17 = *(void **)&v8[v11];
  long long v18 = self;
  id v19 = v17;
  id v20 = objc_msgSend(v18, sel_whiteColor);
  objc_msgSend(v19, sel_setTextColor_, v20);

  uint64_t v21 = one-time initialization token for font;
  id v22 = *(id *)&v8[v11];
  if (v21 != -1) {
    swift_once();
  }
  objc_msgSend(v22, sel_setFont_, static MomentsIndicatorBubble.font);

  uint64_t v23 = *(void **)&v8[v11];
  objc_msgSend(v23, sel_setLineBreakMode_, 0);
  objc_msgSend(v23, sel_setNumberOfLines_, 0);
  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v24 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C3769580;
  id v26 = objc_msgSend(v23, sel_centerXAnchor);
  id v27 = objc_msgSend(v8, sel_centerXAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(void *)(v25 + 32) = v28;
  id v29 = objc_msgSend(*(id *)&v8[v11], sel_centerYAnchor);
  id v30 = objc_msgSend(v8, sel_centerYAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(void *)(v25 + 40) = v31;
  id v32 = objc_msgSend(v8, sel_heightAnchor);
  id v33 = objc_msgSend(*(id *)&v8[v11], sel_heightAnchor);
  if (one-time initialization token for layoutPadding != -1) {
    swift_once();
  }
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, *(double *)&static MomentsIndicatorBubble.layoutPadding+ *(double *)&static MomentsIndicatorBubble.layoutPadding);

  *(void *)(v25 + 48) = v34;
  id v35 = objc_msgSend(v8, sel_widthAnchor);
  id v36 = objc_msgSend(*(id *)&v8[v11], sel_widthAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, *(double *)&static MomentsIndicatorBubble.layoutPadding+ *(double *)&static MomentsIndicatorBubble.layoutPadding);

  *(void *)(v25 + 56) = v37;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, isa);

  swift_release();
  return v8;
}

uint64_t outlined init with copy of MomentsIndicatorBubbleDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MomentsIndicatorBubbleDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MomentsIndicatorBubbleDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MomentsIndicatorBubbleDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MomentsIndicatorBubble()
{
  return self;
}

id static MomentsIndicatorBubble.makeBackgroundColor()()
{
  BOOL IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  if (IsReduceTransparencyEnabled) {
    double v1 = 1.0;
  }
  else {
    double v1 = 0.3;
  }
  if (IsReduceTransparencyEnabled) {
    double v2 = 0.3;
  }
  else {
    double v2 = 0.0;
  }
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  return objc_msgSend(v3, sel_initWithRed_green_blue_alpha_, v2, v2, v2, v1);
}

id MomentsIndicatorBubble.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void MomentsIndicatorBubble.init(coder:)()
{
  double v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate];
  *(_OWORD *)double v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_bottomConstraint] = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall MomentsIndicatorBubble.start()()
{
  double v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_invalidate);
    MomentsIndicatorBubble.timer.setter(0);
  }
  id v3 = self;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7[4] = partial apply for closure #1 in MomentsIndicatorBubble.start();
  v7[5] = v4;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  void v7[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  long long v7[3] = &block_descriptor_83;
  id v5 = _Block_copy(v7);
  swift_release();
  id v6 = objc_msgSend(v3, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v5, 4.0);
  _Block_release(v5);
  MomentsIndicatorBubble.timer.setter((uint64_t)v6);
}

void closure #1 in MomentsIndicatorBubble.start()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    MomentsIndicatorBubble.timer.setter(0);
    id v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    uint64_t v16 = partial apply for closure #1 in FlashView.flash(completion:);
    uint64_t v17 = v6;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v13 = 1107296256;
    id v14 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v15 = &block_descriptor_12_4;
    id v7 = _Block_copy(&aBlock);
    id v8 = v4;
    swift_release();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    uint64_t v16 = partial apply for closure #2 in closure #1 in MomentsIndicatorBubble.start();
    uint64_t v17 = v9;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v13 = 1107296256;
    id v14 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    uint64_t v15 = &block_descriptor_18_2;
    id v10 = _Block_copy(&aBlock);
    id v11 = v8;
    swift_release();
    objc_msgSend(v5, sel_animateWithDuration_animations_completion_, v7, v10, 0.25);
    _Block_release(v10);
    _Block_release(v7);
  }
}

uint64_t closure #2 in closure #1 in MomentsIndicatorBubble.start()(uint64_t a1, void *a2)
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x90))(v9);
  if (!v9[3]) {
    return outlined destroy of MomentsIndicatorBubbleDelegate?((uint64_t)v9);
  }
  outlined init with copy of IDSLookupManager((uint64_t)v9, (uint64_t)v6);
  outlined destroy of MomentsIndicatorBubbleDelegate?((uint64_t)v9);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(void *, uint64_t, uint64_t))(v4 + 8))(a2, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

Swift::Void __swiftcall MomentsIndicatorBubble.refresh()()
{
  double v1 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78);
  uint64_t v2 = v1();
  (*(void (**)(uint64_t))(*(void *)v2 + 160))(v2);
  uint64_t v3 = swift_release();
  uint64_t v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator);
  uint64_t v5 = ((uint64_t (*)(uint64_t))v1)(v3);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 104))(v5);
  uint64_t v8 = v7;
  swift_release();
  outlined bridged method (mbnn) of @objc UILabel.text.setter(v6, v8, v4);
  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer), sel_invalidate);
  objc_msgSend(v0, sel_start);
}

uint64_t MomentsIndicatorBubble.description.getter()
{
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator], sel_text);
  if (!v1)
  {
    v5.receiver = v0;
    v5.super_class = (Class)type metadata accessor for MomentsIndicatorBubble();
    id v1 = objc_msgSendSuper2(&v5, sel_description);
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id MomentsIndicatorBubble.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void MomentsIndicatorBubble.init(frame:)()
{
}

id MomentsIndicatorBubble.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MomentsIndicatorBubble();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C34860E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in MomentsIndicatorBubble.start()(uint64_t a1)
{
  closure #1 in MomentsIndicatorBubble.start()(a1, v1);
}

uint64_t dispatch thunk of MomentsIndicatorBubbleDelegate.didTimeOut(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for MomentsIndicatorBubble(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MomentsIndicatorBubble);
}

uint64_t dispatch thunk of MomentsIndicatorBubble.model.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.model.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.model.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.bottomConstraint.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.bottomConstraint.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.bottomConstraint.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.__allocating_init(model:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.refresh()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t outlined destroy of MomentsIndicatorBubbleDelegate?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MomentsIndicatorBubbleDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C34863E4()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in MomentsIndicatorBubble.start()(uint64_t a1)
{
  return closure #2 in closure #1 in MomentsIndicatorBubble.start()(a1, *(void **)(v1 + 16));
}

uint64_t key path getter for ProtectedAppsObserver.delegate : ProtectedAppsObserver@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x58))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ProtectedAppsObserver.delegate : ProtectedAppsObserver(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x60);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ProtectedAppsObserver.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate;
  swift_beginAccess();
  return MEMORY[0x1C8776240](v1);
}

uint64_t ProtectedAppsObserver.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ProtectedAppsObserver.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id ProtectedAppsObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ProtectedAppsObserver.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ProtectedAppsObserver();
  id v1 = objc_msgSendSuper2(&v6, sel_init);
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(objc_msgSend(v2, sel_subjectMonitorRegistry), sel_addMonitor_, v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v3;
}

uint64_t type metadata accessor for ProtectedAppsObserver()
{
  return self;
}

uint64_t ProtectedAppsObserver.appProtectionSubjectsChanged(_:for:)()
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
  if (result)
  {
    uint64_t v3 = v2;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void ProtectedAppsObserver.hiddenApps.getter()
{
  id v0 = objc_msgSend(self, sel_hiddenApplications);
  type metadata accessor for APApplication();
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v12 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v4 = (id)MEMORY[0x1C87744F0](v3, v1);
      }
      else {
        id v4 = *(id *)(v1 + 8 * v3 + 32);
      }
      uint64_t v5 = v4;
      id v6 = objc_msgSend(v4, sel_bundleIdentifier);
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      unint64_t v10 = *(void *)(v12 + 16);
      if (v10 >= *(void *)(v12 + 24) >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v3;
      *(void *)(v12 + 16) = v10 + 1;
      uint64_t v11 = v12 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v9;
    }
    while (v2 != v3);
    goto LABEL_11;
  }
  __break(1u);
}

id ProtectedAppsObserver.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProtectedAppsObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ProtectedAppsObserverProtocol.delegate.getter in conformance ProtectedAppsObserver()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x58))();
}

uint64_t protocol witness for ProtectedAppsObserverProtocol.delegate.setter in conformance ProtectedAppsObserver()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x60))();
}

void (*protocol witness for ProtectedAppsObserverProtocol.delegate.modify in conformance ProtectedAppsObserver(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v1) + 0x68))();
  return protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton;
}

uint64_t protocol witness for ProtectedAppsObserverProtocol.hiddenApps.getter in conformance ProtectedAppsObserver()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x78))();
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.hiddenApps.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ProtectedAppsObserverDelegate.appProtectionsChanged()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for ProtectedAppsObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProtectedAppsObserver);
}

uint64_t dispatch thunk of ProtectedAppsObserver.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.appProtectionSubjectsChanged(_:for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.hiddenApps.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t thunk for @escaping @callee_guaranteed () -> (@out ())(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t specialized static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = OUTLINED_FUNCTION_26();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for PlatformAlert();
  uint64_t v7 = self;
  swift_retain();
  id v8 = objc_msgSend(v7, sel_conversationKit);
  OUTLINED_FUNCTION_0_23(0xD000000000000021, 0x80000001C37B0260);
  uint64_t v10 = v9;

  id v11 = objc_msgSend(v7, sel_conversationKit, 0xE000000000000000);
  uint64_t v12 = OUTLINED_FUNCTION_0_23(0xD000000000000023, 0x80000001C37B0290);

  uint64_t v13 = OUTLINED_FUNCTION_17_48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_retain();
    id v14 = objc_msgSend(v7, sel_conversationKit, 0xE000000000000000);
    OUTLINED_FUNCTION_2_115(19279, 0xE200000000000000);
    OUTLINED_FUNCTION_35_18();
    char v26 = 0;
    uint64_t v15 = OUTLINED_FUNCTION_26();
    *(void *)(v15 + 16) = partial apply for closure #2 in PeoplePickerViewController.addPeople();
    *(void *)(v15 + 24) = v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, char *, uint64_t (*)(), uint64_t))(*(void *)v13 + 328);
    swift_retain();
    v16(v10, v12, &v26, closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)partial apply, v15);
    swift_release();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v7, sel_conversationKit, 0xE000000000000000);
    uint64_t v18 = OUTLINED_FUNCTION_3_117();
    uint64_t v20 = v19;

    char v25 = 2;
    uint64_t v21 = OUTLINED_FUNCTION_26();
    *(void *)(v21 + 16) = partial apply for closure #2 in PeoplePickerViewController.addPeople();
    *(void *)(v21 + 24) = v6;
    swift_retain();
    v16(v18, v20, &v25, closure #2 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)partial apply, v21);
    swift_release();
    swift_bridgeObjectRelease();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v22 + 336))(0);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    swift_release();
  }
  OUTLINED_FUNCTION_16();
  return swift_release();
}

uint64_t static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  type metadata accessor for PlatformAlert();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_conversationKit);
  OUTLINED_FUNCTION_0_23(0xD000000000000021, 0x80000001C37B0260);

  id v7 = objc_msgSend(v5, sel_conversationKit, 0xE000000000000000);
  OUTLINED_FUNCTION_0_23(0xD000000000000023, 0x80000001C37B0290);

  uint64_t v8 = OUTLINED_FUNCTION_17_48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_retain();
    id v9 = objc_msgSend(v5, sel_conversationKit, 0xE000000000000000);
    OUTLINED_FUNCTION_2_115(19279, 0xE200000000000000);
    OUTLINED_FUNCTION_35_18();
    uint64_t v10 = OUTLINED_FUNCTION_26();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    OUTLINED_FUNCTION_3_2();
    uint64_t v12 = *(void (**)(uint64_t))(v11 + 328);
    swift_retain();
    uint64_t v13 = OUTLINED_FUNCTION_10_71();
    v12(v13);
    swift_release();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v5, sel_conversationKit, 0xE000000000000000);
    OUTLINED_FUNCTION_3_117();

    uint64_t v15 = OUTLINED_FUNCTION_26();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    swift_retain();
    uint64_t v16 = OUTLINED_FUNCTION_11_61();
    v12(v16);
    swift_release();
    swift_bridgeObjectRelease();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v17 + 336))(0);
    return swift_release_n();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return a2(0);
  }
}

uint64_t type metadata accessor for PlatformAlert()
{
  return self;
}

void static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  type metadata accessor for ConversationControlsManager(0);
  static ConversationControlsManager.collaborationHUDStrings(initiator:itemTitle:)();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  if (v10[2])
  {
    uint64_t v16 = v10[4];
    uint64_t v15 = v10[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v15 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  type metadata accessor for PlatformAlert();
  uint64_t v17 = static PlatformAlert.create(with:message:)(v12, v14, v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v31 = a1;
    uint64_t v18 = self;
    id v19 = objc_msgSend(v18, sel_conversationKit);
    v34._object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0x524F42414C4C4F43;
    v20._object = (void *)0xEB00000000455441;
    v21.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v21.value._object = (void *)0xEF74694B6E6F6974;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v34._uint64_t countAndFlagsBits = 0;
    Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v34);

    char v33 = 0;
    uint64_t v24 = OUTLINED_FUNCTION_26();
    *(void *)(v24 + 16) = a6;
    *(void *)(v24 + 24) = a7;
    OUTLINED_FUNCTION_3_2();
    char v26 = *(void (**)(uint64_t, void *, char *, uint64_t (*)(), uint64_t))(v25 + 328);
    swift_retain();
    v26(v23._countAndFlagsBits, v23._object, &v33, partial apply for closure #1 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:), v24);
    swift_release();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v18, sel_conversationKit);
    OUTLINED_FUNCTION_2_115(0x574F4E5F544F4ELL, 0xE700000000000000);
    OUTLINED_FUNCTION_35_18();
    char v32 = 2;
    uint64_t v28 = OUTLINED_FUNCTION_26();
    *(void *)(v28 + 16) = a6;
    *(void *)(v28 + 24) = a7;
    swift_retain();
    v26(v24, (void *)v23._countAndFlagsBits, &v32, partial apply for closure #2 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:), v28);
    swift_release();
    swift_bridgeObjectRelease();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(uint64_t))(v29 + 336))(v31);
    OUTLINED_FUNCTION_16();
    swift_release();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    a6(0);
    OUTLINED_FUNCTION_16();
  }
}

uint64_t static PlatformAlert.confirmLeavePTTChannel(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  uint64_t v12 = one-time initialization token for conversationKit;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = unk_1EA37DFA0;
  uint64_t v14 = (void *)qword_1EA37DFA8;
  id v15 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v48._object = (void *)0xE000000000000000;
  v16._object = (void *)0x80000001C37B03A0;
  v16._uint64_t countAndFlagsBits = 0xD000000000000020;
  v17.value._uint64_t countAndFlagsBits = v13;
  v17.value._object = v14;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v48._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v48);
  id v19 = (void *)String.init(format:locale:arguments:)();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  outlined destroy of Locale?((uint64_t)v9);
  Swift::String v22 = self;
  id v23 = objc_msgSend(v22, sel_conversationKit);
  uint64_t v24 = OUTLINED_FUNCTION_0_23(0xD000000000000022, 0x80000001C37B03D0);
  uint64_t v26 = v25;

  type metadata accessor for PlatformAlert();
  uint64_t v27 = static PlatformAlert.create(with:message:)(v19, v21, v24, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v27) {
    return v27;
  }
  uint64_t result = *MEMORY[0x1E4FA7300];
  if (*MEMORY[0x1E4FA7300])
  {
    uint64_t v29 = *(void **)(v27 + 24);
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;
    id v33 = v29;
    Class isa = UInt32._bridgeToObjectiveC()().super.super.isa;
    uint64_t v46 = v30;
    uint64_t v47 = v32;
    swift_bridgeObjectRetain();
    objc_msgSend(v33, sel___swift_setObject_forKeyedSubscript_, isa, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    id v35 = objc_msgSend(v22, sel_conversationKit);
    OUTLINED_FUNCTION_2_115(0x657661654CLL, 0xE500000000000000);
    OUTLINED_FUNCTION_35_18();
    LOBYTE(v46) = 0;
    uint64_t v36 = OUTLINED_FUNCTION_26();
    uint64_t v37 = v45;
    *(void *)(v36 + 16) = v45;
    *(void *)(v36 + 24) = a4;
    OUTLINED_FUNCTION_3_2();
    uint64_t v39 = *(void (**)(uint64_t))(v38 + 328);
    swift_retain();
    uint64_t v40 = OUTLINED_FUNCTION_10_71();
    v39(v40);
    swift_release();
    swift_bridgeObjectRelease();
    id v41 = objc_msgSend(v22, (SEL)&selRef_viewIfLoaded + 1);
    OUTLINED_FUNCTION_3_117();

    LOBYTE(v46) = 2;
    uint64_t v42 = OUTLINED_FUNCTION_26();
    *(void *)(v42 + 16) = v37;
    *(void *)(v42 + 24) = a4;
    swift_retain();
    uint64_t v43 = OUTLINED_FUNCTION_11_61();
    v39(v43);
    swift_release();
    swift_bridgeObjectRelease();
    return v27;
  }
  __break(1u);
  return result;
}

BOOL static PlatformAlertActionStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void PlatformAlertActionStyle.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int PlatformAlertActionStyle.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void key path setter for PlatformAlert.currentPresentedUserNotification : PlatformAlert(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  PlatformAlert.currentPresentedUserNotification.setter((uint64_t)v1);
}

void *PlatformAlert.currentPresentedUserNotification.getter()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void PlatformAlert.currentPresentedUserNotification.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

uint64_t key path setter for PlatformAlert.buttonHandlers : PlatformAlert()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return PlatformAlert.buttonHandlers.setter(v0);
}

uint64_t PlatformAlert.buttonHandlers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlatformAlert.buttonHandlers.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PlatformAlert.title.didset()
{
  uint64_t result = *MEMORY[0x1E4F1D998];
  if (*MEMORY[0x1E4F1D998])
  {
    id v2 = (void *)v0[3];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    uint64_t v5 = v0[6];
    if (v5)
    {
      uint64_t v6 = v0[5];
      swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C87730B0](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E4FBB1A0]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.title.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  swift_bridgeObjectRelease();
  return PlatformAlert.title.didset();
}

uint64_t PlatformAlert.message.didset()
{
  uint64_t result = *MEMORY[0x1E4F1D9A0];
  if (*MEMORY[0x1E4F1D9A0])
  {
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    uint64_t v5 = v0[8];
    if (v5)
    {
      uint64_t v6 = v0[7];
      swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C87730B0](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E4FBB1A0]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.message.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  swift_bridgeObjectRelease();
  return PlatformAlert.message.didset();
}

uint64_t PlatformAlert.defaultButtonTitle.didset()
{
  uint64_t result = *MEMORY[0x1E4F1D9D8];
  if (*MEMORY[0x1E4F1D9D8])
  {
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    uint64_t v5 = v0[10];
    if (v5)
    {
      uint64_t v6 = v0[9];
      swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C87730B0](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E4FBB1A0]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.defaultButtonTitle.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  swift_bridgeObjectRelease();
  return PlatformAlert.defaultButtonTitle.didset();
}

uint64_t PlatformAlert.alternateButtonTitle.didset()
{
  uint64_t result = *MEMORY[0x1E4F1D9C8];
  if (*MEMORY[0x1E4F1D9C8])
  {
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    uint64_t v5 = v0[12];
    if (v5)
    {
      uint64_t v6 = v0[11];
      swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C87730B0](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E4FBB1A0]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.alternateButtonTitle.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  swift_bridgeObjectRelease();
  return PlatformAlert.alternateButtonTitle.didset();
}

uint64_t PlatformAlert.otherButtonTitle.didset()
{
  uint64_t result = *MEMORY[0x1E4F1DA08];
  if (*MEMORY[0x1E4F1DA08])
  {
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    uint64_t v5 = v0[14];
    if (v5)
    {
      uint64_t v6 = v0[13];
      swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C87730B0](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E4FBB1A0]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.otherButtonTitle.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  swift_bridgeObjectRelease();
  return PlatformAlert.otherButtonTitle.didset();
}

uint64_t static PlatformAlert.create(with:message:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PlatformAlert();
  uint64_t v8 = swift_allocObject();
  PlatformAlert.init()();
  swift_bridgeObjectRetain();
  PlatformAlert.title.setter((uint64_t)a1, a2);
  swift_bridgeObjectRetain();
  PlatformAlert.message.setter(a3, a4);
  uint64_t result = *MEMORY[0x1E4F1D9C0];
  if (!*MEMORY[0x1E4F1D9C0])
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = *(void **)(v8 + 24);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_13_68();
  OUTLINED_FUNCTION_9_78();
  OUTLINED_FUNCTION_6_100();
  _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_4_101();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t result = *MEMORY[0x1E4FA7358];
  if (!*MEMORY[0x1E4FA7358])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v11 = *(void **)(v8 + 24);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_13_68();
  OUTLINED_FUNCTION_9_78();
  OUTLINED_FUNCTION_6_100();
  _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_4_101();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t result = *MEMORY[0x1E4FA7338];
  if (!*MEMORY[0x1E4FA7338])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v12 = *(void **)(v8 + 24);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_13_68();
  OUTLINED_FUNCTION_9_78();
  OUTLINED_FUNCTION_6_100();
  _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_4_101();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t result = *MEMORY[0x1E4FA72A0];
  if (!*MEMORY[0x1E4FA72A0])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = *(void **)(v8 + 24);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_13_68();
  OUTLINED_FUNCTION_9_78();
  OUTLINED_FUNCTION_6_100();
  _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_4_101();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t result = *MEMORY[0x1E4FA7328];
  if (*MEMORY[0x1E4FA7328])
  {
    uint64_t v14 = *(void **)(v8 + 24);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_13_68();
    OUTLINED_FUNCTION_9_78();
    OUTLINED_FUNCTION_6_100();
    _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    OUTLINED_FUNCTION_4_101();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return v8;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t PlatformAlert.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PlatformAlert.init()();
  return v0;
}

void *static PlatformAlert.createUIAlertController(with:message:alertActions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(a1, a2, a3, a4, 1);
  uint64_t v11 = v10;
  if (a5 >> 62) {
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v13 = v10;
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v14 = 4;
    while (1)
    {
      id v15 = (a5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](v14 - 4, a5) : *(id *)(a5 + 8 * v14);
      Swift::String v16 = v15;
      uint64_t v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      objc_msgSend(v11, sel_addAction_, v15);

      ++v14;
      if (v17 == v12) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    id v19 = v11;
    swift_bridgeObjectRetain();
  }
LABEL_9:

  swift_bridgeObjectRelease();
  return v11;
}

uint64_t PlatformAlert.addAction(title:style:handler:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a3;
  uint64_t v8 = OUTLINED_FUNCTION_26();
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  swift_beginAccess();
  swift_retain();
  specialized Dictionary._Variant.setValue(_:forKey:)(partial apply for thunk for @callee_guaranteed () -> (), v8, v7);
  swift_endAccess();
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = OUTLINED_FUNCTION_7_94();
    if (v7 == 1) {
      return PlatformAlert.alternateButtonTitle.setter(v9, v10);
    }
    else {
      return PlatformAlert.otherButtonTitle.setter(v9, v10);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = OUTLINED_FUNCTION_7_94();
    return PlatformAlert.defaultButtonTitle.setter(v12, v13);
  }
}

Swift::Void __swiftcall PlatformAlert.show(in:)(UIWindow_optional *in)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  SInt32 error = 0;
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF88];
  CFUserNotificationRef v3 = CFUserNotificationCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF88], 0.0, 0, &error, v1[3]);
  PlatformAlert.currentPresentedUserNotification.setter((uint64_t)v3);
  uint64_t v4 = (uint64_t (*)(void))*((void *)*v1 + 18);
  uint64_t v5 = (void *)v4();

  if (!v5)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
    LODWORD(v20) = error;
    uint64_t v11 = String.init<A>(reflecting:)();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)();
    goto LABEL_15;
  }
  uint64_t v6 = (__CFUserNotification *)v4();
  RunLoopSource = CFUserNotificationCreateRunLoopSource(v2, v6, (CFUserNotificationCallBack)@objc userNotificationHandler(userNotification:responseFlags:), 0);

  if (!RunLoopSource)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
    uint64_t v15 = v4();
    if (v15)
    {
      uint64_t v20 = v15;
      type metadata accessor for CFUserNotificationRef(0);
      uint64_t v16 = String.init<A>(reflecting:)();
      unint64_t v18 = v17;
    }
    else
    {
      unint64_t v18 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    os_log(_:dso:log:type:_:)();
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  if (one-time initialization token for pendingAlerts != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = swift_retain();
  MEMORY[0x1C87733A0](v8);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)(((unint64_t)pendingAlerts._rawValue & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v9 = CFRunLoopGetMain();
  CFRunLoopAddSource(v9, RunLoopSource, (CFRunLoopMode)*MEMORY[0x1E4F1D408]);
}

void @objc userNotificationHandler(userNotification:responseFlags:)(void *a1, Swift::UInt a2)
{
  id v4 = a1;
  userNotificationHandler(userNotification:responseFlags:)((CFUserNotificationRef_optional)a1, a2);
}

Swift::Void __swiftcall userNotificationHandler(userNotification:responseFlags:)(CFUserNotificationRef_optional userNotification, Swift::UInt responseFlags)
{
  if (one-time initialization token for pendingAlerts != -1) {
    goto LABEL_34;
  }
  while (1)
  {
    swift_beginAccess();
    if ((unint64_t)pendingAlerts._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)(((unint64_t)pendingAlerts._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v5 = v4 - 1;
    if (__OFSUB__(v4, 1)) {
      break;
    }
    if (v5 < 0) {
      goto LABEL_37;
    }
    unint64_t v6 = 0;
    while (1)
    {
      swift_beginAccess();
      if (((unint64_t)pendingAlerts._rawValue & 0xC000000000000001) == 0) {
        break;
      }
      MEMORY[0x1C87744F0](v6);
LABEL_10:
      swift_endAccess();
      OUTLINED_FUNCTION_14_63();
      uint64_t v8 = (*(uint64_t (**)(void))(v7 + 144))();
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        if (!userNotification.value)
        {
          swift_release();

          goto LABEL_17;
        }
        type metadata accessor for CFUserNotificationRef(0);
        lazy protocol witness table accessor for type CFUserNotificationRef and conformance CFUserNotificationRef();
        uint64_t v10 = userNotification.value;
        char v11 = static _CFObject.== infix(_:_:)();

        if (v11) {
          goto LABEL_22;
        }
      }
      else if (!userNotification.value)
      {
LABEL_22:
        if (responseFlags != 2)
        {
          if (responseFlags == 1)
          {
            OUTLINED_FUNCTION_14_63();
            OUTLINED_FUNCTION_8_71();
            uint64_t v14 = v17();
            uint64_t v15 = 1;
            goto LABEL_28;
          }
          if (!responseFlags)
          {
            OUTLINED_FUNCTION_14_63();
            OUTLINED_FUNCTION_8_71();
            uint64_t v14 = v13();
            uint64_t v15 = 0;
LABEL_28:
            unint64_t v18 = (void (*)(uint64_t))specialized Dictionary.subscript.getter(v15, v14);
            uint64_t v19 = swift_bridgeObjectRelease();
            if (v18)
            {
              v18(v19);
              outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
            }
          }
          swift_beginAccess();
          specialized Array.remove(at:)(v6);
          swift_endAccess();
          swift_release();
          swift_release();
          return;
        }
        OUTLINED_FUNCTION_14_63();
        OUTLINED_FUNCTION_8_71();
        uint64_t v14 = v16();
        uint64_t v15 = 2;
        goto LABEL_28;
      }
      swift_release();
LABEL_17:
      if (v5 == v6) {
        return;
      }
      if (__OFADD__(v6++, 1)) {
        goto LABEL_33;
      }
    }
    if (v6 < *(void *)(((unint64_t)pendingAlerts._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_retain();
      goto LABEL_10;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_once();
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

Swift::OpaquePointer *pendingAlerts.unsafeMutableAddressor()
{
  if (one-time initialization token for pendingAlerts != -1) {
    swift_once();
  }
  return &pendingAlerts;
}

uint64_t PlatformAlert.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlatformAlert.__deallocating_deinit()
{
  PlatformAlert.deinit();
  return swift_deallocClassInstance();
}

uint64_t PlatformAlert.init()()
{
  *(void *)(v0 + 16) = 0;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSMutableDictionary);
  *(void *)(v0 + 24) = NSDictionary.init(dictionaryLiteral:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ());
  lazy protocol witness table accessor for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle();
  *(void *)(v0 + 32) = Dictionary.init(dictionaryLiteral:)();
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  return v0;
}

void one-time initialization function for pendingAlerts()
{
  pendingAlerts._rawValue = (void *)MEMORY[0x1E4FBC860];
}

uint64_t closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(uint64_t (*a1)(void), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, char a6)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  a3();
  os_log(_:dso:log:type:_:)();
  return a1(a6 & 1);
}

uint64_t closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)(uint64_t (*a1)(void), uint64_t a2, const char *a3, char a4)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationControls);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1C2F90000, v8, v9, a3, v10, 2u);
    MEMORY[0x1C87760E0](v10, -1, -1);
  }

  return a1(a4 & 1);
}

uint64_t sub_1C34892D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)()
{
  return closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBD378], (uint64_t)"confirmAddToMessagesGroup: OK", 29, 1);
}

uint64_t partial apply for closure #2 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)()
{
  return closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBD370], (uint64_t)"confirmAddToMessagesGroup: canceled by user", 43, 0);
}

uint64_t partial apply for closure #1 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)()
{
  return closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBD378], (uint64_t)"confirmStartCollaboration: collaborate", 38, 1);
}

uint64_t partial apply for closure #2 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)()
{
  return closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBD378], (uint64_t)"confirmStartCollaboration: not now", 34, 0);
}

uint64_t partial apply for closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)()
{
  return closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "confirmLeavePTTChannel: Leave was selected", 1);
}

uint64_t partial apply for closure #2 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)()
{
  return closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "confirmLeavePTTChannel: Cancel was selected", 0);
}

unint64_t lazy protocol witness table accessor for type CFUserNotificationRef and conformance CFUserNotificationRef()
{
  unint64_t result = lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef;
  if (!lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef)
  {
    type metadata accessor for CFUserNotificationRef(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle;
  if (!lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle;
  if (!lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle);
  }
  return result;
}

uint64_t sub_1C3489544()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 144))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3489588()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 168))();
  *uint64_t v0 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlatformAlertActionStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3489698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatformAlertActionStyle()
{
  return &type metadata for PlatformAlertActionStyle;
}

uint64_t method lookup function for PlatformAlert(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlatformAlert);
}

uint64_t dispatch thunk of PlatformAlert.currentPresentedUserNotification.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PlatformAlert.buttonHandlers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of static PlatformAlert.create(with:message:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of PlatformAlert.addAction(title:style:handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of PlatformAlert.show(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of PlatformAlert.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t partial apply for closure #2 in PeoplePickerViewController.addPeople()(uint64_t a1)
{
  return closure #2 in PeoplePickerViewController.addPeople()(a1, *(uint64_t (**)(void))(v1 + 16));
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_67_9();
  a27 = v30;
  a28 = v32;
  uint64_t v33 = *(void *)(v31 + 16);
  uint64_t v34 = *v28;
  uint64_t v35 = *(void *)(*v28 + 16);
  if (__OFADD__(v35, v33))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v36 = v31;
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v37 = *(void *)(v34 + 24) >> 1, v37 < v35 + v33))
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v34 = v38;
    uint64_t v37 = *(void *)(v38 + 24) >> 1;
  }
  uint64_t v39 = *(void *)(v34 + 16);
  uint64_t v40 = v37 - v39;
  uint64_t v41 = specialized Sequence._copySequenceContents(initializing:)(&a15, (void *)(v34 + 8 * v39 + 32), v37 - v39, v36);
  if (v41 < v33) {
    goto LABEL_12;
  }
  if (v41)
  {
    uint64_t v42 = *(void *)(v34 + 16);
    BOOL v43 = __OFADD__(v42, v41);
    uint64_t v44 = v42 + v41;
    if (v43)
    {
      __break(1u);
      goto LABEL_27;
    }
    *(void *)(v34 + 16) = v44;
  }
  if (v41 != v40)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    *uint64_t v28 = v34;
    OUTLINED_FUNCTION_78_1();
    return;
  }
LABEL_13:
  if (!a16) {
    goto LABEL_10;
  }
  unint64_t v45 = a16 - 1;
  if (!__OFSUB__(a16, 1))
  {
    uint64_t v29 = *(void *)(v34 + 16);
    uint64_t v46 = a15;
    uint64_t v47 = specialized Array.subscript.read((uint64_t (*)())&a11, a16 - 1, a15);
    uint64_t v49 = *v48;
    swift_bridgeObjectRetain();
    ((void (*)(char *, void))v47)(&a11, 0);
    while (1)
    {
      uint64_t v50 = *(void *)(v34 + 24) >> 1;
      uint64_t v51 = v29 + 1;
      if (v50 < v29 + 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v51 = v29 + 1;
        uint64_t v34 = v54;
        uint64_t v50 = *(void *)(v54 + 24) >> 1;
      }
      if (v29 < v50) {
        break;
      }
LABEL_25:
      *(void *)(v34 + 16) = v29;
    }
    *(void *)(v34 + 8 * v29 + 32) = v49;
    if (!v45) {
      goto LABEL_29;
    }
    while (1)
    {
      BOOL v43 = __OFSUB__(v45--, 1);
      if (v43) {
        break;
      }
      id v52 = specialized Array.subscript.read((uint64_t (*)())&a11, v45, v46);
      uint64_t v49 = *v53;
      swift_bridgeObjectRetain();
      ((void (*)(char *, void))v52)(&a11, 0);
      if (v29 + 1 >= v50)
      {
        ++v29;
        goto LABEL_25;
      }
      *(void *)(v34 + 40 + 8 * v29++) = v49;
      if (!v45) {
        goto LABEL_28;
      }
    }
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t v51 = v29 + 1;
LABEL_29:
    *(void *)(v34 + 16) = v51;
    goto LABEL_10;
  }
  __break(1u);
}

#error "1C348A310: call analysis failed (funcsize=101)"

void specialized Array.append<A>(contentsOf:)(uint64_t a1)
{
}

{
  specialized Array.append<A>(contentsOf:)(a1, (uint64_t)specialized Sequence._copySequenceContents(initializing:));
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = v2;
  unint64_t v5 = a1;
  uint64_t v6 = specialized LazySequence<>.count.getter(a1);
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unsigned int v4 = v9;
  uint64_t v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_14;
    }
    uint64_t v11 = 1;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8) {
    uint64_t v13 = v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x1C8774500](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *unsigned int v4 = v14;
  uint64_t v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_14:
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = (*(void *)(v12 + 24) >> 1) - v15;
  uint64_t v17 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t, unint64_t))a2)(&v60, v12 + 8 * v15 + 32, v16, v5);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v17 >= 1)
  {
    OUTLINED_FUNCTION_90_4();
    uint64_t v19 = *(void *)(v18 + 16);
    BOOL v20 = __OFADD__(v19, v17);
    uint64_t v21 = v19 + v17;
    if (v20)
    {
      __break(1u);
LABEL_30:
      unint64_t v5 = a2 & 0x7FFFFFFFFFFFFFFFLL;
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_19;
      }
      OUTLINED_FUNCTION_115_2();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v24 = v59;
      swift_unknownObjectRelease();
LABEL_32:
      if (!v24) {
        goto LABEL_19;
      }
      while (1)
      {
        OUTLINED_FUNCTION_90_4();
        if (v8 + 1 > *(void *)(v27 + 24) >> 1)
        {
          unint64_t v5 = (unint64_t)v4;
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          OUTLINED_FUNCTION_90_4();
        }
        unint64_t v28 = *(void *)(v27 + 24);
        if (v8 < (uint64_t)(v28 >> 1)) {
          break;
        }
LABEL_69:
        *(void *)(v27 + 16) = v8;
      }
      uint64_t v58 = v28 >> 1;
      uint64_t v29 = v27 + 32;
      while (1)
      {
        *(void *)(v29 + 8 * v8++) = v24;
        uint64_t v30 = v60;
        uint64_t v24 = v62;
        uint64_t v31 = v63;
        if (v60 < 0)
        {
          unint64_t v5 = v60 & 0x7FFFFFFFFFFFFFFFLL;
          if (!__CocoaSet.Iterator.next()()) {
            goto LABEL_70;
          }
          OUTLINED_FUNCTION_115_2();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v24 = v59;
          swift_unknownObjectRelease();
          goto LABEL_44;
        }
        if (v64)
        {
          unint64_t v5 = (v64 - 1) & v64;
          unint64_t v32 = __clz(__rbit64(v64)) | (v63 << 6);
        }
        else
        {
          if (__OFADD__(v63, 1))
          {
            __break(1u);
LABEL_94:
            OUTLINED_FUNCTION_68_11();
            uint64_t v23 = v57;
LABEL_27:
            uint64_t v63 = v23;
            unint64_t v64 = v5;
            goto LABEL_32;
          }
          OUTLINED_FUNCTION_166_2();
          if (v36 == v20)
          {
            OUTLINED_FUNCTION_68_11();
            goto LABEL_41;
          }
          if (!*(void *)(v61 + 8 * v34))
          {
            if (v34 + 1 >= v35) {
              goto LABEL_66;
            }
            if (!*(void *)(v61 + 8 * (v34 + 1)))
            {
              if (v34 + 2 >= v35) {
                goto LABEL_67;
              }
              if (!*(void *)(v61 + 8 * (v34 + 2)))
              {
                if (v34 + 3 >= v35)
                {
                  OUTLINED_FUNCTION_68_11();
                  uint64_t v31 = v45;
                  goto LABEL_41;
                }
                if (!*(void *)(v61 + 8 * (v34 + 3)))
                {
                  OUTLINED_FUNCTION_163_1();
                  if (v36 == v20)
                  {
LABEL_67:
                    OUTLINED_FUNCTION_68_11();
                    uint64_t v31 = v44;
                    goto LABEL_41;
                  }
                  if (!*(void *)(v40 + 8 * v38))
                  {
                    uint64_t v41 = v31 + 6;
                    while (v41 < v39)
                    {
                      if (*(void *)(v40 + 8 * v41++)) {
                        goto LABEL_51;
                      }
                    }
LABEL_66:
                    OUTLINED_FUNCTION_68_11();
                    uint64_t v31 = v43;
                    goto LABEL_41;
                  }
                }
              }
            }
          }
LABEL_51:
          OUTLINED_FUNCTION_143_3();
          uint64_t v31 = v37;
        }
        uint64_t v24 = *(void **)(*(void *)(v30 + 48) + 8 * v32);
        id v33 = v24;
LABEL_41:
        uint64_t v63 = v31;
        unint64_t v64 = v5;
LABEL_44:
        if (!v24)
        {
LABEL_70:
          OUTLINED_FUNCTION_90_4();
          *(void *)(v46 + 16) = v8;
          goto LABEL_19;
        }
        if (v8 >= v58)
        {
          OUTLINED_FUNCTION_90_4();
          goto LABEL_69;
        }
      }
    }
    *(void *)(v18 + 16) = v21;
  }
  if (v17 != v16)
  {
LABEL_19:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    specialized Array._endMutation()();
    return;
  }
LABEL_23:
  OUTLINED_FUNCTION_90_4();
  uint64_t v8 = *(void *)(v22 + 16);
  a2 = v60;
  uint64_t v23 = v63;
  uint64_t v24 = (void *)v64;
  if (v60 < 0) {
    goto LABEL_30;
  }
  if (v64)
  {
    unint64_t v5 = (v64 - 1) & v64;
    unint64_t v25 = __clz(__rbit64(v64)) | (v63 << 6);
LABEL_26:
    uint64_t v24 = *(void **)(*(void *)(a2 + 48) + 8 * v25);
    id v26 = v24;
    goto LABEL_27;
  }
  if (!__OFADD__(v63, 1))
  {
    OUTLINED_FUNCTION_166_2();
    if (v36 == v20)
    {
      OUTLINED_FUNCTION_68_11();
      goto LABEL_27;
    }
    if (*(void *)(v61 + 8 * v47)) {
      goto LABEL_76;
    }
    if (v47 + 1 < v48)
    {
      if (*(void *)(v61 + 8 * (v47 + 1))) {
        goto LABEL_76;
      }
      if (v47 + 2 >= v48) {
        goto LABEL_92;
      }
      if (*(void *)(v61 + 8 * (v47 + 2))) {
        goto LABEL_76;
      }
      if (v47 + 3 >= v48) {
        goto LABEL_94;
      }
      if (*(void *)(v61 + 8 * (v47 + 3))) {
        goto LABEL_76;
      }
      OUTLINED_FUNCTION_163_1();
      if (v36 == v20)
      {
LABEL_92:
        OUTLINED_FUNCTION_68_11();
        uint64_t v23 = v56;
        goto LABEL_27;
      }
      if (*(void *)(v52 + 8 * v50))
      {
LABEL_76:
        OUTLINED_FUNCTION_143_3();
        uint64_t v23 = v49;
        goto LABEL_26;
      }
      uint64_t v53 = v23 + 6;
      while (v53 < v51)
      {
        if (*(void *)(v52 + 8 * v53++)) {
          goto LABEL_76;
        }
      }
    }
    OUTLINED_FUNCTION_68_11();
    uint64_t v23 = v55;
    goto LABEL_27;
  }
  __break(1u);
}

uint64_t specialized Array.count.getter(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Participant.isActive.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_63_6();
  uint64_t v2 = 0;
  switch(OUTLINED_FUNCTION_19_9())
  {
    case 4u:
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v6 = v0 + *(int *)(v5 + 48);
      OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
      outlined destroy of Participant.MediaInfo(v6);
      uint64_t v2 = 1;
      goto LABEL_2;
    case 6u:
      return v2;
    default:
LABEL_2:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      (*(void (**)(uint64_t))(v3 + 8))(v0);
      break;
  }
  return v2;
}

void Participant.isRequestToScreenShareAvailable.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_31();
  a19 = v23;
  a20 = v24;
  uint64_t v25 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_196();
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&a9 - v29;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_139_4();
  Participant.avInfo.getter();
  outlined init with copy of Participant.State();
  int v32 = *(unsigned __int8 *)(v22 + *(int *)(v25 + 24) + 4);
  _s15ConversationKit11ParticipantVWOhTm_7(v22, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_59_10();
  if (v32 != 1)
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v21, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_199_0();
LABEL_8:
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v30, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_51_15();
    goto LABEL_9;
  }
  char v33 = Participant.isActive.getter();
  _s15ConversationKit11ParticipantVWOhTm_7(v21, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_199_0();
  if ((v33 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v34 = *(void **)&v30[*(int *)(v25 + 28)];
  if (!v34) {
    goto LABEL_8;
  }
  id v35 = objc_msgSend(v34, sel_value);
  if (!v35)
  {
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v35 = (id)MEMORY[0x1C87730B0](v36);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v35, sel_destinationIdIsTemporary);

  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v30, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_51_15();
LABEL_9:
  _s15ConversationKit11ParticipantVWOhTm_7(v20, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_28();
}

uint64_t Participant.name.getter()
{
  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_34_9();
  Participant.name(_:)();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_35();
}

void static Participant.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_3_74();
  uint64_t v4 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_10_5();
  v44[1] = v6;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_131_3();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v44 - v10;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_52();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v44 - v14;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_139_4();
  static Participant.State.== infix(_:_:)();
  char v17 = v16;
  outlined init with copy of Participant.State();
  outlined init with copy of Participant.State();
  if ((v17 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v3, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of Participant.State();
    outlined init with copy of Participant.State();
    goto LABEL_29;
  }
  char v18 = static UUID.== infix(_:_:)();
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v3, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of Participant.State();
  outlined init with copy of Participant.State();
  if ((v18 & 1) == 0)
  {
LABEL_29:
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v2, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of Participant.State();
    OUTLINED_FUNCTION_197_0();
    goto LABEL_30;
  }
  BOOL v19 = *(void *)(v2 + *(int *)(v4 + 28)) != 0;
  _s15ConversationKit11ParticipantVWOhTm_7(v2, (void (*)(void))type metadata accessor for Participant);
  BOOL v20 = *(void *)&v11[*(int *)(v4 + 28)] == 0;
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_197_0();
  if (((v19 ^ v20) & 1) == 0)
  {
LABEL_30:
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant);
    uint64_t v42 = OUTLINED_FUNCTION_23_0();
    _s15ConversationKit11ParticipantVWOhTm_7(v42, v43);
    goto LABEL_31;
  }
  uint64_t v21 = (unsigned __int8 *)(v0 + *(int *)(v4 + 24));
  v44[0] = *v21;
  int v22 = v21[1];
  int v23 = v21[2];
  int v24 = v21[3];
  int v25 = v21[4];
  _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  uint64_t v26 = (unsigned __int8 *)(v1 + *(int *)(v4 + 24));
  uint64_t v27 = *v26;
  int v28 = v26[1];
  int v29 = v26[2];
  int v30 = v26[3];
  uint64_t v31 = v1;
  int v32 = v26[4];
  _s15ConversationKit11ParticipantVWOhTm_7(v31, (void (*)(void))type metadata accessor for Participant);
  uint64_t v33 = 0x100000000;
  if (v25) {
    uint64_t v34 = 0x100000000;
  }
  else {
    uint64_t v34 = 0;
  }
  if (v24) {
    uint64_t v35 = 0x1000000;
  }
  else {
    uint64_t v35 = 0;
  }
  if (v23) {
    uint64_t v36 = 0x10000;
  }
  else {
    uint64_t v36 = 0;
  }
  if (v22) {
    uint64_t v37 = 256;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = v37 | v44[0] | v36 | v35 | v34;
  if (!v32) {
    uint64_t v33 = 0;
  }
  if (v30) {
    uint64_t v39 = 0x1000000;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v29) {
    uint64_t v40 = 0x10000;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v28) {
    uint64_t v41 = 256;
  }
  else {
    uint64_t v41 = 0;
  }
  static Participant.Capabilities.== infix(_:_:)(v38, v41 | v27 | v40 | v39 | v33);
LABEL_31:
  OUTLINED_FUNCTION_28();
}

uint64_t Participant.captionInfo.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_128_3();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    return 0;
  }
  return v0;
}

void *Participant.CaptionInfo.maxCaptions.unsafeMutableAddressor()
{
  return &static Participant.CaptionInfo.maxCaptions;
}

uint64_t specialized BidirectionalCollection.suffix(_:)(uint64_t a1, uint64_t a2)
{
  return specialized BidirectionalCollection.suffix(_:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))specialized Array.index(_:offsetBy:limitedBy:), type metadata accessor for CaptionSectioner.Caption);
}

uint64_t specialized BidirectionalCollection.suffix(_:)(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t), uint64_t (*a4)(void))
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = a3(v6, -result, 0, a2);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = result;
  }
  if (v6 < v8) {
    goto LABEL_9;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    a4(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t Participant.isScreenSharing.getter()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_17_0();
  char v3 = Participant.screenState.getter();
  OUTLINED_FUNCTION_63_6();
  if (v3 == 2) {
    char v4 = 0;
  }
  else {
    char v4 = Participant.isReceivingScreenFrames.getter();
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  return v4 & 1;
}

double Participant.screenProvider.getter@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_75_7();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v5 = (const void *)(v1 + *(int *)(v4 + 48));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v1 + *(int *)(v4 + 64)));
    memcpy(v8, v5, sizeof(v8));
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v6();
    outlined init with copy of Participant?((uint64_t)&v8[96], (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)v8);
    if (v9[3] != 1)
    {
      outlined init with copy of Participant?((uint64_t)v9, a1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v9);
      return result;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_42_22();
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void Participant.requiresScreenInfoUpdate(from:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v155 = v3;
  uint64_t v156 = v4;
  uint64_t v127 = v0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_123_2();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v108 - v13;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8_4();
  uint64_t v125 = v15;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_8_4();
  uint64_t v115 = v17;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_8_4();
  BOOL v123 = v19;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_8_4();
  uint64_t v124 = v21;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_8_4();
  uint64_t v121 = v23;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_8_4();
  uint64_t v122 = v25;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_8_4();
  uint64_t v126 = v27;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_8_4();
  uint64_t v120 = v29;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_8_4();
  uint64_t v118 = v31;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_8_4();
  uint64_t v119 = v33;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_8_4();
  uint64_t v116 = v35;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_8_4();
  uint64_t v117 = v37;
  OUTLINED_FUNCTION_8_1();
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v108 - v40;
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v108 - v43;
  uint64_t v45 = OUTLINED_FUNCTION_162();
  outlined init with copy of Participant?(v45, v46, &demangling cache variable for type metadata for Participant?);
  uint64_t v47 = OUTLINED_FUNCTION_171_2();
  OUTLINED_FUNCTION_33_0(v47, v48, v9);
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
    goto LABEL_26;
  }
  uint64_t v113 = v14;
  uint64_t v114 = v2;
  _s15ConversationKit11ParticipantVWObTm_5();
  type metadata accessor for UUID();
  char v112 = &v108;
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_2_1();
  v50();
  _s10Foundation4UUIDVACSQAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v52 = OUTLINED_FUNCTION_99_2();
  v53(v52);
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_168_3();
  outlined init with copy of Participant.State();
  uint64_t v54 = (uint64_t)v44;
  if ((v51 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v41, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant);
    uint64_t v64 = v117;
    outlined init with copy of Participant.State();
    uint64_t v65 = v116;
    OUTLINED_FUNCTION_59_10();
LABEL_18:
    _s15ConversationKit11ParticipantVWOhTm_7(v65, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v64, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_19;
  }
  uint64_t v55 = v127;
  uint64_t v56 = Participant.deviceOrientation.getter();
  char v58 = v57;
  uint64_t v59 = Participant.deviceOrientation.getter();
  char v61 = v60;
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v41, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant);
  if (v58)
  {
    char v63 = v61 & 1;
  }
  else
  {
    BOOL v62 = (v61 & 1) == 0 && v56 == v59;
    char v63 = v62;
  }
  uint64_t v65 = v116;
  uint64_t v64 = v117;
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_59_10();
  if ((v63 & 1) == 0) {
    goto LABEL_18;
  }
  Participant.aspectRatio.getter();
  uint64_t v116 = v142[0];
  uint64_t v111 = v142[2];
  char v112 = (uint64_t *)v142[1];
  uint64_t v110 = v142[3];
  int v109 = v143;
  Participant.aspectRatio.getter();
  uint64_t v67 = v144[0];
  uint64_t v66 = v144[1];
  uint64_t v68 = v65;
  uint64_t v70 = v144[2];
  uint64_t v69 = v144[3];
  char v71 = v145;
  _s15ConversationKit11ParticipantVWOhTm_7(v68, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v64, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of ConversationControlsRecipe?((uint64_t)v142, (uint64_t)v149, &demangling cache variable for type metadata for AspectRatio?);
  if (v149[33])
  {
    outlined init with take of ConversationControlsRecipe?((uint64_t)v144, (uint64_t)v147, &demangling cache variable for type metadata for AspectRatio?);
    if (v148)
    {
      uint64_t v72 = v55;
      outlined init with copy of Participant.State();
      uint64_t v73 = v118;
      OUTLINED_FUNCTION_59_10();
      uint64_t v74 = v114;
      uint64_t v76 = v121;
      uint64_t v75 = v122;
      goto LABEL_29;
    }
    outlined init with take of AspectRatio((uint64_t)v147, (uint64_t)v128);
    goto LABEL_19;
  }
  outlined init with take of AspectRatio((uint64_t)v149, (uint64_t)v150);
  outlined init with take of ConversationControlsRecipe?((uint64_t)v144, (uint64_t)v147, &demangling cache variable for type metadata for AspectRatio?);
  if (v148)
  {
LABEL_19:
    outlined init with copy of Participant.State();
    uint64_t v73 = v118;
    OUTLINED_FUNCTION_59_10();
    uint64_t v74 = v114;
    uint64_t v76 = v121;
    uint64_t v75 = v122;
LABEL_20:
    _s15ConversationKit11ParticipantVWOhTm_7(v73, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_125_5();
    outlined init with copy of Participant.State();
    uint64_t v77 = v126;
    OUTLINED_FUNCTION_59_10();
LABEL_21:
    _s15ConversationKit11ParticipantVWOhTm_7(v77, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_125_5();
    outlined init with copy of Participant.State();
    outlined init with copy of Participant.State();
    uint64_t v78 = v74;
LABEL_22:
    _s15ConversationKit11ParticipantVWOhTm_7(v76, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v75, (void (*)(void))type metadata accessor for Participant);
    uint64_t v79 = v124;
    outlined init with copy of Participant.State();
    uint64_t v80 = v123;
    outlined init with copy of Participant.State();
    uint64_t v81 = v125;
LABEL_23:
    _s15ConversationKit11ParticipantVWOhTm_7(v80, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v79, (void (*)(void))type metadata accessor for Participant);
    uint64_t v82 = v115;
    outlined init with copy of Participant.State();
    outlined init with copy of Participant.State();
    uint64_t v83 = (uint64_t)v113;
LABEL_24:
    _s15ConversationKit11ParticipantVWOhTm_7(v81, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v82, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of Participant.State();
    OUTLINED_FUNCTION_59_10();
LABEL_25:
    _s15ConversationKit11ParticipantVWOhTm_7(v78, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v83, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_7(v54, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_26;
  }
  outlined init with take of AspectRatio((uint64_t)v147, (uint64_t)&v146);
  v153[0] = v67;
  v153[1] = v66;
  v153[2] = v70;
  v153[3] = v69;
  char v154 = v71 & 1;
  v151[0] = v116;
  v151[1] = v112;
  v151[2] = v111;
  v151[3] = v110;
  char v152 = v109 & 1;
  BOOL v84 = static AspectRatio.== infix(_:_:)((uint64_t)v151, (uint64_t)v153);
  uint64_t v72 = v55;
  outlined init with copy of Participant.State();
  uint64_t v73 = v118;
  outlined init with copy of Participant.State();
  uint64_t v74 = v114;
  uint64_t v76 = v121;
  uint64_t v75 = v122;
  if (!v84) {
    goto LABEL_20;
  }
LABEL_29:
  uint64_t v108 = v54;
  Participant.screenInfo.getter(v128);
  uint64_t v54 = v129;
  if (v129 == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    double v85 = 0.0;
  }
  else
  {
    double v85 = v132;
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
  }
  Participant.screenInfo.getter(v128);
  _s15ConversationKit11ParticipantVWOhTm_7(v73, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_125_5();
  uint64_t v86 = v129;
  BOOL v87 = v129 == 1;
  if (v129 == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    double v88 = 0.0;
  }
  else
  {
    double v88 = v132;
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
  }
  if (v54 != 1) {
    BOOL v87 = v85 == v88 && v86 != 1;
  }
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_114_1();
  uint64_t v77 = v126;
  OUTLINED_FUNCTION_59_10();
  if (!v87) {
    goto LABEL_21;
  }
  Participant.screenInfo.getter(v128);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v54 = 1;
    double v90 = 0.0;
  }
  else
  {
    uint64_t v54 = v141;
    if (v141) {
      double v90 = 0.0;
    }
    else {
      double v90 = v133;
    }
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
  }
  uint64_t v91 = v126;
  Participant.screenInfo.getter(v128);
  _s15ConversationKit11ParticipantVWOhTm_7(v91, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_125_5();
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v92 = 1;
    double v93 = 0.0;
  }
  else
  {
    uint64_t v92 = v141;
    if (v141) {
      double v93 = 0.0;
    }
    else {
      double v93 = v133;
    }
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
  }
  uint64_t v78 = v74;
  if ((v54 & 1) == 0) {
    uint64_t v92 = (v90 == v93) & ~v92;
  }
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_114_1();
  outlined init with copy of Participant.State();
  if ((v92 & 1) == 0) {
    goto LABEL_22;
  }
  Participant.screenInfo.getter(v128);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v92 = 0;
    uint64_t v54 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_69_7();
  }
  Participant.screenInfo.getter(v128);
  _s15ConversationKit11ParticipantVWOhTm_7(v76, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v75, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v94 = 0;
    char v95 = 1;
  }
  else
  {
    char v95 = v141;
    if (v141) {
      uint64_t v94 = 0;
    }
    else {
      uint64_t v94 = v140;
    }
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
  }
  if ((v54 & 1) == 0) {
    char v95 = (v92 == v94) & ~v95;
  }
  uint64_t v79 = v124;
  uint64_t v81 = v125;
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_114_1();
  uint64_t v80 = v123;
  outlined init with copy of Participant.State();
  if ((v95 & 1) == 0) {
    goto LABEL_23;
  }
  Participant.screenInfo.getter(v128);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v81 = 0;
    uint64_t v54 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_69_7();
  }
  uint64_t v96 = v123;
  uint64_t v83 = (uint64_t)v113;
  uint64_t v82 = v115;
  Participant.screenInfo.getter(v128);
  uint64_t v97 = type metadata accessor for Participant;
  _s15ConversationKit11ParticipantVWOhTm_7(v96, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v124, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v97 = 0;
    LOBYTE(v96) = 1;
  }
  else
  {
    OUTLINED_FUNCTION_146_3();
  }
  if ((v54 & 1) == 0) {
    LOBYTE(v96) = (v81 == (void)v97) & ~(_BYTE)v96;
  }
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_114_1();
  uint64_t v81 = v125;
  outlined init with copy of Participant.State();
  if ((v96 & 1) == 0) {
    goto LABEL_24;
  }
  Participant.screenInfo.getter(v128);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v81 = 0;
    uint64_t v54 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_69_7();
  }
  uint64_t v98 = v125;
  Participant.screenInfo.getter(v128);
  uint64_t v99 = type metadata accessor for Participant;
  _s15ConversationKit11ParticipantVWOhTm_7(v98, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v82, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v99 = 0;
    uint64_t v98 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_146_3();
  }
  if ((v54 & 1) == 0) {
    uint64_t v98 = (v81 == (void)v99) & ~v98;
  }
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_59_10();
  if ((v98 & 1) == 0) {
    goto LABEL_25;
  }
  Participant.screenInfo.getter(v128);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_89_5();
    char v100 = 1;
  }
  else
  {
    char v100 = v141;
    if (v141)
    {
      OUTLINED_FUNCTION_89_5();
    }
    else
    {
      uint64_t v81 = v138;
      uint64_t v98 = v139;
      uint64_t v72 = v136;
      uint64_t v83 = v137;
      BOOL v87 = v134;
      uint64_t v82 = v135;
    }
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
  }
  Participant.screenInfo.getter(v128);
  OUTLINED_FUNCTION_52_14();
  if (v62)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v128, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  }
  else
  {
    BOOL v123 = v87;
    uint64_t v124 = v72;
    uint64_t v125 = v83;
    uint64_t v126 = v81;
    uint64_t v127 = v98;
    unsigned __int8 v101 = v141;
    if (v141)
    {
      BOOL v102 = 0;
      uint64_t v103 = 0;
      uint64_t v104 = 0;
      uint64_t v105 = 0;
      uint64_t v106 = 0;
      uint64_t v107 = 0;
    }
    else
    {
      uint64_t v106 = v138;
      uint64_t v107 = v139;
      uint64_t v104 = v136;
      uint64_t v105 = v137;
      BOOL v102 = v134;
      uint64_t v103 = v135;
    }
    outlined destroy of Participant.ScreenInfo((uint64_t)v128);
    if ((v100 & 1) == 0 && (v101 & 1) == 0)
    {
      v128[0] = v102;
      v128[1] = v103;
      v128[2] = v104;
      uint64_t v129 = v105;
      uint64_t v130 = v106;
      uint64_t v131 = v107;
      v150[5] = v123;
      v150[6] = v82;
      v150[7] = v124;
      v150[8] = v125;
      v150[9] = v126;
      v150[10] = v127;
      static CGAffineTransform.== infix(_:_:)();
    }
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v114, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v113, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_7(v108, (void (*)(void))type metadata accessor for Participant);
LABEL_26:
  OUTLINED_FUNCTION_33_2();
}

void Participant.screenInfo.getter(void *a1@<X8>)
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_75_7();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v1 + *(int *)(v4 + 64)));
    OUTLINED_FUNCTION_129_3();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v5();
    outlined init with copy of Participant?((uint64_t)&v7, (uint64_t)a1, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)&v6);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant.State);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 1;
    bzero(a1 + 4, 0xB1uLL);
  }
}

uint64_t Participant.ScreenInfo.displayScale.getter()
{
  if (*(unsigned char *)(v0 + 208)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 112);
  }
}

uint64_t Participant.deviceOrientation.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  outlined init with copy of Participant.State();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v2 + 64)));
    OUTLINED_FUNCTION_129_3();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    outlined init with copy of Participant?((uint64_t)&v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)v6);
    if (v8[3] != 1)
    {
      memcpy(v9, v8, 0xD1uLL);
      uint64_t v4 = v9[6];
      outlined destroy of Participant.ScreenInfo((uint64_t)v9);
      return v4;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_106_5();
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  Participant.videoInfo.getter();
  outlined init with take of ConversationControlsRecipe?((uint64_t)v9, (uint64_t)v6, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v6[0]) {
    return 0;
  }
  uint64_t v4 = v6[3];
  outlined release of LinearGradient((uint64_t)v9);
  return v4;
}

void Participant.aspectRatio.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_163();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v5 = (const void *)(v0 + *(int *)(v4 + 48));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v4 + 64)));
    memcpy(v14, v5, sizeof(v14));
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v6();
    outlined init with copy of Participant?((uint64_t)&v14[12], (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)v14);
    if (v15[3] != 1)
    {
      memcpy(v16, v15, 0xD1uLL);
      uint64_t v7 = v16[8];
      uint64_t v8 = v16[9];
      uint64_t v9 = v16[10];
      uint64_t v10 = v16[11];
      char v11 = v16[12];
      outlined destroy of Participant.ScreenInfo((uint64_t)v16);
      char v12 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_106_5();
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  Participant.videoInfo.getter();
  outlined init with take of ConversationControlsRecipe?((uint64_t)v16, (uint64_t)v14, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v14[0])
  {
    uint64_t v7 = v14[5];
    uint64_t v8 = v14[6];
    uint64_t v9 = v14[7];
    uint64_t v10 = v14[8];
    char v13 = v14[9];
    outlined release of LinearGradient((uint64_t)v16);
    char v12 = 0;
    char v11 = v13 & 1;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    char v11 = 0;
    char v12 = 1;
  }
LABEL_8:
  *(void *)uint64_t v2 = v7;
  *(void *)(v2 + 8) = v8;
  *(void *)(v2 + 16) = v9;
  *(void *)(v2 + 24) = v10;
  *(unsigned char *)(v2 + 32) = v11;
  *(unsigned char *)(v2 + 33) = v12;
  OUTLINED_FUNCTION_15_0();
}

uint64_t Participant.ScreenInfo.displayCornerRadius.getter()
{
  if (*(unsigned char *)(v0 + 208)) {
    return 0x4024000000000000;
  }
  if (*(unsigned char *)(v0 + 128))
  {
    uint64_t result = 0x4034000000000000;
    switch(*(void *)(v0 + 184))
    {
      case 0:
      case 1:
      case 4:
        return 0x4024000000000000;
      case 2:
        if (Participant.ScreenInfo.isMaybeTouchIDDevice()()) {
          return 0x4024000000000000;
        }
        else {
          return 0x4049000000000000;
        }
      case 3:
        return result;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUScreenShareDeviceFamily?);
        _diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        JUMPOUT(0x1C348D194);
    }
  }
  return *(void *)(v0 + 120);
}

void Participant.ScreenInfo.systemRootLayerTransform.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 208);
  long long v3 = 0uLL;
  long long v4 = 0uLL;
  long long v5 = 0uLL;
  if ((v2 & 1) == 0)
  {
    long long v5 = *(_OWORD *)(v1 + 168);
    long long v4 = *(_OWORD *)(v1 + 152);
    long long v3 = *(_OWORD *)(v1 + 136);
  }
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = v2;
}

void Participant.contactDetails.getter()
{
  OUTLINED_FUNCTION_31();
  long long v3 = v2;
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = *(void **)(v0 + *(int *)(v5 + 28));
  if (!v6) {
    goto LABEL_9;
  }
  id v7 = v6;
  uint64_t v8 = outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v7);
  if (!v9)
  {

LABEL_9:
    outlined init with copy of Participant.State();
    swift_retain();
    ParticipantContactDetails.init(participant:cache:)(v1, v3);
    goto LABEL_10;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  if ((objc_msgSend(v7, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v12 = type metadata accessor for PersonNameComponents();
  v25[0] = v25;
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_60();
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v16 = (id)static NSPersonNameComponentsFormatter.initials;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v18 = objc_msgSend(v16, sel_stringFromPersonNameComponents_, isa);

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v12);
  v25[1] = v19;
  v25[2] = v21;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v22 = StringProtocol.localizedUppercase.getter();
  uint64_t v24 = v23;

  swift_bridgeObjectRelease();
  *long long v3 = 0;
  v3[1] = v10;
  v3[2] = v11;
  v3[3] = v10;
  v3[4] = v11;
  v3[5] = v22;
  v3[6] = v24;
LABEL_10:
  OUTLINED_FUNCTION_28();
}

void *Participant.handle.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (v1) {
    id v2 = v1;
  }
  return v1;
}

uint64_t Participant.Caption.debugDescription.getter()
{
  OUTLINED_FUNCTION_113();
  _StringGuts.grow(_:)(73);
  OUTLINED_FUNCTION_181_2();
  v0._uint64_t countAndFlagsBits = 0x6E6F6974706143;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
  OUTLINED_FUNCTION_0_43(0xD000000000000012, (uint64_t)"(utteranceNumber: ");
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_182_2() & 0xFFFFFFFFFFFFLL | 0x7243000000000000;
  String.append(_:)(v2);
  type metadata accessor for Participant.Caption(0);
  type metadata accessor for Date();
  _s10Foundation4UUIDVACSQAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_182_2() & 0xFFFFFFFFFFFFLL | 0x7055000000000000;
  v4._object = (void *)0xEF203A6465746164;
  String.append(_:)(v4);
  v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_270_0(v8);
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001C37B0630;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v5);
  return v7;
}

void Participant.CaptionInfo.with(history:)()
{
  OUTLINED_FUNCTION_31();
  v84[2] = v1;
  v84[3] = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v92 = type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_196();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_8_4();
  v84[4] = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8_4();
  uint64_t v87 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_8_4();
  char v95 = v15;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_8_4();
  uint64_t v86 = v17;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_123_2();
  MEMORY[0x1F4188790](v19);
  double v93 = (void *)((char *)v84 - v20);
  if (v6) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v98 = v4;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  specialized BidirectionalCollection.suffix(_:)(50, v98, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))specialized Array.index(_:offsetBy:limitedBy:), type metadata accessor for Participant.Caption);
  specialized Array.init<A>(_:)();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v82 = swift_bridgeObjectRetain();
    uint64_t v83 = specialized _copyCollectionToContiguousArray<A>(_:)(v82);
    swift_bridgeObjectRelease();
    uint64_t v98 = v83;
    swift_retain();
    specialized MutableCollection<>.sort(by:)(&v98);
    swift_release();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28();
    return;
  }
  uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
  v84[1] = v21;
  uint64_t v24 = v21 + ((v23 + 32) & ~v23);
  uint64_t v25 = MEMORY[0x1E4FBC868];
  uint64_t v26 = v93;
  uint64_t v94 = *(void *)(v8 + 72);
  uint64_t v85 = v0;
  while (1)
  {
    uint64_t v96 = v24;
    uint64_t v97 = v22;
    outlined init with copy of Participant.State();
    uint64_t v27 = *v26;
    if (*(void *)(v25 + 16))
    {
      specialized __RawDictionaryStorage.find<A>(_:)(*v26);
      if (v28)
      {
        outlined init with copy of Participant.State();
        _s15ConversationKit11ParticipantVWObTm_5();
        uint64_t v29 = *(int *)(v92 + 20);
        uint64_t v30 = (char *)v26 + v29;
        uint64_t v31 = (char *)(v0 + v29);
        static Date.> infix(_:_:)();
        outlined init with copy of Participant.State();
        uint64_t v32 = type metadata accessor for Date();
        uint64_t v91 = v84;
        OUTLINED_FUNCTION_4();
        uint64_t v34 = v33;
        uint64_t v36 = *(void *)(v35 + 64);
        MEMORY[0x1F4188790](v37);
        unint64_t v90 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v38 = (char *)v84 - v90;
        unint64_t v89 = _s10Foundation4UUIDVACSQAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
        OUTLINED_FUNCTION_99_2();
        char v39 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
        double v88 = v40;
        if (v39) {
          uint64_t v41 = v31;
        }
        else {
          uint64_t v41 = v30;
        }
        v40(v38, v41, v32);
        uint64_t v42 = v92;
        uint64_t v43 = *(void (**)(void))(v34 + 40);
        uint64_t v44 = ((uint64_t (*)(char *, char *, uint64_t))v43)((char *)v95 + *(int *)(v92 + 20), v38, v32);
        uint64_t v91 = v84;
        MEMORY[0x1F4188790](v44);
        uint64_t v45 = (char *)v84 - v90;
        uint64_t v46 = *(int *)(v42 + 24);
        uint64_t v47 = (char *)v93 + v46;
        uint64_t v48 = (char *)(v0 + v46);
        if (dispatch thunk of static Comparable.>= infix(_:_:)()) {
          uint64_t v49 = v48;
        }
        else {
          uint64_t v49 = v47;
        }
        v88(v45, v49, v32);
        uint64_t v50 = v95;
        OUTLINED_FUNCTION_154_4();
        v43();
        char v51 = (uint64_t *)((char *)v50 + *(int *)(v42 + 28));
        uint64_t v53 = *v51;
        unint64_t v52 = v51[1];
        uint64_t v54 = v53 & 0xFFFFFFFFFFFFLL;
        if ((v52 & 0x2000000000000000) != 0) {
          uint64_t v55 = HIBYTE(v52) & 0xF;
        }
        else {
          uint64_t v55 = v54;
        }
        uint64_t v56 = *v50;
        if (v55)
        {
          uint64_t v0 = v85;
          outlined init with copy of Participant.State();
          swift_isUniquelyReferenced_nonNull_native();
          OUTLINED_FUNCTION_76_8();
          OUTLINED_FUNCTION_79_8();
          if (v59) {
            goto LABEL_52;
          }
          uint64_t v60 = v57;
          char v61 = v58;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, Participant.Caption>);
          BOOL v62 = OUTLINED_FUNCTION_73_9();
          uint64_t v26 = v93;
          if (v62)
          {
            specialized __RawDictionaryStorage.find<A>(_:)(v56);
            OUTLINED_FUNCTION_29_29();
            if (!v64) {
              goto LABEL_56;
            }
            uint64_t v60 = v63;
          }
          uint64_t v25 = v98;
          if (v61) {
            goto LABEL_41;
          }
          OUTLINED_FUNCTION_13_69();
          _s15ConversationKit11ParticipantVWObTm_5();
          uint64_t v79 = *(void *)(v25 + 16);
          BOOL v59 = __OFADD__(v79, 1);
          uint64_t v80 = v79 + 1;
          if (v59) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v0 = v85;
          outlined init with copy of Participant.State();
          swift_isUniquelyReferenced_nonNull_native();
          OUTLINED_FUNCTION_76_8();
          OUTLINED_FUNCTION_79_8();
          if (v59) {
            goto LABEL_53;
          }
          uint64_t v60 = v74;
          char v76 = v75;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, Participant.Caption>);
          BOOL v77 = OUTLINED_FUNCTION_73_9();
          uint64_t v26 = v93;
          if (v77)
          {
            specialized __RawDictionaryStorage.find<A>(_:)(v56);
            OUTLINED_FUNCTION_29_29();
            if (!v64) {
              goto LABEL_56;
            }
            uint64_t v60 = v78;
          }
          uint64_t v25 = v98;
          if (v76)
          {
LABEL_41:
            OUTLINED_FUNCTION_21_47();
            outlined assign with take of Participant.Caption();
LABEL_47:
            swift_bridgeObjectRelease();
            uint64_t v73 = v96;
            uint64_t v72 = v97;
            _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.Caption);
            OUTLINED_FUNCTION_125_5();
            uint64_t v71 = (uint64_t)v95;
            goto LABEL_48;
          }
          OUTLINED_FUNCTION_13_69();
          _s15ConversationKit11ParticipantVWObTm_5();
          uint64_t v81 = *(void *)(v25 + 16);
          BOOL v59 = __OFADD__(v81, 1);
          uint64_t v80 = v81 + 1;
          if (v59) {
            goto LABEL_55;
          }
        }
        *(void *)(v25 + 16) = v80;
        goto LABEL_47;
      }
    }
    OUTLINED_FUNCTION_74();
    outlined init with copy of Participant.State();
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_76_8();
    OUTLINED_FUNCTION_79_8();
    if (v59) {
      break;
    }
    uint64_t v60 = v65;
    char v67 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, Participant.Caption>);
    if (OUTLINED_FUNCTION_73_9())
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v27);
      OUTLINED_FUNCTION_29_29();
      if (!v64) {
        goto LABEL_56;
      }
      uint64_t v60 = v68;
    }
    uint64_t v25 = v98;
    if (v67)
    {
      OUTLINED_FUNCTION_21_47();
      outlined assign with take of Participant.Caption();
    }
    else
    {
      OUTLINED_FUNCTION_13_69();
      _s15ConversationKit11ParticipantVWObTm_5();
      uint64_t v69 = *(void *)(v25 + 16);
      BOOL v59 = __OFADD__(v69, 1);
      uint64_t v70 = v69 + 1;
      if (v59) {
        goto LABEL_51;
      }
      *(void *)(v25 + 16) = v70;
    }
    swift_bridgeObjectRelease();
    uint64_t v71 = (uint64_t)v26;
    uint64_t v73 = v96;
    uint64_t v72 = v97;
LABEL_48:
    _s15ConversationKit11ParticipantVWOhTm_7(v71, (void (*)(void))type metadata accessor for Participant.Caption);
    uint64_t v24 = v73 + v60;
    uint64_t v22 = v72 - 1;
    if (!v22) {
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t Participant.ScreenInfo.deviceFamily.getter()
{
  if (*(unsigned char *)(v0 + 208)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 184);
  }
}

uint64_t Participant.isMomentsAvailable.getter()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_60();
  int v4 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 32));
  OUTLINED_FUNCTION_35();
  outlined init with copy of Participant.State();
  if (v4 == 1) {
    char v5 = Participant.hasReducedQualityVideo.getter() ^ 1;
  }
  else {
    char v5 = 0;
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  return v5 & 1;
}

BOOL Participant.isLocal.getter()
{
  OUTLINED_FUNCTION_188_2();
  return *(void *)(v0 + v1) == 0;
}

void Participant.isKickingAvailable.getter()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v30 = v1;
  uint64_t v31 = v2;
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_98_6();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_133_3();
  OUTLINED_FUNCTION_169_2();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v11 = v0 + *(int *)(v10 + 48);
    OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v10 + 64)));
    uint64_t v12 = OUTLINED_FUNCTION_72_7();
    v13(v12);
    outlined destroy of Participant.MediaInfo(v11);
    uint64_t v14 = Date.timeIntervalSinceNow.getter();
    double v16 = v15;
    uint64_t v17 = MEMORY[0x1F4188790](v14);
    uint64_t v25 = OUTLINED_FUNCTION_54_13(v17, v18, v19, v20, v21, v22, v23, v24, v29);
    v26(v25);
    if (v16 <= 0.0)
    {
      Date.timeIntervalSinceNow.getter();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_50();
      (*(uint64_t (**)(void))(v27 + 696))();
    }
    char v28 = *(void (**)(void))(v8 + 8);
    OUTLINED_FUNCTION_43_19();
    v28();
    OUTLINED_FUNCTION_43_19();
    v28();
    OUTLINED_FUNCTION_75_7();
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_33_2();
}

uint64_t Participant.canShowKickButtonOnVideoTile.getter()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_17_0();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  char v4 = (*(uint64_t (**)(void))(v3 + 608))();
  OUTLINED_FUNCTION_51_15();
  if (v4)
  {
    Participant.aspectRatio.getter();
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of ConversationControlsRecipe?((uint64_t)v6, (uint64_t)v7, &demangling cache variable for type metadata for AspectRatio?);
    if ((v7[33] & 1) == 0) {
      return v7[32];
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  }
  return 1;
}

void Participant.videoInfo.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v7 = v6;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_75_7();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v10 = (const void *)(v0 + *(int *)(v9 + 48));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v9 + 64)));
    memcpy(v19, v10, 0x150uLL);
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v11();
    uint64_t v12 = v19[2];
    uint64_t v1 = v19[5];
    uint64_t v17 = v19[4];
    uint64_t v18 = v19[3];
    uint64_t v2 = v19[6];
    uint64_t v3 = v19[7];
    uint64_t v4 = v19[8];
    uint64_t v5 = v19[9];
    uint64_t v13 = v19[10];
    __int16 v14 = v19[11];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v19);
    uint64_t v16 = v17;
    uint64_t v15 = v18;
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    uint64_t v12 = 0;
    OUTLINED_FUNCTION_112_1();
    uint64_t v13 = 0;
    __int16 v14 = 0;
  }
  *(void *)uint64_t v7 = v12;
  *(void *)(v7 + 8) = v15;
  *(void *)(v7 + 16) = v16;
  *(void *)(v7 + 24) = v1;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v13;
  *(_WORD *)(v7 + 72) = v14;
  OUTLINED_FUNCTION_28();
}

uint64_t Participant.isReceivingVideoFrames.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_91_4();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0)
    {
      swift_bridgeObjectRelease();
      return v0 & 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

uint64_t Participant.isVideoPaused.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_91_4();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0)
    {
      swift_bridgeObjectRelease();
      return (v0 >> 16) & 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

uint64_t Participant.isVideoSuspended.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_91_4();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0)
    {
      swift_bridgeObjectRelease();
      return (v0 >> 8) & 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

unint64_t Participant.videoDegradedState.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_91_4();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0)
    {
      swift_bridgeObjectRelease();
      return v0 >> 24;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

double Participant.videoProvider(for:)@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  outlined init with copy of Participant.State();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v5 = (const void *)(v1 + *(int *)(v4 + 48));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v1 + *(int *)(v4 + 64)));
    memcpy(v9, v5, sizeof(v9));
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v6();
    uint64_t v7 = v9[2];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v9);
    if (v7)
    {
      specialized Dictionary.subscript.getter();
      swift_bridgeObjectRelease();
      return result;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant.State);
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void Participant.copresenceInfo.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v7 = v6;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v10 = (uint64_t *)(v0 + *(int *)(v9 + 64));
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    uint64_t v13 = v10[2];
    uint64_t v1 = v10[3];
    uint64_t v2 = v10[4];
    uint64_t v3 = v10[5];
    uint64_t v4 = v10[6];
    uint64_t v5 = v10[7];
    outlined destroy of Participant.MediaInfo(v0 + *(int *)(v9 + 48));
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v14();
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    OUTLINED_FUNCTION_112_1();
  }
  *uint64_t v7 = v11;
  v7[1] = v12;
  void v7[2] = v13;
  long long v7[3] = v1;
  v7[4] = v2;
  v7[5] = v3;
  void v7[6] = v4;
  v7[7] = v5;
  OUTLINED_FUNCTION_28();
}

uint64_t Participant.VideoInfo.cameraType.getter()
{
  specialized Dictionary.subscript.getter();
  if (!v8)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    long long v4 = 0u;
    long long v5 = 0u;
    uint64_t v6 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CameraContainer);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v6 = 0;
    long long v4 = 0u;
    long long v5 = 0u;
    goto LABEL_7;
  }
  if (!*((void *)&v5 + 1))
  {
LABEL_7:
    outlined destroy of SystemUpdateNotice?((uint64_t)&v4, &demangling cache variable for type metadata for CameraContainer?);
    return 2;
  }
  outlined init with take of Notice(&v4, (uint64_t)v7);
  __swift_project_boxed_opaque_existential_1(v7, v8);
  uint64_t v0 = OUTLINED_FUNCTION_34_9();
  uint64_t v2 = v1(v0) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v2;
}

uint64_t Participant.isEffectsEnabled.getter()
{
  uint64_t v2 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_84_7();
  OUTLINED_FUNCTION_51_15();
  if (v1) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 40));
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  return v4;
}

uint64_t Participant.shortName.getter()
{
  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  Participant.name(_:)();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_35();
}

id Participant.isDestinationTemporary.getter()
{
  return Participant.isDestinationTemporary.getter((SEL *)&selRef_destinationIdIsTemporary);
}

void Participant.isDisplayEquivalent(to:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_23_0();
  static Participant.== infix(_:_:)();
  if (v0)
  {
    uint64_t v1 = Participant.deviceOrientation.getter();
    char v3 = v2;
    uint64_t v4 = Participant.deviceOrientation.getter();
    if ((v3 & 1) != 0 || v1 == v4)
    {
      Participant.videoInfo.getter();
      outlined init with take of ConversationControlsRecipe?((uint64_t)v17, (uint64_t)v21, &demangling cache variable for type metadata for Participant.VideoInfo?);
      uint64_t v5 = v21[0];
      if (v21[0])
      {
        uint64_t v6 = v21[5];
        uint64_t v7 = v21[6];
        uint64_t v8 = v21[7];
        uint64_t v9 = v21[8];
        char v10 = v22;
        outlined release of LinearGradient((uint64_t)v17);
        char v11 = v10 & 1;
      }
      else
      {
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        char v11 = 0;
      }
      Participant.videoInfo.getter();
      outlined init with take of ConversationControlsRecipe?((uint64_t)v18, (uint64_t)v19, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v19[0])
      {
        uint64_t v12 = v19[5];
        uint64_t v13 = v19[6];
        uint64_t v14 = v19[7];
        uint64_t v15 = v19[8];
        char v16 = v20;
        outlined release of LinearGradient((uint64_t)v18);
        if (v5)
        {
          v23[0] = v6;
          v23[1] = v7;
          v23[2] = v8;
          v23[3] = v9;
          char v24 = v11;
          v25[0] = v12;
          v25[1] = v13;
          v25[2] = v14;
          v25[3] = v15;
          char v26 = v16 & 1;
          static AspectRatio.== infix(_:_:)((uint64_t)v23, (uint64_t)v25);
        }
      }
    }
  }
  OUTLINED_FUNCTION_28();
}

BOOL Participant.intendsToScreenShare.getter()
{
  return Participant.screenState.getter() != 2;
}

double Participant.ScreenInfo.contentsSize.getter()
{
  if (*(unsigned char *)(v0 + 208))
  {
    id v2 = objc_msgSend(self, sel_defaultDisplayScale);
    objc_msgSend(v2, sel_doubleValue);
  }
  if ((*(void *)(v0 + 48) | 2) == 3)
  {
    double v3 = OUTLINED_FUNCTION_113_3();
    if ((v4 & 1) == 0) {
      double v3 = *(double *)(v0 + 72);
    }
  }
  else
  {
    double v3 = OUTLINED_FUNCTION_113_3();
    if ((v5 & 1) == 0) {
      double v3 = *(double *)(v0 + 88);
    }
  }
  OUTLINED_FUNCTION_202_0(v3);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  double v6 = static UIView.screenScale.getter();
  double v7 = round(v1 * v6) / v6;
  static UIView.screenScale.getter();
  return v7;
}

uint64_t Participant.isOtherInvitedParticipant.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_63_6();
  uint64_t v2 = 1;
  uint64_t v3 = OUTLINED_FUNCTION_19_9();
  uint64_t result = 0;
  switch(v3)
  {
    case 1:
    case 2:
    case 3:
    case 5:
      goto LABEL_3;
    case 4:
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v6 = v0 + *(int *)(v5 + 48);
      OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
      outlined destroy of Participant.MediaInfo(v6);
LABEL_3:
      uint64_t v2 = 0;
      goto LABEL_4;
    case 6:
      return result;
    default:
LABEL_4:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v7();
      return v2;
  }
}

uint64_t Participant.idsIdentifier.getter()
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_187_2();
  if (*v0) {
    return v0[1];
  }
  else {
    return 0;
  }
}

uint64_t Participant.isActiveWithAV.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    char v4 = v7[0];
    outlined destroy of Participant.MediaInfo((uint64_t)v7);
    char v5 = v4 ^ 1;
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    char v5 = 0;
  }
  return v5 & 1;
}

ConversationKit::Participant::Capabilities __swiftcall Participant.Capabilities.init(momentsCapture:screenSharing:gondolaCalling:kickable:requestScreenSharing:)(Swift::Bool momentsCapture, Swift::Bool screenSharing, Swift::Bool gondolaCalling, Swift::Bool kickable, Swift::Bool requestScreenSharing)
{
  uint64_t v5 = 0x100000000;
  if (!requestScreenSharing) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000;
  if (!kickable) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000;
  if (!gondolaCalling) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 256;
  if (!screenSharing) {
    uint64_t v8 = 0;
  }
  return (ConversationKit::Participant::Capabilities)(v8 & 0xFFFFFFFFFFFFFFFELL | momentsCapture | v7 | v6 | v5);
}

uint64_t Participant.RemoteIdentifiers.init(handle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  return result;
}

void Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  OUTLINED_FUNCTION_31();
  BOOL v77 = v23;
  uint64_t v78 = v24;
  uint64_t v76 = v25;
  uint64_t v27 = v26;
  unint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v83 = a22;
  uint64_t v84 = v36;
  int v75 = a21;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v38 = OUTLINED_FUNCTION_8(v37);
  MEMORY[0x1F4188790](v38);
  uint64_t v39 = OUTLINED_FUNCTION_97_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_10_5();
  uint64_t v71 = v41;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v42);
  uint64_t v80 = (char *)&v71 - v43;
  long long v44 = *v27;
  long long v73 = v27[1];
  long long v74 = v44;
  uint64_t v72 = *((void *)v27 + 4);
  uint64_t v45 = (int *)type metadata accessor for Participant(0);
  uint64_t v46 = v35 + v45[7];
  uint64_t v47 = (uint64_t **)(v35 + v45[9]);
  *(unsigned char *)(v35 + v45[10]) = 0;
  *(void *)(v35 + v45[11]) = MEMORY[0x1E4FBC870];
  *(void *)(v35 + v45[12]) = 0;
  uint64_t v82 = v33;
  OUTLINED_FUNCTION_51_15();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  uint64_t v81 = v31;
  uint64_t v79 = v48;
  OUTLINED_FUNCTION_2_1();
  v49();
  uint64_t v50 = (unsigned char *)(v35 + v45[6]);
  *uint64_t v50 = v29 & 1;
  uint64x2_t v51 = (uint64x2_t)vdupq_n_s64(v29);
  OUTLINED_FUNCTION_87_6((uint64_t)v50, v51, (int32x4_t)vshlq_u64(v51, (uint64x2_t)xmmword_1C3782D40), (uint64x2_t)xmmword_1C3782D50);
  long long v52 = v73;
  *(_OWORD *)uint64_t v46 = v74;
  *(_OWORD *)(v46 + 16) = v52;
  *(void *)(v46 + 32) = v72;
  uint64_t v53 = v22;
  *(void *)(v35 + v45[8]) = v76;
  uint64_t v54 = v78;
  char *v47 = v77;
  v47[1] = v54;
  *(unsigned char *)(v35 + v45[15]) = v75;
  *(unsigned char *)(v35 + v45[13]) = 0;
  outlined init with copy of Participant?(v84, v22, &demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v55 = OUTLINED_FUNCTION_171_2();
  OUTLINED_FUNCTION_33_0(v55, v56, v39);
  if (v57)
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v78 = &v71;
    uint64_t v59 = OUTLINED_FUNCTION_8(v58);
    uint64_t v61 = *(void *)(v60 + 64);
    MEMORY[0x1F4188790](v59);
    BOOL v62 = (char *)&v71 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
    type metadata accessor for Date();
    uint64_t v63 = OUTLINED_FUNCTION_78_6((uint64_t)v62);
    BOOL v77 = &v71;
    MEMORY[0x1F4188790](v63);
    OUTLINED_FUNCTION_78_6((uint64_t)v62);
    uint64_t v64 = v71;
    OUTLINED_FUNCTION_78_6(v71);
    OUTLINED_FUNCTION_78_6(v64 + *(int *)(v39 + 20));
    _s15ConversationKit11ParticipantVSgWOdTm_0((uint64_t)v62, v64, (uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v65 = OUTLINED_FUNCTION_163();
    _s15ConversationKit11ParticipantVSgWOdTm_0(v65, v66, (uint64_t *)&demangling cache variable for type metadata for Date?);
    *(unsigned char *)(v64 + *(int *)(v39 + 24)) = 0;
    _s15ConversationKit11ParticipantVWObTm_5();
    outlined destroy of SystemUpdateNotice?(v84, &demangling cache variable for type metadata for Participant.CountdownInfo?);
    uint64_t v67 = OUTLINED_FUNCTION_120_4();
    v68(v67);
    _s15ConversationKit11ParticipantVWOhTm_7(v82, (void (*)(void))type metadata accessor for Participant.State);
    outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for Participant.CountdownInfo?);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?(v84, &demangling cache variable for type metadata for Participant.CountdownInfo?);
    uint64_t v69 = OUTLINED_FUNCTION_120_4();
    v70(v69);
    _s15ConversationKit11ParticipantVWOhTm_7(v82, (void (*)(void))type metadata accessor for Participant.State);
    _s15ConversationKit11ParticipantVWObTm_5();
  }
  _s15ConversationKit11ParticipantVWObTm_5();
  *(void *)(v35 + v45[16]) = v83;
  OUTLINED_FUNCTION_28();
}

ConversationKit::Participant::AVInfo __swiftcall Participant.AVInfo.init(isAVLess:audioToken:)(Swift::Bool isAVLess, Swift::Int audioToken)
{
  Swift::Bool v2 = isAVLess;
  result.audioToken = audioToken;
  result.isAVLess = v2;
  return result;
}

ConversationKit::Participant::VideoState __swiftcall Participant.VideoState.init(isReceivingVideoFrames:isVideoSuspended:isVideoPaused:videoDegradedState:isVideoDegradedUI:isVideoReconnecting:isVideoMirrored:isVideoCroppedByAspectRatio:)(Swift::Bool isReceivingVideoFrames, Swift::Bool isVideoSuspended, Swift::Bool isVideoPaused, ConversationKit::Participant::VideoDegradedState videoDegradedState, Swift::Bool isVideoDegradedUI, Swift::Bool isVideoReconnecting, Swift::Bool isVideoMirrored, Swift::Bool isVideoCroppedByAspectRatio)
{
  uint64_t v8 = 256;
  if (!isVideoSuspended) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL | isReceivingVideoFrames;
  uint64_t v10 = 0x10000;
  if (!isVideoPaused) {
    uint64_t v10 = 0;
  }
  unint64_t v11 = (v9 | v10) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)videoDegradedState << 24);
  uint64_t v12 = 0x100000000;
  if (!isVideoDegradedUI) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x10000000000;
  if (!isVideoMirrored) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x1000000000000;
  if (!isVideoReconnecting) {
    uint64_t v14 = 0;
  }
  unint64_t v15 = v11 | v12 | v14 | v13;
  __int16 v16 = isVideoCroppedByAspectRatio;
  result.isReceivingVideoFrames = v15;
  result.isVideoSuspended = BYTE1(v15);
  result.isVideoPaused = BYTE2(v15);
  result.videoDegradedState = BYTE3(v15);
  result.isVideoDegradedUI = BYTE4(v15);
  result.isVideoMirrored = BYTE5(v15);
  result.isVideoReconnecting = BYTE6(v15);
  result.isChangingMirroredVideo = HIBYTE(v15);
  result.isVideoCroppedByAspectRatio = v16;
  result.isChangingExternalCameraUsageOnIPad = HIBYTE(v16);
  return result;
}

uint64_t default argument 5 of Participant.VideoInfo.init(providers:state:orientation:cameraPosition:aspectRatio:isMixedWithScreen:)()
{
  return 0;
}

int8x8_t Participant.VideoInfo.init(providers:state:orientation:cameraPosition:aspectRatio:isMixedWithScreen:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  unint64_t v15 = a2 >> 24;
  outlined init with take of AspectRatio(a6, (uint64_t)v22);
  char v16 = v23;
  uint64x2_t v17 = (uint64x2_t)vdupq_n_s64(a2);
  int16x8_t v18 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1C376F240), (int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1C376F230));
  *(int8x8_t *)v18.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v18), (int8x8_t)0x1000100010001);
  long long v19 = v22[0];
  long long v20 = v22[1];
  *(void *)a8 = a1;
  *(unsigned char *)(a8 + 8) = a2 & 1;
  *(unsigned char *)(a8 + 9) = BYTE1(a2) & 1;
  *(unsigned char *)(a8 + 10) = BYTE2(a2) & 1;
  *(unsigned char *)(a8 + 11) = v15;
  int8x8_t result = vmovn_s16(v18);
  *(_DWORD *)(a8 + 12) = result.i32[0];
  *(unsigned char *)(a8 + 16) = a3 & 1;
  *(unsigned char *)(a8 + 17) = HIBYTE(a3) & 1;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5;
  *(_OWORD *)(a8 + 40) = v19;
  *(_OWORD *)(a8 + 56) = v20;
  *(unsigned char *)(a8 + 72) = v16;
  *(unsigned char *)(a8 + 73) = a7;
  return result;
}

void Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_67_9();
  a27 = v28;
  a28 = v29;
  Participant.copresenceInfo.getter();
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?((uint64_t)&a9);
  OUTLINED_FUNCTION_78_1();
}

#error "1C348FA7C: call analysis failed (funcsize=131)"

uint64_t Participant.isPendingAuthorization.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_63_6();
  uint64_t v2 = 1;
  uint64_t v3 = OUTLINED_FUNCTION_19_9();
  uint64_t result = 0;
  switch(v3)
  {
    case 2:
      goto LABEL_4;
    case 4:
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v6 = v0 + *(int *)(v5 + 48);
      OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
      outlined destroy of Participant.MediaInfo(v6);
      goto LABEL_3;
    case 6:
      return result;
    default:
LABEL_3:
      uint64_t v2 = 0;
LABEL_4:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v7();
      return v2;
  }
}

uint64_t Array<A>.sorted()()
{
  return Sequence.sorted(by:)();
}

void Participant.RemoteIdentifiers.init(participant:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v0, sel_handle);
  id v5 = objc_msgSend(v1, sel_identifier);
  id v6 = objc_msgSend(v1, sel_avcIdentifier);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v5;
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = v7;
  *(void *)(v3 + 32) = v9;
  OUTLINED_FUNCTION_15_0();
}

uint64_t Participant.State.debugDescription.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  outlined init with copy of Participant.State();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x676E696E696F6A2ELL;
  unint64_t v4 = 0x64657469766E692ELL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v4 = 0x676E69746961772ELL;
      goto LABEL_7;
    case 2:
      unint64_t v4 = 0xD000000000000015;
      goto LABEL_7;
    case 3:
      unint64_t v4 = 0x676E75722ELL;
      goto LABEL_7;
    case 4:
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(v10, (const void *)(v0 + *(int *)(v5 + 48)), sizeof(v10));
      v6._uint64_t countAndFlagsBits = 0x2864656E696F6A2ELL;
      v6._object = (void *)0xE800000000000000;
      String.append(_:)(v6);
      _print_unlocked<A, B>(_:_:)();
      v7._uint64_t countAndFlagsBits = 8236;
      v7._object = (void *)0xE200000000000000;
      String.append(_:)(v7);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CopresenceInfo?);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_77_6();
      unint64_t v4 = 0;
      outlined destroy of Participant.MediaInfo((uint64_t)v10);
      goto LABEL_7;
    case 5:
      unint64_t v4 = 0x7466656C2ELL;
      goto LABEL_7;
    case 6:
      return result;
    default:
LABEL_7:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v9();
      return v4;
  }
}

BOOL Participant.State.isWaiting.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_63_6();
  int v2 = OUTLINED_FUNCTION_19_9();
  if (v2 == 1)
  {
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return v2 == 1;
}

id Participant.RemoteIdentifiers.handle.getter()
{
  return *v0;
}

void Participant.RemoteIdentifiers.handle.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*Participant.RemoteIdentifiers.handle.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Participant.RemoteIdentifiers.idsIdentifier.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.RemoteIdentifiers.avcIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Participant.RemoteIdentifiers.avcIdentifier.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*Participant.RemoteIdentifiers.avcIdentifier.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.RemoteIdentifiers.debugDescription.getter()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_113();
  _StringGuts.grow(_:)(55);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_0_43(0xD000000000000019, (uint64_t)"RemoteIdentifiers(handle=");
  id v4 = objc_msgSend(v1, sel_value);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v13._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_94_3(v13);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x3D4449736469202CLL;
  v5._object = (void *)0xE800000000000000;
  String.append(_:)(v5);
  if (v2)
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  else
  {
    uint64_t v7 = String.init<A>(reflecting:)();
    unint64_t v6 = v8;
  }
  unint64_t v9 = v6;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_137_0((uint64_t)", avcIdentifier=");
  if (v3)
  {
    swift_bridgeObjectRetain();
    String.init<A>(reflecting:)();
  }
  v10._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_34_9();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return v12;
}

void Participant.RemoteIdentifiers.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  id v4 = *(id *)v0;
  NSObject.hash(into:)();

  if (v2 != 1)
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_7:
    Hasher._combine(_:)(0);
    return;
  }
  Hasher._combine(_:)(0);
  if (!v3) {
    goto LABEL_7;
  }
LABEL_3:
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
}

Swift::Int Participant.RemoteIdentifiers.hashValue.getter()
{
  int v2 = *(void **)v0;
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_7_1();
  id v5 = v2;
  NSObject.hash(into:)();

  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  if (v4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant.RemoteIdentifiers()
{
  int v2 = *(void **)v0;
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 32);
  Hasher.init(_seed:)();
  id v5 = v2;
  NSObject.hash(into:)();

  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  if (v4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t Participant.Capabilities.momentsCapture.getter(char a1)
{
  return a1 & 1;
}

uint64_t (*Participant.Capabilities.momentsCapture.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.screenSharing.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t (*Participant.Capabilities.screenSharing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.gondolaCalling.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t (*Participant.Capabilities.gondolaCalling.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.kickable.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t (*Participant.Capabilities.kickable.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.requestScreenSharing.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t Participant.Capabilities.requestScreenSharing.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*Participant.Capabilities.requestScreenSharing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.debugDescription.getter()
{
  OUTLINED_FUNCTION_113();
  _StringGuts.grow(_:)(105);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_0_43(0xD00000000000001CLL, (uint64_t)"Capabilities(momentsCapture=");
  v3._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_94_3(v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_137_0((uint64_t)", screenSharing=");
  v4._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_94_3(v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_43(0xD000000000000011, (uint64_t)", gondolaCalling=");
  v5._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_94_3(v5);
  swift_bridgeObjectRelease();
  v0._uint64_t countAndFlagsBits = 0x62616B63696B202CLL;
  v0._object = (void *)0xEB000000003D656CLL;
  String.append(_:)(v0);
  v6._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_94_3(v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_43(0xD000000000000017, (uint64_t)", requestScreenSharing=");
  v7._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_270_0(v7);
  swift_bridgeObjectRelease();
  return v2;
}

void Participant.Capabilities.hash(into:)(uint64_t a1, uint64_t a2)
{
}

BOOL static Participant.Capabilities.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_108(a1 ^ a2 | BYTE1(a1) & 1 ^ BYTE1(a2) & 1 | BYTE2(a1) & 1 ^ BYTE2(a2) & 1 | (((a1 ^ a2) & 0x1000000) >> 24) | BYTE4(a1) & 1 ^ BYTE4(a2) & 1);
}

Swift::Int Participant.Capabilities.hashValue.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_7_1();
  Participant.Capabilities.hash(into:)((uint64_t)v3, a1 & 0x101010101);
  return Hasher._finalize()();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.Capabilities()
{
  return Participant.Capabilities.debugDescription.getter();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Participant.Capabilities()
{
  uint64_t v1 = 0x100000000;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return Participant.Capabilities.hashValue.getter(v4 | *v0 | v3 | v2 | v1);
}

void protocol witness for Hashable.hash(into:) in conformance Participant.Capabilities(uint64_t a1)
{
  uint64_t v2 = 0x100000000;
  if (!v1[4]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000;
  if (!v1[3]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x10000;
  if (!v1[2]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 256;
  if (!v1[1]) {
    uint64_t v5 = 0;
  }
  Participant.Capabilities.hash(into:)(a1, v5 | *v1 | v4 | v3 | v2);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant.Capabilities()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  int v5 = v0[4];
  Hasher.init(_seed:)();
  uint64_t v6 = 0x100000000;
  if (!v5) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x1000000;
  if (!v4) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x10000;
  if (!v3) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = 256;
  if (!v2) {
    uint64_t v9 = 0;
  }
  Participant.Capabilities.hash(into:)((uint64_t)v11, v9 | v1 | v8 | v7 | v6);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.Capabilities(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  int v3 = a1[1];
  int v4 = a1[2];
  int v5 = a1[3];
  uint64_t v6 = *a2;
  int v7 = a2[1];
  int v8 = a2[2];
  int v9 = a2[3];
  int v10 = a2[4];
  if (a1[4]) {
    uint64_t v11 = 0x100000000;
  }
  else {
    uint64_t v11 = 0;
  }
  BOOL v12 = v5 == 0;
  uint64_t v13 = 0x1000000;
  if (v12) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = 0x1000000;
  }
  BOOL v12 = v4 == 0;
  uint64_t v15 = 0x10000;
  if (v12) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = 0x10000;
  }
  BOOL v12 = v3 == 0;
  uint64_t v17 = 256;
  if (v12) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = 256;
  }
  uint64_t v19 = v18 | v2 | v16 | v14 | v11;
  if (v10) {
    uint64_t v20 = 0x100000000;
  }
  else {
    uint64_t v20 = 0;
  }
  if (!v9) {
    uint64_t v13 = 0;
  }
  if (!v8) {
    uint64_t v15 = 0;
  }
  if (!v7) {
    uint64_t v17 = 0;
  }
  return static Participant.Capabilities.== infix(_:_:)(v19, v17 | v6 | v15 | v13 | v20);
}

uint64_t Participant.MediaInfo.avInfo.getter()
{
  return *v0;
}

uint64_t Participant.MediaInfo.avInfo.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)uint64_t v2 = result;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*Participant.MediaInfo.avInfo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.MediaInfo.videoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Participant?(v1 + 16, a1, &demangling cache variable for type metadata for Participant.VideoInfo?);
}

uint64_t Participant.MediaInfo.videoInfo.setter(uint64_t a1)
{
  return _s15ConversationKit11ParticipantVSgWOdTm_0(a1, v1 + 16, &demangling cache variable for type metadata for Participant.VideoInfo?);
}

uint64_t (*Participant.MediaInfo.videoInfo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.MediaInfo.screenInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Participant?(v1 + 96, a1, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
}

uint64_t Participant.MediaInfo.screenInfo.setter(uint64_t a1)
{
  return _s15ConversationKit11ParticipantVSgWOdTm_0(a1, v1 + 96, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
}

uint64_t (*Participant.MediaInfo.screenInfo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.MediaInfo.captionInfo.getter()
{
  OUTLINED_FUNCTION_154_4();
  outlined copy of Participant.CaptionInfo?(v0);
  OUTLINED_FUNCTION_154_4();
}

uint64_t Participant.MediaInfo.captionInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_3_74();
  uint64_t result = outlined consume of Participant.CaptionInfo?(v3[39]);
  v3[39] = v5;
  unsigned char v3[40] = v4;
  v3[41] = a3;
  return result;
}

uint64_t (*Participant.MediaInfo.captionInfo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.MediaInfo.init(audioToken:screenInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  outlined init with copy of Participant?(a2, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  memset(&__src[6], 0, 24);
  *((void *)&__src[7] + 1) = 1;
  LOBYTE(__src[0]) = 0;
  bzero(&__src[8], 0xB1uLL);
  *((void *)&__src[19] + 1) = 0;
  __src[20] = 0uLL;
  *((void *)&__src[0] + 1) = a1;
  memset(&__src[1], 0, 74);
  _s15ConversationKit11ParticipantVSgWOdTm_0((uint64_t)v9, (uint64_t)&__src[6], (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined consume of Participant.CaptionInfo?(*((uint64_t *)&__src[19] + 1));
  *((void *)&__src[19] + 1) = 0;
  __src[20] = 0uLL;
  memcpy(a3, __src, 0x150uLL);
  uint64_t v5 = OUTLINED_FUNCTION_35();
  return outlined destroy of SystemUpdateNotice?(v5, v6);
}

void Participant.MediaInfo.init(avInfo:videoInfo:screenInfo:captionInfo:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_150_4();
  char v9 = v8;
  uint64_t v11 = v10;
  v10[13] = 0;
  v10[14] = 0;
  uint64_t v12 = (uint64_t)(v10 + 2);
  v10[12] = 0;
  uint64_t v13 = (uint64_t)(v10 + 12);
  v10[15] = 1;
  bzero(v10 + 16, 0xB1uLL);
  v11[39] = 0;
  v11[40] = 0;
  v11[41] = 0;
  *(unsigned char *)uint64_t v11 = v9;
  v11[1] = v3;
  outlined init with take of ConversationControlsRecipe?(v2, v12, &demangling cache variable for type metadata for Participant.VideoInfo?);
  _s15ConversationKit11ParticipantVSgWOdTm_0(v1, v13, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined consume of Participant.CaptionInfo?(v11[39]);
  v11[39] = v0;
  v11[40] = v7;
  v11[41] = v5;
  OUTLINED_FUNCTION_28();
}

void Participant.MediaInfo.debugDescription.getter()
{
  OUTLINED_FUNCTION_31();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  uint64_t inited = swift_initStackObject();
  uint64_t v2 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1C376BA10;
  *(void *)(inited + 32) = 0x6F666E497661;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v3 = *(void *)(v0 + 8);
  *(unsigned char *)(inited + 48) = *(unsigned char *)v0;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 72) = &type metadata for Participant.AVInfo;
  *(void *)(inited + 80) = 0x666E496F65646976;
  *(void *)(inited + 88) = 0xE90000000000006FLL;
  uint64_t v4 = *(void *)(v0 + 16);
  if (v4)
  {
    __int16 v5 = *(_WORD *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 80);
    long long v16 = *(_OWORD *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    int v9 = *(_DWORD *)(v0 + 32);
    unint64_t v10 = *(void *)(v0 + 24);
    *(void *)(inited + 120) = &type metadata for Participant.VideoInfo;
    uint64_t v11 = swift_allocObject();
    *(void *)(v2 + 96) = v11;
    *(void *)(v11 + 16) = v4;
    *(unsigned char *)(v11 + 24) = v10 & 1;
    *(unsigned char *)(v11 + 25) = BYTE1(v10) & 1;
    *(unsigned char *)(v11 + 26) = BYTE2(v10) & 1;
    *(unsigned char *)(v11 + 27) = BYTE3(v10);
    uint64x2_t v12 = (uint64x2_t)vdupq_n_s64(v10);
    unsigned __int32 v13 = OUTLINED_FUNCTION_191_2(v12, (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1C376F230), (uint64x2_t)xmmword_1C376F240).u32[0];
    *(_DWORD *)(v14 + 28) = v13;
    *(unsigned char *)(v14 + 32) = v9 & 1;
    *(unsigned char *)(v14 + 33) = BYTE1(v9) & 1;
    *(void *)(v14 + 40) = v8;
    *(unsigned char *)(v14 + 48) = v7;
    *(_OWORD *)(v14 + 56) = v16;
    *(void *)(v14 + 72) = v6;
    *(void *)(v14 + 80) = v17;
    *(unsigned char *)(v14 + 88) = v5 & 1;
    *(unsigned char *)(v14 + 89) = HIBYTE(v5) & 1;
  }
  else
  {
    *(_OWORD *)(inited + 96) = 0u;
    *(_OWORD *)(inited + 112) = 0u;
  }
  *(void *)(v2 + 128) = 0x6E496E6565726373;
  *(void *)(v2 + 136) = 0xEA00000000006F66;
  outlined init with copy of Participant?(v0 + 96, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (__src[3] == 1)
  {
    swift_bridgeObjectRetain();
    outlined destroy of SystemUpdateNotice?((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    *(_OWORD *)(v2 + 144) = 0u;
    *(_OWORD *)(v2 + 160) = 0u;
  }
  else
  {
    *(void *)(v2 + 168) = &type metadata for Participant.ScreenInfo;
    uint64_t v15 = swift_allocObject();
    *(void *)(v2 + 144) = v15;
    memcpy((void *)(v15 + 16), __src, 0xD1uLL);
    swift_bridgeObjectRetain();
  }
  __src[3] = &type metadata for Participant.MediaInfo;
  __src[0] = swift_allocObject();
  outlined init with copy of Participant.MediaInfo(v0, __src[0] + 16);
  String.init(namedPropertyValues:for:)(v2, __src);
  OUTLINED_FUNCTION_28();
}

void *Participant.MediaInfo.localAudioToken.unsafeMutableAddressor()
{
  return &static Participant.MediaInfo.localAudioToken;
}

uint64_t static Participant.MediaInfo.localAudioToken.getter()
{
  return 0;
}

uint64_t Participant.VideoState.isReceivingVideoFrames.getter(char a1)
{
  return a1 & 1;
}

uint64_t (*Participant.VideoState.isReceivingVideoFrames.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoSuspended.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t (*Participant.VideoState.isVideoSuspended.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoPaused.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t (*Participant.VideoState.isVideoPaused.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

unint64_t Participant.VideoState.videoDegradedState.getter(unint64_t a1)
{
  return a1 >> 24;
}

uint64_t (*Participant.VideoState.videoDegradedState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoDegradedUI.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t Participant.VideoState.isVideoDegradedUI.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoDegradedUI.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoMirrored.getter(unint64_t a1)
{
  return (a1 >> 40) & 1;
}

uint64_t Participant.VideoState.isVideoMirrored.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoMirrored.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoReconnecting.getter(unint64_t a1)
{
  return HIWORD(a1) & 1;
}

uint64_t Participant.VideoState.isVideoReconnecting.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoReconnecting.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isChangingMirroredVideo.getter(unint64_t a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t Participant.VideoState.isChangingMirroredVideo.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 7) = result;
  return result;
}

uint64_t (*Participant.VideoState.isChangingMirroredVideo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoCroppedByAspectRatio.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t Participant.VideoState.isVideoCroppedByAspectRatio.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoCroppedByAspectRatio.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isChangingExternalCameraUsageOnIPad.getter(uint64_t a1, unsigned int a2)
{
  return (a2 >> 8) & 1;
}

uint64_t Participant.VideoState.isChangingExternalCameraUsageOnIPad.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

uint64_t (*Participant.VideoState.isChangingExternalCameraUsageOnIPad.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.debugDescription.getter(unint64_t a1, __int16 a2)
{
  unint64_t v4 = a1 >> 24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3771450;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x80000001C37B0730;
  uint64_t v6 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = a1 & 1;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x80000001C37B0750;
  *(unsigned char *)(inited + 96) = BYTE1(a1) & 1;
  *(void *)(inited + 120) = v6;
  strcpy((char *)(inited + 128), "isVideoPaused");
  *(_WORD *)(inited + 142) = -4864;
  *(unsigned char *)(inited + 144) = BYTE2(a1) & 1;
  *(void *)(inited + 168) = v6;
  *(void *)(inited + 176) = 0xD000000000000012;
  *(void *)(inited + 184) = 0x80000001C37B0770;
  *(unsigned char *)(inited + 192) = v4;
  *(void *)(inited + 216) = &type metadata for Participant.VideoDegradedState;
  *(void *)(inited + 224) = 0x4D6F656469567369;
  *(void *)(inited + 232) = 0xEF6465726F727269;
  *(unsigned char *)(inited + 240) = BYTE5(a1) & 1;
  *(void *)(inited + 264) = v6;
  *(void *)(inited + 272) = 0xD000000000000013;
  *(void *)(inited + 280) = 0x80000001C37B0790;
  *(unsigned char *)(inited + 288) = BYTE6(a1) & 1;
  *(void *)(inited + 312) = v6;
  *(void *)(inited + 320) = 0xD000000000000017;
  *(void *)(inited + 328) = 0x80000001C37B07B0;
  *(unsigned char *)(inited + 336) = HIBYTE(a1) & 1;
  *(void *)(inited + 360) = v6;
  *(void *)(inited + 368) = 0xD00000000000001BLL;
  *(void *)(inited + 376) = 0x80000001C37B07D0;
  *(unsigned char *)(inited + 384) = a2 & 1;
  *(void *)(inited + 408) = v6;
  *(void *)(inited + 416) = 0xD000000000000023;
  *(void *)(inited + 424) = 0x80000001C37B07F0;
  *(void *)(inited + 456) = v6;
  *(unsigned char *)(inited + 432) = HIBYTE(a2) & 1;
  unint64_t v10 = &type metadata for Participant.VideoState;
  LOWORD(v8) = a1 & 0x101;
  BYTE2(v8) = BYTE2(a1) & 1;
  BYTE3(v8) = v4;
  BYTE4(v8) = BYTE4(a1) & 1;
  BYTE5(v8) = BYTE5(a1) & 1;
  BYTE6(v8) = BYTE6(a1) & 1;
  HIBYTE(v8) = HIBYTE(a1) & 1;
  __int16 v9 = a2 & 0x101;
  return String.init(namedPropertyValues:for:)(inited, &v8);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.VideoState()
{
  if (v0[1]) {
    uint64_t v1 = 256;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x10000;
  if (!v0[2]) {
    uint64_t v2 = 0;
  }
  unint64_t v3 = v1 | *v0 | v2 | ((unint64_t)v0[3] << 24);
  uint64_t v4 = 0x100000000;
  if (!v0[4]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x10000000000;
  if (!v0[5]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000000000;
  if (!v0[6]) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v4 | v5;
  uint64_t v8 = 0x100000000000000;
  if (!v0[7]) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v3 | v7 | v6 | v8;
  if (v0[9]) {
    __int16 v10 = 256;
  }
  else {
    __int16 v10 = 0;
  }
  return Participant.VideoState.debugDescription.getter(v9, v10 | v0[8]);
}

uint64_t Participant.ScreenState.isReceivingFrames.getter(char a1)
{
  return a1 & 1;
}

uint64_t (*Participant.ScreenState.isReceivingFrames.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenState.isSuspended.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t (*Participant.ScreenState.isSuspended.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenState.isPaused.getter(unsigned int a1)
{
  return HIWORD(a1) & 1;
}

uint64_t (*Participant.ScreenState.isPaused.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenState.isDegraded.getter(unsigned int a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t (*Participant.ScreenState.isDegraded.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

ConversationKit::Participant::ScreenState __swiftcall Participant.ScreenState.init(isReceivingFrames:isSuspended:isPaused:isDegraded:)(Swift::Bool isReceivingFrames, Swift::Bool isSuspended, Swift::Bool isPaused, Swift::Bool isDegraded)
{
  if (isDegraded) {
    int v4 = 0x1000000;
  }
  else {
    int v4 = 0;
  }
  if (isPaused) {
    int v5 = 0x10000;
  }
  else {
    int v5 = 0;
  }
  if (isSuspended) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  return (ConversationKit::Participant::ScreenState)(v6 & 0xFFFFFFFE | isReceivingFrames | v5 | v4);
}

uint64_t Participant.ScreenState.debugDescription.getter(int a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C376A6F0;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x80000001C37B0820;
  uint64_t v3 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = a1 & 1;
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 80) = 0x6E65707375537369;
  *(void *)(inited + 88) = 0xEB00000000646564;
  *(unsigned char *)(inited + 96) = BYTE1(a1) & 1;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 128) = 0x6465737561507369;
  *(void *)(inited + 136) = 0xE800000000000000;
  *(unsigned char *)(inited + 144) = BYTE2(a1) & 1;
  *(void *)(inited + 168) = v3;
  *(void *)(inited + 176) = 0x6461726765447369;
  *(void *)(inited + 184) = 0xEA00000000006465;
  *(void *)(inited + 216) = v3;
  *(unsigned char *)(inited + 192) = HIBYTE(a1) & 1;
  long long v5[3] = &type metadata for Participant.ScreenState;
  LOWORD(v5[0]) = a1 & 0x101;
  BYTE2(v5[0]) = BYTE2(a1) & 1;
  BYTE3(v5[0]) = HIBYTE(a1) & 1;
  return String.init(namedPropertyValues:for:)(inited, v5);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.ScreenState()
{
  if (v0[3]) {
    int v1 = 0x1000000;
  }
  else {
    int v1 = 0;
  }
  if (v0[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (v0[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return Participant.ScreenState.debugDescription.getter(v3 | *v0 | v2 | v1);
}

uint64_t Participant.VideoProviderType.debugDescription.getter(char a1)
{
  uint64_t result = 0x646972672ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7473696C2ELL;
      break;
    case 2:
      uint64_t result = 0x49506C61636F6C2ELL;
      break;
    case 3:
      uint64_t result = 0x6E65657263732ELL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static Participant.VideoProviderType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void Participant.VideoProviderType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

void *static Participant.VideoProviderType.allCases.getter()
{
  return &outlined read-only object #0 of static Participant.VideoProviderType.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.VideoProviderType(char *a1, char *a2)
{
  return static Participant.VideoProviderType.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance Participant.VideoProviderType()
{
  return Participant.VideoProviderType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance Participant.VideoProviderType(uint64_t a1)
{
  Participant.VideoProviderType.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance Participant.VideoProviderType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Participant.VideoProviderType.allCases.getter;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.VideoProviderType()
{
  return Participant.VideoProviderType.debugDescription.getter(*v0);
}

uint64_t Participant.CopresenceInfo.uniqueIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Participant.CopresenceInfo.uniqueIdentifier.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  *int v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Participant.CopresenceInfo.uniqueIdentifier.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.appName.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Participant.CopresenceInfo.appName.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*Participant.CopresenceInfo.appName.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.isActive.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Participant.CopresenceInfo.isActive.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*Participant.CopresenceInfo.isActive.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.preferredBroadcastingAttributes.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Participant.CopresenceInfo.preferredBroadcastingAttributes.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*Participant.CopresenceInfo.preferredBroadcastingAttributes.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.ongoingDescription.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Participant.CopresenceInfo.ongoingDescription.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return result;
}

uint64_t (*Participant.CopresenceInfo.ongoingDescription.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.debugDescription.getter()
{
  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_173_2();
  _StringGuts.grow(_:)(63);
  v1._uint64_t countAndFlagsBits = 0xD000000000000021;
  v1._object = (void *)0x80000001C37B0840;
  String.append(_:)(v1);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_198_2();
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x656D614E70706120;
  v2._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v2);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_198_2();
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x697463417369202CLL;
  v3._object = (void *)0xEC000000203A6576;
  String.append(_:)(v3);
  if (*(unsigned char *)(v0 + 32)) {
    uint64_t v4 = 1702195828;
  }
  else {
    uint64_t v4 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 32)) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  OUTLINED_FUNCTION_173_2();
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v0 + 40);
  if (v8) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (v8) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001C37B0890;
  v12._uint64_t countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v12);
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_74();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_6();
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = 0xD000000000000016;
  v14._object = (void *)0x80000001C37B0870;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t Participant.CopresenceInfo.init(uniqueIdentifier:appName:isActive:preferredBroadcastingAttributes:ongoingDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t Participant.AVInfo.isAVLess.getter(char a1)
{
  return a1 & 1;
}

uint64_t Participant.AVInfo.audioToken.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL Participant.AVInfo.init(for:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_audioVideoMode);
  id v3 = objc_msgSend(a1, sel_streamToken);
  if (!v2 && v3)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.fault.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C3769620;
    uint64_t v5 = String.init<A>(reflecting:)();
    uint64_t v7 = v6;
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }

  return v2 == 0;
}

unint64_t Participant.AVInfo.debugDescription.getter(char a1)
{
  OUTLINED_FUNCTION_113();
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  if (a1) {
    uint64_t v2 = 1702195828;
  }
  else {
    uint64_t v2 = 0x65736C6166;
  }
  if (a1) {
    unint64_t v3 = 0xE400000000000000;
  }
  else {
    unint64_t v3 = 0xE500000000000000;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x546F69647561202CLL;
  v5._object = (void *)0xEE00203A6E656B6FLL;
  String.append(_:)(v5);
  v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_270_0(v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_6();
  return 0xD000000000000011;
}

uint64_t static Participant.AVInfo.== infix(_:_:)(int a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return (a2 == a4) & ~(a1 ^ a3);
}

unint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.AVInfo()
{
  return Participant.AVInfo.debugDescription.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Participant.AVInfo(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static Participant.AVInfo.== infix(_:_:)(*a1, *((void *)a1 + 1), *a2, *((void *)a2 + 1));
}

uint64_t Participant.VideoInfo.providers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Participant.VideoInfo.providers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *Swift::String v1 = a1;
  return result;
}

uint64_t (*Participant.VideoInfo.providers.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

unint64_t Participant.VideoInfo.state.getter()
{
  if (v0[9]) {
    uint64_t v1 = 256;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x10000;
  if (!v0[10]) {
    uint64_t v2 = 0;
  }
  unint64_t v3 = v1 | v0[8] | v2 | ((unint64_t)v0[11] << 24);
  uint64_t v4 = 0x100000000;
  if (!v0[12]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x10000000000;
  if (!v0[13]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000000000;
  if (!v0[14]) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v4 | v5;
  uint64_t v8 = 0x100000000000000;
  if (!v0[15]) {
    uint64_t v8 = 0;
  }
  return v3 | v7 | v6 | v8;
}

void Participant.VideoInfo.state.setter(unint64_t a1)
{
  *(unsigned char *)(v1 + 8) = a1 & 1;
  *(unsigned char *)(v1 + 9) = BYTE1(a1) & 1;
  *(unsigned char *)(v1 + 10) = BYTE2(a1) & 1;
  *(unsigned char *)(v1 + 11) = BYTE3(a1);
  uint64x2_t v2 = (uint64x2_t)vdupq_n_s64(a1);
  *(_DWORD *)(v1 + 12) = OUTLINED_FUNCTION_191_2(v2, (int32x4_t)vshlq_u64(v2, (uint64x2_t)xmmword_1C376F230), (uint64x2_t)xmmword_1C376F240).u32[0];
  *(unsigned char *)(v1 + 16) = v3 & 1;
  *(unsigned char *)(v1 + 17) = v4 & 1;
}

uint64_t (*Participant.VideoInfo.state.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoInfo.orientation.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Participant.VideoInfo.orientation.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*Participant.VideoInfo.orientation.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoInfo.cameraPosition.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Participant.VideoInfo.cameraPosition.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*Participant.VideoInfo.cameraPosition.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.VideoInfo.aspectRatio.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_155_2(a1, *(__n128 *)(v1 + 40), *(__n128 *)(v1 + 56));
}

uint64_t Participant.VideoInfo.aspectRatio.setter(uint64_t a1)
{
  return outlined init with take of AspectRatio(a1, v1 + 40);
}

uint64_t (*Participant.VideoInfo.aspectRatio.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoInfo.isMixedWithScreen.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t Participant.VideoInfo.isMixedWithScreen.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 73) = result;
  return result;
}

uint64_t (*Participant.VideoInfo.isMixedWithScreen.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.VideoInfo.debugDescription.getter()
{
  uint64_t v1 = v0;
  *(void *)&v30[0] = 0;
  *((void *)&v30[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  v2._object = (void *)0x80000001C37B0900;
  String.append(_:)(v2);
  *(void *)&v29[0] = *(void *)(v0 + 8);
  WORD4(v29[0]) = *(_WORD *)(v0 + 16);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_135_2();
  v3._object = (void *)(v4 | 0xEE005B203A730000);
  String.append(_:)(v3);
  long long v25 = v30[0];
  uint64_t v5 = *(void *)v0;
  uint64_t v6 = *(void *)(*(void *)v0 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v24 = v0;
    outlined retain of [Participant](v0);
    uint64_t v31 = v7;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v8 = specialized Dictionary.Values.startIndex.getter(v5);
    if ((v8 & 0x8000000000000000) == 0)
    {
      unint64_t v10 = v8;
      if (v8 < 1 << *(unsigned char *)(v5 + 32))
      {
        uint64_t v11 = v5 + 64;
        while ((*(void *)(v11 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
        {
          if (v9 != *(_DWORD *)(v5 + 36)) {
            goto LABEL_27;
          }
          int v27 = v9;
          char v12 = *(unsigned char *)(*(void *)(v5 + 48) + v10);
          outlined init with copy of IDSLookupManager(*(void *)(v5 + 56) + 40 * v10, (uint64_t)v30 + 8);
          LOBYTE(v30[0]) = v12;
          LOBYTE(v29[0]) = v12;
          outlined init with copy of IDSLookupManager((uint64_t)v30 + 8, (uint64_t)v29 + 8);
          v28[0] = v29[0];
          v28[1] = v29[1];
          void v28[2] = v29[2];
          outlined destroy of SystemUpdateNotice?((uint64_t)v30, &demangling cache variable for type metadata for (key: Participant.VideoProviderType, value: ParticipantVideoProvider));
          _print_unlocked<A, B>(_:_:)();
          v13._uint64_t countAndFlagsBits = 8250;
          v13._object = (void *)0xE200000000000000;
          String.append(_:)(v13);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
          _print_unlocked<A, B>(_:_:)();
          outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for (key: Participant.VideoProviderType, value: ParticipantVideoProvider));
          uint64_t v7 = v31;
          uint64_t v26 = v6;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v7 = v31;
          }
          unint64_t v14 = *(void *)(v7 + 16);
          if (v14 >= *(void *)(v7 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v7 = v31;
          }
          *(void *)(v7 + 16) = v14 + 1;
          uint64_t v15 = v7 + 16 * v14;
          *(void *)(v15 + 32) = 0;
          *(void *)(v15 + 40) = 0xE000000000000000;
          if ((uint64_t)v10 >= -(-1 << *(unsigned char *)(v5 + 32))) {
            goto LABEL_28;
          }
          uint64_t v11 = v5 + 64;
          if ((*(void *)(v5 + 64 + 8 * (v10 >> 6)) & (1 << v10)) == 0) {
            goto LABEL_29;
          }
          if (v27 != *(_DWORD *)(v5 + 36)) {
            goto LABEL_30;
          }
          uint64_t v16 = _HashTable.occupiedBucket(after:)();
          uint64_t v6 = v26 - 1;
          if (v26 == 1)
          {
            uint64_t v1 = v24;
            outlined release of LinearGradient(v24);
            goto LABEL_19;
          }
          unint64_t v10 = v16;
          if ((v16 & 0x8000000000000000) == 0)
          {
            int v9 = *(_DWORD *)(v5 + 36);
            if (v16 < 1 << *(unsigned char *)(v5 + 32)) {
              continue;
            }
          }
          goto LABEL_31;
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
      }
    }
LABEL_31:
    __break(1u);
  }
  else
  {
LABEL_19:
    *(void *)&v30[0] = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    v30[0] = v25;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_198_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v17 = v30[0];
    *(void *)&v30[0] = 0;
    *((void *)&v30[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v28[0] = v30[0];
    v18._object = (void *)0x80000001C37B0920;
    v18._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v18);
    *(void *)&v30[0] = *(void *)(v1 + 24);
    v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_10();
    outlined init with take of AspectRatio(v1 + 40, (uint64_t)v30);
    outlined init with take of AspectRatio((uint64_t)v30, (uint64_t)v29);
    _print_unlocked<A, B>(_:_:)();
    v20._uint64_t countAndFlagsBits = 0xD000000000000015;
    v20._object = (void *)0x80000001C37B0940;
    String.append(_:)(v20);
    if (*(unsigned char *)(v1 + 73)) {
      uint64_t v21 = 1702195828;
    }
    else {
      uint64_t v21 = 0x65736C6166;
    }
    if (*(unsigned char *)(v1 + 73)) {
      unint64_t v22 = 0xE400000000000000;
    }
    else {
      unint64_t v22 = 0xE500000000000000;
    }
    unint64_t v23 = v22;
    String.append(_:)(*(Swift::String *)&v21);
    swift_bridgeObjectRelease();
    v29[0] = v17;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_198_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.VideoInfo()
{
  memcpy(v1, v0, sizeof(v1));
  Participant.VideoInfo.debugDescription.getter();
}

double Participant.ScreenShareAttributes.displayScale.getter()
{
  return *(double *)v0;
}

void Participant.ScreenShareAttributes.displayScale.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*Participant.ScreenShareAttributes.displayScale.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Participant.ScreenShareAttributes.displayCornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

__n128 Participant.ScreenShareAttributes.systemRootLayerTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Participant.ScreenShareAttributes.systemRootLayerTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 56) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.systemRootLayerTransform.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenShareAttributes.deviceFamily.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t Participant.ScreenShareAttributes.deviceFamily.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.deviceFamily.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenShareAttributes.deviceHomeButtonType.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t Participant.ScreenShareAttributes.deviceHomeButtonType.setter(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.deviceHomeButtonType.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenShareAttributes.style.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t Participant.ScreenShareAttributes.style.setter(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.style.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *Participant.ScreenShareAttributes.init(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  swift_getObjectType();
  specialized Participant.ScreenShareAttributes.init(_:)(a1, (uint64_t)v5);
  return memcpy(a2, v5, 0x60uLL);
}

uint64_t Participant.ScreenShareAttributes.init(displayScale:displayCornerRadius:deviceFamily:deviceHomeButtonType:style:systemRootLayerTransform:)@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12)
{
  outlined init with take of ConversationControlsRecipe?(a12, (uint64_t)v38, &demangling cache variable for type metadata for CGAffineTransform?);
  double v18 = *(double *)v38;
  double v19 = *(double *)&v38[1];
  double v20 = *(double *)&v38[2];
  double v21 = *(double *)&v38[3];
  double v22 = *(double *)&v38[4];
  double v23 = *(double *)&v38[5];
  uint64_t result = outlined init with take of ConversationControlsRecipe?(a12, (uint64_t)v39, &demangling cache variable for type metadata for CGAffineTransform?);
  double v25 = 1.0;
  double v26 = 0.0;
  if (v40) {
    double v27 = 0.0;
  }
  else {
    double v27 = v23;
  }
  if (v40) {
    double v28 = 0.0;
  }
  else {
    double v28 = v22;
  }
  if (v40) {
    double v29 = 1.0;
  }
  else {
    double v29 = v21;
  }
  if (v40) {
    double v30 = 0.0;
  }
  else {
    double v30 = v20;
  }
  if (v40)
  {
    double v31 = 1.0;
  }
  else
  {
    double v26 = v19;
    double v31 = v18;
  }
  if (a11) {
    a10 = 0;
  }
  if (a8) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = a7;
  }
  if (a6) {
    uint64_t v34 = 0;
  }
  else {
    uint64_t v34 = a5;
  }
  if ((a2 & 1) == 0) {
    double v25 = a1;
  }
  *(double *)a9 = v25;
  *(void *)(a9 + 8) = a3;
  *(unsigned char *)(a9 + 16) = a4 & 1;
  *(double *)(a9 + 24) = v31;
  *(double *)(a9 + 32) = v26;
  *(double *)(a9 + 40) = v30;
  *(double *)(a9 + 48) = v29;
  *(double *)(a9 + 56) = v28;
  *(double *)(a9 + 64) = v27;
  *(void *)(a9 + 72) = v34;
  *(void *)(a9 + 80) = v33;
  *(void *)(a9 + 88) = a10;
  return result;
}

uint64_t Participant.ScreenShareAttributes.debugDescription.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    uint64_t v1 = 0;
    long long v2 = (void *)0xE000000000000000;
  }
  else
  {
    OUTLINED_FUNCTION_173_2();
    _StringGuts.grow(_:)(25);
    v3._uint64_t countAndFlagsBits = 0xD000000000000016;
    v3._object = (void *)0x80000001C37B09D0;
    String.append(_:)(v3);
    Double.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 44;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    long long v2 = v10;
    uint64_t v1 = v9;
  }
  OUTLINED_FUNCTION_173_2();
  _StringGuts.grow(_:)(99);
  OUTLINED_FUNCTION_30_29(0xD000000000000024, (uint64_t)"ScreenShareAttributes(displayScale: ");
  v5._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 44;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = v1;
  v7._object = v2;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_29(0xD00000000000001ALL, (uint64_t)" systemRootLayerTransform:");
  type metadata accessor for CGAffineTransform(0);
  OUTLINED_FUNCTION_70_7();
  OUTLINED_FUNCTION_60_10((uint64_t)", deviceFamily: ");
  type metadata accessor for TUScreenShareDeviceFamily(0);
  OUTLINED_FUNCTION_70_7();
  OUTLINED_FUNCTION_86_8();
  type metadata accessor for TUScreenShareStyle(0);
  OUTLINED_FUNCTION_70_7();
  OUTLINED_FUNCTION_77_6();
  return v9;
}

BOOL Participant.ScreenShareAttributes.shouldUpdate(with:)(void *a1)
{
  return (static CGAffineTransform.== infix(_:_:)() & 1) == 0 || v1[9] != a1[9] || v1[10] != a1[10] || v1[11] != a1[11];
}

uint64_t Participant.ScreenInfo.provider.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Participant?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

uint64_t Participant.ScreenInfo.provider.setter(uint64_t a1)
{
  return _s15ConversationKit11ParticipantVSgWOdTm_0(a1, v1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

uint64_t (*Participant.ScreenInfo.provider.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.screenState.getter()
{
  if (v0[43]) {
    int v1 = 0x1000000;
  }
  else {
    int v1 = 0;
  }
  if (v0[42]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (v0[41]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return v3 | v0[40] | v2 | v1;
}

uint64_t Participant.ScreenInfo.screenState.setter(uint64_t result)
{
  v1[40] = result & 1;
  v1[41] = BYTE1(result) & 1;
  v1[42] = BYTE2(result) & 1;
  v1[43] = BYTE3(result) & 1;
  return result;
}

uint64_t (*Participant.ScreenInfo.screenState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.orientation.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Participant.ScreenInfo.orientation.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*Participant.ScreenInfo.orientation.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.videoRotation.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t Participant.ScreenInfo.videoRotation.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*Participant.ScreenInfo.videoRotation.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.ScreenInfo.aspectRatio.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_155_2(a1, v1[4], v1[5]);
}

uint64_t Participant.ScreenInfo.aspectRatio.setter(uint64_t a1)
{
  return outlined init with take of AspectRatio(a1, v1 + 64);
}

uint64_t (*Participant.ScreenInfo.aspectRatio.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Participant.ScreenInfo.scaleFactor.getter()
{
  return *(double *)(v0 + 104);
}

void Participant.ScreenInfo.scaleFactor.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*Participant.ScreenInfo.scaleFactor.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.init(provider:screenState:remoteAttributes:orientation:videoRotation:aspectRatio:scaleFactor:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  *(void *)(a7 + 32) = 0;
  *(_OWORD *)a7 = 0u;
  *(_OWORD *)(a7 + 16) = 0u;
  *(_OWORD *)(a7 + 128) = 0u;
  *(_OWORD *)(a7 + 144) = 0u;
  *(_OWORD *)(a7 + 160) = 0u;
  *(_OWORD *)(a7 + 176) = 0u;
  *(_OWORD *)(a7 + 192) = 0u;
  *(_OWORD *)(a7 + 112) = 0u;
  uint64_t v15 = a7 + 112;
  *(unsigned char *)(a7 + 208) = 1;
  _s15ConversationKit11ParticipantVSgWOdTm_0(a1, a7, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  *(unsigned char *)(a7 + 40) = a2 & 1;
  *(unsigned char *)(a7 + 41) = BYTE1(a2) & 1;
  *(unsigned char *)(a7 + 42) = BYTE2(a2) & 1;
  *(unsigned char *)(a7 + 43) = HIBYTE(a2) & 1;
  outlined init with take of ConversationControlsRecipe?(a3, v15, &demangling cache variable for type metadata for Participant.ScreenShareAttributes?);
  *(void *)(a7 + 48) = a4;
  *(void *)(a7 + 56) = a5;
  uint64_t result = outlined init with take of AspectRatio(a6, a7 + 64);
  *(double *)(a7 + 104) = a8;
  return result;
}

void Participant.ScreenInfo.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, char a11, uint64_t a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  OUTLINED_FUNCTION_67_9();
  a24 = v26;
  a25 = v27;
  *(void *)&a9 = 0;
  *((void *)&a9 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(209);
  a13 = a9;
  OUTLINED_FUNCTION_30_29(0xD000000000000018, (uint64_t)"ScreenInfo(screenState: ");
  char v28 = *(unsigned char *)(v25 + 41);
  char v29 = *(unsigned char *)(v25 + 42);
  char v30 = *(unsigned char *)(v25 + 43);
  LOBYTE(a9) = *(unsigned char *)(v25 + 40);
  BYTE1(a9) = v28;
  BYTE2(a9) = v29;
  BYTE3(a9) = v30;
  OUTLINED_FUNCTION_152_1();
  v31._uint64_t countAndFlagsBits = 0x746E6569726F202CLL;
  v31._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v31);
  *(void *)&a9 = *(void *)(v25 + 48);
  type metadata accessor for CNKDeviceOrientation(0);
  OUTLINED_FUNCTION_116_3();
  v32._uint64_t countAndFlagsBits = 0x46656C616373202CLL;
  v32._object = (void *)0xEF203A726F746361;
  String.append(_:)(v32);
  v45._uint64_t countAndFlagsBits = Double.description.getter();
  OUTLINED_FUNCTION_172_3(v45);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_10((uint64_t)", displayScale: ");
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  char v37 = *(unsigned char *)(v25 + 208);
  if ((v37 & 1) == 0)
  {
    uint64_t v34 = *(void *)(v25 + 192);
    uint64_t v33 = *(void *)(v25 + 200);
    uint64_t v35 = *(void *)(v25 + 184);
    uint64_t v36 = *(void *)(v25 + 112);
  }
  *(void *)&a9 = v36;
  BYTE8(a9) = v37;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGFloat?);
  v46._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_172_3(v46);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_29(0xD000000000000017, (uint64_t)", displayCornerRadius: ");
  *(void *)&a9 = Participant.ScreenInfo.displayCornerRadius.getter();
  BYTE8(a9) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  v47._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_172_3(v47);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_10((uint64_t)", deviceFamily: ");
  *(void *)&a9 = v35;
  BYTE8(a9) = v37;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int?);
  v38._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_29(0xD000000000000018, (uint64_t)", deviceHomeButtonType: ");
  *(void *)&a9 = v34;
  BYTE8(a9) = v37;
  v39._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_86_8();
  *(void *)&a9 = v33;
  BYTE8(a9) = v37;
  v48._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_172_3(v48);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_29(0xD000000000000011, (uint64_t)", videoRotation: ");
  *(void *)&a9 = *(void *)(v25 + 56);
  OUTLINED_FUNCTION_116_3();
  OUTLINED_FUNCTION_65_10();
  char v40 = *(unsigned char *)(v25 + 96);
  long long v41 = *(_OWORD *)(v25 + 80);
  a9 = *(_OWORD *)(v25 + 64);
  a10 = v41;
  a11 = v40;
  OUTLINED_FUNCTION_152_1();
  v42._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_135_2();
  v42._object = (void *)(v43 & 0xFFFF0000FFFFLL | 0xEC000000203A0000);
  String.append(_:)(v42);
  outlined init with copy of Participant?(v25, (uint64_t)&a9, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v44._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_78_1();
}

uint64_t Participant.ScreenInfo.deviceHomeButtonType.getter()
{
  if (*(unsigned char *)(v0 + 208)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 192);
  }
}

uint64_t Participant.ScreenInfo.style.getter()
{
  if (*(unsigned char *)(v0 + 208)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 200);
  }
}

Swift::Bool __swiftcall Participant.ScreenInfo.isMaybeTouchIDDevice()()
{
  if (*(unsigned char *)(v0 + 208))
  {
    id v2 = objc_msgSend(self, sel_defaultDisplayScale);
    objc_msgSend(v2, sel_doubleValue);
  }
  double v3 = OUTLINED_FUNCTION_113_3();
  if ((v4 & 1) == 0) {
    double v3 = *(double *)(v0 + 72);
  }
  double v5 = OUTLINED_FUNCTION_202_0(v3);
  double v7 = v5 * v6;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  double v8 = static UIView.screenScale.getter();
  double v9 = round(v1 * v8) / v8;
  double v10 = static UIView.screenScale.getter();
  return fabs(v9 / (round(v7 * v10) / v10)) < 0.01;
}

uint64_t Participant.ScreenInfo.apply(remoteAttributes:)(uint64_t a1)
{
  return outlined init with take of ConversationControlsRecipe?(a1, v1 + 112, &demangling cache variable for type metadata for Participant.ScreenShareAttributes?);
}

uint64_t Participant.CountdownInfo.requestedApprovalDate.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Participant?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t Participant.CountdownInfo.requestedApprovalDate.setter(uint64_t a1)
{
  return _s15ConversationKit11ParticipantVSgWOdTm_0(a1, v1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t (*Participant.CountdownInfo.requestedApprovalDate.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CountdownInfo.receivedApprovalDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Participant.CountdownInfo(0);
  return outlined init with copy of Participant?(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t Participant.CountdownInfo.receivedApprovalDate.setter(uint64_t a1)
{
  type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_64_1();
  return _s15ConversationKit11ParticipantVSgWOdTm_0(a1, v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

double (*Participant.CountdownInfo.receivedApprovalDate.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CountdownInfo.hasCanceledJoinCountdown.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 24));
}

uint64_t Participant.CountdownInfo.hasCanceledJoinCountdown.setter(char a1)
{
  uint64_t result = type metadata accessor for Participant.CountdownInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

double (*Participant.CountdownInfo.hasCanceledJoinCountdown.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.CountdownInfo.init(requestedApprovalDate:receivedApprovalDate:hasCanceledJoinCountdown:)()
{
  OUTLINED_FUNCTION_14();
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  uint64_t v7 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v8 = v5 + *(int *)(v7 + 20);
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v6);
  OUTLINED_FUNCTION_144_4();
  _s15ConversationKit11ParticipantVSgWOdTm_0(v9, v10, v11);
  _s15ConversationKit11ParticipantVSgWOdTm_0(v3, v8, (uint64_t *)&demangling cache variable for type metadata for Date?);
  *(unsigned char *)(v5 + *(int *)(v7 + 24)) = v1;
  OUTLINED_FUNCTION_15_0();
}

uint64_t Participant.CountdownInfo.debugDescription.getter()
{
  OUTLINED_FUNCTION_113();
  _StringGuts.grow(_:)(96);
  OUTLINED_FUNCTION_181_2();
  OUTLINED_FUNCTION_0_43(0xD000000000000025, (uint64_t)"CountdownInfo(requestedApprovalDate: ");
  v1._uint64_t countAndFlagsBits = specialized >> prefix<A>(_:)(v0);
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x80000001C37B0AC0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v2);
  uint64_t v3 = type metadata accessor for Participant.CountdownInfo(0);
  v6._uint64_t countAndFlagsBits = specialized >> prefix<A>(_:)(v0 + *(int *)(v3 + 20));
  OUTLINED_FUNCTION_94_3(v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_43(0xD00000000000001CLL, (uint64_t)", hasCanceledJoinCountdown: ");
  v7._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_270_0(v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_6();
  return v5;
}

void Participant.CountdownInfo.shouldShowJoinCountdown.getter()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  outlined init with copy of Participant?(v3, (uint64_t)&v24 - v14, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_33_0((uint64_t)&v24 - v14, 1, v4);
  if (v20)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v24 - v14, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_163();
    uint64_t v25 = v16;
    uint64_t v17 = ((uint64_t (*)(uint64_t))v16)(v15);
    uint64_t v27 = &v24;
    MEMORY[0x1F4188790](v17);
    uint64_t v24 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v18 = *(int *)(v24 + 20);
    uint64_t v26 = v3;
    uint64_t v19 = MEMORY[0x1F4188790](v3 + v18);
    outlined init with copy of Participant?(v19, (uint64_t)&v24 - v14, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_33_0((uint64_t)&v24 - v14, 1, v4);
    if (v20)
    {
      OUTLINED_FUNCTION_57_9();
      v21();
      outlined destroy of SystemUpdateNotice?((uint64_t)&v24 - v14, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    else
    {
      v25((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v24 - v14, v4);
      Date.timeIntervalSince(_:)();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v22 + 1040))();
      double v23 = *(void (**)(void))(v6 + 8);
      OUTLINED_FUNCTION_57_9();
      v23();
      OUTLINED_FUNCTION_57_9();
      v23();
    }
  }
  OUTLINED_FUNCTION_33_2();
}

uint64_t static Participant.CaptionInfo.maxCaptions.getter()
{
  return 50;
}

uint64_t Participant.CaptionInfo.provider.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t Participant.CaptionInfo.provider.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_unknownObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Participant.CaptionInfo.provider.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CaptionInfo.captions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Participant.CaptionInfo.captions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Participant.CaptionInfo.captions.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CaptionInfo.debugDescription.getter()
{
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_113();
  v0._uint64_t countAndFlagsBits = 0x496E6F6974706143;
  v0._object = (void *)0xEB000000006F666ELL;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = 0x656469766F727028;
  v1._object = (void *)0xEB00000000203A72;
  String.append(_:)(v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
  _print_unlocked<A, B>(_:_:)();
  return v3;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.CaptionInfo()
{
  return Participant.CaptionInfo.debugDescription.getter();
}

uint64_t Participant.Caption.utteranceNumber.getter()
{
  return *(void *)v0;
}

uint64_t Participant.Caption.utteranceNumber.setter(uint64_t result)
{
  *Swift::String v1 = result;
  return result;
}

uint64_t (*Participant.Caption.utteranceNumber.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.dateCreated.getter()
{
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t Participant.Caption.dateCreated.setter()
{
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return v1(v0);
}

double (*Participant.Caption.dateCreated.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.dateUpdated.getter()
{
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t Participant.Caption.dateUpdated.setter()
{
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return v1(v0);
}

double (*Participant.Caption.dateUpdated.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.text.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Participant.Caption.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Participant.Caption(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Participant.Caption.text.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.utteranceComplete.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant.Caption(0) + 32));
}

uint64_t Participant.Caption.utteranceComplete.setter(char a1)
{
  uint64_t result = type metadata accessor for Participant.Caption(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

double (*Participant.Caption.utteranceComplete.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.lowConfidenceRanges.getter()
{
  type metadata accessor for Participant.Caption(0);
  return swift_bridgeObjectRetain();
}

uint64_t Participant.Caption.lowConfidenceRanges.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_201_1() + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

double (*Participant.Caption.lowConfidenceRanges.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.Caption.hash(into:)(uint64_t a1)
{
  Hasher._combine(_:)(*v1);
  uint64_t v3 = type metadata accessor for Participant.Caption(0);
  type metadata accessor for Date();
  _s10Foundation4UUIDVACSQAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Date and conformance Date);
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_35();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*((unsigned char *)v1 + *(int *)(v3 + 32)));
  uint64_t v4 = *(Swift::UInt *)((char *)v1 + *(int *)(v3 + 36));
  specialized Array<A>.hash(into:)(a1, v4);
}

int32x2_t static Participant.Caption.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2)
  {
    uint64_t v4 = OUTLINED_FUNCTION_9_21();
    uint64_t v5 = (int *)type metadata accessor for Participant.Caption(v4);
    if (static Date.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
    {
      uint64_t v7 = v5[7];
      uint64_t v8 = *(void *)(v3 + v7);
      uint64_t v9 = *(void *)(v3 + v7 + 8);
      uint64_t v10 = (void *)(v2 + v7);
      BOOL v11 = v8 == *v10 && v9 == v10[1];
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && *(unsigned __int8 *)(v3 + v5[8]) == *(unsigned __int8 *)(v2 + v5[8]))
      {
        uint64_t v12 = v5[9];
        uint64_t v13 = *(int64x2_t **)(v3 + v12);
        unint64_t v14 = *(int64x2_t **)(v2 + v12);
        return specialized static Array<A>.== infix(_:_:)(v13, v14);
      }
    }
  }
  return result;
}

Swift::Int Participant.Caption.hashValue.getter()
{
  OUTLINED_FUNCTION_7_1();
  Participant.Caption.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t Participant.Caption.init(utteranceNumber:dateCreated:dateUpdated:text:utteranceComplete:lowConfidenceRanges:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v16 = v3;
  char v15 = v4;
  OUTLINED_FUNCTION_150_4();
  uint64_t v6 = v5;
  *uint64_t v5 = v7;
  uint64_t v8 = (int *)type metadata accessor for Participant.Caption(0);
  uint64_t v9 = type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  BOOL v11 = *(void (**)(uint64_t))(v10 + 32);
  uint64_t v12 = OUTLINED_FUNCTION_99_2();
  v11(v12);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)((char *)v6 + v8[6], v2, v9);
  unint64_t v14 = (void *)((char *)v6 + v8[7]);
  *unint64_t v14 = v1;
  v14[1] = v0;
  *((unsigned char *)v6 + v8[8]) = v15;
  *(void *)((char *)v6 + v8[9]) = v16;
  return result;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant.Caption()
{
  Hasher.init(_seed:)();
  Participant.Caption.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t Participant.state.getter()
{
  return outlined init with copy of Participant.State();
}

uint64_t Participant.state.setter()
{
  return outlined assign with take of Participant.Caption();
}

uint64_t (*Participant.state.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.identifier.getter()
{
  OUTLINED_FUNCTION_50_16();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t Participant.identifier.setter()
{
  OUTLINED_FUNCTION_50_16();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return v1(v0);
}

double (*Participant.identifier.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.capabilities.getter()
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_127_5();
  int v4 = *(unsigned __int8 *)(v3 + 3);
  BOOL v5 = *(unsigned char *)(v3 + 4) == 0;
  uint64_t v6 = 0x100000000;
  if (v5) {
    uint64_t v6 = 0;
  }
  BOOL v5 = v4 == 0;
  uint64_t v7 = 0x1000000;
  if (v5) {
    uint64_t v7 = 0;
  }
  BOOL v5 = v2 == 0;
  uint64_t v8 = 0x10000;
  if (v5) {
    uint64_t v8 = 0;
  }
  BOOL v5 = v1 == 0;
  uint64_t v9 = 256;
  if (v5) {
    uint64_t v9 = 0;
  }
  return v9 | v0 | v8 | v7 | v6;
}

int8x8_t Participant.capabilities.setter(unint64_t a1)
{
  OUTLINED_FUNCTION_189_1();
  *int v2 = a1 & 1;
  uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a1);
  return OUTLINED_FUNCTION_87_6((uint64_t)v2, v3, (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1C3782D40), (uint64x2_t)xmmword_1C3782D50);
}

double (*Participant.capabilities.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id Participant.remoteIdentifiers.getter@<X0>(void *a1@<X8>)
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_187_2();
  uint64x2_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  *a1 = *(void *)v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return outlined copy of Participant.RemoteIdentifiers?(v3);
}

__n128 Participant.remoteIdentifiers.setter(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  OUTLINED_FUNCTION_188_2();
  uint64_t v4 = v1 + v3;
  outlined consume of Participant.RemoteIdentifiers?(*(void **)v4);
  __n128 result = v6;
  *(_OWORD *)uint64_t v4 = v7;
  *(__n128 *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = v2;
  return result;
}

double (*Participant.remoteIdentifiers.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.gradient.getter()
{
  type metadata accessor for Participant(0);
  return swift_bridgeObjectRetain();
}

uint64_t Participant.gradient.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_55_14() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

double (*Participant.gradient.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.nickname.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Participant.nickname.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Participant(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Participant.nickname.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.effectsEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 40));
}

uint64_t Participant.effectsEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for Participant(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*Participant.effectsEnabled.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.hasReducedQualityVideo.getter()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_196();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  __n128 v6 = (char *)&v14 - v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  char v9 = Participant.isVideoSuspended.getter();
  OUTLINED_FUNCTION_199_0();
  if (v9)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of Participant.State();
LABEL_4:
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_51_15();
    goto LABEL_5;
  }
  char v10 = Participant.isVideoPaused.getter();
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of Participant.State();
  if (v10) {
    goto LABEL_4;
  }
  char v13 = Participant.isVideoDegradedUI.getter();
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_51_15();
  if ((v13 & 1) == 0)
  {
    char v11 = Participant.isVideoReconnecting.getter();
    goto LABEL_6;
  }
LABEL_5:
  char v11 = 1;
LABEL_6:
  _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  return v11 & 1;
}

uint64_t Participant.isVideoDegradedUI.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_91_4();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0)
    {
      swift_bridgeObjectRelease();
      return HIDWORD(v0) & 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

uint64_t Participant.isVideoReconnecting.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_91_4();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0)
    {
      swift_bridgeObjectRelease();
      return HIWORD(v0) & 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

uint64_t Participant.isGondolaCallingAvailable.getter()
{
  OUTLINED_FUNCTION_189_1();
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t Participant.associatedParticipants.getter()
{
  type metadata accessor for Participant(0);
  return swift_bridgeObjectRetain();
}

uint64_t Participant.associatedParticipants.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_55_14() + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

double (*Participant.associatedParticipants.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *Participant.unverifiedAssociatedHandle.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Participant(0) + 48));
  id v2 = v1;
  return v1;
}

void Participant.unverifiedAssociatedHandle.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_55_14() + 48);

  *(void *)(v1 + v2) = v0;
}

double (*Participant.unverifiedAssociatedHandle.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.shouldHideInactiveTile.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 52));
}

uint64_t Participant.shouldHideInactiveTile.setter(char a1)
{
  uint64_t result = type metadata accessor for Participant(0);
  *(unsigned char *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

double (*Participant.shouldHideInactiveTile.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.avInfo.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    uint64_t v4 = v6[0];
    outlined destroy of Participant.MediaInfo((uint64_t)v6);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    return 2;
  }
  return v4;
}

uint64_t outlined init with copy of Participant.State()
{
  uint64_t v1 = OUTLINED_FUNCTION_9_21();
  v2(v1);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_89_0();
  v4(v3);
  return v0;
}

void Participant.debugDescription.getter()
{
  OUTLINED_FUNCTION_67_9();
  _StringGuts.grow(_:)(71);
  v1._object = (void *)0x80000001C37B0B00;
  v1._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  type metadata accessor for Participant.State(0);
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t countAndFlagsBits = 0x61636F4C7369202CLL;
  v2._object = (void *)0xEA00000000003D6CLL;
  String.append(_:)(v2);
  uint64_t v3 = (void **)(v0 + *(int *)(type metadata accessor for Participant(0) + 28));
  uint64_t v4 = *v3;
  if (*v3) {
    uint64_t v5 = 0x65736C6166;
  }
  else {
    uint64_t v5 = 1702195828;
  }
  if (*v3) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_29(0xD000000000000014, (uint64_t)", remoteIdentifiers=");
  if (v4)
  {
    swift_bridgeObjectRetain();
    id v8 = v4;
    uint64_t v9 = String.init<A>(reflecting:)();
    unint64_t v11 = v10;
  }
  else
  {
    unint64_t v11 = 0xE300000000000000;
    uint64_t v9 = 7104878;
  }
  unint64_t v12 = v11;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x746E656469202C29;
  v13._object = (void *)0xEE003D7265696669;
  String.append(_:)(v13);
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSQAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_78_1();
}

id Participant.isDestinationPseudonym.getter()
{
  return Participant.isDestinationTemporary.getter((SEL *)&selRef_destinationIdIsPseudonym);
}

id Participant.isDestinationTemporary.getter(SEL *a1)
{
  OUTLINED_FUNCTION_188_2();
  uint64_t v4 = *(void **)(v1 + v3);
  if (!v4) {
    return 0;
  }
  id v5 = objc_msgSend(v4, sel_value);
  if (!v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = (id)MEMORY[0x1C87730B0](v6);
    swift_bridgeObjectRelease();
  }
  id v7 = [v5 *a1];

  return v7;
}

uint64_t Participant.isActiveWithVideo.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    uint64_t v4 = v6[2];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v6);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 0;
}

uint64_t Participant.audioToken.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  outlined init with copy of Participant.State();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v3 + 64)));
    OUTLINED_FUNCTION_129_3();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v4();
    uint64_t v2 = v6[1];
    outlined destroy of Participant.MediaInfo((uint64_t)v6);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    return 0;
  }
  return v2;
}

uint64_t Participant.videoState.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    uint64_t v4 = v7[2];
    uint64_t v5 = v7[3];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v7);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return v5 & 0x1010101FF010101;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  return 2;
}

uint64_t Participant.screenState.getter()
{
  uint64_t v1 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() != 4)
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_42_22();
    goto LABEL_14;
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_3_118(v3);
  OUTLINED_FUNCTION_147_3();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v4();
  outlined init with copy of Participant?(v1 + 96, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined destroy of Participant.MediaInfo((uint64_t)v14);
  if (v15[3] == 1)
  {
LABEL_14:
    outlined destroy of SystemUpdateNotice?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    return 2;
  }
  memcpy(v14, v15, 0xD1uLL);
  int v5 = v14[40];
  int v6 = v14[41];
  int v7 = v14[42];
  int v8 = v14[43];
  outlined destroy of Participant.ScreenInfo((uint64_t)v14);
  if (v6) {
    int v9 = 256;
  }
  else {
    int v9 = 0;
  }
  int v10 = v9 | v5;
  if (v7) {
    int v11 = 0x10000;
  }
  else {
    int v11 = 0;
  }
  if (v8) {
    int v12 = 0x1000000;
  }
  else {
    int v12 = 0;
  }
  return v10 | v11 | v12;
}

uint64_t Participant.captionsProvider.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v2);
    OUTLINED_FUNCTION_15_65();
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v3();
    OUTLINED_FUNCTION_128_3();
    outlined destroy of Participant.MediaInfo((uint64_t)&v5);
    if (v0) {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    return 0;
  }
  return v0;
}

uint64_t Participant.isReceivingScreenFrames.getter()
{
  uint64_t v1 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() != 4)
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_42_22();
    goto LABEL_5;
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_3_118(v3);
  OUTLINED_FUNCTION_147_3();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v4();
  outlined init with copy of Participant?(v1 + 96, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined destroy of Participant.MediaInfo((uint64_t)v7);
  if (v8[3] == 1)
  {
LABEL_5:
    outlined destroy of SystemUpdateNotice?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    return 0;
  }
  memcpy(v7, v8, 0xD1uLL);
  uint64_t v5 = v7[40];
  outlined destroy of Participant.ScreenInfo((uint64_t)v7);
  return v5;
}

uint64_t Participant.isNotActiveAndNotLocal.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = OUTLINED_FUNCTION_46_15();
  uint64_t v4 = type metadata accessor for Participant(v3);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_60();
  uint64_t v7 = *(void *)(v1 + *(int *)(v6 + 36));
  OUTLINED_FUNCTION_169_2();
  if (v7)
  {
    OUTLINED_FUNCTION_63_6();
    uint64_t v8 = 1;
    switch(OUTLINED_FUNCTION_19_9())
    {
      case 4u:
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v12 = v0 + *(int *)(v11 + 48);
        OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v11 + 64)));
        outlined destroy of Participant.MediaInfo(v12);
        uint64_t v8 = 0;
        goto LABEL_3;
      case 6u:
        break;
      default:
LABEL_3:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v9();
        break;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant);
  return v8;
}

void Participant.isBuzzable.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_36();
  uint64_t v6 = v4 - v5;
  MEMORY[0x1F4188790](v7);
  int v9 = &v22[-v8];
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_131_3();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_168_3();
  outlined init with copy of Participant.State();
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v12();
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant.State);
    if (*(void *)(v0 + *(int *)(v2 + 28)))
    {
      OUTLINED_FUNCTION_169_2();
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        Swift::String v14 = (const void *)(v0 + *(int *)(v13 + 48));
        OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v13 + 64)));
        memcpy(v22, v14, sizeof(v22));
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v15();
        char v16 = v22[0];
        outlined destroy of Participant.MediaInfo((uint64_t)v22);
        if (v16) {
          goto LABEL_16;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
      }
    }
    char v17 = Participant.isNotActiveAndNotLocal.getter();
    outlined init with copy of Participant.State();
    if (v17)
    {
      char v18 = Participant.isOtherInvitedParticipant.getter();
      _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_75_7();
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = *(void **)(v6 + *(int *)(v2 + 28));
        if (v19)
        {
          id v20 = objc_msgSend(v19, sel_value);
          if (!v20)
          {
            uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v20 = (id)MEMORY[0x1C87730B0](v21);
            swift_bridgeObjectRelease();
          }
          objc_msgSend(v20, sel_destinationIdIsTemporary);
        }
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_75_7();
    }
    _s15ConversationKit11ParticipantVWOhTm_7(v6, (void (*)(void))type metadata accessor for Participant);
  }
LABEL_16:
  OUTLINED_FUNCTION_28();
}

uint64_t Participant.broadcastStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_18_51();
  if (OUTLINED_FUNCTION_26_39() == 4)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_3_118(v4);
    uint64_t v5 = type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    uint64_t v6 = OUTLINED_FUNCTION_35();
    v7(v6);
    outlined destroy of Participant.MediaInfo(v1);
    OUTLINED_FUNCTION_31_13();
    uint64_t v11 = v5;
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant.State);
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v8 = a1;
    uint64_t v9 = 1;
    uint64_t v10 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
}

uint64_t Participant.countdownInfo.getter()
{
  return outlined init with copy of Participant.State();
}

uint64_t Participant.countdownInfo.setter()
{
  return outlined assign with take of Participant.Caption();
}

double (*Participant.countdownInfo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.isAuthorizedToChangeGroupMembership.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 60));
}

uint64_t Participant.isAuthorizedToChangeGroupMembership.setter(char a1)
{
  uint64_t result = type metadata accessor for Participant(0);
  *(unsigned char *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

double (*Participant.isAuthorizedToChangeGroupMembership.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.shouldShowJoinCountdown.getter()
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_84_7();
  OUTLINED_FUNCTION_51_15();
  if (v1)
  {
    char v3 = 0;
  }
  else
  {
    Participant.CountdownInfo.shouldShowJoinCountdown.getter();
    char v3 = v4;
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant);
  return v3 & 1;
}

void Participant.isKickingAvailableWithLeeway.getter()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_98_6();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_133_3();
  OUTLINED_FUNCTION_169_2();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v11 = v0 + *(int *)(v10 + 48);
    OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v10 + 64)));
    uint64_t v12 = OUTLINED_FUNCTION_72_7();
    v13(v12);
    outlined destroy of Participant.MediaInfo(v11);
    uint64_t v14 = Date.timeIntervalSinceNow.getter();
    double v16 = v15;
    uint64_t v17 = MEMORY[0x1F4188790](v14);
    uint64_t v25 = OUTLINED_FUNCTION_54_13(v17, v18, v19, v20, v21, v22, v23, v24, v30);
    v26(v25);
    if (v16 <= 0.0)
    {
      Date.timeIntervalSinceNow.getter();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v28 + 696))();
      uint64_t v29 = *(void (**)(void))(v8 + 8);
      OUTLINED_FUNCTION_43_19();
      v29();
      OUTLINED_FUNCTION_43_19();
      v29();
    }
    else
    {
      uint64_t v27 = *(void (**)(void))(v8 + 8);
      OUTLINED_FUNCTION_43_19();
      v27();
      OUTLINED_FUNCTION_43_19();
      v27();
    }
    OUTLINED_FUNCTION_75_7();
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v0, (void (*)(void))type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_33_2();
}

void Participant.isMessageCapable.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14();
  a17 = v20;
  a18 = v21;
  uint64_t v22 = v19;
  uint64_t v23 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_196();
  *(void *)&double v26 = MEMORY[0x1F4188790](v25).n128_u64[0];
  uint64_t v28 = (char *)&a9 - v27;
  uint64_t v30 = *(void **)(v22 + *(int *)(v29 + 28));
  if (v30)
  {
    id v31 = objc_msgSend(v30, sel_value, v26);
    if (!v31)
    {
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v31 = (id)MEMORY[0x1C87730B0](v32);
      swift_bridgeObjectRelease();
    }
    unsigned __int8 v33 = objc_msgSend(v31, sel_destinationIdIsTemporary);

    OUTLINED_FUNCTION_18_51();
    if (v33)
    {
      _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v28, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_51_15();
      goto LABEL_12;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_51();
  }
  char v34 = Participant.isPendingAuthorization.getter();
  _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v28, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_51_15();
  if ((v34 & 1) == 0)
  {
    uint64_t v35 = *(void **)(v18 + *(int *)(v23 + 28));
    if (v35)
    {
      id v36 = objc_msgSend(v35, sel_value);
      if (!v36)
      {
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v36 = (id)MEMORY[0x1C87730B0](v37);
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v36, sel_destinationIdIsPseudonym);
    }
  }
LABEL_12:
  _s15ConversationKit11ParticipantVWOhTm_7(v18, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_15_0();
}

uint64_t Participant.cache.getter()
{
  type metadata accessor for Participant(0);
  return swift_retain();
}

void Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_31();
  uint64_t v26 = v24;
  uint64_t v134 = v27;
  uint64_t v132 = v28;
  uint64_t v148 = v29;
  uint64_t v129 = v30;
  uint64_t v32 = v31;
  uint64_t v143 = v33;
  uint64_t v125 = v34;
  uint64_t v136 = (uint64_t *)v35;
  uint64_t v142 = v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  uint64_t v38 = OUTLINED_FUNCTION_8(v37);
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_2_3();
  uint64_t v138 = v39;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_2_3();
  uint64_t v140 = v41;
  uint64_t v149 = (int *)type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v42);
  OUTLINED_FUNCTION_10_5();
  uint64_t v141 = v43;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v44);
  OUTLINED_FUNCTION_8_4();
  uint64_t v139 = v45;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v46);
  OUTLINED_FUNCTION_8_4();
  uint64_t v137 = v47;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_8_4();
  uint64_t v130 = v49;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v50);
  OUTLINED_FUNCTION_8_4();
  uint64_t v128 = v51;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v52);
  OUTLINED_FUNCTION_8_4();
  uint64_t v127 = v53;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v54);
  OUTLINED_FUNCTION_8_4();
  uint64_t v126 = v55;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v56);
  OUTLINED_FUNCTION_123_2();
  MEMORY[0x1F4188790](v57);
  OUTLINED_FUNCTION_131_3();
  MEMORY[0x1F4188790](v58);
  uint64_t v60 = (char *)&v120 - v59;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  uint64_t v62 = OUTLINED_FUNCTION_8(v61);
  MEMORY[0x1F4188790](v62);
  uint64_t v64 = (char *)&v120 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v66);
  OUTLINED_FUNCTION_17_0();
  uint64_t v68 = *(void **)v32;
  uint64_t v67 = *(void *)(v32 + 8);
  uint64_t v146 = *(void **)(v32 + 16);
  uint64_t v147 = v67;
  uint64_t v69 = *(void **)(v32 + 24);
  uint64_t v144 = *(void **)(v32 + 32);
  char v145 = v69;
  outlined init with copy of Participant?((uint64_t)v136, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_33_0((uint64_t)v64, 1, v65);
  uint64_t v135 = v23;
  if (v70)
  {
    outlined init with copy of Participant.State();
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v60, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of SystemUpdateNotice?((uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v60, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_74();
    _s15ConversationKit11ParticipantVWObTm_5();
  }
  unint64_t v71 = v143 & 0xFFFFFFFFFFLL;
  uint64_t v72 = type metadata accessor for UUID();
  uint64_t v136 = &v120;
  OUTLINED_FUNCTION_4();
  uint64_t v74 = v73;
  MEMORY[0x1F4188790](v75);
  OUTLINED_FUNCTION_17_0();
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  double v133 = &v120;
  uint64_t v77 = OUTLINED_FUNCTION_8(v76);
  MEMORY[0x1F4188790](v77);
  OUTLINED_FUNCTION_62();
  outlined init with copy of Participant?(v125, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_18_51();
  OUTLINED_FUNCTION_33_0((uint64_t)v64, 1, v72);
  if (v70)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v23, v24 + v149[5], v72);
    _s15ConversationKit11ParticipantVWOhTm_7(v24, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of SystemUpdateNotice?((uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v24, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_144_4();
    v78();
  }
  outlined init with copy of Participant.State();
  uint64_t v79 = v128;
  uint64_t v80 = v126;
  if (v71 == 2)
  {
    uint64_t v81 = (unsigned __int8 *)(v25 + v149[6]);
    LODWORD(v125) = *v81;
    unint64_t v124 = v81[1];
    unint64_t v123 = v81[2];
    unint64_t v122 = v81[3];
    uint64_t v82 = v81[4];
  }
  else
  {
    unint64_t v124 = (v71 >> 8) & 1;
    LODWORD(v125) = v143 & 1;
    unint64_t v123 = (v71 >> 16) & 1;
    unint64_t v122 = (v71 >> 24) & 1;
    uint64_t v82 = HIDWORD(v71) & 1;
  }
  uint64_t v121 = v82;
  _s15ConversationKit11ParticipantVWOhTm_7(v25, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_18_51();
  uint64_t v83 = v80;
  uint64_t v84 = v68;
  uint64_t v86 = v146;
  uint64_t v85 = v147;
  double v88 = v144;
  uint64_t v87 = v145;
  if (v68 == (void *)1)
  {
    unint64_t v89 = (void **)(v83 + v149[7]);
    uint64_t v84 = *v89;
    uint64_t v85 = (uint64_t)v89[1];
    uint64_t v86 = v89[2];
    uint64_t v87 = v89[3];
    double v88 = v89[4];
    OUTLINED_FUNCTION_144_4();
    outlined copy of Participant.RemoteIdentifiers?(v90);
  }
  uint64_t v143 = v23;
  outlined copy of Participant.RemoteIdentifiers??(v68);
  _s15ConversationKit11ParticipantVWOhTm_7(v83, (void (*)(void))type metadata accessor for Participant);
  v150[0] = v84;
  v150[1] = v85;
  v150[2] = v86;
  v150[3] = v87;
  v150[4] = v88;
  uint64_t v91 = v127;
  outlined init with copy of Participant.State();
  if (v129)
  {
    uint64_t v147 = v129;
    uint64_t v92 = v149;
  }
  else
  {
    uint64_t v92 = v149;
    uint64_t v147 = *(void *)(v91 + v149[8]);
    swift_bridgeObjectRetain();
  }
  uint64_t v93 = v140;
  uint64_t v94 = v138;
  uint64_t v95 = v132;
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantVWOhTm_7(v91, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of Participant.State();
  uint64_t v96 = v148;
  uint64_t v97 = v95;
  if (v95 == 1)
  {
    uint64_t v98 = (uint64_t *)(v79 + v92[9]);
    uint64_t v96 = *v98;
    uint64_t v97 = v98[1];
    swift_bridgeObjectRetain();
  }
  outlined copy of String??(v148, v95);
  _s15ConversationKit11ParticipantVWOhTm_7(v79, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of Participant?(v134, v94, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  uint64_t v99 = v130;
  outlined init with copy of Participant.State();
  OUTLINED_FUNCTION_33_0(v94, 1, v131);
  if (v70)
  {
    outlined init with copy of Participant.State();
    _s15ConversationKit11ParticipantVWOhTm_7(v99, (void (*)(void))type metadata accessor for Participant);
    uint64_t v100 = type metadata accessor for Participant.CountdownInfo(0);
    __swift_storeEnumTagSinglePayload(v93, 0, 1, v100);
    outlined destroy of SystemUpdateNotice?(v94, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v99, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of ConversationControlsRecipe?(v94, v93, &demangling cache variable for type metadata for Participant.CountdownInfo?);
  }
  uint64_t v101 = v137;
  outlined init with copy of Participant.State();
  if (a21 == 2) {
    char v102 = *(unsigned char *)(v101 + v92[15]);
  }
  else {
    char v102 = a21 & 1;
  }
  _s15ConversationKit11ParticipantVWOhTm_7(v101, (void (*)(void))type metadata accessor for Participant);
  uint64_t v103 = v139;
  outlined init with copy of Participant.State();
  if (a22)
  {
    uint64_t v104 = a22;
  }
  else
  {
    uint64_t v104 = *(void *)(v103 + v92[16]);
    swift_retain();
  }
  swift_retain();
  _s15ConversationKit11ParticipantVWOhTm_7(v103, (void (*)(void))type metadata accessor for Participant);
  uint64_t v105 = 0x100000000;
  if (!v121) {
    uint64_t v105 = 0;
  }
  uint64_t v106 = 0x1000000;
  if (!v122) {
    uint64_t v106 = 0;
  }
  uint64_t v107 = 0x10000;
  if (!v123) {
    uint64_t v107 = 0;
  }
  uint64_t v108 = 256;
  if (!v124) {
    uint64_t v108 = 0;
  }
  LOBYTE(v119) = v102;
  uint64_t v109 = v142;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v135, v143, v108 | v125 | v107 | v106 | v105, (uint64_t)v150, v147, v96, v97, v93, v119, v104, v120, v121, v122, v123, v124, v125, v126, v127, v128,
    v129,
    v130,
    v131);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  char v111 = (*(uint64_t (**)(void))(v110 + 584))();
  uint64_t v112 = v141;
  if (v111)
  {
    OUTLINED_FUNCTION_199_0();
    if (a23)
    {
      uint64_t v113 = a23;
    }
    else
    {
      uint64_t v113 = *(void *)(v112 + v92[11]);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantVWOhTm_7(v112, (void (*)(void))type metadata accessor for Participant);
    uint64_t v114 = v92[11];
    swift_bridgeObjectRelease();
    *(void *)(v109 + v114) = v113;
  }
  uint64_t v115 = v92[12];
  uint64_t v116 = *(void **)(v26 + v115);
  uint64_t v117 = *(void **)(v109 + v115);
  id v118 = v116;

  *(void *)(v109 + v115) = v116;
  OUTLINED_FUNCTION_28();
}

#error "1C3497508: call analysis failed (funcsize=248)"

#error "1C349774C: call analysis failed (funcsize=131)"

#error "1C34978D0: call analysis failed (funcsize=87)"

#error "1C3497AE8: call analysis failed (funcsize=131)"

void Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v56 = v2;
  uint64_t v53 = v3;
  uint64_t v54 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v52 = v13;
  HIDWORD(v51) = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  uint64_t v16 = OUTLINED_FUNCTION_8(v15);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_2_3();
  uint64_t v55 = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  uint64_t v19 = OUTLINED_FUNCTION_8(v18);
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_45_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_36_4();
  outlined init with copy of Participant?(v10, (uint64_t)&v58, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  memset(v64, 0, sizeof(v64));
  uint64_t v65 = 1;
  bzero(&v66, 0xB1uLL);
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  v61[0] = BYTE4(v51);
  uint64_t v67 = 0;
  uint64_t v62 = v52;
  outlined init with take of ConversationControlsRecipe?(v12, (uint64_t)&v63, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant](v12);
  outlined copy of Participant.CaptionInfo?(v8);
  _s15ConversationKit11ParticipantVSgWOdTm_0((uint64_t)&v58, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined consume of Participant.CaptionInfo?(v67);
  uint64_t v67 = v8;
  uint64_t v68 = v6;
  uint64_t v69 = v53;
  uint64_t v21 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_118();
  outlined init with copy of Participant.State();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v26 = v1 + *(int *)(v25 + 48);
    OUTLINED_FUNCTION_8_2((uint64_t *)(v1 + *(int *)(v25 + 64)));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v6, v1, v21);
    outlined destroy of Participant.MediaInfo(v26);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant.State);
    Date.init()();
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  uint64_t v28 = v0 + *(int *)(v27 + 48);
  uint64_t v29 = v0 + *(int *)(v27 + 64);
  OUTLINED_FUNCTION_2_1();
  v30();
  outlined init with copy of Participant.MediaInfo((uint64_t)v61, v28);
  outlined init with take of ConversationControlsRecipe?(v54, v29, &demangling cache variable for type metadata for Participant.CopresenceInfo?);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_140_3(v0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v32 = OUTLINED_FUNCTION_8(v31);
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_80();
  uint64_t v33 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_25_1((uint64_t)&demangling cache variable for type metadata for Participant.ScreenInfo?, v34, v35, v33);
  uint64_t v58 = 1;
  long long v59 = 0u;
  long long v60 = 0u;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v37 = v55;
  OUTLINED_FUNCTION_25_1(v55, v38, v39, v36);
  outlined release of Participant.CopresenceInfo?(v54);
  LOBYTE(v48) = 2;
  OUTLINED_FUNCTION_80_5();
  Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v40, v41, v42, v43, v44, v45, v46, v55, v48, 0, 0, v49, v50, v51, v52, v53, v54, v55, v56,
    v57,
    v58,
    v59,
    *((uint64_t *)&v59 + 1));
  outlined destroy of SystemUpdateNotice?(v37, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  outlined destroy of SystemUpdateNotice?((uint64_t)&demangling cache variable for type metadata for Participant.ScreenInfo?, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  OUTLINED_FUNCTION_1_19();
  v47();
  outlined destroy of Participant.MediaInfo((uint64_t)v61);
  OUTLINED_FUNCTION_28();
}

#error "1C34981EC: call analysis failed (funcsize=185)"

#error "1C349838C: call analysis failed (funcsize=88)"

#error "1C3498640: call analysis failed (funcsize=174)"

#error "1C349893C: call analysis failed (funcsize=180)"

#error "1C3498B34: call analysis failed (funcsize=117)"

#error "1C3498D0C: call analysis failed (funcsize=100)"

#error "1C3498ED0: call analysis failed (funcsize=142)"

#error "1C34990C0: call analysis failed (funcsize=87)"

#error "1C3499230: call analysis failed (funcsize=90)"

#error "1C34993B4: call analysis failed (funcsize=87)"

void Participant.name(_:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant(0);
  specialized Collection.first.getter(*(void *)(v0 + *(int *)(v9 + 44)), (uint64_t)v8);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  if (*(void *)(v0 + *(int *)(v9 + 36) + 8)) {
    BOOL v11 = EnumTagSinglePayload == 1;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    id v12 = objc_msgSend(self, sel_conversationKit);
    v22._object = (void *)0xE000000000000000;
    v13._object = (void *)0x80000001C37B0B40;
    v13._uint64_t countAndFlagsBits = 0xD000000000000020;
    v14.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v14.value._object = (void *)0xEF74694B6E6F6974;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v22._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v22);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C3769620;
    v21[0] = v4;
    v21[1] = v2;
    swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    uint64_t v18 = String.init<A>(_:)();
    uint64_t v20 = v19;
    *(void *)(v16 + 56) = v17;
    *(void *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v20;
    OUTLINED_FUNCTION_154_4();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_15_0();
}

void static Participant.State.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_3_74();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Participant.State, Participant.State));
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_5_1();
  uint64_t v5 = v1 + *(int *)(v4 + 56);
  outlined init with copy of Participant.State();
  outlined init with copy of Participant.State();
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      OUTLINED_FUNCTION_88_5();
      uint64_t v6 = OUTLINED_FUNCTION_145_4();
      OUTLINED_FUNCTION_1_5();
      uint64_t v9 = v10;
      if (v0 == 1) {
        goto LABEL_26;
      }
      goto LABEL_30;
    case 2u:
      OUTLINED_FUNCTION_88_5();
      uint64_t v6 = OUTLINED_FUNCTION_145_4();
      OUTLINED_FUNCTION_1_5();
      uint64_t v9 = v11;
      if (v0 != 2) {
        goto LABEL_30;
      }
      goto LABEL_26;
    case 3u:
      OUTLINED_FUNCTION_88_5();
      uint64_t v6 = OUTLINED_FUNCTION_145_4();
      OUTLINED_FUNCTION_1_5();
      uint64_t v9 = v12;
      if (v0 != 3) {
        goto LABEL_30;
      }
      goto LABEL_26;
    case 4u:
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v81 = (const void *)(v1 + v14);
      uint64_t v15 = *(int *)(v13 + 64);
      uint64_t v16 = *(void *)(v1 + v15);
      uint64_t v17 = *(void *)(v1 + v15 + 8);
      uint64_t v82 = *(void *)(v1 + v15 + 16);
      uint64_t v83 = v16;
      uint64_t v18 = *(void *)(v1 + v15 + 32);
      uint64_t v84 = *(void *)(v1 + v15 + 24);
      uint64_t v85 = (uint64_t *)v17;
      uint64_t v20 = *(void *)(v1 + v15 + 40);
      uint64_t v19 = *(void *)(v1 + v15 + 48);
      uint64_t v21 = *(void *)(v1 + v15 + 56);
      if (OUTLINED_FUNCTION_88_5() == 4)
      {
        uint64_t v77 = v18;
        uint64_t v78 = v21;
        uint64_t v74 = v20;
        uint64_t v75 = v19;
        Swift::String v22 = (const void *)(v5 + v14);
        uint64_t v23 = *(void *)(v5 + v15);
        uint64_t v79 = *(uint64_t **)(v5 + v15 + 8);
        uint64_t v80 = v23;
        uint64_t v24 = *(void *)(v5 + v15 + 24);
        uint64_t v66 = *(void *)(v5 + v15 + 16);
        uint64_t v67 = v24;
        uint64_t v25 = *(void *)(v5 + v15 + 32);
        uint64_t v27 = *(void *)(v5 + v15 + 48);
        uint64_t v26 = *(void *)(v5 + v15 + 56);
        uint64_t v68 = *(void *)(v5 + v15 + 40);
        uint64_t v69 = v27;
        uint64_t v70 = v26;
        uint64_t v71 = v25;
        uint64_t v28 = (const void *)type metadata accessor for Date();
        uint64_t v76 = &v65;
        OUTLINED_FUNCTION_4();
        uint64_t v30 = v29;
        uint64_t v32 = *(void *)(v31 + 64);
        MEMORY[0x1F4188790](v33);
        unint64_t v34 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v72 = v30;
        uint64_t v35 = *(uint64_t (**)(void))(v30 + 32);
        OUTLINED_FUNCTION_186_2();
        uint64_t v36 = v35();
        uint64_t v73 = &v65;
        MEMORY[0x1F4188790](v36);
        uint64_t v37 = (char *)&v65 - v34;
        OUTLINED_FUNCTION_186_2();
        v35();
        memcpy(v90, v81, 0x150uLL);
        memcpy(v89, v22, sizeof(v89));
        char v38 = static Date.== infix(_:_:)();
        outlined init with copy of Participant.MediaInfo((uint64_t)v90, (uint64_t)v88);
        outlined init with copy of Participant.MediaInfo((uint64_t)v89, (uint64_t)v87);
        if (v38)
        {
          static Participant.MediaInfo.== infix(_:_:)();
          char v40 = v39;
          outlined destroy of Participant.MediaInfo((uint64_t)v87);
          outlined destroy of Participant.MediaInfo((uint64_t)v88);
          if (v40)
          {
            uint64_t v81 = v28;
            uint64_t v41 = v77;
            uint64_t v42 = v78;
            uint64_t v44 = v83;
            uint64_t v43 = v84;
            uint64_t v45 = (uint64_t)v85;
            uint64_t v46 = (uint64_t)v79;
            uint64_t v47 = v80;
            if (v85)
            {
              if (v79)
              {
                BOOL v48 = v83 == v80 && v85 == v79;
                if (v48 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  if (v82 == v66 && v43 == v67)
                  {
                    outlined consume of Participant.CopresenceInfo?(v80, v46);
                  }
                  else
                  {
                    _stringCompareWithSmolCheck(_:_:expecting:)();
                    OUTLINED_FUNCTION_144_4();
                    outlined consume of Participant.CopresenceInfo?(v50, v51);
                  }
                }
                else
                {
                  outlined consume of Participant.CopresenceInfo?(v47, v46);
                }
                outlined destroy of Participant.MediaInfo((uint64_t)v89);
                outlined destroy of Participant.MediaInfo((uint64_t)v90);
                uint64_t v64 = *(void (**)(void))(v72 + 8);
                OUTLINED_FUNCTION_1_19();
                v64();
                OUTLINED_FUNCTION_1_19();
                v64();
                outlined consume of Participant.CopresenceInfo?(v83, (uint64_t)v85);
                goto LABEL_32;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              outlined destroy of Participant.MediaInfo((uint64_t)v89);
              outlined destroy of Participant.MediaInfo((uint64_t)v90);
              uint64_t v61 = v45;
              uint64_t v62 = *(void (**)(char *, const void *))(v72 + 8);
              v62(v37, v81);
              uint64_t v63 = OUTLINED_FUNCTION_278();
              ((void (*)(uint64_t))v62)(v63);
              uint64_t v46 = (uint64_t)v79;
              uint64_t v58 = v82;
              uint64_t v60 = v74;
              uint64_t v59 = v75;
              outlined consume of Participant.CopresenceInfo?(v44, v61);
            }
            else
            {
              outlined destroy of Participant.MediaInfo((uint64_t)v89);
              outlined destroy of Participant.MediaInfo((uint64_t)v90);
              uint64_t v57 = *(void (**)(void))(v72 + 8);
              OUTLINED_FUNCTION_1_19();
              v57();
              OUTLINED_FUNCTION_1_19();
              v57();
              uint64_t v58 = v82;
              uint64_t v60 = v74;
              uint64_t v59 = v75;
              if (!v46)
              {
                outlined consume of Participant.CopresenceInfo?(v44, 0);
                goto LABEL_32;
              }
            }
            v86[0] = v44;
            v86[1] = (uint64_t)v85;
            v86[2] = v58;
            void v86[3] = v43;
            v86[4] = v41;
            v86[5] = v60;
            v86[6] = v59;
            v86[7] = v42;
            v86[8] = v80;
            v86[9] = v46;
            v86[10] = v66;
            v86[11] = v67;
            v86[12] = v71;
            v86[13] = v68;
            v86[14] = v69;
            v86[15] = v70;
            outlined release of (Participant.CopresenceInfo?, Participant.CopresenceInfo?)(v86);
            goto LABEL_32;
          }
        }
        else
        {
          outlined destroy of Participant.MediaInfo((uint64_t)v87);
          outlined destroy of Participant.MediaInfo((uint64_t)v88);
        }
        outlined consume of Participant.CopresenceInfo?(v80, (uint64_t)v79);
        outlined consume of Participant.CopresenceInfo?(v83, (uint64_t)v85);
        outlined destroy of Participant.MediaInfo((uint64_t)v89);
        outlined destroy of Participant.MediaInfo((uint64_t)v90);
        uint64_t v56 = *(void (**)(char *, const void *))(v72 + 8);
        v56((char *)&v65 - v34, v28);
        v56((char *)&v65 - v34, v28);
        goto LABEL_32;
      }
      outlined consume of Participant.CopresenceInfo?(v83, (uint64_t)v85);
      outlined destroy of Participant.MediaInfo((uint64_t)v81);
      uint64_t v6 = type metadata accessor for Date();
      uint64_t v9 = *(void *)(v6 - 8);
LABEL_30:
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v6);
LABEL_31:
      _s15ConversationKit11ParticipantVWOhTm_7(v5, (void (*)(void))type metadata accessor for Participant.State);
LABEL_32:
      OUTLINED_FUNCTION_28();
      return;
    case 5u:
      OUTLINED_FUNCTION_88_5();
      uint64_t v6 = OUTLINED_FUNCTION_145_4();
      OUTLINED_FUNCTION_1_5();
      uint64_t v9 = v52;
      if (v0 == 5) {
        goto LABEL_26;
      }
      goto LABEL_30;
    case 6u:
      if (OUTLINED_FUNCTION_88_5() == 6) {
        goto LABEL_32;
      }
      goto LABEL_31;
    default:
      OUTLINED_FUNCTION_88_5();
      uint64_t v6 = OUTLINED_FUNCTION_145_4();
      OUTLINED_FUNCTION_1_5();
      uint64_t v9 = v8;
      if (v0) {
        goto LABEL_30;
      }
LABEL_26:
      uint64_t v85 = &v65;
      MEMORY[0x1F4188790](v7);
      uint64_t v53 = *(uint64_t (**)(void))(v9 + 32);
      OUTLINED_FUNCTION_278();
      OUTLINED_FUNCTION_186_2();
      uint64_t v54 = v53();
      MEMORY[0x1F4188790](v54);
      OUTLINED_FUNCTION_186_2();
      v53();
      static Date.== infix(_:_:)();
      uint64_t v55 = *(void (**)(void))(v9 + 8);
      OUTLINED_FUNCTION_57_9();
      v55();
      OUTLINED_FUNCTION_57_9();
      v55();
      goto LABEL_32;
  }
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_7(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

void static Participant.VideoInfo.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)a1 + 64;
  char v63 = 1;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*(void *)a1 + 64);
  outlined retain of [Participant]((uint64_t)a1);
  int64_t v8 = 0;
  int64_t v62 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_29;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_95:
      __break(1u);
      return;
    }
    if (v11 >= v62) {
      goto LABEL_50;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      OUTLINED_FUNCTION_118_3();
      if (v14 == v15) {
        goto LABEL_50;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v13 + 2;
        OUTLINED_FUNCTION_118_3();
        if (v14 == v15) {
          goto LABEL_50;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v16 + 3;
          OUTLINED_FUNCTION_118_3();
          if (v14 == v15) {
            goto LABEL_50;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v17 + 4;
            OUTLINED_FUNCTION_118_3();
            if (v14 == v15) {
              goto LABEL_50;
            }
            unint64_t v12 = *(void *)(v4 + 8 * v8);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_29:
    uint64_t v21 = *(unsigned __int8 *)(v3[6] + v10);
    if (v3[2] && (uint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)(v21), (v23 & 1) != 0))
    {
      outlined init with copy of IDSLookupManager(v3[7] + 40 * v22, (uint64_t)v77);
    }
    else
    {
      uint64_t v78 = 0;
      memset(v77, 0, sizeof(v77));
    }
    uint64_t v24 = *(void *)a2;
    if (*(void *)(*(void *)a2 + 16)
      && (uint64_t v25 = specialized __RawDictionaryStorage.find<A>(_:)(v21), (v26 & 1) != 0))
    {
      outlined init with copy of IDSLookupManager(*(void *)(v24 + 56) + 40 * v25, (uint64_t)v75);
    }
    else
    {
      uint64_t v76 = 0;
      memset(v75, 0, sizeof(v75));
    }
    outlined init with copy of Participant?((uint64_t)v77, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    outlined init with copy of Participant?((uint64_t)v75, (uint64_t)v73, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v72)
    {
      if (v74)
      {
        outlined init with copy of Participant?((uint64_t)v77, (uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        if (!v67)
        {
          OUTLINED_FUNCTION_141_3();
          OUTLINED_FUNCTION_190_1();
          outlined destroy of SystemUpdateNotice?((uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
LABEL_47:
          uint64_t v37 = v73;
          goto LABEL_48;
        }
        outlined init with take of Notice(&v66, (uint64_t)v68);
        outlined init with copy of Participant?((uint64_t)v75, (uint64_t)&v64, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        if (!v65)
        {
          OUTLINED_FUNCTION_141_3();
          OUTLINED_FUNCTION_190_1();
          outlined destroy of SystemUpdateNotice?((uint64_t)&v64, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
          goto LABEL_47;
        }
        outlined init with take of Notice(&v64, (uint64_t)&v66);
        uint64_t v27 = v4;
        uint64_t v28 = a2;
        uint64_t v29 = v69;
        uint64_t v30 = v70;
        __swift_project_boxed_opaque_existential_1(v68, v69);
        uint64_t v31 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v30 + 128);
        uint64_t v32 = v30;
        a2 = v28;
        uint64_t v4 = v27;
        char v33 = v31(&v66, v29, v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
        OUTLINED_FUNCTION_141_3();
        OUTLINED_FUNCTION_190_1();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
        uint64_t v34 = OUTLINED_FUNCTION_162();
        outlined destroy of SystemUpdateNotice?(v34, v35);
        outlined destroy of SystemUpdateNotice?((uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        v63 &= v33;
      }
      else
      {
        OUTLINED_FUNCTION_141_3();
        uint64_t v37 = v77;
LABEL_48:
        outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        uint64_t v36 = v71;
LABEL_49:
        outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        char v63 = 0;
      }
    }
    else
    {
      OUTLINED_FUNCTION_141_3();
      OUTLINED_FUNCTION_190_1();
      uint64_t v36 = v73;
      if (v74) {
        goto LABEL_49;
      }
    }
  }
  int64_t v19 = v18 + 5;
  if (v19 < v62)
  {
    unint64_t v12 = *(void *)(v4 + 8 * v19);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_95;
        }
        OUTLINED_FUNCTION_118_3();
        if (v14 == v15) {
          goto LABEL_50;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v8);
        int64_t v19 = v20 + 1;
        if (v12) {
          goto LABEL_28;
        }
      }
    }
    int64_t v8 = v19;
    goto LABEL_28;
  }
LABEL_50:
  swift_release();
  if (v63)
  {
    if (a1[9]) {
      uint64_t v38 = 256;
    }
    else {
      uint64_t v38 = 0;
    }
    uint64_t v39 = v38 | a1[8];
    uint64_t v40 = 0x10000;
    if (a1[10]) {
      uint64_t v41 = 0x10000;
    }
    else {
      uint64_t v41 = 0;
    }
    unint64_t v42 = v39 | v41 | ((unint64_t)a1[11] << 24);
    if (a1[12]) {
      uint64_t v43 = 0x100000000;
    }
    else {
      uint64_t v43 = 0;
    }
    if (a1[13]) {
      uint64_t v44 = 0x10000000000;
    }
    else {
      uint64_t v44 = 0;
    }
    if (a1[14]) {
      uint64_t v45 = 0x1000000000000;
    }
    else {
      uint64_t v45 = 0;
    }
    uint64_t v46 = v43 | v44;
    if (a1[15]) {
      uint64_t v47 = 0x100000000000000;
    }
    else {
      uint64_t v47 = 0;
    }
    uint64_t v48 = v42 | v46 | v45 | v47;
    if (a1[17]) {
      __int16 v49 = 256;
    }
    else {
      __int16 v49 = 0;
    }
    __int16 v50 = v49 | a1[16];
    if (a2[9]) {
      uint64_t v51 = 256;
    }
    else {
      uint64_t v51 = 0;
    }
    uint64_t v52 = v51 | a2[8];
    if (!a2[10]) {
      uint64_t v40 = 0;
    }
    unint64_t v53 = v52 | v40 | ((unint64_t)a2[11] << 24);
    if (a2[12]) {
      uint64_t v54 = 0x100000000;
    }
    else {
      uint64_t v54 = 0;
    }
    if (a2[13]) {
      uint64_t v55 = 0x10000000000;
    }
    else {
      uint64_t v55 = 0;
    }
    if (a2[14]) {
      uint64_t v56 = 0x1000000000000;
    }
    else {
      uint64_t v56 = 0;
    }
    uint64_t v57 = v54 | v55;
    if (a2[15]) {
      uint64_t v58 = 0x100000000000000;
    }
    else {
      uint64_t v58 = 0;
    }
    uint64_t v59 = v53 | v57 | v56 | v58;
    if (a2[17]) {
      __int16 v60 = 256;
    }
    else {
      __int16 v60 = 0;
    }
    static Participant.VideoState.== infix(_:_:)(v48, v50, v59, v60 | a2[16]);
  }
}

BOOL static Participant.VideoState.== infix(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  return OUTLINED_FUNCTION_108(a3 ^ a1 | BYTE1(a1) & 1 ^ BYTE1(a3) & 1 | BYTE2(a1) & 1 ^ BYTE2(a3) & 1 | (((a3 ^ a1) & 0xFF000000) != 0) | HIBYTE(a1) & 1 ^ HIBYTE(a3) & 1 | a2 ^ a4 | ((unsigned __int16)(a2 ^ a4) >> 8));
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Participant.VideoInfo(void *__src, unsigned __int8 *a2)
{
  memcpy(v5, __src, 0x4AuLL);
  static Participant.VideoInfo.== infix(_:_:)(v5, a2);
  return v3 & 1;
}

void static Participant.ScreenInfo.== infix(_:_:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v89 = v2;
  uint64_t v90 = v3;
  OUTLINED_FUNCTION_4_15();
  outlined init with copy of Participant?(v4, (uint64_t)&v61, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (v62)
  {
    outlined init with take of Notice(&v61, (uint64_t)v67);
    outlined init with copy of Participant?(v0, (uint64_t)&v50, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v51)
    {
      outlined init with take of Notice(&v50, (uint64_t)&v61);
      __swift_project_boxed_opaque_existential_1(v67, v68);
      OUTLINED_FUNCTION_144_4();
      char v6 = v5();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      goto LABEL_9;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v50, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v61, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  outlined init with copy of Participant?(v1, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  uint64_t v7 = v68;
  outlined destroy of SystemUpdateNotice?((uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v67);
  if (v7)
  {
    outlined destroy of Participant.ScreenInfo((uint64_t)v67);
    char v6 = 0;
  }
  else
  {
    outlined init with take of ConversationControlsRecipe?((uint64_t)v67, (uint64_t)&v61, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    char v6 = v62 == 0;
    outlined destroy of SystemUpdateNotice?((uint64_t)&v61, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
LABEL_9:
  outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v67);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)&v61);
  if ((v6 & 1) == 0)
  {
    outlined destroy of Participant.ScreenInfo((uint64_t)&v61);
    outlined destroy of Participant.ScreenInfo((uint64_t)v67);
LABEL_18:
    outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)&v50);
    outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v40);
    goto LABEL_19;
  }
  int v8 = v69;
  int v9 = v70;
  int v10 = v71;
  int v11 = v72;
  outlined destroy of Participant.ScreenInfo((uint64_t)v67);
  int v12 = v63;
  int v13 = v64;
  int v14 = v65;
  int v15 = v66;
  outlined destroy of Participant.ScreenInfo((uint64_t)&v61);
  if (v8 != v12 || ((v9 ^ v13) & 1) != 0 || ((v10 ^ v14) & 1) != 0) {
    goto LABEL_18;
  }
  outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)&v50);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v40);
  if (v11 != v15) {
    goto LABEL_19;
  }
  int v16 = v49;
  if (v60)
  {
    outlined destroy of Participant.ScreenInfo((uint64_t)v40);
    outlined destroy of Participant.ScreenInfo((uint64_t)&v50);
    if (v16)
    {
      outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v38);
      outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v36);
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v49)
  {
LABEL_19:
    outlined destroy of Participant.ScreenInfo((uint64_t)v40);
    outlined destroy of Participant.ScreenInfo((uint64_t)&v50);
LABEL_20:
    outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v38);
    outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v36);
LABEL_21:
    outlined destroy of Participant.ScreenInfo((uint64_t)v36);
    outlined destroy of Participant.ScreenInfo((uint64_t)v38);
    outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v34);
    outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v32);
LABEL_22:
    outlined destroy of Participant.ScreenInfo((uint64_t)v32);
    outlined destroy of Participant.ScreenInfo((uint64_t)v34);
    outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v30);
    outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v28);
LABEL_23:
    outlined destroy of Participant.ScreenInfo((uint64_t)v28);
    outlined destroy of Participant.ScreenInfo((uint64_t)v30);
    outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v26);
    outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v24);
    goto LABEL_24;
  }
  v75[0] = v52;
  v75[1] = v53;
  char v76 = v54 & 1;
  long long v77 = v55;
  long long v78 = v56;
  long long v79 = v57;
  long long v80 = v58;
  uint64_t v81 = v59;
  v82[0] = v41;
  v82[1] = v42;
  char v83 = v43 & 1;
  long long v84 = v44;
  long long v85 = v45;
  long long v86 = v46;
  long long v87 = v47;
  uint64_t v88 = v48;
  char v17 = static Participant.ScreenShareAttributes.== infix(_:_:)((uint64_t)v75, (uint64_t)v82);
  outlined destroy of Participant.ScreenInfo((uint64_t)v40);
  outlined destroy of Participant.ScreenInfo((uint64_t)&v50);
  outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v38);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v36);
  if ((v17 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_28:
  double v18 = v39;
  outlined destroy of Participant.ScreenInfo((uint64_t)v38);
  double v19 = v37;
  outlined destroy of Participant.ScreenInfo((uint64_t)v36);
  outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v34);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v32);
  if (v18 != v19) {
    goto LABEL_22;
  }
  uint64_t v20 = v35;
  uint64_t v21 = v33;
  outlined destroy of Participant.ScreenInfo((uint64_t)v32);
  outlined destroy of Participant.ScreenInfo((uint64_t)v34);
  outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v30);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v28);
  if (v20 != v21) {
    goto LABEL_23;
  }
  uint64_t v22 = v31;
  uint64_t v23 = v29;
  outlined destroy of Participant.ScreenInfo((uint64_t)v28);
  outlined destroy of Participant.ScreenInfo((uint64_t)v30);
  outlined init with copy of Participant.ScreenInfo(v1, (uint64_t)v26);
  outlined init with copy of Participant.ScreenInfo(v0, (uint64_t)v24);
  if (v22 == v23)
  {
    outlined init with take of AspectRatio((uint64_t)&v27, (uint64_t)v73);
    outlined destroy of Participant.ScreenInfo((uint64_t)v26);
    outlined init with take of AspectRatio((uint64_t)&v25, (uint64_t)v74);
    outlined destroy of Participant.ScreenInfo((uint64_t)v24);
    static AspectRatio.== infix(_:_:)((uint64_t)v73, (uint64_t)v74);
    goto LABEL_25;
  }
LABEL_24:
  outlined destroy of Participant.ScreenInfo((uint64_t)v24);
  outlined destroy of Participant.ScreenInfo((uint64_t)v26);
LABEL_25:
  OUTLINED_FUNCTION_33_2();
}

BOOL static Participant.ScreenState.== infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return OUTLINED_FUNCTION_108(vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)veorq_s8((int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(a2), (int8x16_t)xmmword_1C3782D60)), (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(a1), (int8x16_t)xmmword_1C3782D60)))), 0xFuLL))));
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.VideoState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  int v4 = a1[2];
  uint64_t v5 = a1[3];
  int v6 = a1[4];
  int v7 = a1[5];
  int v8 = a1[6];
  int v9 = a1[7];
  __int16 v10 = a1[8];
  int v11 = a1[9];
  uint64_t v12 = *a2;
  int v13 = a2[1];
  int v14 = a2[2];
  uint64_t v15 = a2[3];
  int v16 = a2[4];
  int v17 = a2[5];
  int v18 = a2[6];
  int v19 = a2[7];
  __int16 v20 = a2[8];
  int v21 = a2[9];
  if (a1[1]) {
    uint64_t v22 = 256;
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v23 = v22 | v3;
  BOOL v24 = v4 == 0;
  uint64_t v25 = 0x10000;
  if (v24) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = 0x10000;
  }
  uint64_t v27 = v23 | v26 | (v5 << 24);
  if (v6) {
    uint64_t v28 = 0x100000000;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v7) {
    uint64_t v29 = 0x10000000000;
  }
  else {
    uint64_t v29 = 0;
  }
  if (v8) {
    uint64_t v30 = 0x1000000000000;
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t v31 = v28 | v29;
  if (v9) {
    uint64_t v32 = 0x100000000000000;
  }
  else {
    uint64_t v32 = 0;
  }
  uint64_t v33 = v27 | v31 | v30 | v32;
  if (v11) {
    __int16 v34 = 256;
  }
  else {
    __int16 v34 = 0;
  }
  __int16 v35 = v34 | v10;
  if (v13) {
    uint64_t v36 = 256;
  }
  else {
    uint64_t v36 = 0;
  }
  uint64_t v37 = v36 | v12;
  if (!v14) {
    uint64_t v25 = 0;
  }
  uint64_t v38 = v37 | v25 | (v15 << 24);
  if (v16) {
    uint64_t v39 = 0x100000000;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v17) {
    uint64_t v40 = 0x10000000000;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v18) {
    uint64_t v41 = 0x1000000000000;
  }
  else {
    uint64_t v41 = 0;
  }
  uint64_t v42 = v39 | v40;
  if (v19) {
    uint64_t v43 = 0x100000000000000;
  }
  else {
    uint64_t v43 = 0;
  }
  uint64_t v44 = v38 | v42 | v41 | v43;
  if (v21) {
    __int16 v45 = 256;
  }
  else {
    __int16 v45 = 0;
  }
  return static Participant.VideoState.== infix(_:_:)(v33, v35, v44, v45 | v20);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.ScreenState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  if (a1[3]) {
    int v3 = 0x1000000;
  }
  else {
    int v3 = 0;
  }
  if (a1[2]) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  if (a1[1]) {
    int v5 = 256;
  }
  else {
    int v5 = 0;
  }
  unsigned int v6 = v5 | v2 | v4 | v3;
  if (a2[3]) {
    int v7 = 0x1000000;
  }
  else {
    int v7 = 0;
  }
  if (a2[2]) {
    int v8 = 0x10000;
  }
  else {
    int v8 = 0;
  }
  if (a2[1]) {
    int v9 = 256;
  }
  else {
    int v9 = 0;
  }
  return static Participant.ScreenState.== infix(_:_:)(v6, v9 | *a2 | v8 | v7);
}

void static Participant.MediaInfo.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = (uint64_t)v1;
  uint64_t v3 = (uint64_t)v0;
  if (*v0 != *v1)
  {
    outlined init with copy of Participant.MediaInfo((uint64_t)v0, (uint64_t)v69);
    outlined init with copy of Participant.MediaInfo(v2, (uint64_t)v58);
LABEL_8:
    outlined destroy of Participant.MediaInfo((uint64_t)v58);
    outlined destroy of Participant.MediaInfo((uint64_t)v69);
LABEL_9:
    outlined init with copy of Participant.MediaInfo(v3, (uint64_t)v56);
    outlined init with copy of Participant.MediaInfo(v2, (uint64_t)v55);
    goto LABEL_10;
  }
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v5 = *((void *)v0 + 1);
  outlined init with copy of Participant.MediaInfo((uint64_t)v0, (uint64_t)v69);
  outlined init with copy of Participant.MediaInfo(v2, (uint64_t)v58);
  if (v5 != v4) {
    goto LABEL_8;
  }
  uint64_t v6 = v70;
  unint64_t v7 = v71;
  uint64_t v8 = v72;
  uint64_t v9 = v73;
  uint64_t v10 = v74;
  __int16 v11 = v79;
  uint64_t v12 = v59;
  unint64_t v13 = v60;
  if (!v70)
  {
    uint64_t v22 = v75;
    uint64_t v23 = v76;
    uint64_t v24 = v77;
    uint64_t v25 = v78;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    uint64_t v28 = v63;
    uint64_t v29 = v64;
    uint64_t v30 = v65;
    uint64_t v31 = v66;
    uint64_t v32 = v67;
    __int16 v33 = v68;
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v58);
    outlined destroy of Participant.MediaInfo((uint64_t)v69);
    if (!v12)
    {
      swift_bridgeObjectRelease();
      outlined init with copy of Participant.MediaInfo(v3, (uint64_t)v56);
      outlined init with copy of Participant.MediaInfo(v2, (uint64_t)v55);
      goto LABEL_14;
    }
LABEL_18:
    v36[0] = v6;
    v36[1] = v7;
    void v36[2] = v8;
    uint64_t v37 = v9;
    uint64_t v38 = v10;
    uint64_t v39 = v22;
    uint64_t v40 = v23;
    uint64_t v41 = v24;
    uint64_t v42 = v25;
    __int16 v43 = v11;
    uint64_t v44 = v12;
    unint64_t v45 = v13;
    uint64_t v46 = v26;
    uint64_t v47 = v27;
    uint64_t v48 = v28;
    uint64_t v49 = v29;
    uint64_t v50 = v30;
    uint64_t v51 = v31;
    uint64_t v52 = v32;
    __int16 v53 = v33;
    outlined release of (Participant.VideoInfo?, Participant.VideoInfo?)((uint64_t)v36);
    goto LABEL_9;
  }
  if (!v59)
  {
    uint64_t v22 = v75;
    uint64_t v23 = v76;
    uint64_t v24 = v77;
    uint64_t v25 = v78;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    uint64_t v28 = v63;
    uint64_t v29 = v64;
    uint64_t v30 = v65;
    uint64_t v31 = v66;
    uint64_t v32 = v67;
    __int16 v33 = v68;
    swift_bridgeObjectRetain_n();
    outlined destroy of Participant.MediaInfo((uint64_t)v58);
    outlined destroy of Participant.MediaInfo((uint64_t)v69);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v80 = v70;
  int v81 = v71 & 0xFF010101;
  uint64x2_t v14 = (uint64x2_t)vdupq_n_s64(v71);
  int16x8_t v15 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1C376F240), (int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1C376F230));
  *(int8x8_t *)v15.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v15), (int8x8_t)0x1000100010001);
  unsigned __int32 v82 = vmovn_s16(v15).u32[0];
  __int16 v83 = v72 & 0x101;
  uint64_t v84 = v73;
  char v85 = v74;
  uint64_t v86 = v75;
  uint64_t v87 = v76;
  uint64_t v88 = v77;
  uint64_t v89 = v78;
  __int16 v90 = v79 & 0x101;
  uint64_t v91 = v59;
  int v92 = v60 & 0xFF010101;
  uint64x2_t v16 = (uint64x2_t)vdupq_n_s64(v60);
  int16x8_t v17 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_1C376F240), (int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_1C376F230));
  *(int8x8_t *)v17.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v17), (int8x8_t)0x1000100010001);
  unsigned __int32 v93 = vmovn_s16(v17).u32[0];
  __int16 v94 = v61 & 0x101;
  uint64_t v95 = v62;
  char v96 = v63;
  uint64_t v97 = v64;
  uint64_t v98 = v65;
  uint64_t v99 = v66;
  uint64_t v100 = v67;
  __int16 v101 = v68 & 0x101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  static Participant.VideoInfo.== infix(_:_:)((unsigned __int8 *)&v80, (unsigned __int8 *)&v91);
  char v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of Participant.MediaInfo((uint64_t)v58);
  outlined destroy of Participant.MediaInfo((uint64_t)v69);
  swift_bridgeObjectRelease();
  outlined init with copy of Participant.MediaInfo(v3, (uint64_t)v56);
  outlined init with copy of Participant.MediaInfo(v2, (uint64_t)v55);
  if (v19)
  {
LABEL_14:
    outlined init with copy of Participant?((uint64_t)&v57, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    uint64_t v20 = OUTLINED_FUNCTION_23_0();
    outlined init with copy of Participant?(v20, v21, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v37 == 1)
    {
      outlined destroy of Participant.MediaInfo((uint64_t)v55);
      outlined destroy of Participant.MediaInfo((uint64_t)v56);
      if (v54[3] == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        goto LABEL_11;
      }
    }
    else
    {
      outlined init with copy of Participant?((uint64_t)v36, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v54[3] != 1)
      {
        memcpy(__dst, v54, 0xD1uLL);
        static Participant.ScreenInfo.== infix(_:_:)();
        outlined destroy of Participant.ScreenInfo((uint64_t)__dst);
        outlined destroy of Participant.MediaInfo((uint64_t)v55);
        outlined destroy of Participant.MediaInfo((uint64_t)v56);
        outlined destroy of Participant.ScreenInfo((uint64_t)v35);
        outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        goto LABEL_11;
      }
      outlined destroy of Participant.MediaInfo((uint64_t)v55);
      outlined destroy of Participant.MediaInfo((uint64_t)v56);
      outlined destroy of Participant.ScreenInfo((uint64_t)v35);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?));
    goto LABEL_11;
  }
LABEL_10:
  outlined destroy of Participant.MediaInfo((uint64_t)v55);
  outlined destroy of Participant.MediaInfo((uint64_t)v56);
LABEL_11:
  OUTLINED_FUNCTION_28();
}

uint64_t static Participant.RemoteIdentifiers.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  OUTLINED_FUNCTION_35();
  int v6 = static NSObject.== infix(_:_:)();
  unsigned int v7 = (v2 == v4) & ~v5;
  if (v3) {
    unsigned int v7 = v6 & v5;
  }
  if (v6) {
    return v7;
  }
  else {
    return v6 & v5;
  }
}

uint64_t static Participant.CopresenceInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v8 & 1) != 0)) {
      char v6 = ((*(unsigned char *)(a1 + 32) & 1) == 0) ^ *(unsigned char *)(a2 + 32);
    }
  }
  return v6 & 1;
}

uint64_t static Participant.ScreenShareAttributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(void *)(a1 + 88) == *(void *)(a2 + 88)
    && *(void *)(a1 + 72) == *(void *)(a2 + 72)
    && *(void *)(a1 + 80) == *(void *)(a2 + 80))
  {
    char v2 = static CGAffineTransform.== infix(_:_:)();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

void *Participant.sortableHandle.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (v1) {
    id v2 = v1;
  }
  return v1;
}

uint64_t Participant.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int Participant.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant()
{
  return Hasher._finalize()();
}

uint64_t closure #1 in Array<A>.sorted()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  BOOL v7 = (void *)v6(a3, a4);
  if (v7)
  {
    char v8 = v7;
    id v9 = objc_msgSend(v7, sel_value);

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  unint64_t v13 = (void *)v6(a3, a4);
  if (v13)
  {
    uint64x2_t v14 = v13;
    id v15 = objc_msgSend(v13, sel_value);

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xE000000000000000;
  }
  if (v16 == v10 && v18 == v12) {
    char v20 = 0;
  }
  else {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20 & 1;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participant.Caption(0);
  uint64_t v116 = *(void *)(v4 - 8);
  uint64_t v117 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v112 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v123 = (char *)&v105 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v121 = (uint64_t *)((char *)&v105 - v10);
  MEMORY[0x1F4188790](v9);
  uint64_t v120 = (uint64_t *)((char *)&v105 - v11);
  Swift::Int v12 = *(void *)(a1 + 8);
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v12, 1, (void *)a1);
    }
    return;
  }
  Swift::Int v14 = v13;
  uint64_t v108 = specialized static Array._allocateUninitialized(_:)(v12 / 2);
  uint64_t v109 = v12;
  unint64_t v115 = v15;
  if (v12 <= 0) {
    goto LABEL_104;
  }
  Swift::Int v107 = v14;
  Swift::Int v16 = 0;
  unint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  Swift::Int v18 = v12;
  uint64_t v114 = (void *)a1;
  while (1)
  {
    Swift::Int v19 = v16;
    Swift::Int v20 = v16 + 1;
    Swift::Int v113 = v16;
    if (v16 + 1 >= v18)
    {
      Swift::Int v25 = v16 + 1;
    }
    else
    {
      Swift::Int v21 = *(void *)a1;
      uint64_t v22 = *(void *)(v116 + 72);
      Swift::Int v124 = v18;
      uint64_t v23 = v120;
      outlined init with copy of Participant.State();
      uint64_t v24 = v121;
      outlined init with copy of Participant.State();
      Swift::Int v122 = *v23;
      Swift::Int v119 = *v24;
      _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v24, (void (*)(void))type metadata accessor for Participant.Caption);
      Swift::Int v18 = v124;
      _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v23, (void (*)(void))type metadata accessor for Participant.Caption);
      Swift::Int v25 = v19 + 2;
      Swift::Int v111 = v21;
      uint64_t v125 = v22;
      if (v19 + 2 < v18)
      {
        uint64_t v110 = v17;
        uint64_t v118 = v22 * v20;
        Swift::Int v26 = v19 + 2;
        while (1)
        {
          uint64_t v27 = v120;
          int v28 = v122 < v119;
          outlined init with copy of Participant.State();
          uint64_t v29 = v121;
          outlined init with copy of Participant.State();
          int v30 = *v27 >= *v29;
          _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v29, (void (*)(void))type metadata accessor for Participant.Caption);
          _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v27, (void (*)(void))type metadata accessor for Participant.Caption);
          if (v28 == v30) {
            break;
          }
          v21 += v125;
          ++v26;
          Swift::Int v18 = v124;
          if (v26 >= v124)
          {
            Swift::Int v25 = v124;
            unint64_t v17 = v110;
            Swift::Int v19 = v113;
            goto LABEL_12;
          }
        }
        unint64_t v17 = v110;
        Swift::Int v25 = v26;
        Swift::Int v19 = v113;
        Swift::Int v18 = v124;
LABEL_12:
        Swift::Int v21 = v111;
      }
      if (v122 >= v119) {
        goto LABEL_30;
      }
      if (v25 < v19) {
        goto LABEL_141;
      }
      if (v19 >= v25)
      {
LABEL_30:
        a1 = (unint64_t)v114;
      }
      else
      {
        uint64_t v110 = v17;
        uint64_t v31 = 0;
        uint64_t v32 = v125;
        uint64_t v33 = v125 * (v25 - 1);
        Swift::Int v34 = v25 * v125;
        uint64_t v35 = v19 * v125;
        do
        {
          if (v19 != v25 + v31 - 1)
          {
            if (!v21) {
              goto LABEL_147;
            }
            Swift::Int v122 = v21 + v33;
            _s15ConversationKit11ParticipantVWObTm_5();
            if (v35 < v33 || v21 + v35 >= (unint64_t)(v21 + v34))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v35 != v33)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            _s15ConversationKit11ParticipantVWObTm_5();
            Swift::Int v21 = v111;
            uint64_t v32 = v125;
          }
          ++v19;
          --v31;
          v33 -= v32;
          v34 -= v32;
          v35 += v32;
        }
        while (v19 < v25 + v31);
        unint64_t v17 = v110;
        Swift::Int v19 = v113;
        a1 = (unint64_t)v114;
        Swift::Int v18 = v124;
      }
    }
    if (v25 < v18)
    {
      if (__OFSUB__(v25, v19)) {
        goto LABEL_139;
      }
      if (v25 - v19 < v107)
      {
        if (__OFADD__(v19, v107)) {
          goto LABEL_142;
        }
        if (v19 + v107 >= v18) {
          Swift::Int v37 = v18;
        }
        else {
          Swift::Int v37 = v19 + v107;
        }
        if (v37 < v19)
        {
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (v25 != v37)
        {
          uint64_t v110 = v17;
          Swift::Int v111 = v37;
          uint64_t v106 = v2;
          uint64_t v38 = *(void *)(v116 + 72);
          uint64_t v39 = v38 * (v25 - 1);
          uint64_t v118 = v38;
          Swift::Int v40 = v25 * v38;
          do
          {
            uint64_t v41 = 0;
            Swift::Int v122 = v25;
            Swift::Int v119 = v40;
            while (1)
            {
              Swift::Int v124 = v19;
              uint64_t v42 = v120;
              outlined init with copy of Participant.State();
              uint64_t v43 = v39;
              uint64_t v44 = v121;
              outlined init with copy of Participant.State();
              uint64_t v125 = *v42;
              uint64_t v45 = *v44;
              _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v44, (void (*)(void))type metadata accessor for Participant.Caption);
              _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)v42, (void (*)(void))type metadata accessor for Participant.Caption);
              if (v125 >= v45) {
                break;
              }
              if (!*(void *)a1) {
                goto LABEL_145;
              }
              Swift::Int v46 = v119;
              uint64_t v39 = v43;
              _s15ConversationKit11ParticipantVWObTm_5();
              swift_arrayInitWithTakeFrontToBack();
              _s15ConversationKit11ParticipantVWObTm_5();
              v41 -= v118;
              Swift::Int v19 = v124 + 1;
              Swift::Int v47 = v122;
              if (v122 == v124 + 1) {
                goto LABEL_47;
              }
            }
            Swift::Int v47 = v122;
            uint64_t v39 = v43;
            Swift::Int v46 = v119;
LABEL_47:
            Swift::Int v25 = v47 + 1;
            v39 += v118;
            Swift::Int v40 = v46 + v118;
            Swift::Int v19 = v113;
          }
          while (v25 != v111);
          Swift::Int v25 = v111;
          uint64_t v2 = v106;
          unint64_t v17 = v110;
        }
      }
    }
    if (v25 < v19) {
      goto LABEL_138;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v122 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v50 = *((void *)v17 + 2);
    unint64_t v49 = *((void *)v17 + 3);
    unint64_t v51 = v50 + 1;
    if (v50 >= v49 >> 1) {
      unint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v49 > 1), v50 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v51;
    uint64_t v52 = v17 + 32;
    __int16 v53 = &v17[16 * v50 + 32];
    Swift::Int v54 = v122;
    *(void *)__int16 v53 = v19;
    *((void *)v53 + 1) = v54;
    if (v50) {
      break;
    }
    unint64_t v51 = 1;
LABEL_97:
    a1 = (unint64_t)v114;
    Swift::Int v18 = v114[1];
    Swift::Int v16 = v122;
    if (v122 >= v18) {
      goto LABEL_105;
    }
  }
  while (1)
  {
    a1 = v51 - 1;
    if (v51 >= 4)
    {
      uint64_t v59 = &v52[16 * v51];
      uint64_t v60 = *((void *)v59 - 8);
      uint64_t v61 = *((void *)v59 - 7);
      BOOL v65 = __OFSUB__(v61, v60);
      uint64_t v62 = v61 - v60;
      if (v65) {
        goto LABEL_123;
      }
      uint64_t v64 = *((void *)v59 - 6);
      uint64_t v63 = *((void *)v59 - 5);
      BOOL v65 = __OFSUB__(v63, v64);
      uint64_t v57 = v63 - v64;
      char v58 = v65;
      if (v65) {
        goto LABEL_124;
      }
      uint64_t v66 = (void *)(v51 - 2);
      uint64_t v67 = &v52[16 * v51 - 32];
      uint64_t v69 = *(void *)v67;
      uint64_t v68 = *((void *)v67 + 1);
      BOOL v65 = __OFSUB__(v68, v69);
      uint64_t v70 = v68 - v69;
      if (v65) {
        goto LABEL_125;
      }
      BOOL v65 = __OFADD__(v57, v70);
      uint64_t v71 = v57 + v70;
      if (v65) {
        goto LABEL_127;
      }
      if (v71 >= v62)
      {
        uint64_t v89 = &v52[16 * a1];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v65 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v65) {
          goto LABEL_133;
        }
        BOOL v82 = v57 < v92;
        goto LABEL_86;
      }
    }
    else
    {
      if (v51 != 3)
      {
        uint64_t v83 = *((void *)v17 + 4);
        uint64_t v84 = *((void *)v17 + 5);
        BOOL v65 = __OFSUB__(v84, v83);
        uint64_t v76 = v84 - v83;
        char v77 = v65;
        goto LABEL_80;
      }
      uint64_t v56 = *((void *)v17 + 4);
      uint64_t v55 = *((void *)v17 + 5);
      BOOL v65 = __OFSUB__(v55, v56);
      uint64_t v57 = v55 - v56;
      char v58 = v65;
    }
    if (v58) {
      goto LABEL_126;
    }
    uint64_t v66 = (void *)(v51 - 2);
    uint64_t v72 = &v52[16 * v51 - 32];
    uint64_t v74 = *(void *)v72;
    uint64_t v73 = *((void *)v72 + 1);
    BOOL v75 = __OFSUB__(v73, v74);
    uint64_t v76 = v73 - v74;
    char v77 = v75;
    if (v75) {
      goto LABEL_128;
    }
    uint64_t v78 = &v52[16 * a1];
    uint64_t v80 = *(void *)v78;
    uint64_t v79 = *((void *)v78 + 1);
    BOOL v65 = __OFSUB__(v79, v80);
    uint64_t v81 = v79 - v80;
    if (v65) {
      goto LABEL_130;
    }
    if (__OFADD__(v76, v81)) {
      goto LABEL_132;
    }
    if (v76 + v81 >= v57)
    {
      BOOL v82 = v57 < v81;
LABEL_86:
      if (v82) {
        a1 = (unint64_t)v66;
      }
      goto LABEL_88;
    }
LABEL_80:
    if (v77) {
      goto LABEL_129;
    }
    char v85 = &v52[16 * a1];
    uint64_t v87 = *(void *)v85;
    uint64_t v86 = *((void *)v85 + 1);
    BOOL v65 = __OFSUB__(v86, v87);
    uint64_t v88 = v86 - v87;
    if (v65) {
      goto LABEL_131;
    }
    if (v88 < v76) {
      goto LABEL_97;
    }
LABEL_88:
    unint64_t v93 = a1 - 1;
    if (a1 - 1 >= v51)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v114) {
      goto LABEL_146;
    }
    __int16 v94 = v17;
    uint64_t v95 = &v52[16 * v93];
    uint64_t v96 = *(void *)v95;
    uint64_t v97 = &v52[16 * a1];
    uint64_t v98 = *((void *)v97 + 1);
    specialized _merge<A>(low:mid:high:buffer:by:)(*v114 + *(void *)(v116 + 72) * *(void *)v95, *v114 + *(void *)(v116 + 72) * *(void *)v97, *v114 + *(void *)(v116 + 72) * v98, v115);
    if (v2) {
      break;
    }
    if (v98 < v96) {
      goto LABEL_120;
    }
    if (a1 > *((void *)v94 + 2)) {
      goto LABEL_121;
    }
    *(void *)uint64_t v95 = v96;
    *(void *)&v52[16 * v93 + 8] = v98;
    unint64_t v99 = *((void *)v94 + 2);
    if (a1 >= v99) {
      goto LABEL_122;
    }
    unint64_t v17 = v94;
    unint64_t v51 = v99 - 1;
    memmove(&v52[16 * a1], v97 + 16, 16 * (v99 - 1 - a1));
    *((void *)v94 + 2) = v99 - 1;
    if (v99 <= 2) {
      goto LABEL_97;
    }
  }
LABEL_102:
  swift_bridgeObjectRelease();
  if (v109 >= -1) {
    goto LABEL_117;
  }
  __break(1u);
LABEL_104:
  unint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v51 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
  if (v51 >= 2)
  {
    Swift::Int v100 = *(void *)a1;
    while (1)
    {
      unint64_t v101 = v51 - 2;
      if (v51 < 2) {
        break;
      }
      if (!v100) {
        goto LABEL_148;
      }
      uint64_t v102 = *(void *)&v17[16 * v101 + 32];
      a1 = *(void *)&v17[16 * v51 + 24];
      specialized _merge<A>(low:mid:high:buffer:by:)(v100 + *(void *)(v116 + 72) * v102, v100 + *(void *)(v116 + 72) * *(void *)&v17[16 * v51 + 16], v100 + *(void *)(v116 + 72) * a1, v115);
      if (v2) {
        goto LABEL_102;
      }
      if ((uint64_t)a1 < v102) {
        goto LABEL_135;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v17);
      }
      if (v101 >= *((void *)v17 + 2)) {
        goto LABEL_136;
      }
      uint64_t v103 = &v17[16 * v101 + 32];
      *(void *)uint64_t v103 = v102;
      *((void *)v103 + 1) = a1;
      unint64_t v104 = *((void *)v17 + 2);
      if (v51 > v104) {
        goto LABEL_137;
      }
      memmove(&v17[16 * v51 + 16], &v17[16 * v51 + 32], 16 * (v104 - v51));
      *((void *)v17 + 2) = v104 - 1;
      unint64_t v51 = v104 - 1;
      if (v104 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v109 >= -1)
  {
LABEL_117:
    *(void *)(v108 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
}

uint64_t type metadata accessor for Participant.Caption(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant.Caption);
}

uint64_t _s15ConversationKit11ParticipantVWObTm_5()
{
  uint64_t v1 = OUTLINED_FUNCTION_9_21();
  v2(v1);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_90();
  v4(v3);
  return v0;
}

uint64_t partial apply for closure #1 in Array<A>.sorted()(uint64_t a1, uint64_t a2)
{
  return closure #1 in Array<A>.sorted()(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24)) & 1;
}

uint64_t sub_1C349C51C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 136) >= 2uLL) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  if (*(void *)(v0 + 328))
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t outlined init with copy of Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C349C5B4()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  return swift_deallocObject();
}

uint64_t sub_1C349C5F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t specialized Participant.ScreenShareAttributes.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_displayScale);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_doubleValue);
    double v7 = v6;
  }
  else
  {
    double v7 = 1.0;
  }
  id v8 = objc_msgSend(a1, sel_cornerRadius);
  uint64_t v9 = v8;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if (v8)
  {
    objc_msgSend(v8, sel_doubleValue);
    uint64_t v11 = v12;
  }
  id v13 = objc_msgSend(a1, sel_systemRootLayerTransform);
  if (v13)
  {
    Swift::Int v14 = v13;
    objc_msgSend(v13, sel_CGAffineTransformValue);
    double v16 = v25;
    uint64_t v15 = v26;
    uint64_t v18 = v27;
    double v17 = v28;
    uint64_t v19 = v29;
    uint64_t v10 = v30;
  }
  else
  {
    double v17 = 1.0;
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    uint64_t v15 = 0;
    double v16 = 1.0;
  }
  BOOL v20 = v9 == 0;
  id v21 = objc_msgSend(a1, sel_deviceFamily);
  id v22 = objc_msgSend(a1, sel_deviceHomeButtonType);
  id v23 = objc_msgSend(a1, sel_style);
  uint64_t result = swift_unknownObjectRelease();
  *(double *)a2 = v7;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v20;
  *(double *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v18;
  *(double *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v19;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v23;
  return result;
}

uint64_t outlined assign with take of Participant.Caption()
{
  uint64_t v1 = OUTLINED_FUNCTION_9_21();
  v2(v1);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_309();
  v4(v3);
  return v0;
}

id outlined copy of Participant.RemoteIdentifiers?(id result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

void *outlined consume of Participant.RemoteIdentifiers?(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *outlined release of Participant.CopresenceInfo?(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_6_6(a1);
  v3(v2, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
  return v1;
}

uint64_t outlined copy of Participant.CopresenceInfo?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *outlined consume of Participant.RemoteIdentifiers??(void *result)
{
  if (result != (void *)1) {
    return outlined consume of Participant.RemoteIdentifiers?(result);
  }
  return result;
}

uint64_t *outlined release of (Participant.CopresenceInfo?, Participant.CopresenceInfo?)(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  outlined consume of Participant.CopresenceInfo?(*a1, a1[1]);
  outlined consume of Participant.CopresenceInfo?(v2, v3);
  return a1;
}

uint64_t outlined release of (Participant.VideoInfo?, Participant.VideoInfo?)(uint64_t a1)
{
  return a1;
}

unint64_t _s10Foundation4UUIDVACSQAAWlTm_0(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers;
  if (!lazy protocol witness table cache variable for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Participant.Capabilities and conformance Participant.Capabilities()
{
  unint64_t result = lazy protocol witness table cache variable for type Participant.Capabilities and conformance Participant.Capabilities;
  if (!lazy protocol witness table cache variable for type Participant.Capabilities and conformance Participant.Capabilities)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.Capabilities and conformance Participant.Capabilities);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState()
{
  unint64_t result = lazy protocol witness table cache variable for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState;
  if (!lazy protocol witness table cache variable for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState);
  }
  return result;
}

unint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Participant.VideoProviderType()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [Participant.VideoProviderType] and conformance [A]);
}

unint64_t lazy protocol witness table accessor for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType()
{
  unint64_t result = lazy protocol witness table cache variable for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType;
  if (!lazy protocol witness table cache variable for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType);
  }
  return result;
}

unint64_t base witness table accessor for Equatable in Participant.Caption()
{
  return lazy protocol witness table accessor for type Participant.Caption and conformance Participant.Caption((uint64_t)&lazy protocol witness table cache variable for type Participant.Caption and conformance Participant.Caption);
}

unint64_t base witness table accessor for Equatable in Participant()
{
  return lazy protocol witness table accessor for type Participant.Caption and conformance Participant.Caption((uint64_t)&lazy protocol witness table cache variable for type Participant and conformance Participant);
}

unint64_t lazy protocol witness table accessor for type Participant.Caption and conformance Participant.Caption(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Participant(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v8 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_18;
      case 4u:
        uint64_t v10 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v12 = *(int *)(v11 + 48);
        id v13 = (char *)a1 + v12;
        Swift::Int v14 = (char *)a2 + v12;
        *(_OWORD *)id v13 = *(_OWORD *)((char *)a2 + v12);
        uint64_t v15 = *(void *)((char *)a2 + v12 + 16);
        uint64_t v16 = *(void *)((char *)a2 + v12 + 24);
        *((void *)v13 + 2) = v15;
        *((void *)v13 + 3) = v16;
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((void *)v13 + 5) = *((void *)v14 + 5);
        v13[48] = v14[48];
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        v13[88] = v14[88];
        v13[89] = v14[89];
        uint64_t v17 = *((void *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            uint64_t v18 = v13 + 96;
            uint64_t v19 = v14 + 96;
            size_t v20 = 209;
            goto LABEL_12;
          }
          uint64_t v22 = *((void *)v14 + 16);
          *((void *)v13 + 15) = v17;
          *((void *)v13 + 16) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
        }
        else
        {
          long long v21 = *((_OWORD *)v14 + 7);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
          *((_OWORD *)v13 + 7) = v21;
          *((void *)v13 + 16) = *((void *)v14 + 16);
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        long long v23 = *((_OWORD *)v14 + 10);
        *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 10) = v23;
        *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        uint64_t v18 = v13 + 208;
        uint64_t v19 = v14 + 208;
        *((void *)v13 + 25) = *((void *)v14 + 25);
        size_t v20 = 97;
LABEL_12:
        memcpy(v18, v19, v20);
        uint64_t v24 = *((void *)v14 + 39);
        if (v24)
        {
          uint64_t v25 = *((void *)v14 + 40);
          uint64_t v26 = *((void *)v14 + 41);
          *((void *)v13 + 39) = v24;
          *((void *)v13 + 40) = v25;
          *((void *)v13 + 41) = v26;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
          *((void *)v13 + 41) = *((void *)v14 + 41);
        }
        uint64_t v27 = *(int *)(v11 + 64);
        double v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = *((void *)v29 + 1);
        if (v30)
        {
          *(void *)double v28 = *(void *)v29;
          *((void *)v28 + 1) = v30;
          uint64_t v31 = *((void *)v29 + 3);
          *((void *)v28 + 2) = *((void *)v29 + 2);
          *((void *)v28 + 3) = v31;
          v28[32] = v29[32];
          *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
          *((void *)v28 + 7) = *((void *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *((_OWORD *)v29 + 1);
          *(_OWORD *)double v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v32;
          long long v33 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v33;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        uint64_t v34 = a3[5];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        uint64_t v38 = a3[6];
        uint64_t v39 = a3[7];
        Swift::Int v40 = (char *)a1 + v38;
        uint64_t v41 = (char *)a2 + v38;
        *(_DWORD *)Swift::Int v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        uint64_t v42 = (char *)a1 + v39;
        uint64_t v43 = (char *)a2 + v39;
        uint64_t v44 = *(void **)v43;
        if (*(void *)v43)
        {
          uint64_t v45 = *((void *)v43 + 1);
          *(void *)uint64_t v42 = v44;
          *((void *)v42 + 1) = v45;
          v42[16] = v43[16];
          uint64_t v46 = *((void *)v43 + 4);
          *((void *)v42 + 3) = *((void *)v43 + 3);
          *((void *)v42 + 4) = v46;
          id v47 = v44;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v48 = *((_OWORD *)v43 + 1);
          *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
          *((_OWORD *)v42 + 1) = v48;
          *((void *)v42 + 4) = *((void *)v43 + 4);
        }
        uint64_t v49 = a3[9];
        *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
        unint64_t v50 = (void *)((char *)a1 + v49);
        unint64_t v51 = (void *)((char *)a2 + v49);
        uint64_t v52 = v51[1];
        *unint64_t v50 = *v51;
        v50[1] = v52;
        uint64_t v53 = a3[11];
        *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
        *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
        uint64_t v54 = a3[12];
        uint64_t v55 = a3[13];
        uint64_t v56 = *(void **)((char *)a2 + v54);
        *(void *)((char *)a1 + v54) = v56;
        *((unsigned char *)a1 + v55) = *((unsigned char *)a2 + v55);
        uint64_t v57 = a3[14];
        char v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v61 = v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        uint64_t v63 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v64 = *(int *)(v63 + 20);
        BOOL v65 = &v58[v64];
        uint64_t v66 = &v59[v64];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v65, v66, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
        }
        v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
        uint64_t v68 = a3[16];
        *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
        *(void *)((char *)a1 + v68) = *(void *)((char *)a2 + v68);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return a1;
}

uint64_t destroy for Participant(uint64_t a1, int *a2)
{
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    case 4u:
      uint64_t v12 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v14 = a1 + *(int *)(v13 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v14 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v14 + 96);
      }
      if (*(void *)(v14 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + *(int *)(v13 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (id *)(a1 + a2[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v8 = a1 + a2[14];
  uint64_t v9 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v8 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v10, v9);
  }
  return swift_release();
}

unsigned char *initializeWithCopy for Participant(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_16;
    case 4u:
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      *(_OWORD *)uint64_t v11 = *(_OWORD *)&a2[v10];
      uint64_t v13 = *(void *)&a2[v10 + 16];
      uint64_t v14 = *(void *)&a2[v10 + 24];
      *((void *)v11 + 2) = v13;
      *((void *)v11 + 3) = v14;
      *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
      *((void *)v11 + 5) = *((void *)v12 + 5);
      v11[48] = v12[48];
      *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      v11[88] = v12[88];
      v11[89] = v12[89];
      uint64_t v15 = *((void *)v12 + 15);
      swift_bridgeObjectRetain();
      if (v15)
      {
        if (v15 == 1)
        {
          uint64_t v16 = v11 + 96;
          uint64_t v17 = v12 + 96;
          size_t v18 = 209;
          goto LABEL_10;
        }
        uint64_t v20 = *((void *)v12 + 16);
        *((void *)v11 + 15) = v15;
        *((void *)v11 + 16) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v15);
      }
      else
      {
        long long v19 = *((_OWORD *)v12 + 7);
        *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 7) = v19;
        *((void *)v11 + 16) = *((void *)v12 + 16);
      }
      *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
      long long v21 = *((_OWORD *)v12 + 10);
      *((_OWORD *)v11 + 9) = *((_OWORD *)v12 + 9);
      *((_OWORD *)v11 + 10) = v21;
      *((_OWORD *)v11 + 11) = *((_OWORD *)v12 + 11);
      v11[192] = v12[192];
      uint64_t v16 = v11 + 208;
      uint64_t v17 = v12 + 208;
      *((void *)v11 + 25) = *((void *)v12 + 25);
      size_t v18 = 97;
LABEL_10:
      memcpy(v16, v17, v18);
      uint64_t v22 = *((void *)v12 + 39);
      if (v22)
      {
        uint64_t v23 = *((void *)v12 + 40);
        uint64_t v24 = *((void *)v12 + 41);
        *((void *)v11 + 39) = v22;
        *((void *)v11 + 40) = v23;
        *((void *)v11 + 41) = v24;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v11 + 312) = *(_OWORD *)(v12 + 312);
        *((void *)v11 + 41) = *((void *)v12 + 41);
      }
      uint64_t v25 = *(int *)(v9 + 64);
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = *((void *)v27 + 1);
      if (v28)
      {
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = v28;
        uint64_t v29 = *((void *)v27 + 3);
        *((void *)v26 + 2) = *((void *)v27 + 2);
        *((void *)v26 + 3) = v29;
        v26[32] = v27[32];
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *((void *)v26 + 7) = *((void *)v27 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *((_OWORD *)v27 + 1);
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v30;
        long long v31 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v31;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      uint64_t v32 = a3[5];
      long long v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v35 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      uint64_t v36 = a3[6];
      uint64_t v37 = a3[7];
      uint64_t v38 = &a1[v36];
      uint64_t v39 = &a2[v36];
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      Swift::Int v40 = &a1[v37];
      uint64_t v41 = &a2[v37];
      uint64_t v42 = *(void **)v41;
      if (*(void *)v41)
      {
        uint64_t v43 = *((void *)v41 + 1);
        *(void *)Swift::Int v40 = v42;
        *((void *)v40 + 1) = v43;
        v40[16] = v41[16];
        uint64_t v44 = *((void *)v41 + 4);
        *((void *)v40 + 3) = *((void *)v41 + 3);
        *((void *)v40 + 4) = v44;
        id v45 = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *((_OWORD *)v41 + 1);
        *(_OWORD *)Swift::Int v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v46;
        *((void *)v40 + 4) = *((void *)v41 + 4);
      }
      uint64_t v47 = a3[9];
      *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
      long long v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      uint64_t v50 = v49[1];
      *long long v48 = *v49;
      v48[1] = v50;
      uint64_t v51 = a3[11];
      a1[a3[10]] = a2[a3[10]];
      *(void *)&a1[v51] = *(void *)&a2[v51];
      uint64_t v52 = a3[12];
      uint64_t v53 = a3[13];
      uint64_t v54 = *(void **)&a2[v52];
      *(void *)&a1[v52] = v54;
      a1[v53] = a2[v53];
      uint64_t v55 = a3[14];
      uint64_t v56 = &a1[v55];
      uint64_t v57 = &a2[v55];
      uint64_t v58 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v59 = v54;
      if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
      }
      uint64_t v61 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v62 = *(int *)(v61 + 20);
      uint64_t v63 = &v56[v62];
      uint64_t v64 = &v57[v62];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v57[v62], 1, v58))
      {
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v63, v64, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v58);
      }
      v56[*(int *)(v61 + 24)] = v57[*(int *)(v61 + 24)];
      uint64_t v66 = a3[16];
      a1[a3[15]] = a2[a3[15]];
      *(void *)&a1[v66] = *(void *)&a2[v66];
      swift_retain();
      return a1;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for Participant(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)a1, (void (*)(void))type metadata accessor for Participant.State);
    uint64_t v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_17;
      case 4u:
        uint64_t v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        *(_OWORD *)uint64_t v11 = *(_OWORD *)&a2[v10];
        *((void *)v11 + 2) = *(void *)&a2[v10 + 16];
        uint64_t v13 = *(void *)&a2[v10 + 24];
        *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
        *((void *)v11 + 3) = v13;
        *((void *)v11 + 5) = *((void *)v12 + 5);
        v11[48] = v12[48];
        long long v14 = *(_OWORD *)(v12 + 72);
        long long v15 = *(_OWORD *)(v12 + 56);
        v11[88] = v12[88];
        *(_OWORD *)(v11 + 56) = v15;
        *(_OWORD *)(v11 + 72) = v14;
        v11[89] = v12[89];
        uint64_t v16 = *((void *)v12 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            uint64_t v17 = v11 + 96;
            size_t v18 = v12 + 96;
            size_t v19 = 209;
            goto LABEL_11;
          }
          *((void *)v11 + 15) = v16;
          *((void *)v11 + 16) = *((void *)v12 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v16);
        }
        else
        {
          long long v20 = *((_OWORD *)v12 + 6);
          long long v21 = *((_OWORD *)v12 + 7);
          *((void *)v11 + 16) = *((void *)v12 + 16);
          *((_OWORD *)v11 + 6) = v20;
          *((_OWORD *)v11 + 7) = v21;
        }
        *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
        *((void *)v11 + 18) = *((void *)v12 + 18);
        *((void *)v11 + 19) = *((void *)v12 + 19);
        long long v22 = *((_OWORD *)v12 + 10);
        long long v23 = *((_OWORD *)v12 + 11);
        v11[192] = v12[192];
        *((_OWORD *)v11 + 10) = v22;
        *((_OWORD *)v11 + 11) = v23;
        *((void *)v11 + 25) = *((void *)v12 + 25);
        uint64_t v17 = v11 + 208;
        size_t v18 = v12 + 208;
        size_t v19 = 97;
LABEL_11:
        memcpy(v17, v18, v19);
        uint64_t v24 = *((void *)v12 + 39);
        if (v24)
        {
          uint64_t v25 = *((void *)v12 + 40);
          *((void *)v11 + 39) = v24;
          *((void *)v11 + 40) = v25;
          *((void *)v11 + 41) = *((void *)v12 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v26 = *(_OWORD *)(v12 + 312);
          *((void *)v11 + 41) = *((void *)v12 + 41);
          *(_OWORD *)(v11 + 312) = v26;
        }
        uint64_t v27 = *(int *)(v9 + 64);
        uint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        if (*((void *)v29 + 1))
        {
          *(void *)uint64_t v28 = *(void *)v29;
          *((void *)v28 + 1) = *((void *)v29 + 1);
          *((void *)v28 + 2) = *((void *)v29 + 2);
          *((void *)v28 + 3) = *((void *)v29 + 3);
          v28[32] = v29[32];
          *((void *)v28 + 5) = *((void *)v29 + 5);
          *((void *)v28 + 6) = *((void *)v29 + 6);
          *((void *)v28 + 7) = *((void *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v30 = *(_OWORD *)v29;
          long long v31 = *((_OWORD *)v29 + 1);
          long long v32 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v32;
          *(_OWORD *)uint64_t v28 = v30;
          *((_OWORD *)v28 + 1) = v31;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v33 = a3[5];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  uint64_t v37 = a3[6];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  v38[2] = v39[2];
  v38[3] = v39[3];
  v38[4] = v39[4];
  uint64_t v40 = a3[7];
  uint64_t v41 = (uint64_t)&a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = *(void **)&a1[v40];
  uint64_t v44 = *(void **)&a2[v40];
  if (v43)
  {
    if (v44)
    {
      *(void *)uint64_t v41 = v44;
      id v45 = v44;

      uint64_t v46 = *((void *)v42 + 1);
      *(unsigned char *)(v41 + 16) = v42[16];
      *(void *)(v41 + 8) = v46;
      *(void *)(v41 + 24) = *((void *)v42 + 3);
      *(void *)(v41 + 32) = *((void *)v42 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers(v41);
      uint64_t v49 = *((void *)v42 + 4);
      long long v50 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *(_OWORD *)(v41 + 16) = v50;
      *(void *)(v41 + 32) = v49;
    }
  }
  else if (v44)
  {
    *(void *)uint64_t v41 = v44;
    uint64_t v47 = *((void *)v42 + 1);
    *(unsigned char *)(v41 + 16) = v42[16];
    *(void *)(v41 + 8) = v47;
    *(void *)(v41 + 24) = *((void *)v42 + 3);
    *(void *)(v41 + 32) = *((void *)v42 + 4);
    id v48 = v44;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *(_OWORD *)v42;
    long long v52 = *((_OWORD *)v42 + 1);
    *(void *)(v41 + 32) = *((void *)v42 + 4);
    *(_OWORD *)uint64_t v41 = v51;
    *(_OWORD *)(v41 + 16) = v52;
  }
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[9];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  *(void *)uint64_t v54 = *(void *)v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[12];
  uint64_t v57 = *(void **)&a1[v56];
  uint64_t v58 = *(void **)&a2[v56];
  *(void *)&a1[v56] = v58;
  id v59 = v58;

  a1[a3[13]] = a2[a3[13]];
  uint64_t v60 = a3[14];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v63);
  int v65 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63);
  if (EnumTagSinglePayload)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v66 = *(void *)(v63 - 8);
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v61, v63);
LABEL_30:
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v61, v62, v63);
LABEL_31:
  uint64_t v68 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v69 = *(int *)(v68 + 20);
  uint64_t v70 = &v61[v69];
  uint64_t v71 = &v62[v69];
  int v72 = __swift_getEnumTagSinglePayload((uint64_t)&v61[v69], 1, v63);
  int v73 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v63);
  if (!v72)
  {
    uint64_t v74 = *(void *)(v63 - 8);
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v70, v71, v63);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v63);
    goto LABEL_36;
  }
  if (v73)
  {
LABEL_36:
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v70, v71, v63);
  __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v63);
LABEL_37:
  v61[*(int *)(v68 + 24)] = v62[*(int *)(v68 + 24)];
  a1[a3[15]] = a2[a3[15]];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for Participant(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_5;
    case 4u:
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
      uint64_t v9 = *(int *)(v8 + 64);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      long long v13 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v13;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v15 = a3[5];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  long long v21 = &a1[v19];
  long long v22 = &a2[v19];
  *(_DWORD *)long long v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  long long v23 = &a1[v20];
  uint64_t v24 = &a2[v20];
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)long long v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  uint64_t v26 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  uint64_t v27 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  uint64_t v28 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[14];
  long long v30 = &a1[v29];
  long long v31 = &a2[v29];
  uint64_t v32 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v34 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v35 = *(int *)(v34 + 20);
  uint64_t v36 = &v30[v35];
  uint64_t v37 = &v31[v35];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v35], 1, v32))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v36, v37, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
  }
  v30[*(int *)(v34 + 24)] = v31[*(int *)(v34 + 24)];
  uint64_t v39 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  *(void *)&a1[v39] = *(void *)&a2[v39];
  return a1;
}

char *assignWithTake for Participant(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)a1, (void (*)(void))type metadata accessor for Participant.State);
    uint64_t v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_5;
      case 4u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        long long v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        long long v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v15 = a3[5];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  long long v21 = &a1[v19];
  long long v22 = &a2[v19];
  char *v21 = *v22;
  v21[1] = v22[1];
  void v21[2] = v22[2];
  v21[3] = v22[3];
  v21[4] = v22[4];
  uint64_t v23 = (uint64_t)&a1[v20];
  uint64_t v24 = &a2[v20];
  long long v25 = *(void **)&a1[v20];
  if (v25)
  {
    if (*(void *)v24)
    {
      *(void *)uint64_t v23 = *(void *)v24;

      *(void *)(v23 + 8) = *((void *)v24 + 1);
      *(unsigned char *)(v23 + 16) = v24[16];
      uint64_t v26 = *((void *)v24 + 4);
      *(void *)(v23 + 24) = *((void *)v24 + 3);
      *(void *)(v23 + 32) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers(v23);
  }
  long long v27 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v27;
  *(void *)(v23 + 32) = *((void *)v24 + 4);
LABEL_11:
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  long long v30 = &a2[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(void *)&a1[v33] = *(void *)&a2[v33];
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  uint64_t v35 = *(void **)&a1[v34];
  *(void *)&a1[v34] = *(void *)&a2[v34];

  uint64_t v36 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v39);
  int v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39);
  if (EnumTagSinglePayload)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v42 = *(void *)(v39 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v39);
LABEL_16:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v37, v38, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v37, v38, v39);
LABEL_17:
  uint64_t v44 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v45 = *(int *)(v44 + 20);
  uint64_t v46 = &v37[v45];
  uint64_t v47 = &v38[v45];
  int v48 = __swift_getEnumTagSinglePayload((uint64_t)&v37[v45], 1, v39);
  int v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v39);
  if (!v48)
  {
    uint64_t v50 = *(void *)(v39 - 8);
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v46, v47, v39);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v39);
    goto LABEL_22;
  }
  if (v49)
  {
LABEL_22:
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v46, v47, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v39);
LABEL_23:
  v37[*(int *)(v44 + 24)] = v38[*(int *)(v44 + 24)];
  uint64_t v52 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  *(void *)&a1[v52] = *(void *)&a2[v52];
  swift_release();
  return a1;
}

uint64_t sub_1C349F1F0()
{
  uint64_t v3 = OUTLINED_FUNCTION_55_1();
  type metadata accessor for Participant.State(v3);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_1_5();
    if (*(_DWORD *)(v9 + 84) == v0)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[5];
    }
    else
    {
      if (v0 == 0x7FFFFFFF) {
        return OUTLINED_FUNCTION_46_0(*(void *)(v1 + v2[8]));
      }
      uint64_t v6 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v10 = v2[14];
    }
    uint64_t v7 = v1 + v10;
  }
  return __swift_getEnumTagSinglePayload(v7, v0, v6);
}

void sub_1C349F2AC()
{
  OUTLINED_FUNCTION_151_4();
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_1_5();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[5];
    }
    else
    {
      if (v3 == 0x7FFFFFFF)
      {
        *(void *)(v1 + v2[8]) = (v0 - 1);
        return;
      }
      uint64_t v6 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v10 = v2[14];
    }
    uint64_t v7 = v1 + v10;
  }
  __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for Participant.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_18;
      case 4u:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v11 = *(int *)(v10 + 48);
        long long v12 = (char *)a1 + v11;
        long long v13 = (char *)a2 + v11;
        *(_OWORD *)long long v12 = *(_OWORD *)((char *)a2 + v11);
        uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 16);
        uint64_t v15 = *(uint64_t *)((char *)a2 + v11 + 24);
        *((void *)v12 + 2) = v14;
        *((void *)v12 + 3) = v15;
        *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
        *((void *)v12 + 5) = *((void *)v13 + 5);
        v12[48] = v13[48];
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
        *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
        v12[88] = v13[88];
        v12[89] = v13[89];
        uint64_t v16 = *((void *)v13 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            uint64_t v17 = v12 + 96;
            uint64_t v18 = v13 + 96;
            size_t v19 = 209;
            goto LABEL_12;
          }
          uint64_t v21 = *((void *)v13 + 16);
          *((void *)v12 + 15) = v16;
          *((void *)v12 + 16) = v21;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v16);
        }
        else
        {
          long long v20 = *((_OWORD *)v13 + 7);
          *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
          *((_OWORD *)v12 + 7) = v20;
          *((void *)v12 + 16) = *((void *)v13 + 16);
        }
        *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
        long long v22 = *((_OWORD *)v13 + 10);
        *((_OWORD *)v12 + 9) = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 10) = v22;
        *((_OWORD *)v12 + 11) = *((_OWORD *)v13 + 11);
        v12[192] = v13[192];
        uint64_t v17 = v12 + 208;
        uint64_t v18 = v13 + 208;
        *((void *)v12 + 25) = *((void *)v13 + 25);
        size_t v19 = 97;
LABEL_12:
        memcpy(v17, v18, v19);
        uint64_t v23 = *((void *)v13 + 39);
        if (v23)
        {
          uint64_t v24 = *((void *)v13 + 40);
          uint64_t v25 = *((void *)v13 + 41);
          *((void *)v12 + 39) = v23;
          *((void *)v12 + 40) = v24;
          *((void *)v12 + 41) = v25;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 312) = *(_OWORD *)(v13 + 312);
          *((void *)v12 + 41) = *((void *)v13 + 41);
        }
        uint64_t v26 = *(int *)(v10 + 64);
        long long v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = *((void *)v28 + 1);
        if (v29)
        {
          *(void *)long long v27 = *(void *)v28;
          *((void *)v27 + 1) = v29;
          uint64_t v30 = *((void *)v28 + 3);
          *((void *)v27 + 2) = *((void *)v28 + 2);
          *((void *)v27 + 3) = v30;
          v27[32] = v28[32];
          *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
          *((void *)v27 + 7) = *((void *)v28 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v31 = *((_OWORD *)v28 + 1);
          *(_OWORD *)long long v27 = *(_OWORD *)v28;
          *((_OWORD *)v27 + 1) = v31;
          long long v32 = *((_OWORD *)v28 + 3);
          *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
          *((_OWORD *)v27 + 3) = v32;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t destroy for Participant.State(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      uint64_t v3 = type metadata accessor for Date();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 4:
      uint64_t v5 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v7 = a1 + *(int *)(v6 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v7 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v7 + 96);
      }
      if (*(void *)(v7 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t result = *(void *)(a1 + *(int *)(v6 + 64) + 8);
      if (result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for Participant.State(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_16;
    case 4u:
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(_OWORD *)uint64_t v10 = *(_OWORD *)&a2[v9];
      uint64_t v12 = *(void *)&a2[v9 + 16];
      uint64_t v13 = *(void *)&a2[v9 + 24];
      *((void *)v10 + 2) = v12;
      *((void *)v10 + 3) = v13;
      *((_WORD *)v10 + 16) = *((_WORD *)v11 + 16);
      *((void *)v10 + 5) = *((void *)v11 + 5);
      v10[48] = v11[48];
      *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      v10[88] = v11[88];
      v10[89] = v11[89];
      uint64_t v14 = *((void *)v11 + 15);
      swift_bridgeObjectRetain();
      if (v14)
      {
        if (v14 == 1)
        {
          uint64_t v15 = v10 + 96;
          uint64_t v16 = v11 + 96;
          size_t v17 = 209;
          goto LABEL_10;
        }
        uint64_t v19 = *((void *)v11 + 16);
        *((void *)v10 + 15) = v14;
        *((void *)v10 + 16) = v19;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))((uint64_t)(v10 + 96), (uint64_t)(v11 + 96), v14);
      }
      else
      {
        long long v18 = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 7) = v18;
        *((void *)v10 + 16) = *((void *)v11 + 16);
      }
      *((_DWORD *)v10 + 34) = *((_DWORD *)v11 + 34);
      long long v20 = *((_OWORD *)v11 + 10);
      *((_OWORD *)v10 + 9) = *((_OWORD *)v11 + 9);
      *((_OWORD *)v10 + 10) = v20;
      *((_OWORD *)v10 + 11) = *((_OWORD *)v11 + 11);
      v10[192] = v11[192];
      uint64_t v15 = v10 + 208;
      uint64_t v16 = v11 + 208;
      *((void *)v10 + 25) = *((void *)v11 + 25);
      size_t v17 = 97;
LABEL_10:
      memcpy(v15, v16, v17);
      uint64_t v21 = *((void *)v11 + 39);
      if (v21)
      {
        uint64_t v22 = *((void *)v11 + 40);
        uint64_t v23 = *((void *)v11 + 41);
        *((void *)v10 + 39) = v21;
        *((void *)v10 + 40) = v22;
        *((void *)v10 + 41) = v23;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 312) = *(_OWORD *)(v11 + 312);
        *((void *)v10 + 41) = *((void *)v11 + 41);
      }
      uint64_t v24 = *(int *)(v8 + 64);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = *((void *)v26 + 1);
      if (v27)
      {
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = v27;
        uint64_t v28 = *((void *)v26 + 3);
        *((void *)v25 + 2) = *((void *)v26 + 2);
        *((void *)v25 + 3) = v28;
        v25[32] = v26[32];
        *(_OWORD *)(v25 + 40) = *(_OWORD *)(v26 + 40);
        *((void *)v25 + 7) = *((void *)v26 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *((_OWORD *)v26 + 1);
        *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v29;
        long long v30 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v30;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

char *assignWithCopy for Participant.State(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)a1, (void (*)(void))type metadata accessor for Participant.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_17;
      case 4u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        *(_OWORD *)uint64_t v10 = *(_OWORD *)&a2[v9];
        *((void *)v10 + 2) = *(void *)&a2[v9 + 16];
        uint64_t v12 = *(void *)&a2[v9 + 24];
        *((_WORD *)v10 + 16) = *((_WORD *)v11 + 16);
        *((void *)v10 + 3) = v12;
        *((void *)v10 + 5) = *((void *)v11 + 5);
        v10[48] = v11[48];
        long long v13 = *(_OWORD *)(v11 + 72);
        long long v14 = *(_OWORD *)(v11 + 56);
        v10[88] = v11[88];
        *(_OWORD *)(v10 + 56) = v14;
        *(_OWORD *)(v10 + 72) = v13;
        v10[89] = v11[89];
        uint64_t v15 = *((void *)v11 + 15);
        swift_bridgeObjectRetain();
        if (v15)
        {
          if (v15 == 1)
          {
            uint64_t v16 = v10 + 96;
            size_t v17 = v11 + 96;
            size_t v18 = 209;
            goto LABEL_11;
          }
          *((void *)v10 + 15) = v15;
          *((void *)v10 + 16) = *((void *)v11 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v10 + 96), (uint64_t)(v11 + 96), v15);
        }
        else
        {
          long long v19 = *((_OWORD *)v11 + 6);
          long long v20 = *((_OWORD *)v11 + 7);
          *((void *)v10 + 16) = *((void *)v11 + 16);
          *((_OWORD *)v10 + 6) = v19;
          *((_OWORD *)v10 + 7) = v20;
        }
        *((_DWORD *)v10 + 34) = *((_DWORD *)v11 + 34);
        *((void *)v10 + 18) = *((void *)v11 + 18);
        *((void *)v10 + 19) = *((void *)v11 + 19);
        long long v21 = *((_OWORD *)v11 + 10);
        long long v22 = *((_OWORD *)v11 + 11);
        v10[192] = v11[192];
        *((_OWORD *)v10 + 10) = v21;
        *((_OWORD *)v10 + 11) = v22;
        *((void *)v10 + 25) = *((void *)v11 + 25);
        uint64_t v16 = v10 + 208;
        size_t v17 = v11 + 208;
        size_t v18 = 97;
LABEL_11:
        memcpy(v16, v17, v18);
        uint64_t v23 = *((void *)v11 + 39);
        if (v23)
        {
          uint64_t v24 = *((void *)v11 + 40);
          *((void *)v10 + 39) = v23;
          *((void *)v10 + 40) = v24;
          *((void *)v10 + 41) = *((void *)v11 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v25 = *(_OWORD *)(v11 + 312);
          *((void *)v10 + 41) = *((void *)v11 + 41);
          *(_OWORD *)(v10 + 312) = v25;
        }
        uint64_t v26 = *(int *)(v8 + 64);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        if (*((void *)v28 + 1))
        {
          *(void *)uint64_t v27 = *(void *)v28;
          *((void *)v27 + 1) = *((void *)v28 + 1);
          *((void *)v27 + 2) = *((void *)v28 + 2);
          *((void *)v27 + 3) = *((void *)v28 + 3);
          v27[32] = v28[32];
          *((void *)v27 + 5) = *((void *)v28 + 5);
          *((void *)v27 + 6) = *((void *)v28 + 6);
          *((void *)v27 + 7) = *((void *)v28 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v29 = *(_OWORD *)v28;
          long long v30 = *((_OWORD *)v28 + 1);
          long long v31 = *((_OWORD *)v28 + 3);
          *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
          *((_OWORD *)v27 + 3) = v31;
          *(_OWORD *)uint64_t v27 = v29;
          *((_OWORD *)v27 + 1) = v30;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

char *initializeWithTake for Participant.State(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v13 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_5;
    case 4u:
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      long long v12 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v12;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for Participant.State(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantVWOhTm_7((uint64_t)a1, (void (*)(void))type metadata accessor for Participant.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_5;
      case 4u:
        uint64_t v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        long long v11 = *((_OWORD *)v10 + 1);
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v11;
        long long v12 = *((_OWORD *)v10 + 3);
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 3) = v12;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t initializeWithCopy for Participant.RemoteIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Participant.RemoteIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Participant.RemoteIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Participant.RemoteIdentifiers()
{
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Participant.Capabilities(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.Capabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for Participant.Capabilities()
{
}

uint64_t destroy for Participant.MediaInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120) >= 2uLL) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  }
  uint64_t result = *(void *)(a1 + 312);
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v5 = (_OWORD *)(a1 + 96);
  id v6 = (_OWORD *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = (void *)(a1 + 96);
      uint64_t v9 = v6;
      size_t v10 = 209;
      goto LABEL_7;
    }
    uint64_t v12 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = v7;
    *(void *)(a1 + 128) = v12;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v7 - 8))(a1 + 96, v6, v7);
  }
  else
  {
    long long v11 = v6[1];
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 112) = v11;
    *(void *)(a1 + 128) = *((void *)v6 + 4);
  }
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  long long v13 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v13;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v8 = (void *)(a1 + 208);
  uint64_t v9 = (const void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  size_t v10 = 97;
LABEL_7:
  memcpy(v8, v9, v10);
  uint64_t v14 = *(void *)(a2 + 312);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 320);
    uint64_t v16 = *(void *)(a2 + 328);
    *(void *)(a1 + 312) = v14;
    *(void *)(a1 + 320) = v15;
    *(void *)(a1 + 328) = v16;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
  }
  return a1;
}

uint64_t assignWithCopy for Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  id v6 = (_OWORD *)(a1 + 96);
  uint64_t v7 = (long long *)(a2 + 96);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a2 + 120);
  if (v8 != 1)
  {
    if (v9 == 1)
    {
      outlined destroy of Participant.ScreenInfo(a1 + 96);
      goto LABEL_7;
    }
    if (v8)
    {
      if (v9)
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
LABEL_17:
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
        *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
        *(unsigned char *)(a1 + 139) = *(unsigned char *)(a2 + 139);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        long long v19 = *(_OWORD *)(a2 + 160);
        long long v20 = *(_OWORD *)(a2 + 176);
        *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
        *(_OWORD *)(a1 + 160) = v19;
        *(_OWORD *)(a1 + 176) = v20;
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        goto LABEL_18;
      }
      __swift_destroy_boxed_opaque_existential_1(a1 + 96);
    }
    else if (v9)
    {
      *(void *)(a1 + 120) = v9;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 96, a2 + 96);
      goto LABEL_17;
    }
    long long v17 = *v7;
    long long v18 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *id v6 = v17;
    *(_OWORD *)(a1 + 112) = v18;
    goto LABEL_17;
  }
  if (!v9)
  {
    long long v13 = *v7;
    long long v14 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *id v6 = v13;
    *(_OWORD *)(a1 + 112) = v14;
    goto LABEL_12;
  }
  if (v9 == 1)
  {
LABEL_7:
    size_t v10 = (void *)(a1 + 96);
    long long v11 = (const void *)(a2 + 96);
    size_t v12 = 209;
    goto LABEL_19;
  }
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 96, a2 + 96);
LABEL_12:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v15 = *(_OWORD *)(a2 + 160);
  long long v16 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v15;
  *(_OWORD *)(a1 + 176) = v16;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
LABEL_18:
  size_t v10 = (void *)(a1 + 208);
  long long v11 = (const void *)(a2 + 208);
  size_t v12 = 97;
LABEL_19:
  memcpy(v10, v11, v12);
  long long v21 = (_OWORD *)(a1 + 312);
  long long v22 = (_OWORD *)(a2 + 312);
  uint64_t v23 = *(void *)(a2 + 312);
  if (*(void *)(a1 + 312))
  {
    if (v23)
    {
      uint64_t v24 = *(void *)(a2 + 320);
      *(void *)(a1 + 312) = v23;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 320) = v24;
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.CaptionInfo(a1 + 312);
      uint64_t v26 = *(void *)(a2 + 328);
      _OWORD *v21 = *v22;
      *(void *)(a1 + 328) = v26;
    }
  }
  else if (v23)
  {
    uint64_t v25 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = v23;
    *(void *)(a1 + 320) = v25;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *v22;
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    _OWORD *v21 = v27;
  }
  return a1;
}

uint64_t outlined destroy of Participant.CaptionInfo(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy336_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x150uLL);
}

uint64_t assignWithTake for Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v5 = *(void *)(a1 + 120);
  if (v5 == 1) {
    goto LABEL_4;
  }
  if (*(void *)(a2 + 120) == 1)
  {
    outlined destroy of Participant.ScreenInfo(a1 + 96);
LABEL_4:
    id v6 = (void *)(a1 + 96);
    uint64_t v7 = (const void *)(a2 + 96);
    size_t v8 = 209;
    goto LABEL_8;
  }
  if (v5) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  }
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  *(unsigned char *)(a1 + 139) = *(unsigned char *)(a2 + 139);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  long long v11 = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 144) = v11;
  id v6 = (void *)(a1 + 208);
  uint64_t v7 = (const void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  size_t v8 = 97;
LABEL_8:
  memcpy(v6, v7, v8);
  if (!*(void *)(a1 + 312))
  {
LABEL_12:
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    return a1;
  }
  uint64_t v12 = *(void *)(a2 + 312);
  if (!v12)
  {
    outlined destroy of Participant.CaptionInfo(a1 + 312);
    goto LABEL_12;
  }
  *(void *)(a1 + 312) = v12;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.MediaInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 336))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.MediaInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 336) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 336) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for Participant.MediaInfo()
{
}

void type metadata accessor for Participant.VideoDegradedState()
{
}

uint64_t __swift_memcpy10_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Participant.VideoState(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[10])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.VideoState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for Participant.VideoState()
{
}

uint64_t getEnumTagSinglePayload for Participant.ScreenState(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[4])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.ScreenState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for Participant.ScreenState()
{
}

unsigned char *storeEnumTagSinglePayload for Participant.VideoDegradedState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C34A13ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for Participant.VideoProviderType()
{
}

uint64_t destroy for Participant.CopresenceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Participant.CopresenceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Participant.CopresenceInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Participant.CopresenceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Participant.CopresenceInfo()
{
}

uint64_t getEnumTagSinglePayload for Participant.AVInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[16])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.AVInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for Participant.AVInfo()
{
}

uint64_t initializeWithCopy for Participant.VideoInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Participant.VideoInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  *(unsigned char *)(a1 + 15) = *(unsigned char *)(a2 + 15);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

uint64_t assignWithTake for Participant.VideoInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  *(unsigned char *)(a1 + 15) = *(unsigned char *)(a2 + 15);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.VideoInfo(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 74))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.VideoInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 74) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 74) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Participant.VideoInfo()
{
}

unsigned char *storeEnumTagSinglePayload for Participant.VideoInfo.CameraType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C34A1984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for Participant.VideoInfo.CameraType()
{
}

uint64_t getEnumTagSinglePayload for Participant.ScreenShareAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Participant.ScreenShareAttributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 96) = v3;
  return result;
}

void type metadata accessor for Participant.ScreenShareAttributes()
{
}

uint64_t initializeWithCopy for Participant.ScreenInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x61uLL);
  return a1;
}

uint64_t assignWithCopy for Participant.ScreenInfo(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
  *(unsigned char *)(a1 + 42) = *((unsigned char *)a2 + 42);
  *(unsigned char *)(a1 + 43) = *((unsigned char *)a2 + 43);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  long long v7 = a2[4];
  long long v8 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  memcpy((void *)(a1 + 112), a2 + 7, 0x61uLL);
  return a1;
}

void *__swift_memcpy209_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD1uLL);
}

uint64_t assignWithTake for Participant.ScreenInfo(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x61uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.ScreenInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 209))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Participant.ScreenInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 209) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

void type metadata accessor for Participant.ScreenInfo()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for Participant.CountdownInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    long long v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for Participant.CountdownInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *initializeWithCopy for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for Participant.CountdownInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.CountdownInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C34A2810);
}

uint64_t sub_1C34A2810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for Participant.CountdownInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C34A28C4);
}

void sub_1C34A28C4()
{
  OUTLINED_FUNCTION_151_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    __swift_storeEnumTagSinglePayload(v1, v0, v0, v4);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 24)) = v0 + 1;
  }
}

uint64_t destroy for Participant.CaptionInfo()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for Participant.CaptionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Participant.CaptionInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Participant.CaptionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Participant.CaptionInfo()
{
}

char *initializeBufferWithCopyOfBuffer for Participant.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = a3[5];
    int v8 = &a1[v7];
    unsigned int v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    int v14 = &v4[v12];
    int v15 = &a2[v12];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)int v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v4[v13] = a2[v13];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Participant.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for Participant.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v11];
  int v14 = &a2[v11];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  a1[v12] = a2[v12];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for Participant.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for Participant.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for Participant.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Participant.Caption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C34A3034);
}

uint64_t sub_1C34A3034()
{
  OUTLINED_FUNCTION_55_1();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v4 + 84) != v0) {
    return OUTLINED_FUNCTION_46_0(*(void *)(v1 + *(int *)(v2 + 28) + 8));
  }
  uint64_t v5 = v3;
  uint64_t v6 = v1 + *(int *)(v2 + 20);
  return __swift_getEnumTagSinglePayload(v6, v0, v5);
}

uint64_t storeEnumTagSinglePayload for Participant.Caption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C34A30C4);
}

void sub_1C34A30C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
}

uint64_t type metadata completion function for Participant.Caption()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of HasSortableHandle.sortableHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id outlined copy of Participant.RemoteIdentifiers??(id result)
{
  if (result != (id)1) {
    return outlined copy of Participant.RemoteIdentifiers?(result);
  }
  return result;
}

double OUTLINED_FUNCTION_41_23()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_74_5()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_75_7()
{
  return outlined init with copy of Participant.State();
}

void OUTLINED_FUNCTION_76_8()
{
  *(void *)(v2 - 96) = v1;
  specialized __RawDictionaryStorage.find<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_81_11()
{
  return v0;
}

void OUTLINED_FUNCTION_86_8()
{
  uint64_t v1 = 0x3A656C797473202CLL;
  unint64_t v2 = 0xE900000000000020;
  String.append(_:)(*(Swift::String *)&v1);
}

int8x8_t OUTLINED_FUNCTION_87_6@<D0>(uint64_t a1@<X8>, uint64x2_t a2@<Q0>, int32x4_t a3@<Q1>, uint64x2_t a4@<Q2>)
{
  int16x8_t v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(a2, a4), a3);
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v4);
  *(_DWORD *)(a1 + 1) = result.i32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_91_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_97_6()
{
  return type metadata accessor for Participant.CountdownInfo(0);
}

uint64_t OUTLINED_FUNCTION_105_5()
{
  return type metadata accessor for Participant.State(0);
}

void OUTLINED_FUNCTION_106_5()
{
  v0[42] = 0;
  v0[43] = 0;
  v0[44] = 0;
  v0[45] = 1;
  bzero(v0 + 46, 0xB1uLL);
}

uint64_t OUTLINED_FUNCTION_110_5()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

double OUTLINED_FUNCTION_113_3()
{
  return 1.0;
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  return type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t OUTLINED_FUNCTION_119_3@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8 * *(void *)(a1 + 16) + 32;
}

uint64_t OUTLINED_FUNCTION_120_4()
{
  return *(void *)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_121_2()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_125_5()
{
  return _s15ConversationKit11ParticipantVWOhTm_7(v1, v0);
}

uint64_t OUTLINED_FUNCTION_126_2(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_128_3()
{
  uint64_t v2 = *(void *)(v0 + 312);
  return outlined copy of Participant.CaptionInfo?(v2);
}

void *OUTLINED_FUNCTION_129_3()
{
  return memcpy(v0, v1, 0x150uLL);
}

uint64_t OUTLINED_FUNCTION_130_4()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_135_2()
{
  return 0x6469766F7270202CLL;
}

uint64_t OUTLINED_FUNCTION_152_1()
{
  return _print_unlocked<A, B>(_:_:)();
}

void OUTLINED_FUNCTION_155_2(__n128 *a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2].n128_u8[0] = v3;
}

void OUTLINED_FUNCTION_156_4()
{
  JUMPOUT(0x1C8774500);
}

uint64_t OUTLINED_FUNCTION_157_4(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_158_4(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_159_1(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_160_3(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_169_2()
{
  return outlined init with copy of Participant.State();
}

uint64_t OUTLINED_FUNCTION_170_2()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_171_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_175_2()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_182_2()
{
  return 0x65746164202CLL;
}

uint64_t OUTLINED_FUNCTION_184_2(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v3 - 128);
  return __swift_storeEnumTagSinglePayload(v2, a2, 1, v5);
}

uint64_t OUTLINED_FUNCTION_188_2()
{
  return type metadata accessor for Participant(0);
}

uint64_t OUTLINED_FUNCTION_189_1()
{
  return type metadata accessor for Participant(0);
}

uint64_t OUTLINED_FUNCTION_190_1()
{
  return outlined destroy of SystemUpdateNotice?(v1 - 144, v0);
}

int8x8_t OUTLINED_FUNCTION_191_2(uint64x2_t a1, int32x4_t a2, uint64x2_t a3)
{
  int16x8_t v3 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(a1, a3), a2);
  *(int8x8_t *)v3.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v3), (int8x8_t)0x1000100010001);
  return vmovn_s16(v3);
}

uint64_t OUTLINED_FUNCTION_197_0()
{
  return outlined init with copy of Participant.State();
}

void OUTLINED_FUNCTION_198_2()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

double OUTLINED_FUNCTION_202_0(double a1)
{
  return a1 / v1;
}

ConversationKit::RemoteControlSuspensionReason_optional __swiftcall RemoteControlSuspensionReason.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *double v1 = v2;
  return (ConversationKit::RemoteControlSuspensionReason_optional)rawValue;
}

uint64_t RemoteControlState.requestedParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  if (*v1 >> 61)
  {
    uint64_t v9 = type metadata accessor for Participant();
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    uint64_t v4 = swift_projectBox() + *(int *)(v3 + 48);
    uint64_t v5 = type metadata accessor for Participant();
    OUTLINED_FUNCTION_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v4, v5);
    uint64_t v7 = a1;
    uint64_t v8 = 0;
    uint64_t v9 = v5;
  }
  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
}

BOOL RemoteControlState.requiresControlMode.getter()
{
  return (*v0 >> 61) - 2 < 3;
}

void RemoteControlStateMachine.state.getter(unint64_t *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 8);
  p_os_unfair_lock_opaque = (unint64_t *)&v3[4]._os_unfair_lock_opaque;
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  closure #1 in RemoteControlStateMachine.state.getter(p_os_unfair_lock_opaque, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t RemoteControlState.remoteControlStatus.getter()
{
  uint64_t result = 1;
  switch(*v0 >> 61)
  {
    case 3:
      uint64_t result = 2;
      break;
    case 4:
      if (*(void *)((*v0 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 == 3) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = 1;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t RemoteControlStateMachine.init(isBroadcasting:)@<X0>(char a1@<W0>, unint64_t *a2@<X8>)
{
  if (a1) {
    unint64_t v3 = 0xA000000000000008;
  }
  else {
    unint64_t v3 = 0xA000000000000010;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<RemoteControlState, os_unfair_lock_s>);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  *a2 = v3;
  a2[1] = v4;
  return outlined copy of RemoteControlState(v3);
}

uint64_t RemoteControlStateMachine.presentOnboardingForRemoteControlRequest(_:from:)()
{
  unint64_t v1 = *v0;
  char v2 = (os_unfair_lock_s *)v0[1];
  outlined copy of RemoteControlState(*v0);
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  partial apply for closure #1 in RemoteControlStateMachine.presentRemoteControlOnboarding(_:from:)();
  os_unfair_lock_unlock(v2 + 6);
  outlined consume of RemoteControlState(v1);
  return swift_release();
}

uint64_t RemoteControlStateMachine.validateOutgoingMessage(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = OUTLINED_FUNCTION_38_21(a1, a2);
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = OUTLINED_FUNCTION_16_49(v12, (uint64_t)v40);
  uint64_t v14 = OUTLINED_FUNCTION_8(v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = OUTLINED_FUNCTION_23_46();
  uint64_t v16 = OUTLINED_FUNCTION_8(v15);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_53_1();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_34_28();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_62();
  _s15ConversationKit20RemoteControlMessageOWOcTm_0(v2, (uint64_t)v4, (void (*)(void))type metadata accessor for RemoteControlMessage);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      long long v22 = type metadata accessor for RemoteControlResponse;
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, (uint64_t)v6, (void (*)(void))type metadata accessor for RemoteControlResponse);
      OUTLINED_FUNCTION_32_26();
      MEMORY[0x1F4188790](v25);
      OUTLINED_FUNCTION_8_72();
      *(void *)(v26 - 32) = v27;
      *(void *)(v26 - 24) = v6;
      OUTLINED_FUNCTION_39_25(v26);
      os_unfair_lock_lock(v7);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlResponse(_:to:)();
      os_unfair_lock_unlock(v7);
      OUTLINED_FUNCTION_28_37();
      uint64_t v24 = (uint64_t)v6;
      goto LABEL_4;
    case 2:
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, v8, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_18_52();
      MEMORY[0x1F4188790](v29);
      OUTLINED_FUNCTION_8_72();
      *(void *)(v30 - 32) = v31;
      *(void *)(v30 - 24) = v8;
      OUTLINED_FUNCTION_4_102(v30);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingCancellation(_:to:)();
      OUTLINED_FUNCTION_9_79();
      OUTLINED_FUNCTION_53_0();
      uint64_t v28 = type metadata accessor for RemoteControlRequest;
      uint64_t v24 = v8;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
    case 3:
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_18_52();
      MEMORY[0x1F4188790](v32);
      OUTLINED_FUNCTION_4_102((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingEndRequest(_:to:)();
      OUTLINED_FUNCTION_9_79();
      OUTLINED_FUNCTION_53_0();
      uint64_t v33 = type metadata accessor for RemoteControlRequest;
      goto LABEL_8;
    case 4:
      uint64_t v7 = v40;
      uint64_t v34 = _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, (uint64_t)v40, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
      unint64_t v35 = *v3;
      MEMORY[0x1F4188790](v34);
      OUTLINED_FUNCTION_26_40((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingSuspendRequest(_:to:)();
      OUTLINED_FUNCTION_9_79();
      outlined consume of RemoteControlState(v35);
      swift_release();
      uint64_t v33 = type metadata accessor for RemoteControlSuspendRequest;
LABEL_8:
      uint64_t v28 = v33;
      uint64_t v24 = (uint64_t)v7;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
    case 5:
      uint64_t v36 = _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, v5, (void (*)(void))type metadata accessor for RemoteControlRequest);
      unint64_t v37 = *v3;
      MEMORY[0x1F4188790](v36);
      OUTLINED_FUNCTION_25_45((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingResumeRequest(_:to:)();
      OUTLINED_FUNCTION_9_79();
      outlined consume of RemoteControlState(v37);
      swift_release();
      uint64_t v28 = type metadata accessor for RemoteControlRequest;
      uint64_t v24 = v5;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
    case 6:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      OUTLINED_FUNCTION_31_31((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      uint64_t v39 = (void *)OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingPlaybackServerMessage(to:)(v39);
      OUTLINED_FUNCTION_9_79();
      return OUTLINED_FUNCTION_53_0();
    default:
      long long v22 = type metadata accessor for RemoteControlRequest;
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, v9, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_32_26();
      MEMORY[0x1F4188790](v23);
      OUTLINED_FUNCTION_27_40((uint64_t)&v40);
      os_unfair_lock_lock(v6);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlRequest(_:to:)();
      os_unfair_lock_unlock(v6);
      OUTLINED_FUNCTION_28_37();
      uint64_t v24 = v9;
LABEL_4:
      uint64_t v28 = v22;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
  }
}

BOOL RemoteControlState.isSuspended.getter()
{
  return *v0 >> 61 == 4;
}

uint64_t RemoteControlStateMachine.validateIncomingMessage(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = OUTLINED_FUNCTION_38_21(a1, a2);
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = OUTLINED_FUNCTION_16_49(v12, (uint64_t)v40);
  uint64_t v14 = OUTLINED_FUNCTION_8(v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = OUTLINED_FUNCTION_23_46();
  uint64_t v16 = OUTLINED_FUNCTION_8(v15);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_53_1();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_34_28();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_62();
  _s15ConversationKit20RemoteControlMessageOWOcTm_0(v2, (uint64_t)v4, (void (*)(void))type metadata accessor for RemoteControlMessage);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      long long v22 = type metadata accessor for RemoteControlResponse;
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, (uint64_t)v6, (void (*)(void))type metadata accessor for RemoteControlResponse);
      OUTLINED_FUNCTION_32_26();
      MEMORY[0x1F4188790](v25);
      OUTLINED_FUNCTION_8_72();
      *(void *)(v26 - 32) = v6;
      *(void *)(v26 - 24) = v27;
      OUTLINED_FUNCTION_39_25(v26);
      os_unfair_lock_lock(v7);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlResponse(_:from:)();
      os_unfair_lock_unlock(v7);
      OUTLINED_FUNCTION_28_37();
      uint64_t v24 = (uint64_t)v6;
      goto LABEL_4;
    case 2:
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, v8, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_18_52();
      MEMORY[0x1F4188790](v29);
      OUTLINED_FUNCTION_8_72();
      *(void *)(v30 - 32) = v8;
      *(void *)(v30 - 24) = v31;
      OUTLINED_FUNCTION_4_102(v30);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingCancellation(_:from:)();
      OUTLINED_FUNCTION_9_79();
      OUTLINED_FUNCTION_53_0();
      uint64_t v28 = type metadata accessor for RemoteControlRequest;
      uint64_t v24 = v8;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
    case 3:
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_18_52();
      MEMORY[0x1F4188790](v32);
      OUTLINED_FUNCTION_4_102((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingEndRequest(_:from:)();
      OUTLINED_FUNCTION_9_79();
      OUTLINED_FUNCTION_53_0();
      uint64_t v33 = type metadata accessor for RemoteControlRequest;
      goto LABEL_8;
    case 4:
      uint64_t v7 = v40;
      uint64_t v34 = _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, (uint64_t)v40, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
      unint64_t v35 = *v3;
      MEMORY[0x1F4188790](v34);
      OUTLINED_FUNCTION_26_40((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingSuspendRequest(_:from:)();
      OUTLINED_FUNCTION_9_79();
      outlined consume of RemoteControlState(v35);
      swift_release();
      uint64_t v33 = type metadata accessor for RemoteControlSuspendRequest;
LABEL_8:
      uint64_t v28 = v33;
      uint64_t v24 = (uint64_t)v7;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
    case 5:
      uint64_t v36 = _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, v5, (void (*)(void))type metadata accessor for RemoteControlRequest);
      unint64_t v37 = *v3;
      MEMORY[0x1F4188790](v36);
      OUTLINED_FUNCTION_25_45((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingResumeRequest(_:from:)();
      OUTLINED_FUNCTION_9_79();
      outlined consume of RemoteControlState(v37);
      swift_release();
      uint64_t v28 = type metadata accessor for RemoteControlRequest;
      uint64_t v24 = v5;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
    case 6:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      OUTLINED_FUNCTION_31_31((uint64_t)&v40);
      os_unfair_lock_lock(v4);
      uint64_t v39 = (void *)OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingPlaybackServerMessage(from:)(v39);
      OUTLINED_FUNCTION_9_79();
      return OUTLINED_FUNCTION_53_0();
    default:
      long long v22 = type metadata accessor for RemoteControlRequest;
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v4, v9, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_32_26();
      MEMORY[0x1F4188790](v23);
      OUTLINED_FUNCTION_27_40((uint64_t)&v40);
      os_unfair_lock_lock(v6);
      OUTLINED_FUNCTION_3_119();
      partial apply for closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlRequest(_:from:)();
      os_unfair_lock_unlock(v6);
      OUTLINED_FUNCTION_28_37();
      uint64_t v24 = v9;
LABEL_4:
      uint64_t v28 = v22;
      return _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))v28);
  }
}

uint64_t RemoteControlSuspensionReason.rawValue.getter()
{
  return *v0;
}

ConversationKit::RemoteControlSuspensionReason_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RemoteControlSuspensionReason(Swift::Int *a1)
{
  return RemoteControlSuspensionReason.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance RemoteControlSuspensionReason@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RemoteControlSuspensionReason.rawValue.getter();
  *a1 = result;
  return result;
}

void RemoteControlState.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Participant();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_36();
  uint64_t v9 = v7 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v38 - v11;
  type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_36();
  uint64_t v16 = v14 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v38 - v18;
  unint64_t v20 = *v1;
  switch(v20 >> 61)
  {
    case 1uLL:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v25 = swift_projectBox();
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v25, v16, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v26 = OUTLINED_FUNCTION_5_105();
      v27(v26);
      Swift::UInt v28 = 4;
      goto LABEL_6;
    case 2uLL:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v29 = swift_projectBox();
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v29, v16, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v30 = OUTLINED_FUNCTION_5_105();
      v31(v30);
      Swift::UInt v28 = 5;
      goto LABEL_6;
    case 3uLL:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v32 = swift_projectBox();
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v32, v16, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v33 = OUTLINED_FUNCTION_5_105();
      v34(v33);
      Swift::UInt v28 = 6;
LABEL_6:
      Hasher._combine(_:)(v28);
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
      OUTLINED_FUNCTION_157();
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for Date();
      _s10Foundation4UUIDVACSHAAWlTm_5(&lazy protocol witness table cache variable for type Date and conformance Date, MEMORY[0x1F418BA00]);
      OUTLINED_FUNCTION_157();
      dispatch thunk of Hashable.hash(into:)();
      lazy protocol witness table accessor for type Participant and conformance Participant();
      OUTLINED_FUNCTION_157();
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
      uint64_t v24 = v16;
      goto LABEL_7;
    case 4uLL:
      unint64_t v35 = *(void *)((v20 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      Swift::UInt v36 = *(unsigned __int8 *)((v20 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      Hasher._combine(_:)(7uLL);
      v38[1] = v35;
      outlined copy of RemoteControlState(v35);
      RemoteControlState.hash(into:)(a1);
      Hasher._combine(_:)(v36);
      outlined consume of RemoteControlState(v35);
      return;
    case 5uLL:
      if (v20 == 0xA000000000000000)
      {
        Swift::UInt v37 = 0;
      }
      else if (v20 == 0xA000000000000008)
      {
        Swift::UInt v37 = 1;
      }
      else
      {
        Swift::UInt v37 = 2;
      }
      Hasher._combine(_:)(v37);
      return;
    default:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
      uint64_t v22 = swift_projectBox();
      LOBYTE(v21) = *(unsigned char *)(v22 + *(int *)(v21 + 64));
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v22, (uint64_t)v19, (void (*)(void))type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_2_1();
      v23();
      Hasher._combine(_:)(3uLL);
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
      OUTLINED_FUNCTION_157();
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for Date();
      _s10Foundation4UUIDVACSHAAWlTm_5(&lazy protocol witness table cache variable for type Date and conformance Date, MEMORY[0x1F418BA00]);
      OUTLINED_FUNCTION_157();
      dispatch thunk of Hashable.hash(into:)();
      lazy protocol witness table accessor for type Participant and conformance Participant();
      OUTLINED_FUNCTION_157();
      dispatch thunk of Hashable.hash(into:)();
      Hasher._combine(_:)(v21);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v3);
      uint64_t v24 = (uint64_t)v19;
LABEL_7:
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v24, (void (*)(void))type metadata accessor for RemoteControlRequest);
      return;
  }
}

uint64_t static RemoteControlState.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  type metadata accessor for Participant();
  OUTLINED_FUNCTION_4();
  uint64_t v107 = v6;
  uint64_t v108 = v7;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_36();
  unint64_t v105 = v8 - v9;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_8_4();
  unint64_t v106 = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8_4();
  uint64_t v102 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_8_4();
  uint64_t v104 = v15;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_8_4();
  uint64_t v101 = v17;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_8_4();
  uint64_t v103 = v19;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_8_4();
  uint64_t v99 = v21;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v22);
  Swift::Int v100 = (char *)&v99 - v23;
  type metadata accessor for RemoteControlRequest(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_36();
  uint64_t v27 = v25 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v99 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v99 - v32;
  MEMORY[0x1F4188790](v34);
  Swift::UInt v36 = (char *)&v99 - v35;
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_53_1();
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_52();
  MEMORY[0x1F4188790](v39);
  int v41 = (char *)&v99 - v40;
  MEMORY[0x1F4188790](v42);
  uint64_t v45 = (char *)&v99 - v44;
  unint64_t v46 = *a1;
  unint64_t v47 = *a2;
  unint64_t v48 = v46;
  switch(v46 >> 61)
  {
    case 1uLL:
      if (v47 >> 61 != 1) {
        goto LABEL_37;
      }
      unint64_t v106 = v43;
      uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      swift_projectBox();
      uint64_t v84 = OUTLINED_FUNCTION_37_20();
      char v85 = &v41[v84];
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v48 & 0x1FFFFFFFFFFFFFFFLL, v2, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v84, v3, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v87 = v107;
      uint64_t v86 = v108;
      uint64_t v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16);
      v88(v103, v83, v107);
      uint64_t v89 = v101;
      v88(v101, (uint64_t)v85, v87);
      OUTLINED_FUNCTION_20_50();
      if (static UUID.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v61 = MEMORY[0x1C876F960](v103, v89);
        uint64_t v90 = *(void (**)(void))(v86 + 8);
        OUTLINED_FUNCTION_1_19();
        v90();
        OUTLINED_FUNCTION_1_19();
        v90();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v3, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v67 = v2;
        goto LABEL_22;
      }
      uint64_t v97 = *(void (**)(void))(v86 + 8);
      OUTLINED_FUNCTION_1_19();
      v97();
      OUTLINED_FUNCTION_1_19();
      v97();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v3, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v93 = v2;
      goto LABEL_31;
    case 2uLL:
      if (v47 >> 61 != 2) {
        goto LABEL_37;
      }
      unint64_t v106 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      swift_projectBox();
      uint64_t v62 = OUTLINED_FUNCTION_37_20();
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v48 & 0x1FFFFFFFFFFFFFFFLL, (uint64_t)v36, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v62, (uint64_t)v33, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v63 = v108;
      uint64_t v64 = *(void (**)(void))(v108 + 16);
      OUTLINED_FUNCTION_19_46();
      v64();
      uint64_t v65 = v102;
      OUTLINED_FUNCTION_19_46();
      v64();
      OUTLINED_FUNCTION_20_50();
      if (static UUID.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v61 = MEMORY[0x1C876F960](v104, v65);
        uint64_t v66 = *(void (**)(void))(v63 + 8);
        OUTLINED_FUNCTION_2_116();
        v66();
        OUTLINED_FUNCTION_2_116();
        v66();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v33, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v67 = (uint64_t)v36;
        goto LABEL_22;
      }
      uint64_t v92 = *(void (**)(void))(v63 + 8);
      OUTLINED_FUNCTION_2_116();
      v92();
      OUTLINED_FUNCTION_2_116();
      v92();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v33, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v93 = (uint64_t)v36;
      goto LABEL_31;
    case 3uLL:
      if (v47 >> 61 != 3) {
        goto LABEL_37;
      }
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v69 = swift_projectBox();
      uint64_t v70 = *(int *)(v68 + 48);
      uint64_t v71 = v69 + v70;
      uint64_t v72 = swift_projectBox();
      uint64_t v73 = v72 + v70;
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v69, (uint64_t)v30, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v72, v27, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v74 = v108;
      uint64_t v75 = *(void (**)(unint64_t, uint64_t, uint64_t))(v108 + 16);
      uint64_t v76 = v71;
      uint64_t v77 = v107;
      v75(v106, v76, v107);
      v75(v105, v73, v77);
      OUTLINED_FUNCTION_20_50();
      if (static UUID.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v61 = MEMORY[0x1C876F960](v106, v105);
        uint64_t v78 = *(void (**)(void))(v74 + 8);
        OUTLINED_FUNCTION_336();
        v78();
        OUTLINED_FUNCTION_336();
        v78();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v27, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v67 = (uint64_t)v30;
LABEL_22:
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v67, (void (*)(void))type metadata accessor for RemoteControlRequest);
        outlined consume of RemoteControlState(v48);
        outlined consume of RemoteControlState(v47);
        return v61 & 1;
      }
      __int16 v94 = *(void (**)(void))(v74 + 8);
      OUTLINED_FUNCTION_336();
      v94();
      OUTLINED_FUNCTION_336();
      v94();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v27, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v93 = (uint64_t)v30;
LABEL_31:
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v93, (void (*)(void))type metadata accessor for RemoteControlRequest);
      goto LABEL_38;
    case 4uLL:
      if (v47 >> 61 != 4) {
        goto LABEL_37;
      }
      int v79 = *(unsigned __int8 *)((v46 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v80 = *(void *)((v46 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      int v81 = *(unsigned __int8 *)((v47 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v109 = *(void *)((v47 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v110 = v80;
      OUTLINED_FUNCTION_20_50();
      char v82 = static RemoteControlState.== infix(_:_:)(&v110, &v109);
      outlined consume of RemoteControlState(v48);
      outlined consume of RemoteControlState(v47);
      if ((v82 & 1) == 0) {
        goto LABEL_40;
      }
      char v61 = v79 == v81;
      return v61 & 1;
    case 5uLL:
      if (v46 == 0xA000000000000000)
      {
        if (v47 == 0xA000000000000000)
        {
          outlined consume of RemoteControlState(0xA000000000000000);
          unint64_t v91 = 0xA000000000000000;
          goto LABEL_36;
        }
      }
      else if (v46 == 0xA000000000000008)
      {
        if (v47 == 0xA000000000000008)
        {
          outlined consume of RemoteControlState(0xA000000000000008);
          unint64_t v91 = 0xA000000000000008;
LABEL_36:
          outlined consume of RemoteControlState(v91);
          char v61 = 1;
          return v61 & 1;
        }
      }
      else if (v47 == 0xA000000000000010)
      {
        outlined consume of RemoteControlState(0xA000000000000010);
        unint64_t v91 = 0xA000000000000010;
        goto LABEL_36;
      }
LABEL_37:
      OUTLINED_FUNCTION_20_50();
LABEL_38:
      unint64_t v96 = v48;
LABEL_39:
      outlined consume of RemoteControlState(v96);
      outlined consume of RemoteControlState(v47);
LABEL_40:
      char v61 = 0;
      return v61 & 1;
    default:
      unint64_t v106 = v43;
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
      uint64_t v50 = swift_projectBox();
      if (v47 >> 61) {
        goto LABEL_37;
      }
      uint64_t v51 = v50;
      uint64_t v52 = *(int *)(v49 + 64);
      unint64_t v105 = v48;
      LODWORD(v104) = *(unsigned __int8 *)(v50 + v52);
      uint64_t v53 = swift_projectBox();
      LODWORD(v103) = *(unsigned __int8 *)(v53 + v52);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v51, (uint64_t)v45, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v53, (uint64_t)v41, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v54 = v108;
      uint64_t v55 = *(void (**)(void))(v108 + 16);
      uint64_t v56 = v100;
      OUTLINED_FUNCTION_19_46();
      v55();
      uint64_t v57 = v99;
      OUTLINED_FUNCTION_19_46();
      v55();
      unint64_t v58 = v105;
      outlined copy of RemoteControlState(v47);
      outlined copy of RemoteControlState(v58);
      if ((static UUID.== infix(_:_:)() & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0)
      {
        uint64_t v95 = *(void (**)(void))(v54 + 8);
        OUTLINED_FUNCTION_2_116();
        v95();
        OUTLINED_FUNCTION_2_116();
        v95();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v41, (void (*)(void))type metadata accessor for RemoteControlRequest);
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v45, (void (*)(void))type metadata accessor for RemoteControlRequest);
        unint64_t v96 = v58;
        goto LABEL_39;
      }
      char v59 = MEMORY[0x1C876F960](v56, v57);
      uint64_t v60 = *(void (**)(void))(v54 + 8);
      OUTLINED_FUNCTION_2_116();
      v60();
      OUTLINED_FUNCTION_2_116();
      v60();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v41, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v45, (void (*)(void))type metadata accessor for RemoteControlRequest);
      outlined consume of RemoteControlState(v58);
      outlined consume of RemoteControlState(v47);
      if ((v59 & 1) == 0) {
        goto LABEL_40;
      }
      char v61 = v104 ^ v103 ^ 1;
      return v61 & 1;
  }
}

Swift::Int RemoteControlState.hashValue.getter()
{
  v2[9] = *v0;
  Hasher.init(_seed:)();
  RemoteControlState.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RemoteControlState()
{
  v2[9] = *v0;
  Hasher.init(_seed:)();
  RemoteControlState.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

void RemoteControlStateMachine.Errors.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

BOOL static RemoteControlStateMachine.Errors.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

Swift::Int RemoteControlStateMachine.Errors.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance RemoteControlStateMachine.Errors()
{
  return RemoteControlStateMachine.Errors.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance RemoteControlStateMachine.Errors(uint64_t a1)
{
  RemoteControlStateMachine.Errors.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance RemoteControlStateMachine.Errors(char *a1, char *a2)
{
  return static RemoteControlStateMachine.Errors.== infix(_:_:)(*a1, *a2);
}

unint64_t closure #1 in RemoteControlStateMachine.state.getter@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return outlined copy of RemoteControlState(v2);
}

Swift::Void __swiftcall RemoteControlStateMachine.reset()()
{
  uint64_t v1 = *(void *)(v0 + 8);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  partial apply for closure #1 in RemoteControlStateMachine.reset()((unint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

unint64_t closure #1 in RemoteControlStateMachine.reset()(unint64_t *a1, unint64_t a2)
{
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Log.screenSharing);
  outlined copy of RemoteControlState(a2);
  swift_retain();
  outlined copy of RemoteControlState(a2);
  swift_retain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v12[0] = v11;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, 0x80000001C3783A00, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v13 = a2;
    outlined copy of RemoteControlState(a2);
    uint64_t v8 = String.init<A>(reflecting:)();
    uint64_t v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(a2);
    swift_release();
    outlined consume of RemoteControlState(a2);
    swift_release();
    _os_log_impl(&dword_1C2F90000, v5, v6, "Resetting %s to initial state %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v11, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }
  else
  {
    outlined consume of RemoteControlState(a2);
    swift_release();
    outlined consume of RemoteControlState(a2);

    swift_release();
  }
  uint64_t v13 = a2;
  return RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v13);
}

unint64_t RemoteControlStateMachine.transformState(_:to:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *a1;
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Log.screenSharing);
  outlined copy of RemoteControlState(v4);
  outlined copy of RemoteControlState(v3);
  outlined copy of RemoteControlState(v4);
  outlined copy of RemoteControlState(v3);
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    outlined copy of RemoteControlState(v4);
    uint64_t v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v4);
    *(_WORD *)(v8 + 12) = 2080;
    outlined copy of RemoteControlState(v3);
    uint64_t v12 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(v3);
    outlined consume of RemoteControlState(v3);
    _os_log_impl(&dword_1C2F90000, v6, v7, "Transforming state machine from %s to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);

    outlined consume of RemoteControlState(v4);
  }
  else
  {
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v4);
    outlined consume of RemoteControlState(v3);
    outlined consume of RemoteControlState(v3);
  }
  *a1 = v3;
  return outlined copy of RemoteControlState(v3);
}

uint64_t closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlRequest(_:from:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*a1 == 0xA000000000000008 && (*a1 >> 61) > 4)
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    uint64_t v12 = swift_allocBox();
    uint64_t v14 = v13;
    uint64_t v15 = v13 + *(int *)(v11 + 48);
    uint64_t v16 = *(int *)(v11 + 64);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(a4, v13, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v17 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, a5, v17);
    *(unsigned char *)(v14 + v16) = 0;
    unint64_t v18 = v12;
    RemoteControlStateMachine.transformState(_:to:)(a1, &v18);
    return swift_release();
  }
  else
  {
    unint64_t v18 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)(&v18);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *os_log_type_t v6 = 2;
    return swift_willThrow();
  }
}

void RemoteControlStateMachine.logInvalidTransition(_:)(unint64_t *a1)
{
  unint64_t v1 = *a1;
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.screenSharing);
  outlined copy of RemoteControlState(v1);
  outlined copy of RemoteControlState(v1);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    *(_DWORD *)unint64_t v4 = 136315138;
    outlined copy of RemoteControlState(v1);
    uint64_t v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of RemoteControlState(v1);
    outlined consume of RemoteControlState(v1);
    _os_log_impl(&dword_1C2F90000, oslog, v3, "Invalid state transition request actual:%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v5, -1, -1);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }
  else
  {
    outlined consume of RemoteControlState(v1);
    outlined consume of RemoteControlState(v1);
  }
}

uint64_t closure #1 in RemoteControlStateMachine.presentRemoteControlOnboarding(_:from:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*a1 >> 61)
  {
    unint64_t v17 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)(&v17);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v16 = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    uint64_t v9 = swift_allocBox();
    uint64_t v11 = v10;
    uint64_t v12 = v10 + *(int *)(v8 + 48);
    uint64_t v13 = *(int *)(v8 + 64);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(a4, v10, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v14 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, a5, v14);
    *(unsigned char *)(v11 + v13) = 1;
    unint64_t v17 = v9;
    RemoteControlStateMachine.transformState(_:to:)(a1, &v17);
    return swift_release();
  }
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.presentRemoteControlOnboarding(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.presentRemoteControlOnboarding(_:from:)(v0, v1, v2, v3, v4);
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlResponse(_:from:)(unint64_t *a1, uint64_t a2, char *a3, void (*a4)(char *, char *, uint64_t), uint64_t *a5)
{
  uint64_t v92 = a5;
  unint64_t v91 = a4;
  uint64_t v97 = a3;
  uint64_t v99 = a2;
  uint64_t v6 = type metadata accessor for RemoteControlResponse(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Participant();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v95 = (char *)&v84 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = type metadata accessor for RemoteControlRequest(0);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v84 - v24;
  __int16 v94 = a1;
  unint64_t v26 = *a1;
  if (*a1 >> 61 == 1)
  {
    uint64_t v87 = v23;
    uint64_t v88 = v8;
    char v85 = v11;
    uint64_t v86 = v16;
    unint64_t v90 = v26;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    uint64_t v28 = swift_projectBox();
    uint64_t v29 = v28 + *(int *)(v27 + 48);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(v28, (uint64_t)v25, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v89 = v13;
    uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 16);
    uint64_t v31 = v29;
    uint64_t v98 = v12;
    uint64_t v32 = v30;
    v30((uint64_t)v20, (char *)v31, v12);
    uint64_t v33 = v99;
    swift_retain();
    unint64_t v96 = v25;
    if (static UUID.== infix(_:_:)())
    {
      uint64_t v34 = v97;
      if (MEMORY[0x1C876F960](v20, v97))
      {
        uint64_t v35 = v98;
        if (*(unsigned char *)(v33 + *(int *)(v6 + 28)) == 1)
        {
          Swift::Int v100 = (void (*)(void, void, void))v91;
          uint64_t v101 = v92;
          uint64_t v36 = swift_allocBox();
          uint64_t v38 = v37 + *(int *)(v27 + 48);
          uint64_t v39 = (uint64_t)v96;
          _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v96, v37, (void (*)(void))type metadata accessor for RemoteControlRequest);
          v32(v38, v20, v35);
          uint64_t v102 = v36 | 0x4000000000000000;
          RemoteControlStateMachine.transformState(_:to:)(v94, (unint64_t *)&v102);
          swift_release();
          (*(void (**)(char *, uint64_t))(v89 + 8))(v20, v35);
          uint64_t v40 = v39;
        }
        else
        {
          Swift::Int v100 = (void (*)(void, void, void))v91;
          uint64_t v101 = v92;
          uint64_t v102 = (uint64_t)v91;
          RemoteControlStateMachine.transformState(_:to:)(v94, (unint64_t *)&v102);
          (*(void (**)(char *, uint64_t))(v89 + 8))(v20, v35);
          uint64_t v40 = (uint64_t)v96;
        }
      }
      else
      {
        uint64_t v56 = v98;
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v57 = type metadata accessor for Logger();
        __swift_project_value_buffer(v57, (uint64_t)static Log.screenSharing);
        unint64_t v58 = v95;
        char v59 = (void (*)(char *, char *, uint64_t))v32;
        v32((uint64_t)v95, v34, v56);
        uint64_t v60 = v86;
        v59(v86, v20, v56);
        char v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.error.getter();
        int v63 = v62;
        BOOL v64 = os_log_type_enabled(v61, v62);
        uint64_t v97 = v20;
        if (v64)
        {
          uint64_t v65 = swift_slowAlloc();
          __int16 v94 = (unint64_t *)v61;
          uint64_t v66 = v65;
          uint64_t v99 = swift_slowAlloc();
          Swift::Int v100 = (void (*)(void, void, void))v99;
          *(_DWORD *)uint64_t v66 = 136315394;
          LODWORD(v93) = v63;
          uint64_t v67 = (uint64_t)v85;
          v59(v85, v58, v56);
          __swift_storeEnumTagSinglePayload(v67, 0, 1, v56);
          uint64_t v68 = specialized >> prefix<A>(_:)(v67);
          unint64_t v91 = v59;
          uint64_t v69 = v58;
          uint64_t v70 = v68;
          unint64_t v72 = v71;
          outlined destroy of Participant?(v67);
          uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v72, (uint64_t *)&v100);
          uint64_t v92 = &v103;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v73 = *(void (**)(char *, uint64_t))(v89 + 8);
          v73(v69, v98);
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v95 = (char *)(v66 + 14);
          v91((char *)v67, v60, v98);
          __swift_storeEnumTagSinglePayload(v67, 0, 1, v98);
          uint64_t v74 = specialized >> prefix<A>(_:)(v67);
          unint64_t v76 = v75;
          outlined destroy of Participant?(v67);
          uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v76, (uint64_t *)&v100);
          uint64_t v77 = v97;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v56 = v98;
          swift_bridgeObjectRelease();
          v73(v60, v56);
          uint64_t v78 = v94;
          _os_log_impl(&dword_1C2F90000, (os_log_t)v94, (os_log_type_t)v93, "Rejecting remoteControlResponse from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v66, 0x16u);
          uint64_t v79 = v99;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v79, -1, -1);
          MEMORY[0x1C87760E0](v66, -1, -1);
        }
        else
        {
          uint64_t v73 = *(void (**)(char *, uint64_t))(v89 + 8);
          v73(v58, v56);
          v73(v60, v56);

          uint64_t v77 = v97;
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *uint64_t v83 = 0;
        swift_willThrow();
        v73(v77, v56);
        uint64_t v40 = (uint64_t)v96;
      }
    }
    else
    {
      uint64_t v97 = v20;
      if (one-time initialization token for screenSharing != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      __swift_project_value_buffer(v43, (uint64_t)static Log.screenSharing);
      uint64_t v44 = (uint64_t)v88;
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v33, (uint64_t)v88, (void (*)(void))type metadata accessor for RemoteControlResponse);
      uint64_t v45 = (uint64_t)v96;
      uint64_t v46 = v87;
      _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v96, v87, (void (*)(void))type metadata accessor for RemoteControlRequest);
      unint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v99 = swift_slowAlloc();
        Swift::Int v100 = (void (*)(void, void, void))v99;
        *(_DWORD *)uint64_t v49 = 136315394;
        uint64_t v95 = (char *)(v49 + 4);
        type metadata accessor for UUID();
        _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
        uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, (uint64_t *)&v100);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v44, (void (*)(void))type metadata accessor for RemoteControlResponse);
        *(_WORD *)(v49 + 12) = 2080;
        uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, (uint64_t *)&v100);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v46, (void (*)(void))type metadata accessor for RemoteControlRequest);
        _os_log_impl(&dword_1C2F90000, v47, v48, "Response.requestUUID != request.uuid (%s != %s", (uint8_t *)v49, 0x16u);
        uint64_t v54 = v99;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v54, -1, -1);
        uint64_t v55 = v49;
        uint64_t v45 = (uint64_t)v96;
        MEMORY[0x1C87760E0](v55, -1, -1);
      }
      else
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v44, (void (*)(void))type metadata accessor for RemoteControlResponse);
        _s15ConversationKit20RemoteControlRequestVWOhTm_0(v46, (void (*)(void))type metadata accessor for RemoteControlRequest);
      }

      int v81 = v97;
      uint64_t v80 = v98;
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      unsigned char *v82 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v81, v80);
      uint64_t v40 = v45;
    }
    _s15ConversationKit20RemoteControlRequestVWOhTm_0(v40, (void (*)(void))type metadata accessor for RemoteControlRequest);
    return outlined consume of RemoteControlState(v90);
  }
  else
  {
    uint64_t v102 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v102);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    unsigned char *v41 = 2;
    return swift_willThrow();
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingCancellation(_:from:)(unint64_t *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v79 = a5;
  uint64_t v80 = a4;
  uint64_t v84 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v78 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int v81 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v83 = (char *)&v74 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v74 - v15;
  uint64_t v17 = type metadata accessor for RemoteControlRequest(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v74 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v74 - v23;
  unint64_t v25 = *a1;
  if (*a1 >> 61)
  {
    uint64_t v87 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v87);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v34 = 2;
    return swift_willThrow();
  }
  else
  {
    os_log_t v75 = v22;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    uint64_t v85 = v9;
    uint64_t v27 = v26;
    uint64_t v28 = swift_projectBox();
    uint64_t v29 = v28 + *(int *)(v27 + 48);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(v28, (uint64_t)v24, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v76 = v10;
    uint64_t v30 = v29;
    uint64_t v31 = v85;
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v74(v16, v30, v85);
    unint64_t v77 = v25;
    swift_retain();
    char v82 = v24;
    if (static UUID.== infix(_:_:)())
    {
      uint64_t v32 = v84;
      uint64_t v33 = v16;
      if (MEMORY[0x1C876F960](v16, v84))
      {
        v86[0] = v80;
        v86[1] = v79;
        uint64_t v87 = v80;
        RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v87);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v16, v31);
      }
      else
      {
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v48 = type metadata accessor for Logger();
        __swift_project_value_buffer(v48, (uint64_t)static Log.screenSharing);
        uint64_t v49 = v83;
        uint64_t v50 = (void (*)(char *, char *, uint64_t))v74;
        v74(v83, (uint64_t)v32, v31);
        unint64_t v51 = v81;
        v50(v81, v16, v31);
        uint64_t v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.error.getter();
        int v54 = v53;
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v55 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          v86[0] = v80;
          *(_DWORD *)uint64_t v55 = 136315394;
          LODWORD(v79) = v54;
          uint64_t v56 = (uint64_t)v78;
          v50(v78, v49, v85);
          __swift_storeEnumTagSinglePayload(v56, 0, 1, v85);
          uint64_t v57 = specialized >> prefix<A>(_:)(v56);
          os_log_t v75 = v52;
          unint64_t v59 = v58;
          outlined destroy of Participant?(v56);
          uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v59, v86);
          uint64_t v84 = v33;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v60 = (void (*)(uint64_t, char *, uint64_t))v50;
          char v61 = *(void (**)(char *, uint64_t))(v76 + 8);
          v61(v83, v85);
          *(_WORD *)(v55 + 12) = 2080;
          uint64_t v83 = (char *)(v55 + 14);
          v60(v56, v51, v85);
          __swift_storeEnumTagSinglePayload(v56, 0, 1, v85);
          uint64_t v62 = specialized >> prefix<A>(_:)(v56);
          int v63 = v51;
          unint64_t v65 = v64;
          outlined destroy of Participant?(v56);
          uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v65, v86);
          uint64_t v33 = v84;
          uint64_t v31 = v85;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v61(v63, v31);
          os_log_t v66 = v75;
          _os_log_impl(&dword_1C2F90000, v75, (os_log_type_t)v79, "Rejecting cancellationRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v55, 0x16u);
          uint64_t v67 = v80;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v67, -1, -1);
          MEMORY[0x1C87760E0](v55, -1, -1);
        }
        else
        {
          char v61 = *(void (**)(char *, uint64_t))(v76 + 8);
          v61(v49, v31);
          v61(v51, v31);
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        *uint64_t v73 = 0;
        swift_willThrow();
        v61(v33, v31);
      }
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v82, (void (*)(void))type metadata accessor for RemoteControlRequest);
      unint64_t v72 = v77;
    }
    else
    {
      uint64_t v84 = v16;
      if (one-time initialization token for screenSharing != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      __swift_project_value_buffer(v36, (uint64_t)static Log.screenSharing);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(a2, (uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v37 = (uint64_t)v82;
      os_log_t v38 = v75;
      _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v82, (uint64_t)v75, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.error.getter();
      int v41 = v40;
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v83 = (char *)swift_slowAlloc();
        v86[0] = (uint64_t)v83;
        *(_DWORD *)uint64_t v42 = 136315394;
        type metadata accessor for UUID();
        _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
        LODWORD(v81) = v41;
        uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
        *(_WORD *)(v42 + 12) = 2080;
        uint64_t v37 = (uint64_t)v82;
        uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v38, (void (*)(void))type metadata accessor for RemoteControlRequest);
        _os_log_impl(&dword_1C2F90000, v39, (os_log_type_t)v81, "cancellationRequest.uuid != request.uuid (%s != %s", (uint8_t *)v42, 0x16u);
        unint64_t v47 = v83;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v47, -1, -1);
        MEMORY[0x1C87760E0](v42, -1, -1);
      }
      else
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v38, (void (*)(void))type metadata accessor for RemoteControlRequest);
      }

      uint64_t v69 = v76;
      unint64_t v68 = v77;
      uint64_t v70 = v84;
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *unint64_t v71 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v85);
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v37, (void (*)(void))type metadata accessor for RemoteControlRequest);
      unint64_t v72 = v68;
    }
    return outlined consume of RemoteControlState(v72);
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingEndRequest(_:from:)(unint64_t *a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v68 = a4;
  os_log_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)&v64 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v17 = type metadata accessor for RemoteControlRequest(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v64 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v64 - v23;
  switch(*a1 >> 61)
  {
    case 2uLL:
    case 3uLL:
      os_log_t v66 = v12;
      uint64_t v67 = (uint64_t *)v22;
      unint64_t v65 = v7;
      goto LABEL_7;
    case 4uLL:
      uint64_t v27 = *(void *)((*a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61;
      if (v27 != 2 && v27 != 3) {
        goto LABEL_2;
      }
      os_log_t v66 = v12;
      uint64_t v67 = (uint64_t *)v22;
      unint64_t v65 = v7;
LABEL_7:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v29 = swift_projectBox();
      uint64_t v30 = v29 + *(int *)(v28 + 48);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v29, (uint64_t)v24, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v31(v16, v30, v8);
      uint64_t v32 = v71;
      if (static UUID.== infix(_:_:)())
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v24, (void (*)(void))type metadata accessor for RemoteControlRequest);
        os_log_t v33 = v70;
        if (MEMORY[0x1C876F960](v16, v70))
        {
          (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
          uint64_t v73 = v68;
          return RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v73);
        }
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        __swift_project_value_buffer(v46, (uint64_t)static Log.screenSharing);
        unint64_t v47 = v69;
        v31(v69, (uint64_t)v33, v8);
        uint64_t v48 = v66;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v66, v16, v8);
        uint64_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.error.getter();
        int v51 = v50;
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v52 = swift_slowAlloc();
          os_log_t v70 = v49;
          uint64_t v53 = v52;
          uint64_t v71 = swift_slowAlloc();
          v72[0] = v71;
          *(_DWORD *)uint64_t v53 = 136315394;
          unint64_t v64 = (void (*)(char *, uint64_t))(v53 + 4);
          LODWORD(v68) = v51;
          uint64_t v54 = (uint64_t)v65;
          v31(v65, (uint64_t)v47, v8);
          __swift_storeEnumTagSinglePayload(v54, 0, 1, v8);
          uint64_t v55 = specialized >> prefix<A>(_:)(v54);
          unint64_t v57 = v56;
          outlined destroy of Participant?(v54);
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, v72);
          uint64_t v67 = &v74;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          unint64_t v64 = *(void (**)(char *, uint64_t))(v9 + 8);
          v64(v69, v8);
          *(_WORD *)(v53 + 12) = 2080;
          uint64_t v69 = (char *)(v53 + 14);
          v31((char *)v54, (uint64_t)v48, v8);
          __swift_storeEnumTagSinglePayload(v54, 0, 1, v8);
          uint64_t v58 = specialized >> prefix<A>(_:)(v54);
          unint64_t v60 = v59;
          outlined destroy of Participant?(v54);
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v64(v48, v8);
          os_log_t v61 = v70;
          _os_log_impl(&dword_1C2F90000, v70, (os_log_type_t)v68, "Rejecting endRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v53, 0x16u);
          uint64_t v62 = v71;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v62, -1, -1);
          MEMORY[0x1C87760E0](v53, -1, -1);
        }
        else
        {
          int v63 = *(void (**)(char *, uint64_t))(v9 + 8);
          v63(v47, v8);
          v63(v48, v8);
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v35 = type metadata accessor for Logger();
        __swift_project_value_buffer(v35, (uint64_t)static Log.screenSharing);
        _s15ConversationKit20RemoteControlMessageOWOcTm_0(v32, (uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v36 = (uint64_t)v67;
        _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v24, (uint64_t)v67, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.error.getter();
        int v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v40 = swift_slowAlloc();
          uint64_t v71 = swift_slowAlloc();
          v72[0] = v71;
          *(_DWORD *)uint64_t v40 = 136315394;
          type metadata accessor for UUID();
          _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
          LODWORD(v70) = v39;
          uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
          *(_WORD *)(v40 + 12) = 2080;
          uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v36, (void (*)(void))type metadata accessor for RemoteControlRequest);
          _os_log_impl(&dword_1C2F90000, v37, (os_log_type_t)v70, "endRequest.uuid != request.uuid (%s != %s", (uint8_t *)v40, 0x16u);
          uint64_t v45 = v71;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v45, -1, -1);
          MEMORY[0x1C87760E0](v40, -1, -1);
        }
        else
        {
          _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v36, (void (*)(void))type metadata accessor for RemoteControlRequest);
        }

        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 1;
      }
LABEL_22:
      *unint64_t v25 = v26;
      return swift_willThrow();
    default:
LABEL_2:
      uint64_t v73 = *a1;
      RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v73);
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      char v26 = 2;
      goto LABEL_22;
  }
}

uint64_t closure #1 in RemoteControlStateMachine.validateIncomingSuspendRequest(_:from:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v84 = a3;
  uint64_t v86 = a2;
  uint64_t v4 = type metadata accessor for RemoteControlSuspendRequest(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v85 = (void (*)(char *, uint64_t, uint64_t))((char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v83 = (uint64_t)&v79 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = type metadata accessor for RemoteControlRequest(0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v79 - v21;
  os_log_t v82 = a1;
  unint64_t v23 = (unint64_t)a1->isa >> 61;
  if (((1 << v23) & 0x2B) != 0) {
    goto LABEL_2;
  }
  if (v23 == 2)
  {
    uint64_t v27 = v20;
    uint64_t v80 = v8;
    int v81 = v13;
  }
  else
  {
    if (*(void *)(((uint64_t)a1->isa & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 != 2)
    {
LABEL_2:
      unint64_t isa = (unint64_t)a1->isa;
      RemoteControlStateMachine.logInvalidTransition(_:)(&isa);
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      char v25 = 2;
LABEL_3:
      *uint64_t v24 = v25;
      return swift_willThrow();
    }
    uint64_t v27 = v20;
    uint64_t v80 = v8;
    int v81 = v13;
  }
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  uint64_t v31 = swift_projectBox();
  uint64_t v32 = *(int *)(v30 + 48);
  uint64_t v33 = v29;
  uint64_t v34 = v28;
  uint64_t v35 = v31 + v32;
  _s15ConversationKit20RemoteControlMessageOWOcTm_0(v31, (uint64_t)v22, (void (*)(void))type metadata accessor for RemoteControlRequest);
  uint64_t v36 = v35;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v37(v17, v36, v33);
  uint64_t v38 = v86;
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v33);
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    __swift_project_value_buffer(v46, (uint64_t)static Log.screenSharing);
    unint64_t v47 = v85;
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(v38, (uint64_t)v85, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
    _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v22, v27, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    int v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v87[0] = v86;
      *(_DWORD *)uint64_t v51 = 136315394;
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
      LODWORD(v84) = v50;
      uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v47, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v27, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1C2F90000, v48, (os_log_type_t)v84, "suspendRequest.uuid != request.uuid (%s != %s", (uint8_t *)v51, 0x16u);
      uint64_t v56 = v86;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v56, -1, -1);
      MEMORY[0x1C87760E0](v51, -1, -1);
    }
    else
    {
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v47, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v27, (void (*)(void))type metadata accessor for RemoteControlRequest);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    char v25 = 1;
    goto LABEL_3;
  }
  uint64_t v39 = v84;
  if ((MEMORY[0x1C876F960](v17, v84) & 1) == 0)
  {
    _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v22, (void (*)(void))type metadata accessor for RemoteControlRequest);
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    __swift_project_value_buffer(v57, (uint64_t)static Log.screenSharing);
    uint64_t v58 = v83;
    v37((char *)v83, v39, v33);
    unint64_t v59 = v81;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v81, v17, v33);
    unint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    int v62 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v63 = swift_slowAlloc();
      int v81 = v59;
      uint64_t v64 = v63;
      uint64_t v86 = swift_slowAlloc();
      v87[0] = v86;
      *(_DWORD *)uint64_t v64 = 136315394;
      LODWORD(v84) = v62;
      os_log_t v82 = v60;
      uint64_t v65 = (uint64_t)v80;
      v37(v80, v58, v33);
      __swift_storeEnumTagSinglePayload(v65, 0, 1, v33);
      uint64_t v66 = specialized >> prefix<A>(_:)(v65);
      uint64_t v85 = v37;
      uint64_t v67 = v58;
      uint64_t v68 = v66;
      unint64_t v70 = v69;
      outlined destroy of Participant?(v65);
      unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v71(v67, v33);
      *(_WORD *)(v64 + 12) = 2080;
      uint64_t v83 = v64 + 14;
      unint64_t v72 = v81;
      v85((char *)v65, (uint64_t)v81, v33);
      __swift_storeEnumTagSinglePayload(v65, 0, 1, v33);
      uint64_t v73 = specialized >> prefix<A>(_:)(v65);
      unint64_t v75 = v74;
      outlined destroy of Participant?(v65);
      unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v75, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v71((uint64_t)v72, v33);
      os_log_t v76 = v82;
      _os_log_impl(&dword_1C2F90000, v82, (os_log_type_t)v84, "Rejecting suspendRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v64, 0x16u);
      uint64_t v77 = v86;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v77, -1, -1);
      MEMORY[0x1C87760E0](v64, -1, -1);
    }
    else
    {
      uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v78(v58, v33);
      v78((uint64_t)v59, v33);
    }
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    char v25 = 0;
    goto LABEL_3;
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v33);
  uint64_t v40 = swift_allocObject();
  uint64_t v85 = v37;
  uint64_t v41 = v40;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  uint64_t v83 = swift_allocBox();
  uint64_t v44 = v43 + *(int *)(v42 + 48);
  _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v22, v43, (void (*)(void))type metadata accessor for RemoteControlRequest);
  v85((char *)v44, v39, v33);
  uint64_t v45 = (unint64_t *)v82;
  *(void *)(v41 + 16) = v83 | 0x4000000000000000;
  *(unsigned char *)(v41 + 24) = *(unsigned char *)(v38 + *(int *)(v4 + 24));
  unint64_t isa = v41 | 0x8000000000000000;
  RemoteControlStateMachine.transformState(_:to:)(v45, &isa);
  return swift_release();
}

unint64_t closure #1 in RemoteControlStateMachine.validateIncomingResumeRequest(_:from:)(unint64_t *a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5)
{
  os_log_t v90 = a4;
  uint64_t v91 = a5;
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v89 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v92 = (char *)&v81 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v81 - v15;
  uint64_t v17 = type metadata accessor for RemoteControlRequest(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v81 - v20;
  MEMORY[0x1F4188790](v19);
  unint64_t v24 = *a1;
  if (*a1 >> 61 != 4 || *(void *)((v24 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 != 2)
  {
    uint64_t v96 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v96);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v46 = 2;
    return swift_willThrow();
  }
  os_log_t v82 = v12;
  uint64_t v83 = (uint64_t *)v23;
  unint64_t v86 = v24;
  uint64_t v88 = v8;
  char v25 = v16;
  char v26 = (char *)&v81 - v22;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  uint64_t v28 = swift_projectBox();
  uint64_t v81 = v27;
  uint64_t v29 = v28 + *(int *)(v27 + 48);
  _s15ConversationKit20RemoteControlMessageOWOcTm_0(v28, (uint64_t)v26, (void (*)(void))type metadata accessor for RemoteControlRequest);
  uint64_t v85 = v9;
  uint64_t v30 = v9 + 16;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v32 = (uint64_t)v25;
  uint64_t v33 = v25;
  uint64_t v34 = v29;
  uint64_t v35 = v88;
  uint64_t v84 = v30;
  uint64_t v36 = v31;
  ((void (*)(char *, uint64_t))v31)(v33, v34);
  swift_retain();
  uint64_t v87 = v26;
  uint64_t v37 = v94;
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v91 = v32;
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    __swift_project_value_buffer(v48, (uint64_t)static Log.screenSharing);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(v37, (uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v49 = (uint64_t)v83;
    _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v87, (uint64_t)v83, (void (*)(void))type metadata accessor for RemoteControlRequest);
    int v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    int v52 = v51;
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v95[0] = v94;
      *(_DWORD *)uint64_t v53 = 136315394;
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
      LODWORD(v93) = v52;
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v49, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1C2F90000, v50, (os_log_type_t)v93, "resumeRequest.uuid != request.uuid (%s != %s", (uint8_t *)v53, 0x16u);
      uint64_t v58 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v58, -1, -1);
      MEMORY[0x1C87760E0](v53, -1, -1);
    }
    else
    {
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v49, (void (*)(void))type metadata accessor for RemoteControlRequest);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v79 = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v91, v88);
    goto LABEL_19;
  }
  uint64_t v38 = v32;
  uint64_t v39 = v93;
  if ((MEMORY[0x1C876F960](v32, v93) & 1) == 0)
  {
    uint64_t v91 = v32;
    unint64_t v59 = v36;
    uint64_t v60 = v35;
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    __swift_project_value_buffer(v61, (uint64_t)static Log.screenSharing);
    int v62 = v92;
    v36(v92, v39, v35);
    uint64_t v63 = v82;
    v59(v82, v91, v35);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v95[0] = v94;
      *(_DWORD *)uint64_t v67 = 136315394;
      LODWORD(v93) = v66;
      os_log_t v90 = v64;
      uint64_t v68 = (uint64_t)v89;
      v59(v89, (uint64_t)v62, v60);
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v60);
      uint64_t v69 = specialized >> prefix<A>(_:)(v68);
      unint64_t v71 = v70;
      outlined destroy of Participant?(v68);
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v71, v95);
      uint64_t v83 = &v97;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v72 = *(void (**)(char *, uint64_t))(v85 + 8);
      v72(v92, v60);
      *(_WORD *)(v67 + 12) = 2080;
      uint64_t v92 = (char *)(v67 + 14);
      v59((char *)v68, (uint64_t)v63, v60);
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v60);
      uint64_t v73 = specialized >> prefix<A>(_:)(v68);
      unint64_t v74 = v63;
      unint64_t v76 = v75;
      outlined destroy of Participant?(v68);
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v76, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v72(v74, v60);
      os_log_t v77 = v90;
      _os_log_impl(&dword_1C2F90000, v90, (os_log_type_t)v93, "Rejecting resumeRequest from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v67, 0x16u);
      uint64_t v78 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v78, -1, -1);
      MEMORY[0x1C87760E0](v67, -1, -1);
    }
    else
    {
      unint64_t v72 = *(void (**)(char *, uint64_t))(v85 + 8);
      v72(v62, v35);
      v72(v63, v35);
    }
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v80 = 0;
    swift_willThrow();
    v72((char *)v91, v60);
LABEL_19:
    uint64_t v45 = (uint64_t)v87;
    goto LABEL_20;
  }
  v95[0] = (uint64_t)v90;
  v95[1] = v91;
  uint64_t v40 = v81;
  uint64_t v41 = swift_allocBox();
  uint64_t v43 = v42 + *(int *)(v40 + 48);
  uint64_t v44 = (uint64_t)v87;
  _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v87, v42, (void (*)(void))type metadata accessor for RemoteControlRequest);
  v36((char *)v43, v39, v35);
  uint64_t v96 = v41 | 0x4000000000000000;
  RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v96);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v38, v35);
  uint64_t v45 = v44;
LABEL_20:
  _s15ConversationKit20RemoteControlRequestVWOhTm_0(v45, (void (*)(void))type metadata accessor for RemoteControlRequest);
  return outlined consume of RemoteControlState(v86);
}

uint64_t closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlRequest(_:to:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*a1 == 0xA000000000000010 && (*a1 >> 61) > 4)
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    uint64_t v12 = swift_allocBox();
    uint64_t v14 = v13 + *(int *)(v11 + 48);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(a4, v13, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v15 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a5, v15);
    uint64_t v16 = v12 | 0x2000000000000000;
    RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v16);
    return swift_release();
  }
  else
  {
    uint64_t v16 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v16);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v6 = 2;
    return swift_willThrow();
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlResponse(_:to:)(unint64_t *a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v75 = a4;
  os_log_t v78 = a3;
  uint64_t v80 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RemoteControlResponse(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Participant();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v79 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v73 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v19 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1F4188790](v19 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v73 - v22;
  unint64_t v76 = a1;
  unint64_t v24 = *a1;
  switch(v24 >> 61)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 5uLL:
      goto LABEL_2;
    case 4uLL:
      if (*(void *)((v24 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 != 3)
      {
LABEL_2:
        uint64_t v82 = v24;
        RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v82);
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 2;
LABEL_3:
        *char v25 = v26;
        return swift_willThrow();
      }
      uint64_t v73 = v21;
      unint64_t v74 = v7;
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v29 = swift_projectBox();
      uint64_t v30 = *(int *)(v31 + 48);
LABEL_7:
      uint64_t v32 = v29 + v30;
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v29, (uint64_t)v23, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v33 = v11;
      uint64_t v34 = *(unint64_t **)(v11 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v34)(v18, v32, v10);
      if ((MEMORY[0x1C876F960](v18, v80) & 1) == 0)
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v23, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v40 = v33;
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        __swift_project_value_buffer(v41, (uint64_t)static Log.screenSharing);
        uint64_t v42 = v33 + 16;
        ((void (*)(char *, uint64_t, uint64_t))v34)(v15, v80, v10);
        uint64_t v43 = v79;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v79, v18, v10);
        uint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.error.getter();
        int v46 = v45;
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v47 = swift_slowAlloc();
          os_log_t v78 = v44;
          uint64_t v48 = v47;
          uint64_t v80 = swift_slowAlloc();
          v81[0] = v80;
          *(_DWORD *)uint64_t v48 = 136315394;
          LODWORD(v77) = v46;
          uint64_t v49 = (uint64_t)v74;
          ((void (*)(char *, char *, uint64_t))v34)(v74, v15, v10);
          __swift_storeEnumTagSinglePayload(v49, 0, 1, v10);
          uint64_t v50 = specialized >> prefix<A>(_:)(v49);
          uint64_t v75 = v42;
          unint64_t v76 = v34;
          uint64_t v51 = v50;
          unint64_t v53 = v52;
          outlined destroy of Participant?(v49);
          uint64_t v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v54 = *(void (**)(char *, uint64_t))(v40 + 8);
          v54(v15, v10);
          *(_WORD *)(v48 + 12) = 2080;
          uint64_t v73 = v48 + 14;
          unint64_t v55 = v79;
          ((void (*)(uint64_t, char *, uint64_t))v76)(v49, v79, v10);
          __swift_storeEnumTagSinglePayload(v49, 0, 1, v10);
          uint64_t v56 = specialized >> prefix<A>(_:)(v49);
          unint64_t v58 = v57;
          outlined destroy of Participant?(v49);
          uint64_t v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v54(v55, v10);
          os_log_t v59 = v78;
          _os_log_impl(&dword_1C2F90000, v78, (os_log_type_t)v77, "Rejecting remoteControlResponse from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v48, 0x16u);
          uint64_t v60 = v80;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v60, -1, -1);
          MEMORY[0x1C87760E0](v48, -1, -1);
        }
        else
        {
          unint64_t v72 = *(void (**)(char *, uint64_t))(v40 + 8);
          v72(v15, v10);
          v72(v43, v10);
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 0;
        goto LABEL_3;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v10);
      os_log_t v35 = v78;
      if ((static UUID.== infix(_:_:)() & 1) == 0)
      {
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v61 = type metadata accessor for Logger();
        __swift_project_value_buffer(v61, (uint64_t)static Log.screenSharing);
        uint64_t v62 = v77;
        _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v35, v77, (void (*)(void))type metadata accessor for RemoteControlResponse);
        uint64_t v63 = v73;
        _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v23, v73, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          v81[0] = v80;
          *(_DWORD *)uint64_t v66 = 136315394;
          type metadata accessor for UUID();
          _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
          uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v77, (void (*)(void))type metadata accessor for RemoteControlResponse);
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v63, (void (*)(void))type metadata accessor for RemoteControlRequest);
          _os_log_impl(&dword_1C2F90000, v64, v65, "Response.requestUUID != request.uuid (%s != %s", (uint8_t *)v66, 0x16u);
          uint64_t v71 = v80;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v71, -1, -1);
          MEMORY[0x1C87760E0](v66, -1, -1);
        }
        else
        {
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v62, (void (*)(void))type metadata accessor for RemoteControlResponse);
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v63, (void (*)(void))type metadata accessor for RemoteControlRequest);
        }

        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 1;
        goto LABEL_3;
      }
      if (*((unsigned char *)&v35->isa + *(int *)(v8 + 28)) == 1)
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
        uint64_t v37 = swift_allocBox();
        uint64_t v39 = v38 + *(int *)(v36 + 48);
        _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v23, v38, (void (*)(void))type metadata accessor for RemoteControlRequest);
        ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v39, v80, v10);
        uint64_t v82 = v37 | 0x6000000000000000;
        RemoteControlStateMachine.transformState(_:to:)(v76, (unint64_t *)&v82);
        return swift_release();
      }
      else
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v23, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v82 = v75;
        return RemoteControlStateMachine.transformState(_:to:)(v76, (unint64_t *)&v82);
      }
    default:
      uint64_t v73 = v21;
      unint64_t v74 = v7;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
      uint64_t v29 = swift_projectBox();
      uint64_t v30 = *(int *)(v28 + 48);
      goto LABEL_7;
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateOutgoingCancellation(_:to:)(unint64_t *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v84 = a5;
  uint64_t v85 = (char *)a4;
  uint64_t v88 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v86 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v87 = (char *)&v77 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v77 - v16;
  uint64_t v18 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1F4188790](v18 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v77 - v20;
  MEMORY[0x1F4188790](v22);
  char v25 = (char *)&v77 - v24;
  unint64_t v26 = *a1;
  if (*a1 >> 61 != 1)
  {
    uint64_t v92 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v92);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *os_log_t v35 = 2;
    return swift_willThrow();
  }
  uint64_t v80 = v23;
  uint64_t v81 = v12;
  unint64_t v83 = v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  uint64_t v90 = v9;
  uint64_t v28 = v27;
  uint64_t v29 = swift_projectBox();
  uint64_t v30 = v29 + *(int *)(v28 + 48);
  _s15ConversationKit20RemoteControlMessageOWOcTm_0(v29, (uint64_t)v25, (void (*)(void))type metadata accessor for RemoteControlRequest);
  uint64_t v82 = v10;
  uint64_t v31 = v30;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v32(v17, v31, v90);
  swift_retain();
  uint64_t v89 = v17;
  if ((MEMORY[0x1C876F960](v17, a2) & 1) == 0)
  {
    uint64_t v85 = v25;
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static Log.screenSharing);
    uint64_t v38 = v87;
    uint64_t v39 = a2;
    uint64_t v40 = v90;
    uint64_t v41 = (void (*)(char *, char *, uint64_t))v32;
    v32(v87, v39, v90);
    uint64_t v42 = v81;
    v41(v81, v89, v40);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    int v45 = v44;
    uint64_t v88 = v43;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      v91[0] = v84;
      *(_DWORD *)uint64_t v46 = 136315394;
      LODWORD(v80) = v45;
      uint64_t v47 = (uint64_t)v86;
      v41(v86, v38, v90);
      __swift_storeEnumTagSinglePayload(v47, 0, 1, v90);
      uint64_t v48 = specialized >> prefix<A>(_:)(v47);
      os_log_t v78 = (void (*)(uint64_t, char *, uint64_t))v41;
      uint64_t v49 = v38;
      uint64_t v50 = v48;
      unint64_t v52 = v51;
      outlined destroy of Participant?(v47);
      uint64_t v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v52, v91);
      uint64_t v79 = &v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v53 = *(void (**)(char *, uint64_t))(v82 + 8);
      v53(v49, v90);
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v87 = (char *)(v46 + 14);
      uint64_t v54 = v81;
      v78(v47, v81, v90);
      __swift_storeEnumTagSinglePayload(v47, 0, 1, v90);
      uint64_t v55 = specialized >> prefix<A>(_:)(v47);
      unint64_t v57 = v56;
      outlined destroy of Participant?(v47);
      uint64_t v40 = v90;
      uint64_t v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v53(v54, v40);
      unint64_t v58 = v88;
      _os_log_impl(&dword_1C2F90000, v88, (os_log_type_t)v80, "Rejecting remoteControlResponse from: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v46, 0x16u);
      uint64_t v59 = v84;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v59, -1, -1);
      MEMORY[0x1C87760E0](v46, -1, -1);
    }
    else
    {
      unint64_t v53 = *(void (**)(char *, uint64_t))(v82 + 8);
      v53(v38, v40);
      v53(v42, v40);
    }
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v75 = 0;
    swift_willThrow();
    v53(v89, v40);
    goto LABEL_18;
  }
  uint64_t v33 = v88;
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v85 = v25;
    uint64_t v60 = v89;
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    __swift_project_value_buffer(v61, (uint64_t)static Log.screenSharing);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v33, (uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v62 = v80;
    _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v85, v80, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.error.getter();
    int v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v66 = swift_slowAlloc();
      LODWORD(v87) = v65;
      uint64_t v67 = v66;
      uint64_t v88 = swift_slowAlloc();
      v91[0] = (uint64_t)v88;
      *(_DWORD *)uint64_t v67 = 136315394;
      unint64_t v86 = (char *)(v67 + 4);
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
      uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
      *(_WORD *)(v67 + 12) = 2080;
      uint64_t v70 = v90;
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v60 = v89;
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v62, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1C2F90000, v63, (os_log_type_t)v87, "cancellationRequest.uuid != request.uuid (%s != %s", (uint8_t *)v67, 0x16u);
      uint64_t v73 = v88;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v73, -1, -1);
      MEMORY[0x1C87760E0](v67, -1, -1);

      uint64_t v74 = v82;
    }
    else
    {
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v21, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v62, (void (*)(void))type metadata accessor for RemoteControlRequest);

      uint64_t v74 = v82;
      uint64_t v70 = v90;
    }
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *unint64_t v76 = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v70);
LABEL_18:
    uint64_t v34 = (uint64_t)v85;
    goto LABEL_19;
  }
  v91[0] = (uint64_t)v85;
  v91[1] = v84;
  uint64_t v92 = (uint64_t)v85;
  RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v92);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v89, v90);
  uint64_t v34 = (uint64_t)v25;
LABEL_19:
  _s15ConversationKit20RemoteControlRequestVWOhTm_0(v34, (void (*)(void))type metadata accessor for RemoteControlRequest);
  return outlined consume of RemoteControlState(v83);
}

unint64_t closure #1 in RemoteControlStateMachine.validateOutgoingEndRequest(_:to:)(unint64_t *a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v68 = a4;
  os_log_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v69 = (char *)&v64 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v17 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1F4188790](v17 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v64 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v64 - v23;
  switch(*a1 >> 61)
  {
    case 2uLL:
    case 3uLL:
      uint64_t v66 = v11;
      uint64_t v67 = (uint64_t *)v22;
      int v65 = v7;
      goto LABEL_7;
    case 4uLL:
      uint64_t v27 = *(void *)((*a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61;
      if (v27 != 3 && v27 != 2) {
        goto LABEL_2;
      }
      uint64_t v66 = v11;
      uint64_t v67 = (uint64_t *)v22;
      int v65 = v7;
LABEL_7:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v29 = swift_projectBox();
      uint64_t v30 = v29 + *(int *)(v28 + 48);
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v29, (uint64_t)v24, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v31(v16, v30, v8);
      uint64_t v32 = v71;
      if (static UUID.== infix(_:_:)())
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v24, (void (*)(void))type metadata accessor for RemoteControlRequest);
        os_log_t v33 = v70;
        if (MEMORY[0x1C876F960](v16, v70))
        {
          (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
          uint64_t v73 = v68;
          return RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v73);
        }
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        __swift_project_value_buffer(v46, (uint64_t)static Log.screenSharing);
        uint64_t v47 = v69;
        v31(v69, (uint64_t)v33, v8);
        uint64_t v48 = v66;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v66, v16, v8);
        uint64_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.error.getter();
        int v51 = v50;
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v52 = swift_slowAlloc();
          os_log_t v70 = v49;
          uint64_t v53 = v52;
          uint64_t v71 = swift_slowAlloc();
          v72[0] = v71;
          *(_DWORD *)uint64_t v53 = 136315394;
          os_log_type_t v64 = (void (*)(char *, uint64_t))(v53 + 4);
          LODWORD(v68) = v51;
          uint64_t v54 = (uint64_t)v65;
          v31(v65, (uint64_t)v47, v8);
          __swift_storeEnumTagSinglePayload(v54, 0, 1, v8);
          uint64_t v55 = specialized >> prefix<A>(_:)(v54);
          unint64_t v57 = v56;
          outlined destroy of Participant?(v54);
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, v72);
          uint64_t v67 = &v74;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          os_log_type_t v64 = *(void (**)(char *, uint64_t))(v9 + 8);
          v64(v69, v8);
          *(_WORD *)(v53 + 12) = 2080;
          unint64_t v69 = (char *)(v53 + 14);
          v31((char *)v54, (uint64_t)v48, v8);
          __swift_storeEnumTagSinglePayload(v54, 0, 1, v8);
          uint64_t v58 = specialized >> prefix<A>(_:)(v54);
          unint64_t v60 = v59;
          outlined destroy of Participant?(v54);
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v64(v48, v8);
          os_log_t v61 = v70;
          _os_log_impl(&dword_1C2F90000, v70, (os_log_type_t)v68, "Rejecting endRequest to: %s since it mismatches the participant: %s", (uint8_t *)v53, 0x16u);
          uint64_t v62 = v71;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v62, -1, -1);
          MEMORY[0x1C87760E0](v53, -1, -1);
        }
        else
        {
          uint64_t v63 = *(void (**)(char *, uint64_t))(v9 + 8);
          v63(v47, v8);
          v63(v48, v8);
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v35 = type metadata accessor for Logger();
        __swift_project_value_buffer(v35, (uint64_t)static Log.screenSharing);
        _s15ConversationKit20RemoteControlMessageOWOcTm_0(v32, (uint64_t)v20, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v36 = (uint64_t)v67;
        _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v24, (uint64_t)v67, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.error.getter();
        int v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v40 = swift_slowAlloc();
          uint64_t v71 = swift_slowAlloc();
          v72[0] = v71;
          *(_DWORD *)uint64_t v40 = 136315394;
          type metadata accessor for UUID();
          _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
          LODWORD(v70) = v39;
          uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v20, (void (*)(void))type metadata accessor for RemoteControlRequest);
          *(_WORD *)(v40 + 12) = 2080;
          uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v36, (void (*)(void))type metadata accessor for RemoteControlRequest);
          _os_log_impl(&dword_1C2F90000, v37, (os_log_type_t)v70, "endRequest.uuid != request.uuid (%s != %s", (uint8_t *)v40, 0x16u);
          uint64_t v45 = v71;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v45, -1, -1);
          MEMORY[0x1C87760E0](v40, -1, -1);
        }
        else
        {
          _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v20, (void (*)(void))type metadata accessor for RemoteControlRequest);
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v36, (void (*)(void))type metadata accessor for RemoteControlRequest);
        }

        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v26 = 1;
      }
LABEL_22:
      *char v25 = v26;
      return swift_willThrow();
    default:
LABEL_2:
      uint64_t v73 = *a1;
      RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v73);
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      char v26 = 2;
      goto LABEL_22;
  }
}

uint64_t closure #1 in RemoteControlStateMachine.validateOutgoingSuspendRequest(_:to:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v83 = a3;
  uint64_t v85 = a2;
  uint64_t v4 = type metadata accessor for RemoteControlSuspendRequest(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v84 = (void (*)(char *, uint64_t, uint64_t))((char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v82 = (uint64_t)&v78 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v78 - v16;
  uint64_t v18 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1F4188790](v18 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v78 - v21;
  os_log_t v81 = a1;
  switch((unint64_t)a1->isa >> 61)
  {
    case 3uLL:
      uint64_t v26 = v20;
      uint64_t v79 = v8;
      uint64_t v80 = v12;
      goto LABEL_7;
    case 4uLL:
      if (*(void *)(((uint64_t)a1->isa & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 != 3) {
        goto LABEL_2;
      }
      uint64_t v26 = v20;
      uint64_t v79 = v8;
      uint64_t v80 = v12;
LABEL_7:
      uint64_t v27 = v10;
      uint64_t v28 = v9;
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v30 = swift_projectBox();
      uint64_t v31 = *(int *)(v29 + 48);
      uint64_t v32 = v28;
      uint64_t v33 = v27;
      uint64_t v34 = v30 + v31;
      _s15ConversationKit20RemoteControlMessageOWOcTm_0(v30, (uint64_t)v22, (void (*)(void))type metadata accessor for RemoteControlRequest);
      uint64_t v35 = v34;
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
      v36(v17, v35, v32);
      uint64_t v37 = v85;
      if ((static UUID.== infix(_:_:)() & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v32);
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        __swift_project_value_buffer(v45, (uint64_t)static Log.screenSharing);
        uint64_t v46 = v84;
        _s15ConversationKit20RemoteControlMessageOWOcTm_0(v37, (uint64_t)v84, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
        _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v22, v26, (void (*)(void))type metadata accessor for RemoteControlRequest);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.error.getter();
        int v49 = v48;
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v50 = swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          v86[0] = v85;
          *(_DWORD *)uint64_t v50 = 136315394;
          type metadata accessor for UUID();
          _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
          LODWORD(v83) = v49;
          uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v46, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
          *(_WORD *)(v50 + 12) = 2080;
          uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v26, (void (*)(void))type metadata accessor for RemoteControlRequest);
          _os_log_impl(&dword_1C2F90000, v47, (os_log_type_t)v83, "suspendRequest.uuid != request.uuid (%s != %s", (uint8_t *)v50, 0x16u);
          uint64_t v55 = v85;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v55, -1, -1);
          MEMORY[0x1C87760E0](v50, -1, -1);
        }
        else
        {
          _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v46, (void (*)(void))type metadata accessor for RemoteControlSuspendRequest);
          _s15ConversationKit20RemoteControlRequestVWOhTm_0(v26, (void (*)(void))type metadata accessor for RemoteControlRequest);
        }

        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v24 = 1;
        goto LABEL_3;
      }
      uint64_t v38 = v83;
      if ((MEMORY[0x1C876F960](v17, v83) & 1) == 0)
      {
        _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v22, (void (*)(void))type metadata accessor for RemoteControlRequest);
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v56 = type metadata accessor for Logger();
        __swift_project_value_buffer(v56, (uint64_t)static Log.screenSharing);
        uint64_t v57 = v82;
        v36((char *)v82, v38, v32);
        uint64_t v58 = v80;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v80, v17, v32);
        unint64_t v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.error.getter();
        int v61 = v60;
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v62 = swift_slowAlloc();
          uint64_t v80 = v58;
          uint64_t v63 = v62;
          uint64_t v85 = swift_slowAlloc();
          v86[0] = v85;
          *(_DWORD *)uint64_t v63 = 136315394;
          LODWORD(v83) = v61;
          os_log_t v81 = v59;
          uint64_t v64 = (uint64_t)v79;
          v36(v79, v57, v32);
          __swift_storeEnumTagSinglePayload(v64, 0, 1, v32);
          uint64_t v65 = specialized >> prefix<A>(_:)(v64);
          uint64_t v84 = v36;
          uint64_t v66 = v57;
          uint64_t v67 = v65;
          unint64_t v69 = v68;
          outlined destroy of Participant?(v64);
          unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v69, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          os_log_t v70 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
          v70(v66, v32);
          *(_WORD *)(v63 + 12) = 2080;
          uint64_t v82 = v63 + 14;
          uint64_t v71 = v80;
          v84((char *)v64, (uint64_t)v80, v32);
          __swift_storeEnumTagSinglePayload(v64, 0, 1, v32);
          uint64_t v72 = specialized >> prefix<A>(_:)(v64);
          unint64_t v74 = v73;
          outlined destroy of Participant?(v64);
          unint64_t isa = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v74, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v70((uint64_t)v71, v32);
          os_log_t v75 = v81;
          _os_log_impl(&dword_1C2F90000, v81, (os_log_type_t)v83, "Rejecting remoteControlResponse to: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v63, 0x16u);
          uint64_t v76 = v85;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v76, -1, -1);
          MEMORY[0x1C87760E0](v63, -1, -1);
        }
        else
        {
          uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
          v77(v57, v32);
          v77((uint64_t)v58, v32);
        }
        lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
        swift_allocError();
        char v24 = 0;
LABEL_3:
        *uint64_t v23 = v24;
        return swift_willThrow();
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v32);
      uint64_t v39 = swift_allocObject();
      uint64_t v84 = v36;
      uint64_t v40 = v39;
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
      uint64_t v82 = swift_allocBox();
      uint64_t v43 = v42 + *(int *)(v41 + 48);
      _s15ConversationKit20RemoteControlRequestVWObTm_0((uint64_t)v22, v42, (void (*)(void))type metadata accessor for RemoteControlRequest);
      v84((char *)v43, v38, v32);
      unint64_t v44 = (unint64_t *)v81;
      *(void *)(v40 + 16) = v82 | 0x6000000000000000;
      *(unsigned char *)(v40 + 24) = *(unsigned char *)(v37 + *(int *)(v4 + 24));
      unint64_t isa = v40 | 0x8000000000000000;
      RemoteControlStateMachine.transformState(_:to:)(v44, &isa);
      return swift_release();
    default:
LABEL_2:
      unint64_t isa = (unint64_t)a1->isa;
      RemoteControlStateMachine.logInvalidTransition(_:)(&isa);
      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      char v24 = 2;
      goto LABEL_3;
  }
}

unint64_t closure #1 in RemoteControlStateMachine.validateOutgoingResumeRequest(_:to:)(unint64_t *a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5)
{
  os_log_t v90 = a4;
  uint64_t v91 = a5;
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v89 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v92 = (char *)&v81 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v81 - v15;
  uint64_t v17 = type metadata accessor for RemoteControlRequest(0);
  MEMORY[0x1F4188790](v17 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v81 - v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v24 = *a1;
  if (*a1 >> 61 != 4 || *(void *)((v24 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 != 3)
  {
    uint64_t v96 = *a1;
    RemoteControlStateMachine.logInvalidTransition(_:)((unint64_t *)&v96);
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v46 = 2;
    return swift_willThrow();
  }
  uint64_t v82 = v11;
  uint64_t v83 = (uint64_t *)v23;
  unint64_t v86 = v24;
  uint64_t v88 = v8;
  char v25 = v16;
  uint64_t v26 = (char *)&v81 - v22;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
  uint64_t v28 = swift_projectBox();
  uint64_t v81 = v27;
  uint64_t v29 = v28 + *(int *)(v27 + 48);
  _s15ConversationKit20RemoteControlMessageOWOcTm_0(v28, (uint64_t)v26, (void (*)(void))type metadata accessor for RemoteControlRequest);
  uint64_t v85 = v9;
  uint64_t v30 = v9 + 16;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v32 = (uint64_t)v25;
  uint64_t v33 = v25;
  uint64_t v34 = v29;
  uint64_t v35 = v88;
  uint64_t v84 = v30;
  uint64_t v36 = v31;
  ((void (*)(char *, uint64_t))v31)(v33, v34);
  swift_retain();
  uint64_t v87 = v26;
  uint64_t v37 = v94;
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v91 = v32;
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    __swift_project_value_buffer(v48, (uint64_t)static Log.screenSharing);
    _s15ConversationKit20RemoteControlMessageOWOcTm_0(v37, (uint64_t)v20, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v49 = (uint64_t)v83;
    _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v87, (uint64_t)v83, (void (*)(void))type metadata accessor for RemoteControlRequest);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    int v52 = v51;
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v95[0] = v94;
      *(_DWORD *)uint64_t v53 = 136315394;
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCB0]);
      LODWORD(v93) = v52;
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v20, (void (*)(void))type metadata accessor for RemoteControlRequest);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v49, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _os_log_impl(&dword_1C2F90000, v50, (os_log_type_t)v93, "resumeRequest.uuid != request.uuid (%s != %s", (uint8_t *)v53, 0x16u);
      uint64_t v58 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v58, -1, -1);
      MEMORY[0x1C87760E0](v53, -1, -1);
    }
    else
    {
      _s15ConversationKit20RemoteControlRequestVWOhTm_0((uint64_t)v20, (void (*)(void))type metadata accessor for RemoteControlRequest);
      _s15ConversationKit20RemoteControlRequestVWOhTm_0(v49, (void (*)(void))type metadata accessor for RemoteControlRequest);
    }

    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v79 = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v91, v88);
    goto LABEL_19;
  }
  uint64_t v38 = v32;
  uint64_t v39 = v93;
  if ((MEMORY[0x1C876F960](v32, v93) & 1) == 0)
  {
    uint64_t v91 = v32;
    unint64_t v59 = v36;
    uint64_t v60 = v35;
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    __swift_project_value_buffer(v61, (uint64_t)static Log.screenSharing);
    uint64_t v62 = v92;
    v36(v92, v39, v35);
    uint64_t v63 = v82;
    v59(v82, v91, v35);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v95[0] = v94;
      *(_DWORD *)uint64_t v67 = 136315394;
      LODWORD(v93) = v66;
      os_log_t v90 = v64;
      uint64_t v68 = (uint64_t)v89;
      v59(v89, (uint64_t)v62, v60);
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v60);
      uint64_t v69 = specialized >> prefix<A>(_:)(v68);
      unint64_t v71 = v70;
      outlined destroy of Participant?(v68);
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v71, v95);
      uint64_t v83 = &v97;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v72 = *(void (**)(char *, uint64_t))(v85 + 8);
      v72(v92, v60);
      *(_WORD *)(v67 + 12) = 2080;
      uint64_t v92 = (char *)(v67 + 14);
      v59((char *)v68, (uint64_t)v63, v60);
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v60);
      uint64_t v73 = specialized >> prefix<A>(_:)(v68);
      unint64_t v74 = v63;
      unint64_t v76 = v75;
      outlined destroy of Participant?(v68);
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v76, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v72(v74, v60);
      os_log_t v77 = v90;
      _os_log_impl(&dword_1C2F90000, v90, (os_log_type_t)v93, "Rejecting resumeRequest to: %s since it mismatches the participant we requested control from: %s", (uint8_t *)v67, 0x16u);
      uint64_t v78 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v78, -1, -1);
      MEMORY[0x1C87760E0](v67, -1, -1);
    }
    else
    {
      uint64_t v72 = *(void (**)(char *, uint64_t))(v85 + 8);
      v72(v62, v35);
      v72(v63, v35);
    }
    lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
    swift_allocError();
    *uint64_t v80 = 0;
    swift_willThrow();
    v72((char *)v91, v60);
LABEL_19:
    uint64_t v45 = (uint64_t)v87;
    goto LABEL_20;
  }
  v95[0] = (uint64_t)v90;
  v95[1] = v91;
  uint64_t v40 = v81;
  uint64_t v41 = swift_allocBox();
  uint64_t v43 = v42 + *(int *)(v40 + 48);
  uint64_t v44 = (uint64_t)v87;
  _s15ConversationKit20RemoteControlMessageOWOcTm_0((uint64_t)v87, v42, (void (*)(void))type metadata accessor for RemoteControlRequest);
  v36((char *)v43, v39, v35);
  uint64_t v96 = v41 | 0x6000000000000000;
  RemoteControlStateMachine.transformState(_:to:)(a1, (unint64_t *)&v96);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v38, v35);
  uint64_t v45 = v44;
LABEL_20:
  _s15ConversationKit20RemoteControlRequestVWOhTm_0(v45, (void (*)(void))type metadata accessor for RemoteControlRequest);
  return outlined consume of RemoteControlState(v86);
}

uint64_t closure #1 in RemoteControlStateMachine.validateIncomingPlaybackServerMessage(from:)(void *a1, uint64_t a2, const char *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Participant();
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_36();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_52();
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v39 - v18;
  if (((1 << (*a1 >> 61)) & 0x33) == 0)
  {
    uint64_t v46 = a3;
    uint64_t v47 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant));
    swift_projectBox();
    uint64_t v20 = *(void (**)(void))(v12 + 16);
    OUTLINED_FUNCTION_2_1();
    v20();
    if (MEMORY[0x1C876F960](v19, a2))
    {
      OUTLINED_FUNCTION_1_19();
      return v21();
    }
    else
    {
      if (one-time initialization token for screenSharing != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      __swift_project_value_buffer(v22, (uint64_t)static Log.screenSharing);
      uint64_t v45 = v12 + 16;
      OUTLINED_FUNCTION_2_1();
      v20();
      uint64_t v23 = v47;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v47, v19, v10);
      unint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v50 = v44;
        *(_DWORD *)uint64_t v27 = 136315394;
        uint64_t v40 = v27 + 4;
        OUTLINED_FUNCTION_2_1();
        v20();
        uint64_t v28 = OUTLINED_FUNCTION_33_29();
        int v43 = v26;
        uint64_t v29 = v28;
        unint64_t v31 = v30;
        outlined destroy of Participant?((uint64_t)v9);
        uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v50);
        uint64_t v41 = &v49;
        os_log_t v42 = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v32 = *(void (**)(void))(v12 + 8);
        OUTLINED_FUNCTION_1_19();
        v32();
        *(_WORD *)(v27 + 12) = 2080;
        uint64_t v40 = v27 + 14;
        OUTLINED_FUNCTION_2_1();
        v20();
        uint64_t v33 = OUTLINED_FUNCTION_33_29();
        unint64_t v35 = v34;
        outlined destroy of Participant?((uint64_t)v9);
        uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_1_19();
        v32();
        unint64_t v24 = v42;
        _os_log_impl(&dword_1C2F90000, v42, (os_log_type_t)v43, v46, (uint8_t *)v27, 0x16u);
        uint64_t v36 = v44;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v36, -1, -1);
        MEMORY[0x1C87760E0](v27, -1, -1);
      }
      else
      {
        uint64_t v37 = *(void (**)(void))(v12 + 8);
        OUTLINED_FUNCTION_1_19();
        v37();
        ((void (*)(uint64_t, uint64_t))v37)(v23, v10);
      }

      lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors();
      swift_allocError();
      *uint64_t v38 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingPlaybackServerMessage(to:)(void *a1)
{
  return closure #1 in RemoteControlStateMachine.validateIncomingPlaybackServerMessage(from:)(a1, *(void *)(v1 + 16), "Rejecting send to %s since it doesn't contain state's participant: %s");
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingResumeRequest(_:to:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateOutgoingResumeRequest(_:to:)(v0, v1, v2, v3, v4);
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingSuspendRequest(_:to:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateOutgoingSuspendRequest(_:to:)(v0, v1, v2);
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingEndRequest(_:to:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateOutgoingEndRequest(_:to:)(v0, v1, v2, v3);
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingCancellation(_:to:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateOutgoingCancellation(_:to:)(v0, v1, v2, v3, v4);
}

uint64_t _s15ConversationKit20RemoteControlRequestVWObTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlResponse(_:to:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlResponse(_:to:)(v0, v1, v2, v3);
}

uint64_t _s15ConversationKit20RemoteControlRequestVWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlRequest(_:to:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateOutgoingRemoteControlRequest(_:to:)(v0, v1, v2, v3, v4);
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingPlaybackServerMessage(from:)(void *a1)
{
  return closure #1 in RemoteControlStateMachine.validateIncomingPlaybackServerMessage(from:)(a1, *(void *)(v1 + 16), "Rejecting incoming message from %s since it mismatches our current state's participant %s");
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingResumeRequest(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateIncomingResumeRequest(_:from:)(v0, v1, v2, v3, v4);
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingSuspendRequest(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateIncomingSuspendRequest(_:from:)(v0, v1, v2);
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingEndRequest(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateIncomingEndRequest(_:from:)(v0, v1, v2, v3);
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingCancellation(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateIncomingCancellation(_:from:)(v0, v1, v2, v3, v4);
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlResponse(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlResponse(_:from:)(v0, v1, v2, v3, v4);
}

uint64_t partial apply for closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlRequest(_:from:)()
{
  OUTLINED_FUNCTION_14_6();
  return closure #1 in RemoteControlStateMachine.validateIncomingRemoteControlRequest(_:from:)(v0, v1, v2, v3, v4);
}

unint64_t lazy protocol witness table accessor for type Participant and conformance Participant()
{
  unint64_t result = lazy protocol witness table cache variable for type Participant and conformance Participant;
  if (!lazy protocol witness table cache variable for type Participant and conformance Participant)
  {
    type metadata accessor for Participant();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant and conformance Participant);
  }
  return result;
}

unint64_t partial apply for closure #1 in RemoteControlStateMachine.reset()(unint64_t *a1)
{
  return closure #1 in RemoteControlStateMachine.reset()(a1, *(void *)(v1 + 16));
}

unint64_t lazy protocol witness table accessor for type RemoteControlState and conformance RemoteControlState()
{
  unint64_t result = lazy protocol witness table cache variable for type RemoteControlState and conformance RemoteControlState;
  if (!lazy protocol witness table cache variable for type RemoteControlState and conformance RemoteControlState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlState and conformance RemoteControlState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors()
{
  unint64_t result = lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors;
  if (!lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors;
  if (!lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlStateMachine.Errors and conformance RemoteControlStateMachine.Errors);
  }
  return result;
}

void type metadata accessor for RemoteControlSuspensionReason()
{
}

unint64_t *assignWithCopy for RemoteControlState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  outlined copy of RemoteControlState(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  outlined consume of RemoteControlState(v4);
  return a1;
}

unint64_t *assignWithTake for RemoteControlState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  outlined consume of RemoteControlState(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteControlState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7B && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 122;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7A) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for RemoteControlState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)unint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTag for RemoteControlState(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 5;
  }
}

void *destructiveProjectEnumData for RemoteControlState(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *destructiveInjectEnumTag for RemoteControlState(unint64_t *result, uint64_t a2)
{
  if (a2 < 5)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 5);
    unint64_t v3 = 0xA000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

uint64_t destroy for RemoteControlStateMachine(unint64_t *a1)
{
  outlined consume of RemoteControlState(*a1);
  return swift_release();
}

unint64_t *initializeBufferWithCopyOfBuffer for RemoteControlStateMachine(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  outlined copy of RemoteControlState(*a2);
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  return a1;
}

unint64_t *assignWithCopy for RemoteControlStateMachine(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  outlined copy of RemoteControlState(*a2);
  unint64_t v5 = *a1;
  *a1 = v4;
  outlined consume of RemoteControlState(v5);
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for RemoteControlStateMachine(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  *a1 = *a2;
  outlined consume of RemoteControlState(v4);
  a1[1] = a2[1];
  swift_release();
  return a1;
}

void type metadata accessor for RemoteControlStateMachine()
{
}

unsigned char *storeEnumTagSinglePayload for RemoteControlSuspensionReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C34ACAD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for RemoteControlStateMachine.Errors()
{
}

uint64_t _s10Foundation4UUIDVACSHAAWlTm_5(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s15ConversationKit20RemoteControlMessageOWOcTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C34ACC58()
{
  outlined consume of RemoteControlState(*(void *)(v0 + 16));
  return swift_deallocObject();
}

void InCallControlsParticipantCellViewModel.init(participant:supportsMultiway:mode:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v114 = a4;
  LODWORD(v121) = a2;
  unsigned int v8 = a3;
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant.State, Bool, Bool));
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2_3();
  uint64_t v118 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_2_3();
  uint64_t v116 = v12;
  uint64_t v13 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_36();
  v113[1] = v15 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v113 - v18;
  Participant.contactDetails.getter();
  long long v21 = v122[1];
  long long v20 = v122[2];
  uint64_t v22 = *(void *)&v122[3];
  *(_OWORD *)a5 = v122[0];
  *(_OWORD *)(a5 + 16) = v21;
  *(_OWORD *)(a5 + 32) = v20;
  *(void *)(a5 + 48) = v22;
  uint64_t v115 = v13;
  uint64_t v23 = a1 + *(int *)(v13 + 20);
  unint64_t v24 = (int *)type metadata accessor for InCallControlsParticipantCellViewModel();
  uint64_t v25 = a5 + v24[5];
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v23);
  unsigned int v120 = v8;
  uint64_t v27 = Participant.actionForParticipantCell(isBuzzingAllowed:)((a3 & 0xE1) != 1);
  *(unsigned char *)(a5 + v24[8]) = v27;
  Swift::Int v119 = (uint64_t *)a1;
  uint64_t v28 = a1;
  uint64_t v29 = a5;
  _s15ConversationKit11ParticipantVWOcTm_13(v28, (uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
  InCallControlsParticipantCellViewModel.ButtonConfiguration.init(_:action:)((uint64_t)v19, v27);
  uint64_t v31 = v30;
  unsigned int v33 = v32;
  *(unsigned char *)(a5 + v24[11]) = v32 & 1;
  unint64_t v34 = (uint64_t *)(a5 + v24[9]);
  *(unsigned char *)(a5 + v24[10]) = v121 & BYTE1(v32) & (v8 < 0x20);
  if (!(_BYTE)v27)
  {
    id v38 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_13_22();
    uint64_t v27 = OUTLINED_FUNCTION_4_103(v39, 0x80000001C37B0C50);
    uint64_t v41 = v40;

    swift_bridgeObjectRelease();
    char v35 = 0;
    *unint64_t v34 = v27;
    v34[1] = v41;
    goto LABEL_7;
  }
  char v35 = v27;
  *unint64_t v34 = 0;
  v34[1] = 0;
  swift_bridgeObjectRelease();
  if (v27 != 1)
  {
LABEL_7:
    OUTLINED_FUNCTION_18_53();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_18_53();
  if ((v33 & 0x100) != 0 && v120 < 0x20)
  {
    char v35 = 1;
    char v37 = v36;
    goto LABEL_9;
  }
LABEL_8:
  char v37 = 0;
LABEL_9:
  BOOL v42 = v120 >= 0x20;
  *(unsigned char *)(a5 + v24[12]) = v37 & 1;
  int v43 = ((v35 & 0xFE) == 2) & (v33 >> 8);
  if (v42) {
    LOBYTE(v43) = 0;
  }
  *(unsigned char *)(a5 + v24[13]) = v43 & v36;
  unsigned __int8 v44 = Participant.isDestinationTemporary.getter();
  _s15ConversationKit11ParticipantVWOcTm_13((uint64_t)v34, v27, (void (*)(void))type metadata accessor for Participant);
  if (v44)
  {
    _s15ConversationKit11ParticipantVWOhTm_8(v27, (void (*)(void))type metadata accessor for Participant);
    *(unsigned char *)(a5 + v24[14]) = 0;
  }
  else
  {
    char v45 = Participant.isOtherInvitedParticipant.getter();
    _s15ConversationKit11ParticipantVWOhTm_8(v27, (void (*)(void))type metadata accessor for Participant);
    *(unsigned char *)(a5 + v24[14]) = (v45 & 1) == 0;
  }
  if (v121)
  {
    if (one-time initialization token for tableViewCellTitleLabel != -1) {
      swift_once();
    }
    LODWORD(v116) = 1;
    uint64_t v46 = &static Colors.InCallControls.tableViewCellTitleLabel;
  }
  else
  {
    if (one-time initialization token for tableViewCellSubtitleLabel != -1) {
      swift_once();
    }
    LODWORD(v116) = 0;
    uint64_t v46 = &static Colors.InCallControls.tableViewCellSubtitleLabel;
  }
  uint64_t v47 = (void *)*v46;
  *(void *)(a5 + v24[17]) = *v46;
  uint64_t v48 = v115;
  uint64_t v49 = v24;
  *(void *)(v29 + v24[16]) = *(uint64_t *)((char *)v34 + *(int *)(v115 + 32));
  specialized Collection.first.getter(*(uint64_t *)((char *)v34 + *(int *)(v48 + 44)), v31);
  int EnumTagSinglePayload = (void *)__swift_getEnumTagSinglePayload(v31, 1, v48);
  id v51 = v47;
  swift_bridgeObjectRetain();
  outlined destroy of Participant?(v31);
  if (*(uint64_t *)((char *)v34 + *(int *)(v48 + 36) + 8) && EnumTagSinglePayload == 1)
  {
    id v52 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_13_22();
    OUTLINED_FUNCTION_0_23(v53, 0x80000001C37A5490);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1C3769620;
    Participant.contactDetails.getter();
    uint64_t v56 = *((void *)&v122[0] + 1);
    unint64_t v55 = *(void **)&v122[0];
    uint64_t v57 = *(void *)&v122[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *(void *)(v54 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v54 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v54 + 32) = v56;
    *(void *)(v54 + 40) = v57;
    unint64_t v34 = v119;
    uint64_t v58 = String.init(format:_:)();
    uint64_t v60 = v59;
    swift_bridgeObjectRelease();
    unint64_t v24 = v49;
    uint64_t v61 = (uint64_t *)(v29 + v49[6]);
    *uint64_t v61 = v58;
    v61[1] = v60;
    char v62 = 1;
  }
  else
  {
    Participant.contactDetails.getter();
    long long v63 = v122[0];
    uint64_t v64 = *(void *)&v122[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    char v62 = 0;
    os_log_type_t v65 = (void *)(v29 + v24[6]);
    *os_log_type_t v65 = *((void *)&v63 + 1);
    v65[1] = v64;
  }
  *(unsigned char *)(v29 + v24[15]) = v62;
  int v66 = v120 & 0xE0;
  BOOL v67 = v66 == 32;
  uint64_t v68 = v118;
  uint64_t v69 = *(int *)(v117 + 48);
  uint64_t v70 = *(int *)(v117 + 64);
  _s15ConversationKit11ParticipantVWOcTm_13((uint64_t)v34, v118, (void (*)(void))type metadata accessor for Participant.State);
  *(unsigned char *)(v68 + v69) = v67;
  *(unsigned char *)(v68 + v70) = v121 & 1;
  type metadata accessor for Participant.State(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    id v72 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_13_22();
    OUTLINED_FUNCTION_0_23(v73, 0x80000001C37B0C20);
    OUTLINED_FUNCTION_9_80();
    _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v34, (void (*)(void))type metadata accessor for Participant);
    uint64_t v74 = v29 + v24[7];
    *(void *)uint64_t v74 = v67;
    *(void *)(v74 + 8) = v69;
    *(unsigned char *)(v74 + 16) = 96;
LABEL_27:
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
LABEL_28:
    OUTLINED_FUNCTION_26_2();
    v75();
  }
  else if (v66 == 32)
  {
    _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v34, (void (*)(void))type metadata accessor for Participant);
    uint64_t v76 = v29 + v49[7];
    *(void *)uint64_t v76 = 0;
    *(void *)(v76 + 8) = 0;
    *(unsigned char *)(v76 + 16) = 0x80;
    _s15ConversationKit11ParticipantVWOhTm_8(v68, (void (*)(void))type metadata accessor for Participant.State);
  }
  else
  {
    switch(EnumCaseMultiPayload)
    {
      case 1:
        if (v116) {
          goto LABEL_46;
        }
        goto LABEL_43;
      case 2:
        __break(1u);
        JUMPOUT(0x1C34AD82CLL);
      case 3:
        if (v116)
        {
          id v95 = objc_msgSend(self, sel_conversationKit);
          OUTLINED_FUNCTION_6_101();
          OUTLINED_FUNCTION_13_22();
          uint64_t v79 = "DRAWER_RING_BUTTON_RINGING";
LABEL_42:
          unint64_t v96 = (unint64_t)(v79 - 32) | 0x8000000000000000;
LABEL_47:
          OUTLINED_FUNCTION_0_23(v78, v96);
          OUTLINED_FUNCTION_9_80();
          _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v34, (void (*)(void))type metadata accessor for Participant);
          OUTLINED_FUNCTION_17_49();
          goto LABEL_27;
        }
LABEL_43:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v97();
        id v98 = objc_msgSend(self, sel_conversationKit);
        OUTLINED_FUNCTION_6_101();
        OUTLINED_FUNCTION_13_22();
        uint64_t v100 = 0x80000001C37B0BF0;
LABEL_45:
        OUTLINED_FUNCTION_0_23(v99, v100);
        OUTLINED_FUNCTION_9_80();
        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v34, (void (*)(void))type metadata accessor for Participant);
        OUTLINED_FUNCTION_17_49();
        break;
      case 4:
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v81 = (const void *)(v68 + *(int *)(v80 + 48));
        uint64_t v82 = (void *)(v68 + *(int *)(v80 + 64));
        uint64_t v83 = (void *)v82[1];
        uint64_t v85 = v82[4];
        uint64_t v84 = v82[5];
        uint64_t v86 = v82[6];
        uint64_t v121 = v82[7];
        memcpy(v122, v81, 0x150uLL);
        if (!v83) {
          goto LABEL_36;
        }
        if (v85)
        {
          _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v119, (void (*)(void))type metadata accessor for Participant);
          unsigned int v120 = LOBYTE(v122[0]);
          Swift::Int v119 = (uint64_t *)v84;
          swift_bridgeObjectRetain();
          outlined destroy of Participant.MediaInfo((uint64_t)v122);
          uint64_t v103 = OUTLINED_FUNCTION_12_60();
          outlined consume of Participant.CopresenceInfo?(v103, v104);
          char v94 = v120 | 0x40;
          uint64_t v93 = v29 + v49[7];
          *(void *)uint64_t v93 = v86;
        }
        else
        {
          uint64_t v87 = OUTLINED_FUNCTION_12_60();
          outlined consume of Participant.CopresenceInfo?(v87, v88);
LABEL_36:
          if (*(void *)&v122[1])
          {
            id v89 = objc_msgSend(self, sel_conversationKit);
            OUTLINED_FUNCTION_6_101();
            OUTLINED_FUNCTION_13_22();
            uint64_t v91 = OUTLINED_FUNCTION_0_23(v90, 0x80000001C37B0BC0);
            uint64_t v121 = v92;

            _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v119, (void (*)(void))type metadata accessor for Participant);
            outlined destroy of Participant.MediaInfo((uint64_t)v122);
            uint64_t v93 = v29 + v49[7];
            *(void *)uint64_t v93 = v91;
            char v94 = 32;
          }
          else
          {
            uint64_t v105 = v29;
            int v106 = LOBYTE(v122[0]);
            id v107 = objc_msgSend(self, sel_conversationKit);
            uint64_t v108 = (uint64_t)v119;
            OUTLINED_FUNCTION_13_22();
            if (v106 == 1)
            {
              uint64_t v109 = 0x44455449564E49;
              uint64_t v110 = 0xE700000000000000;
            }
            else
            {
              uint64_t v110 = 0x80000001C37B0B90;
            }
            uint64_t v111 = OUTLINED_FUNCTION_0_23(v109, v110);
            uint64_t v121 = v112;

            _s15ConversationKit11ParticipantVWOhTm_8(v108, (void (*)(void))type metadata accessor for Participant);
            outlined destroy of Participant.MediaInfo((uint64_t)v122);
            char v94 = 0;
            uint64_t v93 = v105 + v49[7];
            *(void *)uint64_t v93 = v111;
          }
        }
        *(void *)(v93 + 8) = v121;
        *(unsigned char *)(v93 + 16) = v94;
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        goto LABEL_28;
      case 5:
LABEL_46:
        id v102 = objc_msgSend(self, sel_conversationKit);
        OUTLINED_FUNCTION_13_22();
        unint64_t v78 = OUTLINED_FUNCTION_16_50();
        goto LABEL_47;
      case 6:
        id v101 = objc_msgSend(self, sel_conversationKit);
        OUTLINED_FUNCTION_13_22();
        unint64_t v99 = OUTLINED_FUNCTION_16_50();
        goto LABEL_45;
      default:
        id v77 = objc_msgSend(self, sel_conversationKit);
        OUTLINED_FUNCTION_6_101();
        OUTLINED_FUNCTION_13_22();
        uint64_t v79 = "PARTICIPANT_VIEW_REMOTE_PARTICIPANT_INVITE_SENT";
        goto LABEL_42;
    }
  }
}

BOOL static InCallControlsParticipantCellViewModel.Action.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

unint64_t InCallControlsParticipantCellViewModel.Action.description.getter(char a1)
{
  unint64_t result = 2054845794;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74756F206B63696BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t InCallControlsParticipantCellViewModel.Action.buttonText.getter(char a1)
{
  if (!a1)
  {
    id v1 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_4_103(0xD000000000000012, 0x80000001C37B0C50);
  }
  return OUTLINED_FUNCTION_35();
}

uint64_t type metadata accessor for InCallControlsParticipantCellViewModel()
{
  uint64_t result = type metadata singleton initialization cache for InCallControlsParticipantCellViewModel;
  if (!type metadata singleton initialization cache for InCallControlsParticipantCellViewModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void InCallControlsParticipantCellViewModel.Action.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int InCallControlsParticipantCellViewModel.Action.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsParticipantCellViewModel.Action(char *a1, char *a2)
{
  return static InCallControlsParticipantCellViewModel.Action.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance InCallControlsParticipantCellViewModel.Action()
{
  return InCallControlsParticipantCellViewModel.Action.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance InCallControlsParticipantCellViewModel.Action(uint64_t a1)
{
  InCallControlsParticipantCellViewModel.Action.hash(into:)(a1, *v1);
}

uint64_t static InCallControlsParticipantCellViewModel.SubtitleState.== infix(_:_:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  switch(a3 >> 5)
  {
    case 1:
      if ((a6 & 0xE0) == 0x20) {
        goto LABEL_18;
      }
      goto LABEL_25;
    case 2:
      if ((a6 & 0xE0) != 0x40) {
        goto LABEL_25;
      }
      BOOL v8 = a1 == a4 && a2 == a5;
      if (v8 || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v10 = 0, (v9 & 1) != 0)) {
        char v10 = ((a3 & 1) == 0) ^ a6;
      }
      return v10 & 1;
    case 3:
      if ((a6 & 0xE0) == 0x60) {
        goto LABEL_18;
      }
      goto LABEL_25;
    case 4:
      if ((a6 & 0xE0) != 0x80 || a5 | a4 || a6 != 128) {
        goto LABEL_25;
      }
      goto LABEL_26;
    default:
      if (a6 >= 0x20u)
      {
LABEL_25:
        char v10 = 0;
        return v10 & 1;
      }
LABEL_18:
      if (a1 == a4 && a2 == a5)
      {
LABEL_26:
        char v10 = 1;
        return v10 & 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  return static InCallControlsParticipantCellViewModel.SubtitleState.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.label.getter(uint64_t a1)
{
  return a1;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.ButtonConfiguration.label.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.enabled.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.enabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.ButtonConfiguration.enabled.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.visible.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.visible.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.ButtonConfiguration.visible.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.ButtonConfiguration.init(_:action:)(uint64_t a1, char a2)
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_36();
  uint64_t v7 = v5 - v6;
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v39 - v9;
  uint64_t v11 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_36();
  uint64_t v15 = v13 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v39 - v17;
  switch(a2)
  {
    case 1:
      Participant.isKickingAvailable.getter();
      Participant.isKickingAvailable.getter();
      char v37 = v36;
      _s15ConversationKit11ParticipantVWOhTm_8(a1, (void (*)(void))type metadata accessor for Participant);
      if (v37) {
LABEL_10:
      }
        uint64_t v30 = 0;
      else {
LABEL_18:
      }
        uint64_t v30 = 0;
      break;
    case 2:
    case 3:
      _s15ConversationKit11ParticipantVWOcTm_13(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for Participant.State);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v20 = (uint64_t)&v10[*(int *)(v19 + 48)];
          OUTLINED_FUNCTION_8_2((uint64_t *)&v10[*(int *)(v19 + 64)]);
          outlined destroy of Participant.MediaInfo(v20);
          goto LABEL_4;
        case 6u:
          goto LABEL_5;
        default:
LABEL_4:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          OUTLINED_FUNCTION_26_2();
          v21();
LABEL_5:
          uint64_t v22 = OUTLINED_FUNCTION_35();
          _s15ConversationKit11ParticipantVWOcTm_13(v22, v23, v24);
          char v25 = 1;
          char v26 = 0;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              goto LABEL_8;
            case 4u:
              uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
              uint64_t v28 = v7 + *(int *)(v27 + 48);
              OUTLINED_FUNCTION_8_2((uint64_t *)(v7 + *(int *)(v27 + 64)));
              outlined destroy of Participant.MediaInfo(v28);
              goto LABEL_7;
            case 6u:
              goto LABEL_9;
            default:
LABEL_7:
              char v25 = 0;
LABEL_8:
              type metadata accessor for Date();
              OUTLINED_FUNCTION_0();
              OUTLINED_FUNCTION_26_2();
              v29();
              char v26 = v25;
LABEL_9:
              _s15ConversationKit11ParticipantVWOhTm_8(a1, (void (*)(void))type metadata accessor for Participant);
              if (v26) {
                goto LABEL_10;
              }
              goto LABEL_18;
          }
      }
    case 4:
      _s15ConversationKit11ParticipantVWOhTm_8(a1, (void (*)(void))type metadata accessor for Participant);
      uint64_t v30 = 0;
      break;
    default:
      id v31 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_13_22();
      uint64_t v30 = OUTLINED_FUNCTION_0_23(0xD000000000000012, 0x80000001C37B0C50);

      Participant.isBuzzable.getter();
      LOBYTE(v31) = Participant.isNotActiveAndNotLocal.getter();
      _s15ConversationKit11ParticipantVWOcTm_13(a1, (uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
      if (v31)
      {
        char v32 = Participant.isOtherInvitedParticipant.getter();
        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_13(a1, v15, (void (*)(void))type metadata accessor for Participant);
        if ((v32 & 1) == 0)
        {
          unsigned int v33 = *(void **)(v15 + *(int *)(v11 + 28));
          if (v33)
          {
            id v34 = objc_msgSend(v33, sel_value);
            if (!v34)
            {
              uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              id v34 = (id)MEMORY[0x1C87730B0](v35);
              swift_bridgeObjectRelease();
            }
            objc_msgSend(v34, sel_destinationIdIsTemporary);
          }
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_13(a1, v15, (void (*)(void))type metadata accessor for Participant);
      }
      _s15ConversationKit11ParticipantVWOhTm_8(a1, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_8(v15, (void (*)(void))type metadata accessor for Participant);
      break;
  }
  return v30;
}

uint64_t static InCallControlsParticipantCellViewModel.ButtonConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  if (!a2)
  {
    uint64_t result = 0;
    if (a5) {
      return result;
    }
    goto LABEL_10;
  }
  if (!a5) {
    return 0;
  }
  if (a1 == a4 && a2 == a5)
  {
    if (((a3 ^ a6) & 1) == 0) {
      return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
    }
    return 0;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if ((v9 & 1) == 0) {
    return result;
  }
LABEL_10:
  if (((a3 ^ a6) & 1) == 0) {
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 17)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  if (*(unsigned char *)(a2 + 17)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return static InCallControlsParticipantCellViewModel.ButtonConfiguration.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 16));
}

uint64_t InCallControlsParticipantCellViewModel.contactDetails.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v2 = *((void *)v1 + 3);
  uint64_t v5 = *((void *)v1 + 4);
  uint64_t v4 = *((void *)v1 + 5);
  uint64_t v6 = *((void *)v1 + 6);
  long long v7 = *v1;
  *(_OWORD *)a1 = *v1;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v6;
  id v8 = (id)v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 InCallControlsParticipantCellViewModel.contactDetails.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *(void **)v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_OWORD *)uint64_t v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  __n128 result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t (*InCallControlsParticipantCellViewModel.contactDetails.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.participantIdentifier.getter()
{
  type metadata accessor for InCallControlsParticipantCellViewModel();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t InCallControlsParticipantCellViewModel.participantIdentifier.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_2_117() + 20);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  __n128 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v2, v0, v3);
}

double (*InCallControlsParticipantCellViewModel.participantIdentifier.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.name.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t InCallControlsParticipantCellViewModel.name.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

double (*InCallControlsParticipantCellViewModel.name.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.subtitle.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 28);
  uint64_t v2 = *(void *)v1;
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

uint64_t InCallControlsParticipantCellViewModel.subtitle.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = v3 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 28);
  uint64_t result = outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(unsigned char *)(v7 + 16) = a3;
  return result;
}

double (*InCallControlsParticipantCellViewModel.subtitle.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.action.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 32));
}

uint64_t InCallControlsParticipantCellViewModel.action.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.action.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.actionButtonLabel.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t InCallControlsParticipantCellViewModel.actionButtonLabel.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

double (*InCallControlsParticipantCellViewModel.actionButtonLabel.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowActionButton.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 40));
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowActionButton.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.shouldShowActionButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldEnableActionButton.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 44));
}

uint64_t InCallControlsParticipantCellViewModel.shouldEnableActionButton.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.shouldEnableActionButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowKickMemberButton.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 48));
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowKickMemberButton.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 48)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.shouldShowKickMemberButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowLMIButtons.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 52));
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowLMIButtons.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 52)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.shouldShowLMIButtons.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowInfoButton.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 56));
}

uint64_t InCallControlsParticipantCellViewModel.shouldShowInfoButton.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.shouldShowInfoButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.shouldUseExtendedHeight.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 60));
}

uint64_t InCallControlsParticipantCellViewModel.shouldUseExtendedHeight.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_117();
  *(unsigned char *)(v1 + *(int *)(result + 60)) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.shouldUseExtendedHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t InCallControlsParticipantCellViewModel.contactGradient.getter()
{
  type metadata accessor for InCallControlsParticipantCellViewModel();
  return swift_bridgeObjectRetain();
}

uint64_t InCallControlsParticipantCellViewModel.contactGradient.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_117() + 64);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

double (*InCallControlsParticipantCellViewModel.contactGradient.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id InCallControlsParticipantCellViewModel.nameLabelColor.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for InCallControlsParticipantCellViewModel() + 68));
  return v1;
}

void InCallControlsParticipantCellViewModel.nameLabelColor.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_117() + 68);

  *(void *)(v1 + v2) = v0;
}

double (*InCallControlsParticipantCellViewModel.nameLabelColor.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static InCallControlsParticipantCellViewModel.== infix(_:_:)(uint64_t a1, long long *a2)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  v35[0] = *(_OWORD *)a1;
  v35[1] = v5;
  _OWORD v35[2] = v4;
  uint64_t v36 = v6;
  long long v8 = a2[1];
  long long v7 = a2[2];
  uint64_t v9 = *((void *)a2 + 6);
  long long v31 = *a2;
  long long v32 = v8;
  long long v33 = v7;
  uint64_t v34 = v9;
  if ((static ParticipantContactDetails.== infix(_:_:)((uint64_t)v35, (uint64_t)&v31) & 1) == 0) {
    return 0;
  }
  char v10 = (int *)type metadata accessor for InCallControlsParticipantCellViewModel();
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = v10[6];
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (void *)((char *)a2 + v11);
  BOOL v15 = v12 == *v14 && v13 == v14[1];
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v16 = v10[7];
  if ((static InCallControlsParticipantCellViewModel.SubtitleState.== infix(_:_:)(*(void *)(a1 + v16), *(void *)(a1 + v16 + 8), *(unsigned char *)(a1 + v16 + 16), *(void *)((char *)a2 + v16), *(void *)((char *)a2 + v16 + 8), *((unsigned char *)a2 + v16 + 16)) & 1) == 0)return 0; {
  OUTLINED_FUNCTION_9_31();
  }
  if (!v15) {
    return 0;
  }
  uint64_t v17 = v10[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  if (v19)
  {
    if (!v21) {
      return 0;
    }
    BOOL v22 = *v18 == *v20 && v19 == v21;
    if (!v22 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return 0;
    }
  }
  else if (v21)
  {
    return 0;
  }
  OUTLINED_FUNCTION_9_31();
  if (v15)
  {
    OUTLINED_FUNCTION_9_31();
    if (v15)
    {
      OUTLINED_FUNCTION_9_31();
      if (v15)
      {
        OUTLINED_FUNCTION_9_31();
        if (v15)
        {
          OUTLINED_FUNCTION_9_31();
          if (v15)
          {
            OUTLINED_FUNCTION_9_31();
            if (v15)
            {
              specialized static Array<A>.== infix(_:_:)(*(void *)(a1 + v10[16]), *(void *)((char *)a2 + v10[16]), v23, v24, v25, v26, v27, v28, v31, *((uint64_t *)&v31 + 1), v32, *((unint64_t *)&v32 + 1));
              if (v29)
              {
                type metadata accessor for NSObject();
                return static NSObject.== infix(_:_:)() & 1;
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t InCallControlsParticipantCellViewModel.init(contactDetails:participantIdentifier:name:subtitle:action:actionButtonLabel:shouldShowActionButton:shouldEnableActionButton:shouldShowKickMemberButton:shouldShowLMIButtons:shouldShowInfoButton:shouldUseExtendedHeight:contactGradient:nameLabelColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19)
{
  long long v25 = *(_OWORD *)(a1 + 16);
  long long v24 = *(_OWORD *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 48);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 32) = v24;
  *(void *)(a9 + 48) = v26;
  uint64_t v27 = (int *)type metadata accessor for InCallControlsParticipantCellViewModel();
  uint64_t v28 = a9 + v27[5];
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 32))(v28, a2);
  long long v31 = (void *)(a9 + v27[6]);
  *long long v31 = a3;
  v31[1] = a4;
  uint64_t v32 = a9 + v27[7];
  *(void *)uint64_t v32 = a5;
  *(void *)(v32 + 8) = a6;
  *(unsigned char *)(v32 + 16) = a7;
  *(unsigned char *)(a9 + v27[8]) = a8;
  long long v33 = (void *)(a9 + v27[9]);
  void *v33 = a10;
  v33[1] = a11;
  *(unsigned char *)(a9 + v27[10]) = a12;
  *(unsigned char *)(a9 + v27[11]) = a13;
  *(unsigned char *)(a9 + v27[12]) = a14;
  *(unsigned char *)(a9 + v27[13]) = a15;
  *(unsigned char *)(a9 + v27[14]) = a16;
  *(unsigned char *)(a9 + v27[15]) = a17;
  *(void *)(a9 + v27[16]) = a18;
  *(void *)(a9 + v27[17]) = a19;
  return result;
}

uint64_t Participant.actionForParticipantCell(isBuzzingAllowed:)(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  char v10 = (char *)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v13);
  BOOL v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_13(v2, (uint64_t)v15, (void (*)(void))type metadata accessor for Participant.State);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v27 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v15, v27);
      return 2;
    case 4u:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v29 = (uint64_t)&v15[*(int *)(v28 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(void *)&v15[*(int *)(v28 + 64)], *(void *)&v15[*(int *)(v28 + 64) + 8]);
      outlined destroy of Participant.MediaInfo(v29);
      goto LABEL_2;
    case 6u:
      goto LABEL_3;
    default:
LABEL_2:
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
LABEL_3:
      char v17 = Participant.isNotActiveAndNotLocal.getter();
      _s15ConversationKit11ParticipantVWOcTm_13(v2, (uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
      if (v17)
      {
        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_13(v2, (uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
      }
      else
      {
        Participant.isBuzzable.getter();
        char v19 = v18;
        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_13(v2, (uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
        if ((v19 & 1) == 0)
        {
          _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
          _s15ConversationKit11ParticipantVWOcTm_13(v2, (uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
          goto LABEL_14;
        }
      }
      char v20 = Participant.isOtherInvitedParticipant.getter();
      _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_13(v2, (uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
      if (v20)
      {
LABEL_14:
        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_15;
      }
      uint64_t v21 = *(void **)&v7[*(int *)(v4 + 28)];
      if (v21)
      {
        id v22 = objc_msgSend(v21, sel_value);
        if (!v22)
        {
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v22 = (id)MEMORY[0x1C87730B0](v23);
          swift_bridgeObjectRelease();
        }
        unsigned __int8 v24 = objc_msgSend(v22, sel_destinationIdIsTemporary);

        _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
        if ((v24 & 1) != 0 || (a1 & 1) == 0) {
          goto LABEL_15;
        }
        return 0;
      }
      _s15ConversationKit11ParticipantVWOhTm_8((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
      if (a1) {
        return 0;
      }
LABEL_15:
      Participant.isKickingAvailable.getter();
      if (v25) {
        return 1;
      }
      else {
        return 4;
      }
  }
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_13(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_35();
  v5(v4);
  return a2;
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

id InCallControlsParticipantCellViewModel.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for InCallControlsParticipantCellViewModel();
  uint64_t v3 = (void *)((char *)a1 + v2[9]);
  uint64_t v4 = type metadata accessor for PersonNameComponents();
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v8 = (id)static NSPersonNameComponentsFormatter.initials;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v10 = objc_msgSend(v8, sel_stringFromPersonNameComponents_, isa);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v22[0] = v11;
  v22[1] = v13;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v14 = StringProtocol.localizedUppercase.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  a1[5] = v14;
  a1[6] = v16;
  UUID.init()();
  char v17 = (void *)((char *)a1 + v2[6]);
  *char v17 = 0;
  v17[1] = 0xE000000000000000;
  char v18 = (char *)a1 + v2[7];
  *(void *)char v18 = 0;
  *((void *)v18 + 1) = 0;
  v18[16] = 0x80;
  *((unsigned char *)a1 + v2[8]) = 4;
  *((unsigned char *)a1 + v2[10]) = 0;
  *((unsigned char *)a1 + v2[11]) = 0;
  *((unsigned char *)a1 + v2[12]) = 0;
  *((unsigned char *)a1 + v2[13]) = 0;
  *((unsigned char *)a1 + v2[14]) = 0;
  *((unsigned char *)a1 + v2[15]) = 0;
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(void *)((char *)a1 + v2[16]) = static Colors.ParticipantGradients.default;
  uint64_t v19 = one-time initialization token for tableViewCellTitleLabel;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  char v20 = (void *)static Colors.InCallControls.tableViewCellTitleLabel;
  *(void *)((char *)a1 + v2[17]) = static Colors.InCallControls.tableViewCellTitleLabel;
  return v20;
}

unint64_t type metadata accessor for NSObject()
{
  unint64_t result = lazy cache variable for type metadata for NSObject;
  if (!lazy cache variable for type metadata for NSObject)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action()
{
  unint64_t result = lazy protocol witness table cache variable for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action;
  if (!lazy protocol witness table cache variable for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsParticipantCellViewModel.Action and conformance InCallControlsParticipantCellViewModel.Action);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InCallControlsParticipantCellViewModel(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    long long v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    long long v7 = a1;
    id v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v9;
    id v10 = a2[6];
    uint64_t v11 = a3[5];
    uint64_t v34 = (uint64_t)a2 + v11;
    uint64_t v35 = &a1[v11];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v10;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v35, v34, v12);
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    char v17 = &v7[v15];
    char v18 = (char **)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *(void *)char v17 = *v18;
    *((void *)v17 + 1) = v19;
    char v20 = &v7[v16];
    uint64_t v21 = *(uint64_t *)((char *)a2 + v16);
    uint64_t v22 = *(uint64_t *)((char *)a2 + v16 + 8);
    LOBYTE(v9) = *((unsigned char *)a2 + v16 + 16);
    swift_bridgeObjectRetain();
    outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(v21, v22, (char)v9);
    *(void *)char v20 = v21;
    *((void *)v20 + 1) = v22;
    v20[16] = (char)v9;
    uint64_t v23 = a3[9];
    v7[a3[8]] = *((unsigned char *)a2 + a3[8]);
    unsigned __int8 v24 = &v7[v23];
    char v25 = (char **)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *(void *)unsigned __int8 v24 = *v25;
    *((void *)v24 + 1) = v26;
    uint64_t v27 = a3[11];
    v7[a3[10]] = *((unsigned char *)a2 + a3[10]);
    v7[v27] = *((unsigned char *)a2 + v27);
    uint64_t v28 = a3[13];
    v7[a3[12]] = *((unsigned char *)a2 + a3[12]);
    v7[v28] = *((unsigned char *)a2 + v28);
    uint64_t v29 = a3[15];
    v7[a3[14]] = *((unsigned char *)a2 + a3[14]);
    v7[v29] = *((unsigned char *)a2 + v29);
    uint64_t v30 = a3[17];
    *(void *)&v7[a3[16]] = *(char **)((char *)a2 + a3[16]);
    long long v31 = *(char **)((char *)a2 + v30);
    *(void *)&v7[v30] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = v31;
  }
  return v7;
}

void destroy for InCallControlsParticipantCellViewModel(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(uint64_t *)((char *)a1 + a2[7]), *(uint64_t *)((char *)a1 + a2[7] + 8), *((unsigned char *)a1 + a2[7] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(id *)((char *)a1 + a2[17]);
}

void *initializeWithCopy for InCallControlsParticipantCellViewModel(void *a1, uint64_t a2, int *a3)
{
  long long v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v9;
  uint64_t v10 = a3[5];
  uint64_t v34 = a2 + v10;
  uint64_t v35 = (char *)a1 + v10;
  a1[6] = *(void *)(a2 + 48);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v35, v34, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  char v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = *(void *)(a2 + v15);
  uint64_t v21 = *(void *)(a2 + v15 + 8);
  char v22 = *(unsigned char *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(v20, v21, v22);
  *(void *)uint64_t v19 = v20;
  *((void *)v19 + 1) = v21;
  v19[16] = v22;
  uint64_t v23 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  unsigned __int8 v24 = (void *)((char *)a1 + v23);
  char v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *unsigned __int8 v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *((unsigned char *)a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *((unsigned char *)a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *((unsigned char *)a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)(a2 + a3[16]);
  long long v31 = *(void **)(a2 + v30);
  *(void *)((char *)a1 + v30) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v32 = v31;
  return a1;
}

uint64_t assignWithCopy for InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  long long v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  char v21 = *(unsigned char *)(v18 + 16);
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(void *)v18, v20, v21);
  uint64_t v22 = *(void *)v17;
  uint64_t v23 = *(void *)(v17 + 8);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  char v24 = *(unsigned char *)(v17 + 16);
  *(unsigned char *)(v17 + 16) = v21;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v22, v23, v24);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[17];
  uint64_t v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  return a1;
}

uint64_t initializeWithTake for InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for InCallControlsParticipantCellViewModel(uint64_t a1, void *a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  void *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  char v21 = (char *)a2 + v19;
  char v22 = v21[16];
  uint64_t v23 = *(void *)v20;
  uint64_t v24 = *(void *)(v20 + 8);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  char v25 = *(unsigned char *)(v20 + 16);
  *(unsigned char *)(v20 + 16) = v22;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v23, v24, v25);
  uint64_t v26 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(unsigned char *)(a1 + v31) = *((unsigned char *)a2 + v31);
  uint64_t v32 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(unsigned char *)(a1 + v32) = *((unsigned char *)a2 + v32);
  uint64_t v33 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(unsigned char *)(a1 + v33) = *((unsigned char *)a2 + v33);
  *(void *)(a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[17];
  uint64_t v35 = *(void **)(a1 + v34);
  *(void *)(a1 + v34) = *(void *)((char *)a2 + v34);

  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C34B015C);
}

uint64_t sub_1C34B015C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C34B01F8);
}

uint64_t sub_1C34B01F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for InCallControlsParticipantCellViewModel()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C34B0434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for InCallControlsParticipantCellViewModel.Action()
{
}

uint64_t destroy for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1)
{
  return outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7C && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 123;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
      if (v2 >= 0x7B) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 124;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t destructiveInjectEnumTag for InCallControlsParticipantCellViewModel.SubtitleState(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    char v2 = *(unsigned char *)(result + 16) & 1 | (32 * a2);
  }
  else
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    char v2 = 0x80;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

void type metadata accessor for InCallControlsParticipantCellViewModel.SubtitleState()
{
}

uint64_t initializeBufferWithCopyOfBuffer for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 18))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsParticipantCellViewModel.ButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for InCallControlsParticipantCellViewModel.ButtonConfiguration()
{
}

uint64_t static ReuseIdentifiable.reuseIdentifier.getter()
{
  return String.init<A>(describing:)();
}

uint64_t dispatch thunk of static ReuseIdentifiable.reuseIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL TUCallCenter.needsMultipleRejection.getter()
{
  if ((TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter() & 1) == 0) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_currentCallGroups);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
LABEL_26:
  OUTLINED_FUNCTION_24_1();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_32_1();
    return 0;
  }
LABEL_4:
  uint64_t v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C87744F0](v4 - 4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4);
    }
    char v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    unsigned int v8 = objc_msgSend(v5, sel_status);

    if (v8 == 1) {
      break;
    }
    ++v4;
    if (v7 == v3) {
      goto LABEL_11;
    }
  }
  OUTLINED_FUNCTION_32_1();
  id v11 = objc_msgSend(v0, sel_currentCallGroups);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = (void *)_CocoaArrayWrapper.endIndex.getter();
    if (v0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v0 = *(void **)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v0)
    {
LABEL_16:
      uint64_t v13 = 4;
      while (1)
      {
        unint64_t v2 = v13 - 4;
        id v14 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C87744F0](v13 - 4, v12)
            : *(id *)(v12 + 8 * v13);
        uint64_t v15 = v14;
        uint64_t v16 = (void *)(v13 - 3);
        if (__OFADD__(v2, 1)) {
          goto LABEL_25;
        }
        unsigned int v17 = objc_msgSend(v14, sel_status);
        BOOL v9 = v17 == 2;
        if (v17 == 2) {
          goto LABEL_31;
        }

        ++v13;
        if (v16 == v0) {
          goto LABEL_30;
        }
      }
    }
  }
  BOOL v9 = 0;
LABEL_30:
  uint64_t v15 = 0;
LABEL_31:
  swift_bridgeObjectRelease_n();

  return v9;
}

uint64_t TUCallCenter.wantsCallWaiting.getter()
{
  if ((uint64_t)objc_msgSend(v0, sel_currentAudioAndVideoCallCount) < 2) {
    return 0;
  }
  return TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter();
}

BOOL TUCallCenter.hasMultipleActiveCalls.getter()
{
  id v1 = &selRef_contactStoreDidChange_;
  if (objc_msgSend(v0, sel_hasCurrentVideoCalls)) {
    goto LABEL_30;
  }
  id v2 = objc_msgSend(v0, sel_currentCallGroups);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62) {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v4 != 1) {
      goto LABEL_30;
    }
    id v5 = [v0 v1[426]];
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_30:
        id v23 = [v0 v1[426]];
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
        unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v24 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v6 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(v0, sel_currentVideoCallCount);
        if (!__OFADD__(v6, v25))
        {
          BOOL v20 = (uint64_t)((uint64_t)v25 + v6) <= 1;
          return !v20;
        }
        __break(1u);
        goto LABEL_39;
      }
    }
    else if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_29;
    }
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v6 & 0xC000000000000001) == 0, v6);
    if ((v6 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(v6 + 32);
      goto LABEL_9;
    }
LABEL_39:
    id v7 = (id)MEMORY[0x1C87744F0](0, v6);
LABEL_9:
    unsigned int v8 = v7;
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v8, sel_calls);
    uint64_t v0 = (void *)type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62) {
      break;
    }
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_18;
    }
LABEL_11:
    uint64_t v12 = 4;
    while (1)
    {
      id v1 = (char **)(v12 - 4);
      id v13 = (v10 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C87744F0](v12 - 4, v10)
          : *(id *)(v10 + 8 * v12);
      id v14 = v13;
      uint64_t v15 = v12 - 3;
      if (__OFADD__(v1, 1)) {
        break;
      }
      unsigned int v16 = objc_msgSend(v13, sel_wantsHoldMusic);

      if (v16)
      {

        OUTLINED_FUNCTION_32_1();
        return 0;
      }
      ++v12;
      if (v15 == v11) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_27:
    OUTLINED_FUNCTION_24_1();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_1();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  if (v11) {
    goto LABEL_11;
  }
LABEL_18:
  OUTLINED_FUNCTION_32_1();
  if (objc_msgSend(v8, sel_status) == 1 || objc_msgSend(v8, sel_status) == 2)
  {
    id v17 = objc_msgSend(v8, sel_calls);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
    BOOL v20 = v19 <= 1;
    return !v20;
  }

  return 0;
}

uint64_t TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter()
{
  id v1 = objc_msgSend(v0, sel_incomingCall);

  if (!v1)
  {
    uint64_t result = (uint64_t)objc_msgSend(v0, sel_incomingVideoCall);
    if (!result) {
      return result;
    }
  }
  return 1;
}

uint64_t @objc TUCallCenter.cnk_hasTooManyCallsForCallWaitingBanner.getter(void *a1)
{
  id v1 = a1;
  char v2 = TUCallCenter.cnk_hasTooManyCallsForCallWaitingBanner.getter();

  return v2 & 1;
}

uint64_t TUCallCenter.cnk_hasTooManyCallsForCallWaitingBanner.getter()
{
  if ((uint64_t)objc_msgSend(v0, sel_currentAudioAndVideoCallCount) < 3) {
    return 0;
  }
  return TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter();
}

BOOL SBUISystemApertureLayoutMode.isSystemApertureVisible.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 2) < 3;
}

uint64_t SBUISystemApertureLayoutMode.debugName.getter()
{
  id v0 = (id)SBUISystemApertureLayoutModeDescription();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v1;
}

void ParticipantViewLabelContainerView.isCentered.setter(char a1)
{
  unint64_t v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  swift_beginAccess();
  char v4 = *v3;
  *unint64_t v3 = a1;
  ParticipantViewLabelContainerView.isCentered.didset(v4);
}

double ParticipantViewLabelContainerView.intrinsicContentSize.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label);
  id v2 = objc_msgSend(v1, sel_font);
  if (v2)
  {
    unint64_t v3 = v2;
    id v4 = objc_msgSend(v1, sel_text);
  }
  objc_msgSend(v1, sel_intrinsicContentSize);
  double v6 = v5;
  objc_msgSend(v1, sel_intrinsicContentSize);
  return v6;
}

id ParticipantViewLabelContainerView.label.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label);
}

uint64_t ParticipantViewLabelContainerView.isCentered.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  swift_beginAccess();
  return *v1;
}

uint64_t key path getter for ParticipantViewLabelContainerView.isCentered : ParticipantViewLabelContainerView@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantViewLabelContainerView.isCentered.didset(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *id v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    id v9 = (unsigned char *)(v2 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
    swift_beginAccess();
    if (*v9 != (a1 & 1))
    {
      unint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label);
      if (*v9) {
        objc_msgSend(v10, sel_setTextAlignment_, 1);
      }
      else {
        objc_msgSend(v10, sel_setTextAlignment_, 4);
      }
      uint64_t v11 = self;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_activateConstraints_, isa);

      swift_bridgeObjectRetain();
      Class v13 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_deactivateConstraints_, v13);
    }
  }
  else
  {
    __break(1u);
  }
}

void (*ParticipantViewLabelContainerView.isCentered.modify(void *a1))(uint64_t a1)
{
  unint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered);
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *v4;
  return ParticipantViewLabelContainerView.isCentered.modify;
}

void ParticipantViewLabelContainerView.isCentered.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  ParticipantViewLabelContainerView.isCentered.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

id ParticipantViewLabelContainerView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

char *ParticipantViewLabelContainerView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  swift_getObjectType();
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  unint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_leadingAlignedConstraints] = v4;
  v3[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered] = 1;

  double v5 = OUTLINED_FUNCTION_6_2();
  char v8 = (char *)objc_msgSendSuper2(v6, v7, v5);
  objc_msgSend(v8, sel_setClipsToBounds_, 1);
  uint64_t v9 = OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label;
  unint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label];
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v11 = one-time initialization token for titleLabel;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  objc_msgSend(v12, sel_setTextColor_, static Colors.ParticipantViews.titleLabel);

  uint64_t v13 = one-time initialization token for title;
  id v14 = *(id *)&v8[v9];
  if (v13 != -1) {
    swift_once();
  }
  objc_msgSend(v14, sel_setFont_, static Fonts.ParticipantViews.title);

  uint64_t v15 = *(void **)&v8[v9];
  unsigned int v16 = (unsigned __int8 *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered];
  uint64_t v79 = (uint64_t)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered];
  swift_beginAccess();
  objc_msgSend(v15, sel_setTextAlignment_, *v16);
  objc_msgSend(v15, sel_setNumberOfLines_, 1);
  LODWORD(v17) = 1148846080;
  objc_msgSend(v15, sel_setContentHuggingPriority_forAxis_, 1, v17);
  objc_msgSend(v8, sel_addSubview_, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v18 = OUTLINED_FUNCTION_12_6();
  *(_OWORD *)(v18 + 16) = xmmword_1C3769610;
  id v19 = objc_msgSend(v15, sel_topAnchor);
  id v20 = objc_msgSend(v8, sel_topAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v18 + 32) = v21;
  id v22 = objc_msgSend(*(id *)&v8[v9], sel_bottomAnchor);
  id v23 = objc_msgSend(v8, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v23);

  *(void *)(v18 + 40) = v24;
  OUTLINED_FUNCTION_0_99();
  id v25 = objc_msgSend(*(id *)&v8[v9], sel_centerXAnchor);
  id v26 = objc_msgSend(v8, sel_centerXAnchor);
  id v27 = objc_msgSend(v25, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v26);

  LODWORD(v28) = 1132068864;
  objc_msgSend(v27, sel_setPriority_, v28);
  uint64_t v29 = OUTLINED_FUNCTION_12_6();
  id v37 = objc_msgSend((id)OUTLINED_FUNCTION_4_104(v29, v30, v31, v32, v33, v34, v35, v36, v75, v86, v79, v81, xmmword_1C3769610), sel_leadingAnchor);
  id v38 = objc_msgSend(v8, sel_leadingAnchor);
  id v39 = objc_msgSend(v37, sel_constraintGreaterThanOrEqualToAnchor_, v38);

  void v25[4] = v39;
  v25[5] = v27;
  OUTLINED_FUNCTION_0_99();
  uint64_t v40 = *(void *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints];
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints] = v86;
  id v82 = v27;
  swift_bridgeObjectRelease();
  uint64_t v41 = OUTLINED_FUNCTION_12_6();
  id v49 = objc_msgSend((id)OUTLINED_FUNCTION_4_104(v41, v42, v43, v44, v45, v46, v47, v48, v76, v77, v80, (uint64_t)v82, v84), sel_leadingAnchor);
  id v50 = objc_msgSend(v8, sel_leadingAnchor);
  id v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

  *(void *)(v40 + 32) = v51;
  id v52 = objc_msgSend(*(id *)&v8[v9], sel_trailingAnchor);
  id v53 = objc_msgSend(v8, sel_trailingAnchor);
  id v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v53);

  *(void *)(v40 + 40) = v54;
  OUTLINED_FUNCTION_0_99();
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_leadingAlignedConstraints] = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v55 = self;
  specialized Array.append<A>(contentsOf:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_activateConstraints_, isa);

  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 320))())
  {
    id v57 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_init);
    uint64_t v58 = OUTLINED_FUNCTION_12_6();
    *(_OWORD *)(v58 + 16) = v85;
    if (one-time initialization token for background != -1) {
      swift_once();
    }
    uint64_t v59 = (void *)static Colors.ParticipantViews.background;
    *(void *)(v58 + 32) = objc_msgSend((id)static Colors.ParticipantViews.background, sel_colorWithAlphaComponent_, 0.0);
    *(void *)(v58 + 40) = v59;
    OUTLINED_FUNCTION_0_99();
    id v60 = v59;
    GradientView.colors.setter(v78);
    uint64_t v61 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v61, sel_setStartPoint_, 0.0, 0.0);

    char v62 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v62, sel_setEndPoint_, 1.0, 0.0);

    objc_msgSend(v57, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_addSubview_, v57);
    uint64_t v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_1C3769580;
    id v64 = objc_msgSend(v57, sel_topAnchor);
    id v65 = objc_msgSend(v8, sel_topAnchor);
    id v66 = objc_msgSend(v64, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v65);

    *(void *)(v63 + 32) = v66;
    id v67 = objc_msgSend(v57, sel_bottomAnchor);
    id v68 = OUTLINED_FUNCTION_2_118((uint64_t)objc_msgSend(v8, sel_bottomAnchor));

    *(void *)(v63 + 40) = v68;
    id v69 = objc_msgSend(v57, sel_trailingAnchor);
    id v70 = OUTLINED_FUNCTION_2_118((uint64_t)objc_msgSend(v8, sel_trailingAnchor));

    *(void *)(v63 + 48) = v70;
    id v71 = objc_msgSend(v57, sel_widthAnchor);
    id v72 = objc_msgSend(v71, sel_constraintEqualToConstant_, 32.0);

    *(void *)(v63 + 56) = v72;
    OUTLINED_FUNCTION_0_99();
    Class v73 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v55, sel_activateConstraints_, v73);
  }
  return v8;
}

id ParticipantViewLabelContainerView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantViewLabelContainerView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_centerAlignedConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_leadingAlignedConstraints] = v2;
  v0[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_isCentered] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t static ParticipantViewLabelContainerView.layerClass.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 320))()) {
    return type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CALayer);
  }
  return type metadata accessor for ParticipantViewLabelContainerViewLayer();
}

id ParticipantViewLabelContainerViewLayer.init()()
{
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v17, sel_init);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F39BD0]);
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C37696D0;
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_whiteColor);
  id v8 = objc_msgSend(v7, sel_CGColor);

  type metadata accessor for CGColorRef(0);
  uint64_t v10 = v9;
  *(void *)(v5 + 56) = v9;
  *(void *)(v5 + 32) = v8;
  id v11 = objc_msgSend(v6, sel_clearColor);
  id v12 = objc_msgSend(v11, sel_CGColor);

  *(void *)(v5 + 88) = v10;
  *(void *)(v5 + 64) = v12;
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v5, v4);
  type metadata accessor for AppUtilities();
  BOOL v13 = static AppUtilities.isRTL.getter();
  if (v13) {
    double v14 = 1.0;
  }
  else {
    double v14 = 0.0;
  }
  if (v13) {
    double v15 = 0.0;
  }
  else {
    double v15 = 1.0;
  }
  objc_msgSend(v4, sel_setStartPoint_, v14);
  objc_msgSend(v4, sel_setEndPoint_, v15, 0.0);
  objc_msgSend(v3, sel_setMask_, v4);

  return v3;
}

uint64_t ParticipantViewLabelContainerViewLayer.init(layer:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  outlined init with copy of Any(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    id v4 = v8;
    v7.receiver = v1;
    v7.super_class = ObjectType;
    id v5 = objc_msgSendSuper2(&v7, sel_initWithLayer_, v8);

    __swift_destroy_boxed_opaque_existential_1(a1);
    return (uint64_t)v5;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void ParticipantViewLabelContainerViewLayer.init(coder:)()
{
}

uint64_t sub_1C34B246C(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void ParticipantViewLabelContainerViewLayer.layoutSublayers()()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_layoutSublayers);
  id v1 = objc_msgSend(v0, sel_mask);
  if (v1)
  {
    id v2 = v1;
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = (void *)v3;
      objc_msgSend(v0, sel_bounds);
      if (v5 > 0.0)
      {
        id v6 = v2;
        id v7 = v0;
        specialized CALayer.coordinateAnimation(_:animations:)(v7, v4, v7);
      }
    }
  }
}

id closure #1 in ParticipantViewLabelContainerViewLayer.layoutSublayers()(void *a1, id a2)
{
  objc_msgSend(a2, sel_bounds);
  double v4 = 0.0;
  objc_msgSend(a1, sel_setFrame_, 0.0, 0.0);
  objc_msgSend(a2, sel_bounds);
  double v6 = fmin(32.0 / v5, 1.0);
  type metadata accessor for AppUtilities();
  BOOL v7 = static AppUtilities.isRTL.getter();
  double v8 = 1.0 - v6;
  if (v7) {
    double v8 = v6;
  }
  else {
    double v4 = 1.0;
  }
  objc_msgSend(a1, sel_setStartPoint_, v8, 0.0);
  return objc_msgSend(a1, sel_setEndPoint_, v4, 0.0);
}

uint64_t type metadata accessor for ParticipantViewLabelContainerViewLayer()
{
  return self;
}

void sub_1C34B268C(char *a1)
{
}

uint64_t type metadata accessor for ParticipantViewLabelContainerView()
{
  return self;
}

void outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setColors_, isa);
}

uint64_t static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(void *a1, char *a2, void *a3, void *a4, void *a5, void *a6)
{
  char v40 = *a2;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  objc_msgSend(a1, sel_addLayoutGuide_, v8);
  uint64_t v9 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3769580;
  id v11 = objc_msgSend(v8, sel_topAnchor);
  id v12 = objc_msgSend(a1, sel_safeAreaLayoutGuide);
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v10 + 32) = v14;
  id v15 = objc_msgSend(v8, sel_bottomAnchor);
  id v16 = OUTLINED_FUNCTION_3_5();
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v17);
  *(void *)(v10 + 40) = v18;
  id v19 = objc_msgSend(v8, sel_leadingAnchor);
  id v20 = OUTLINED_FUNCTION_3_5();
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v21);
  *(void *)(v10 + 48) = v22;
  id v23 = objc_msgSend(v8, sel_trailingAnchor);
  id v24 = OUTLINED_FUNCTION_3_5();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v25);
  *(void *)(v10 + 56) = v26;
  uint64_t v44 = v10;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, isa);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ViewConstraintManager>);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C37696D0;
  uint64_t v29 = type metadata accessor for EffectsViewConstraintManager();
  swift_allocObject();
  id v30 = a4;
  id v31 = a5;
  id v32 = v8;
  uint64_t v33 = EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(v32, a4, v31);
  *(void *)(v28 + 56) = v29;
  *(void *)(v28 + 64) = &protocol witness table for EffectsViewConstraintManager;
  *(void *)(v28 + 32) = v33;
  char v43 = v40;
  uint64_t v34 = type metadata accessor for EffectsBrowserViewConstraintManager();
  swift_allocObject();
  id v35 = v32;
  id v36 = v30;
  uint64_t v37 = EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(&v43, (uint64_t)v35, a6, a3, a4);
  *(void *)(v28 + 96) = v34;
  *(void *)(v28 + 104) = &protocol witness table for EffectsBrowserViewConstraintManager;
  *(void *)(v28 + 72) = v37;

  return v28;
}

uint64_t static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(uint64_t a1, char *a2, uint64_t a3, double a4, double a5)
{
  if (a1)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      char v27 = *a2;
      uint64_t v26 = *((void *)a2 + 1);
      char v24 = a2[17];
      char v25 = a2[16];
      char v22 = a2[19];
      char v23 = a2[18];
      char v9 = a2[20];
      char v10 = a2[21];
      char v11 = a2[22];
      uint64_t v41 = MEMORY[0x1E4FBC860];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v12 = a1 + 32;
      uint64_t v13 = v41;
      do
      {
        outlined init with copy of IDSLookupManager(v12, (uint64_t)v38);
        uint64_t v14 = v39;
        uint64_t v15 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        v29[0] = v27;
        uint64_t v30 = v26;
        char v31 = v25;
        char v32 = v24;
        char v33 = v23;
        char v34 = v22;
        char v35 = v9;
        char v36 = v10;
        char v37 = v11;
        uint64_t v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, double, double))(v15 + 8))(v29, a3, v14, v15, a4, a5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v13 = v41;
        }
        unint64_t v17 = *(void *)(v13 + 16);
        unint64_t v18 = v17 + 1;
        if (v17 >= *(void *)(v13 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v13 = v41;
        }
        *(void *)(v13 + 16) = v18;
        *(void *)(v13 + 8 * v17 + 32) = v16;
        v12 += 40;
        --v6;
      }
      while (v6);
    }
    else
    {
      unint64_t v18 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v19 = MEMORY[0x1E4FBC860];
      if (!v18)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    do
    {
      ++v20;
      v38[0] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      uint64_t v19 = v38[0];
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  return MEMORY[0x1E4FBC860];
}

double static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(char a1, char a2, id a3, void *a4)
{
  if (a1)
  {
    objc_msgSend(a3, sel_bounds);
    double v9 = v8;
  }
  else
  {
    if (a2) {
      id v10 = objc_msgSend(a3, sel_safeAreaLayoutGuide);
    }
    else {
      id v10 = objc_msgSend(a3, sel_readableContentGuide);
    }
    id v11 = v10;
    objc_msgSend(v11, sel_layoutFrame);
    double v9 = v12;
  }
  objc_msgSend(a4, sel_systemLayoutSizeFittingSize_, v9, 1.79769313e308);
  if (a2)
  {
    objc_msgSend(a3, sel_safeAreaInsets);
    double v14 = v13;
    if ((a1 & 1) == 0) {
      return v14;
    }
  }
  else
  {
    objc_msgSend(a3, sel_bounds);
    double v14 = floor((v15 - v9) * 0.5);
    if ((a1 & 1) == 0)
    {
      id v16 = objc_msgSend(self, sel_mainScreen);
      objc_msgSend(v16, sel_bounds);

      objc_msgSend(a3, sel_safeAreaInsets);
      return v14;
    }
  }
  objc_msgSend(a3, sel_bounds);
  return v14;
}

uint64_t protocol witness for static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:) in conformance LargeMultiwayControllerLayout(uint64_t a1, unsigned __int8 *a2)
{
  return specialized static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(a1, *a2);
}

uint64_t protocol witness for static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:) in conformance LargeMultiwayControllerLayout(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return protocol witness for static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:) in conformance LargeMultiwayControllerLayout(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, void, void, unint64_t, uint64_t))specialized static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:));
}

uint64_t protocol witness for ViewControllerLayout.localParticipantPreviewRegularSize.getter in conformance LargeMultiwayControllerLayout()
{
  return specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
}

uint64_t ViewControllerLayout.localParticipantPreviewRegularSize.getter()
{
  return 0;
}

uint64_t protocol witness for static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:) in conformance LargeMultiwayControllerLayout(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, void, void, unint64_t, uint64_t))
{
  uint64_t v6 = 0x10000;
  if (!a2[18]) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = *((unsigned __int16 *)a2 + 8) | (unint64_t)v6 | ((unint64_t)a2[19] << 24);
  uint64_t v8 = 0x100000000;
  if (!a2[20]) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = 0x10000000000;
  if (!a2[21]) {
    uint64_t v9 = 0;
  }
  uint64_t v10 = 0x1000000000000;
  if (!a2[22]) {
    uint64_t v10 = 0;
  }
  return a6(a1, *a2, *((void *)a2 + 1), v7 | v8 | v9 | v10, a3);
}

uint64_t ViewControllerLayout.bannerViewConstraintManager.getter()
{
  return 0;
}

double ViewControllerLayout.localParticipantViewRegularWidth.getter()
{
  return 0.0;
}

uint64_t dispatch thunk of ViewControllerLayout.update(with:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(for:with:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(localParticipantAspectRatio:layoutState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4 = *(uint64_t (**)(_OWORD *))(a4 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v6;
  char v9 = v5;
  return v4(v8);
}

uint64_t dispatch thunk of ViewControllerLayout.update(remoteParticipantAspectRatio:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(isDisplayedInBanner:containingView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(localParticipantCorner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ViewControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of ViewControllerLayout.updateLayoutWith(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ViewControllerLayout.updateShutterButton(with:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))(a1 & 1);
}

uint64_t dispatch thunk of ViewControllerLayout.floatingControlsStateDidChange(from:to:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(a4 + 80))(a1 & 1, a2 & 1);
}

uint64_t dispatch thunk of ViewControllerLayout.updateLocalPreviewConstraintWhenExpanded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ViewControllerLayout.update(isLocalReactionActive:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of ViewControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of ViewControllerLayout.resetCaptionsBubbleViewConstraints()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ViewControllerLayout.removeEffectsConstraints()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 128))();
}

uint64_t dispatch thunk of static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 144))();
}

uint64_t dispatch thunk of ViewControllerLayout.handlesLocalParticipantConstraints.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of ViewControllerLayout.localParticipantPreviewRegularSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of ViewControllerLayout.bannerViewConstraintManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of ViewControllerLayout.localParticipantViewRegularWidth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t LocalVideoRecordButtonViewModel.__allocating_init()()
{
  OUTLINED_FUNCTION_25_0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t LocalVideoRecordButtonViewModel.controlType.getter()
{
  return LocalVideoRecordButtonViewModel.config.getter();
}

uint64_t LocalVideoRecordButtonViewModel.config.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Image.Scale();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 16))
  {
    uint64_t v10 = *(void *)(v1 + 16);
  }
  else
  {
    uint64_t v11 = static Color.white.getter();
    if (one-time initialization token for callControlBackgroundOff != -1) {
      swift_once();
    }
    uint64_t v12 = static SystemSymbol<A>.callControlBackgroundOff;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F3EC70], v6);
    swift_retain();
    uint64_t v13 = static Font.body.getter();
    static Font.Weight.regular.getter();
    static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)(0x662E656C63726963, 0xEB000000006C6C69, v11, v12, (uint64_t)v9, v13, v37, v14);
    long long v36 = v37[3];
    long long v35 = v37[4];
    uint64_t v34 = v38;
    uint64_t v33 = v39;
    swift_release();
    swift_release();
    swift_release();
    double v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    long long v32 = v37[0];
    long long v31 = v37[1];
    long long v30 = v37[2];
    v15(v9, v6);
    uint64_t v16 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3E0F8], v2);
    uint64_t v17 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    long long v40 = xmmword_1C376AA10;
    uint64_t v41 = 0x401C000000000000;
    uint64_t v42 = v16;
    long long v44 = v32;
    long long v45 = v31;
    long long v46 = v30;
    long long v47 = v36;
    long long v48 = v35;
    uint64_t v43 = v17;
    uint64_t v49 = v34;
    uint64_t v50 = v33;
    unint64_t v18 = self;
    id v19 = objc_msgSend(v18, sel_conversationKit);
    v51._object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0xD000000000000016;
    v20._object = (void *)0x80000001C37B0EE0;
    v21.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v21.value._object = (void *)0xEF74694B6E6F6974;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v51._uint64_t countAndFlagsBits = 0;
    Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v51);

    id v24 = objc_msgSend(v18, sel_conversationKit);
    v52._object = (void *)0xE000000000000000;
    v25._uint64_t countAndFlagsBits = 0xD000000000000016;
    v25._object = (void *)0x80000001C37B0EE0;
    v26.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v26.value._object = (void *)0xEF74694B6E6F6974;
    v27._uint64_t countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v52._uint64_t countAndFlagsBits = 0;
    Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v52);

    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<()>);
    swift_allocObject();
    uint64_t v10 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v40, v23._countAndFlagsBits, (uint64_t)v23._object, 0, v28._countAndFlagsBits, (uint64_t)v28._object, 0xD000000000000016, 0x80000001C3797270, 1);
    *(void *)(v1 + 16) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

uint64_t LocalVideoRecordButtonViewModel.enabled(for:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 568))() & 1;
}

uint64_t closure #1 in LocalVideoRecordButtonViewModel.config.getter()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t LocalVideoRecordButtonViewModel.deinit()
{
  swift_release();
  return v0;
}

uint64_t LocalVideoRecordButtonViewModel.__deallocating_deinit()
{
  swift_release();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocClassInstance();
}

uint64_t LocalVideoRecordButtonViewModel.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  return result;
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance LocalVideoRecordButtonViewModel()
{
  return LocalVideoRecordButtonViewModel.enabled(for:)() & 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance LocalVideoRecordButtonViewModel()
{
  return LocalVideoRecordButtonViewModel.controlType.getter();
}

uint64_t type metadata accessor for LocalVideoRecordButtonViewModel()
{
  return self;
}

uint64_t method lookup function for LocalVideoRecordButtonViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalVideoRecordButtonViewModel);
}

uint64_t dispatch thunk of LocalVideoRecordButtonViewModel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C34B3904()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LocalVideoRecordButtonViewModel.config.getter()
{
  return closure #1 in LocalVideoRecordButtonViewModel.config.getter();
}

uint64_t MockCaptionsProvider.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t MockCaptionsProvider.token.getter()
{
  return -1;
}

uint64_t MockCaptionsProvider.participantCaptionsProviderDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MockCaptionsProvider.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_11_0();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*MockCaptionsProvider.participantCaptionsProviderDelegate.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t MockCaptionsProvider.captionsTask.getter()
{
  return swift_retain();
}

uint64_t MockCaptionsProvider.captionsTask.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_11_0();
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t (*MockCaptionsProvider.captionsTask.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MockCaptionsProvider.captionsEnabled.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t key path getter for MockCaptionsProvider.captionsEnabled : MockCaptionsProvider@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t MockCaptionsProvider.captionsEnabled.setter(char a1)
{
  OUTLINED_FUNCTION_11_0();
  char v3 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(v1 + 40) = a1;
  return MockCaptionsProvider.captionsEnabled.didset(v3);
}

uint64_t MockCaptionsProvider.captionsEnabled.didset(char a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v1 + 40) == 1)
  {
    if (a1) {
      return result;
    }
    swift_beginAccess();
    if (*(void *)(v1 + 32))
    {
      uint64_t v7 = swift_retain();
      MEMORY[0x1C8773690](v7, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
      swift_release();
    }
    static TaskPriority.userInitiated.getter();
    uint64_t v8 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v8);
    char v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v1;
    swift_retain();
    *(void *)(v1 + 32) = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  }
  else
  {
    uint64_t result = swift_beginAccess();
    if (!*(void *)(v1 + 32)) {
      return result;
    }
    uint64_t v10 = swift_retain();
    MEMORY[0x1C8773690](v10, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
  }
  return swift_release();
}

uint64_t closure #1 in MockCaptionsProvider.captionsEnabled.didset()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return MockCaptionsProvider.start()();
}

uint64_t MockCaptionsProvider.start()()
{
  OUTLINED_FUNCTION_17_2();
  v1[22] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v1[23] = OUTLINED_FUNCTION_28_2();
  v1[24] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ContinuousClock.Instant();
  v1[25] = v2;
  OUTLINED_FUNCTION_1(v2);
  v1[26] = v3;
  v1[27] = OUTLINED_FUNCTION_28_2();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ContinuousClock();
  v1[30] = v4;
  OUTLINED_FUNCTION_1(v4);
  v1[31] = v5;
  v1[32] = OUTLINED_FUNCTION_28_2();
  v1[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](MockCaptionsProvider.start(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  uint64_t (*v12)(void);
  void *rawValue;
  uint64_t v15;

  OUTLINED_FUNCTION_86_0();
  v0[21] = 0;
  if (one-time initialization token for phrases != -1) {
    swift_once();
  }
  for (v0[34] = 0; ; v0[34] = v2 + 1)
  {
    rawValue = phrases._rawValue;
    swift_bridgeObjectRetain();
    specialized MutableCollection<>.shuffle<A>(using:)();
    OUTLINED_FUNCTION_21_4((uint64_t)rawValue);
    if (v1) {
      break;
    }
    swift_release();
    OUTLINED_FUNCTION_19_5();
    if (v3)
    {
      OUTLINED_FUNCTION_2_119();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6();
      return v12();
    }
  }
  uint64_t v4 = OUTLINED_FUNCTION_11_0();
  v0[37] = 0;
  uint64_t v8 = (void *)v0[35];
  if (v8[2])
  {
    v0[38] = v8[4];
    v0[39] = v8[5];
    swift_bridgeObjectRetain();
    ContinuousClock.init()();
    static ContinuousClock.Instant.now.getter();
    OUTLINED_FUNCTION_5_94();
    char v9 = OUTLINED_FUNCTION_3_25();
    v10(v9);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[42] = v11;
    void *v11 = v0;
    v11[1] = MockCaptionsProvider.start();
    uint64_t v4 = OUTLINED_FUNCTION_9_5(v0[29]);
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4187F40](v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v17;

  OUTLINED_FUNCTION_86_0();
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[43] = v0;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v2[40];
  if (v0)
  {
    uint64_t v6 = v3[33];
    uint64_t v7 = v3[30];
    uint64_t v8 = v3[31];
    char v9 = v3[29];
    uint64_t v10 = v3[25];
    swift_bridgeObjectRelease();
    v5(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_release();
    uint64_t v11 = MockCaptionsProvider.start();
  }
  else
  {
    uint64_t v12 = v3[33];
    uint64_t v13 = v3[30];
    uint64_t v14 = v3[31];
    v5(v3[29], v3[25]);
    double v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v3[44] = v15;
    v3[45] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v15(v12, v13);
    uint64_t v11 = MockCaptionsProvider.start();
  }
  return MEMORY[0x1F4188298](v11, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  void *v41;
  uint64_t v42;
  void *rawValue;

  *(void *)(v0 + 136) = *(void *)(v0 + 304);
  *(void *)(v0 + 152) = 0;
  uint64_t v4 = *(void *)(v0 + 312);
  *(void *)(v0 + 160) = 0xE000000000000000;
  *(void *)(v0 + 144) = v4;
  uint64_t v5 = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v6 = MEMORY[0x1C8774260](32, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E4FBB1A0], v5);
  *(void *)(v0 + 368) = v6;
  uint64_t v7 = *(void *)(v6 + 16);
  *(void *)(v0 + 376) = v7;
  if (v7)
  {
    *(void *)(v0 + 384) = 0;
    OUTLINED_FUNCTION_28_38();
    uint64_t v10 = *(void *)(v8 + 48);
    char v9 = *(void *)(v8 + 56);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v8 + 32);
    *(void *)(v0 + 96) = v10;
    *(void *)(v0 + 104) = v9;
    lazy protocol witness table accessor for type Substring and conformance Substring();
    String.append<A>(contentsOf:)();
    ContinuousClock.init()();
    static ContinuousClock.Instant.now.getter();
    OUTLINED_FUNCTION_14_65();
    v3(v1, v2);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v11;
    void *v11 = v0;
    v11[1] = MockCaptionsProvider.start();
    uint64_t v12 = *(void *)(v0 + 216);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 304);
  uint64_t v13 = *(void *)(v0 + 312);
  uint64_t v16 = *(void *)(v0 + 176);
  double v15 = *(void *)(v0 + 184);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v0 + 168);
  static TaskPriority.userInitiated.getter();
  unint64_t v18 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v15, 0, 1, v18);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = static MainActor.shared.getter();
  Swift::String v20 = swift_allocObject();
  Swift::String_optional v21 = MEMORY[0x1E4FBCFD8];
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v21;
  *(void *)(v20 + 32) = v17;
  *(void *)(v20 + 40) = v14;
  *(void *)(v20 + 48) = v13;
  *(unsigned char *)(v20 + 56) = 1;
  *(void *)(v20 + 64) = v16;
  if (__swift_getEnumTagSinglePayload(v15, 1, v18) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 184));
    if (v19)
    {
LABEL_5:
      swift_getObjectType();
      swift_unknownObjectRetain();
      Swift::String v22 = dispatch thunk of Actor.unownedExecutor.getter();
      id v24 = v23;
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_11_62();
    OUTLINED_FUNCTION_17_50();
    v25();
    if (*(void *)(v20 + 16)) {
      goto LABEL_5;
    }
  }
  Swift::String v22 = 0;
  id v24 = 0;
LABEL_8:
  Swift::String_optional v26 = swift_allocObject();
  *(void *)(v26 + 16) = &closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()partial apply;
  *(void *)(v26 + 24) = v20;
  if (v24 | v22)
  {
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v22;
    *(void *)(v0 + 40) = v24;
  }
  swift_task_create();
  swift_bridgeObjectRelease();
  Swift::String v27 = swift_release();
  if (__OFADD__(*(void *)(v0 + 168), 1))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    return MEMORY[0x1F4187F40](v27, v28, v29, v30);
  }
  OUTLINED_FUNCTION_26_41();
  if (v32)
  {
    swift_release();
    OUTLINED_FUNCTION_19_5();
    if (v32)
    {
LABEL_17:
      OUTLINED_FUNCTION_2_119();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_24_5();
      __asm { BRAA            X1, X16 }
    }
    while (1)
    {
      *(void *)(v0 + 272) = v33 + 1;
      rawValue = phrases._rawValue;
      swift_bridgeObjectRetain();
      specialized MutableCollection<>.shuffle<A>(using:)();
      OUTLINED_FUNCTION_21_4((uint64_t)rawValue);
      if (v34) {
        break;
      }
      swift_release();
      OUTLINED_FUNCTION_19_5();
      if (v32) {
        goto LABEL_17;
      }
    }
    OUTLINED_FUNCTION_11_0();
    long long v31 = 0;
  }
  OUTLINED_FUNCTION_24_45(v31);
  if (v38) {
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_10_72(v37);
  ContinuousClock.init()();
  static ContinuousClock.Instant.now.getter();
  OUTLINED_FUNCTION_5_94();
  uint64_t v39 = OUTLINED_FUNCTION_3_25();
  v40(v39);
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v41;
  uint64_t *v41 = v0;
  v41[1] = MockCaptionsProvider.start();
  uint64_t v12 = *(void *)(v0 + 232);
LABEL_23:
  OUTLINED_FUNCTION_9_5(v12);
  OUTLINED_FUNCTION_24_5();
  return MEMORY[0x1F4187F40](v27, v28, v29, v30);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  v3[50] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = (void (*)(uint64_t, uint64_t))v3[44];
    uint64_t v7 = (void (*)(uint64_t, uint64_t))v3[40];
    uint64_t v8 = v3[32];
    char v9 = v3[30];
    uint64_t v10 = v3[27];
    uint64_t v11 = v3[25];
    swift_bridgeObjectRelease();
    v7(v10, v11);
    v6(v8, v9);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v3[44];
    uint64_t v13 = v3[32];
    uint64_t v14 = v3[30];
    ((void (*)(void, void))v3[40])(v3[27], v3[25]);
    v12(v13, v14);
  }
  OUTLINED_FUNCTION_263();
  return MEMORY[0x1F4188298](v15, v16, v17);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  void *v53;
  uint64_t v54;
  void *rawValue;

  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  static TaskPriority.userInitiated.getter();
  uint64_t v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v6);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = swift_allocObject();
  char v9 = MEMORY[0x1E4FBCFD8];
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v9;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v5;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = v4;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v6);
  uint64_t v11 = *(void *)(v0 + 192);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 192));
    uint64_t v12 = 7168;
    if (v7)
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      double v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_11_62();
    OUTLINED_FUNCTION_17_50();
    v16();
    uint64_t v12 = v11 | 0x1C00;
    if (*(void *)(v8 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  double v15 = 0;
LABEL_6:
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &async function pointer to partial apply for closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start();
  *(void *)(v17 + 24) = v8;
  if (v15 | v13)
  {
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 56) = 0;
    *(void *)(v0 + 64) = v13;
    *(void *)(v0 + 72) = v15;
  }
  unint64_t v18 = *(void *)(v0 + 376);
  id v19 = *(void *)(v0 + 384) + 1;
  swift_task_create();
  swift_bridgeObjectRelease();
  swift_release();
  if (v19 != v18)
  {
    ++*(void *)(v0 + 384);
    OUTLINED_FUNCTION_28_38();
    uint64_t v29 = v28 + 32 * v27;
    long long v31 = *(void *)(v29 + 48);
    long long v30 = *(void *)(v29 + 56);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v29 + 32);
    *(void *)(v0 + 96) = v31;
    *(void *)(v0 + 104) = v30;
    lazy protocol witness table accessor for type Substring and conformance Substring();
    String.append<A>(contentsOf:)();
    ContinuousClock.init()();
    static ContinuousClock.Instant.now.getter();
    OUTLINED_FUNCTION_14_65();
    ((void (*)(uint64_t, uint64_t))v12)(v6, v5);
    long long v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v32;
    char *v32 = v0;
    v32[1] = MockCaptionsProvider.start();
    uint64_t v33 = *(void *)(v0 + 216);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  Swift::String_optional v21 = *(void *)(v0 + 304);
  Swift::String v20 = *(void *)(v0 + 312);
  Swift::String v23 = *(void *)(v0 + 176);
  Swift::String v22 = *(void *)(v0 + 184);
  swift_bridgeObjectRelease();
  id v24 = *(void *)(v0 + 168);
  static TaskPriority.userInitiated.getter();
  __swift_storeEnumTagSinglePayload(v22, 0, 1, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  Swift::String v25 = static MainActor.shared.getter();
  Swift::String_optional v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = MEMORY[0x1E4FBCFD8];
  *(void *)(v26 + 32) = v24;
  *(void *)(v26 + 40) = v21;
  *(void *)(v26 + 48) = v20;
  *(unsigned char *)(v26 + 56) = 1;
  *(void *)(v26 + 64) = v23;
  if (__swift_getEnumTagSinglePayload(v22, 1, v6) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 184));
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_11_62();
    OUTLINED_FUNCTION_17_50();
    v34();
    Swift::String v25 = *(void *)(v26 + 16);
  }
  if (v25)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    long long v35 = dispatch thunk of Actor.unownedExecutor.getter();
    char v37 = v36;
    swift_unknownObjectRelease();
  }
  else
  {
    long long v35 = 0;
    char v37 = 0;
  }
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = &closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()partial apply;
  *(void *)(v38 + 24) = v26;
  if (v37 | v35)
  {
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v35;
    *(void *)(v0 + 40) = v37;
  }
  swift_task_create();
  swift_bridgeObjectRelease();
  uint64_t v39 = swift_release();
  if (__OFADD__(*(void *)(v0 + 168), 1))
  {
    __break(1u);
LABEL_35:
    __break(1u);
    return MEMORY[0x1F4187F40](v39, v40, v41, v42);
  }
  OUTLINED_FUNCTION_26_41();
  if (v44)
  {
    swift_release();
    OUTLINED_FUNCTION_19_5();
    if (v44)
    {
LABEL_25:
      OUTLINED_FUNCTION_2_119();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_263();
      __asm { BRAA            X1, X16 }
    }
    while (1)
    {
      *(void *)(v0 + 272) = v45 + 1;
      rawValue = phrases._rawValue;
      swift_bridgeObjectRetain();
      specialized MutableCollection<>.shuffle<A>(using:)();
      OUTLINED_FUNCTION_21_4((uint64_t)rawValue);
      if (v46) {
        break;
      }
      swift_release();
      OUTLINED_FUNCTION_19_5();
      if (v44) {
        goto LABEL_25;
      }
    }
    OUTLINED_FUNCTION_11_0();
    uint64_t v43 = 0;
  }
  OUTLINED_FUNCTION_24_45(v43);
  if (v50) {
    goto LABEL_35;
  }
  OUTLINED_FUNCTION_10_72(v49);
  ContinuousClock.init()();
  static ContinuousClock.Instant.now.getter();
  OUTLINED_FUNCTION_5_94();
  Swift::String v51 = OUTLINED_FUNCTION_3_25();
  v52(v51);
  id v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v53;
  *id v53 = v0;
  v53[1] = MockCaptionsProvider.start();
  uint64_t v33 = *(void *)(v0 + 232);
LABEL_31:
  OUTLINED_FUNCTION_9_5(v33);
  OUTLINED_FUNCTION_263();
  return MEMORY[0x1F4187F40](v39, v40, v41, v42);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_2_119();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_2_119();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v1();
}

void (*MockCaptionsProvider.captionsEnabled.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *(unsigned char *)(v1 + 40);
  return MockCaptionsProvider.captionsEnabled.modify;
}

void MockCaptionsProvider.captionsEnabled.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  MockCaptionsProvider.captionsEnabled.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

uint64_t closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 104) = a7;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  uint64_t v9 = type metadata accessor for Participant.Caption(0);
  *(void *)(v8 + 72) = v9;
  *(void *)(v8 + 80) = *(void *)(v9 - 8);
  *(void *)(v8 + 88) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 96) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start(), v11, v10);
}

void closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v3 = *(int **)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  swift_release();
  Date.init()();
  Date.init()();
  *uint64_t v1 = v8;
  uint64_t v9 = (void *)((char *)v1 + v3[7]);
  *uint64_t v9 = v7;
  v9[1] = v6;
  *((unsigned char *)v1 + v3[8]) = v4;
  *(void *)((char *)v1 + v3[9]) = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
  outlined init with copy of Participant.Caption((uint64_t)v1, v11 + v10);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 64);
  if (v12)
  {
    uint64_t v15 = *(void *)(v14 + 24);
    swift_endAccess();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = v13;
    uint64_t v17 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v15 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    v17(v14, &protocol witness table for MockCaptionsProvider, v14, &protocol witness table for MockCaptionsProvider, v11, ObjectType, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    outlined destroy of Participant.Caption(v20);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    outlined destroy of Participant.Caption(v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_24_5();
  __asm { BRAA            X1, X16 }
}

uint64_t MockCaptionsProvider.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t MockCaptionsProvider.__deallocating_deinit()
{
  MockCaptionsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t MockCaptionsProvider.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 40) = 0;
  *(void *)(v0 + 32) = 0;
  return result;
}

uint64_t protocol witness for ParticipantCaptionsProvider.token.getter in conformance MockCaptionsProvider()
{
  return -1;
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter in conformance MockCaptionsProvider()
{
  return swift_unknownObjectRetain();
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter in conformance MockCaptionsProvider(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify in conformance MockCaptionsProvider())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t protocol witness for ParticipantCaptionsProvider.captionsEnabled.getter in conformance MockCaptionsProvider()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

void (*protocol witness for ParticipantCaptionsProvider.captionsEnabled.modify in conformance MockCaptionsProvider(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *(unsigned char *)(v1 + 40);
  return MockCaptionsProvider.captionsEnabled.modify;
}

void specialized MutableCollection<>.shuffle<A>(using:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      unint64_t v20 = 0;
      MEMORY[0x1C8776100](&v20, 8);
      uint64_t v5 = (v20 * (unsigned __int128)v2) >> 64;
      if (v2 > v20 * v2)
      {
        unint64_t v6 = -(uint64_t)v2 % v2;
        if (v6 > v20 * v2)
        {
          do
          {
            unint64_t v20 = 0;
            MEMORY[0x1C8776100](&v20, 8);
          }
          while (v6 > v20 * v2);
          uint64_t v5 = (v20 * (unsigned __int128)v2) >> 64;
        }
      }
      unint64_t v7 = v4 + v5;
      if (__OFADD__(v4, v5)) {
        break;
      }
      if (v4 != v7)
      {
        unint64_t v8 = *(void *)(v1 + 16);
        if (v4 >= v8) {
          goto LABEL_20;
        }
        if (v7 >= v8) {
          goto LABEL_21;
        }
        uint64_t v9 = (uint64_t *)(v1 + 32 + 16 * v4);
        uint64_t v11 = *v9;
        uint64_t v10 = v9[1];
        uint64_t v12 = (uint64_t *)(v1 + 32 + 16 * v7);
        uint64_t v14 = *v12;
        uint64_t v13 = v12[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
          uint64_t v1 = v15;
        }
        if (v4 >= *(void *)(v1 + 16)) {
          goto LABEL_22;
        }
        uint64_t v16 = (void *)(v1 + 32 + 16 * v4);
        *uint64_t v16 = v14;
        v16[1] = v13;
        swift_bridgeObjectRelease();
        if (v7 >= *(void *)(v1 + 16)) {
          goto LABEL_23;
        }
        uint64_t v17 = (void *)(v1 + 32 + 16 * v7);
        *uint64_t v17 = v11;
        v17[1] = v10;
        swift_bridgeObjectRelease();
        void *v19 = v1;
      }
      --v2;
      if (v4++ == v3) {
        return;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

uint64_t partial apply for closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()()
{
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_12_61();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_9_81();
  return closure #1 in sendUpdate #1 (_:complete:) in MockCaptionsProvider.start()(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroyTm_15()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C34B5834()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA_16()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v3 = OUTLINED_FUNCTION_11_4();
  return v4(v3);
}

uint64_t sub_1C34B5908(char *a1)
{
  return MockCaptionsProvider.captionsEnabled.setter(*a1);
}

uint64_t type metadata accessor for MockCaptionsProvider()
{
  return self;
}

uint64_t method lookup function for MockCaptionsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockCaptionsProvider);
}

uint64_t dispatch thunk of MockCaptionsProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t outlined init with copy of Participant.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Participant.Caption(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Participant.Caption(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Participant.Caption(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C34B5A40()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MockCaptionsProvider.captionsEnabled.didset()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in MockCaptionsProvider.captionsEnabled.didset();
}

void VideoMessagePlayerViewModel.__allocating_init(videoMessageURL:playerSpaciality:)()
{
  OUTLINED_FUNCTION_4_15();
  id v1 = objc_allocWithZone(v0);
  VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
}

BOOL static VideoMessagePlayerViewModel.PlayerSpatiality.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static VideoMessageControlsView.PlayState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void VideoMessageControlsView.PlayState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance VideoMessageControlsView.PlayState(char *a1, char *a2)
{
  return static VideoMessageControlsView.PlayState.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance VideoMessageControlsView.PlayState()
{
  return VideoMessageControlsView.PlayState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance VideoMessageControlsView.PlayState(uint64_t a1)
{
  VideoMessageControlsView.PlayState.hash(into:)(a1, *v1);
}

void VideoMessageControlsView.verticalSizeClass.getter()
{
}

void VideoMessageControlsView.horizontalSizeClass.getter()
{
}

id VideoMessageControlsView.videoMessageViewModel.getter()
{
  OUTLINED_FUNCTION_44_19();
  id v1 = *(void **)(v0 + 8);
  return v1;
}

void key path setter for VideoMessageControlsView.videoMessageViewModel : VideoMessageControlsView(id *a1)
{
}

void VideoMessageControlsView.videoMessageViewModel.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28);

  *(void *)(v3 + 8) = a1;
}

double (*VideoMessageControlsView.videoMessageViewModel.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t VideoMessageControlsView.$videoMessageViewModel.getter()
{
  OUTLINED_FUNCTION_44_19();
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  OUTLINED_FUNCTION_35();
  return ObservedObject.projectedValue.getter();
}

void *VideoMessageControlsView.player.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 36));
  id v2 = v1;
  return v1;
}

double VideoMessageControlsView.buttonBottomPaddingDivisor.getter()
{
  uint64_t v1 = type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v56 = (uint64_t)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v47 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  Swift::String v51 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v15);
  Swift::String v52 = (char *)&v44 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v44 - v18;
  MEMORY[0x1F4188790](v20);
  Swift::String v22 = (char *)&v44 - v21;
  MEMORY[0x1F4188790](v23);
  Swift::String v25 = (char *)&v44 - v24;
  uint64_t v50 = v1;
  uint64_t v55 = v0;
  specialized Environment.wrappedValue.getter();
  uint64_t v26 = *MEMORY[0x1E4F3DA58];
  uint64_t v54 = v4;
  long long v48 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v48(v22, v26, v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v3);
  uint64_t v49 = v6;
  uint64_t v27 = (uint64_t)&v10[*(int *)(v6 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v25, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v27, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v3) != 1)
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v10, (uint64_t)v19, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v27, 1, v3) != 1)
    {
      uint64_t v28 = v54;
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
      unsigned int v45 = v26;
      long long v30 = v46;
      v29(v46, v27, v3);
      lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
      int v44 = dispatch thunk of static Equatable.== infix(_:_:)();
      long long v31 = *(void (**)(char *, uint64_t))(v28 + 8);
      long long v32 = v30;
      uint64_t v26 = v45;
      v31(v32, v3);
      outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v31(v19, v3);
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined init with copy of VideoMessageControlsView(v55, v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
      if (v44) {
        goto LABEL_9;
      }
LABEL_7:
      _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
      return 0.0725;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v3);
LABEL_6:
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    outlined init with copy of VideoMessageControlsView(v55, v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    goto LABEL_7;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v27, 1, v3) != 1) {
    goto LABEL_6;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of VideoMessageControlsView(v55, v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
LABEL_9:
  uint64_t v33 = (uint64_t)v52;
  specialized Environment.wrappedValue.getter();
  uint64_t v34 = (uint64_t)v51;
  v48(v51, v26, v3);
  __swift_storeEnumTagSinglePayload(v34, 0, 1, v3);
  uint64_t v35 = v53;
  uint64_t v36 = v53 + *(int *)(v49 + 48);
  outlined init with copy of FeatureEligibility?(v33, v53, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v34, v36, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v35, 1, v3) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    if (__swift_getEnumTagSinglePayload(v36, 1, v3) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      return 0.055;
    }
    goto LABEL_14;
  }
  outlined init with copy of FeatureEligibility?(v35, v47, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v36, 1, v3) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v47, v3);
LABEL_14:
    outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    return 0.0725;
  }
  uint64_t v37 = v54;
  uint64_t v38 = v34;
  uint64_t v39 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v46, v36, v3);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
  uint64_t v40 = v47;
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v39, v3);
  outlined destroy of SystemUpdateNotice?(v38, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView);
  v42((char *)v40, v3);
  outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (v41) {
    return 0.055;
  }
  return 0.0725;
}

void VideoMessageControlsView.body.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v24 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  uint64_t v23 = type metadata accessor for ColorScheme();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_21_1();
  uint64_t v9 = type metadata accessor for VideoMessageControlsView(v8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_118();
  uint64_t v14 = OUTLINED_FUNCTION_41_0();
  outlined init with copy of VideoMessageControlsView(v14, v15, v16);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  outlined init with take of VideoMessageControlsView((uint64_t)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = v23;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v1, *MEMORY[0x1E4F3C5B8], v23);
  OUTLINED_FUNCTION_2_1();
  v21();
  *uint64_t v0 = KeyPath;
  outlined init with copy of FeatureEligibility?((uint64_t)v0, (uint64_t)v2 + *(int *)(v13 + 44), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  *uint64_t v2 = partial apply for closure #1 in VideoMessageControlsView.body.getter;
  v2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v18;
  swift_retain();
  outlined destroy of SystemUpdateNotice?((uint64_t)v0, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v20);
  swift_release();
  specialized VideoMessageControlsView.backgroundOrCurtainAppliedToView<A>(_:)((uint64_t)v2, v24);
  outlined destroy of SystemUpdateNotice?((uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v29)(uint64_t *__return_ptr);
  void *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  double v36;
  double v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v63;
  uint64_t v64;
  long long v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  long long v77;
  uint64_t v78;
  uint64_t v79;

  uint64_t v74 = a3;
  uint64_t v5 = type metadata accessor for VideoMessageControlsView(0);
  uint64_t v6 = v5 - 8;
  id v71 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v72 = v7;
  Class v73 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<T);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayou);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>,);
  MEMORY[0x1F4188790](v64);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>,);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&id v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _);
  MEMORY[0x1F4188790](v65);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBotto);
  MEMORY[0x1F4188790](v70);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  id v68 = *(void *)(v23 - 8);
  id v69 = v23;
  MEMORY[0x1F4188790](v23);
  id v67 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v10 = static Alignment.center.getter();
  v10[1] = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _Fle);
  closure #1 in closure #1 in VideoMessageControlsView.body.getter(a2, a1, (char *)v10 + *(int *)(v26 + 44));
  uint64_t v27 = *(int *)(v6 + 36);
  uint64_t v75 = a2;
  id v66 = a2 + v27;
  uint64_t v28 = *(void **)(a2 + v27 + 8);
  uint64_t v29 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v28) + 0x120);
  long long v30 = v28;
  v29(&v76);

  if (v76)
  {
    long long v31 = 0;
    long long v32 = 0.0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v34 = *(void *)v75;
    uint64_t v35 = *(unsigned char *)(v75 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)v75, v35);
    specialized Environment.wrappedValue.getter();
    uint64_t v37 = v36;
    outlined consume of Environment<CGFloat>.Content(v34, v35);
    long long v32 = v37 + v37;
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v34, v35);
    specialized Environment.wrappedValue.getter();
    uint64_t v33 = v38;
    outlined consume of Environment<CGFloat>.Content(v34, v35);
    long long v31 = 0x4030000000000000;
  }
  uint64_t v39 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v10, (uint64_t)v13, &demangling cache variable for type metadata for ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<T);
  uint64_t v40 = &v13[*(int *)(v11 + 36)];
  os_unfair_lock_s *v40 = v39;
  *((double *)v40 + 1) = v32;
  *((void *)v40 + 2) = v31;
  *((void *)v40 + 3) = v33;
  *((void *)v40 + 4) = v31;
  v40[40] = 0;
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<T);
  char v41 = static SafeAreaRegions.all.getter();
  uint64_t v42 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayou);
  uint64_t v43 = &v15[*(int *)(v64 + 36)];
  *(void *)uint64_t v43 = v41;
  v43[8] = v42;
  outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayou);
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>,);
  outlined init with copy of FeatureEligibility?((uint64_t)v18, (uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>,);
  v20[*(int *)(v65 + 36)] = 0;
  outlined destroy of SystemUpdateNotice?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>,);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Color>);
  int v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1C376BA10;
  static Color.black.getter();
  unsigned int v45 = Color.opacity(_:)();
  swift_release();
  *(void *)(v44 + 32) = v45;
  static Color.black.getter();
  long long v46 = Color.opacity(_:)();
  swift_release();
  *(void *)(v44 + 40) = v46;
  static Color.black.getter();
  uint64_t v47 = Color.opacity(_:)();
  swift_release();
  *(void *)(v44 + 48) = v47;
  uint64_t v76 = v44;
  specialized Array._endMutation()();
  MEMORY[0x1C8772A50](v76);
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  long long v48 = v76;
  id v65 = v77;
  uint64_t v49 = v78;
  uint64_t v50 = v79;
  Swift::String v51 = static SafeAreaRegions.all.getter();
  LOBYTE(v47) = static Edge.Set.all.getter();
  Swift::String v52 = *(id *)(v66 + 8);
  uint64_t v53 = VideoMessagePlayerViewModel.playButtonOpacity.getter();

  uint64_t v54 = static Alignment.center.getter();
  uint64_t v56 = v55;
  outlined init with copy of FeatureEligibility?((uint64_t)v20, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _);
  id v57 = &v22[*(int *)(v70 + 36)];
  *(void *)id v57 = v48;
  *(_OWORD *)(v57 + 8) = v65;
  *((void *)v57 + 3) = v49;
  *((void *)v57 + 4) = v50;
  *((void *)v57 + 5) = v51;
  v57[48] = v47;
  *((double *)v57 + 7) = v53;
  *((void *)v57 + 8) = v54;
  *((void *)v57 + 9) = v56;
  outlined destroy of SystemUpdateNotice?((uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _);
  uint64_t v58 = v73;
  outlined init with copy of VideoMessageControlsView(v75, v73, (void (*)(void))type metadata accessor for VideoMessageControlsView);
  uint64_t v59 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  id v60 = swift_allocObject();
  outlined init with take of VideoMessageControlsView(v58, v60 + v59);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomC();
  uint64_t v61 = v67;
  View.onTapGesture(count:perform:)();
  swift_release();
  outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBotto);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v68 + 32))(v74, v61, v69);
}

uint64_t closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v67)(uint64_t *__return_ptr);
  void *v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  void *v130;
  uint64_t v131;
  int v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void v138[40];
  uint64_t v139;
  uint64_t v140;
  char v141;
  unsigned char v142[297];
  unsigned char v143[296];
  unsigned char v144[312];
  unsigned char v145[297];

  uint64_t v130 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v112 = (uint64_t *)((char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::Int v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>);
  MEMORY[0x1F4188790](v113);
  int v114 = (uint64_t)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v116 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v115);
  uint64_t v127 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>);
  MEMORY[0x1F4188790](v120);
  uint64_t v118 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v117 = (uint64_t)&v109 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v121 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  Swift::Int v119 = (uint64_t)&v109 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>);
  MEMORY[0x1F4188790](v122);
  Swift::Int v124 = (uint64_t)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v126 = (uint64_t)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  unint64_t v123 = (char *)&v109 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v131 = (uint64_t)&v109 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v129 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  long long v32 = (char *)&v109 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v128 = (char *)&v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v109 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v109 - v39;
  uint64_t v134 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, v143);
  uint64_t v41 = 1;
  v144[304] = 1;
  memcpy(&v144[7], v143, 0x122uLL);
  uint64_t v132 = 1;
  memcpy(v145, v144, sizeof(v145));
  uint64_t v136 = a1;
  uint64_t v137 = a2;
  uint64_t v125 = a2;
  uint64_t v135 = a1;
  specialized View.conditionallyStacked<A>(with:condition:)((void (*)(void))partial apply for closure #2 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (void (*)(__n128))partial apply for closure #3 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (uint64_t)v37);
  double v133 = v40;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v37, (uint64_t)v40, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  uint64_t v42 = type metadata accessor for VideoMessageControlsView(0);
  uint64_t v43 = a1 + *(int *)(v42 + 28);
  int v44 = *(void **)(v43 + 8);
  unsigned int v45 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v44) + 0xC0);
  long long v46 = v44;
  LODWORD(v45) = v45();

  if (v45 == 1)
  {
    uint64_t v110 = v43;
    uint64_t v111 = v32;
    *(void *)uint64_t v20 = static HorizontalAlignment.center.getter();
    *((void *)v20 + 1) = 0;
    v20[16] = 1;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
    closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, v125, &v20[*(int *)(v47 + 44)]);
    uint64_t v48 = static SafeAreaRegions.all.getter();
    char v49 = static Edge.Set.all.getter();
    uint64_t v50 = v124;
    outlined init with copy of FeatureEligibility?((uint64_t)v20, v124, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
    uint64_t v51 = v50 + *(int *)(v122 + 36);
    *(void *)uint64_t v51 = v48;
    *(unsigned char *)(v51 + 8) = v49;
    outlined destroy of SystemUpdateNotice?((uint64_t)v20, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>);
    static Alignment.center.getter();
    uint64_t v52 = (uint64_t)v123;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>);
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v52, v131, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    uint64_t v53 = *(void **)(a1 + *(int *)(v42 + 36));
    if (v53)
    {
      Swift::Int v124 = v42;
      id v54 = v53;
      uint64_t v55 = static HorizontalAlignment.center.getter();
      uint64_t v56 = (uint64_t)v112;
      *uint64_t v112 = v55;
      *(void *)(v56 + 8) = 0x4018000000000000;
      *(unsigned char *)(v56 + 16) = 0;
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
      closure #5 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, v54, (void *)(v56 + *(int *)(v57 + 44)));
      uint64_t v58 = static SafeAreaRegions.all.getter();
      char v59 = static Edge.Set.all.getter();
      uint64_t v60 = v114;
      outlined init with copy of FeatureEligibility?(v56, v114, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
      uint64_t v61 = v60 + *(int *)(v113 + 36);
      *(void *)uint64_t v61 = v58;
      *(unsigned char *)(v61 + 8) = v59;
      outlined destroy of SystemUpdateNotice?(v56, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>);
      static Alignment.center.getter();
      uint64_t v62 = (uint64_t)v116;
      specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
      outlined destroy of SystemUpdateNotice?(v60, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>);
      unsigned int v63 = static Edge.Set.bottom.getter();
      int v64 = MEMORY[0x1C8771D90](0);
      int v65 = MEMORY[0x1C8771D90]();
      if (MEMORY[0x1C8771D90](v65 & v63) != v63) {
        LOBYTE(v64) = MEMORY[0x1C8771D90](v64 | v63);
      }
      GeometryProxy.size.getter();
      id v66 = *(void **)(v110 + 8);
      id v67 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v66) + 0x120);
      id v68 = v66;
      v67(&v139);

      id v69 = 0.0;
      id v70 = v127;
      id v71 = v115;
      if (v139)
      {
        id v72 = *(void *)a1;
        Class v73 = *(unsigned char *)(a1 + 8);
        outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a1, v73);
        specialized Environment.wrappedValue.getter();
        outlined consume of Environment<CGFloat>.Content(v72, v73);
      }
      EdgeInsets.init(_all:)();
      uint64_t v75 = v74;
      uint64_t v77 = v76;
      uint64_t v79 = v78;
      uint64_t v81 = v80;
      outlined init with copy of FeatureEligibility?(v62, v70, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
      id v82 = v70 + *(int *)(v71 + 36);
      *(unsigned char *)id v82 = v64;
      *(void *)(v82 + 8) = v75;
      *(void *)(v82 + 16) = v77;
      *(void *)(v82 + 24) = v79;
      *(void *)(v82 + 32) = v81;
      *(unsigned char *)(v82 + 40) = 0;
      outlined destroy of SystemUpdateNotice?(v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
      uint64_t v83 = a1 + *(int *)(v124 + 32);
      long long v84 = *(unsigned char *)v83;
      long long v85 = *(void *)(v83 + 8);
      LOBYTE(v139) = v84;
      uint64_t v140 = v85;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
      State.wrappedValue.getter();
      uint64_t v86 = v128;
      uint64_t v87 = (uint64_t)v129;
      uint64_t v88 = (uint64_t)v121;
      if (LOBYTE(v138[0]) == 1)
      {
        id v89 = *(id *)(v110 + 8);
        id v69 = VideoMessagePlayerViewModel.sendButtonOpacity.getter();

        id v54 = v89;
      }

      uint64_t v90 = v127;
      uint64_t v91 = v118;
      outlined init with copy of FeatureEligibility?(v127, v118, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>);
      uint64_t v92 = v120;
      *(double *)(v91 + *(int *)(v120 + 36)) = v69;
      outlined destroy of SystemUpdateNotice?(v90, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>);
      uint64_t v93 = v117;
      outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v91, v117, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>);
      char v94 = v93;
      id v95 = v119;
      outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v94, v119, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>);
      uint64_t v41 = 0;
      unint64_t v96 = (uint64_t)v86;
      uint64_t v97 = v130;
    }
    else
    {
      uint64_t v87 = (uint64_t)v129;
      uint64_t v97 = v130;
      unint64_t v96 = (uint64_t)v128;
      uint64_t v92 = v120;
      uint64_t v88 = (uint64_t)v121;
      id v95 = v119;
    }
    __swift_storeEnumTagSinglePayload(v95, v41, 1, v92);
    uint64_t v100 = v131;
    id v101 = v126;
    outlined init with copy of FeatureEligibility?(v131, v126, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    outlined init with copy of FeatureEligibility?(v95, v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined init with copy of FeatureEligibility?(v101, v87, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    id v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalConten);
    outlined init with copy of FeatureEligibility?(v88, v87 + *(int *)(v102 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined destroy of SystemUpdateNotice?(v95, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined destroy of SystemUpdateNotice?(v100, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    outlined destroy of SystemUpdateNotice?(v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, _PaddingLayout>, _OpacityEffect>?);
    outlined destroy of SystemUpdateNotice?(v101, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>);
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
    __swift_storeEnumTagSinglePayload(v87, 0, 1, v103);
    unint64_t v99 = (uint64_t)v111;
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v87, (uint64_t)v111, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  }
  else
  {
    id v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 1, 1, v98);
    uint64_t v87 = (uint64_t)v129;
    uint64_t v97 = v130;
    unint64_t v96 = (uint64_t)v128;
    unint64_t v99 = (uint64_t)v32;
  }
  uint64_t v104 = (uint64_t)v133;
  uint64_t v105 = v134;
  int v106 = v132;
  outlined init with copy of FeatureEligibility?((uint64_t)v133, v96, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  outlined init with copy of FeatureEligibility?(v99, v87, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  v138[0] = v105;
  v138[1] = 0;
  LOBYTE(v138[2]) = v106;
  memcpy((char *)&v138[2] + 1, v145, 0x129uLL);
  memcpy(v97, v138, 0x13AuLL);
  id v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>, _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer,);
  outlined init with copy of FeatureEligibility?(v96, (uint64_t)v97 + *(int *)(v107 + 48), &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  outlined init with copy of FeatureEligibility?(v87, (uint64_t)v97 + *(int *)(v107 + 64), &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  outlined retain of VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>((uint64_t)v138);
  outlined retain of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>((uint64_t)v143);
  outlined destroy of SystemUpdateNotice?(v99, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  outlined destroy of SystemUpdateNotice?(v104, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  outlined retain of _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>((uint64_t)v143);
  outlined destroy of SystemUpdateNotice?(v87, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer)>>, _SafeAreaRegionsIgnoringLayout>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_Conditi);
  outlined destroy of SystemUpdateNotice?(v96, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>);
  uint64_t v139 = v105;
  uint64_t v140 = 0;
  uint64_t v141 = v106;
  memcpy(v142, v145, sizeof(v142));
  return outlined retain of VStack<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>>((uint64_t)&v139);
}

void *closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v6)(void *__return_ptr);
  void *v7;
  void *v8;
  double v9;
  double v10;
  uint64_t KeyPath;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char v24;
  char v25;
  char v26;
  unsigned char v27[290];
  unsigned char v28[144];
  void v29[18];
  char v30;
  unsigned char v31[280];
  void v32[35];
  char v33;
  unsigned char v34[280];
  void v35[35];
  void __src[36];
  char v37;
  void __dst[21];
  void v39[37];

  uint64_t v4 = a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28);
  uint64_t v5 = *(void **)(v4 + 8);
  uint64_t v6 = *(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x120);
  uint64_t v7 = v5;
  v6(v39);

  if (LOBYTE(v39[0]) == 1 && static Platform.current.getter() != 1)
  {
    uint64_t v19 = static VerticalAlignment.center.getter();
    closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(a1, (uint64_t)v28);
    uint64_t v30 = 1;
    memcpy((char *)v29 + 7, v28, 0x89uLL);
    __dst[0] = v19;
    __dst[1] = 0;
    LOBYTE(__dst[2]) = 1;
    memcpy((char *)&__dst[2] + 1, v29, 0x90uLL);
    uint64_t v20 = static Alignment.center.getter();
    uint64_t v26 = 1;
    uint64_t v24 = 1;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v39, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v24, 0, v26, v20, v21);
    outlined release of TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>((uint64_t)v28);
    memcpy(v31, v39, sizeof(v31));
    memcpy(v35, v31, sizeof(v35));
    memcpy(v32, v31, sizeof(v32));
    memcpy(v34, v31, sizeof(v34));
    uint64_t v33 = 1;
    outlined retain of HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>((uint64_t)v32);
    outlined retain of HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>((uint64_t)v31);
    outlined release of ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>((uint64_t)v35);
    memcpy(__src, v34, 0x118uLL);
    __src[35] = 0;
    uint64_t v37 = 1;
    _s7SwiftUI19_ConditionalContentV7StorageOyAA9TupleViewVyAA08ModifiedD0VyAIyACyACyAIy15ConversationKit020VideoMessageControlsG0V03TopmG033_B419541366E265736F7249488C40E55CLLVAA14_PaddingLayoutVGARGARGAA010_FlexFrameU0VGAA14_OpacityEffectVG_AA6SpacerVtGAGyAIyAA6HStackVyAGyA0__AIyAIyAJ18AnimatedSaveButtonVAA01_wU0VGAQGtGGAVG_A0_tG_GWOi0_((uint64_t)__src);
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)__src, (uint64_t)v39, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    _ConditionalContent<>.init(storage:)();
    outlined release of ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>((uint64_t)v31);
  }
  else
  {
    uint64_t v8 = v7;
    GeometryProxy.size.getter();
    uint64_t v10 = v9 * 0.36;
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    uint64_t v12 = ObservedObject.init(wrappedValue:)();
    uint64_t v14 = v13;
    v29[0] = KeyPath;
    LOBYTE(v29[1]) = 0;
    _OWORD v29[2] = v12;
    _OWORD v29[3] = v13;
    *(double *)&v29[4] = v10;
    VideoMessageControlsView.TopControlsView.iPadPadded(using:)((uint64_t)__src);

    swift_release();
    memcpy(__dst, __src, 0x53uLL);
    uint64_t v15 = static Alignment.center.getter();
    uint64_t v25 = 1;
    uint64_t v23 = 1;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v39, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v23, 0, v25, v15, v16);
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)__dst);
    memcpy(v31, v39, 0xC8uLL);
    uint64_t v17 = *(id *)(v4 + 8);
    uint64_t v18 = VideoMessagePlayerViewModel.topControlsOpacity.getter();

    memcpy(v35, v31, 0xC8uLL);
    memcpy(v32, v31, 0xC8uLL);
    *(double *)&v32[25] = v18;
    memcpy(v34, v32, 0xD0uLL);
    v28[0] = 1;
    *(double *)&v35[25] = v18;
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v32);
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v31);
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v35);
    memcpy(__src, v34, 0xD0uLL);
    __src[26] = 0;
    LOBYTE(__src[27]) = 1;
    _s7SwiftUI19_ConditionalContentV7StorageOyAA9TupleViewVyAA08ModifiedD0VyAIyACyACyAIy15ConversationKit020VideoMessageControlsG0V03TopmG033_B419541366E265736F7249488C40E55CLLVAA14_PaddingLayoutVGARGARGAA010_FlexFrameU0VGAA14_OpacityEffectVG_AA6SpacerVtGAGyAIyAA6HStackVyAGyA0__AIyAIyAJ18AnimatedSaveButtonVAA01_wU0VGAQGtGGAVG_A0_tG_GWOi_((uint64_t)__src);
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)__src, (uint64_t)v39, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>, TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>>.Storage);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, _FlexFrameLayout>, _OpacityEffect>, Spacer)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>, _FlexFrameLayout>, Spacer)>);
    _ConditionalContent<>.init(storage:)();
    outlined release of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>((uint64_t)v31);
  }
  memcpy(v39, v27, 0x122uLL);
  return memcpy(a2, v39, 0x122uLL);
}

double VideoMessageControlsView.TopControlsView.iPadPadded(using:)@<D0>(uint64_t a1@<X8>)
{
  void (*v7)(_OWORD *__return_ptr);
  id v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t (*v12)(void);
  id v13;
  double result;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  __int16 v19;
  char v20;
  _OWORD v21[5];
  __int16 v22;
  char v23;
  uint64_t v24;
  char v25;
  _OWORD v26[2];

  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1 + 2;
  char v6 = v1[1] & 1;
  if (static Platform.current.getter() == 1)
  {
    v26[0] = *v5;
    uint64_t v7 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **((void **)&v26[0] + 1)) + 0x120);
    uint64_t v8 = *((id *)&v26[0] + 1);
    v7(v21);
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)v26);
    if (v21[0])
    {
      GeometryProxy.safeAreaInsets.getter();
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      GeometryProxy.safeAreaInsets.getter();
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      GeometryProxy.safeAreaInsets.getter();
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
    }
    else
    {
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      outlined consume of Environment<CGFloat>.Content(v4, v6);
      outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
      specialized Environment.wrappedValue.getter();
      specialized Environment.wrappedValue.getter();
    }
    specialized Environment.wrappedValue.getter();
    outlined consume of Environment<CGFloat>.Content(v4, v6);
    static Edge.Set.all.getter();
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>((uint64_t)v26);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v6);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v9 = static Edge.Set.top.getter();
    uint64_t v10 = MEMORY[0x1C8771D90](0);
    uint64_t v11 = MEMORY[0x1C8771D90]();
    if (MEMORY[0x1C8771D90](v11 & v9) != v9) {
      MEMORY[0x1C8771D90](v10 | v9);
    }
    GeometryProxy.safeAreaInsets.getter();
    v26[0] = *v5;
    uint64_t v12 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **((void **)&v26[0] + 1)) + 0xC0);
    uint64_t v13 = *((id *)&v26[0] + 1);
    v12();
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)v26);
    EdgeInsets.init(_all:)();
    uint64_t v24 = *v2;
    uint64_t v25 = *((unsigned char *)v2 + 8);
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>((uint64_t)v26);
    outlined retain of Environment<CGFloat>((uint64_t)&v24);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type VideoMessageControlsView.TopControlsView and conformance VideoMessageControlsView.TopControlsView);
  _ConditionalContent<>.init(storage:)();
  uint64_t result = *(double *)v21;
  uint64_t v15 = v21[1];
  uint64_t v16 = v21[2];
  uint64_t v17 = v21[3];
  uint64_t v18 = v21[4];
  uint64_t v19 = v22;
  uint64_t v20 = v23;
  *(_OWORD *)a1 = v21[0];
  *(_OWORD *)(a1 + 16) = v15;
  *(_OWORD *)(a1 + 32) = v16;
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = v18;
  *(_WORD *)(a1 + 80) = v19;
  *(unsigned char *)(a1 + 82) = v20;
  return result;
}

double VideoMessagePlayerViewModel.topControlsOpacity.getter()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  if (!(*(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))()) {
    return 1.0;
  }
  char v2 = (*(uint64_t (**)(void))((*v1 & *v0) + 0xF0))();
  double result = 1.0;
  if (!v2) {
    return 0.0;
  }
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(void **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  id v3 = v2;
  uint64_t v4 = ObservedObject.init(wrappedValue:)();
  uint64_t v6 = v5;
  State.init(wrappedValue:)();
  char v7 = v19[0];
  uint64_t v8 = v19[1];
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v10 = static Edge.Set.all.getter();
  __src[0] = v4;
  __src[1] = v6;
  LOBYTE(__src[2]) = v19[0];
  __src[3] = v19[1];
  __src[4] = v12;
  LOBYTE(__src[5]) = v13;
  __src[6] = v14;
  LOBYTE(__src[7]) = v15;
  __src[8] = v16;
  __src[9] = v17;
  LOBYTE(__src[10]) = v10;
  __src[11] = 0x404D000000000000;
  __src[12] = 0;
  __src[13] = 0;
  __src[14] = 0x402A000000000000;
  LOBYTE(__src[15]) = 0;
  char v20 = 1;
  memcpy((char *)v19 + 7, __src, 0x79uLL);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  memcpy((void *)(a2 + 9), v19, 0x80uLL);
  v21[0] = v4;
  v21[1] = v6;
  char v22 = v7;
  uint64_t v23 = v8;
  uint64_t v24 = v12;
  char v25 = v13;
  uint64_t v26 = v14;
  char v27 = v15;
  uint64_t v28 = v16;
  uint64_t v29 = v17;
  char v30 = v10;
  uint64_t v31 = 0x404D000000000000;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0x402A000000000000;
  char v35 = 0;
  outlined retain of ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>((uint64_t)__src);
  return outlined release of ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>((uint64_t)v21);
}

uint64_t AnimatedSaveButton.init(videoMessageViewModel:showsTitle:)()
{
  return OUTLINED_FUNCTION_41_0();
}

uint64_t closure #2 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  void (*v44)(void *__return_ptr);
  void *v45;
  void *v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  int v51;
  int v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  double v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  unsigned __int8 (*v93)(void);
  void *v94;
  double v95;
  uint64_t v96;
  void *v97;
  unsigned __int8 (*v98)(void);
  void *v99;
  BOOL v100;
  uint64_t KeyPath;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  id v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  char *v132;
  char v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  void v165[30];
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;

  uint64_t v163 = a3;
  uint64_t v164 = a2;
  uint64_t v4 = type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v144 = (uint64_t)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v156 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  uint64_t v138 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1F4188790](v153);
  uint64_t v140 = (uint64_t)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v157 = (uint64_t)&v136 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v137 = (uint64_t)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v142 = (uint64_t)&v136 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v139 = (char *)&v136 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v141 = (uint64_t)&v136 - v17;
  MEMORY[0x1F4188790](v18);
  char v154 = (uint64_t)&v136 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v155 = (uint64_t)&v136 - v21;
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>.Storage);
  MEMORY[0x1F4188790](v162);
  uint64_t v158 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  MEMORY[0x1F4188790](v23 - 8);
  char v25 = (uint64_t *)((char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (uint64_t *)((char *)&v136 - v27);
  uint64_t v29 = (int *)type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v136 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
  MEMORY[0x1F4188790](v146);
  id v150 = (uint64_t)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1F4188790](v147);
  uint64_t v151 = (char *)&v136 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  MEMORY[0x1F4188790](v160);
  uint64_t v148 = (uint64_t)&v136 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  char v152 = (uint64_t)&v136 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v161 = (char *)&v136 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v159 = (char *)&v136 - v40;
  uint64_t v41 = v4;
  uint64_t v42 = a1;
  char v145 = a1 + *(int *)(v4 + 28);
  uint64_t v43 = *(void **)(v145 + 8);
  int v44 = *(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v43) + 0x120);
  unsigned int v45 = v43;
  v44(v165);

  if (v165[0])
  {
    uint64_t v143 = v41;
    char v152 = v42;
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    long long v46 = v45;
    uint64_t v147 = ObservedObject.init(wrappedValue:)();
    uint64_t v151 = (char *)v47;
    uint64_t v48 = static Edge.Set.leading.getter();
    char v49 = static Edge.Set.trailing.getter();
    uint64_t v50 = MEMORY[0x1C8771D90](0);
    uint64_t v51 = MEMORY[0x1C8771D90]();
    if (MEMORY[0x1C8771D90](v51 & v48) != v48) {
      uint64_t v50 = MEMORY[0x1C8771D90](v50 | v48);
    }
    uint64_t v52 = MEMORY[0x1C8771D90](v50);
    uint64_t v53 = MEMORY[0x1C8771D90](v52 & v49);
    uint64_t v55 = v152;
    id v54 = v153;
    uint64_t v57 = v155;
    uint64_t v56 = v156;
    uint64_t v58 = v154;
    if (v53 != v49) {
      LODWORD(v50) = MEMORY[0x1C8771D90](v50 | v49);
    }
    LODWORD(v150) = v50;
    EdgeInsets.init(_all:)();
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    int v64 = v63;
    id v66 = v65;
    id v67 = static Edge.Set.bottom.getter();
    id v68 = MEMORY[0x1C8771D90](0);
    id v69 = MEMORY[0x1C8771D90]();
    if (MEMORY[0x1C8771D90](v69 & v67) != v67) {
      id v68 = MEMORY[0x1C8771D90](v68 | v67);
    }
    LODWORD(v148) = v68;
    VideoMessageControlsView.buttonBottomPaddingDivisor.getter();
    GeometryProxy.size.getter();
    EdgeInsets.init(_all:)();
    id v71 = v70;
    Class v73 = v72;
    uint64_t v75 = v74;
    uint64_t v77 = v76;
    specialized Environment.wrappedValue.getter();
    uint64_t v78 = *MEMORY[0x1E4F3DA58];
    uint64_t v79 = v149;
    uint64_t v164 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104);
    v164(v58, v78, v149);
    __swift_storeEnumTagSinglePayload(v58, 0, 1, v79);
    uint64_t v80 = *(int *)(v54 + 48);
    uint64_t v81 = v157;
    id v82 = v157 + v80;
    outlined init with copy of FeatureEligibility?(v57, v157, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined init with copy of FeatureEligibility?(v58, v82, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v81, 1, v79) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v58, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      uint64_t v81 = v157;
      outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v82, 1, v79) == 1)
      {
        outlined destroy of SystemUpdateNotice?(v81, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        uint64_t v83 = v55;
        long long v84 = v144;
        outlined init with copy of VideoMessageControlsView(v83, v144, (void (*)(void))type metadata accessor for VideoMessageControlsView);
LABEL_20:
        uint64_t v118 = (uint64_t)v139;
        specialized Environment.wrappedValue.getter();
        Swift::Int v119 = v142;
        v164(v142, v78, v79);
        __swift_storeEnumTagSinglePayload(v119, 0, 1, v79);
        unsigned int v120 = v140;
        uint64_t v121 = v140 + *(int *)(v153 + 48);
        outlined init with copy of FeatureEligibility?(v118, v140, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined init with copy of FeatureEligibility?(v119, v121, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        if (__swift_getEnumTagSinglePayload(v120, 1, v79) == 1)
        {
          outlined destroy of SystemUpdateNotice?(v119, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          outlined destroy of SystemUpdateNotice?(v118, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          _s7SwiftUI7CapsuleVWOhTm_0(v84, (void (*)(void))type metadata accessor for VideoMessageControlsView);
          if (__swift_getEnumTagSinglePayload(v121, 1, v79) == 1)
          {
            outlined destroy of SystemUpdateNotice?(v120, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            uint64_t v110 = v163;
            Swift::Int v122 = v158;
            uint64_t v109 = (uint64_t)v159;
            uint64_t v111 = (uint64_t)v161;
            unint64_t v123 = v147;
LABEL_30:
            uint64_t v125 = *(void *)(v152 + *(int *)(v143 + 44));
            goto LABEL_27;
          }
        }
        else
        {
          Swift::Int v124 = v137;
          outlined init with copy of FeatureEligibility?(v120, v137, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          if (__swift_getEnumTagSinglePayload(v121, 1, v79) != 1)
          {
            uint64_t v131 = v156;
            uint64_t v132 = v138;
            (*(void (**)(char *, uint64_t, uint64_t))(v156 + 32))(v138, v121, v79);
            lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
            double v133 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v134 = v118;
            uint64_t v135 = *(void (**)(char *, uint64_t))(v131 + 8);
            v135(v132, v79);
            outlined destroy of SystemUpdateNotice?(v142, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            outlined destroy of SystemUpdateNotice?(v134, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            _s7SwiftUI7CapsuleVWOhTm_0(v84, (void (*)(void))type metadata accessor for VideoMessageControlsView);
            v135((char *)v124, v79);
            outlined destroy of SystemUpdateNotice?(v120, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
            uint64_t v110 = v163;
            Swift::Int v122 = v158;
            uint64_t v109 = (uint64_t)v159;
            uint64_t v111 = (uint64_t)v161;
            unint64_t v123 = v147;
            if ((v133 & 1) == 0)
            {
              uint64_t v125 = 0x7FF0000000000000;
              goto LABEL_27;
            }
            goto LABEL_30;
          }
          outlined destroy of SystemUpdateNotice?(v142, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          outlined destroy of SystemUpdateNotice?(v118, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          _s7SwiftUI7CapsuleVWOhTm_0(v84, (void (*)(void))type metadata accessor for VideoMessageControlsView);
          (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v124, v79);
        }
        outlined destroy of SystemUpdateNotice?(v120, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
LABEL_26:
        uint64_t v125 = 0x7FF0000000000000;
        uint64_t v110 = v163;
        Swift::Int v122 = v158;
        uint64_t v109 = (uint64_t)v159;
        uint64_t v111 = (uint64_t)v161;
        unint64_t v123 = v147;
LABEL_27:
        uint64_t v126 = v151;
        v165[28] = v123;
        v165[29] = v151;
        uint64_t v166 = v150;
        uint64_t v167 = v60;
        uint64_t v168 = v62;
        uint64_t v169 = v64;
        id v170 = v66;
        char v171 = 0;
        uint64_t v172 = v148;
        id v173 = v71;
        uint64_t v174 = v73;
        uint64_t v175 = v75;
        id v176 = v77;
        char v177 = 0;
        uint64_t v127 = static Alignment.center.getter();
        specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v165, 0, 1, 0, 1, v125, 0, 0, 1, 0, 1, 0, 1, v127, v128);

        memcpy(v122, v165, 0xE0uLL);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>);
        lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
        lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
        _ConditionalContent<>.init(storage:)();
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v112 = v141;
      outlined init with copy of FeatureEligibility?(v81, v141, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v82, 1, v79) != 1)
      {
        int v114 = v156;
        uint64_t v115 = v138;
        (*(void (**)(char *, uint64_t, uint64_t))(v156 + 32))(v138, v82, v79);
        lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
        uint64_t v116 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v117 = *(void (**)(char *, uint64_t))(v114 + 8);
        v117(v115, v79);
        outlined destroy of SystemUpdateNotice?(v154, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined destroy of SystemUpdateNotice?(v155, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        v117((char *)v112, v79);
        outlined destroy of SystemUpdateNotice?(v157, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        long long v84 = v144;
        outlined init with copy of VideoMessageControlsView(v152, v144, (void (*)(void))type metadata accessor for VideoMessageControlsView);
        if (v116) {
          goto LABEL_20;
        }
LABEL_18:
        _s7SwiftUI7CapsuleVWOhTm_0(v84, (void (*)(void))type metadata accessor for VideoMessageControlsView);
        goto LABEL_26;
      }
      outlined destroy of SystemUpdateNotice?(v154, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of SystemUpdateNotice?(v155, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v112, v79);
    }
    outlined destroy of SystemUpdateNotice?(v81, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    Swift::Int v113 = v55;
    long long v84 = v144;
    outlined init with copy of VideoMessageControlsView(v113, v144, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    goto LABEL_18;
  }
  long long v85 = v45;
  uint64_t v86 = VideoMessageControlsView.buttonBottomPaddingDivisor.getter();
  GeometryProxy.size.getter();
  uint64_t v88 = v87 - (1.0 - v86) * v87 + -16.0;
  *uint64_t v28 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *char v25 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  *(void *)uint64_t v31 = ObservedObject.init(wrappedValue:)();
  *((void *)v31 + 1) = v89;
  *((void *)v31 + 2) = swift_getKeyPath();
  v31[24] = 0;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v28, (uint64_t)&v31[v29[6]], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v25, (uint64_t)&v31[v29[7]], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  *(double *)&v31[v29[8]] = v88;
  uint64_t v90 = v145;
  uint64_t v91 = *(void **)(v145 + 8);
  uint64_t v92 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v93 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v91) + 0xF0);
  char v94 = v91;
  LODWORD(v93) = v93();

  if (v93 == 4) {
    id v95 = 0.1;
  }
  else {
    id v95 = 1.0;
  }
  unint64_t v96 = v150;
  outlined init with copy of VideoMessageControlsView((uint64_t)v31, v150, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  *(double *)(v96 + *(int *)(v146 + 36)) = v95;
  _s7SwiftUI7CapsuleVWOhTm_0((uint64_t)v31, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  uint64_t v97 = *(void **)(v90 + 8);
  id v98 = *(unsigned __int8 (**)(void))((*v92 & *v97) + 0xF0);
  unint64_t v99 = v97;
  LODWORD(v98) = v98();

  uint64_t v100 = v98 == 4;
  uint64_t KeyPath = swift_getKeyPath();
  id v102 = swift_allocObject();
  *(unsigned char *)(v102 + 16) = v100;
  uint64_t v103 = (uint64_t)v151;
  outlined init with copy of FeatureEligibility?(v96, (uint64_t)v151, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
  uint64_t v104 = (uint64_t *)(v103 + *(int *)(v147 + 36));
  *uint64_t v104 = KeyPath;
  v104[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v104[2] = v102;
  outlined destroy of SystemUpdateNotice?(v96, &demangling cache variable for type metadata for ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>);
  uint64_t v105 = *(id *)(v90 + 8);
  int v106 = VideoMessagePlayerViewModel.sendButtonOpacity.getter();

  id v107 = v148;
  outlined init with copy of FeatureEligibility?(v103, v148, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
  *(double *)(v107 + *(int *)(v160 + 36)) = v106;
  outlined destroy of SystemUpdateNotice?(v103, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
  uint64_t v108 = v152;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v107, v152, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  outlined init with copy of FeatureEligibility?(v108, (uint64_t)v158, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  uint64_t v109 = (uint64_t)v159;
  _ConditionalContent<>.init(storage:)();
  outlined destroy of SystemUpdateNotice?(v108, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>);
  uint64_t v110 = v163;
  uint64_t v111 = (uint64_t)v161;
LABEL_28:
  outlined init with copy of FeatureEligibility?(v109, v111, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  *(void *)uint64_t v110 = 0;
  *(unsigned char *)(v110 + 8) = 1;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>));
  outlined init with copy of FeatureEligibility?(v111, v110 + *(int *)(v129 + 48), &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  outlined destroy of SystemUpdateNotice?(v109, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
  return outlined destroy of SystemUpdateNotice?(v111, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>);
}

BOOL closure #3 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  void (*v50)(uint64_t *__return_ptr);
  void *v51;
  char *v52;
  char *v53;
  void (*v54)(uint64_t, void, uint64_t);
  unsigned int v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;

  uint64_t v2 = type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1F4188790](v2);
  int v64 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v63 = (uint64_t)&v52 - v5;
  uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1F4188790](v9);
  uint64_t v58 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v52 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v60 = (uint64_t)&v52 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v57 = (char *)&v52 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v52 - v21;
  MEMORY[0x1F4188790](v23);
  char v25 = (char *)&v52 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v52 - v27;
  char v59 = v2;
  specialized Environment.wrappedValue.getter();
  unsigned int v29 = *MEMORY[0x1E4F3DA58];
  uint64_t v61 = v7;
  uint64_t v30 = *(void (**)(void))(v7 + 104);
  uint64_t v55 = v29;
  id v54 = (void (*)(uint64_t, void, uint64_t))v30;
  v30(v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v6);
  uint64_t v56 = v9;
  uint64_t v31 = (uint64_t)&v13[*(int *)(v9 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v28, (uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v25, v31, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v31, 1, v6);
    uint64_t v33 = (uint64_t)v64;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      uint64_t v34 = v63;
      outlined init with copy of VideoMessageControlsView(a1, v63, (void (*)(void))type metadata accessor for VideoMessageControlsView);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v62 = a1;
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v31, 1, v6) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v6);
    uint64_t v33 = (uint64_t)v64;
    a1 = v62;
LABEL_6:
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    uint64_t v34 = v63;
    outlined init with copy of VideoMessageControlsView(a1, v63, (void (*)(void))type metadata accessor for VideoMessageControlsView);
LABEL_11:
    _s7SwiftUI7CapsuleVWOhTm_0(v34, (void (*)(void))type metadata accessor for VideoMessageControlsView);
LABEL_15:
    outlined init with copy of VideoMessageControlsView(a1, v33, (void (*)(void))type metadata accessor for VideoMessageControlsView);
LABEL_16:
    _s7SwiftUI7CapsuleVWOhTm_0(v33, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    return 1;
  }
  uint64_t v35 = v61;
  uint64_t v36 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v53, v31, v6);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
  char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v36, v6);
  outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v38(v22, v6);
  outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  a1 = v62;
  uint64_t v34 = v63;
  outlined init with copy of VideoMessageControlsView(v62, v63, (void (*)(void))type metadata accessor for VideoMessageControlsView);
  uint64_t v33 = (uint64_t)v64;
  if ((v37 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v62 = a1;
  uint64_t v39 = v59;
  uint64_t v40 = (uint64_t)v57;
  specialized Environment.wrappedValue.getter();
  uint64_t v41 = v60;
  v54(v60, v55, v6);
  __swift_storeEnumTagSinglePayload(v41, 0, 1, v6);
  uint64_t v42 = v58;
  uint64_t v43 = v58 + *(int *)(v56 + 48);
  outlined init with copy of FeatureEligibility?(v40, v58, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v41, v43, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v42, 1, v6) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v41, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    _s7SwiftUI7CapsuleVWOhTm_0(v34, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    if (__swift_getEnumTagSinglePayload(v43, 1, v6) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined init with copy of VideoMessageControlsView(v62, v33, (void (*)(void))type metadata accessor for VideoMessageControlsView);
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  uint64_t v44 = (uint64_t)v52;
  outlined init with copy of FeatureEligibility?(v42, (uint64_t)v52, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v43, 1, v6) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v41, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    _s7SwiftUI7CapsuleVWOhTm_0(v34, (void (*)(void))type metadata accessor for VideoMessageControlsView);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v44, v6);
LABEL_14:
    outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    a1 = v62;
    goto LABEL_15;
  }
  uint64_t v46 = v61;
  uint64_t v47 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v53, v43, v6);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
  LODWORD(v64) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
  v48(v47, v6);
  outlined destroy of SystemUpdateNotice?(v60, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  _s7SwiftUI7CapsuleVWOhTm_0(v34, (void (*)(void))type metadata accessor for VideoMessageControlsView);
  v48(v52, v6);
  outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of VideoMessageControlsView(v62, v33, (void (*)(void))type metadata accessor for VideoMessageControlsView);
  if ((v64 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_20:
  char v49 = *(void **)(v33 + *(int *)(v39 + 28) + 8);
  uint64_t v50 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v49) + 0x120);
  uint64_t v51 = v49;
  v50(&v65);

  _s7SwiftUI7CapsuleVWOhTm_0(v33, (void (*)(void))type metadata accessor for VideoMessageControlsView);
  return (v65 & 1) != 0;
}

uint64_t specialized View.conditionallyStacked<A>(with:condition:)@<X0>(void (*a1)(void)@<X0>, void (*a2)(__n128)@<X2>, uint64_t a3@<X8>)
{
  v19[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>, VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>>.Storage);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v12);
  int v15 = Axis.rawValue.getter();
  if (v15 == Axis.rawValue.getter())
  {
    *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
    *((void *)v14 + 1) = 0;
    v14[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    a1();
    uint64_t v16 = &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>;
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v10, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    _ConditionalContent<>.init(storage:)();
    uint64_t v17 = (uint64_t)v14;
  }
  else
  {
    *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
    *((void *)v7 + 1) = 0;
    v7[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    a1();
    uint64_t v16 = &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>;
    outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v10, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.LocalBottomControlsView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>, _FlexFrameLayout>>)>>);
    _ConditionalContent<>.init(storage:)();
    uint64_t v17 = (uint64_t)v7;
  }
  return outlined destroy of SystemUpdateNotice?(v17, v16);
}

uint64_t closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v36 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for VideoMessageControlsView(0);
  uint64_t v11 = a1 + *(int *)(v10 + 28);
  __n128 v12 = *(void **)(v11 + 8);
  uint64_t v13 = (char *)(a1 + *(int *)(v10 + 32));
  char v14 = *v13;
  uint64_t v15 = *((void *)v13 + 1);
  char v41 = v14;
  uint64_t v42 = v15;
  id v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  uint64_t v17 = v43;
  uint64_t v34 = v44;
  int v35 = v45;
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  uint64_t v19 = ObservedObject.init(wrappedValue:)();
  uint64_t v21 = v20;
  uint64_t v22 = *(id *)(v11 + 8);
  double v23 = VideoMessagePlayerViewModel.playButtonOpacity.getter();

  uint64_t v24 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v22) + 0xF0);
  char v25 = v22;
  LODWORD(v24) = v24();

  LOBYTE(v25) = v24 == 4;
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = (_BYTE)v25;
  uint64_t v43 = KeyPath;
  LOBYTE(v44) = 0;
  uint64_t v45 = v19;
  uint64_t v46 = v21;
  uint64_t v47 = v17;
  uint64_t v48 = v34;
  char v49 = v35;
  double v50 = v23;
  uint64_t v51 = v26;
  uint64_t v52 = closure #1 in View.disabled(_:)partial apply;
  uint64_t v53 = v27;
  uint64_t v40 = v37;
  uint64_t v28 = static VerticalAlignment.bottom.getter();
  uint64_t v38 = a1;
  specialized View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)((void (*)(void))partial apply for closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (uint64_t)v39, v28, 0, 1, (uint64_t)partial apply for implicit closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter, (uint64_t)v9, 12.0);
  outlined consume of Environment<CGFloat>.Content(KeyPath, 0);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v6, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  unsigned int v29 = v36;
  void *v36 = 0;
  *((unsigned char *)v29 + 8) = 1;
  uint64_t v30 = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>, Spacer));
  outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v30 + *(int *)(v31 + 48), &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  uint64_t v32 = (uint64_t)v30 + *(int *)(v31 + 64);
  *(void *)uint64_t v32 = 0;
  *(unsigned char *)(v32 + 8) = 1;
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
  return outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>);
}

double VideoMessagePlayerViewModel.playButtonOpacity.getter()
{
  unsigned __int8 v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))() - 1;
  double result = 0.0;
  if (v1 <= 3u) {
    return dbl_1C3784AD0[(char)v1];
  }
  return result;
}

uint64_t closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>)
      - 8;
  MEMORY[0x1F4188790](v32);
  uint64_t v3 = (uint64_t *)&v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = objc_msgSend(self, sel_conversationKit);
  v38._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001C37B12B0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000023;
  v13.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v13.value._object = (void *)0xEF74694B6E6F6974;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v38._uint64_t countAndFlagsBits = 0;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v38);

  Swift::String v35 = v15;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  int v31 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v24 = swift_getKeyPath();
  MEMORY[0x1C8772A80]();
  uint64_t v25 = type metadata accessor for Material();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v25);
  outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v3 + *(int *)(v32 + 36), &demangling cache variable for type metadata for Material?);
  *uint64_t v3 = v24;
  outlined init with copy of FeatureEligibility?((uint64_t)v3, (uint64_t)&v10[*(int *)(v8 + 44)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
  *(void *)uint64_t v10 = v16;
  *((void *)v10 + 1) = v18;
  v10[16] = v22;
  *((void *)v10 + 3) = v20;
  *((void *)v10 + 4) = KeyPath;
  *((void *)v10 + 5) = 1;
  v10[48] = 0;
  *((_DWORD *)v10 + 13) = v31;
  outlined copy of Text.Storage(v16, v18, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
  outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Material?);
  outlined consume of Text.Storage(v16, v18, v22);
  swift_release();
  swift_bridgeObjectRelease();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v26 = v34;
  outlined init with copy of FeatureEligibility?((uint64_t)v10, v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
  uint64_t v27 = (Swift::String *)(v26
                        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>)
                                 + 36));
  Swift::String v28 = v36;
  *uint64_t v27 = v35;
  v27[1] = v28;
  v27[2] = v37;
  return outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
}

uint64_t implicit closure #1 in closure #4 in closure #1 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  unsigned __int8 v1 = *(void **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  uint64_t v2 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x270);
  uint64_t v3 = v1;
  char v4 = v2();

  return v4 & 1;
}

uint64_t specialized View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v45 = a4;
  uint64_t v47 = a7;
  uint64_t v48 = a6;
  int v43 = a5;
  uint64_t v44 = a3;
  char v41 = a1;
  uint64_t v42 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v40 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>);
  MEMORY[0x1F4188790](v11);
  Swift::String_optional v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  char v22 = (char *)v38 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>>.Storage);
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((uint64_t (*)(__n128))v48)(v24))
  {
    v38[0] = (uint64_t)v22;
    v38[1] = v23;
    uint64_t v39 = v11;
    uint64_t v27 = v40;
    Swift::String v28 = v41;
    uint64_t v48 = v17;
    if (v43) {
      uint64_t v45 = static HorizontalAlignment.center.getter();
    }
    uint64_t v29 = (uint64_t)v27;
    v28();
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v44;
    *(void *)(v30 + 16) = v44;
    *(double *)(v30 + 24) = a8;
    outlined init with copy of FeatureEligibility?(v29, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>);
    uint64_t v32 = &v13[*(int *)(v39 + 36)];
    *(void *)uint64_t v32 = v31;
    *((void *)v32 + 1) = partial apply for closure #1 in closure #1 in View.conditionalyOverlaid<A>(with:alignment:pinningTo:spacing:condition:);
    *((void *)v32 + 2) = v30;
    outlined destroy of SystemUpdateNotice?(v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>);
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v13, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>);
    uint64_t v33 = (uint64_t *)&v16[*(int *)(v14 + 36)];
    uint64_t *v33 = v45;
    v33[1] = v31;
    outlined init with copy of FeatureEligibility?((uint64_t)v16, (uint64_t)&v19[*(int *)(v48 + 36)], &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
    uint64_t v34 = (uint64_t)v46;
    memcpy(v19, v46, 0x58uLL);
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>(v34);
    outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>);
    uint64_t v35 = v38[0];
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v19, v38[0], &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
    outlined init with copy of FeatureEligibility?(v35, (uint64_t)v26, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>>);
  }
  else
  {
    uint64_t v37 = (uint64_t)v46;
    memcpy(v26, v46, 0x58uLL);
    swift_storeEnumTagMultiPayload();
    outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>(v37);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.PlayButtonView, _OpacityEffect>, _EnvironmentKeyTransformModifier<Bool>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _FrameLayout>, _AlignmentWritingModifier>>> and conformance <> ModifiedContent<A, B>();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t closure #5 in closure #1 in closure #1 in VideoMessageControlsView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
      - 8;
  MEMORY[0x1F4188790](v53);
  uint64_t v51 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoundedRectangle();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v48 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>)
      - 8;
  MEMORY[0x1F4188790](v49);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>)
      - 8;
  MEMORY[0x1F4188790](v55);
  uint64_t v52 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>)
      - 8;
  MEMORY[0x1F4188790](v57);
  Swift::String_optional v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v56 = (uint64_t)&v47 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v54 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v50 = (uint64_t)&v47 - v19;
  uint64_t v21 = *(id *)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  static VideoMessageControlsView.durationView(for:)(v21, (uint64_t)v20);

  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  id v22 = a2;
  uint64_t v23 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  long long v24 = v59;
  long long v25 = v60;
  uint64_t v26 = v48;
  uint64_t v27 = &v48[*(int *)(v7 + 28)];
  uint64_t v28 = *MEMORY[0x1E4F3D4A0];
  uint64_t v29 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
  __asm { FMOV            V0.2D, #8.0 }
  _OWORD *v26 = _Q0;
  uint64_t v35 = v51;
  outlined init with copy of VideoMessageControlsView((uint64_t)v26, v51, MEMORY[0x1E4F3CDB8]);
  *(_WORD *)(v35 + *(int *)(v53 + 44)) = 256;
  outlined init with copy of FeatureEligibility?(v35, (uint64_t)&v10[*(int *)(v49 + 44)], &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  *(void *)uint64_t v10 = v22;
  *(_OWORD *)(v10 + 8) = v24;
  *(_OWORD *)(v10 + 24) = v25;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v36 = v22;
  outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  _s7SwiftUI7CapsuleVWOhTm_0((uint64_t)v26, MEMORY[0x1E4F3CDB8]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v37 = v52;
  outlined init with copy of FeatureEligibility?((uint64_t)v10, v52, &demangling cache variable for type metadata for ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>);
  *(_WORD *)(v37 + *(int *)(v55 + 44)) = 257;
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>);
  static Alignment.bottom.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of FeatureEligibility?(v37, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>);
  Swift::String v38 = &v13[*(int *)(v57 + 44)];
  long long v39 = v60;
  *(_OWORD *)Swift::String v38 = v59;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v61;
  outlined destroy of SystemUpdateNotice?(v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>);
  uint64_t v40 = v56;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v13, v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  uint64_t v41 = v50;
  uint64_t v42 = v54;
  outlined init with copy of FeatureEligibility?(v50, v54, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of FeatureEligibility?(v40, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  int v43 = v58;
  *uint64_t v58 = 0;
  *((unsigned char *)v43 + 8) = 1;
  uint64_t v44 = v43;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>, ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>));
  outlined init with copy of FeatureEligibility?(v42, (uint64_t)v44 + *(int *)(v45 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v44 + *(int *)(v45 + 64), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  outlined destroy of SystemUpdateNotice?(v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MovieScrubber, _ClipEffect<RoundedRectangle>>, _FixedSizeLayout>, _FrameLayout>);
  return outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
}

uint64_t static VideoMessageControlsView.durationView(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v70 = type metadata accessor for RoundedRectangle() - 8;
  MEMORY[0x1F4188790](v70);
  id v69 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>)
      - 8;
  MEMORY[0x1F4188790](v65);
  uint64_t v64 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>)
      - 8;
  MEMORY[0x1F4188790](v63);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>);
  __n128 v10 = MEMORY[0x1F4188790](v67);
  id v66 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v72 = a1;
  uint64_t v73 = (*(uint64_t (**)(__n128))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x150))(v10);
  uint64_t v74 = v12;
  unint64_t v68 = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  id v18 = (id)CEKMonospacedStylisticNumeralFontOfSizeAndStyle();
  Font.init(_:)();
  uint64_t v19 = Text.font(_:)();
  uint64_t v61 = v20;
  uint64_t v62 = v21;
  char v23 = v22;
  swift_release();
  char v24 = v23 & 1;
  outlined consume of Text.Storage(v13, v15, v17);
  swift_bridgeObjectRelease();
  objc_msgSend(self, sel__defaultTextInsets);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  char v33 = static Edge.Set.all.getter();
  uint64_t v34 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  VideoMessagePlayerViewModel.durationStringBackground.getter((uint64_t)v7);
  uint64_t v36 = static Alignment.center.getter();
  uint64_t v38 = v37;
  uint64_t v39 = (uint64_t)v7;
  uint64_t v40 = (uint64_t)v7;
  uint64_t v41 = v64;
  outlined init with copy of FeatureEligibility?(v39, v64, &demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(v65 + 44));
  uint64_t *v42 = v36;
  v42[1] = v38;
  uint64_t v43 = v41;
  outlined init with copy of FeatureEligibility?(v41, (uint64_t)&v9[*(int *)(v63 + 44)], &demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>);
  uint64_t v44 = v61;
  uint64_t v45 = v62;
  *(void *)uint64_t v9 = v19;
  *((void *)v9 + 1) = v44;
  v9[16] = v24;
  *((void *)v9 + 3) = v45;
  unsigned char v9[32] = v33;
  *((void *)v9 + 5) = v26;
  *((void *)v9 + 6) = v28;
  *((void *)v9 + 7) = v30;
  *((void *)v9 + 8) = v32;
  v9[72] = 0;
  *((void *)v9 + 10) = KeyPath;
  *((void *)v9 + 11) = v34;
  uint64_t v46 = v44;
  outlined copy of Text.Storage(v19, v44, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  outlined destroy of SystemUpdateNotice?(v43, &demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>);
  outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>);
  outlined consume of Text.Storage(v19, v46, v24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v69;
  uint64_t v48 = &v69[*(int *)(v70 + 28)];
  uint64_t v49 = *MEMORY[0x1E4F3D4B0];
  uint64_t v50 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v48, v49, v50);
  __asm { FMOV            V0.2D, #2.0 }
  _OWORD *v47 = _Q0;
  uint64_t v56 = (uint64_t)v66;
  uint64_t v57 = (uint64_t)&v66[*(int *)(v67 + 36)];
  outlined init with copy of VideoMessageControlsView((uint64_t)v47, v57, MEMORY[0x1E4F3CDB8]);
  *(_WORD *)(v57
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of FeatureEligibility?((uint64_t)v9, v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>);
  _s7SwiftUI7CapsuleVWOhTm_0((uint64_t)v47, MEMORY[0x1E4F3CDB8]);
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>);
  uint64_t v73 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v72) + 0x2F0))(updated);
  uint64_t v74 = v59;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  return outlined destroy of SystemUpdateNotice?(v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>);
}

uint64_t key path getter for VideoMessagePlayerViewModel.durationString : VideoMessagePlayerViewModel@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x150))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for VideoMessagePlayerViewModel.durationString : VideoMessagePlayerViewModel(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x158);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

double VideoMessagePlayerViewModel.sendButtonOpacity.getter()
{
  char v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
  double result = 1.0;
  if (!v1) {
    return 0.0;
  }
  return result;
}

void closure #2 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  char v1 = *(void **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  uint64_t v2 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xF0);
  uint64_t v3 = v1;
  LODWORD(v2) = v2();

  if (!v2)
  {
    MEMORY[0x1F4188790](v4);
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
  }
}

void closure #1 in closure #2 in closure #1 in VideoMessageControlsView.body.getter(uint64_t a1)
{
  void (*v3)(uint64_t *__return_ptr);
  void *v4;
  uint64_t v5;
  uint64_t v6;

  char v1 = *(void **)(a1 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x120);
  uint64_t v4 = v1;
  v3(&v6);
  if ((_BYTE)v6) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = 3;
  }
  (*(void (**)(uint64_t))((*v2 & *v4) + 0xF8))(v5);
}

uint64_t specialized VideoMessageControlsView.backgroundOrCurtainAppliedToView<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v43 = a2;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x1F4188790](v42);
  uint64_t v38 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (uint64_t)&v38 - v5;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>, ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>>.Storage);
  MEMORY[0x1F4188790](v40);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Material();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v38 - v16;
  id v18 = *(void **)(v2 + *(int *)(type metadata accessor for VideoMessageControlsView(0) + 28) + 8);
  uint64_t v19 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0x270);
  uint64_t v20 = v18;
  char v21 = v19();

  if (v21)
  {
    static Material.thin.getter();
    char v22 = static Edge.Set.all.getter();
    char v23 = &v14[*(int *)(v12 + 36)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v23, v11, v8);
    v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
               + 36)] = v22;
    outlined init with copy of FeatureEligibility?(v41, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v14, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
    outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v24 = (uint64_t)v17;
    uint64_t v25 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>>;
  }
  else
  {
    uint64_t v26 = v41;
    uint64_t v27 = v42;
    uint64_t v28 = v20;
    BOOL v29 = VideoMessagePlayerViewModel.shouldShowTintedOverlay.getter();

    if (v29)
    {
      static Color.black.getter();
      uint64_t v30 = Color.opacity(_:)();
      swift_release();
    }
    else
    {
      uint64_t v30 = static Color.clear.getter();
    }
    char v31 = static Edge.Set.all.getter();
    uint64_t v32 = v26;
    uint64_t v33 = v38;
    outlined init with copy of FeatureEligibility?(v32, v38, &demangling cache variable for type metadata for ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>);
    uint64_t v34 = v33 + *(int *)(v27 + 36);
    *(void *)uint64_t v34 = v30;
    *(unsigned char *)(v34 + 8) = v31;
    uint64_t v35 = v33;
    uint64_t v36 = v39;
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v35, v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
    outlined init with copy of FeatureEligibility?(v36, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v24 = v36;
    uint64_t v25 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GeometryReader<<<opaque return type of View.onTapGesture(count:perform:)>>.0>, _EnvironmentKeyWritingModifier<ColorScheme>>, _BackgroundStyleModifier<Color>>;
  }
  return outlined destroy of SystemUpdateNotice?(v24, v25);
}

BOOL VideoMessagePlayerViewModel.shouldShowTintedOverlay.getter()
{
  if ((*(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))() != 3) {
    return 0;
  }
  return VideoMessagePlayerViewModel.hasRecording.getter();
}

uint64_t VideoMessagePlayerViewModel.durationStringBackground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v2 = type metadata accessor for Material();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
  MEMORY[0x1F4188790](v43);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (uint64_t)&v39 - v8;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>.Storage);
  MEMORY[0x1F4188790](v42);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RoundedRectangle();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (_OWORD *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = MEMORY[0x1F4188790](v18);
  char v21 = (char *)&v39 - v20;
  int v22 = (*(unsigned __int8 (**)(__n128))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xF0))(v19);
  char v23 = (char *)v14 + *(int *)(v12 + 28);
  uint64_t v24 = *MEMORY[0x1E4F3D4A0];
  uint64_t v25 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v14 = _Q0;
  if (v22 == 2)
  {
    uint64_t v31 = static Color.red.getter();
    outlined init with copy of VideoMessageControlsView((uint64_t)v14, (uint64_t)v17, MEMORY[0x1E4F3CDB8]);
    *(void *)&v17[*(int *)(v15 + 52)] = v31;
    *(_WORD *)&v17[*(int *)(v15 + 56)] = 256;
    _s7SwiftUI7CapsuleVWOhTm_0((uint64_t)v14, MEMORY[0x1E4F3CDB8]);
    uint64_t v32 = &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>;
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v17, (uint64_t)v21, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v10, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Color> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    _ConditionalContent<>.init(storage:)();
    uint64_t v33 = (uint64_t)v21;
  }
  else
  {
    static Material.ultraThin.getter();
    outlined init with copy of VideoMessageControlsView((uint64_t)v14, (uint64_t)v6, MEMORY[0x1E4F3CDB8]);
    uint64_t v34 = v43;
    uint64_t v36 = v39;
    uint64_t v35 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(&v6[*(int *)(v43 + 52)], v4, v40);
    *(_WORD *)&v6[*(int *)(v34 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v35);
    _s7SwiftUI7CapsuleVWOhTm_0((uint64_t)v14, MEMORY[0x1E4F3CDB8]);
    uint64_t v32 = &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>;
    uint64_t v37 = v41;
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v6, v41, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    outlined init with copy of FeatureEligibility?(v37, (uint64_t)v10, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Color> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<RoundedRectangle, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
    _ConditionalContent<>.init(storage:)();
    uint64_t v33 = v37;
  }
  return outlined destroy of SystemUpdateNotice?(v33, v32);
}

uint64_t VideoMessageControlsView.TopControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<Anima);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (VideoMessageControlsView.TopControlsView.showsNameView.getter()) {
    uint64_t v6 = static VerticalAlignment.firstTextBaseline.getter();
  }
  else {
    uint64_t v6 = static VerticalAlignment.top.getter();
  }
  *(void *)uint64_t v5 = v6;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedCo);
  closure #1 in VideoMessageControlsView.TopControlsView.body.getter(v1, (uint64_t)&v5[*(int *)(v7 + 44)]);
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v5, a1, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<Anima);
}

uint64_t closure #1 in VideoMessageControlsView.TopControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v32)(void *__return_ptr);
  char *v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t (*v48)(void);
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t (*v66)(void);
  void *v67;
  char v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  void *v71;
  uint64_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  void *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  void __src[18];
  long long v134;

  uint64_t v126 = a2;
  unsigned int v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>.Storage);
  MEMORY[0x1F4188790](v120);
  Swift::Int v124 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v103 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v104 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
  MEMORY[0x1F4188790](v122);
  id v102 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v107 = (uint64_t)&v101 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v125 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v123 = (char *)&v101 - v13;
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v117);
  id v101 = (uint64_t)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>.Storage);
  MEMORY[0x1F4188790](v118);
  uint64_t v116 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v121 = (uint64_t)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v130 = (uint64_t)&v101 - v19;
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  Swift::Int v113 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v108 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>)
       - 8;
  MEMORY[0x1F4188790](v112);
  int v22 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>)
       - 8;
  MEMORY[0x1F4188790](v111);
  uint64_t v24 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v109 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>)
       - 8;
  MEMORY[0x1F4188790](v114);
  Swift::Int v119 = (uint64_t)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v110 = (uint64_t)&v101 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v129 = (uint64_t)&v101 - v31;
  uint64_t v134 = *(_OWORD *)(a1 + 16);
  uint64_t v32 = *(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **((void **)&v134 + 1)) + 0x1B0);
  uint64_t v128 = *((void *)&v134 + 1);
  uint64_t v127 = *((id *)&v134 + 1);
  v32(__src);
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v134);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v131 = a1;
  uint64_t v33 = v108;
  Button.init(action:label:)();
  uint64_t v34 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v113;
  uint64_t v37 = v33;
  uint64_t v38 = v33;
  uint64_t v39 = v115;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v22, v37, v115);
  uint64_t v40 = (uint64_t *)&v22[*(int *)(v112 + 44)];
  char *v40 = KeyPath;
  v40[1] = v34;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);
  outlined init with copy of FeatureEligibility?((uint64_t)v22, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  *(_WORD *)&v24[*(int *)(v111 + 44)] = 1;
  outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v100 = static Alignment.leading.getter();
  uint64_t v41 = (uint64_t)v109;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>);
  uint64_t v42 = 5.6;
  if (VideoMessageControlsView.TopControlsView.showsNameView.getter()) {
    uint64_t v43 = 0.0;
  }
  else {
    uint64_t v43 = 5.6;
  }
  uint64_t v44 = v110;
  outlined init with copy of FeatureEligibility?(v41, v110, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>);
  uint64_t v45 = v44 + *(int *)(v114 + 44);
  *(void *)uint64_t v45 = 0;
  *(double *)(v45 + 8) = v43;
  outlined destroy of SystemUpdateNotice?(v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v44, v129, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  if (VideoMessageControlsView.TopControlsView.showsNameView.getter())
  {
    uint64_t v46 = v116;
    uint64_t v47 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v48 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v127) + 0x180);
    uint64_t v49 = v127;
    uint64_t v50 = v48();
    uint64_t v52 = v51;
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v134);
    uint64_t v53 = static Edge.Set.leading.getter();
    uint64_t v54 = static Edge.Set.trailing.getter();
    uint64_t v55 = MEMORY[0x1C8771D90](0);
    uint64_t v56 = MEMORY[0x1C8771D90]();
    if (MEMORY[0x1C8771D90](v56 & v53) != v53) {
      uint64_t v55 = MEMORY[0x1C8771D90](v55 | v53);
    }
    uint64_t v57 = MEMORY[0x1C8771D90](v55);
    if (MEMORY[0x1C8771D90](v57 & v54) != v54) {
      LOBYTE(v55) = MEMORY[0x1C8771D90](v55 | v54);
    }
    EdgeInsets.init(_all:)();
    *(void *)uint64_t v46 = v50;
    *(void *)(v46 + 8) = v52;
    *(unsigned char *)(v46 + 16) = v55;
    *(void *)(v46 + 24) = v58;
    *(void *)(v46 + 32) = v59;
    *(void *)(v46 + 40) = v60;
    *(void *)(v46 + 48) = v61;
    *(unsigned char *)(v46 + 56) = 0;
    *(void *)(v46 + 64) = 0x3FF0000000000000;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v62 = v127;
  }
  else
  {
    uint64_t v47 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v63 = v127;
    uint64_t v64 = v127;
    uint64_t v65 = v101;
    static VideoMessageControlsView.durationView(for:)(v64, v101);
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v134);
    outlined init with copy of FeatureEligibility?(v65, v116, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SystemUpdateNotice?(v65, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>);
    uint64_t v62 = v63;
  }
  id v66 = *(uint64_t (**)(void))((*v47 & *v62) + 0x270);
  uint64_t v67 = v62;
  unint64_t v68 = v66();
  id v69 = outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v134);
  if ((v68 & 1) != 0
    || (uint64_t v70 = *(uint64_t (**)(void))((*v47 & *v67) + 0x2A0),
        uint64_t v71 = v67,
        LOBYTE(v70) = v70(),
        id v69 = outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v134),
        (v70 & 1) != 0))
  {
    MEMORY[0x1F4188790](v69);
    MEMORY[0x1F4188790](v72);
    uint64_t v73 = v67;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>?, Button<Text>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(Button<Text>, Button<Text>?, Button<Text>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>?, Button<Text>)>);
    uint64_t v74 = v103;
    Menu.init(content:label:)();
    outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v134);
    static Alignment.trailing.getter();
    uint64_t v75 = (uint64_t)v104;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v74, v106);
    if (VideoMessageControlsView.TopControlsView.showsNameView.getter()) {
      uint64_t v42 = 0.0;
    }
    uint64_t v76 = v102;
    outlined init with copy of FeatureEligibility?(v75, v102, &demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
    uint64_t v77 = v76 + *(int *)(v122 + 36);
    *(void *)uint64_t v77 = 0;
    *(double *)(v77 + 8) = v42;
    outlined destroy of SystemUpdateNotice?(v75, &demangling cache variable for type metadata for ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>);
    uint64_t v78 = v107;
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v76, v107, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
    outlined init with copy of FeatureEligibility?(v78, (uint64_t)v124, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>);
    lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<AnimatedSaveButton, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    uint64_t v79 = (uint64_t)v123;
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SystemUpdateNotice?(v78, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>);
  }
  else
  {
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    uint64_t v80 = v71;
    uint64_t v81 = ObservedObject.init(wrappedValue:)();
    uint64_t v83 = v82;
    uint64_t v132 = 1;
    State.init(wrappedValue:)();
    long long v84 = __src[0];
    long long v85 = __src[1];
    uint64_t v86 = static Alignment.trailing.getter();
    LOBYTE(v100) = v84;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v86, v87, v81, v83, v100, v85);

    swift_release();
    if (VideoMessageControlsView.TopControlsView.showsNameView.getter()) {
      uint64_t v42 = 0.0;
    }
    uint64_t v88 = v124;
    memcpy(v124, __src, 0x90uLL);
    *((void *)v88 + 18) = 0;
    *((double *)v88 + 19) = v42;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>);
    lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<AnimatedSaveButton, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    uint64_t v79 = (uint64_t)v123;
    _ConditionalContent<>.init(storage:)();
  }
  id v89 = v129;
  uint64_t v90 = v119;
  outlined init with copy of FeatureEligibility?(v129, v119, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  uint64_t v91 = v130;
  uint64_t v92 = v121;
  outlined init with copy of FeatureEligibility?(v130, v121, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  uint64_t v93 = v125;
  outlined init with copy of FeatureEligibility?(v79, v125, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  char v94 = v126;
  outlined init with copy of FeatureEligibility?(v90, v126, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  id v95 = v79;
  unint64_t v96 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>, Spacer, _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _F);
  uint64_t v97 = v94 + v96[12];
  *(void *)uint64_t v97 = 0;
  *(unsigned char *)(v97 + 8) = 1;
  outlined init with copy of FeatureEligibility?(v92, v94 + v96[16], &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  id v98 = v94 + v96[20];
  *(void *)id v98 = 0;
  *(unsigned char *)(v98 + 8) = 1;
  outlined init with copy of FeatureEligibility?(v93, v94 + v96[24], &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  outlined destroy of SystemUpdateNotice?(v95, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  outlined destroy of SystemUpdateNotice?(v91, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  outlined destroy of SystemUpdateNotice?(v89, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
  outlined destroy of SystemUpdateNotice?(v93, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Menu<ZStack<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, TupleView<(Button<Text>, Button<Text>?, Button<Text>)>>, _FlexFrameLayout>, _OffsetEffect>, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FlexFrameLayout>, _OffsetEffect>>);
  outlined destroy of SystemUpdateNotice?(v92, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<VideoMessageControlsView.TopControlsView.ParticipantNameView, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, _BackgroundModifier<_ConditionalContent<_ShapeView<RoundedRectangle, Color>, _ShapeView<RoundedRectangle, Material>>>>, _ClipEffect<RoundedRectangle>>, AccessibilityAttachmentModifier>>);
  return outlined destroy of SystemUpdateNotice?(v90, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>, _FlexFrameLayout>, _OffsetEffect>);
}

BOOL VideoMessageControlsView.TopControlsView.showsNameView.getter()
{
  void (*v2)(char *__return_ptr);
  void *v3;
  unsigned __int8 (*v5)(void);
  void *v6;
  char v7;
  long long v8;

  uint64_t v8 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *(void (**)(char *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **((void **)&v8 + 1)) + 0x120);
  uint64_t v3 = *((id *)&v8 + 1);
  v2(&v7);
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v8);
  if (v7) {
    return 1;
  }
  uint64_t v5 = *(unsigned __int8 (**)(void))((*v1 & *v3) + 0xC0);
  uint64_t v6 = v3;
  LODWORD(v5) = v5();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v8);
  return v5 == 1;
}

uint64_t closure #1 in VideoMessageControlsView.TopControlsView.cancelButton()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v8 = *(_OWORD *)(a1 + 16);
  id v3 = *((id *)&v8 + 1);
  VideoMessagePlayerViewModel.cancelButtonTitle.getter();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v8);
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6 & 1;
  *(void *)(a2 + 24) = v7;
  return result;
}

uint64_t VideoMessagePlayerViewModel.cancelButtonTitle.getter()
{
  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))(&v11);
  char v1 = v11;
  id v2 = objc_msgSend(self, sel_conversationKit);
  unint64_t v10 = 0xE000000000000000;
  if (v1)
  {
    unint64_t v3 = 0x80000001C37B1260;
    unint64_t v4 = 0xD000000000000012;
  }
  else
  {
    unint64_t v4 = 0x6C65636E6143;
    unint64_t v3 = 0xE600000000000000;
  }
  v5.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  uint64_t v7 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v5, (NSBundle)v2, v6, *(Swift::String *)(&v10 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t closure #1 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)@<X0>(void *a1@<X0>, Swift::String *a2@<X1>, Swift::String *a3@<X8>)
{
  void (*v26)(uint64_t *__return_ptr, uint64_t);
  unint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  Swift::String v40;
  Swift::String_optional v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(Swift::String *, char *, uint64_t);
  Swift::String *v50;
  uint64_t v51;
  char *v52;
  Swift::String *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  void v57[2];
  Swift::String *v58;
  uint64_t v59;
  void (*v60)(uint64_t *__return_ptr, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  Swift::String *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;

  uint64_t v58 = a2;
  uint64_t v67 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v64 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v59 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v68 = (uint64_t)v57 - v9;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v65 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  id v66 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (Swift::String *)((char *)v57 - v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v63 = (char *)v57 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v57 - v17;
  uint64_t v19 = self;
  v20.super.Class isa = (Class)objc_msgSend(v19, sel_conversationKit);
  v21._uint64_t countAndFlagsBits = 0xD000000000000015;
  v73._object = (void *)0xE000000000000000;
  v21._object = (void *)0x80000001C37B1200;
  v22.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v22.value._object = (void *)0xEF74694B6E6F6974;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v73._uint64_t countAndFlagsBits = 0;
  Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, v20, v23, v73);

  id v72 = v24;
  uint64_t v25 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v26 = *(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x1E0);
  uint64_t v61 = (*MEMORY[0x1E4FBC8C8] & *a1) + 480;
  long long v60 = v26;
  ((void (*)(uint64_t *__return_ptr))v26)(&v70);
  swift_release();
  uint64_t v27 = lazy protocol witness table accessor for type String and conformance String();
  id v69 = v18;
  uint64_t v28 = v27;
  Button<>.init<A>(_:action:)();
  id v72 = v58[1];
  uint64_t v29 = v72._object;
  LOBYTE(v20.super.isa) = VideoMessagePlayerViewModel.showsSaveInMenu.getter();
  outlined release of ObservedObject<VideoMessagePlayerViewModel>((uint64_t)&v72);
  if ((uint64_t)v20.super.isa)
  {
    uint64_t v30 = objc_msgSend(v19, sel_conversationKit);
    v74._object = (void *)0xE000000000000000;
    v31._object = (void *)0x80000001C37B1240;
    v31._uint64_t countAndFlagsBits = 0xD000000000000012;
    v32.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v32.value._object = (void *)0xEF74694B6E6F6974;
    v33._uint64_t countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v74._uint64_t countAndFlagsBits = 0;
    uint64_t v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v74);
    uint64_t v35 = v19;
    v57[1] = v28;

    uint64_t v71 = v34;
    (*(void (**)(uint64_t *__return_ptr))((*v25 & *a1) + 0x1B0))(&v70);
    uint64_t v58 = v13;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v36 = v68;
    uint64_t v13 = v58;
    Button<>.init<A>(_:action:)();
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v37 = 1;
    uint64_t v36 = v68;
    uint64_t v35 = v19;
  }
  uint64_t v38 = v62;
  __swift_storeEnumTagSinglePayload(v36, v37, 1, v62);
  uint64_t v39 = objc_msgSend(v35, sel_conversationKit);
  v40._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v75._object = (void *)0xE000000000000000;
  v40._object = (void *)0x80000001C37B1220;
  v41.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v41.value._object = (void *)0xEF74694B6E6F6974;
  v42._uint64_t countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v75._uint64_t countAndFlagsBits = 0;
  uint64_t v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v75);

  uint64_t v71 = v43;
  uint64_t v44 = (uint64_t)v64;
  static ButtonRole.destructive.getter();
  uint64_t v45 = type metadata accessor for ButtonRole();
  uint64_t v46 = __swift_storeEnumTagSinglePayload(v44, 0, 1, v45);
  v60(&v70, v46);
  swift_release();
  uint64_t v47 = v63;
  Button<>.init<A>(_:role:action:)();
  uint64_t v48 = v65;
  uint64_t v49 = *(void (**)(Swift::String *, char *, uint64_t))(v65 + 16);
  uint64_t v50 = v13;
  v49(v13, v69, v38);
  uint64_t v51 = v59;
  outlined init with copy of FeatureEligibility?(v36, v59, &demangling cache variable for type metadata for Button<Text>?);
  uint64_t v52 = v66;
  v49((Swift::String *)v66, v47, v38);
  uint64_t v53 = v67;
  v49(v67, (char *)v50, v38);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<Text>, Button<Text>?, Button<Text>));
  outlined init with copy of FeatureEligibility?(v51, (uint64_t)v53 + *(int *)(v54 + 48), &demangling cache variable for type metadata for Button<Text>?);
  v49((Swift::String *)((char *)v53 + *(int *)(v54 + 64)), v52, v38);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v48 + 8);
  v55(v47, v38);
  outlined destroy of SystemUpdateNotice?(v68, &demangling cache variable for type metadata for Button<Text>?);
  v55(v69, v38);
  v55(v52, v38);
  outlined destroy of SystemUpdateNotice?(v51, &demangling cache variable for type metadata for Button<Text>?);
  return ((uint64_t (*)(Swift::String *, uint64_t))v55)(v50, v38);
}

uint64_t closure #2 in VideoMessageControlsView.TopControlsView.civicMenuButton(using:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static Alignment.center.getter();
  uint64_t v4 = v3;
  uint64_t v5 = Image.init(systemName:)();
  uint64_t v6 = static Color.white.getter();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = result;
  a1[4] = v6;
  return result;
}

uint64_t VideoMessageControlsView.TopControlsView.ParticipantNameView.body.getter@<X0>(uint64_t a1@<X8>)
{
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.white.getter();
  uint64_t v7 = Text.foregroundColor(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  outlined consume of Text.Storage(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = static Font.headline.getter();
  uint64_t v16 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = KeyPath;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = result;
  *(void *)(a1 + 72) = 2;
  *(unsigned char *)(a1 + 80) = 0;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance VideoMessageControlsView.TopControlsView.ParticipantNameView@<X0>(uint64_t a1@<X8>)
{
  return VideoMessageControlsView.TopControlsView.ParticipantNameView.body.getter(a1);
}

double EnvironmentValues.margin.getter()
{
  return EnvironmentValues.margin.getter((void (*)(void))lazy protocol witness table accessor for type MarginKey and conformance MarginKey);
}

void key path getter for EnvironmentValues.margin : EnvironmentValues(double *a1@<X8>)
{
  *a1 = EnvironmentValues.margin.getter();
}

uint64_t key path setter for EnvironmentValues.margin : EnvironmentValues()
{
  return EnvironmentValues.margin.setter((void (*)(void))lazy protocol witness table accessor for type MarginKey and conformance MarginKey);
}

uint64_t protocol witness for View.body.getter in conformance VideoMessageControlsView.TopControlsView@<X0>(uint64_t a1@<X8>)
{
  return VideoMessageControlsView.TopControlsView.body.getter(a1);
}

uint64_t VideoMessageControlsView.LocalBottomControlsView.isVertical.getter()
{
  uint64_t v1 = type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v56 = (uint64_t)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v44 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v52 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v51 = (char *)&v44 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v44 - v18;
  MEMORY[0x1F4188790](v20);
  Swift::String_optional v22 = (char *)&v44 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v44 - v24;
  uint64_t v49 = v1;
  uint64_t v55 = v0;
  specialized Environment.wrappedValue.getter();
  uint64_t v26 = *MEMORY[0x1E4F3DA58];
  uint64_t v54 = v4;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v47(v22, v26, v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v3);
  uint64_t v48 = v6;
  uint64_t v27 = (uint64_t)&v10[*(int *)(v6 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v25, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v27, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v3) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v27, 1, v3) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined init with copy of VideoMessageControlsView(v55, v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v10, (uint64_t)v19, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v27, 1, v3) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v3);
LABEL_6:
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    outlined init with copy of VideoMessageControlsView(v55, v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
LABEL_7:
    _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
LABEL_15:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v28 = v54;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
  unsigned int v45 = v26;
  uint64_t v30 = v46;
  v29(v46, v27, v3);
  lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
  int v44 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v32 = v30;
  uint64_t v26 = v45;
  v31(v32, v3);
  outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v31(v19, v3);
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of VideoMessageControlsView(v55, v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  if ((v44 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v33 = (uint64_t)v51;
  specialized Environment.wrappedValue.getter();
  uint64_t v34 = (uint64_t)v50;
  v47(v50, v26, v3);
  __swift_storeEnumTagSinglePayload(v34, 0, 1, v3);
  uint64_t v35 = v53;
  uint64_t v36 = v53 + *(int *)(v48 + 48);
  outlined init with copy of FeatureEligibility?(v33, v53, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v34, v36, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v35, 1, v3) != 1)
  {
    outlined init with copy of FeatureEligibility?(v35, v52, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v36, 1, v3) != 1)
    {
      uint64_t v39 = v54;
      uint64_t v40 = v34;
      uint64_t v41 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v46, v36, v3);
      lazy protocol witness table accessor for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel((unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, MEMORY[0x1E4F3DA68]);
      uint64_t v42 = v52;
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v39 + 8);
      v43(v41, v3);
      outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
      v43((char *)v42, v3);
      outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      return v37 & 1;
    }
    outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v3);
    goto LABEL_14;
  }
  outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  _s7SwiftUI7CapsuleVWOhTm_0(v56, (void (*)(void))type metadata accessor for VideoMessageControlsView.LocalBottomControlsView);
  if (__swift_getEnumTagSinglePayload(v36, 1, v3) != 1)
  {
LABEL_14:
    outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_15;
  }
  outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  char v37 = 1;
  return v37 & 1;
}

uint64_t VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v57 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>);
  MEMORY[0x1F4188790](v52);
  uint64_t v56 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v54 = (char *)&v49 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _Environm);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _Environm);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1;
  uint64_t v18 = *(void **)(v1 + 8);
  uint64_t v19 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0xC0);
  uint64_t v20 = v18;
  int v21 = v19();

  if (v21 == 1)
  {
    uint64_t v22 = (uint64_t)v56;
    uint64_t v23 = (uint64_t)v57;
    uint64_t v49 = v8;
    uint64_t v50 = v16;
    uint64_t v51 = v14;
    uint64_t v24 = (uint64_t)v54;
    if (VideoMessageControlsView.LocalBottomControlsView.isVertical.getter())
    {
      *(void *)uint64_t v13 = static HorizontalAlignment.center.getter();
      *((void *)v13 + 1) = 0;
      v13[16] = 1;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter(v17, &v13[*(int *)(v25 + 44)]);
      uint64_t v26 = &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>;
      outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v10, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
      uint64_t v27 = (uint64_t)v50;
      _ConditionalContent<>.init(storage:)();
      uint64_t v28 = (uint64_t)v13;
    }
    else
    {
      *(void *)uint64_t v23 = static VerticalAlignment.center.getter();
      *(void *)(v23 + 8) = 0;
      *(unsigned char *)(v23 + 16) = 0;
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter(v17, (void *)(v23 + *(int *)(v31 + 44)));
      unsigned int v32 = static Edge.Set.bottom.getter();
      int v33 = MEMORY[0x1C8771D90](0);
      int v34 = MEMORY[0x1C8771D90]();
      if (MEMORY[0x1C8771D90](v34 & v32) != v32) {
        LOBYTE(v33) = MEMORY[0x1C8771D90](v33 | v32);
      }
      type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
      EdgeInsets.init(_all:)();
      uint64_t v36 = v35;
      uint64_t v38 = v37;
      uint64_t v40 = v39;
      uint64_t v42 = v41;
      uint64_t v43 = v22;
      outlined init with copy of FeatureEligibility?(v23, v22, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      uint64_t v44 = v22 + *(int *)(v52 + 36);
      *(unsigned char *)uint64_t v44 = v33;
      *(void *)(v44 + 8) = v36;
      *(void *)(v44 + 16) = v38;
      *(void *)(v44 + 24) = v40;
      *(void *)(v44 + 32) = v42;
      *(unsigned char *)(v44 + 40) = 0;
      outlined destroy of SystemUpdateNotice?(v23, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      static Alignment.center.getter();
      uint64_t v45 = (uint64_t)v53;
      specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
      outlined destroy of SystemUpdateNotice?(v43, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>);
      uint64_t v26 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>;
      uint64_t v46 = v24;
      outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v45, v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>);
      outlined init with copy of FeatureEligibility?(v24, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>);
      lazy protocol witness table accessor for type ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
      uint64_t v27 = (uint64_t)v50;
      _ConditionalContent<>.init(storage:)();
      uint64_t v28 = v46;
    }
    outlined destroy of SystemUpdateNotice?(v28, v26);
    uint64_t v47 = v58;
    uint64_t v48 = v51;
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v27, v58, &demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>)>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _Environm);
    return __swift_storeEnumTagSinglePayload(v47, 0, 1, v48);
  }
  else
  {
    uint64_t v29 = v58;
    return __swift_storeEnumTagSinglePayload(v29, 1, 1, v14);
  }
}

uint64_t closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v26)(_OWORD *__return_ptr);
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _OWORD *v36;
  long long v37;
  unsigned int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char v61;
  char v62;
  char v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  _OWORD v81[7];
  void __src[17];

  uint64_t v79 = a2;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  unint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  id v66 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>)
      - 8;
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>)
      - 8;
  MEMORY[0x1F4188790](v69);
  uint64_t v64 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v72);
  uint64_t v74 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (uint64_t)&v64 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v78 = (uint64_t)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v71 = (char *)&v64 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v77 = (uint64_t)&v64 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v76 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v64 - v21;
  uint64_t v23 = static Alignment.top.getter();
  uint64_t v63 = 1;
  uint64_t v62 = 0;
  uint64_t v61 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0, 1, 0, 1, 0, v61, 0x7FF0000000000000, v62, v23, v24, 0, v63);
  uint64_t v75 = v22;
  VideoMessageControlsView.LocalBottomControlsView.sendButton()((uint64_t)v22);
  *(void *)uint64_t v11 = static HorizontalAlignment.center.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v25 = *(void **)(a1 + 8);
  uint64_t v26 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v25) + 0x1B0);
  uint64_t v27 = v25;
  v26(v81);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v80 = a1;
  uint64_t v28 = v66;
  uint64_t v29 = (uint64_t)v64;
  Button.init(action:label:)();
  uint64_t v30 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  unsigned int v32 = v68;
  int v33 = (uint64_t)v65;
  int v34 = v70;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v28, v70);
  uint64_t v35 = (uint64_t *)(v33 + *(int *)(v67 + 44));
  *uint64_t v35 = KeyPath;
  v35[1] = v30;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v34);
  static Alignment.bottom.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of FeatureEligibility?(v33, v29, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v36 = (_OWORD *)(v29 + *(int *)(v69 + 44));
  uint64_t v37 = v81[1];
  void *v36 = v81[0];
  v36[1] = v37;
  void v36[2] = v81[2];
  outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v38 = static Edge.Set.bottom.getter();
  uint64_t v39 = MEMORY[0x1C8771D90](0);
  uint64_t v40 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v40 & v38) != v38) {
    LOBYTE(v39) = MEMORY[0x1C8771D90](v39 | v38);
  }
  uint64_t v41 = (uint64_t)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>)
                             + 44)];
  type metadata accessor for VideoMessageControlsView.LocalBottomControlsView(0);
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v74;
  outlined init with copy of FeatureEligibility?(v29, v74, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  uint64_t v51 = v50 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v51 = v39;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  outlined destroy of SystemUpdateNotice?(v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  uint64_t v52 = v73;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v50, v73, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v52, v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  static Alignment.bottom.getter();
  uint64_t v53 = (uint64_t)v71;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  uint64_t v54 = v77;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v53, v77, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  uint64_t v56 = (uint64_t)v75;
  uint64_t v55 = v76;
  outlined init with copy of FeatureEligibility?((uint64_t)v75, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  uint64_t v57 = v78;
  outlined init with copy of FeatureEligibility?(v54, v78, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  uint64_t v58 = v79;
  memcpy(v79, __src, 0x80uLL);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>));
  outlined init with copy of FeatureEligibility?(v55, (uint64_t)v58 + *(int *)(v59 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of FeatureEligibility?(v57, (uint64_t)v58 + *(int *)(v59 + 64), &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of SystemUpdateNotice?(v54, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of SystemUpdateNotice?(v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  return outlined destroy of SystemUpdateNotice?(v55, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
}

uint64_t VideoMessageControlsView.LocalBottomControlsView.sendButton()@<X0>(uint64_t a1@<X8>)
{
  void (*v11)(_OWORD *__return_ptr);
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  long long v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  _OWORD v36[3];
  Swift::String v37;

  uint64_t v2 = v1;
  int v34 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>);
  unsigned int v32 = *(void *)(v3 - 8);
  int v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>);
  MEMORY[0x1F4188790](v31);
  uint64_t v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + 8);
  uint64_t v11 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x1B0);
  uint64_t v12 = v10;
  v11(v36);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v13 = v29;
  Button.init(action:label:)();
  uint64_t v14 = *(void *)(v2 + 16);
  LOBYTE(v12) = *(unsigned char *)(v2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v14, (char)v12);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v14, (char)v12);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v14, (char)v12);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v14, (char)v12);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v16 = v32;
  uint64_t v15 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v8, v13, v33);
  uint64_t v17 = &v8[*(int *)(v6 + 44)];
  uint64_t v18 = v36[1];
  *(_OWORD *)uint64_t v17 = v36[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v36[2];
  (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  uint64_t v19 = static Color.white.getter();
  uint64_t v20 = v30;
  outlined init with copy of FeatureEligibility?((uint64_t)v8, v30, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
  uint64_t v21 = v20 + *(int *)(v31 + 36);
  *(void *)uint64_t v21 = v19;
  *(_WORD *)(v21 + 8) = 256;
  outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>);
  uint64_t v22 = objc_msgSend(self, sel_conversationKit);
  v37._object = (void *)0xE000000000000000;
  v23._object = (void *)0x80000001C37B11C0;
  v23._uint64_t countAndFlagsBits = 0xD000000000000012;
  v24.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v24.value._object = (void *)0xEF74694B6E6F6974;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v37._uint64_t countAndFlagsBits = 0;
  uint64_t v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v37);

  uint64_t v35 = v26;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  return outlined destroy of SystemUpdateNotice?(v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>);
}

uint64_t closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)__src - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)__src - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)__src - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)__src - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)__src - v17;
  uint64_t v19 = static Alignment.leading.getter();
  char v26 = 1;
  char v25 = 1;
  char v24 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v24, 0, v25, v19, v20, 0, v26);
  VideoMessageControlsView.LocalBottomControlsView.sendButton()((uint64_t)v18);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  closure #1 in closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter(a1, (uint64_t)&v6[*(int *)(v21 + 44)]);
  static Alignment.trailing.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined init with copy of FeatureEligibility?((uint64_t)v18, (uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  memcpy(a2, __src, 0x80uLL);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Spacer, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>, ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>));
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)a2 + *(int *)(v22 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)a2 + *(int *)(v22 + 64), &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of SystemUpdateNotice?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  outlined destroy of SystemUpdateNotice?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>>, _FlexFrameLayout>);
  return outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>>, _FrameLayout>, _InsettableBackgroundShapeModifier<Color, Circle>>, AccessibilityAttachmentModifier>);
}

uint64_t closure #1 in closure #2 in VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v11)(_OWORD *__return_ptr);
  void *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _OWORD *v19;
  long long v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[3];

  unsigned int v32 = a1;
  uint64_t v37 = a2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  int v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>)
      - 8;
  MEMORY[0x1F4188790](v35);
  int v33 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(a1 + 8);
  uint64_t v11 = *(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x1B0);
  uint64_t v12 = v10;
  v11(v39);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v38 = v32;
  Button.init(action:label:)();
  uint64_t v13 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = v34;
  uint64_t v16 = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v8, v4, v36);
  uint64_t v17 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  *uint64_t v17 = KeyPath;
  v17[1] = v13;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v16);
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v18 = v33;
  outlined init with copy of FeatureEligibility?((uint64_t)v8, v33, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v19 = (_OWORD *)(v18 + *(int *)(v35 + 44));
  uint64_t v20 = v39[1];
  char *v19 = v39[0];
  v19[1] = v20;
  void v19[2] = v39[2];
  outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  LOBYTE(v13) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  char v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = v37;
  outlined init with copy of FeatureEligibility?(v18, v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  uint64_t v30 = v29
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>)
               + 36);
  *(unsigned char *)uint64_t v30 = v13;
  *(void *)(v30 + 8) = v22;
  *(void *)(v30 + 16) = v24;
  *(void *)(v30 + 24) = v26;
  *(void *)(v30 + 32) = v28;
  *(unsigned char *)(v30 + 40) = 0;
  return outlined destroy of SystemUpdateNotice?(v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
}

uint64_t closure #1 in closure #1 in closure #1 in VideoMessageControlsView.LocalBottomControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_conversationKit);
  v14._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001C37B11A0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000014;
  v8.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v14);

  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12 & 1;
  *(void *)(a2 + 24) = v13;
  return result;
}

uint64_t closure #1 in VideoMessageControlsView.LocalBottomControlsView.sendButton()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = Image.init(systemName:)();
  uint64_t v7 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  v14[1] = v6;
  v14[2] = KeyPath;
  v14[3] = v7;
  static Font.Weight.semibold.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  id v9 = objc_msgSend(self, sel_systemGreenColor);
  uint64_t v10 = MEMORY[0x1C8772490](v9);
  uint64_t v11 = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  char v12 = (uint64_t *)(a1
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *char v12 = v11;
  v12[1] = v10;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double EnvironmentValues.primaryButtonSize.getter()
{
  return EnvironmentValues.margin.getter((void (*)(void))lazy protocol witness table accessor for type PrimaryButtonSizeKey and conformance PrimaryButtonSizeKey);
}

double EnvironmentValues.margin.getter(void (*a1)(void))
{
  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

uint64_t EnvironmentValues.margin.setter(void (*a1)(void))
{
  return EnvironmentValues.subscript.setter();
}

uint64_t VideoMessageControlsView.RemoteBottomControlsView.body.getter@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  id v29 = a1;
  uint64_t v30 = type metadata accessor for ColorScheme();
  uint64_t v4 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v31 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v32 = a2
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>>)
               + 44);
  *(void *)char v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v19 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>)
                             + 44)];
  *(void *)id v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0x402E000000000000;
  v9[16] = 0;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter(a1, (uint64_t)&v9[*(int *)(v20 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v30;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F3C5C0], v30);
  uint64_t v23 = (uint64_t *)(v19
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>)
                           + 36));
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v23 + *(int *)(v24 + 28), v6, v22);
  *uint64_t v23 = KeyPath;
  outlined init with copy of FeatureEligibility?((uint64_t)v9, v19, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v22);
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>);
  static Alignment.center.getter();
  uint64_t v25 = (uint64_t)v31;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v12, &demangling cache variable for type metadata for VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>);
  id v26 = v29;
  double v27 = VideoMessagePlayerViewModel.bottomControlsOpacity.getter();

  outlined init with copy of FeatureEligibility?(v25, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>);
  *(double *)&v18[*(int *)(v16 + 44)] = v27;
  outlined destroy of SystemUpdateNotice?(v25, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>);
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v18, v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>)>>, _EnvironmentKeyWritingModifier<ColorScheme>>>, _FlexFrameLayout>, _OpacityEffect>);
}

uint64_t closure #1 in closure #1 in closure #1 in VideoMessageControlsView.RemoteBottomControlsView.body.getter@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  void (*v34)(uint64_t *__return_ptr);
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v115)(void);
  void (*v116)(void);
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t *__return_ptr);
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;

  uint64_t v147 = a2;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  MEMORY[0x1F4188790](v144);
  uint64_t v148 = (uint64_t)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v145 = (char *)&v115 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v146 = (uint64_t)&v115 - v7;
  uint64_t v138 = type metadata accessor for ColorScheme();
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v136 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for Material();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  double v133 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Capsule();
  MEMORY[0x1F4188790](v10 - 8);
  char v152 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Capsule, HierarchicalShapeStyle>);
  MEMORY[0x1F4188790](v128);
  uint64_t v13 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>);
  uint64_t v153 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  uint64_t v139 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v115 - v16;
  id v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>);
  MEMORY[0x1F4188790](v150);
  uint64_t v140 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v115 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v143 = (char *)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v149 = (uint64_t)&v115 - v25;
  Swift::Int v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>);
  MEMORY[0x1F4188790](v122);
  uint64_t v125 = (char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>);
  MEMORY[0x1F4188790](v117);
  uint64_t v132 = (char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  MEMORY[0x1F4188790](v123);
  uint64_t v142 = (uint64_t)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v131 = (char *)&v115 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v141 = (uint64_t)&v115 - v32;
  uint64_t v33 = (*MEMORY[0x1E4FBC8C8] & *a1) + 432;
  int v34 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x1B0);
  uint64_t v35 = a1;
  uint64_t v130 = v33;
  uint64_t v129 = v34;
  v34(&v154);
  Swift::Int v124 = v35;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v37 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v127 = v36;
  uint64_t v126 = v37;
  Button.init(action:label:)();
  uint64_t v38 = static Edge.Set.top.getter();
  uint64_t v39 = static Edge.Set.bottom.getter();
  uint64_t v40 = MEMORY[0x1C8771D90](0);
  uint64_t v41 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v41 & v38) != v38) {
    uint64_t v40 = MEMORY[0x1C8771D90](v40 | v38);
  }
  uint64_t v42 = MEMORY[0x1C8771D90](v40);
  if (MEMORY[0x1C8771D90](v42 & v39) != v39) {
    LOBYTE(v40) = MEMORY[0x1C8771D90](v40 | v39);
  }
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v153;
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
  uint64_t v53 = v151;
  unsigned int v120 = v153 + 16;
  Swift::Int v119 = v52;
  v52(v21, v17, v151);
  uint64_t v54 = &v21[*(int *)(v150 + 36)];
  *uint64_t v54 = v40;
  *((void *)v54 + 1) = v44;
  *((void *)v54 + 2) = v46;
  *((void *)v54 + 3) = v48;
  *((void *)v54 + 4) = v50;
  v54[40] = 0;
  uint64_t v55 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v153 = v51 + 8;
  uint64_t v118 = v55;
  v55(v17, v53);
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>);
  uint64_t v56 = *MEMORY[0x1E4F3D4A0];
  uint64_t v57 = type metadata accessor for RoundedCornerStyle();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 104);
  long long v60 = v58 + 104;
  uint64_t v61 = (uint64_t)v152;
  v59(v152, v56, v57);
  LODWORD(v53) = static HierarchicalShapeStyle.tertiary.getter();
  uint64_t v115 = (void (*)(void))MEMORY[0x1E4F3EE58];
  outlined init with copy of VideoMessageControlsView(v61, (uint64_t)v13, MEMORY[0x1E4F3EE58]);
  uint64_t v62 = v128;
  *(_DWORD *)&v13[*(int *)(v128 + 52)] = v53;
  *(_WORD *)&v13[*(int *)(v62 + 56)] = 256;
  uint64_t v116 = (void (*)(void))MEMORY[0x1E4F3EE58];
  _s7SwiftUI7CapsuleVWOhTm_0(v61, MEMORY[0x1E4F3EE58]);
  uint64_t v63 = static Alignment.center.getter();
  uint64_t v65 = v64;
  id v66 = (uint64_t)v125;
  uint64_t v67 = (uint64_t)&v125[*(int *)(v122 + 36)];
  outlined init with copy of FeatureEligibility?((uint64_t)v13, v67, &demangling cache variable for type metadata for _ShapeView<Capsule, HierarchicalShapeStyle>);
  unint64_t v68 = (uint64_t *)(v67
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>)
                           + 36));
  *unint64_t v68 = v63;
  v68[1] = v65;
  id v69 = v149;
  outlined init with copy of FeatureEligibility?(v149, v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for _ShapeView<Capsule, HierarchicalShapeStyle>);
  outlined destroy of SystemUpdateNotice?(v69, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  uint64_t v70 = v133;
  static Material.ultraThin.getter();
  LODWORD(v149) = v56;
  uint64_t v128 = v57;
  Swift::Int v122 = (uint64_t)v59;
  uint64_t v121 = v60;
  v59((char *)v61, v56, v57);
  uint64_t v71 = (uint64_t)v132;
  id v72 = &v132[*(int *)(v117 + 36)];
  uint64_t v73 = v134;
  uint64_t v74 = v135;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v72, v70, v135);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Material, Capsule>);
  outlined init with copy of VideoMessageControlsView(v61, (uint64_t)&v72[*(int *)(v75 + 52)], v115);
  *(_WORD *)&v72[*(int *)(v75 + 56)] = 256;
  outlined init with copy of FeatureEligibility?(v66, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>);
  _s7SwiftUI7CapsuleVWOhTm_0(v61, v116);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v74);
  outlined destroy of SystemUpdateNotice?(v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v77 = v137;
  uint64_t v78 = v136;
  uint64_t v79 = v138;
  (*(void (**)(char *, void, uint64_t))(v137 + 104))(v136, *MEMORY[0x1E4F3C5B8], v138);
  uint64_t v80 = (uint64_t)v131;
  uint64_t v81 = (uint64_t *)&v131[*(int *)(v123 + 36)];
  id v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))((char *)v81 + *(int *)(v82 + 28), v78, v79);
  *uint64_t v81 = KeyPath;
  outlined init with copy of FeatureEligibility?(v71, v80, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
  outlined destroy of SystemUpdateNotice?(v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>);
  uint64_t v83 = v141;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v80, v141, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  long long v84 = v124;
  v129(&v154);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v85 = v139;
  Button.init(action:label:)();
  uint64_t v86 = static Edge.Set.top.getter();
  uint64_t v87 = static Edge.Set.bottom.getter();
  uint64_t v88 = MEMORY[0x1C8771D90](0);
  id v89 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v89 & v86) != v86) {
    uint64_t v88 = MEMORY[0x1C8771D90](v88 | v86);
  }
  uint64_t v90 = MEMORY[0x1C8771D90](v88);
  if (MEMORY[0x1C8771D90](v90 & v87) != v87) {
    LOBYTE(v88) = MEMORY[0x1C8771D90](v88 | v87);
  }
  EdgeInsets.init(_all:)();
  uint64_t v92 = v91;
  char v94 = v93;
  unint64_t v96 = v95;
  id v98 = v97;
  unint64_t v99 = (uint64_t)v140;
  uint64_t v100 = v151;
  v119(v140, v85, v151);
  id v101 = v99 + *(int *)(v150 + 36);
  *(unsigned char *)id v101 = v88;
  *(void *)(v101 + 8) = v92;
  *(void *)(v101 + 16) = v94;
  *(void *)(v101 + 24) = v96;
  *(void *)(v101 + 32) = v98;
  *(unsigned char *)(v101 + 40) = 0;
  v118(v85, v100);
  static Alignment.center.getter();
  id v102 = (uint64_t)v143;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?(v99, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>);
  uint64_t v103 = objc_msgSend(self, sel_systemGreenColor);
  uint64_t v104 = MEMORY[0x1C8772490](v103);
  uint64_t v105 = (uint64_t)v152;
  ((void (*)(char *, void, uint64_t))v122)(v152, v149, v128);
  int v106 = (uint64_t)v145;
  id v107 = (uint64_t *)&v145[*(int *)(v144 + 36)];
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, Capsule>);
  outlined init with copy of VideoMessageControlsView(v105, (uint64_t)v107 + *(int *)(v108 + 52), MEMORY[0x1E4F3EE58]);
  *id v107 = v104;
  *(_WORD *)((char *)v107 + *(int *)(v108 + 56)) = 256;
  outlined init with copy of FeatureEligibility?(v102, v106, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  _s7SwiftUI7CapsuleVWOhTm_0(v105, MEMORY[0x1E4F3EE58]);
  outlined destroy of SystemUpdateNotice?(v102, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>);
  uint64_t v109 = v146;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v106, v146, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  uint64_t v110 = v142;
  outlined init with copy of FeatureEligibility?(v83, v142, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  uint64_t v111 = v148;
  outlined init with copy of FeatureEligibility?(v109, v148, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  uint64_t v112 = v147;
  outlined init with copy of FeatureEligibility?(v110, v147, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  Swift::Int v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>, ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>));
  outlined init with copy of FeatureEligibility?(v111, v112 + *(int *)(v113 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  outlined destroy of SystemUpdateNotice?(v109, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  outlined destroy of SystemUpdateNotice?(v83, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
  outlined destroy of SystemUpdateNotice?(v111, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _InsettableBackgroundShapeModifier<Color, Capsule>>);
  return outlined destroy of SystemUpdateNotice?(v110, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, Text)>>, _EnvironmentKeyWritingModifier<Color?>>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundModifier<_ShapeView<Capsule, HierarchicalShapeStyle>>>, _InsettableBackgroundShapeModifier<Material, Capsule>>, _EnvironmentKeyWritingModifier<ColorScheme>>);
}