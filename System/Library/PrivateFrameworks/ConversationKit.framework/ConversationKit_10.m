uint64_t dispatch thunk of LocalParticipantControlsView.hudRecipe.modify()
{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.spinnerView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.spinnerView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.spinnerView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hasInitializedShutterButton.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hasInitializedShutterButton.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hasInitializedShutterButton.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shutterButton.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shutterButton.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shutterButton.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.currentConstraints.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.currentConstraints.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.currentConstraints.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.style.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.style.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.style.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

unint64_t dispatch thunk of LocalParticipantControlsView.capabilities.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 552))();
  return v1 & 1 | ((unint64_t)(BYTE1(v1) & 1) << 8) | ((unint64_t)(BYTE2(v1) & 1) << 16) | ((unint64_t)(BYTE3(v1) & 1) << 24) | ((unint64_t)(BYTE4(v1) & 1) << 32) | ((unint64_t)(BYTE5(v1) & 1) << 40) | ((unint64_t)(BYTE6(v1) & 1) << 48);
}

uint64_t dispatch thunk of LocalParticipantControlsView.capabilities.setter(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x230))(a1 & 0x1010101010101);
}

uint64_t dispatch thunk of LocalParticipantControlsView.capabilities.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInComingCall.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInComingCall.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInComingCall.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.viewModel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.viewModel.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.viewModel.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.effectsSelected.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.effectsSelected.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.effectsSelected.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.blurEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.blurEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.blurEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.cinematicFramingIsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.cinematicFramingIsEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.cinematicFramingIsEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.reactionEffectGestureIsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.reactionEffectGestureIsEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.reactionEffectGestureIsEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.studioLightIsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.studioLightIsEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.studioLightIsEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isDisabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isDisabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isDisabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callAgainHUDViewIsHidden.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInSendingCallState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.needsVideoMessageControls.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldNotHaveVideoMessageControls.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldShowAllEffectsControls.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldShowOnlyCameraFlipPreRecording.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldHideCameraFlipDuringRecording.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessagingState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessagingState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessagingState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.$videoMessagingState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x350))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.$videoMessagingState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.$videoMessagingState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.subscriptions.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.subscriptions.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.subscriptions.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.timerSink.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.timerSink.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.timerSink.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.__allocating_init(viewModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 920))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.buttons(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.updateButtonUserInteraction(for:shouldHaveUserInteraction:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleEffectsTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCinematicFramingTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCameraBlurTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCollapseButtonTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleRotateButtonTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCameraFlipTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleReactionEffectGestureTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleStudioLightTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleVideoMessageButtonTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.showCallDetails()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x400))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callBack()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.close()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleShutterButtonTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x418))();
}

unsigned char *storeEnumTagSinglePayload for LocalParticipantControlsView.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3562F90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalParticipantControlsView.Style()
{
  return &type metadata for LocalParticipantControlsView.Style;
}

void *initializeBufferWithCopyOfBuffer for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_DWORD *)(a1 + 3) = *(_DWORD *)((char *)a2 + 3);
    *(_WORD *)(a1 + 7) = *(_WORD *)((char *)a2 + 7);
    uint64_t v5 = *(int *)(a3 + 28);
    unsigned int v6 = (void *)(a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = (int *)type metadata accessor for ConversationControlsRecipe();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(*((unsigned char *)v7 + 40))
      {
        case 0:
          long long v11 = *(_OWORD *)(v7 + 3);
          *(_OWORD *)(v6 + 3) = v11;
          (**(void (***)(void *, void *))(v11 - 8))(v6, v7);
          *((unsigned char *)v6 + 40) = 0;
          break;
        case 1:
          uint64_t v12 = v7[1];
          *unsigned int v6 = *v7;
          v6[1] = v12;
          char v13 = 1;
          goto LABEL_10;
        case 2:
          v14 = (void *)*v7;
          *unsigned int v6 = *v7;
          *((unsigned char *)v6 + 40) = 2;
          id v15 = v14;
          break;
        case 3:
          uint64_t v16 = v7[1];
          *unsigned int v6 = *v7;
          v6[1] = v16;
          char v13 = 3;
LABEL_10:
          *((unsigned char *)v6 + 40) = v13;
          swift_bridgeObjectRetain();
          break;
        case 5:
          *(_OWORD *)unsigned int v6 = *(_OWORD *)v7;
          *((unsigned char *)v6 + 40) = 5;
          swift_unknownObjectRetain();
          break;
        default:
          long long v17 = *((_OWORD *)v7 + 1);
          *(_OWORD *)unsigned int v6 = *(_OWORD *)v7;
          *((_OWORD *)v6 + 1) = v17;
          *(_OWORD *)((char *)v6 + 25) = *(_OWORD *)((char *)v7 + 25);
          break;
      }
      v18 = (void *)v7[7];
      v19 = (void *)v7[6];
      v6[6] = v19;
      id v20 = v19;
      if (v18)
      {
        v22 = (void *)v7[8];
        uint64_t v21 = v7[9];
        v6[7] = v18;
        v6[8] = v22;
        v6[9] = v21;
        id v23 = v18;
        id v24 = v22;
      }
      else
      {
        *(_OWORD *)(v6 + 7) = *(_OWORD *)(v7 + 7);
        v6[9] = v7[9];
      }
      v26 = (void *)v7[10];
      uint64_t v25 = v7[11];
      v6[10] = v26;
      v6[11] = v25;
      uint64_t v27 = v8[9];
      v28 = (char *)v6 + v27;
      v29 = (char *)v7 + v27;
      uint64_t v30 = type metadata accessor for AttributedString();
      id v31 = v26;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v33 = v8[10];
      v34 = (void *)((char *)v6 + v33);
      v35 = (char *)v7 + v33;
      v36 = *(void **)v35;
      if (*(void *)v35)
      {
        v38 = (void *)*((void *)v35 + 1);
        uint64_t v37 = *((void *)v35 + 2);
        void *v34 = v36;
        v34[1] = v38;
        v34[2] = v37;
        id v39 = v36;
        id v40 = v38;
      }
      else
      {
        *(_OWORD *)v34 = *(_OWORD *)v35;
        v34[2] = *((void *)v35 + 2);
      }
      *((unsigned char *)v6 + v8[11]) = *((unsigned char *)v7 + v8[11]);
      *((unsigned char *)v6 + v8[12]) = *((unsigned char *)v7 + v8[12]);
      *(void *)((char *)v6 + v8[13]) = *(void *)((char *)v7 + v8[13]);
      *(void *)((char *)v6 + v8[14]) = *(void *)((char *)v7 + v8[14]);
      uint64_t v41 = v8[15];
      v42 = (char *)v6 + v41;
      v43 = (char *)v7 + v41;
      uint64_t v44 = v43[40];
      if (v44 <= 0xFD)
      {
        uint64_t v46 = *((void *)v43 + 1);
        uint64_t v69 = *(void *)v43;
        uint64_t v47 = *((void *)v43 + 2);
        uint64_t v48 = *((void *)v43 + 3);
        uint64_t v49 = *((void *)v43 + 4);
        outlined copy of ConversationControlsRecipe.Actions(*(void *)v43, v46, v47, v48, v49, v44);
        *(void *)v42 = v69;
        *((void *)v42 + 1) = v46;
        *((void *)v42 + 2) = v47;
        *((void *)v42 + 3) = v48;
        *((void *)v42 + 4) = v49;
        v42[40] = v44;
      }
      else
      {
        long long v45 = *((_OWORD *)v43 + 1);
        *(_OWORD *)v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v45;
        *(_OWORD *)(v42 + 25) = *(_OWORD *)(v43 + 25);
      }
      *((unsigned char *)v6 + v8[16]) = *((unsigned char *)v7 + v8[16]);
      uint64_t v50 = v8[17];
      v51 = (char *)v6 + v50;
      v52 = (char *)v7 + v50;
      int v53 = v52[16];
      if (v53 == 255)
      {
        *(_OWORD *)v51 = *(_OWORD *)v52;
        v51[16] = v52[16];
      }
      else
      {
        char v54 = v53 & 1;
        uint64_t v55 = *(void *)v52;
        uint64_t v56 = *((void *)v52 + 1);
        outlined copy of PreCallControlsContext(*(id *)v52);
        *(void *)v51 = v55;
        *((void *)v51 + 1) = v56;
        v51[16] = v54;
      }
      uint64_t v57 = v8[18];
      v58 = (void *)((char *)v6 + v57);
      v59 = (char *)v7 + v57;
      v60 = *(void **)((char *)v7 + v57);
      if (v60 == (void *)1)
      {
        memcpy(v58, v59, 0x49uLL);
      }
      else
      {
        uint64_t v61 = *((void *)v59 + 1);
        void *v58 = v60;
        v58[1] = v61;
        long long v67 = *((_OWORD *)v59 + 1);
        long long v68 = *((_OWORD *)v59 + 2);
        *((_OWORD *)v58 + 1) = v67;
        *((_OWORD *)v58 + 2) = v68;
        long long v70 = *((_OWORD *)v59 + 3);
        *((_OWORD *)v58 + 3) = v70;
        v58[8] = *((void *)v59 + 8);
        *((unsigned char *)v58 + 72) = v59[72];
        id v62 = v60;
        id v63 = (id)v67;
        id v64 = (id)v68;
        id v65 = (id)v70;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
    }
  }
  return v3;
}

void destroy for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  int v3 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (!__swift_getEnumTagSinglePayload(v2, 1, (uint64_t)v3))
  {
    switch(*(unsigned char *)(v2 + 40))
    {
      case 0:
        __swift_destroy_boxed_opaque_existential_1(v2);
        break;
      case 1:
      case 3:
        swift_bridgeObjectRelease();
        break;
      case 2:

        break;
      case 5:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }

    int v4 = *(void **)(v2 + 56);
    if (v4)
    {
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v2 + v3[9];
    uint64_t v6 = type metadata accessor for AttributedString();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
    v7 = (id *)(v2 + v3[10]);
    if (*v7)
    {
    }
    uint64_t v8 = v2 + v3[15];
    uint64_t v9 = *(unsigned __int8 *)(v8 + 40);
    if (v9 <= 0xFD) {
      outlined consume of ConversationControlsRecipe.Actions(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), v9);
    }
    uint64_t v10 = v2 + v3[17];
    if (*(unsigned __int8 *)(v10 + 16) != 255) {
      outlined consume of PreCallControlsContext(*(id *)v10);
    }
    uint64_t v11 = v2 + v3[18];
    if (*(void *)v11 != 1)
    {

      uint64_t v12 = *(void **)(v11 + 48);
    }
  }
}

uint64_t initializeWithCopy for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 3) = *(_DWORD *)(a2 + 3);
  *(_WORD *)(a1 + 7) = *(_WORD *)(a2 + 7);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  v7 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    switch(*((unsigned char *)v6 + 40))
    {
      case 0:
        long long v9 = *(_OWORD *)(v6 + 3);
        *(_OWORD *)(v5 + 3) = v9;
        (**(void (***)(void *, void *))(v9 - 8))(v5, v6);
        *((unsigned char *)v5 + 40) = 0;
        break;
      case 1:
        uint64_t v10 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v10;
        char v11 = 1;
        goto LABEL_8;
      case 2:
        uint64_t v12 = (void *)*v6;
        *uint64_t v5 = *v6;
        *((unsigned char *)v5 + 40) = 2;
        id v13 = v12;
        break;
      case 3:
        uint64_t v14 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v14;
        char v11 = 3;
LABEL_8:
        *((unsigned char *)v5 + 40) = v11;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
        *((unsigned char *)v5 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v15 = *((_OWORD *)v6 + 1);
        *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
        *((_OWORD *)v5 + 1) = v15;
        *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)((char *)v6 + 25);
        break;
    }
    uint64_t v16 = (void *)v6[7];
    long long v17 = (void *)v6[6];
    v5[6] = v17;
    id v18 = v17;
    if (v16)
    {
      id v20 = (void *)v6[8];
      uint64_t v19 = v6[9];
      v5[7] = v16;
      v5[8] = v20;
      v5[9] = v19;
      id v21 = v16;
      id v22 = v20;
    }
    else
    {
      *(_OWORD *)(v5 + 7) = *(_OWORD *)(v6 + 7);
      v5[9] = v6[9];
    }
    id v23 = (void *)v6[10];
    uint64_t v24 = v6[11];
    v5[10] = v23;
    v5[11] = v24;
    uint64_t v25 = v7[9];
    v26 = (char *)v5 + v25;
    uint64_t v27 = (char *)v6 + v25;
    uint64_t v28 = type metadata accessor for AttributedString();
    id v29 = v23;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v31 = v7[10];
    uint64_t v32 = (void *)((char *)v5 + v31);
    uint64_t v33 = (char *)v6 + v31;
    v34 = *(void **)v33;
    if (*(void *)v33)
    {
      v36 = (void *)*((void *)v33 + 1);
      uint64_t v35 = *((void *)v33 + 2);
      *uint64_t v32 = v34;
      v32[1] = v36;
      v32[2] = v35;
      id v37 = v34;
      id v38 = v36;
    }
    else
    {
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      v32[2] = *((void *)v33 + 2);
    }
    *((unsigned char *)v5 + v7[11]) = *((unsigned char *)v6 + v7[11]);
    *((unsigned char *)v5 + v7[12]) = *((unsigned char *)v6 + v7[12]);
    *(void *)((char *)v5 + v7[13]) = *(void *)((char *)v6 + v7[13]);
    *(void *)((char *)v5 + v7[14]) = *(void *)((char *)v6 + v7[14]);
    uint64_t v39 = v7[15];
    id v40 = (char *)v5 + v39;
    uint64_t v41 = (char *)v6 + v39;
    uint64_t v42 = v41[40];
    if (v42 <= 0xFD)
    {
      uint64_t v44 = *(void *)v41;
      uint64_t v45 = *((void *)v41 + 1);
      uint64_t v68 = v3;
      uint64_t v46 = *((void *)v41 + 2);
      uint64_t v47 = *((void *)v41 + 3);
      uint64_t v48 = *((void *)v41 + 4);
      outlined copy of ConversationControlsRecipe.Actions(*(void *)v41, v45, v46, v47, v48, v42);
      *(void *)id v40 = v44;
      *((void *)v40 + 1) = v45;
      *((void *)v40 + 2) = v46;
      *((void *)v40 + 3) = v47;
      uint64_t v3 = v68;
      *((void *)v40 + 4) = v48;
      v40[40] = v42;
    }
    else
    {
      long long v43 = *((_OWORD *)v41 + 1);
      *(_OWORD *)id v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v43;
      *(_OWORD *)(v40 + 25) = *(_OWORD *)(v41 + 25);
    }
    *((unsigned char *)v5 + v7[16]) = *((unsigned char *)v6 + v7[16]);
    uint64_t v49 = v7[17];
    uint64_t v50 = (char *)v5 + v49;
    v51 = (char *)v6 + v49;
    int v52 = v51[16];
    if (v52 == 255)
    {
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      v50[16] = v51[16];
    }
    else
    {
      char v53 = v52 & 1;
      uint64_t v54 = *(void *)v51;
      uint64_t v55 = *((void *)v51 + 1);
      outlined copy of PreCallControlsContext(*(id *)v51);
      *(void *)uint64_t v50 = v54;
      *((void *)v50 + 1) = v55;
      v50[16] = v53;
    }
    uint64_t v56 = v7[18];
    uint64_t v57 = (void *)((char *)v5 + v56);
    v58 = (char *)v6 + v56;
    v59 = *(void **)((char *)v6 + v56);
    if (v59 == (void *)1)
    {
      memcpy(v57, v58, 0x49uLL);
    }
    else
    {
      uint64_t v60 = *((void *)v58 + 1);
      *uint64_t v57 = v59;
      v57[1] = v60;
      long long v66 = *((_OWORD *)v58 + 1);
      long long v67 = *((_OWORD *)v58 + 2);
      *((_OWORD *)v57 + 1) = v66;
      *((_OWORD *)v57 + 2) = v67;
      long long v69 = *((_OWORD *)v58 + 3);
      *((_OWORD *)v57 + 3) = v69;
      v57[8] = *((void *)v58 + 8);
      *((unsigned char *)v57 + 72) = v58[72];
      id v61 = v59;
      id v62 = (id)v66;
      id v63 = (id)v67;
      id v64 = (id)v69;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  return v3;
}

unsigned char *assignWithCopy for LocalParticipantControlsView.ViewModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (uint64_t)&a1[v5];
  uint64_t v7 = (uint64_t)&a2[v5];
  uint64_t v8 = (int *)type metadata accessor for ConversationControlsRecipe();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, (uint64_t)v8);
  int v10 = __swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8);
  if (!EnumTagSinglePayload)
  {
    if (v10)
    {
      outlined destroy of LocalParticipantControlsView.ViewModel(v6, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      outlined destroy of ConversationControlsType(v6);
      switch(*(unsigned char *)(v7 + 40))
      {
        case 0:
          uint64_t v15 = *(void *)(v7 + 24);
          *(void *)(v6 + 24) = v15;
          *(void *)(v6 + 32) = *(void *)(v7 + 32);
          (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v6, v7);
          *(unsigned char *)(v6 + 40) = 0;
          break;
        case 1:
          *(void *)uint64_t v6 = *(void *)v7;
          *(void *)(v6 + 8) = *(void *)(v7 + 8);
          char v72 = 1;
          goto LABEL_41;
        case 2:
          v73 = *(void **)v7;
          *(void *)uint64_t v6 = *(void *)v7;
          *(unsigned char *)(v6 + 40) = 2;
          id v74 = v73;
          break;
        case 3:
          *(void *)uint64_t v6 = *(void *)v7;
          *(void *)(v6 + 8) = *(void *)(v7 + 8);
          char v72 = 3;
LABEL_41:
          *(unsigned char *)(v6 + 40) = v72;
          swift_bridgeObjectRetain();
          break;
        case 5:
          *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
          *(unsigned char *)(v6 + 40) = 5;
          swift_unknownObjectRetain();
          break;
        default:
          long long v75 = *(_OWORD *)v7;
          long long v76 = *(_OWORD *)(v7 + 16);
          *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
          *(_OWORD *)uint64_t v6 = v75;
          *(_OWORD *)(v6 + 16) = v76;
          break;
      }
    }
    v77 = *(void **)(v6 + 48);
    v78 = *(void **)(v7 + 48);
    *(void *)(v6 + 48) = v78;
    id v79 = v78;

    v80 = (_OWORD *)(v6 + 56);
    v81 = *(void **)(v6 + 56);
    v83 = (_OWORD *)(v7 + 56);
    v82 = *(void **)(v7 + 56);
    if (v81)
    {
      if (v82)
      {
        *(void *)(v6 + 56) = v82;
        id v84 = v82;

        v85 = *(void **)(v6 + 64);
        v86 = *(void **)(v7 + 64);
        *(void *)(v6 + 64) = v86;
        id v87 = v86;

        *(void *)(v6 + 72) = *(void *)(v7 + 72);
      }
      else
      {
        outlined destroy of ConversationControlsRecipe.View(v6 + 56);
        uint64_t v91 = *(void *)(v7 + 72);
        _OWORD *v80 = *v83;
        *(void *)(v6 + 72) = v91;
      }
    }
    else if (v82)
    {
      *(void *)(v6 + 56) = v82;
      v88 = *(void **)(v7 + 64);
      *(void *)(v6 + 64) = v88;
      *(void *)(v6 + 72) = *(void *)(v7 + 72);
      id v89 = v82;
      id v90 = v88;
    }
    else
    {
      long long v92 = *v83;
      *(void *)(v6 + 72) = *(void *)(v7 + 72);
      _OWORD *v80 = v92;
    }
    v93 = *(void **)(v7 + 80);
    v94 = *(void **)(v6 + 80);
    *(void *)(v6 + 80) = v93;
    id v95 = v93;

    *(void *)(v6 + 88) = *(void *)(v7 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v96 = v8[9];
    v97 = (void *)(v6 + v96);
    v98 = (const void *)(v7 + v96);
    uint64_t v99 = type metadata accessor for AttributedString();
    int v100 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v99);
    int v101 = __swift_getEnumTagSinglePayload((uint64_t)v98, 1, v99);
    if (v100)
    {
      if (!v101)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
        __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v99);
LABEL_57:
        uint64_t v104 = v8[10];
        v105 = (void *)(v6 + v104);
        v106 = (long long *)(v7 + v104);
        v107 = *(void **)(v6 + v104);
        v108 = *(void **)(v7 + v104);
        if (v107)
        {
          if (v108)
          {
            void *v105 = v108;
            id v109 = v108;

            v110 = (void *)v105[1];
            v111 = (void *)*((void *)v106 + 1);
            v105[1] = v111;
            id v112 = v111;

            uint64_t v113 = *((void *)v106 + 2);
          }
          else
          {
            outlined destroy of ConversationControlsRecipe.View((uint64_t)v105);
            uint64_t v113 = *((void *)v106 + 2);
            *(_OWORD *)v105 = *v106;
          }
          v105[2] = v113;
        }
        else if (v108)
        {
          void *v105 = v108;
          v114 = (void *)*((void *)v106 + 1);
          v105[1] = v114;
          v105[2] = *((void *)v106 + 2);
          id v115 = v108;
          id v116 = v114;
        }
        else
        {
          long long v179 = *v106;
          v105[2] = *((void *)v106 + 2);
          *(_OWORD *)v105 = v179;
        }
        *(unsigned char *)(v6 + v8[11]) = *(unsigned char *)(v7 + v8[11]);
        *(unsigned char *)(v6 + v8[12]) = *(unsigned char *)(v7 + v8[12]);
        *(void *)(v6 + v8[13]) = *(void *)(v7 + v8[13]);
        *(void *)(v6 + v8[14]) = *(void *)(v7 + v8[14]);
        uint64_t v117 = v8[15];
        uint64_t v118 = v6 + v117;
        v119 = (uint64_t *)(v7 + v117);
        uint64_t v120 = *(unsigned __int8 *)(v7 + v117 + 40);
        if (*(unsigned __int8 *)(v6 + v117 + 40) <= 0xFDu)
        {
          if (v120 <= 0xFD)
          {
            uint64_t v130 = v119[1];
            v187 = v8;
            uint64_t v131 = v119[2];
            uint64_t v132 = v119[3];
            uint64_t v133 = v119[4];
            uint64_t v134 = *v119;
            outlined copy of ConversationControlsRecipe.Actions(v134, v130, v131, v132, v133, v120);
            uint64_t v135 = *(void *)v118;
            uint64_t v136 = *(void *)(v118 + 8);
            uint64_t v137 = *(void *)(v118 + 16);
            uint64_t v138 = *(void *)(v118 + 24);
            uint64_t v139 = *(void *)(v118 + 32);
            *(void *)uint64_t v118 = v134;
            *(void *)(v118 + 8) = v130;
            *(void *)(v118 + 16) = v131;
            *(void *)(v118 + 24) = v132;
            uint64_t v8 = v187;
            *(void *)(v118 + 32) = v133;
            uint64_t v140 = *(unsigned __int8 *)(v118 + 40);
            *(unsigned char *)(v118 + 40) = v120;
            outlined consume of ConversationControlsRecipe.Actions(v135, v136, v137, v138, v139, v140);
          }
          else
          {
            outlined destroy of ConversationControlsRecipe.Actions(v118);
            long long v123 = *(_OWORD *)((char *)v119 + 25);
            long long v124 = *((_OWORD *)v119 + 1);
            *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
            *(_OWORD *)(v118 + 16) = v124;
            *(_OWORD *)(v118 + 25) = v123;
          }
        }
        else if (v120 <= 0xFD)
        {
          uint64_t v125 = v119[1];
          v186 = v8;
          uint64_t v126 = v119[2];
          uint64_t v127 = v119[3];
          uint64_t v128 = v119[4];
          uint64_t v129 = *v119;
          outlined copy of ConversationControlsRecipe.Actions(v129, v125, v126, v127, v128, v120);
          *(void *)uint64_t v118 = v129;
          *(void *)(v118 + 8) = v125;
          *(void *)(v118 + 16) = v126;
          *(void *)(v118 + 24) = v127;
          uint64_t v8 = v186;
          *(void *)(v118 + 32) = v128;
          *(unsigned char *)(v118 + 40) = v120;
        }
        else
        {
          long long v121 = *(_OWORD *)v119;
          long long v122 = *((_OWORD *)v119 + 1);
          *(_OWORD *)(v118 + 25) = *(_OWORD *)((char *)v119 + 25);
          *(_OWORD *)uint64_t v118 = v121;
          *(_OWORD *)(v118 + 16) = v122;
        }
        *(unsigned char *)(v6 + v8[16]) = *(unsigned char *)(v7 + v8[16]);
        uint64_t v141 = v8[17];
        uint64_t v142 = v6 + v141;
        v143 = (long long *)(v7 + v141);
        int v144 = *(unsigned __int8 *)(v6 + v141 + 16);
        int v145 = *(unsigned __int8 *)(v7 + v141 + 16);
        if (v144 == 255)
        {
          if (v145 == 255)
          {
            long long v147 = *v143;
            *(unsigned char *)(v142 + 16) = *((unsigned char *)v143 + 16);
            *(_OWORD *)uint64_t v142 = v147;
          }
          else
          {
            char v152 = v145 & 1;
            uint64_t v153 = *(void *)v143;
            uint64_t v154 = *((void *)v143 + 1);
            outlined copy of PreCallControlsContext(*(id *)v143);
            *(void *)uint64_t v142 = v153;
            *(void *)(v142 + 8) = v154;
            *(unsigned char *)(v142 + 16) = v152;
          }
        }
        else if (v145 == 255)
        {
          outlined destroy of LeadingViewType(v142);
          char v146 = *((unsigned char *)v143 + 16);
          *(_OWORD *)uint64_t v142 = *v143;
          *(unsigned char *)(v142 + 16) = v146;
        }
        else
        {
          char v148 = v145 & 1;
          id v149 = *(id *)v143;
          uint64_t v150 = *((void *)v143 + 1);
          outlined copy of PreCallControlsContext(*(id *)v143);
          v151 = *(void **)v142;
          *(void *)uint64_t v142 = v149;
          *(void *)(v142 + 8) = v150;
          *(unsigned char *)(v142 + 16) = v148;
          outlined consume of PreCallControlsContext(v151);
        }
        uint64_t v155 = v8[18];
        uint64_t v156 = v6 + v155;
        v157 = (void *)(v7 + v155);
        v158 = *(void **)v156;
        v159 = (void *)*v157;
        if (*(void *)v156 == 1)
        {
          if (v159 != (void *)1)
          {
            uint64_t v160 = v157[1];
            *(void *)uint64_t v156 = v159;
            *(void *)(v156 + 8) = v160;
            long long v181 = *((_OWORD *)v157 + 1);
            *(_OWORD *)(v156 + 16) = v181;
            long long v183 = *((_OWORD *)v157 + 2);
            *(_OWORD *)(v156 + 32) = v183;
            long long v188 = *((_OWORD *)v157 + 3);
            *(_OWORD *)(v156 + 48) = v188;
            *(void *)(v156 + 64) = v157[8];
            *(unsigned char *)(v156 + 72) = *((unsigned char *)v157 + 72);
            id v161 = v159;
            id v162 = (id)v181;
            id v163 = (id)v183;
            id v164 = (id)v188;
            return a1;
          }
        }
        else
        {
          if (v159 != (void *)1)
          {
            uint64_t v165 = v157[1];
            *(void *)uint64_t v156 = v159;
            id v166 = v159;

            *(void *)(v156 + 8) = v165;
            v167 = (void *)v157[2];
            uint64_t v168 = v157[3];
            v169 = *(void **)(v156 + 16);
            *(void *)(v156 + 16) = v167;
            id v170 = v167;

            *(void *)(v156 + 24) = v168;
            v171 = (void *)v157[4];
            uint64_t v172 = v157[5];
            v173 = *(void **)(v156 + 32);
            *(void *)(v156 + 32) = v171;
            id v174 = v171;

            *(void *)(v156 + 40) = v172;
            v175 = (void *)v157[6];
            uint64_t v176 = v157[7];
            v177 = *(void **)(v156 + 48);
            *(void *)(v156 + 48) = v175;
            id v178 = v175;

            *(void *)(v156 + 56) = v176;
            *(void *)(v156 + 64) = v157[8];
            *(unsigned char *)(v156 + 72) = *((unsigned char *)v157 + 72);
            return a1;
          }
          outlined destroy of SystemApertureElement(v156);
        }
        id v13 = (void *)v156;
        uint64_t v14 = v157;
        size_t v12 = 73;
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v102 = *(void *)(v99 - 8);
      if (!v101)
      {
        (*(void (**)(void *, const void *, uint64_t))(v102 + 24))(v97, v98, v99);
        goto LABEL_57;
      }
      (*(void (**)(void *, uint64_t))(v102 + 8))(v97, v99);
    }
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v97, v98, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_57;
  }
  if (v10)
  {
LABEL_7:
    size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                                - 8)
                    + 64);
    id v13 = (void *)v6;
    uint64_t v14 = (const void *)v7;
LABEL_8:
    memcpy(v13, v14, v12);
    return a1;
  }
  switch(*(unsigned char *)(v7 + 40))
  {
    case 0:
      uint64_t v11 = *(void *)(v7 + 24);
      *(void *)(v6 + 24) = v11;
      *(void *)(v6 + 32) = *(void *)(v7 + 32);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v6, v7);
      *(unsigned char *)(v6 + 40) = 0;
      break;
    case 1:
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = *(void *)(v7 + 8);
      char v16 = 1;
      goto LABEL_15;
    case 2:
      long long v17 = *(void **)v7;
      *(void *)uint64_t v6 = *(void *)v7;
      *(unsigned char *)(v6 + 40) = 2;
      id v18 = v17;
      break;
    case 3:
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = *(void *)(v7 + 8);
      char v16 = 3;
LABEL_15:
      *(unsigned char *)(v6 + 40) = v16;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
      *(unsigned char *)(v6 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      long long v19 = *(_OWORD *)v7;
      long long v20 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
      *(_OWORD *)uint64_t v6 = v19;
      *(_OWORD *)(v6 + 16) = v20;
      break;
  }
  id v21 = *(void **)(v7 + 48);
  *(void *)(v6 + 48) = v21;
  id v22 = *(void **)(v7 + 56);
  id v23 = v21;
  if (v22)
  {
    *(void *)(v6 + 56) = v22;
    uint64_t v24 = *(void **)(v7 + 64);
    *(void *)(v6 + 64) = v24;
    *(void *)(v6 + 72) = *(void *)(v7 + 72);
    id v25 = v22;
    id v26 = v24;
  }
  else
  {
    long long v27 = *(_OWORD *)(v7 + 56);
    *(void *)(v6 + 72) = *(void *)(v7 + 72);
    *(_OWORD *)(v6 + 56) = v27;
  }
  uint64_t v28 = *(void **)(v7 + 80);
  *(void *)(v6 + 80) = v28;
  *(void *)(v6 + 88) = *(void *)(v7 + 88);
  uint64_t v29 = v8[9];
  uint64_t v30 = (void *)(v6 + v29);
  uint64_t v31 = (const void *)(v7 + v29);
  uint64_t v32 = type metadata accessor for AttributedString();
  id v33 = v28;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v35 = v8[10];
  v36 = (void *)(v6 + v35);
  id v37 = (long long *)(v7 + v35);
  id v38 = *(void **)v37;
  if (*(void *)v37)
  {
    void *v36 = v38;
    uint64_t v39 = (void *)*((void *)v37 + 1);
    v36[1] = v39;
    v36[2] = *((void *)v37 + 2);
    id v40 = v38;
    id v41 = v39;
  }
  else
  {
    long long v42 = *v37;
    v36[2] = *((void *)v37 + 2);
    *(_OWORD *)v36 = v42;
  }
  *(unsigned char *)(v6 + v8[11]) = *(unsigned char *)(v7 + v8[11]);
  *(unsigned char *)(v6 + v8[12]) = *(unsigned char *)(v7 + v8[12]);
  *(void *)(v6 + v8[13]) = *(void *)(v7 + v8[13]);
  *(void *)(v6 + v8[14]) = *(void *)(v7 + v8[14]);
  uint64_t v43 = v8[15];
  uint64_t v44 = v6 + v43;
  uint64_t v45 = (uint64_t *)(v7 + v43);
  uint64_t v46 = *((unsigned __int8 *)v45 + 40);
  if (v46 <= 0xFD)
  {
    uint64_t v49 = *v45;
    uint64_t v50 = v45[1];
    v184 = v8;
    uint64_t v51 = v45[2];
    uint64_t v52 = v45[3];
    uint64_t v53 = v45[4];
    outlined copy of ConversationControlsRecipe.Actions(*v45, v50, v51, v52, v53, v46);
    *(void *)uint64_t v44 = v49;
    *(void *)(v44 + 8) = v50;
    *(void *)(v44 + 16) = v51;
    *(void *)(v44 + 24) = v52;
    uint64_t v8 = v184;
    *(void *)(v44 + 32) = v53;
    *(unsigned char *)(v44 + 40) = v46;
  }
  else
  {
    long long v47 = *(_OWORD *)v45;
    long long v48 = *((_OWORD *)v45 + 1);
    *(_OWORD *)(v44 + 25) = *(_OWORD *)((char *)v45 + 25);
    *(_OWORD *)uint64_t v44 = v47;
    *(_OWORD *)(v44 + 16) = v48;
  }
  *(unsigned char *)(v6 + v8[16]) = *(unsigned char *)(v7 + v8[16]);
  uint64_t v54 = v8[17];
  uint64_t v55 = v6 + v54;
  uint64_t v56 = (long long *)(v7 + v54);
  int v57 = *((unsigned __int8 *)v56 + 16);
  if (v57 == 255)
  {
    long long v58 = *v56;
    *(unsigned char *)(v55 + 16) = *((unsigned char *)v56 + 16);
    *(_OWORD *)uint64_t v55 = v58;
  }
  else
  {
    char v59 = v57 & 1;
    uint64_t v60 = *(void *)v56;
    uint64_t v61 = *((void *)v56 + 1);
    outlined copy of PreCallControlsContext(*(id *)v56);
    *(void *)uint64_t v55 = v60;
    *(void *)(v55 + 8) = v61;
    *(unsigned char *)(v55 + 16) = v59;
  }
  uint64_t v62 = v8[18];
  id v63 = (void *)(v6 + v62);
  uint64_t v64 = v7 + v62;
  id v65 = *(void **)(v7 + v62);
  if (v65 == (void *)1)
  {
    memcpy(v63, (const void *)v64, 0x49uLL);
  }
  else
  {
    uint64_t v66 = *(void *)(v64 + 8);
    *id v63 = v65;
    v63[1] = v66;
    long long v180 = *(_OWORD *)(v64 + 16);
    *((_OWORD *)v63 + 1) = v180;
    long long v182 = *(_OWORD *)(v64 + 32);
    *((_OWORD *)v63 + 2) = v182;
    long long v185 = *(_OWORD *)(v64 + 48);
    *((_OWORD *)v63 + 3) = v185;
    v63[8] = *(void *)(v64 + 64);
    *((unsigned char *)v63 + 72) = *(unsigned char *)(v64 + 72);
    id v67 = v65;
    id v68 = (id)v180;
    id v69 = (id)v182;
    id v70 = (id)v185;
  }
  __swift_storeEnumTagSinglePayload(v6, 0, 1, (uint64_t)v8);
  return a1;
}

uint64_t initializeWithTake for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 3) = *(_DWORD *)(a2 + 3);
  *(_WORD *)(a1 + 7) = *(_WORD *)(a2 + 7);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  uint64_t v6 = (_OWORD *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v9;
    *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)((char *)v6 + 25);
    *((void *)v5 + 6) = *((void *)v6 + 6);
    *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
    *(_OWORD *)((char *)v5 + 72) = *(_OWORD *)((char *)v6 + 72);
    *((void *)v5 + 11) = *((void *)v6 + 11);
    uint64_t v10 = v7[9];
    uint64_t v11 = (char *)v5 + v10;
    size_t v12 = (char *)v6 + v10;
    uint64_t v13 = type metadata accessor for AttributedString();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v15 = v7[10];
    char v16 = (char *)v5 + v15;
    long long v17 = (char *)v6 + v15;
    *(_OWORD *)char v16 = *(_OWORD *)v17;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *((unsigned char *)v5 + v7[11]) = *((unsigned char *)v6 + v7[11]);
    *((unsigned char *)v5 + v7[12]) = *((unsigned char *)v6 + v7[12]);
    *(void *)((char *)v5 + v7[13]) = *(void *)((char *)v6 + v7[13]);
    *(void *)((char *)v5 + v7[14]) = *(void *)((char *)v6 + v7[14]);
    uint64_t v18 = v7[15];
    long long v19 = (_OWORD *)((char *)v5 + v18);
    long long v20 = (_OWORD *)((char *)v6 + v18);
    long long v21 = v20[1];
    _OWORD *v19 = *v20;
    v19[1] = v21;
    *(_OWORD *)((char *)v19 + 25) = *(_OWORD *)((char *)v20 + 25);
    *((unsigned char *)v5 + v7[16]) = *((unsigned char *)v6 + v7[16]);
    uint64_t v22 = v7[17];
    id v23 = (char *)v5 + v22;
    uint64_t v24 = (char *)v6 + v22;
    v23[16] = v24[16];
    *(_OWORD *)id v23 = *(_OWORD *)v24;
    memcpy((char *)v5 + v7[18], (char *)v6 + v7[18], 0x49uLL);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  return a1;
}

unsigned char *assignWithTake for LocalParticipantControlsView.ViewModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (uint64_t)&a1[v5];
  uint64_t v7 = (uint64_t)&a2[v5];
  uint64_t v8 = (int *)type metadata accessor for ConversationControlsRecipe();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, (uint64_t)v8);
  int v10 = __swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8);
  if (!EnumTagSinglePayload)
  {
    if (v10)
    {
      outlined destroy of LocalParticipantControlsView.ViewModel(v6, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      outlined destroy of ConversationControlsType(v6);
      long long v20 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
      *(_OWORD *)(v6 + 16) = v20;
      *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
    }
    long long v21 = *(void **)(v6 + 48);
    *(void *)(v6 + 48) = *(void *)(v7 + 48);

    uint64_t v22 = *(void **)(v6 + 56);
    uint64_t v23 = *(void *)(v7 + 56);
    if (v22)
    {
      if (v23)
      {
        *(void *)(v6 + 56) = v23;

        uint64_t v24 = *(void **)(v6 + 64);
        *(void *)(v6 + 64) = *(void *)(v7 + 64);

        *(void *)(v6 + 72) = *(void *)(v7 + 72);
        goto LABEL_19;
      }
      outlined destroy of ConversationControlsRecipe.View(v6 + 56);
    }
    *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
    *(void *)(v6 + 72) = *(void *)(v7 + 72);
LABEL_19:
    v36 = *(void **)(v6 + 80);
    *(void *)(v6 + 80) = *(void *)(v7 + 80);

    *(void *)(v6 + 88) = *(void *)(v7 + 88);
    swift_bridgeObjectRelease();
    uint64_t v37 = v8[9];
    id v38 = (void *)(v6 + v37);
    uint64_t v39 = (const void *)(v7 + v37);
    uint64_t v40 = type metadata accessor for AttributedString();
    int v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40);
    int v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v43 = *(void *)(v40 - 8);
      if (!v42)
      {
        (*(void (**)(void *, const void *, uint64_t))(v43 + 40))(v38, v39, v40);
LABEL_25:
        uint64_t v45 = v8[10];
        uint64_t v46 = (void *)(v6 + v45);
        long long v47 = (void *)(v7 + v45);
        long long v48 = *(void **)(v6 + v45);
        if (v48)
        {
          if (*v47)
          {
            *uint64_t v46 = *v47;

            uint64_t v49 = (void *)v46[1];
            v46[1] = v47[1];

            goto LABEL_30;
          }
          outlined destroy of ConversationControlsRecipe.View((uint64_t)v46);
        }
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
LABEL_30:
        v46[2] = v47[2];
        *(unsigned char *)(v6 + v8[11]) = *(unsigned char *)(v7 + v8[11]);
        *(unsigned char *)(v6 + v8[12]) = *(unsigned char *)(v7 + v8[12]);
        *(void *)(v6 + v8[13]) = *(void *)(v7 + v8[13]);
        *(void *)(v6 + v8[14]) = *(void *)(v7 + v8[14]);
        uint64_t v50 = v8[15];
        uint64_t v51 = v6 + v50;
        uint64_t v52 = v7 + v50;
        uint64_t v53 = *(unsigned __int8 *)(v6 + v50 + 40);
        if (v53 <= 0xFD)
        {
          unsigned int v54 = *(unsigned __int8 *)(v52 + 40);
          if (v54 <= 0xFD)
          {
            uint64_t v56 = *(void *)(v52 + 32);
            uint64_t v57 = *(void *)v51;
            uint64_t v58 = *(void *)(v51 + 8);
            uint64_t v59 = *(void *)(v51 + 16);
            uint64_t v60 = *(void *)(v51 + 24);
            uint64_t v61 = *(void *)(v51 + 32);
            long long v62 = *(_OWORD *)(v52 + 16);
            *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
            *(_OWORD *)(v51 + 16) = v62;
            *(void *)(v51 + 32) = v56;
            *(unsigned char *)(v51 + 40) = v54;
            outlined consume of ConversationControlsRecipe.Actions(v57, v58, v59, v60, v61, v53);
LABEL_35:
            *(unsigned char *)(v6 + v8[16]) = *(unsigned char *)(v7 + v8[16]);
            uint64_t v63 = v8[17];
            uint64_t v64 = v6 + v63;
            uint64_t v65 = v7 + v63;
            if (*(unsigned __int8 *)(v6 + v63 + 16) != 255)
            {
              int v66 = *(unsigned __int8 *)(v65 + 16);
              if (v66 != 255)
              {
                id v67 = *(void **)v64;
                *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
                *(unsigned char *)(v64 + 16) = v66 & 1;
                outlined consume of PreCallControlsContext(v67);
                goto LABEL_40;
              }
              outlined destroy of LeadingViewType(v64);
            }
            *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
            *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
LABEL_40:
            uint64_t v68 = v8[18];
            uint64_t v69 = v6 + v68;
            id v70 = (void *)(v7 + v68);
            v71 = *(void **)v69;
            if (*(void *)v69 != 1)
            {
              if (*v70 != 1)
              {
                uint64_t v72 = v70[1];
                *(void *)uint64_t v69 = *v70;

                uint64_t v73 = v70[2];
                uint64_t v74 = v70[3];
                long long v75 = *(void **)(v69 + 16);
                *(void *)(v69 + 8) = v72;
                *(void *)(v69 + 16) = v73;

                uint64_t v76 = v70[4];
                uint64_t v77 = v70[5];
                v78 = *(void **)(v69 + 32);
                *(void *)(v69 + 24) = v74;
                *(void *)(v69 + 32) = v76;

                uint64_t v79 = v70[6];
                uint64_t v80 = v70[7];
                v81 = *(void **)(v69 + 48);
                *(void *)(v69 + 40) = v77;
                *(void *)(v69 + 48) = v79;

                uint64_t v82 = v70[8];
                *(void *)(v69 + 56) = v80;
                *(void *)(v69 + 64) = v82;
                *(unsigned char *)(v69 + 72) = *((unsigned char *)v70 + 72);
                return a1;
              }
              outlined destroy of SystemApertureElement(v69);
            }
            uint64_t v18 = (void *)v69;
            long long v19 = v70;
            size_t v17 = 73;
            goto LABEL_8;
          }
          outlined destroy of ConversationControlsRecipe.Actions(v51);
        }
        long long v55 = *(_OWORD *)(v52 + 16);
        *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
        *(_OWORD *)(v51 + 16) = v55;
        *(_OWORD *)(v51 + 25) = *(_OWORD *)(v52 + 25);
        goto LABEL_35;
      }
      (*(void (**)(void *, uint64_t))(v43 + 8))(v38, v40);
    }
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                                - 8)
                    + 64);
    uint64_t v18 = (void *)v6;
    long long v19 = (const void *)v7;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  long long v11 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_OWORD *)(v6 + 16) = v11;
  *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
  *(void *)(v6 + 48) = *(void *)(v7 + 48);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(v7 + 72);
  *(void *)(v6 + 88) = *(void *)(v7 + 88);
  uint64_t v12 = v8[9];
  uint64_t v13 = (void *)(v6 + v12);
  uint64_t v14 = (const void *)(v7 + v12);
  uint64_t v15 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v25 = v8[10];
  uint64_t v26 = v6 + v25;
  uint64_t v27 = v7 + v25;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  *(unsigned char *)(v6 + v8[11]) = *(unsigned char *)(v7 + v8[11]);
  *(unsigned char *)(v6 + v8[12]) = *(unsigned char *)(v7 + v8[12]);
  *(void *)(v6 + v8[13]) = *(void *)(v7 + v8[13]);
  *(void *)(v6 + v8[14]) = *(void *)(v7 + v8[14]);
  uint64_t v28 = v8[15];
  uint64_t v29 = (_OWORD *)(v6 + v28);
  uint64_t v30 = (_OWORD *)(v7 + v28);
  long long v31 = v30[1];
  _OWORD *v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)v30 + 25);
  *(unsigned char *)(v6 + v8[16]) = *(unsigned char *)(v7 + v8[16]);
  uint64_t v32 = v8[17];
  uint64_t v33 = v6 + v32;
  uint64_t v34 = v7 + v32;
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  memcpy((void *)(v6 + v8[18]), (const void *)(v7 + v8[18]), 0x49uLL);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, (uint64_t)v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3564F28);
}

uint64_t sub_1C3564F28(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    uint64_t v11 = (uint64_t)&a1[*(int *)(a3 + 28)];
    return __swift_getEnumTagSinglePayload(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3564FC8);
}

unsigned char *sub_1C3564FC8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 28)];
    return (unsigned char *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for LocalParticipantControlsView.ViewModel()
{
  type metadata accessor for ConversationControlsRecipe?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for ConversationControlsRecipe?()
{
  if (!lazy cache variable for type metadata for ConversationControlsRecipe?)
  {
    type metadata accessor for ConversationControlsRecipe();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ConversationControlsRecipe?);
    }
  }
}

_DWORD *__swift_memcpy7_1(_DWORD *result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LocalParticipantControlsView.Capabilities(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[7])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalParticipantControlsView.Capabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 7) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 7) = 0;
    }
    if (a2) {
      *(unsigned char *)result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalParticipantControlsView.Capabilities()
{
  return &type metadata for LocalParticipantControlsView.Capabilities;
}

void partial apply for closure #1 in LocalParticipantControlsView.commonInit()(char *a1)
{
  closure #1 in LocalParticipantControlsView.commonInit()(a1, v1);
}

void outlined bridged method (mbgnn) of @objc NSObject.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  objc_msgSend(a3, sel_setAccessibilityIdentifier_, v4);
}

void partial apply for closure #1 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter()
{
  closure #1 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(v0);
}

uint64_t sub_1C356526C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter()
{
  closure #2 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t ClarityUIActionGlyphLabel.actionGlyph.getter()
{
  return swift_retain();
}

uint64_t ClarityUIActionGlyphLabel.actionGlyph.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ClarityUIActionGlyphLabel.actionGlyph.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.title.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_4_25(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t ClarityUIActionGlyphLabel.title.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_12(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*ClarityUIActionGlyphLabel.title.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.icon.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_4_25(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16), a2);
}

uint64_t ClarityUIActionGlyphLabel.icon.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_12(v2 + *(int *)(a2 + 56), *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*ClarityUIActionGlyphLabel.icon.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.shouldShowActionGlyph.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

uint64_t ClarityUIActionGlyphLabel.shouldShowActionGlyph.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 60)) = result;
  return result;
}

uint64_t (*ClarityUIActionGlyphLabel.shouldShowActionGlyph.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.init(actionGlyph:title:icon:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, void *a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for ClarityUIActionGlyphLabel();
  *((unsigned char *)a4 + v8[15]) = 0;
  long long v9 = (void *)((char *)a4 + v8[16]);
  *long long v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = v8[17];
  static ClarityUIMetrics.standardSpacing.getter();
  *(double *)((char *)a4 + v10) = v11 * 0.5;
  uint64_t v12 = v8[18];
  static ClarityUIMetrics.standardSpacing.getter();
  *(double *)((char *)a4 + v12) = v13 * -0.5;
  *(void *)((char *)a4 + v8[19]) = 0x4018000000000000;
  *(_OWORD *)((char *)a4 + v8[20]) = xmmword_1C3787BD0;
  *a4 = a1;
  uint64_t v14 = swift_retain();
  uint64_t v15 = a2(v14);
  a3(v15);
  return swift_release();
}

uint64_t type metadata accessor for ClarityUIActionGlyphLabel()
{
  return swift_getGenericMetadata();
}

uint64_t ClarityUIActionGlyphLabel.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  OUTLINED_FUNCTION_5_3();
  uint64_t v52 = v4;
  uint64_t v53 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for HStack();
  uint64_t v11 = a1[3];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v13 = v10;
  uint64_t v46 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = WitnessTable;
  uint64_t v15 = a1[5];
  uint64_t v16 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  uint64_t v72 = v15;
  uint64_t v73 = v16;
  uint64_t v54 = MEMORY[0x1E4F3CC28];
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v68 = v13;
  uint64_t v69 = v12;
  uint64_t v70 = WitnessTable;
  uint64_t v71 = v17;
  type metadata accessor for Label();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?>);
  uint64_t v18 = type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_5_3();
  uint64_t v51 = v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v49 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  long long v47 = (char *)&v42 - v23;
  OUTLINED_FUNCTION_5_3();
  uint64_t v48 = v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v44 = v9;
  uint64_t v61 = v9;
  uint64_t v62 = v11;
  uint64_t v26 = v11;
  uint64_t v43 = v11;
  uint64_t v27 = a1[4];
  uint64_t v63 = v27;
  uint64_t v64 = v15;
  uint64_t v42 = v15;
  uint64_t v65 = v2;
  uint64_t v56 = v9;
  uint64_t v57 = v26;
  uint64_t v58 = v27;
  uint64_t v59 = v15;
  uint64_t v60 = v2;
  Label.init(title:icon:)();
  uint64_t v28 = v52;
  uint64_t v29 = v50;
  (*(void (**)(char *, uint64_t, void *))(v52 + 16))(v50, v2, a1);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  long long v31 = (char *)swift_allocObject();
  uint64_t v32 = v43;
  *((void *)v31 + 2) = v44;
  *((void *)v31 + 3) = v32;
  uint64_t v33 = v42;
  *((void *)v31 + 4) = v27;
  *((void *)v31 + 5) = v33;
  (*(void (**)(char *, char *, void *))(v28 + 32))(&v31[v30], v29, a1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?);
  uint64_t v34 = swift_getWitnessTable();
  lazy protocol witness table accessor for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey();
  lazy protocol witness table accessor for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?();
  static Alignment.center.getter();
  uint64_t v35 = v47;
  View.overlayPreferenceValue<A, B>(_:alignment:_:)();
  swift_release();
  OUTLINED_FUNCTION_3_21();
  v36();
  uint64_t v37 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?> and conformance _OverlayPreferenceModifier<A, B>, &demangling cache variable for type metadata for _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?>);
  uint64_t v66 = v34;
  uint64_t v67 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v49;
  static ViewBuilder.buildExpression<A>(_:)(v35, v18, v38);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v51 + 8);
  v40(v35, v18);
  static ViewBuilder.buildExpression<A>(_:)(v39, v18, v38);
  return ((uint64_t (*)(char *, uint64_t))v40)(v39, v18);
}

uint64_t closure #1 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v20[0] = a5;
  v20[1] = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for HStack();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v20 - v15;
  v20[4] = a2;
  v20[5] = a3;
  v20[6] = a4;
  v20[7] = v20[0];
  v20[8] = a1;
  static VerticalAlignment.center.getter();
  HStack.init(alignment:spacing:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v13, v10, WitnessTable);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  static ViewBuilder.buildExpression<A>(_:)(v16, v10, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
}

uint64_t closure #1 in closure #1 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v54 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  uint64_t v13 = type metadata accessor for ClarityUIActionGlyphLabel();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v56 = (char *)&v49 - v15;
  uint64_t v16 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v52 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v51 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v26 = (char *)a1 + *(int *)(v13 + 52);
  uint64_t v57 = (char *)&v49 - v27;
  uint64_t v55 = a2;
  uint64_t v53 = a4;
  static ViewBuilder.buildExpression<A>(_:)(v26, a2, a4);
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4F3D630], v16);
  lazy protocol witness table accessor for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v28 = v61;
  uint64_t v29 = v67[0];
  unint64_t v30 = *(void (**)(char *, uint64_t))(v17 + 8);
  v30(v19, v16);
  uint64_t v31 = v16;
  uint64_t v32 = a1;
  v30(v22, v31);
  uint64_t v33 = v56;
  (*(void (**)(char *, uint64_t *, uint64_t))(v14 + 16))(v56, a1, v13);
  if (v28 == v29)
  {
    uint64_t v34 = (uint64_t)v50;
    char v35 = v33[*(int *)(v13 + 60)];
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
    uint64_t v36 = v55;
    uint64_t v38 = v52;
    uint64_t v37 = v53;
    uint64_t v39 = v51;
    if (v35)
    {
      static ClarityUIMetrics.standardSpacing.getter();
      uint64_t v41 = v40;
      uint64_t v42 = *v32;
      swift_retain();
      static Font.Weight.semibold.getter();
      uint64_t v43 = type metadata accessor for Font.Design();
      __swift_storeEnumTagSinglePayload(v34, 1, 1, v43);
      uint64_t v44 = static Font.system(size:weight:design:)();
      outlined destroy of Font.Design?(v34);
      uint64_t v45 = 0x404B000000000000;
    }
    else
    {
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v45 = 0;
      uint64_t v44 = 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v45 = 0;
    uint64_t v44 = 0;
    uint64_t v36 = v55;
    uint64_t v38 = v52;
    uint64_t v37 = v53;
    uint64_t v39 = v51;
  }
  uint64_t v46 = v57;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v39, v57, v36);
  uint64_t v61 = v41;
  uint64_t v62 = 0;
  uint64_t v63 = v42;
  uint64_t v64 = 0;
  uint64_t v65 = v45;
  uint64_t v66 = v44;
  v67[0] = v39;
  v67[1] = &v61;
  outlined copy of TupleView<(Spacer, ActionGlyphCircle)>?(v41, 0, v42);
  v60[0] = v36;
  v60[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  uint64_t v58 = v37;
  unint64_t v59 = lazy protocol witness table accessor for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?();
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t)v67, 2, (uint64_t)v60);
  outlined consume of TupleView<(Spacer, ActionGlyphCircle)>?(v41, 0, v42);
  long long v47 = *(void (**)(char *, uint64_t))(v38 + 8);
  v47(v46, v36);
  outlined consume of TupleView<(Spacer, ActionGlyphCircle)>?(v61, v62, v63);
  return ((uint64_t (*)(char *, uint64_t))v47)(v39, v36);
}

uint64_t closure #2 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v20[1] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v20 - v14;
  v20[4] = a1;
  v20[5] = a2;
  v20[6] = a3;
  v20[7] = a4;
  type metadata accessor for ClarityUIActionGlyphLabel();
  static Anchor.Source<A>.bounds.getter();
  type metadata accessor for CGRect(0);
  lazy protocol witness table accessor for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey();
  View.anchorPreference<A, B>(key:value:transform:)();
  swift_release();
  uint64_t v16 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  v20[2] = a4;
  v20[3] = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v15, v9, WitnessTable);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  static ViewBuilder.buildExpression<A>(_:)(v12, v9, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v18)(v12, v9);
}

uint64_t closure #1 in closure #2 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  long long v47 = a7;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v9 = type metadata accessor for ClarityUIActionGlyphLabel();
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v48 = (char *)&v39 - v12;
  uint64_t v13 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v40 = *a1;
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4F3D628], v13);
  lazy protocol witness table accessor for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v20 = v50;
  uint64_t v21 = v51;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v23 = v16;
  uint64_t v24 = a2;
  v22(v23, v13);
  v22(v19, v13);
  uint64_t v25 = v49;
  uint64_t v26 = *(void (**)(void))(v49 + 16);
  uint64_t v27 = v48;
  v26();
  if (v21 == v20)
  {
    uint64_t v28 = v45;
    uint64_t v29 = v9;
    char v30 = v27[*(int *)(v9 + 60)];
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v9);
    uint64_t v32 = v47;
    if (v30)
    {
      ((void (*)(char *, uint64_t, uint64_t))v26)(v28, v24, v29);
      unint64_t v33 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v34 = (char *)swift_allocObject();
      uint64_t v35 = v40;
      uint64_t v36 = v42;
      *((void *)v34 + 2) = v41;
      *((void *)v34 + 3) = v36;
      uint64_t v37 = v44;
      *((void *)v34 + 4) = v43;
      *((void *)v34 + 5) = v37;
      *((void *)v34 + 6) = v35;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v34[v33], v28, v29);
      uint64_t result = swift_retain();
      uint64_t v38 = partial apply for closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter;
    }
    else
    {
      uint64_t v38 = 0;
      uint64_t v34 = 0;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v9);
    uint64_t v38 = 0;
    uint64_t v34 = 0;
    uint64_t v32 = v47;
  }
  *uint64_t v32 = v38;
  v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v34;
  return result;
}

uint64_t closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  if (a1)
  {
    closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(a2, a3, a4, a5, a6, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    TPNumberPadCharacter.rawValue.getter(__dst);
  }
  else
  {
    _s7SwiftUI15ModifiedContentVyACyAA6HStackVyAA9TupleViewVyAA6SpacerV_AA6VStackVyAGyACyACy15ConversationKit17ActionGlyphCircle33_A5A29C6D3794560EE297715D1CD250B5LLVAA13_OffsetEffectVGAA19_BackgroundModifierVyAA07_ShadowG0VyAA0N0VGGG_AItGGtGGAA12_FrameLayoutVGAQGSgWOi0_(__dst);
  }
  outlined init with take of ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?((uint64_t)__dst, (uint64_t)__src);
  return outlined init with take of ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?((uint64_t)__src, a7);
}

void *closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v13 = static VerticalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(a1, a2, a3, a4, a5, (uint64_t)__src);
  v23[152] = 1;
  memcpy(&v23[7], __src, 0x91uLL);
  memcpy(__dst, v23, sizeof(__dst));
  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  GeometryProxy.subscript.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  memcpy(v30, __dst, sizeof(v30));
  char v28 = v17;
  char v26 = v19;
  GeometryProxy.subscript.getter();
  GeometryProxy.subscript.getter();
  *(void *)a6 = v13;
  *(void *)(a6 + 8) = 0;
  *(unsigned char *)(a6 + 16) = 1;
  uint64_t result = memcpy((void *)(a6 + 17), v30, 0x98uLL);
  *(_DWORD *)(a6 + 169) = *(_DWORD *)v29;
  *(_DWORD *)(a6 + 172) = *(_DWORD *)&v29[3];
  *(void *)(a6 + 176) = v16;
  *(unsigned char *)(a6 + 184) = v28;
  *(_DWORD *)(a6 + 185) = *(_DWORD *)v27;
  *(_DWORD *)(a6 + 188) = *(_DWORD *)&v27[3];
  *(void *)(a6 + 192) = v18;
  *(unsigned char *)(a6 + 200) = v26;
  *(_DWORD *)(a6 + 204) = *(_DWORD *)&v25[3];
  *(_DWORD *)(a6 + 201) = *(_DWORD *)v25;
  *(void *)(a6 + 208) = v20;
  *(void *)(a6 + 216) = v21;
  *(void *)(a6 + 224) = v15;
  *(void *)(a6 + 232) = v14;
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v26 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(a1, a2, a3, a4, a5, (uint64_t)v28);
  uint64_t v12 = v28[0];
  LOBYTE(a4) = v28[1];
  uint64_t v13 = v28[2];
  uint64_t v14 = v28[3];
  uint64_t v15 = v28[4];
  uint64_t v16 = v28[5];
  uint64_t v17 = v28[6];
  uint64_t v18 = v28[7];
  uint64_t v19 = v28[8];
  uint64_t v20 = v28[9];
  uint64_t v21 = v28[10];
  uint64_t v22 = v28[12];
  char v23 = v28[13];
  __src[0] = v26;
  __src[1] = 0;
  LOBYTE(__src[2]) = 1;
  __src[3] = v28[0];
  LOBYTE(__src[4]) = v28[1];
  __src[5] = v28[2];
  __src[6] = v28[3];
  __src[7] = v28[4];
  __src[8] = v28[5];
  __src[9] = v28[6];
  __src[10] = v28[7];
  __src[11] = v28[8];
  __src[12] = v28[9];
  __src[13] = v28[10];
  __src[14] = v28[11];
  uint64_t v24 = v28[11];
  __src[15] = v28[12];
  LOBYTE(__src[16]) = v28[13];
  char v29 = 1;
  memcpy((char *)v28 + 7, __src, 0x81uLL);
  *(void *)a6 = 0;
  *(unsigned char *)(a6 + 8) = 1;
  memcpy((void *)(a6 + 9), v28, 0x88uLL);
  v30[0] = v26;
  v30[1] = 0;
  char v31 = 1;
  uint64_t v32 = v12;
  char v33 = a4;
  uint64_t v34 = v13;
  uint64_t v35 = v14;
  uint64_t v36 = v15;
  uint64_t v37 = v16;
  uint64_t v38 = v17;
  uint64_t v39 = v18;
  uint64_t v40 = v19;
  uint64_t v41 = v20;
  uint64_t v42 = v21;
  uint64_t v43 = v24;
  uint64_t v44 = v22;
  char v45 = v23;
  outlined retain of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>((uint64_t)__src);
  return outlined release of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>((uint64_t)v30);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v10 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  swift_retain();
  static Font.Weight.semibold.getter();
  uint64_t v18 = type metadata accessor for Font.Design();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v18);
  uint64_t v19 = static Font.system(size:weight:design:)();
  outlined destroy of Font.Design?((uint64_t)v16);
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = v30;
  uint64_t v35 = v31;
  uint64_t v20 = (int *)type metadata accessor for ClarityUIActionGlyphLabel();
  uint64_t v21 = *(uint64_t *)((char *)a1 + v20[17]);
  uint64_t v22 = *(uint64_t *)((char *)a1 + v20[18]);
  uint64_t v23 = v20[20];
  uint64_t v24 = *(uint64_t *)((char *)a1 + v20[19]);
  uint64_t v25 = *(uint64_t *)((char *)a1 + v23);
  uint64_t v26 = *(uint64_t *)((char *)a1 + v23 + 8);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F3EB08], v10);
  uint64_t v27 = Color.init(_:white:opacity:)();
  uint64_t result = static Alignment.center.getter();
  *(void *)a6 = v17;
  *(unsigned char *)(a6 + 8) = 1;
  *(void *)(a6 + 16) = 0x404B000000000000;
  *(void *)(a6 + 24) = v19;
  *(void *)(a6 + 32) = v21;
  *(void *)(a6 + 40) = v22;
  *(void *)(a6 + 48) = v27;
  *(void *)(a6 + 56) = v24;
  *(void *)(a6 + 64) = v25;
  *(void *)(a6 + 72) = v26;
  *(void *)(a6 + 80) = result;
  *(void *)(a6 + 88) = v29;
  *(void *)(a6 + 96) = 0;
  *(unsigned char *)(a6 + 104) = 1;
  return result;
}

uint64_t partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter()
{
  return partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter((uint64_t (*)(void, void, void, void, void))closure #1 in ClarityUIActionGlyphLabel.body.getter);
}

uint64_t partial apply for closure #2 in ClarityUIActionGlyphLabel.body.getter()
{
  return partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter((uint64_t (*)(void, void, void, void, void))closure #2 in ClarityUIActionGlyphLabel.body.getter);
}

uint64_t sub_1C3566DF8()
{
  long long v18 = *(_OWORD *)(v0 + 24);
  type metadata accessor for ClarityUIActionGlyphLabel();
  OUTLINED_FUNCTION_1_23();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_release();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_3_21();
  uint64_t v5 = v4();
  __n128 v13 = OUTLINED_FUNCTION_5_110(v5, v6, v7, v8, v9, v10, v11, v12, v18);
  (*(void (**)(__n128))(v14 + 8))(v13);
  uint64_t v15 = v3 + *(int *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for MultimodalListStyle.Layout();
    OUTLINED_FUNCTION_48();
    (*(void (**)(uint64_t))(v16 + 8))(v15);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = type metadata accessor for ClarityUIActionGlyphLabel();
  OUTLINED_FUNCTION_1_1(v9);
  uint64_t v11 = (uint64_t)v2 + ((*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return closure #3 in ClarityUIActionGlyphLabel.body.getter(a1, v11, v5, v6, v7, v8, a2);
}

unint64_t lazy protocol witness table accessor for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey()
{
  unint64_t result = lazy protocol witness table cache variable for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey;
  if (!lazy protocol witness table cache variable for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIActionGlyphLabel<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata completion function for ClarityUIActionGlyphLabel()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Environment<MultimodalListStyle.Layout>.Content();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClarityUIActionGlyphLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v51 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v51 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v49 = *(void *)(v4 + 64);
  uint64_t v50 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v50 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  int v13 = *(_DWORD *)(v11 + 80);
  uint64_t v14 = v13 & 0xF8 | 7;
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(v11 + 64);
  }
  unint64_t v16 = v7 | (unint64_t)v5 | v14;
  int v17 = (v7 | v5 | v13) & 0x100000;
  uint64_t v18 = *a2;
  *a1 = *a2;
  if (v16 != 7
    || v17 != 0
    || ((((((((v15
             + 8
             + ((v14
               + v9
               + ((v49 + v7 + ((v5 + 8) & ~(unint64_t)v5)) & ~(unint64_t)v7)
               + 1) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v21 = v18 + ((v16 + 16) & ~v16);
    swift_retain();
  }
  else
  {
    uint64_t v45 = v10;
    uint64_t v46 = v12;
    uint64_t v47 = v15;
    uint64_t v48 = v15 + 8;
    uint64_t v22 = ~v14;
    uint64_t v23 = (char *)a2 + v5;
    unint64_t v24 = ((unint64_t)a1 + v5 + 8) & ~(unint64_t)v5;
    unint64_t v25 = (unint64_t)(v23 + 8) & ~(unint64_t)v5;
    uint64_t v26 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
    swift_retain();
    v26(v24, v25, v51);
    unint64_t v27 = (v24 + v49 + v8) & ~v8;
    unint64_t v28 = (v25 + v49 + v8) & ~v8;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v27, v28, v50);
    *(unsigned char *)(v27 + v9) = *(unsigned char *)(v28 + v9);
    uint64_t v29 = (void *)((v27 + v9 + v14 + 1) & v22);
    uint64_t v30 = (unsigned __int8 *)((v28 + v9 + v14 + 1) & v22);
    unsigned int v31 = v30[v47];
    unsigned int v32 = v31 - 2;
    if (v31 < 2)
    {
      uint64_t v34 = v46;
    }
    else
    {
      if (v47 <= 3) {
        uint64_t v33 = v47;
      }
      else {
        uint64_t v33 = 4;
      }
      uint64_t v34 = v46;
      switch(v33)
      {
        case 1:
          int v35 = *v30;
          goto LABEL_23;
        case 2:
          int v35 = *(unsigned __int16 *)v30;
          goto LABEL_23;
        case 3:
          int v35 = *(unsigned __int16 *)v30 | (v30[2] << 16);
          goto LABEL_23;
        case 4:
          int v35 = *(_DWORD *)v30;
LABEL_23:
          int v36 = (v35 | (v32 << (8 * v47))) + 2;
          unsigned int v31 = v35 + 2;
          if (v47 < 4) {
            unsigned int v31 = v36;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v34 + 16))(v29, v30, v45);
      char v37 = 1;
    }
    else
    {
      void *v29 = *(void *)v30;
      swift_retain();
      char v37 = 0;
    }
    *((unsigned char *)v29 + v47) = v37;
    uint64_t v38 = (void *)(((unint64_t)v29 + v48) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v39 = (void *)((unint64_t)&v30[v48] & 0xFFFFFFFFFFFFFFF8);
    void *v38 = *v39;
    uint64_t v40 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v41 = (void *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v40 = *v41;
    uint64_t v42 = (void *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v42 = *v43;
    *(_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
    return a1;
  }
  return (uint64_t *)v21;
}

uint64_t destroy for ClarityUIActionGlyphLabel(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v10);
  uint64_t v11 = *(void *)(v9 + 56);
  uint64_t v12 = *(void *)(type metadata accessor for MultimodalListStyle.Layout() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  uint64_t v14 = (unsigned __int8 *)((v11 + v13 + v10 + 1) & ~v13);
  unint64_t v15 = *(void *)(v12 + 64);
  if (v15 <= 8) {
    unint64_t v15 = 8;
  }
  unsigned int v16 = v14[v15];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *v14;
        goto LABEL_12;
      case 2:
        int v19 = *(unsigned __int16 *)v14;
        goto LABEL_12;
      case 3:
        int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
        goto LABEL_12;
      case 4:
        int v19 = *(_DWORD *)v14;
LABEL_12:
        int v20 = (v19 | (v17 << (8 * v15))) + 2;
        unsigned int v16 = v19 + 2;
        if (v15 < 4) {
          unsigned int v16 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v16 == 1)
  {
    uint64_t v21 = *(uint64_t (**)(void))(v12 + 8);
    return v21();
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for ClarityUIActionGlyphLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  swift_retain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = *(void *)(v7 + 48) + v13;
  uint64_t v15 = (v14 + v9) & ~v13;
  uint64_t v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 48);
  uint64_t v18 = (unsigned char *)(v17 + v15);
  int v19 = (unsigned char *)(v17 + v16);
  unsigned char *v18 = *v19;
  uint64_t v20 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v23 = v22 + 8;
  unint64_t v24 = (unint64_t)&v18[v22 + 8];
  unint64_t v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (void *)(v24 & v25);
  unint64_t v27 = (unsigned __int8 *)((unint64_t)&v19[v23] & v25);
  if (*(void *)(v21 + 64) <= 8uLL) {
    uint64_t v28 = 8;
  }
  else {
    uint64_t v28 = *(void *)(*(void *)(v20 - 8) + 64);
  }
  unsigned int v29 = v27[v28];
  unsigned int v30 = v29 - 2;
  if (v29 >= 2)
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *v27;
        goto LABEL_13;
      case 2:
        int v32 = *(unsigned __int16 *)v27;
        goto LABEL_13;
      case 3:
        int v32 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_13;
      case 4:
        int v32 = *(_DWORD *)v27;
LABEL_13:
        int v33 = (v32 | (v30 << (8 * v28))) + 2;
        unsigned int v29 = v32 + 2;
        if (v28 < 4) {
          unsigned int v29 = v33;
        }
        break;
      default:
        break;
    }
  }
  if (v29 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v21 + 16))(v26, v27, v20);
    char v34 = 1;
  }
  else
  {
    void *v26 = *(void *)v27;
    swift_retain();
    char v34 = 0;
  }
  *((unsigned char *)v26 + v28) = v34;
  int v35 = (void *)(((unint64_t)v26 + v28 + 8) & 0xFFFFFFFFFFFFFFF8);
  int v36 = (void *)((unint64_t)&v27[v28 + 8] & 0xFFFFFFFFFFFFFFF8);
  void *v35 = *v36;
  char v37 = (void *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (void *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v37 = *v38;
  uint64_t v39 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v39 = *v40;
  *(_OWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *assignWithCopy for ClarityUIActionGlyphLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v15 + v9) & ~v14;
  uint64_t v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 40);
  int v19 = (unsigned char *)(v18 + v16);
  uint64_t v20 = v18 + v17;
  unsigned char *v19 = *(unsigned char *)(v18 + v17);
  uint64_t v21 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = v23 + 8;
  unint64_t v25 = (unint64_t)&v19[v23 + 8];
  unint64_t v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & v26;
  unint64_t v28 = (v24 + v20) & v26;
  if (*(void *)(v22 + 64) <= 8uLL) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = *(void *)(*(void *)(v21 - 8) + 64);
  }
  if (v27 != v28)
  {
    uint64_t v30 = v21;
    unsigned int v31 = *(unsigned __int8 *)(v27 + v29);
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v33 = v29;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *(unsigned __int8 *)v27;
          goto LABEL_14;
        case 2:
          int v34 = *(unsigned __int16 *)v27;
          goto LABEL_14;
        case 3:
          int v34 = *(unsigned __int16 *)(v25 & v26) | (*(unsigned __int8 *)((v25 & v26) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v34 = *(_DWORD *)v27;
LABEL_14:
          int v35 = (v34 | (v32 << (8 * v29))) + 2;
          unsigned int v31 = v34 + 2;
          if (v29 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v27, v21);
    }
    else {
      swift_release();
    }
    unsigned int v36 = *(unsigned __int8 *)(v28 + v29);
    unsigned int v37 = v36 - 2;
    if (v36 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v38 = v29;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *(unsigned __int8 *)v28;
          goto LABEL_28;
        case 2:
          int v39 = *(unsigned __int16 *)v28;
          goto LABEL_28;
        case 3:
          int v39 = *(unsigned __int16 *)v28 | (*(unsigned __int8 *)(v28 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v39 = *(_DWORD *)v28;
LABEL_28:
          int v40 = (v39 | (v37 << (8 * v29))) + 2;
          unsigned int v36 = v39 + 2;
          if (v29 < 4) {
            unsigned int v36 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v36 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 16))(v27, v28, v30);
      *(unsigned char *)(v27 + v29) = 1;
    }
    else
    {
      *(void *)unint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + v29) = 0;
      swift_retain();
    }
  }
  uint64_t v41 = (void *)(((v27 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = (void *)(((v28 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v41 = *v42;
  uint64_t v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v43 = *v44;
  uint64_t v45 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v45 = *v46;
  uint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  return a1;
}

void *initializeWithTake for ClarityUIActionGlyphLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 32);
  uint64_t v18 = (unsigned char *)(v17 + v15);
  int v19 = (unsigned char *)(v17 + v16);
  unsigned char *v18 = *v19;
  uint64_t v20 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v23 = v22 + 8;
  unint64_t v24 = (unint64_t)&v18[v22 + 8];
  unint64_t v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (void *)(v24 & v25);
  unint64_t v27 = (unsigned __int8 *)((unint64_t)&v19[v23] & v25);
  if (*(void *)(v21 + 64) <= 8uLL) {
    uint64_t v28 = 8;
  }
  else {
    uint64_t v28 = *(void *)(*(void *)(v20 - 8) + 64);
  }
  unsigned int v29 = v27[v28];
  unsigned int v30 = v29 - 2;
  if (v29 >= 2)
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *v27;
        goto LABEL_13;
      case 2:
        int v32 = *(unsigned __int16 *)v27;
        goto LABEL_13;
      case 3:
        int v32 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_13;
      case 4:
        int v32 = *(_DWORD *)v27;
LABEL_13:
        int v33 = (v32 | (v30 << (8 * v28))) + 2;
        unsigned int v29 = v32 + 2;
        if (v28 < 4) {
          unsigned int v29 = v33;
        }
        break;
      default:
        break;
    }
  }
  if (v29 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v21 + 32))(v26, v27, v20);
    char v34 = 1;
  }
  else
  {
    char v34 = 0;
    void *v26 = *(void *)v27;
  }
  *((unsigned char *)v26 + v28) = v34;
  int v35 = (void *)(((unint64_t)v26 + v28 + 8) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v36 = (void *)((unint64_t)&v27[v28 + 8] & 0xFFFFFFFFFFFFFFF8);
  void *v35 = *v36;
  unsigned int v37 = (void *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (void *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v37 = *v38;
  int v39 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v40 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v39 = *v40;
  *(_OWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *assignWithTake for ClarityUIActionGlyphLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v15 + v9) & ~v14;
  uint64_t v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 24);
  int v19 = (unsigned char *)(v18 + v16);
  uint64_t v20 = v18 + v17;
  unsigned char *v19 = *(unsigned char *)(v18 + v17);
  uint64_t v21 = type metadata accessor for MultimodalListStyle.Layout();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = v23 + 8;
  unint64_t v25 = (unint64_t)&v19[v23 + 8];
  unint64_t v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & v26;
  unint64_t v28 = (v24 + v20) & v26;
  if (*(void *)(v22 + 64) <= 8uLL) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = *(void *)(*(void *)(v21 - 8) + 64);
  }
  if (v27 != v28)
  {
    uint64_t v30 = v21;
    unsigned int v31 = *(unsigned __int8 *)(v27 + v29);
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v33 = v29;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *(unsigned __int8 *)v27;
          goto LABEL_14;
        case 2:
          int v34 = *(unsigned __int16 *)v27;
          goto LABEL_14;
        case 3:
          int v34 = *(unsigned __int16 *)(v25 & v26) | (*(unsigned __int8 *)((v25 & v26) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v34 = *(_DWORD *)v27;
LABEL_14:
          int v35 = (v34 | (v32 << (8 * v29))) + 2;
          unsigned int v31 = v34 + 2;
          if (v29 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v27, v21);
    }
    else {
      swift_release();
    }
    unsigned int v36 = *(unsigned __int8 *)(v28 + v29);
    unsigned int v37 = v36 - 2;
    if (v36 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v38 = v29;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *(unsigned __int8 *)v28;
          goto LABEL_28;
        case 2:
          int v39 = *(unsigned __int16 *)v28;
          goto LABEL_28;
        case 3:
          int v39 = *(unsigned __int16 *)v28 | (*(unsigned __int8 *)(v28 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v39 = *(_DWORD *)v28;
LABEL_28:
          int v40 = (v39 | (v37 << (8 * v29))) + 2;
          unsigned int v36 = v39 + 2;
          if (v29 < 4) {
            unsigned int v36 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v36 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v27, v28, v30);
      char v41 = 1;
    }
    else
    {
      char v41 = 0;
      *(void *)unint64_t v27 = *(void *)v28;
    }
    *(unsigned char *)(v27 + v29) = v41;
  }
  uint64_t v42 = (void *)(((v27 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = (void *)(((v28 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8);
  void *v42 = *v43;
  uint64_t v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v44 = *v45;
  uint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v46 = *v47;
  uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIActionGlyphLabel(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v28 = *(void *)(a3 + 24);
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v29 - 8);
  uint64_t v6 = *(void *)(v28 - 8);
  unsigned int v30 = *(_DWORD *)(v5 + 84);
  unsigned int v27 = *(_DWORD *)(v6 + 84);
  if (v30 <= v27) {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(void *)(type metadata accessor for MultimodalListStyle.Layout() - 8);
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = *(void *)(v5 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    uint64_t v14 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
    unint64_t v15 = ((((((((v10 + ((*(void *)(v6 + 64) + v14 + ((v12 + v13 + ((v11 + 8) & ~v11)) & ~v13) + 1) & ~v14) + 8) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v8 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C35686D4);
      case 4:
        int v20 = *(_DWORD *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_28:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          LODWORD(v16) = *a1;
        }
        return v8 + (v16 | v22) + 1;
      default:
        break;
    }
  }
  if ((v7 & 0x80000000) != 0)
  {
    uint64_t v24 = ((unint64_t)a1 + v11 + 8) & ~v11;
    if (v30 == v8)
    {
      uint64_t v25 = v30;
      uint64_t v26 = v29;
    }
    else
    {
      uint64_t v24 = (v24 + v12 + v13) & ~v13;
      uint64_t v25 = v27;
      uint64_t v26 = v28;
    }
    return __swift_getEnumTagSinglePayload(v24, v25, v26);
  }
  else
  {
    uint64_t v23 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v23) = -1;
    }
    return (v23 + 1);
  }
}

void storeEnumTagSinglePayload for ClarityUIActionGlyphLabel(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v26 = *(void *)(a4 + 24);
  uint64_t v27 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(v27 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v26 - 8);
  unsigned int v25 = *(_DWORD *)(v7 + 84);
  if (v6 <= v25) {
    unsigned int v8 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(void *)(type metadata accessor for MultimodalListStyle.Layout() - 8);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = *(void *)(v5 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  size_t v16 = ((((((((v11 + ((*(void *)(v7 + 64) + v15 + ((v13 + v14 + ((v12 + 8) & ~v12)) & ~v14) + 1) & ~v15) + 8) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v9 >= a3)
  {
    int v19 = 0;
  }
  else
  {
    if (((((((((v11
               + ((*(_DWORD *)(v7 + 64)
                 + v15
                 + ((v13 + v14 + ((v12 + 8) & ~v12)) & ~v14)
                 + 1) & ~v15)
               + 8) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = a3 - v9 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
  }
  if (a2 > v9)
  {
    if (v16) {
      int v20 = 1;
    }
    else {
      int v20 = a2 - v9;
    }
    if (v16)
    {
      bzero(a1, v16);
      *a1 = ~v9 + a2;
    }
    switch(v19)
    {
      case 1:
        *((unsigned char *)a1 + v16) = v20;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v16) = v20;
        return;
      case 3:
        goto LABEL_52;
      case 4:
        *(_DWORD *)((char *)a1 + v16) = v20;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      *((unsigned char *)a1 + v16) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 2:
      *(_WORD *)((char *)a1 + v16) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 3:
LABEL_52:
      __break(1u);
      JUMPOUT(0x1C3568A0CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v16) = 0;
      goto LABEL_37;
    default:
LABEL_37:
      if (a2)
      {
LABEL_38:
        if ((v8 & 0x80000000) != 0)
        {
          uint64_t v22 = ((unint64_t)a1 + v12 + 8) & ~v12;
          if (v6 == v9)
          {
            uint64_t v23 = v6;
            uint64_t v24 = v27;
          }
          else
          {
            uint64_t v22 = (v22 + v13 + v14) & ~v14;
            uint64_t v23 = v25;
            uint64_t v24 = v26;
          }
          __swift_storeEnumTagSinglePayload(v22, a2, v23, v24);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v21 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v21 = a2 - 1;
          }
          *(void *)a1 = v21;
        }
      }
      return;
  }
}

void type metadata accessor for Environment<MultimodalListStyle.Layout>.Content()
{
  if (!lazy cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content)
  {
    type metadata accessor for MultimodalListStyle.Layout();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
    }
  }
}

uint64_t sub_1C3568A8C()
{
  return swift_getWitnessTable();
}

void *type metadata accessor for IconBoundsPreferenceKey()
{
  return &unk_1F1EB2FC0;
}

uint64_t destroy for ActionGlyphCircle()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ActionGlyphCircle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActionGlyphCircle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ActionGlyphCircle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

void *type metadata accessor for ActionGlyphCircle()
{
  return &unk_1F1EB3038;
}

uint64_t associated type witness table accessor for View.Body : View in ActionGlyphCircle()
{
  return swift_getOpaqueTypeConformance2();
}

double ActionGlyphCircle.body.getter@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = static Alignment.center.getter();
  uint64_t v10 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  swift_retain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(unsigned char *)a4 = a2;
  *(_WORD *)(a4 + 1) = 256;
  *(void *)(a4 + 8) = a1;
  *(void *)(a4 + 16) = KeyPath;
  *(void *)(a4 + 24) = a3;
  *(void *)(a4 + 32) = v8;
  *(void *)(a4 + 40) = v10;
  *(void *)(a4 + 48) = v13;
  *(unsigned char *)(a4 + 56) = v14;
  *(void *)(a4 + 64) = v15;
  *(unsigned char *)(a4 + 72) = v16;
  double result = *(double *)&v17;
  *(_OWORD *)(a4 + 80) = v17;
  *(unsigned char *)(a4 + 96) = 0;
  return result;
}

double protocol witness for View.body.getter in conformance ActionGlyphCircle@<D0>(uint64_t a1@<X8>)
{
  return ActionGlyphCircle.body.getter(*(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(v1 + 24), a1);
}

uint64_t ActionGlyphCircleBackground._apply(to:)(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for Material();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    MEMORY[0x1C8772A80](v5);
    Material._apply(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    static Color.black.getter();
    Color.opacity(_:)();
    swift_release();
    Color._apply(to:)();
    return swift_release();
  }
}

uint64_t protocol witness for static ShapeStyle._makeView<A>(view:inputs:) in conformance ActionGlyphCircleBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F40F7F88](a1, a2, a5, a3, a6, a4);
}

uint64_t protocol witness for ShapeStyle._apply(to:) in conformance ActionGlyphCircleBackground(uint64_t a1)
{
  return ActionGlyphCircleBackground._apply(to:)(a1, *v1);
}

uint64_t protocol witness for static ShapeStyle._apply(to:) in conformance ActionGlyphCircleBackground()
{
  return MEMORY[0x1F40F7F90]();
}

void protocol witness for ShapeStyle.resolve(in:) in conformance ActionGlyphCircleBackground()
{
}

void *IconBoundsPreferenceKey.defaultValue.unsafeMutableAddressor()
{
  return &static IconBoundsPreferenceKey.defaultValue;
}

void *specialized static IconBoundsPreferenceKey.reduce(value:nextValue:)(void *a1, void *(*a2)(uint64_t *__return_ptr))
{
  double result = a2(&v5);
  uint64_t v4 = v5;
  if (v5)
  {
    double result = (void *)swift_release();
    *a1 = v4;
  }
  return result;
}

uint64_t protocol witness for static PreferenceKey.defaultValue.getter in conformance IconBoundsPreferenceKey@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)IconBoundsPreferenceKey.defaultValue.unsafeMutableAddressor();
  return swift_retain();
}

unint64_t lazy protocol witness table accessor for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout()
{
  unint64_t result = lazy protocol witness table cache variable for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout;
  if (!lazy protocol witness table cache variable for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout)
  {
    type metadata accessor for MultimodalListStyle.Layout();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout);
  }
  return result;
}

uint64_t sub_1C3569134()
{
  long long v18 = *(_OWORD *)(v0 + 24);
  type metadata accessor for ClarityUIActionGlyphLabel();
  OUTLINED_FUNCTION_1_23();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_3_21();
  uint64_t v5 = v4();
  __n128 v13 = OUTLINED_FUNCTION_5_110(v5, v6, v7, v8, v9, v10, v11, v12, v18);
  (*(void (**)(__n128))(v14 + 8))(v13);
  unint64_t v15 = v0 + v3 + *(int *)(v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for MultimodalListStyle.Layout();
    OUTLINED_FUNCTION_48();
    (*(void (**)(unint64_t))(v16 + 8))(v15);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = type metadata accessor for ClarityUIActionGlyphLabel();
  OUTLINED_FUNCTION_1_1(v7);
  uint64_t v9 = v1[6];
  uint64_t v10 = (void *)((char *)v1
                 + ((*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
  return closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(v9, v10, v3, v4, v5, v6, a1);
}

void _s7SwiftUI15ModifiedContentVyACyAA6HStackVyAA9TupleViewVyAA6SpacerV_AA6VStackVyAGyACyACy15ConversationKit17ActionGlyphCircle33_A5A29C6D3794560EE297715D1CD250B5LLVAA13_OffsetEffectVGAA19_BackgroundModifierVyAA07_ShadowG0VyAA0N0VGGG_AItGGtGGAA12_FrameLayoutVGAQGSgWOi0_(void *a1)
{
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined retain of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>(uint64_t a1)
{
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in ClarityUIActionGlyphLabel.body.getter()
{
  return partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter((uint64_t (*)(void, void, void, void, void))closure #1 in closure #1 in ClarityUIActionGlyphLabel.body.getter);
}

uint64_t partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t outlined copy of TupleView<(Spacer, ActionGlyphCircle)>?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?);
  }
  return result;
}

uint64_t outlined consume of TupleView<(Spacer, ActionGlyphCircle)>?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionGlyphCircleBackground(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3569658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ActionGlyphCircleBackground()
{
  return &unk_1F1EB30E8;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<Circle, ActionGlyphCircleBackground> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Circle, ActionGlyphCircleBackground>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for ShapeStyle.Resolved : ShapeStyle in ActionGlyphCircleBackground()
{
  return MEMORY[0x1E4F3F150];
}

id VariableBlurUIView.__allocating_init(radius:blurMask:)(uint64_t a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  return VariableBlurUIView.init(radius:blurMask:)(a1, a2);
}

void VariableBlurUIView.radius.setter(double a1)
{
  int v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius);
  swift_beginAccess();
  *int v3 = a1;
  VariableBlurUIView.setupLayers()();
}

uint64_t VariableBlurUIView.blurMask.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask;
  OUTLINED_FUNCTION_6_110();
  unsigned int v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  char v9 = *(unsigned char *)(v3 + 40);
  outlined init with take of VariableBlurMask(a1, v3);
  outlined retain of VariableBlurMask(a1, (void (*)(void, void, void, void, void, void))outlined copy of VariableBlurMask);
  outlined consume of VariableBlurMask(v4, v5, v6, v7, v8, v9);
  VariableBlurUIView.blurMask.didset();
  return outlined retain of VariableBlurMask(a1, (void (*)(void, void, void, void, void, void))outlined consume of VariableBlurMask);
}

double VariableBlurUIView.radius.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius;
  OUTLINED_FUNCTION_2();
  return *(double *)v1;
}

double key path getter for VariableBlurUIView.radius : VariableBlurUIView@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

void VariableBlurUIView.setupLayers()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)VariableBlurUIView.backdropLayer.getter();
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v3, sel_setFlipsHorizontalAxis_, objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1);

    uint64_t v4 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAFilter);
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = CAFilter.__allocating_init(type:)(v5, v6);
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    char v9 = (void *)MEMORY[0x1C87730B0](0x7469447475706E69, 0xEB00000000726568);
    OUTLINED_FUNCTION_2_128();

    id v10 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage];
    uint64_t v11 = (void *)MEMORY[0x1C87730B0](0x73614D7475706E69, 0xEE006567616D496BLL);
    OUTLINED_FUNCTION_2_128();

    Class v12 = Bool._bridgeToObjectiveC()().super.super.isa;
    __n128 v13 = (void *)MEMORY[0x1C87730B0](0xD000000000000013, 0x80000001C3796410);
    OUTLINED_FUNCTION_2_128();

    OUTLINED_FUNCTION_2();
    Class v14 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    unint64_t v15 = (void *)MEMORY[0x1C87730B0](0x6461527475706E69, 0xEB00000000737569);
    objc_msgSend(v7, sel_setValue_forKey_, v14, v15);

    objc_msgSend(v3, sel_setAllowsHitTesting_, 0);
    objc_msgSend(v3, sel_setMasksToBounds_, 1);
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    id v19 = v3;
    id v20 = CAFilter.__allocating_init(type:)(v16, v18);
    objc_msgSend(v19, sel_setCompositingFilter_, v20);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C3769620;
    *(void *)(v21 + 56) = v4;
    *(void *)(v21 + 32) = v7;
    outlined bridged method (mbnn) of @objc CALayer.filters.setter(v21, v19);
  }
}

void (*VariableBlurUIView.radius.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return VariableBlurUIView.radius.modify;
}

void VariableBlurUIView.radius.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    VariableBlurUIView.setupLayers()();
  }
}

id VariableBlurUIView.blurMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  LOBYTE(v3) = *(unsigned char *)(v3 + 40);
  id result = outlined copy of VariableBlurMask(v4, v5, v6, v7, v8, v3);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

id key path getter for VariableBlurUIView.blurMask : VariableBlurUIView@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask;
  swift_beginAccess();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  char v9 = *(unsigned char *)(v3 + 40);
  *(unsigned char *)(a2 + 40) = v9;
  return outlined copy of VariableBlurMask(v4, v5, v6, v7, v8, v9);
}

uint64_t key path setter for VariableBlurUIView.blurMask : VariableBlurUIView(uint64_t a1)
{
  outlined init with take of VariableBlurMask(a1, (uint64_t)v2);
  outlined retain of VariableBlurMask((uint64_t)v2, (void (*)(void, void, void, void, void, void))outlined copy of VariableBlurMask);
  return VariableBlurUIView.blurMask.setter((uint64_t)v2);
}

void VariableBlurUIView.blurMask.didset()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask];
  swift_beginAccess();
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *((void *)v1 + 1);
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  unsigned int v7 = v1[40];
  outlined copy of VariableBlurMask(v2, v3, v4, v5, v6, v7);
  objc_msgSend(v0, sel_bounds);
  double v10 = v8;
  double v11 = v9;
  if (!(v7 >> 6))
  {
    uint64_t v12 = static VariableBlurMask.gradientMask(size:start:end:mid:)(v6, v7 & 1, v8, v9, *(double *)&v2, *(double *)&v3, *(double *)&v4, *(double *)&v5);
    goto LABEL_5;
  }
  if (v7 >> 6 == 1)
  {
    uint64_t v12 = static VariableBlurMask.shadowMask(size:fadeLength:)(v8, v9, *(double *)&v2);
LABEL_5:
    id v13 = (id)v12;
LABEL_8:
    VariableBlurUIView.blurMaskImage.setter(v13);
    return;
  }
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB17D8]);
  id v15 = v2;
  id v20 = objc_msgSend(v14, sel_initWithSize_, v10, v11);
  uint64_t v16 = swift_allocObject();
  *(double *)(v16 + 16) = v10;
  *(double *)(v16 + 24) = v11;
  *(void *)(v16 + 32) = v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = closure #1 in VariableBlurMask.image(size:)partial apply;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()partial apply;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  aBlock[3] = &block_descriptor_59_0;
  uint64_t v18 = _Block_copy(aBlock);
  outlined copy of VariableBlurMask(v2, v3, v4, v5, v6, v7);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v20, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v16 & 1) == 0)
  {
    id v13 = objc_msgSend(v19, sel_CGImage);
    outlined consume of VariableBlurMask(v2, v3, v4, v5, v6, v7);
    swift_release();

    outlined consume of VariableBlurMask(v2, v3, v4, v5, v6, v7);
    goto LABEL_8;
  }
  __break(1u);
}

CGImageRef_optional __swiftcall VariableBlurMask.image(size:)(CGSize size)
{
  double height = size.height;
  double width = size.width;
  outlined init with take of VariableBlurMask(v1, (uint64_t)&v19);
  uint64_t v4 = v19;
  outlined init with take of VariableBlurMask(v1, (uint64_t)v20);
  unsigned __int8 v5 = v21;
  int v6 = v21 >> 6;
  if (!v6)
  {
    v21 &= 0x3Fu;
    return (CGImageRef_optional)static VariableBlurMask.gradientMask(size:start:end:mid:)(*(uint64_t *)&v20[4], v5 & 1, width, height, v20[0], v20[1], v20[2], v20[3]);
  }
  if (v6 == 1)
  {
    v21 &= 0x3Fu;
    return (CGImageRef_optional)static VariableBlurMask.shadowMask(size:fadeLength:)(width, height, v20[0]);
  }
  v21 &= 0x3Fu;
  double v9 = v20[0];
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB17D8]);
  id v11 = v4;
  id v12 = objc_msgSend(v10, sel_initWithSize_, width, height);
  id v13 = (double *)swift_allocObject();
  v13[2] = width;
  v13[3] = height;
  v13[4] = v9;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = partial apply for closure #1 in VariableBlurMask.image(size:);
  *(void *)(v14 + 24) = v13;
  v18[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v18[5] = v14;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v18[3] = &block_descriptor_97;
  id v15 = _Block_copy(v18);
  outlined retain of VariableBlurMask(v1, (void (*)(void, void, void, void, void, void))outlined copy of VariableBlurMask);
  swift_retain();
  swift_release();
  id v16 = objc_msgSend(v12, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v12) = OUTLINED_FUNCTION_8_79();
  result.value = (CGImageRef)swift_release();
  if ((v12 & 1) == 0)
  {
    id v8 = objc_msgSend(v16, sel_CGImage);
    outlined retain of VariableBlurMask(v1, (void (*)(void, void, void, void, void, void))outlined consume of VariableBlurMask);
    swift_release();

    return (CGImageRef_optional)v8;
  }
  __break(1u);
  return result;
}

void VariableBlurUIView.blurMaskImage.setter(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage) = a1;
  id v3 = a1;

  VariableBlurUIView.setupLayers()();
}

void (*VariableBlurUIView.blurMask.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return VariableBlurUIView.blurMask.modify;
}

void VariableBlurUIView.blurMask.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    VariableBlurUIView.blurMask.didset();
  }
}

id VariableBlurUIView.init(radius:blurMask:)(uint64_t a1, double a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage] = 0;
  *(double *)&v2[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius] = a2;
  outlined init with take of VariableBlurMask(a1, (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask]);
  outlined retain of VariableBlurMask(a1, (void (*)(void, void, void, void, void, void))outlined copy of VariableBlurMask);
  v11.receiver = v2;
  v11.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  unsigned int v7 = self;
  id v8 = v6;
  id v9 = objc_msgSend(v7, sel_clearColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);
  outlined retain of VariableBlurMask(a1, (void (*)(void, void, void, void, void, void))outlined consume of VariableBlurMask);

  return v8;
}

uint64_t outlined retain of VariableBlurMask(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

id VariableBlurUIView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void VariableBlurUIView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t static VariableBlurUIView.layerClass.getter()
{
  return type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CABackdropLayer);
}

uint64_t VariableBlurUIView.backdropLayer.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

Swift::Void __swiftcall VariableBlurUIView.layoutSubviews()()
{
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_layoutSubviews);
  id v1 = &v0[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask];
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *(void **)v1;
  double v3 = *((double *)v1 + 1);
  double v4 = *((double *)v1 + 2);
  double v5 = *((double *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  unsigned int v7 = v1[40];
  OUTLINED_FUNCTION_4_119();
  objc_msgSend(v0, sel_bounds);
  double v10 = v8;
  double v11 = v9;
  if (!(v7 >> 6))
  {
    uint64_t v12 = static VariableBlurMask.gradientMask(size:start:end:mid:)(v6, v7 & 1, v8, v9, *(double *)&v2, v3, v4, v5);
    goto LABEL_5;
  }
  if (v7 >> 6 == 1)
  {
    uint64_t v12 = static VariableBlurMask.shadowMask(size:fadeLength:)(v8, v9, *(double *)&v2);
LABEL_5:
    id v13 = (id)v12;
LABEL_8:
    VariableBlurUIView.blurMaskImage.setter(v13);
    return;
  }
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB17D8]);
  id v15 = v2;
  id v20 = objc_msgSend(v14, sel_initWithSize_, v10, v11);
  uint64_t v16 = swift_allocObject();
  *(double *)(v16 + 16) = v10;
  *(double *)(v16 + 24) = v11;
  *(void *)(v16 + 32) = v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = closure #1 in VariableBlurMask.image(size:)partial apply;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()partial apply;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  aBlock[3] = &block_descriptor_14;
  uint64_t v18 = _Block_copy(aBlock);
  OUTLINED_FUNCTION_4_119();
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v20, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v16) = OUTLINED_FUNCTION_8_79();
  swift_release();
  if ((v16 & 1) == 0)
  {
    id v13 = objc_msgSend(v19, sel_CGImage);
    OUTLINED_FUNCTION_3_129();
    swift_release();

    OUTLINED_FUNCTION_3_129();
    goto LABEL_8;
  }
  __break(1u);
}

id VariableBlurUIView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void VariableBlurUIView.init(frame:)()
{
}

id VariableBlurUIView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double VariableBlurView.radius.getter()
{
  return *(double *)v0;
}

uint64_t VariableBlurView.blurMask.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of VariableBlurMask(v1 + 8, a1);
}

__n128 VariableBlurView.init(radius:blurMask:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  outlined init with take of VariableBlurMask(a1, (uint64_t)v9);
  uint64_t v5 = v10;
  char v6 = v11;
  __n128 result = (__n128)v9[0];
  long long v8 = v9[1];
  *(double *)a2 = a3;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v8;
  *(void *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 48) = v6;
  return result;
}

id VariableBlurView.makeUIView(context:)()
{
  double v1 = *v0;
  outlined init with take of VariableBlurMask((uint64_t)(v0 + 1), (uint64_t)v4);
  id v2 = objc_allocWithZone((Class)type metadata accessor for VariableBlurUIView());
  outlined retain of VariableBlurMask((uint64_t)v4, (void (*)(void, void, void, void, void, void))outlined copy of VariableBlurMask);
  return VariableBlurUIView.init(radius:blurMask:)((uint64_t)v4, v1);
}

uint64_t VariableBlurView.updateUIView(_:context:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  double v3 = (void *)(a1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius);
  OUTLINED_FUNCTION_6_110();
  *double v3 = v2;
  VariableBlurUIView.setupLayers()();
  outlined init with take of VariableBlurMask((uint64_t)(v1 + 1), (uint64_t)v5);
  outlined retain of VariableBlurMask((uint64_t)v5, (void (*)(void, void, void, void, void, void))outlined copy of VariableBlurMask);
  return VariableBlurUIView.blurMask.setter((uint64_t)v5);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance VariableBlurView()
{
  return VariableBlurView.makeUIView(context:)();
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance VariableBlurView(uint64_t a1)
{
  return VariableBlurView.updateUIView(_:context:)(a1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance VariableBlurView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView();
  return MEMORY[0x1F40F9EF0](a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance VariableBlurView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView();
  return MEMORY[0x1F40F9E78](a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance VariableBlurView()
{
}

uint64_t static VariableBlurMask.gradientMask(size:start:end:mid:)(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a3, a4);
  uint64_t v17 = swift_allocObject();
  *(double *)(v17 + 16) = a3;
  *(double *)(v17 + 24) = a4;
  *(double *)(v17 + 32) = a5;
  *(double *)(v17 + 40) = a6;
  *(double *)(v17 + 48) = a7;
  *(double *)(v17 + 56) = a8;
  *(void *)(v17 + 64) = a1;
  *(unsigned char *)(v17 + 72) = a2 & 1;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = partial apply for closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:);
  *(void *)(v18 + 24) = v17;
  v23[4] = thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()partial apply;
  v23[5] = v18;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 1107296256;
  v23[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v23[3] = &block_descriptor_28_4;
  id v19 = _Block_copy(v23);
  swift_retain();
  swift_release();
  id v20 = objc_msgSend(v16, sel_imageWithActions_, v19);

  _Block_release(v19);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v16)
  {
    __break(1u);
  }
  else
  {
    id v22 = objc_msgSend(v20, sel_CGImage);
    swift_release();

    return (uint64_t)v22;
  }
  return result;
}

uint64_t static VariableBlurMask.shadowMask(size:fadeLength:)(CGFloat a1, CGFloat a2, double a3)
{
  CGFloat v6 = -a3;
  v31.origin.CGFloat x = 0.0;
  v31.origin.CGFloat y = 0.0;
  v31.size.CGFloat width = a1;
  v31.size.CGFloat height = a2;
  CGRect v32 = CGRectInset(v31, v6, v6);
  CGFloat x = v32.origin.x;
  CGFloat y = v32.origin.y;
  CGFloat width = v32.size.width;
  CGFloat height = v32.size.height;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v32.size.width, v32.size.height);
  uint64_t v12 = swift_allocObject();
  *(CGFloat *)(v12 + 16) = x;
  *(CGFloat *)(v12 + 24) = y;
  *(CGFloat *)(v12 + 32) = width;
  *(CGFloat *)(v12 + 40) = height;
  *(double *)(v12 + 48) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = partial apply for closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:);
  *(void *)(v13 + 24) = v12;
  uint64_t v29 = thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()partial apply;
  uint64_t v30 = v13;
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  uint64_t v27 = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  uint64_t v28 = &block_descriptor_38_0;
  id v14 = _Block_copy(&v25);
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v11, sel_imageWithActions_, v14);

  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    id v17 = objc_msgSend(v15, sel_CGImage);

    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a1, a2);
    uint64_t v19 = swift_allocObject();
    *(CGFloat *)(v19 + 16) = a1;
    *(CGFloat *)(v19 + 24) = a2;
    *(void *)(v19 + 32) = v17;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = partial apply for closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:);
    *(void *)(v20 + 24) = v19;
    uint64_t v29 = thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()partial apply;
    uint64_t v30 = v20;
    uint64_t v25 = MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    uint64_t v27 = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
    uint64_t v28 = &block_descriptor_48;
    unsigned __int8 v21 = _Block_copy(&v25);
    id v22 = v17;
    swift_retain();
    swift_release();
    id v23 = objc_msgSend(v18, sel_imageWithActions_, v21);

    _Block_release(v21);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v18 & 1) == 0)
    {
      id v24 = objc_msgSend(v23, sel_CGImage);
      swift_release();
      swift_release();

      return (uint64_t)v24;
    }
  }
  __break(1u);
  return result;
}

void closure #1 in VariableBlurMask.image(size:)(void *a1, void *a2, double a3, double a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
  objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, a3, a4);
  id v9 = objc_msgSend(a2, sel_CGImage);
  objc_msgSend(v8, sel_setContents_, v9);

  objc_msgSend(v8, sel_setContentsGravity_, *MEMORY[0x1E4F3A3B8]);
  id v10 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v8, sel_renderInContext_, v10);
}

uint64_t sub_1C356B534()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in VariableBlurMask.image(size:)(void *a1)
{
  closure #1 in VariableBlurMask.image(size:)(a1, *(void **)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()(uint64_t a1)
{
  return thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t type metadata accessor for VariableBlurUIView()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView()
{
  unint64_t result = lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView;
  if (!lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView;
  if (!lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView);
  }
  return result;
}

void sub_1C356B600(double *a1)
{
}

uint64_t method lookup function for VariableBlurUIView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VariableBlurUIView);
}

uint64_t dispatch thunk of VariableBlurUIView.__allocating_init(radius:blurMask:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  double v4 = *(uint64_t (**)(_OWORD *))(v1 + 104);
  long long v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  uint64_t v8 = v2;
  char v9 = v3;
  return v4(v7);
}

uint64_t initializeWithCopy for VariableBlurView(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  outlined copy of VariableBlurMask(v3, v4, v5, v6, v7, v8);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for VariableBlurView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  outlined copy of VariableBlurMask(v3, v4, v5, v6, v7, v8);
  char v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v14 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v8;
  outlined consume of VariableBlurMask(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for VariableBlurView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 40);
  char v4 = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  char v10 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v4;
  outlined consume of VariableBlurMask(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableBlurView(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 49))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 48) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 48) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VariableBlurView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(void *)(result + 40) = 0;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 8) = 0u;
      *(unsigned char *)(result + 48) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VariableBlurView()
{
  return &type metadata for VariableBlurView;
}

void destroy for VariableBlurMask(uint64_t a1)
{
}

uint64_t initializeWithCopy for VariableBlurMask(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  outlined copy of VariableBlurMask(*(id *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for VariableBlurMask(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  outlined copy of VariableBlurMask(*(id *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  outlined consume of VariableBlurMask(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for VariableBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  outlined consume of VariableBlurMask(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableBlurMask(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 41))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 40) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VariableBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 40) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VariableBlurMask()
{
  return &type metadata for VariableBlurMask;
}

void closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:)(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, uint64_t a8, char a9)
{
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BD0]), sel_init);
  objc_msgSend(v17, sel_setBounds_, 0.0, 0.0, a2, a3);
  objc_msgSend(v17, sel_setStartPoint_, a4, a5);
  objc_msgSend(v17, sel_setEndPoint_, a6, a7);
  if (a9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C37696D0;
    uint64_t v30 = self;
    id v31 = objc_msgSend(v30, sel_blackColor);
    id v32 = objc_msgSend(v31, sel_colorWithAlphaComponent_, 0.0);

    id v33 = objc_msgSend(v32, sel_CGColor);
    type metadata accessor for CGColorRef(0);
    uint64_t v35 = v34;
    *(void *)(v19 + 56) = v34;
    *(void *)(v19 + 32) = v33;
    id v36 = objc_msgSend(v30, sel_blackColor);
    id v37 = objc_msgSend(v36, sel_CGColor);

    *(void *)(v19 + 88) = v35;
    *(void *)(v19 + 64) = v37;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C3769F40;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    *(NSNumber *)(v18 + 32) = NSNumber.init(floatLiteral:)(0.0);
    *(NSNumber *)(v18 + 40) = CGFloat._bridgeToObjectiveC()();
    *(NSNumber *)(v18 + 48) = NSNumber.init(floatLiteral:)(1.0);
    specialized Array._endMutation()();
    outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(v18, v17);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C376BA10;
    uint64_t v20 = self;
    id v21 = objc_msgSend(v20, sel_blackColor);
    id v22 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.0);

    id v23 = objc_msgSend(v22, sel_CGColor);
    type metadata accessor for CGColorRef(0);
    uint64_t v25 = v24;
    *(void *)(v19 + 56) = v24;
    *(void *)(v19 + 32) = v23;
    id v26 = objc_msgSend(v20, sel_blackColor);
    id v27 = objc_msgSend(v26, sel_CGColor);

    *(void *)(v19 + 88) = v25;
    *(void *)(v19 + 64) = v27;
    id v28 = objc_msgSend(v20, sel_blackColor);
    id v29 = objc_msgSend(v28, sel_CGColor);

    *(void *)(v19 + 120) = v25;
    *(void *)(v19 + 96) = v29;
  }
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v19, v17);
  id v38 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v17, sel_renderInContext_, v38);
}

uint64_t sub_1C356BF0C()
{
  return OUTLINED_FUNCTION_7_44();
}

void partial apply for closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:)(void *a1)
{
  closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:)(a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72));
}

void closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
  objc_msgSend(v12, sel_setFrame_, a2, a3, a4, a5);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
  v23.origin.CGFloat x = a2;
  v23.origin.CGFloat y = a3;
  v23.size.CGFloat width = a4;
  v23.size.CGFloat height = a5;
  CGRect v24 = CGRectOffset(v23, -a6, a6 * 3.0);
  objc_msgSend(v13, sel_setFrame_, v24.origin.x, v24.origin.y, v24.size.width, v24.size.height);
  objc_msgSend(v12, sel_addSublayer_, v13);
  char v14 = self;
  id v15 = objc_msgSend(v14, sel_blackColor);
  id v16 = objc_msgSend(v15, sel_CGColor);

  objc_msgSend(v13, sel_setBackgroundColor_, v16);
  id v17 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  id v18 = objc_msgSend(v14, sel_blackColor);
  uint64_t v19 = (CGColor *)objc_msgSend(v18, sel_CGColor);

  v22.CGFloat width = a6;
  v22.CGFloat height = -a6;
  CGContextSetShadowWithColor(v17, v22, a6, v19);

  id v20 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v12, sel_renderInContext_, v20);
}

void closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1, uint64_t a2, double a3, double a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
  objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, a3, a4);
  objc_msgSend(v8, sel_setContents_, a2);
  objc_msgSend(v8, sel_setContentsGravity_, *MEMORY[0x1E4F3A3B8]);
  id v9 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v8, sel_renderInContext_, v9);
}

uint64_t sub_1C356C23C()
{
  return OUTLINED_FUNCTION_7_44();
}

void partial apply for closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1)
{
  closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:)(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void partial apply for closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1)
{
  closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:)(a1, *(void *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t *Defaults.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static Defaults.shared;
}

uint64_t Defaults.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Defaults.init()();
  return v0;
}

uint64_t static Defaults.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

id Defaults.featureFlags.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t Defaults.enableAudioVisualization.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(0);

  return v1 & 1;
}

uint64_t Defaults.enableAudioVisualizationLogging.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(1);

  return v1 & 1;
}

uint64_t Defaults.forceVideoLayerVisible.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(3);

  return v1 & 1;
}

uint64_t Defaults.shouldIgnorePoorConnection.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(4);

  return v1 & 1;
}

uint64_t Defaults.showsForceAudioPriorityButton.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(5);

  return v1 & 1;
}

uint64_t Defaults.startUplinkMuted.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(2);

  return v1 & 1;
}

uint64_t Defaults.shouldEnableEffectsRendering.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(6);

  return v1 & 1;
}

id Defaults.supportsVideo.getter()
{
  return objc_msgSend(self, sel_allowsVideo);
}

id Defaults.allowsScreenSharing.getter()
{
  return objc_msgSend(self, sel_allowsScreenSharing);
}

id Defaults.requestToScreenShareEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_requestToScreenShareEnabled);
}

uint64_t Defaults.allowsScreenSharingNotifications.getter()
{
  char v1 = *(void **)(v0 + 24);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  char v3 = OUTLINED_FUNCTION_1_136(89);

  return v3 & 1;
}

id Defaults.supportsEffects.getter()
{
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v0 + 152))()) {
    return objc_msgSend(self, sel_supportsEffects);
  }
  else {
    return 0;
  }
}

id Defaults.supportsCinematicFraming.getter()
{
  OUTLINED_FUNCTION_50();
  if (((*(uint64_t (**)(void))(v0 + 152))() & 1) == 0) {
    return 0;
  }
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v1, sel_videoDeviceController);

  id v3 = objc_msgSend(v2, sel_currentInputSupportsCinematicFraming);
  return v3;
}

id Defaults.sharePlayAvailable.getter()
{
  return Defaults.sharePlayAvailable.getter((SEL *)&selRef_isSharePlayAvailable);
}

id Defaults.screenSharingAvailable.getter()
{
  return Defaults.sharePlayAvailable.getter((SEL *)&selRef_isScreenSharingAvailable);
}

id Defaults.sharePlayAvailable.getter(SEL *a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_conversationManager);

  id v4 = [v3 *a1];
  return v4;
}

uint64_t Defaults.forceScreenSharingAvailable.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(87);

  return v1 & 1;
}

uint64_t Defaults.bannerDragControllerEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(65);

  return v1 & 1;
}

uint64_t Defaults.shouldShowVoicemailIntroText.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(66);

  return v1 & 1;
}

uint64_t Defaults.shouldShowVoicemailIntroText.setter(char a1)
{
  return Defaults.shouldShowVoicemailIntroText.setter(a1, 66);
}

uint64_t (*Defaults.shouldShowVoicemailIntroText.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  uint64_t v1 = Defaults.shouldShowVoicemailIntroText.getter();
  OUTLINED_FUNCTION_17_9(v1);
  return Defaults.shouldShowVoicemailIntroText.modify;
}

uint64_t Defaults.shouldShowVoicemailIntroText.modify(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.shouldShowVoicemailIntroText.setter(v1);
}

id Defaults.sckSystemPickerEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_sckSystemPickerEnabled);
}

uint64_t Defaults.shouldShowVideoLayerDebugColors.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return 0;
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(82);

  return v1 & 1;
}

id Defaults.gelatoEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_gelatoEnabled);
}

id Defaults.collaborateTogetherEnabled.getter()
{
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    id v2 = result;
    unsigned __int8 v3 = outlined bridged method (mbnn) of @objc LSApplicationWorkspace.applicationIsInstalled(_:)(0xD000000000000013, 0x80000001C37AAE90, result);

    if (v3) {
      return objc_msgSend(*(id *)(v0 + 16), sel_collaborateTogetherEnabled);
    }
    else {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Defaults.oneCollaborationHUDPerDocument.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(83);

  return v1 & 1;
}

id Defaults.supportsScreenSharingCALayerHostMode.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_screenSharingCALayerHostMode);
}

id Defaults.supportsScreenSharingDeskView.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_screenSharingDeskViewEnabled);
}

id Defaults.gameCenterSharePlayIntegration.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_gameCenterSharePlayIntegration);
}

BOOL Defaults.useFlattenedUI.getter()
{
  OUTLINED_FUNCTION_50();
  return ((*(uint64_t (**)(void))(v0 + 152))() & 1) == 0;
}

float Defaults.activelyCommunicatingAudioThreshold.getter()
{
  Defaults.float(for:default:)(7, 155.0);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

void Defaults.activelyCommunicatingVideoThreshold.getter()
{
}

double Defaults.mimimumActiveDuration.getter()
{
  Defaults.double(for:default:)(9, 0.25);
  OUTLINED_FUNCTION_10_78();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

uint64_t Defaults.forceMostActiveParticipantHandle.getter()
{
  if (Defaults.isInternalInstall.getter()) {
    return Defaults.string(for:default:)(10, 0);
  }
  else {
    return 0;
  }
}

double Defaults.mostActiveParticipantChangeInterval.getter()
{
  Defaults.double(for:default:)(11, 0.5);
  OUTLINED_FUNCTION_10_78();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

uint64_t Defaults.shouldShowProminenceDebuggingLabels.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(12);

  return v1 & 1;
}

double Defaults.organicSashFontSize.getter()
{
  return Defaults.float(for:default:)(27, 34.0);
}

double Defaults.organicCellCornerRadius.getter()
{
  return Defaults.float(for:default:)(25, 10.0);
}

double Defaults.screenSharingCornerRadius.getter()
{
  return Defaults.float(for:default:)(26, 10.0);
}

double Defaults.organicCellGlowSizeMultiplier.getter()
{
  return Defaults.float(for:default:)(28, 1.8);
}

float Defaults.emaTimeScale.getter()
{
  Defaults.float(for:default:)(29, 60.0);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

double Defaults.emaTimerFrequency.getter()
{
  Defaults.double(for:default:)(30, 0.06);
  OUTLINED_FUNCTION_10_78();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

float Defaults.emaProminenceWeight1.getter()
{
  Defaults.float(for:default:)(31, 1.15);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

float Defaults.emaProminenceWeight2.getter()
{
  Defaults.float(for:default:)(32, 1.1);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

float Defaults.emaProminenceWeight3.getter()
{
  Defaults.float(for:default:)(33, 1.05);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

float Defaults.emaProminenceWeight4.getter()
{
  Defaults.float(for:default:)(34, 1.0);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

double Defaults.emaMinUIUpdateInterval.getter()
{
  Defaults.double(for:default:)(35, 0.3);
  OUTLINED_FUNCTION_10_78();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

float Defaults.emaLowerBoundTreshold.getter()
{
  Defaults.float(for:default:)(36, 0.3);
  OUTLINED_FUNCTION_5_111();
  if (!(!v3 & v2)) {
    return v1;
  }
  return result;
}

uint64_t Defaults.shouldCenterRoster.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(37);

  return v1 & 1;
}

id Defaults.memojiCameraEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_memojiCameraEnabled);
}

double Defaults.gridInterItemSpacing.getter()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2)
  {
    id v3 = objc_msgSend(v0, sel_currentDevice);
    id v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

    float v5 = 8.0;
    if (v4 == (id)2) {
      float v5 = 20.0;
    }
  }
  else
  {
    float v5 = 5.0;
  }
  return Defaults.float(for:default:)(46, v5);
}

double Defaults.gridLayoutProminenceScaleAmount.getter()
{
  char v0 = static Platform.current.getter();
  float v1 = 16.0;
  if (v0 == 2) {
    float v1 = 0.0;
  }
  if (!v0) {
    float v1 = 10.0;
  }
  return Defaults.float(for:default:)(47, v1);
}

uint64_t Defaults.shouldUseGridView.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(43);

  return v1 & 1;
}

uint64_t Defaults.shouldUseGridView.setter(char a1)
{
  return Defaults.shouldShowVoicemailIntroText.setter(a1, 43);
}

uint64_t (*Defaults.shouldUseGridView.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  uint64_t v1 = Defaults.shouldUseGridView.getter();
  OUTLINED_FUNCTION_17_9(v1);
  return Defaults.shouldUseGridView.modify;
}

uint64_t Defaults.shouldUseGridView.modify(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.shouldUseGridView.setter(v1);
}

uint64_t Defaults.maxHighVideoQualityParticipantCount.getter()
{
  if (Defaults.isInternalInstall.getter()) {
    return (uint64_t)Defaults.int(for:default:)(44, (id)2);
  }
  else {
    return 2;
  }
}

uint64_t Defaults.maxMediumVideoQualityParticipantCount.getter()
{
  if (Defaults.isInternalInstall.getter()) {
    return (uint64_t)Defaults.int(for:default:)(45, (id)8);
  }
  else {
    return 8;
  }
}

uint64_t Defaults.allowAudioProminence.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(39);

  return v1 & 1;
}

uint64_t Defaults.allowVideoProminence.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(38);

  return v1 & 1;
}

uint64_t Defaults.disableAutomaticDrawerHiding.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return 0;
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(40);

  return v1 & 1;
}

uint64_t Defaults.allowLocalVideoRecording.getter()
{
  return TUAllowLocalVideoRecording();
}

BOOL Defaults.reduceMotion.getter()
{
  return UIAccessibilityIsReduceMotionEnabled();
}

id Defaults.conversationHandoffEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_conversationHandoffEnabled);
}

id Defaults.lagunaEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_lagunaEnabled);
}

id Defaults.lagunaPullBackEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_lagunaPullBackEnabled);
}

id Defaults.uPlusNDowngradeAvailable.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_uPlusNDowngrade);
}

id Defaults.nameAndPhotoEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_nameAndPhotoEnabled);
}

id Defaults.uPlusOneScreenSharingAvailable.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_uPlusOneScreenSharing);
}

id Defaults.previewMSROptimizationEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_previewMSROptimizationEnabled);
}

uint64_t Defaults.fullScreenOneToOneInGFTEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(78);

  return v1 & 1;
}

uint64_t Defaults.avLessWantsSceneEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(79);

  return v1 & 1;
}

uint64_t Defaults.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return 0;
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(86);

  return v1 & 1;
}

uint64_t Defaults.lastUserRequestedLocalParticipantCorner.getter()
{
  type metadata accessor for AppUtilities();
  BOOL v0 = static AppUtilities.isRTL.getter();
  if (v0) {
    unsigned int v1 = 2;
  }
  else {
    unsigned int v1 = 3;
  }
  if (v0) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 3;
  }
  id v3 = Defaults.int(for:default:)(80, (id)v2);
  LOBYTE(result) = MultiwayViewConstraintsController.MultiwayCorner.init(rawValue:)((Swift::Int)v3);
  if (result == 4) {
    return v1;
  }
  else {
    return result;
  }
}

uint64_t Defaults.lastUserRequestedLocalParticipantCorner.setter(unsigned __int8 a1)
{
  v2[3] = MEMORY[0x1E4FBB550];
  v2[0] = a1;
  Defaults.writeDefaults(value:for:)((uint64_t)v2, 80);
  return outlined destroy of Any?((uint64_t)v2);
}

uint64_t (*Defaults.lastUserRequestedLocalParticipantCorner.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  *(unsigned char *)(v1 + 8) = Defaults.lastUserRequestedLocalParticipantCorner.getter();
  return Defaults.lastUserRequestedLocalParticipantCorner.modify;
}

uint64_t Defaults.lastUserRequestedLocalParticipantCorner.modify(uint64_t a1)
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.lastUserRequestedLocalParticipantCorner.setter(v1);
}

uint64_t Defaults.participantEmailsToShowAsNeedingAuthorization.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v0 = MEMORY[0x1E4FBC860];
  return specialized Defaults.array<A>(for:default:)(42, v0);
}

uint64_t Defaults.kickMemberTimeout.getter()
{
  return MEMORY[0x1F4163A78]();
}

uint64_t Defaults.captionsDisclosureHasBeenShown.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(67);

  return v1 & 1;
}

uint64_t Defaults.captionsDisclosureHasBeenShown.setter(char a1)
{
  return Defaults.shouldShowVoicemailIntroText.setter(a1, 67);
}

uint64_t (*Defaults.captionsDisclosureHasBeenShown.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  uint64_t HasBeen = Defaults.captionsDisclosureHasBeenShown.getter();
  OUTLINED_FUNCTION_17_9(HasBeen);
  return Defaults.captionsDisclosureHasBeenShown.modify;
}

uint64_t Defaults.captionsDisclosureHasBeenShown.modify(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.captionsDisclosureHasBeenShown.setter(v1);
}

BOOL Defaults.captionsUserAXSettingEnabled.getter()
{
  return _AXSFaceTimeCaptionsEnabled() != 0;
}

uint64_t Defaults.captionsUserAXSettingEnabled.setter(char a1)
{
  uint64_t v1 = a1 & 1;
  OUTLINED_FUNCTION_50();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 728))();
  if ((result & 1) != v1)
  {
    return MEMORY[0x1F4178F48](v1);
  }
  return result;
}

uint64_t (*Defaults.captionsUserAXSettingEnabled.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  *(unsigned char *)(v1 + 8) = _AXSFaceTimeCaptionsEnabled() != 0;
  return Defaults.captionsUserAXSettingEnabled.modify;
}

uint64_t Defaults.captionsUserAXSettingEnabled.modify(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.captionsUserAXSettingEnabled.setter(v1);
}

double Defaults.captionsLowConfidenceThreshold.getter()
{
  unsigned __int8 v0 = Defaults.isInternalInstall.getter();
  double result = 50.0;
  if (v0) {
    return Defaults.double(for:default:)(68, 50.0);
  }
  return result;
}

uint64_t Defaults.captionsAllowedInScreenshots.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return 0;
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(69);

  return v1 & 1;
}

uint64_t Defaults.captionsUnavailableThreshold.getter()
{
  if (Defaults.isInternalInstall.getter()) {
    return (uint64_t)Defaults.int(for:default:)(70, (id)3);
  }
  else {
    return 3;
  }
}

double Defaults.captionsTimeToSuppression.getter()
{
  unsigned __int8 v0 = Defaults.isInternalInstall.getter();
  double result = 5.0;
  if (v0) {
    return Defaults.double(for:default:)(71, 5.0);
  }
  return result;
}

double Defaults.captionsTimeToLive.getter()
{
  unsigned __int8 v0 = Defaults.isInternalInstall.getter();
  double result = 60.0;
  if (v0) {
    return Defaults.double(for:default:)(72, 60.0);
  }
  return result;
}

unint64_t Defaults.mockScreeningGeneratorEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(73);

  if (v1) {
    return (unint64_t)Defaults.isInternalInstall.getter() & 1;
  }
  else {
    return 0;
  }
}

id Defaults.secondsBeforeAnsweringAsScreening.getter()
{
  return Defaults.int(for:default:)(74, (id)0x11);
}

id Defaults.maxSecondsForScreeningState.getter()
{
  return Defaults.int(for:default:)(75, (id)0x78);
}

unint64_t Defaults.screeningDebugSendConstantNotifications.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(76);

  if (v1) {
    return (unint64_t)Defaults.isInternalInstall.getter() & 1;
  }
  else {
    return 0;
  }
}

double Defaults.secondsDelayBeforeShowingNameAndPhotoBanner.getter()
{
  return Defaults.float(for:default:)(77, 1.5);
}

uint64_t Defaults.shouldShowLinkEducationFirstTimeAlert.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_3_130(64);

  return v1 & 1;
}

uint64_t Defaults.shouldShowLinkEducationFirstTimeAlert.setter(char a1)
{
  return Defaults.shouldShowVoicemailIntroText.setter(a1, 64);
}

uint64_t (*Defaults.shouldShowLinkEducationFirstTimeAlert.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  uint64_t Time = Defaults.shouldShowLinkEducationFirstTimeAlert.getter();
  OUTLINED_FUNCTION_17_9(Time);
  return Defaults.shouldShowLinkEducationFirstTimeAlert.modify;
}

uint64_t Defaults.shouldShowLinkEducationFirstTimeAlert.modify(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.shouldShowLinkEducationFirstTimeAlert.setter(v1);
}

id Defaults.avLessSharePlayEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_avLessSharePlayEnabled);
}

id Defaults.wombatWisdomEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_wombatWisdomEnabled);
}

uint64_t key path setter for Defaults.participantHandlesOfAcknowledgedRCSessions : Defaults(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 896);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t Defaults.participantHandlesOfAcknowledgedRCSessions.getter()
{
  return specialized Defaults.array<A>(for:default:)(88, MEMORY[0x1E4FBC860]);
}

uint64_t Defaults.participantHandlesOfAcknowledgedRCSessions.setter(uint64_t a1)
{
  v3[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  v3[0] = a1;
  Defaults.writeDefaults(value:for:)((uint64_t)v3, 88);
  return outlined destroy of Any?((uint64_t)v3);
}

uint64_t (*Defaults.participantHandlesOfAcknowledgedRCSessions.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = specialized Defaults.array<A>(for:default:)(88, MEMORY[0x1E4FBC860]);
  return Defaults.participantHandlesOfAcknowledgedRCSessions.modify;
}

uint64_t Defaults.participantHandlesOfAcknowledgedRCSessions.modify(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return Defaults.participantHandlesOfAcknowledgedRCSessions.setter(*a1);
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  Defaults.participantHandlesOfAcknowledgedRCSessions.setter(v2);
  return swift_bridgeObjectRelease();
}

double Defaults.systemHUDDismissal.getter()
{
  return Defaults.float(for:default:)(48, 3.4028e38);
}

double Defaults.inCallHUDDismissal.getter()
{
  return Defaults.float(for:default:)(49, 10.0);
}

double Defaults.pendingAuthorizationDismissal.getter()
{
  return Defaults.float(for:default:)(50, 10.0);
}

double Defaults.handoffApproveDismissal.getter()
{
  return Defaults.float(for:default:)(56, 8.0);
}

double Defaults.shareNameAndPhotoDismissal.getter()
{
  return Defaults.float(for:default:)(57, 3.4028e38);
}

uint64_t Defaults.forceOutgoingSNaPBanner.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(58);

  return v1 & 1;
}

uint64_t Defaults.forceIncomingSNaPBanner.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(59);

  return v1 & 1;
}

double Defaults.startNoticeDismissal.getter()
{
  return Defaults.float(for:default:)(51, 12.0);
}

double Defaults.priorityNoticeDismissal.getter()
{
  return Defaults.float(for:default:)(51, 6.0);
}

double Defaults.noticeDismissal.getter()
{
  return Defaults.float(for:default:)(51, 4.0);
}

id Defaults.noticeExpirationSeconds.getter()
{
  return Defaults.int(for:default:)(52, (id)3);
}

double Defaults.noticeCoordinatorTimeout.getter()
{
  return Defaults.float(for:default:)(53, 1.5);
}

double Defaults.ephemeralAlertDismissal.getter()
{
  return Defaults.float(for:default:)(54, 1.5);
}

double Defaults.controlsCrossFadeDuration.getter()
{
  return Defaults.float(for:default:)(55, 0.3);
}

id Defaults.countdownDuration.getter()
{
  return Defaults.int(for:default:)(60, (id)3);
}

double Defaults.countdownTickDuration.getter()
{
  return Defaults.float(for:default:)(61, 1.0);
}

double Defaults.joinCountdownThreshold.getter()
{
  return Defaults.float(for:default:)(63, 60.0);
}

double Defaults.joinCountdownDuration.getter()
{
  return Defaults.float(for:default:)(62, 5.0);
}

double Defaults.reactionDuration.getter()
{
  return Defaults.float(for:default:)(81, 5.0);
}

uint64_t Defaults.radarReportingEnabled.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return 0;
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(84);

  return v1 & 1;
}

uint64_t Defaults.testTrackingFailure.getter()
{
  if ((Defaults.isInternalInstall.getter() & 1) == 0) {
    return 0;
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = OUTLINED_FUNCTION_1_136(85);

  return v1 & 1;
}

uint64_t Defaults.testTrackingFailure.setter(char a1)
{
  return Defaults.shouldShowVoicemailIntroText.setter(a1, 85);
}

uint64_t Defaults.shouldShowVoicemailIntroText.setter(char a1, char a2)
{
  uint64_t v4 = MEMORY[0x1E4FBB390];
  v3[0] = a1;
  Defaults.writeDefaults(value:for:)((uint64_t)v3, a2);
  return outlined destroy of Any?((uint64_t)v3);
}

uint64_t (*Defaults.testTrackingFailure.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_20_27(a1);
  uint64_t v1 = Defaults.testTrackingFailure.getter();
  OUTLINED_FUNCTION_17_9(v1);
  return Defaults.testTrackingFailure.modify;
}

uint64_t Defaults.testTrackingFailure.modify(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_12_5(a1);
  return Defaults.testTrackingFailure.setter(v1);
}

unint64_t Defaults.Key.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000023;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000020;
      break;
    case 11:
      unint64_t result = 0xD000000000000023;
      break;
    case 12:
      unint64_t result = 0xD000000000000023;
      break;
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 14:
      unint64_t result = 0x6E656E696D6F7270;
      break;
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0xD000000000000011;
      break;
    case 17:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 18:
      unint64_t result = 0xD000000000000016;
      break;
    case 19:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 20:
      unint64_t result = 0xD000000000000019;
      break;
    case 21:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 24:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 25:
      unint64_t result = 0xD000000000000017;
      break;
    case 26:
      unint64_t result = 0xD000000000000019;
      break;
    case 27:
      unint64_t result = 0xD000000000000013;
      break;
    case 28:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 29:
      unint64_t result = 0x53656D6954616D65;
      break;
    case 30:
      unint64_t result = 0xD000000000000011;
      break;
    case 31:
    case 32:
    case 33:
    case 34:
    case 39:
    case 46:
    case 84:
    case 90:
      unint64_t result = 0xD000000000000014;
      break;
    case 35:
      unint64_t result = 0xD000000000000016;
      break;
    case 36:
      unint64_t result = 0xD000000000000015;
      break;
    case 37:
      unint64_t result = 0xD000000000000012;
      break;
    case 38:
      unint64_t result = 0xD000000000000016;
      break;
    case 40:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 41:
      unint64_t result = 0xD000000000000019;
      break;
    case 42:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 43:
      unint64_t result = 0xD000000000000011;
      break;
    case 44:
      unint64_t result = 0xD000000000000023;
      break;
    case 45:
      unint64_t result = 0xD000000000000025;
      break;
    case 47:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 48:
      unint64_t result = 0xD000000000000012;
      break;
    case 49:
      unint64_t result = 0xD000000000000012;
      break;
    case 50:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 51:
      unint64_t result = 0x6944656369746F6ELL;
      break;
    case 52:
      unint64_t result = 0xD000000000000017;
      break;
    case 53:
      unint64_t result = 0xD000000000000018;
      break;
    case 54:
      unint64_t result = 0xD000000000000017;
      break;
    case 55:
      unint64_t result = 0xD000000000000019;
      break;
    case 56:
      unint64_t result = 0xD000000000000017;
      break;
    case 57:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 58:
      unint64_t result = 0xD000000000000017;
      break;
    case 59:
      unint64_t result = 0xD000000000000017;
      break;
    case 60:
      unint64_t result = 0xD000000000000011;
      break;
    case 61:
      unint64_t result = 0xD000000000000015;
      break;
    case 62:
      unint64_t result = 0xD000000000000015;
      break;
    case 63:
      unint64_t result = 0xD000000000000016;
      break;
    case 64:
      unint64_t result = 0xD000000000000025;
      break;
    case 65:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 66:
      unint64_t result = 0xD000000000000018;
      break;
    case 67:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 68:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 69:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 70:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 71:
      unint64_t result = 0xD000000000000019;
      break;
    case 72:
      unint64_t result = 0xD000000000000012;
      break;
    case 73:
      unint64_t result = 0xD000000000000016;
      break;
    case 74:
      unint64_t result = 0xD000000000000025;
      break;
    case 75:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 76:
      unint64_t result = 0xD000000000000027;
      break;
    case 77:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 78:
      unint64_t result = 0xD000000000000017;
      break;
    case 79:
      unint64_t result = 0xD000000000000010;
      break;
    case 80:
      unint64_t result = 0xD000000000000027;
      break;
    case 81:
      unint64_t result = 0xD000000000000010;
      break;
    case 82:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 83:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 85:
      unint64_t result = 0xD000000000000013;
      break;
    case 86:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 87:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 88:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 89:
      unint64_t result = 0xD000000000000027;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Defaults.BoxedValue.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

id Defaults.isInternalInstall.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  if (!v0) {
    return 0;
  }
  char v1 = v0;
  id v2 = objc_msgSend(v0, sel_isInternalInstall);

  return v2;
}

void Defaults.writeDefaults(value:for:)(uint64_t a1, char a2)
{
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  outlined init with copy of Any?(a1, (uint64_t)v14);
  uint64_t v5 = v15;
  if (v15)
  {
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v7 = *(void *)(v5 - 8);
    __n128 v8 = MEMORY[0x1F4188790](v6);
    long long v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    uint64_t v11 = 0;
  }
  unint64_t v12 = Defaults.Key.rawValue.getter(a2);
  id v13 = (void *)MEMORY[0x1C87730B0](v12);
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setValue_forKey_, v11, v13);

  swift_unknownObjectRelease();
}

uint64_t Defaults.BOOL(for:domain:default:)(char a1, void *a2, unsigned __int8 a3)
{
  unint64_t v6 = Defaults.Key.rawValue.getter(a1);
  uint64_t v7 = (void *)MEMORY[0x1C87730B0](v6);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a2, sel_objectForKey_, v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined destroy of Any?((uint64_t)v20);
    unint64_t v17 = Defaults.Key.rawValue.getter(a1);
    id v18 = (void *)MEMORY[0x1C87730B0](v17);
    swift_bridgeObjectRelease();
    a3 = objc_msgSend(a2, sel_BOOLForKey_, v18);
  }
  else
  {
    OUTLINED_FUNCTION_8_80(v9, v10, v11, v12, v13, v14, v15, v16, v20[0], v20[1]);
  }
  return a3 & 1;
}

id Defaults.int(for:default:)(char a1, id a2)
{
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_standardUserDefaults);
  unint64_t v6 = Defaults.Key.rawValue.getter(a1);
  uint64_t v7 = (void *)MEMORY[0x1C87730B0](v6);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_objectForKey_, v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined destroy of Any?((uint64_t)v21);
    id v17 = objc_msgSend(v4, sel_standardUserDefaults);
    unint64_t v18 = Defaults.Key.rawValue.getter(a1);
    uint64_t v19 = (void *)MEMORY[0x1C87730B0](v18);
    swift_bridgeObjectRelease();
    a2 = objc_msgSend(v17, sel_integerForKey_, v19);
  }
  else
  {
    OUTLINED_FUNCTION_8_80(v9, v10, v11, v12, v13, v14, v15, v16, v21[0], v21[1]);
  }
  return a2;
}

float Defaults.float(for:default:)(char a1, float a2)
{
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_standardUserDefaults);
  unint64_t v6 = Defaults.Key.rawValue.getter(a1);
  uint64_t v7 = (void *)MEMORY[0x1C87730B0](v6);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_objectForKey_, v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined destroy of Any?((uint64_t)v22);
    id v17 = objc_msgSend(v4, sel_standardUserDefaults);
    unint64_t v18 = Defaults.Key.rawValue.getter(a1);
    uint64_t v19 = (void *)MEMORY[0x1C87730B0](v18);
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_floatForKey_, v19);
    a2 = v20;
  }
  else
  {
    OUTLINED_FUNCTION_8_80(v9, v10, v11, v12, v13, v14, v15, v16, v22[0], v22[1]);
  }
  return a2;
}

double Defaults.double(for:default:)(char a1, double a2)
{
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_standardUserDefaults);
  unint64_t v6 = Defaults.Key.rawValue.getter(a1);
  uint64_t v7 = (void *)MEMORY[0x1C87730B0](v6);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_objectForKey_, v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined destroy of Any?((uint64_t)v22);
    id v17 = objc_msgSend(v4, sel_standardUserDefaults);
    unint64_t v18 = Defaults.Key.rawValue.getter(a1);
    uint64_t v19 = (void *)MEMORY[0x1C87730B0](v18);
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_doubleForKey_, v19);
    a2 = v20;
  }
  else
  {
    OUTLINED_FUNCTION_8_80(v9, v10, v11, v12, v13, v14, v15, v16, v22[0], v22[1]);
  }
  return a2;
}

uint64_t specialized Defaults.array<A>(for:default:)(char a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v5 = Defaults.Key.rawValue.getter(a1);
  unint64_t v6 = (void *)MEMORY[0x1C87730B0](v5);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_arrayForKey_, v6);

  if (v7)
  {
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = specialized _arrayConditionalCast<A, B>(_:)(v8);
    swift_bridgeObjectRelease();
    if (v9) {
      return v9;
    }
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t Defaults.string(for:default:)(char a1, uint64_t a2)
{
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_standardUserDefaults);
  unint64_t v6 = Defaults.Key.rawValue.getter(a1);
  id v7 = (void *)MEMORY[0x1C87730B0](v6);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_stringForKey_, v7);

  if (v8)
  {

    id v9 = objc_msgSend(v4, sel_standardUserDefaults);
    unint64_t v10 = Defaults.Key.rawValue.getter(a1);
    uint64_t v11 = (void *)MEMORY[0x1C87730B0](v10);
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v9, sel_stringForKey_, v11);

    if (v12)
    {
      a2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t Defaults.deinit()
{
  return v0;
}

uint64_t Defaults.__deallocating_deinit()
{
  Defaults.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for DefaultsProvider.enableAudioVisualization.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t protocol witness for DefaultsProvider.enableAudioVisualizationLogging.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t protocol witness for DefaultsProvider.forceVideoLayerVisible.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t protocol witness for DefaultsProvider.shouldIgnorePoorConnection.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t protocol witness for DefaultsProvider.showsForceAudioPriorityButton.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t protocol witness for DefaultsProvider.startUplinkMuted.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t protocol witness for DefaultsProvider.shouldEnableEffectsRendering.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t protocol witness for DefaultsProvider.supportsVideo.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t protocol witness for DefaultsProvider.supportsEffects.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t protocol witness for DefaultsProvider.useFlattenedUI.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t protocol witness for DefaultsProvider.activelyCommunicatingAudioThreshold.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t protocol witness for DefaultsProvider.activelyCommunicatingVideoThreshold.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t protocol witness for DefaultsProvider.mimimumActiveDuration.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t protocol witness for DefaultsProvider.forceMostActiveParticipantHandle.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t protocol witness for DefaultsProvider.mostActiveParticipantChangeInterval.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t protocol witness for DefaultsProvider.shouldShowProminenceDebuggingLabels.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t protocol witness for DefaultsProvider.organicSashFontSize.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t protocol witness for DefaultsProvider.organicCellCornerRadius.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t protocol witness for DefaultsProvider.organicCellGlowSizeMultiplier.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t protocol witness for DefaultsProvider.emaTimeScale.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t protocol witness for DefaultsProvider.emaTimerFrequency.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight1.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight2.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight3.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight4.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t protocol witness for DefaultsProvider.emaMinUIUpdateInterval.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t protocol witness for DefaultsProvider.emaLowerBoundTreshold.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t protocol witness for DefaultsProvider.shouldCenterRoster.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t protocol witness for DefaultsProvider.gridInterItemSpacing.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t protocol witness for DefaultsProvider.gridLayoutProminenceScaleAmount.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t protocol witness for DefaultsProvider.shouldUseGridView.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t protocol witness for DefaultsProvider.shouldUseGridView.setter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t (*protocol witness for DefaultsProvider.shouldUseGridView.modify in conformance Defaults(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 520))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.maxHighVideoQualityParticipantCount.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t protocol witness for DefaultsProvider.maxMediumVideoQualityParticipantCount.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t protocol witness for DefaultsProvider.allowAudioProminence.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t protocol witness for DefaultsProvider.allowVideoProminence.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t protocol witness for DefaultsProvider.disableAutomaticDrawerHiding.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t protocol witness for DefaultsProvider.allowLocalVideoRecording.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t protocol witness for DefaultsProvider.reduceMotion.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t protocol witness for DefaultsProvider.participantEmailsToShowAsNeedingAuthorization.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t protocol witness for DefaultsProvider.kickMemberTimeout.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t protocol witness for DefaultsProvider.systemHUDDismissal.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t protocol witness for DefaultsProvider.inCallHUDDismissal.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t protocol witness for DefaultsProvider.noticeDismissal.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t protocol witness for DefaultsProvider.ephemeralAlertDismissal.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1008))();
}

uint64_t protocol witness for DefaultsProvider.controlsCrossFadeDuration.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
}

uint64_t protocol witness for DefaultsProvider.countdownDuration.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t protocol witness for DefaultsProvider.countdownTickDuration.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t protocol witness for DefaultsProvider.joinCountdownThreshold.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1040))();
}

uint64_t protocol witness for DefaultsProvider.joinCountdownDuration.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1048))();
}

uint64_t protocol witness for DefaultsProvider.supportsCinematicFraming.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t protocol witness for DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t protocol witness for DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.setter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t (*protocol witness for DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.modify in conformance Defaults(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 848))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.bannerDragControllerEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t protocol witness for DefaultsProvider.captionsDisclosureHasBeenShown.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t protocol witness for DefaultsProvider.captionsDisclosureHasBeenShown.setter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t (*protocol witness for DefaultsProvider.captionsDisclosureHasBeenShown.modify in conformance Defaults(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 720))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.captionsUserAXSettingEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t protocol witness for DefaultsProvider.captionsUserAXSettingEnabled.setter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t (*protocol witness for DefaultsProvider.captionsUserAXSettingEnabled.modify in conformance Defaults(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 744))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.captionsLowConfidenceThreshold.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t protocol witness for DefaultsProvider.captionsAllowedInScreenshots.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t protocol witness for DefaultsProvider.captionsUnavailableThreshold.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t protocol witness for DefaultsProvider.captionsTimeToSuppression.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t protocol witness for DefaultsProvider.captionsTimeToLive.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t protocol witness for DefaultsProvider.supportsScreenSharingCALayerHostMode.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t protocol witness for DefaultsProvider.supportsScreenSharingDeskView.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t protocol witness for DefaultsProvider.fullScreenOneToOneInGFTEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t protocol witness for DefaultsProvider.uPlusOneScreenSharingAvailable.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t protocol witness for DefaultsProvider.lastUserRequestedLocalParticipantCorner.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t protocol witness for DefaultsProvider.lastUserRequestedLocalParticipantCorner.setter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t (*protocol witness for DefaultsProvider.lastUserRequestedLocalParticipantCorner.modify in conformance Defaults(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 680))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.videoMessagingEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t protocol witness for DefaultsProvider.memojiCameraEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t protocol witness for DefaultsProvider.mockScreeningGeneratorEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t protocol witness for DefaultsProvider.wombatWisdomEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t protocol witness for DefaultsProvider.lagunaEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t protocol witness for DefaultsProvider.lagunaPullBackEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t protocol witness for DefaultsProvider.previewMSROptimizationEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t protocol witness for DefaultsProvider.videoMessagingEnabledM3.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t protocol witness for DefaultsProvider.reactionDuration.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1056))();
}

uint64_t protocol witness for DefaultsProvider.collaborateTogetherEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t protocol witness for DefaultsProvider.oneCollaborationHUDPerDocument.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t protocol witness for DefaultsProvider.conversationHandoffEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t protocol witness for DefaultsProvider.sharePlayAvailable.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t protocol witness for DefaultsProvider.allowsScreenSharing.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t protocol witness for DefaultsProvider.requestToScreenShareEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t protocol witness for DefaultsProvider.gelatoEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t protocol witness for DefaultsProvider.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t protocol witness for DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.getter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t protocol witness for DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.setter in conformance Defaults()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t (*protocol witness for DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.modify in conformance Defaults(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))(*(void *)v1 + 904))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

id outlined bridged method (mbnn) of @objc LSApplicationWorkspace.applicationIsInstalled(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a3, sel_applicationIsInstalled_, v4);

  return v5;
}

uint64_t sub_1C35703EC()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 232))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C357042C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1C3570470()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 504))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C35704B8()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t sub_1C3570504()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 664))();
  unsigned char *v0 = result;
  return result;
}

uint64_t sub_1C357054C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 672))(*v1);
}

uint64_t sub_1C3570598()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 704))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C35705E0()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 712))();
}

uint64_t sub_1C357062C()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 728))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3570674()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 736))();
}

uint64_t sub_1C35706C0()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 832))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3570708()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 840))();
}

uint64_t sub_1C3570754()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 888))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_1C35707A0()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 1072))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C35707E8()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 1080))();
}

uint64_t dispatch thunk of DefaultsProvider.enableAudioVisualization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DefaultsProvider.enableAudioVisualizationLogging.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DefaultsProvider.forceVideoLayerVisible.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldIgnorePoorConnection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DefaultsProvider.showsForceAudioPriorityButton.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DefaultsProvider.startUplinkMuted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldEnableEffectsRendering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DefaultsProvider.useFlattenedUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DefaultsProvider.activelyCommunicatingAudioThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DefaultsProvider.activelyCommunicatingVideoThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of DefaultsProvider.mimimumActiveDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of DefaultsProvider.forceMostActiveParticipantHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DefaultsProvider.mostActiveParticipantChangeInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowProminenceDebuggingLabels.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of DefaultsProvider.organicSashFontSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of DefaultsProvider.organicCellCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of DefaultsProvider.organicCellGlowSizeMultiplier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of DefaultsProvider.emaTimeScale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of DefaultsProvider.emaTimerFrequency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight1.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight2.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight3.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight4.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of DefaultsProvider.emaMinUIUpdateInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of DefaultsProvider.emaLowerBoundTreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldCenterRoster.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of DefaultsProvider.gridInterItemSpacing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of DefaultsProvider.gridLayoutProminenceScaleAmount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldUseGridView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldUseGridView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldUseGridView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of DefaultsProvider.maxHighVideoQualityParticipantCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of DefaultsProvider.maxMediumVideoQualityParticipantCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of DefaultsProvider.allowAudioProminence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of DefaultsProvider.allowVideoProminence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of DefaultsProvider.disableAutomaticDrawerHiding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of DefaultsProvider.allowLocalVideoRecording.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of DefaultsProvider.reduceMotion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of DefaultsProvider.participantEmailsToShowAsNeedingAuthorization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of DefaultsProvider.kickMemberTimeout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of DefaultsProvider.systemHUDDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of DefaultsProvider.inCallHUDDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of DefaultsProvider.noticeDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t dispatch thunk of DefaultsProvider.ephemeralAlertDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 368))();
}

uint64_t dispatch thunk of DefaultsProvider.controlsCrossFadeDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of DefaultsProvider.countdownDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of DefaultsProvider.countdownTickDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of DefaultsProvider.joinCountdownThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of DefaultsProvider.joinCountdownDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsCinematicFraming.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 416))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 424))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 432))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 440))();
}

uint64_t dispatch thunk of DefaultsProvider.bannerDragControllerEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsDisclosureHasBeenShown.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsDisclosureHasBeenShown.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 464))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsDisclosureHasBeenShown.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 472))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUserAXSettingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 480))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUserAXSettingEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 488))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUserAXSettingEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 496))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsLowConfidenceThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 504))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsAllowedInScreenshots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 512))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUnavailableThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 520))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsTimeToSuppression.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 528))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsTimeToLive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 536))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsScreenSharingCALayerHostMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 544))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsScreenSharingDeskView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 552))();
}

uint64_t dispatch thunk of DefaultsProvider.fullScreenOneToOneInGFTEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 560))();
}

uint64_t dispatch thunk of DefaultsProvider.uPlusOneScreenSharingAvailable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 568))();
}

uint64_t dispatch thunk of DefaultsProvider.lastUserRequestedLocalParticipantCorner.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 576))();
}

uint64_t dispatch thunk of DefaultsProvider.lastUserRequestedLocalParticipantCorner.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 584))();
}

uint64_t dispatch thunk of DefaultsProvider.lastUserRequestedLocalParticipantCorner.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 592))();
}

uint64_t dispatch thunk of DefaultsProvider.videoMessagingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 600))();
}

uint64_t dispatch thunk of DefaultsProvider.memojiCameraEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 608))();
}

uint64_t dispatch thunk of DefaultsProvider.mockScreeningGeneratorEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 616))();
}

uint64_t dispatch thunk of DefaultsProvider.wombatWisdomEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 624))();
}

uint64_t dispatch thunk of DefaultsProvider.lagunaEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 632))();
}

uint64_t dispatch thunk of DefaultsProvider.lagunaPullBackEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 640))();
}

uint64_t dispatch thunk of DefaultsProvider.previewMSROptimizationEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 648))();
}

uint64_t dispatch thunk of DefaultsProvider.videoMessagingEnabledM3.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 656))();
}

uint64_t dispatch thunk of DefaultsProvider.reactionDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 664))();
}

uint64_t dispatch thunk of DefaultsProvider.collaborateTogetherEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 672))();
}

uint64_t dispatch thunk of DefaultsProvider.oneCollaborationHUDPerDocument.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 680))();
}

uint64_t dispatch thunk of DefaultsProvider.conversationHandoffEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 688))();
}

uint64_t dispatch thunk of DefaultsProvider.sharePlayAvailable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 696))();
}

uint64_t dispatch thunk of DefaultsProvider.allowsScreenSharing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 704))();
}

uint64_t dispatch thunk of DefaultsProvider.requestToScreenShareEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 712))();
}

uint64_t dispatch thunk of DefaultsProvider.gelatoEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 720))();
}

uint64_t dispatch thunk of DefaultsProvider.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 728))();
}

uint64_t dispatch thunk of DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 736))();
}

uint64_t dispatch thunk of DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 744))();
}

uint64_t dispatch thunk of DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 752))();
}

uint64_t method lookup function for Defaults(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Defaults);
}

uint64_t dispatch thunk of Defaults.enableAudioVisualization.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of Defaults.enableAudioVisualizationLogging.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of Defaults.forceVideoLayerVisible.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of Defaults.shouldIgnorePoorConnection.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of Defaults.showsForceAudioPriorityButton.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of Defaults.startUplinkMuted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of Defaults.shouldEnableEffectsRendering.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of Defaults.supportsVideo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of Defaults.allowsScreenSharing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of Defaults.requestToScreenShareEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of Defaults.allowsScreenSharingNotifications.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of Defaults.supportsEffects.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of Defaults.supportsCinematicFraming.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of Defaults.sharePlayAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of Defaults.screenSharingAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of Defaults.forceScreenSharingAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of Defaults.bannerDragControllerEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of Defaults.shouldShowVoicemailIntroText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of Defaults.shouldShowVoicemailIntroText.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of Defaults.shouldShowVoicemailIntroText.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of Defaults.sckSystemPickerEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of Defaults.shouldShowVideoLayerDebugColors.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of Defaults.gelatoEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of Defaults.collaborateTogetherEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of Defaults.oneCollaborationHUDPerDocument.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of Defaults.supportsScreenSharingCALayerHostMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of Defaults.supportsScreenSharingDeskView.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of Defaults.gameCenterSharePlayIntegration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of Defaults.useFlattenedUI.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of Defaults.activelyCommunicatingAudioThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of Defaults.activelyCommunicatingVideoThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of Defaults.mimimumActiveDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of Defaults.forceMostActiveParticipantHandle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of Defaults.mostActiveParticipantChangeInterval.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of Defaults.shouldShowProminenceDebuggingLabels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of Defaults.organicSashFontSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of Defaults.organicCellCornerRadius.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of Defaults.screenSharingCornerRadius.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of Defaults.organicCellGlowSizeMultiplier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of Defaults.emaTimeScale.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of Defaults.emaTimerFrequency.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight1.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight2.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight3.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight4.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of Defaults.emaMinUIUpdateInterval.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of Defaults.emaLowerBoundTreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of Defaults.shouldCenterRoster.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of Defaults.memojiCameraEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of Defaults.gridInterItemSpacing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of Defaults.gridLayoutProminenceScaleAmount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of Defaults.shouldUseGridView.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of Defaults.shouldUseGridView.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of Defaults.shouldUseGridView.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of Defaults.maxHighVideoQualityParticipantCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of Defaults.maxMediumVideoQualityParticipantCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of Defaults.allowAudioProminence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of Defaults.allowVideoProminence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of Defaults.disableAutomaticDrawerHiding.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of Defaults.allowLocalVideoRecording.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of Defaults.reduceMotion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of Defaults.conversationHandoffEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of Defaults.lagunaEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of Defaults.lagunaPullBackEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of Defaults.uPlusNDowngradeAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of Defaults.nameAndPhotoEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of Defaults.uPlusOneScreenSharingAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of Defaults.previewMSROptimizationEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of Defaults.fullScreenOneToOneInGFTEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of Defaults.avLessWantsSceneEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of Defaults.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of Defaults.lastUserRequestedLocalParticipantCorner.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of Defaults.lastUserRequestedLocalParticipantCorner.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of Defaults.lastUserRequestedLocalParticipantCorner.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of Defaults.participantEmailsToShowAsNeedingAuthorization.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of Defaults.kickMemberTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of Defaults.captionsDisclosureHasBeenShown.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of Defaults.captionsDisclosureHasBeenShown.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of Defaults.captionsDisclosureHasBeenShown.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of Defaults.captionsUserAXSettingEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of Defaults.captionsUserAXSettingEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of Defaults.captionsUserAXSettingEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of Defaults.captionsLowConfidenceThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of Defaults.captionsAllowedInScreenshots.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of Defaults.captionsUnavailableThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of Defaults.captionsTimeToSuppression.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of Defaults.captionsTimeToLive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of Defaults.mockScreeningGeneratorEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of Defaults.secondsBeforeAnsweringAsScreening.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of Defaults.maxSecondsForScreeningState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of Defaults.screeningDebugSendConstantNotifications.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of Defaults.secondsDelayBeforeShowingNameAndPhotoBanner.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of Defaults.shouldShowLinkEducationFirstTimeAlert.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of Defaults.shouldShowLinkEducationFirstTimeAlert.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t dispatch thunk of Defaults.shouldShowLinkEducationFirstTimeAlert.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of Defaults.avLessSharePlayEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t dispatch thunk of Defaults.videoMessagingEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of Defaults.videoMessagingEnabledM3.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of Defaults.wombatWisdomEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of Defaults.participantHandlesOfAcknowledgedRCSessions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of Defaults.participantHandlesOfAcknowledgedRCSessions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of Defaults.participantHandlesOfAcknowledgedRCSessions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of Defaults.systemHUDDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t dispatch thunk of Defaults.inCallHUDDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of Defaults.pendingAuthorizationDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of Defaults.handoffApproveDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of Defaults.shareNameAndPhotoDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 944))();
}

uint64_t dispatch thunk of Defaults.forceOutgoingSNaPBanner.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

uint64_t dispatch thunk of Defaults.forceIncomingSNaPBanner.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t dispatch thunk of Defaults.startNoticeDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of Defaults.priorityNoticeDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 976))();
}

uint64_t dispatch thunk of Defaults.noticeDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t dispatch thunk of Defaults.noticeExpirationSeconds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 992))();
}

uint64_t dispatch thunk of Defaults.noticeCoordinatorTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1000))();
}

uint64_t dispatch thunk of Defaults.ephemeralAlertDismissal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1008))();
}

uint64_t dispatch thunk of Defaults.controlsCrossFadeDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
}

uint64_t dispatch thunk of Defaults.countdownDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t dispatch thunk of Defaults.countdownTickDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t dispatch thunk of Defaults.joinCountdownThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1040))();
}

uint64_t dispatch thunk of Defaults.joinCountdownDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1048))();
}

uint64_t dispatch thunk of Defaults.reactionDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1056))();
}

uint64_t dispatch thunk of Defaults.radarReportingEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1064))();
}

uint64_t dispatch thunk of Defaults.testTrackingFailure.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1072))();
}

uint64_t dispatch thunk of Defaults.testTrackingFailure.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1080))();
}

uint64_t dispatch thunk of Defaults.testTrackingFailure.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1088))();
}

uint64_t dispatch thunk of Defaults.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 1168))();
}

uint64_t type metadata accessor for Defaults.BoxedValue()
{
  return self;
}

uint64_t outlined init with copy of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id PreCallConfirmationViewController.__allocating_init(callCenter:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PreCallConfirmationViewController.init(callCenter:)(a1);
}

id PreCallConfirmationViewController.init(callCenter:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  id v5 = &v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_callCenter] = a1;
  uint64_t v6 = type metadata accessor for PreCallConfirmationService();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  id v8 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_service];
  v8[3] = v6;
  v8[4] = (uint64_t)&protocol witness table for PreCallConfirmationService;
  uint64_t *v8 = v7;
  v11.receiver = v1;
  v11.super_class = ObjectType;
  id v9 = a1;
  return objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, 0, 0);
}

id PreCallConfirmationViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PreCallConfirmationViewController.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  id v2 = &v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t PreCallConfirmationViewController.requestPreCallConfirmation(_:cancel:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = *(void **)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  unint64_t v10 = (uint64_t *)(v5 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel);
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel);
  *unint64_t v10 = a2;
  v10[1] = a3;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
  id v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion);
  uint64_t v13 = *(void *)(v5 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion);
  *id v12 = a4;
  v12[1] = a5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v13);
  PreCallConfirmationViewController.buttonsViewModel.getter();
  uint64_t v15 = v8;
  char v16 = v9;
  PreCallButtonsViewModel.setPreCallContext(_:)(&v15);
  return swift_release();
}

void *PreCallConfirmationViewController.buttonsViewModel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel;
  if (*(void *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel])
  {
    id v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel];
  }
  else
  {
    id v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WeakBox<PreCallConfirmationViewController>);
    swift_allocObject();
    uint64_t v4 = v0;
    specialized WeakBox.init(_:)(v0);
    type metadata accessor for PreCallButtonsViewModel();
    swift_allocObject();
    id v2 = PreCallButtonsViewModel.init(preCallDelegate:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

Swift::Void __swiftcall PreCallConfirmationViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  PreCallConfirmationViewController.setupConstraints()();
  PreCallConfirmationViewController.statusViewModel.getter();
  PreCallStatusViewModel.startObservation()();
  swift_release();
}

void PreCallConfirmationViewController.setupConstraints()()
{
  objc_super v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769580;
  id v3 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(v5, sel_topAnchor);

  id v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v7);
  *(void *)(v2 + 32) = v8;
  id v9 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  id v10 = objc_msgSend(v9, sel_bottomAnchor);

  id v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v12 = v11;
  id v13 = objc_msgSend(v11, sel_bottomAnchor);

  id v14 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v13);
  *(void *)(v2 + 40) = v14;
  id v15 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  id v16 = objc_msgSend(v15, sel_leadingAnchor);

  id v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v18 = v17;
  id v19 = objc_msgSend(v17, sel_leadingAnchor);

  id v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);
  *(void *)(v2 + 48) = v20;
  id v21 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v1, sel_view);
  if (!v23)
  {
LABEL_11:
    __break(1u);
    return;
  }
  CGRect v24 = v23;
  id v25 = objc_msgSend(v23, sel_trailingAnchor);

  id v26 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v25);
  *(void *)(v2 + 56) = v26;
  specialized Array._endMutation()();
  PreCallConfirmationViewController.setupButtonsView()();
  specialized Array.append<A>(contentsOf:)();
  PreCallConfirmationViewController.setupStatus()();
  specialized Array.append<A>(contentsOf:)();
  id v27 = self;
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, isa);
}

void *PreCallConfirmationViewController.statusViewModel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel);
  }
  else
  {
    id v3 = PreCallConfirmationViewController.buttonsViewModel.getter();
    type metadata accessor for PreCallStatusViewModel();
    uint64_t v2 = (void *)swift_allocObject();
    v2[7] = type metadata accessor for PreCallButtonsViewModel();
    v2[8] = &protocol witness table for PreCallButtonsViewModel;
    v2[3] = 0;
    void v2[4] = v3;
    swift_unknownObjectWeakInit();
    v2[9] = 0;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

Swift::Void __swiftcall PreCallConfirmationViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1);
  id v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_callCenter], sel_videoDeviceController);
  objc_msgSend(v3, sel_startPreview);
}

id PreCallConfirmationViewController.setupButtonsView()()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C3769F40;
  id v2 = PreCallConfirmationViewController.buttonsView.getter();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v5 = result;
  id v6 = objc_msgSend(result, sel_leadingAnchor);

  id v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(void *)(v1 + 32) = v7;
  id v8 = PreCallConfirmationViewController.buttonsView.getter();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v10 = result;
  id v11 = objc_msgSend(result, sel_trailingAnchor);

  id v12 = objc_msgSend(v9, sel_constraintLessThanOrEqualToAnchor_, v11);
  *(void *)(v1 + 40) = v12;
  id v13 = PreCallConfirmationViewController.buttonsView.getter();
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    id v15 = result;
    id v16 = objc_msgSend(result, sel_bottomAnchor);

    id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
    *(void *)(v1 + 48) = v17;
    specialized Array._endMutation()();
    return (id)v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

id PreCallConfirmationViewController.setupStatus()()
{
  uint64_t v1 = PreCallConfirmationViewController.statusViewModel.getter();
  id v2 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  swift_beginAccess();
  v1[3] = &protocol witness table for CallControlsStatusView;
  swift_unknownObjectWeakAssign();
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3769F40;
  id v4 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v7 = result;
  id v8 = objc_msgSend(result, sel_topAnchor);

  id v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v8, 52.0);
  *(void *)(v3 + 32) = v9;
  id v10 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v12 = result;
  id v13 = objc_msgSend(result, sel_safeAreaLayoutGuide);

  id v14 = objc_msgSend(v13, sel_leadingAnchor);
  id v15 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v14, 24.0);

  *(void *)(v3 + 40) = v15;
  id v16 = PreCallConfirmationViewController.videoPreview.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    unint64_t v18 = result;
    id v19 = objc_msgSend(result, sel_safeAreaLayoutGuide);

    id v20 = objc_msgSend(v19, sel_trailingAnchor);
    id v21 = objc_msgSend(v17, sel_constraintLessThanOrEqualToAnchor_, v20);

    *(void *)(v3 + 48) = v21;
    specialized Array._endMutation()();
    return (id)v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

id closure #1 in PreCallConfirmationViewController.videoPreview.getter(char *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v3, sel_setContentsGravity_, *MEMORY[0x1E4F3A3E0]);

  id v4 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_callCenter];
  id v5 = objc_msgSend(v4, sel_videoDeviceController);
  id v6 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v5, sel_setLocalFrontLayer_, v6);

  id v7 = objc_msgSend(v4, sel_videoDeviceController);
  objc_msgSend(v7, sel_setCurrentVideoOrientation_, 2);

  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    id v9 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PreCallConfirmationViewController.buttonsView.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = type metadata accessor for PreCallButtonsView();
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v29 - v7;
  uint64_t v9 = OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView;
  id v10 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView];
  if (v10)
  {
    id v11 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView];
LABEL_9:
    id v28 = v10;
    return v11;
  }
  outlined init with copy of IDSLookupManager((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_service], (uint64_t)v31);
  PreCallConfirmationViewController.buttonsViewModel.getter();
  type metadata accessor for PreCallButtonsViewModel();
  lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  swift_retain();
  Bindable<A>.init(wrappedValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallControlsPreCallButtonViewModel>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C37696D0;
  uint64_t v13 = type metadata accessor for CancelConfirmationViewModel();
  swift_allocObject();
  uint64_t v14 = CancelConfirmationViewModel.init()();
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 64) = &protocol witness table for CancelConfirmationViewModel;
  *(void *)(inited + 32) = v14;
  outlined init with copy of IDSLookupManager((uint64_t)v31, (uint64_t)v30);
  uint64_t v15 = type metadata accessor for DialButtonViewModel();
  swift_allocObject();
  uint64_t v16 = DialButtonViewModel.init(service:)(v30);
  *(void *)(inited + 96) = v15;
  *(void *)(inited + 104) = &protocol witness table for DialButtonViewModel;
  *(void *)(inited + 72) = v16;
  uint64_t v17 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit015CallControlsPreH15ButtonViewModel_pGG_AH0jhlM6Holder33_801AF6C8C7AF9F90D2770D7757FA6A2ELLVs5NeverOTg506_sSi15f6Kit015hij3C15klm22_pAA0ecgH6Holder33_801opqrstuvw38ELLVIgynr_Si6offset_AaB_p7elementtAEs5X181OIegnrzr_TR04_s15a5Kit18ec7Buttonsg14V7service9viewh66AcA0cD21ConfirmationServicing_p_AA0cdefI0CtcfcAA0cdfI6Holder33_801jklmnopqR40ELLVSi_AA0d8Controlscd6ButtonfI0_ptXEfU_Tf3nnnpf_nTf1cn_n(inited);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  *(void *)&v8[*(int *)(v3 + 20)] = v17;
  outlined init with copy of PreCallButtonsView((uint64_t)v8, (uint64_t)v5);
  id v18 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingController<PreCallButtonsView>));
  id v19 = (void *)UIHostingController.init(rootView:)();
  UIHostingController.safeAreaRegions.setter();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  objc_msgSend(v1, sel_addChildViewController_, v19);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v21 = result;
  id result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v22 = result;
  objc_msgSend(v21, sel_addSubview_, result);

  objc_msgSend(v19, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v23 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  CGRect v24 = result;
  id v25 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v24, sel_setBackgroundColor_, v25);

  id result = objc_msgSend(v19, sel_view);
  if (result)
  {
    id v26 = result;
    outlined destroy of PreCallButtonsView((uint64_t)v8);

    id v27 = *(void **)&v1[v9];
    *(void *)&v1[v9] = v26;
    id v11 = v26;

    id v10 = 0;
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
  return result;
}

id PreCallConfirmationViewController.videoPreview.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id PreCallConfirmationViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PreCallConfirmationViewController.init(nibName:bundle:)()
{
}

id PreCallConfirmationViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t WeakBox<>.didTapCancel()()
{
  return WeakBox<>.didTapCancel()(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel);
}

uint64_t WeakBox<>.didPerformAction()()
{
  return WeakBox<>.didTapCancel()(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion);
}

uint64_t WeakBox<>.didTapCancel()(void *a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v1 + 16);
  if (result)
  {
    uint64_t v4 = (void *)result;
    id v5 = *(void (**)(uint64_t))(result + *a1);
    if (v5)
    {
      uint64_t v6 = swift_retain();
      v5(v6);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);
    }
    PreCallConfirmationViewController.buttonsViewModel.getter();
    PreCallButtonsViewModel.clearPreCallContext()();

    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for PreCallConfirmationViewController()
{
  return self;
}

uint64_t method lookup function for PreCallConfirmationViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PreCallConfirmationViewController);
}

uint64_t dispatch thunk of PreCallConfirmationViewController.__allocating_init(callCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t outlined init with copy of PreCallButtonsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreCallButtonsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PreCallButtonsView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PreCallButtonsView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id CallRecordingViewMaterialType.effect.getter()
{
  if (*v0)
  {
    if (*v0 != 1) {
      goto LABEL_8;
    }
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1C3769830;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIColorEffect);
    *(void *)(v1 + 32) = static UIColorEffect.inCallControlsButtonAvatarOnly.getter();
    specialized Array._endMutation()();
    id result = @nonobjc UIVisualEffect.init(combiningEffects:)(v1);
    if (result) {
      return result;
    }
    __break(1u);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3769610;
  id result = objc_msgSend(self, sel_effectWithBlurRadius_, 40.0);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v4 = result;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
  *(void *)(v3 + 32) = v4;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIColorEffect);
  *(void *)(v3 + 40) = static UIColorEffect.inCallControls.getter();
  specialized Array._endMutation()();
  id result = @nonobjc UIVisualEffect.init(combiningEffects:)(v3);
  if (result) {
    return result;
  }
  __break(1u);
LABEL_8:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3769610;
  id result = objc_msgSend(self, sel_effectWithBlurRadius_, 30.0);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v6 = result;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
  *(void *)(v5 + 32) = v6;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIColorEffect);
  *(void *)(v5 + 40) = static UIColorEffect.inCallControlsButtonNoPhotoNoAvatar.getter();
  specialized Array._endMutation()();
  id result = @nonobjc UIVisualEffect.init(combiningEffects:)(v5);
  if (!result) {
LABEL_13:
  }
    __break(1u);
  return result;
}

id @nonobjc UIVisualEffect.init(combiningEffects:)(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
    v1.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v1.super.Class isa = 0;
  }
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_effectCombiningEffects_, v1.super.isa);

  return v2;
}

ConversationKit::CallRecordingViewMaterialType_optional __swiftcall CallRecordingViewMaterialType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *NSArray v1 = v2;
  return (ConversationKit::CallRecordingViewMaterialType_optional)rawValue;
}

uint64_t CallRecordingViewMaterialType.rawValue.getter()
{
  return *v0;
}

unint64_t lazy protocol witness table accessor for type CallRecordingViewMaterialType and conformance CallRecordingViewMaterialType()
{
  unint64_t result = lazy protocol witness table cache variable for type CallRecordingViewMaterialType and conformance CallRecordingViewMaterialType;
  if (!lazy protocol witness table cache variable for type CallRecordingViewMaterialType and conformance CallRecordingViewMaterialType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingViewMaterialType and conformance CallRecordingViewMaterialType);
  }
  return result;
}

ConversationKit::CallRecordingViewMaterialType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance CallRecordingViewMaterialType(Swift::Int *a1)
{
  return CallRecordingViewMaterialType.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance CallRecordingViewMaterialType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallRecordingViewMaterialType.rawValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CallRecordingViewMaterialType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C357413CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingViewMaterialType()
{
  return &type metadata for CallRecordingViewMaterialType;
}

uint64_t TUConversationLetMeInRequestState.debugDescription.getter(uint64_t a1)
{
  uint64_t result = 0x656E6F6E2ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x75716552746F6E2ELL;
      break;
    case 2:
      uint64_t result = 0x747365757165722ELL;
      break;
    case 3:
      uint64_t result = 0x65766F727070612ELL;
      break;
    default:
      _StringGuts.grow(_:)(71);
      v3._object = (void *)0x80000001C37B4790;
      v3._countAndFlagsBits = 0xD000000000000045;
      String.append(_:)(v3);
      v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1C35742C8);
  }
  return result;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TUConversationLetMeInRequestState()
{
  return TUConversationLetMeInRequestState.debugDescription.getter(*v0);
}

id ConversationNoticeViewController.__allocating_init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(uint64_t a1, void *a2, char a3)
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v7 = v6;
  id v8 = objc_allocWithZone(v3);
  return ConversationNoticeViewController.init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(v7, a2, a3);
}

void one-time initialization function for leadingViewDiameter()
{
  static ConversationNoticeViewController.Constants.leadingViewDiameter = 0x4041800000000000;
}

uint64_t key path getter for ConversationNoticeViewController.delegate : ConversationNoticeViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x98))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationNoticeViewController.delegate : ConversationNoticeViewController(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA0);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationNoticeViewController.delegate.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t ConversationNoticeViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ConversationNoticeViewController.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  Swift::String v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  void v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t key path getter for ConversationNoticeViewController.controlsManager : ConversationNoticeViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationNoticeViewController.controlsManager : ConversationNoticeViewController(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xB8))(*a1);
}

id ConversationNoticeViewController.controlsManager.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  return v1;
}

void ConversationNoticeViewController.controlsManager.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  Swift::String v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*ConversationNoticeViewController.controlsManager.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationNoticeViewController.recipe : ConversationNoticeViewController(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xC8))();
}

uint64_t key path setter for ConversationNoticeViewController.recipe : ConversationNoticeViewController(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xD0))(v6);
}

uint64_t ConversationNoticeViewController.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe;
  swift_beginAccess();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v3, a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
}

uint64_t ConversationNoticeViewController.recipe.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe;
  swift_beginAccess();
  outlined assign with copy of ConversationControlsRecipe?(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x160))(v4);
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
}

uint64_t (*ConversationNoticeViewController.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ConversationNoticeViewController.recipe.modify;
}

uint64_t ConversationNoticeViewController.recipe.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    OUTLINED_FUNCTION_0_20();
    return (*(uint64_t (**)(void))(v4 + 352))();
  }
  return result;
}

void key path getter for ConversationNoticeViewController.presentationSize : ConversationNoticeViewController(void **a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xE0))();
  *(void *)(a2 + 8) = v3;
}

uint64_t key path setter for ConversationNoticeViewController.presentationSize : ConversationNoticeViewController()
{
  return ConversationNoticeViewController.presentationSize.setter();
}

double ConversationNoticeViewController.presentationSize.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

uint64_t ConversationNoticeViewController.presentationSize.setter()
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_presentationSize);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  v3[1] = v1;
  return result;
}

uint64_t key path getter for ConversationNoticeViewController.expanded : ConversationNoticeViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xF8))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationNoticeViewController.expanded : ConversationNoticeViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x100))(*a1);
}

uint64_t ConversationNoticeViewController.expanded.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationNoticeViewController.expanded.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ConversationNoticeViewController.expanded.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationNoticeViewController.menuPresented : ConversationNoticeViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x110))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationNoticeViewController.menuPresented : ConversationNoticeViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x118))(*a1);
}

uint64_t ConversationNoticeViewController.menuPresented.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationNoticeViewController.menuPresented.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ConversationNoticeViewController.menuPresented.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ConversationNoticeViewController.isSystemAperturePresentation.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation);
}

uint64_t ConversationNoticeViewController.systemApertureElement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_10_79();
  v5();
  uint64_t v6 = type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload(v1, 1, v6))
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    id v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 1;
    char v14 = 0;
  }
  else
  {
    uint64_t v15 = v1 + *(int *)(v6 + 72);
    id v10 = *(void **)(v15 + 48);
    uint64_t v11 = *(void *)(v15 + 56);
    uint64_t v12 = *(void *)(v15 + 64);
    char v14 = *(unsigned char *)(v15 + 72);
    uint64_t v13 = *(void *)v15;
    uint64_t v17 = *(void **)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 8);
    uint64_t v7 = *(void *)(v15 + 24);
    uint64_t v8 = *(void **)(v15 + 32);
    uint64_t v9 = *(void *)(v15 + 40);
    outlined copy of SystemApertureElement?(*(id *)v15, v18, v17, v7, v8, v9, v10);
  }
  uint64_t result = outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v14;
  return result;
}

void *ConversationNoticeViewController.systemAperturePreferredContentSize.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) != 1) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
  if (v1)
  {
    type metadata accessor for SystemApertureNoticeView();
    if (swift_dynamicCastClass())
    {
      OUTLINED_FUNCTION_0_20();
      uint64_t v3 = *(uint64_t (**)(void))(v2 + 184);
      id v4 = v1;
      uint64_t v1 = (void *)v3();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void ConversationNoticeViewController.noticeView.setter(uint64_t a1)
{
}

id ConversationNoticeViewController.init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(uint64_t a1, void *a2, char a3)
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v9 = v8;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe];
  uint64_t v11 = type metadata accessor for ConversationControlsRecipe();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v11);
  v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_expanded] = 0;
  v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_menuPresented] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture] = 0;
  swift_beginAccess();
  uint64_t v12 = v3;
  outlined assign with copy of ConversationControlsRecipe?(v9, v10);
  swift_endAccess();
  uint64_t v13 = (unint64_t *)&v12[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_presentationSize];
  *uint64_t v13 = v5;
  v13[1] = v4;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_controlsManager] = a2;
  v12[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation] = a3;
  id v14 = a2;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for ConversationNoticeViewController();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, 0, 0);
  ConversationNoticeViewController.updatePresentationSize(to:)((CGSize)__PAIR128__(v4, v5));

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return v15;
}

uint64_t type metadata accessor for ConversationNoticeViewController()
{
  uint64_t result = type metadata singleton initialization cache for ConversationNoticeViewController;
  if (!type metadata singleton initialization cache for ConversationNoticeViewController) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall ConversationNoticeViewController.updatePresentationSize(to:)(CGSize to)
{
  OUTLINED_FUNCTION_19_0();
  static Layout.ConversationControls.values.getter((uint64_t)v5);
  if (v6 < v3) {
    double v3 = v6;
  }
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_presentationSize;
  swift_beginAccess();
  *(double *)uint64_t v4 = v3;
  *(void *)(v4 + 8) = v2;
}

id ConversationNoticeViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationNoticeViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe];
  uint64_t v2 = type metadata accessor for ConversationControlsRecipe();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_expanded] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_menuPresented] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationNoticeViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ConversationNoticeViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  ConversationNoticeViewController.setupRootView()();
}

Swift::Void __swiftcall ConversationNoticeViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for ConversationNoticeViewController();
  objc_msgSendSuper2(&v14, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    id v3 = isa;
    id v4 = objc_msgSend(v1, sel_traitCollection);
    id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

    id v6 = [(objc_class *)v3 preferredContentSizeCategory];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
    if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v12 & 1) == 0)
      {
        if (*((unsigned char *)v1
             + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) == 1)
        {
          OUTLINED_FUNCTION_0_20();
          (*(void (**)(void))(v13 + 352))();
        }
        else
        {
          ConversationNoticeViewController.setupPillView()();
        }
      }
    }
  }
}

void ConversationNoticeViewController.viewWillTransition(to:with:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4[4] = partial apply for closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:);
  v4[5] = v2;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 1107296256;
  v4[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v4[3] = &block_descriptor_98;
  id v3 = _Block_copy(v4);
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v3, 0);
  _Block_release(v3);
}

void closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    id v5 = *(id *)(v3 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);

    objc_msgSend(v5, sel_layoutIfNeeded);
  }
}

Swift::Bool __swiftcall ConversationNoticeViewController._canShowWhileLocked()()
{
  return 1;
}

void ConversationNoticeViewController.setupRootView()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) == 1) {
    ConversationNoticeViewController.setupFaceTimeApertureView()();
  }
  else {
    ConversationNoticeViewController.setupPillView()();
  }
  ConversationNoticeViewController.updatePreferredContentSize()();
}

Swift::Void __swiftcall ConversationNoticeViewController.updateNoticeView()()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (char *)objc_msgSend(v1, sel_SBUISA_layoutMode);

    if ((unint64_t)(v3 - 2) >= 3)
    {
      ConversationNoticeViewController.setupPillView()();
    }
    else
    {
      OUTLINED_FUNCTION_0_20();
      (*(void (**)(void))(v4 + 432))();
    }
    ConversationNoticeViewController.updatePreferredContentSize()();
  }
  else
  {
    __break(1u);
  }
}

void ConversationNoticeViewController.setupPillView()()
{
  uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4_120();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_10_79();
  v7();
  OUTLINED_FUNCTION_11_72();
  if (v8)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return;
  }
  outlined init with take of ConversationControlsRecipe(v2, v0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView], sel_removeFromSuperview);
  ConversationControlsType.associatedNotice.getter((uint64_t)v41);
  uint64_t v9 = v42;
  if (v42)
  {
    uint64_t v10 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 128))(v40, v9, v10);
    uint64_t v11 = v40[0];
    id v12 = (id)v40[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    if (v12)
    {
      if (v12 == (id)1)
      {
        id v12 = ConversationNoticeViewController.chevronView.getter();
      }
      else
      {
        id v13 = ConversationNoticeViewController.trailingButton.getter();
        outlined consume of NoticeAccessory(v11, (unint64_t)v12);
        id v12 = v13;
      }
    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for Notice?);
    id v12 = 0;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillView);
  objc_super v14 = ConversationNoticeViewController.leadingAccessoryView()();
  id v15 = v12;
  id v16 = PLPillView.__allocating_init(leadingAccessoryView:trailingAccessoryView:)(v14, v12);
  objc_msgSend(v16, sel_setOverrideUserInterfaceStyle_, 2);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91440]), sel_initWithAttributedText_style_, *(void *)(v0 + 80), 1);
  unint64_t v18 = *(void *)(v0 + 88);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_12;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C3769830;
    *(void *)(v31 + 32) = v17;
    v41[0] = v31;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillContentItem);
    id v32 = v17;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setCenterContentItems_, isa);
    goto LABEL_20;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_19;
  }
LABEL_12:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v18 & 0xC000000000000001) == 0, v18);
  if ((v18 & 0xC000000000000001) != 0) {
    id v20 = (objc_class *)MEMORY[0x1C87744F0](0, v18);
  }
  else {
    id v20 = (objc_class *)*(id *)(v18 + 32);
  }
  Class isa = v20;
  swift_bridgeObjectRelease();
  ConversationControlsType.associatedNotice.getter((uint64_t)v41);
  uint64_t v22 = v42;
  if (v42)
  {
    uint64_t v23 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 104))(v40, v22, v23);
    uint64_t v24 = SLOBYTE(v40[0]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    uint64_t v25 = qword_1C3788280[v24];
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for Notice?);
    uint64_t v25 = 2;
  }
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91440]), sel_initWithAttributedText_style_, isa, v25);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C3769610;
  *(void *)(v27 + 32) = v17;
  *(void *)(v27 + 40) = v26;
  v41[0] = v27;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillContentItem);
  id v28 = v17;
  id v29 = v26;
  Class v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setCenterContentItems_, v30);

LABEL_20:
  objc_msgSend(v16, sel_setAutoresizingMask_, 18);
  id v33 = v16;
  id v34 = objc_msgSend(v3, sel_view);
  if (v34)
  {
    objc_msgSend(v34, sel_bounds);
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_17_56(v33, sel_setFrame_);

    id v35 = objc_msgSend(v3, sel_view);
    if (v35)
    {
      id v36 = v35;
      objc_msgSend(v35, sel_addSubview_, v33);

      uint64_t v42 = type metadata accessor for ConversationNoticeViewController();
      v41[0] = v3;
      id v37 = objc_allocWithZone(MEMORY[0x1E4FB1D38]);
      v3;
      id v38 = @nonobjc UITapGestureRecognizer.init(target:action:)(v41, (uint64_t)sel_handleTapGesture);
      objc_msgSend(v33, sel_addGestureRecognizer_, v38);
      id v39 = v33;
      ConversationNoticeViewController.noticeView.setter((uint64_t)v33);

      outlined destroy of ConversationControlsRecipe(v0);
      return;
    }
  }
  else
  {

    __break(1u);
  }

  __break(1u);
}

id ConversationNoticeViewController.chevronView.getter()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  id v0 = @nonobjc UIImage.__allocating_init(systemName:)();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v0);

  id v2 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v1, sel_setTintColor_, v2);

  return v1;
}

void *ConversationNoticeViewController.leadingAccessoryView()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16_0();
  id v4 = objc_msgSend(v0, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  char v6 = UIContentSizeCategory.isAccessibilityCategory.getter();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_10_79();
  v7();
  uint64_t v8 = type metadata accessor for ConversationControlsRecipe();
  if (OUTLINED_FUNCTION_13_74(v8))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    uint64_t v9 = *(void **)(v1 + 56);
    if (!v9)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      return v9;
    }
    id v11 = v9;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if ((v6 & 1) == 0)
    {
      static Layout.ConversationControls.values.getter((uint64_t)&v12);
      objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, v13, v13);
      objc_msgSend(v11, sel_setContentMode_, 1);
      objc_msgSend(v11, sel_setClipsToBounds_, 1);
      return v9;
    }
  }
  return 0;
}

id ConversationNoticeViewController.trailingButton.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_10_79();
  v3();
  uint64_t v4 = type metadata accessor for ConversationControlsRecipe();
  if (OUTLINED_FUNCTION_13_74(v4))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v16 = 0;
LABEL_3:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v14, &demangling cache variable for type metadata for Notice?);
    return 0;
  }
  outlined init with copy of ConversationControlsType(v0, (uint64_t)v11);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  ConversationControlsType.associatedNotice.getter((uint64_t)&v14);
  outlined destroy of ConversationControlsType((uint64_t)v11);
  if (!*((void *)&v15 + 1)) {
    goto LABEL_3;
  }
  outlined init with take of Notice(&v14, (uint64_t)v11);
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 128))(&v14, v7, v8);
  long long v9 = v14;
  if (*((void *)&v14 + 1) >= 2uLL)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v11, (uint64_t)&v14);
    uint64_t v10 = swift_allocObject();
    outlined init with take of Notice(&v14, v10 + 16);
    id v5 = ConversationNoticeViewController.buttonView(with:actionHandler:)(v9, *((uint64_t *)&v9 + 1), (uint64_t)partial apply for closure #1 in ConversationNoticeViewController.trailingButton.getter, v10);
    outlined consume of NoticeAccessory(v9, *((unint64_t *)&v9 + 1));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return v5;
  }
  outlined consume of NoticeAccessory(v14, *((unint64_t *)&v14 + 1));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return 0;
}

void (*closure #1 in ConversationNoticeViewController.trailingButton.getter(void *a1))(void)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  uint64_t result = (void (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2);
  if (result)
  {
    uint64_t v4 = (uint64_t)result;
    result();
    return (void (*)(void))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  return result;
}

id ConversationNoticeViewController.buttonView(with:actionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t v10 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0xB0))();
  char v11 = *((unsigned char *)v5 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation);
  type metadata accessor for ConversationNoticeButtonProvider();
  swift_allocObject();
  uint64_t v12 = ConversationNoticeButtonProvider.init(controlsManager:context:)(v10, v11 ^ 1u);
  swift_retain();
  swift_bridgeObjectRetain();
  ControlsButtonProvider.title.setter(a1, a2);
  swift_release();
  id v13 = static ConversationControlsButtonFactory.makeButton(frame:provider:)(v12);
  uint64_t v15 = v14;
  id v16 = v13;
  ControlsButtonProvider.button.setter(v13, v15);
  if ((v11 & 1) == 0)
  {
    objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v17 = objc_msgSend(v16, sel_widthAnchor);
    objc_msgSend(v16, sel_intrinsicContentSize);
    id v18 = objc_msgSend(v17, sel_constraintEqualToConstant_);

    objc_msgSend(v18, sel_setActive_, 1);
    LODWORD(v19) = 1148846080;
    objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 0, v19);
  }
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v21 = (void *)swift_allocObject();
  long long v21[2] = v20;
  v21[3] = a3;
  v21[4] = a4;
  id v22 = v16;
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:), (uint64_t)v21);
  swift_release();
  swift_release();
  swift_release();

  return v22;
}

Swift::Void __swiftcall ConversationNoticeViewController.handleTapGesture()()
{
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  id v5 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_10_79();
  v6();
  uint64_t v7 = type metadata accessor for ConversationControlsRecipe();
  if (OUTLINED_FUNCTION_13_74(v7))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v23 = 0;
LABEL_3:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v21, &demangling cache variable for type metadata for Notice?);
    return;
  }
  outlined init with copy of ConversationControlsType(v1, (uint64_t)&v16);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  ConversationControlsType.associatedNotice.getter((uint64_t)&v21);
  outlined destroy of ConversationControlsType((uint64_t)&v16);
  if (!*((void *)&v22 + 1)) {
    goto LABEL_3;
  }
  uint64_t v8 = outlined init with take of Notice(&v21, (uint64_t)&v16);
  long long v9 = (void *)(*(uint64_t (**)(uint64_t))((*v5 & *v0) + 0xB0))(v8);
  ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)((uint64_t)&v16, *((unsigned __int8 *)v2+ OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation), v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23,
    v24,
    v25,
    v26);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
}

Swift::Void __swiftcall ConversationNoticeViewController.handleSystemApertureTapGesture()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_1C2F90000, v3, v4, "handleSystemApertureTapGesture", v5, 2u);
    MEMORY[0x1C87760E0](v5, -1, -1);
  }

  char v6 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x180);
  v6();
}

uint64_t key path getter for ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture : ConversationNoticeViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x190))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture : ConversationNoticeViewController(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x198))(*a1);
}

id ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture];
  }
  else
  {
    os_log_type_t v4 = v0;
    v10[3] = type metadata accessor for ConversationNoticeViewController();
    v10[0] = v0;
    objc_allocWithZone(MEMORY[0x1E4FB1D38]);
    id v5 = v0;
    id v6 = @nonobjc UITapGestureRecognizer.init(target:action:)(v10, (uint64_t)sel_handleSystemApertureTapGesture);
    uint64_t v7 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter(uint64_t a1)
{
}

void (*ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.getter();
  return ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify;
}

void ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter((uint64_t)v3);
  }
  else
  {
    ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter((uint64_t)v2);
  }
}

id ConversationNoticeViewController.setupFaceTimeApertureView()()
{
  id v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_4_120();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_10_79();
  v8();
  OUTLINED_FUNCTION_11_72();
  if (v9) {
    return (id)outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  outlined init with take of ConversationControlsRecipe(v2, v0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView], sel_removeFromSuperview);
  type metadata accessor for SystemApertureNoticeView();
  id v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v11 = v0 + *(int *)(v6 + 36);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Environment<DynamicTypeSize>.Content(v11, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_71();
  (*(void (**)(char *))(v16 + 120))(v15);
  ConversationNoticeViewController.trailingButton.getter();
  OUTLINED_FUNCTION_71();
  (*(void (**)(void))(v17 + 168))();
  OUTLINED_FUNCTION_0_62();
  (*(void (**)(id))(v18 + 440))(v10);
  objc_msgSend(v10, sel_setAutoresizingMask_, 18);
  id v19 = v10;
  id result = objc_msgSend(v3, sel_view);
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_17_56(v19, sel_setFrame_);

    id result = objc_msgSend(v3, sel_view);
    if (result)
    {
      long long v21 = result;
      objc_msgSend(result, sel_addSubview_, v19);

      v25[3] = type metadata accessor for ConversationNoticeViewController();
      v25[0] = v3;
      id v22 = objc_allocWithZone(MEMORY[0x1E4FB1D38]);
      v3;
      id v23 = @nonobjc UITapGestureRecognizer.init(target:action:)(v25, (uint64_t)sel_handleSystemApertureTapGesture);
      objc_msgSend(v19, sel_addGestureRecognizer_, v23);
      id v24 = v19;
      ConversationNoticeViewController.noticeView.setter((uint64_t)v10);

      return (id)outlined destroy of ConversationControlsRecipe(v0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ConversationNoticeViewController.updateFaceTimeApertureView()()
{
  id v3 = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_4_120();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  id v8 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_10_79();
  v9();
  OUTLINED_FUNCTION_11_72();
  if (v10)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    outlined init with take of ConversationControlsRecipe(v2, v1);
    uint64_t v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
    if (v11)
    {
      type metadata accessor for SystemApertureNoticeView();
      uint64_t v12 = swift_dynamicCastClass();
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = v1 + *(int *)(v6 + 36);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
        uint64_t v16 = OUTLINED_FUNCTION_8(v15);
        MEMORY[0x1F4188790](v16);
        uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        outlined init with copy of Environment<DynamicTypeSize>.Content(v14, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
        OUTLINED_FUNCTION_41_2();
        uint64_t v20 = *(void (**)(char *))(v19 + 120);
        id v21 = v11;
        v20(v18);
        ConversationNoticeViewController.trailingButton.getter();
        OUTLINED_FUNCTION_41_2();
        (*(void (**)(void))(v22 + 168))();
        (*(void (**)(uint64_t))((*v8 & *v3) + 0x1B8))(v13);

        outlined destroy of ConversationControlsRecipe(v1);
        return;
      }
    }
    outlined destroy of ConversationControlsRecipe(v1);
  }
  ConversationNoticeViewController.setupFaceTimeApertureView()();
}

void ConversationNoticeViewController.updateLeadingAccessory(in:)(void *a1)
{
  uint64_t v2 = v1;
  id v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x88))();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = (void *)(*(uint64_t (**)(void))((*v3 & *v1) + 0x190))();
    objc_msgSend(v5, sel_removeGestureRecognizer_, v6);
  }
  uint64_t v7 = ConversationNoticeViewController.leadingAccessoryView()();
  if (v7)
  {
    id v8 = v7;
    if ((*((unsigned char *)v2
          + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) & 1) != 0)
    {
      double v9 = 35.33;
    }
    else
    {
      if (one-time initialization token for leadingViewDiameter != -1) {
        swift_once();
      }
      double v9 = *(double *)&static ConversationNoticeViewController.Constants.leadingViewDiameter;
    }
    uint64_t v11 = self;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C3769610;
    id v13 = objc_msgSend(v8, sel_widthAnchor);
    id v14 = objc_msgSend(v13, sel_constraintEqualToConstant_, v9);

    *(void *)(v12 + 32) = v14;
    id v15 = objc_msgSend(v8, sel_heightAnchor);
    id v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, v9);

    *(void *)(v12 + 40) = v16;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_activateConstraints_, isa);

    OUTLINED_FUNCTION_0_62();
    uint64_t v19 = (void *)(*(uint64_t (**)(void))(v18 + 400))();
    objc_msgSend(v8, sel_addGestureRecognizer_, v19);

    OUTLINED_FUNCTION_14_69();
    id v21 = *(void (**)(void *))(v20 + 144);
    id v22 = v8;
    v21(v8);
  }
  else
  {
    OUTLINED_FUNCTION_14_69();
    (*(void (**)(void))(v10 + 144))();
  }
}

id ConversationNoticeViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ConversationNoticeViewController.init(nibName:bundle:)()
{
}

id ConversationNoticeViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationNoticeViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ConversationControlsViewController.delegate.getter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t protocol witness for ConversationControlsViewController.delegate.setter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t (*protocol witness for ConversationControlsViewController.delegate.modify in conformance ConversationNoticeViewController(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ConversationControlsViewController.recipe.getter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t protocol witness for ConversationControlsViewController.recipe.setter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t (*protocol witness for ConversationControlsViewController.recipe.modify in conformance ConversationNoticeViewController(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xD8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ConversationControlsViewController.presentationSize.getter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t protocol witness for ConversationControlsViewController.menuPresented.getter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t protocol witness for ConversationControlsViewController.systemApertureElement.getter in conformance ConversationNoticeViewController@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x128))(v4);
  return outlined init with take of SystemApertureElement?((uint64_t)v4, a1);
}

uint64_t protocol witness for ConversationControlsViewController.systemAperturePreferredContentSize.getter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t protocol witness for ConversationControlsViewController.controlsManager.getter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t protocol witness for ConversationControlsViewController.controlsManager.setter in conformance ConversationNoticeViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t (*protocol witness for ConversationControlsViewController.controlsManager.modify in conformance ConversationNoticeViewController(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

Swift::Void __swiftcall ConversationNoticeViewController.updatePreferredContentSize()()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
  if (v1)
  {
    objc_super v2 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0);
    id v3 = v1;
    v2();
    objc_msgSend(v3, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_);
    objc_msgSend(v0, sel_setPreferredContentSize_);
  }
}

void closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1C8776240](v4);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = (void *)MEMORY[0x1E4FBC8C8];
    id v8 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v5) + 0xB0))();
    uint64_t v9 = (*(uint64_t (**)(void))((*v7 & *v8) + 0x400))();
    uint64_t v11 = v10;

    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(0xD000000000000014, 0x80000001C37B4920, 1, ObjectType, v11);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 80))(0xD000000000000014, 0x80000001C37B4920, ObjectType, v11);
      uint64_t v12 = swift_unknownObjectRelease();
    }
    if (a3) {
      a3(v12);
    }
  }
}

uint64_t sub_1C3577B78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:)(a1, v1);
}

uint64_t ObjC metadata update function for ConversationNoticeViewController()
{
  return type metadata accessor for ConversationNoticeViewController();
}

void type metadata completion function for ConversationNoticeViewController()
{
  type metadata accessor for ConversationControlsRecipe?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ConversationNoticeViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationNoticeViewController);
}

uint64_t dispatch thunk of ConversationNoticeViewController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.controlsManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.controlsManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.controlsManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.recipe.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.recipe.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.recipe.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.presentationSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.expanded.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.expanded.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.expanded.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.menuPresented.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.menuPresented.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.menuPresented.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureElement.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemAperturePreferredContentSize.getter()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.__allocating_init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.updateNoticeView()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.handleTapGesture()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.handleSystemApertureTapGesture()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.updateFaceTimeApertureView()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.updateLeadingAccessory(in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t outlined init with take of SystemApertureElement?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3578334()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void (*partial apply for closure #1 in ConversationNoticeViewController.trailingButton.getter())(void)
{
  return closure #1 in ConversationNoticeViewController.trailingButton.getter((void *)(v0 + 16));
}

uint64_t sub_1C3578374()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:)(uint64_t a1)
{
  closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:)(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, float a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    uint64_t v5 = 0;
    *(void *)(result + 16) = a1;
    do
    {
      uint64_t v6 = result + 4 * v5++;
      *(float *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v5 = a1;
    if (a1)
    {
      type metadata accessor for CGRect(0);
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v5;
      uint64_t v11 = 32;
      do
      {
        uint64_t v12 = (double *)(result + v11);
        *uint64_t v12 = a2;
        v12[1] = a3;
        v12[2] = a4;
        v12[3] = a5;
        v11 += 32;
        --v5;
      }
      while (v5);
    }
    else
    {
      return MEMORY[0x1E4FBC860];
    }
  }
  return result;
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else if (a2)
  {
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    uint64_t v5 = 0;
    *(void *)(result + 16) = a2;
    do
    {
      uint64_t v6 = result + 8 * v5++;
      *(void *)(v6 + 32) = a1;
    }
    while (a2 != v5);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t OrganicLayout.Configuration.init(deviceType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((_BYTE)result)
  {
    char v2 = 0;
    long long v3 = xmmword_1C37757D0;
    if (result == 1) {
      uint64_t v4 = 0x408A100000000000;
    }
    else {
      uint64_t v4 = 0x4089000000000000;
    }
  }
  else
  {
    long long v3 = xmmword_1C37757C0;
    uint64_t v4 = 0;
    char v2 = 1;
  }
  *(void *)a2 = 0x4030000000000000;
  *(_OWORD *)(a2 + 8) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v2;
  return result;
}

uint64_t OrganicLayout.init(containingSize:frameCount:indexToExpand:configuration:displayScale:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, double a5, double a6, double a7)
{
  v45.CGFloat width = 0.0;
  v45.CGFloat height = 0.0;
  if (CGSizeEqualToSize(*(CGSize *)&a5, v45))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
    uint64_t v15 = String.init<A>(reflecting:)();
    uint64_t v17 = v16;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return specialized Array.init(repeating:count:)(a1, 0.0, 0.0, 0.0, 0.0);
  }
  else
  {
    if (a6 >= a5) {
      double v19 = a5;
    }
    else {
      double v19 = a6;
    }
    if (a6 >= a5) {
      double v20 = a6;
    }
    else {
      double v20 = a5;
    }
    switch(a1)
    {
      case 4:
        double v32 = OUTLINED_FUNCTION_2_129();
        static OrganicLayout.calculate4UpSizeInfo(in:withOverlap:displayScale:)(v32, v33, v34, v35);
        double v36 = OUTLINED_FUNCTION_0_107();
        if (v41) {
          static OrganicLayout.create4UpOverlappingPairFrames(in:size:overlap:displayScale:)(v36, v37, v38, v39, v40);
        }
        else {
          static OrganicLayout.create4UpRegularFrames(in:size:overlap:displayScale:)(v36, v37, v38, v39, v40);
        }
        break;
      case 3:
        double v21 = OUTLINED_FUNCTION_2_129();
        static OrganicLayout.calculate3UpSizeInfo(in:withOverlap:displayScale:)(v21, v22, v23, v24);
        double v25 = OUTLINED_FUNCTION_0_107();
        if (v30) {
          static OrganicLayout.create3UpOverlappingPairFrames(in:size:overlap:displayScale:)(v25, v26, v27, v28, v29);
        }
        else {
          static OrganicLayout.create3UpRegularFrames(in:size:overlap:displayScale:)(v25, v26, v27.n128_f64[0], v28, v29);
        }
        break;
      case 2:
        uint64_t v31 = static OrganicLayout.createOverlappingPairFrames(in:configuration:displayScale:)(a4, v19, v20, a7);
        break;
      default:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
    }
    uint64_t v42 = v31;
    if ((a3 & 1) == 0)
    {
      uint64_t v43 = specialized static ParticipantLayout.expandingFrame(_:of:in:displayScale:scaleFactor:shouldInsetFromEdge:)(a2, v31, 0x3FB999999999999ALL, 0, 1, v19, v20, a7);
      swift_bridgeObjectRelease();
      uint64_t v42 = v43;
    }
    uint64_t v44 = static OrganicLayout.fitFrames(_:to:)(v42, a5, a6);
    swift_bridgeObjectRelease();
    return v44;
  }
}

double OrganicLayout.Configuration.minCellOverlap.getter()
{
  return *(double *)v0;
}

void OrganicLayout.Configuration.minCellOverlap.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*OrganicLayout.Configuration.minCellOverlap.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double OrganicLayout.Configuration.minCellOverlapThreshold.getter()
{
  return *(double *)(v0 + 8);
}

void OrganicLayout.Configuration.minCellOverlapThreshold.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*OrganicLayout.Configuration.minCellOverlapThreshold.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double OrganicLayout.Configuration.maxCellOverlap.getter()
{
  return *(double *)(v0 + 16);
}

void OrganicLayout.Configuration.maxCellOverlap.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*OrganicLayout.Configuration.maxCellOverlap.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double OrganicLayout.Configuration.maxCellOverlapThreshold.getter()
{
  return *(double *)(v0 + 24);
}

void OrganicLayout.Configuration.maxCellOverlapThreshold.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*OrganicLayout.Configuration.maxCellOverlapThreshold.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t OrganicLayout.Configuration.shouldAlignTopFrameInPairToRightEdge.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t OrganicLayout.Configuration.shouldAlignTopFrameInPairToRightEdge.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*OrganicLayout.Configuration.shouldAlignTopFrameInPairToRightEdge.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t OrganicLayout.frames.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*OrganicLayout.frames.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static OrganicLayout.createOverlappingPairFrames(in:configuration:displayScale:)(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v31.i8[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v12 = *(double *)a1;
  double v13 = (*(double *)a1 + a3) * 0.5;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBBEA8], v8);
  *(double *)v14.i64 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v13);
  int64x2_t v31 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v32 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v15 = v31.i64[0];
  uint64_t v16 = v32;
  double v17 = floor((*(double *)v31.i64 - v12) * a4);
  unint64_t v18 = *(void *)(v32 + 16);
  unint64_t v19 = *(void *)(v32 + 24) >> 1;
  unint64_t v20 = v18 + 1;
  if (v19 <= v18)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v15 = v31.i64[0];
    uint64_t v16 = v32;
    unint64_t v19 = *(void *)(v32 + 24) >> 1;
  }
  double v21 = v17 / a4;
  *(void *)(v16 + 16) = v20;
  uint64_t v22 = v16 + 32 * v18;
  *(void *)(v22 + 32) = 0;
  *(double *)(v22 + 40) = v21 * 0.0;
  int64x2_t v23 = vdupq_lane_s64(v15, 0);
  *(int64x2_t *)(v22 + 48) = v23;
  unint64_t v24 = v18 + 2;
  if (v19 <= v20)
  {
    int64x2_t v31 = v23;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v23 = v31;
    uint64_t v16 = v32;
  }
  *(void *)(v16 + 16) = v24;
  uint64_t v25 = v16 + 32 * v20;
  *(void *)(v25 + 32) = 0;
  *(double *)(v25 + 40) = v21;
  *(int64x2_t *)(v25 + 48) = v23;
  if (*(unsigned char *)(a1 + 32))
  {
    double v27 = *(double *)(v16 + 48);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t v16 = v30;
    }
    *(double *)(v16 + 32) = a2 - v27;
  }
  else
  {
    double v26 = *(double *)(v16 + 80);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t v16 = v29;
    }
    *(double *)(v16 + 64) = a2 - v26;
  }
  return v16;
}

BOOL static OrganicLayout.calculate3UpSizeInfo(in:withOverlap:displayScale:)(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = a3 + a3 + a2;
  uint64_t v13 = *MEMORY[0x1E4FBBEA8];
  int64x2_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, v13, v8);
  CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v12 / 3.0);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  if ((a1 + a3 * -4.0) * 0.5 >= (a2 + a3) / 2.25) {
    double v16 = (a2 + a3) / 2.25;
  }
  else {
    double v16 = (a1 + a3 * -4.0) * 0.5;
  }
  v14(v11, v13, v8);
  double v17 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v16);
  v15(v11, v8);
  return v17 * 3.0 >= v12;
}

void static OrganicLayout.create3UpOverlappingPairFrames(in:size:overlap:displayScale:)(double a1, double a2, __n128 a3, double a4, double a5)
{
  __n128 v33 = a3;
  uint64_t v9 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >= a1) {
    double v13 = a1;
  }
  else {
    double v13 = a2;
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v14 = v34;
  unint64_t v15 = *(void *)(v34 + 16);
  unint64_t v16 = *(void *)(v34 + 24) >> 1;
  unint64_t v17 = v15 + 1;
  if (v16 <= v15)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v14 = v34;
    unint64_t v16 = *(void *)(v34 + 24) >> 1;
  }
  *(void *)(v14 + 16) = v17;
  unint64_t v18 = (int64x2_t *)(v14 + 32 * v15);
  v18[2].i64[0] = 0;
  v18[2].i64[1] = 0;
  int64x2_t v19 = vdupq_lane_s64(v33.n128_i64[0], 0);
  v18[3] = v19;
  unint64_t v20 = v15 + 2;
  if (v16 <= v17)
  {
    __n128 v33 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v19 = (int64x2_t)v33;
    uint64_t v14 = v34;
  }
  *(void *)(v14 + 16) = v20;
  double v21 = (int64x2_t *)(v14 + 32 * v17);
  v21[2].i64[0] = 0;
  v21[2].i64[1] = 0;
  v21[3] = v19;
  unint64_t v22 = *(void *)(v14 + 16);
  if (v22 >= *(void *)(v14 + 24) >> 1)
  {
    __n128 v33 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v19 = (int64x2_t)v33;
  }
  uint64_t v23 = v34;
  *(void *)(v34 + 16) = v22 + 1;
  unint64_t v24 = (int64x2_t *)(v23 + 32 * v22);
  v24[2].i64[0] = 0;
  v24[2].i64[1] = 0;
  v24[3] = v19;
  double v25 = *(double *)(v23 + 56);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v23 = v32;
  }
  if (*(void *)(v23 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_22;
  }
  double v26 = *(double *)(v23 + 80);
  *(double *)(v23 + 64) = v13 - v26;
  *(double *)(v23 + 72) = v25 - a4;
  double v27 = v26 * 0.25 + v13 - v26 - *(double *)(v23 + 48);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBBEB0], v9);
  double v28 = CGFloat.rounded(_:toScale:)((uint64_t)v12, a5, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  unint64_t v29 = *(void *)(v23 + 16);
  if (!v29)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  double v30 = 0.0;
  if (v28 > 0.0) {
    double v30 = v28;
  }
  *(double *)(v23 + 32) = v30;
  if (v29 < 3) {
    goto LABEL_23;
  }
  if (a2 >= a1) {
    double v31 = a2;
  }
  else {
    double v31 = a1;
  }
  *(double *)(v23 + 104) = v31 - *(double *)(v23 + 120);
}

void static OrganicLayout.create3UpRegularFrames(in:size:overlap:displayScale:)(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v30 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v8 = *(void *)&a3;
  uint64_t v9 = v30;
  double v10 = a3 - a4;
  double v11 = floor((a3 - a4) * 0.0 * a5);
  unint64_t v12 = *(void *)(v30 + 16);
  unint64_t v13 = *(void *)(v30 + 24) >> 1;
  unint64_t v14 = v12 + 1;
  if (v13 <= v12)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v8 = *(void *)&a3;
    uint64_t v9 = v30;
    unint64_t v13 = *(void *)(v30 + 24) >> 1;
  }
  *(void *)(v9 + 16) = v14;
  uint64_t v15 = v9 + 32 * v12;
  *(void *)(v15 + 32) = 0;
  int64x2_t v16 = vdupq_lane_s64(v8, 0);
  *(double *)(v15 + 40) = v11 / a5;
  *(int64x2_t *)(v15 + 48) = v16;
  double v17 = floor(v10 * a5);
  unint64_t v18 = v12 + 2;
  if (v13 <= v14)
  {
    int64x2_t v28 = v16;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v16 = v28;
    uint64_t v9 = v30;
  }
  *(void *)(v9 + 16) = v18;
  uint64_t v19 = v9 + 32 * v14;
  *(void *)(v19 + 32) = 0;
  *(double *)(v19 + 40) = v17 / a5;
  *(int64x2_t *)(v19 + 48) = v16;
  double v20 = floor((v10 + v10) * a5);
  unint64_t v21 = *(void *)(v9 + 16);
  if (v21 >= *(void *)(v9 + 24) >> 1)
  {
    int64x2_t v29 = v16;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v16 = v29;
  }
  uint64_t v22 = v30;
  *(void *)(v30 + 16) = v21 + 1;
  uint64_t v23 = v30 + 32 * v21;
  *(void *)(v23 + 32) = 0;
  *(double *)(v23 + 40) = v20 / a5;
  *(int64x2_t *)(v23 + 48) = v16;
  if (v21)
  {
    a5 = *(double *)(v30 + 80);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  specialized _ArrayBuffer._consumeAndCreateNew()();
  uint64_t v22 = v26;
LABEL_9:
  *(double *)(v22 + 64) = a1 - a5;
  unint64_t v24 = *(void *)(v22 + 16);
  if (v24 < 2)
  {
    __break(1u);
  }
  else
  {
    double v25 = a4 + a4 + a1 - a5 - *(double *)(v22 + 48);
    if (v25 <= 0.0) {
      double v25 = 0.0;
    }
    *(double *)(v22 + 32) = v25;
    if (v24 != 2)
    {
      *(void *)(v22 + 96) = 0;
      return;
    }
  }
  __break(1u);
}

BOOL static OrganicLayout.calculate4UpSizeInfo(in:withOverlap:displayScale:)(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = a3 * 3.0 + a2;
  uint64_t v13 = *MEMORY[0x1E4FBBEA8];
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, v13, v8);
  CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v12 * 0.25);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  if ((a1 - a3 * 4.0) * 0.5 >= (a2 + a3) / 3.25) {
    double v16 = (a2 + a3) / 3.25;
  }
  else {
    double v16 = (a1 - a3 * 4.0) * 0.5;
  }
  v14(v11, v13, v8);
  double v17 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v16);
  v15(v11, v8);
  return v17 * 4.0 >= v12;
}

void static OrganicLayout.create4UpOverlappingPairFrames(in:size:overlap:displayScale:)(double a1, double a2, __n128 a3, double a4, double a5)
{
  __n128 v41 = a3;
  uint64_t v12 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v16 = v42;
  unint64_t v17 = *(void *)(v42 + 16);
  unint64_t v18 = *(void *)(v42 + 24) >> 1;
  unint64_t v19 = v17 + 1;
  if (v18 <= v17)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v16 = v42;
    unint64_t v18 = *(void *)(v42 + 24) >> 1;
  }
  *(void *)(v16 + 16) = v19;
  double v20 = (int64x2_t *)(v16 + 32 * v17);
  v20[2].i64[0] = 0;
  v20[2].i64[1] = 0;
  int64x2_t v21 = vdupq_lane_s64(v41.n128_i64[0], 0);
  v20[3] = v21;
  unint64_t v22 = v17 + 2;
  if (v18 <= v19)
  {
    __n128 v41 = (__n128)v21;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v21 = (int64x2_t)v41;
    uint64_t v16 = v42;
  }
  *(void *)(v16 + 16) = v22;
  uint64_t v23 = (int64x2_t *)(v16 + 32 * v19);
  v23[2].i64[0] = 0;
  v23[2].i64[1] = 0;
  v23[3] = v21;
  unint64_t v24 = *(void *)(v16 + 16);
  unint64_t v25 = v24 + 1;
  if (v24 >= *(void *)(v16 + 24) >> 1)
  {
    __n128 v41 = (__n128)v21;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v21 = (int64x2_t)v41;
  }
  uint64_t v26 = v42;
  *(void *)(v42 + 16) = v25;
  double v27 = (int64x2_t *)(v26 + 32 * v24);
  v27[2].i64[0] = 0;
  v27[2].i64[1] = 0;
  v27[3] = v21;
  unint64_t v28 = v24 + 2;
  if (v25 >= *(void *)(v26 + 24) >> 1)
  {
    __n128 v41 = (__n128)v21;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v21 = (int64x2_t)v41;
    uint64_t v26 = v42;
  }
  *(void *)(v26 + 16) = v28;
  int64x2_t v29 = (int64x2_t *)(v26 + 32 * v25);
  v29[2].i64[0] = 0;
  v29[2].i64[1] = 0;
  v29[3] = v21;
  double MaxX = CGRectGetMaxX(*(CGRect *)(v26 + 64));
  if (*(void *)(v26 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_25;
  }
  double v31 = MaxX + *(double *)(v26 + 80) * -0.25;
  unint64_t v25 = *MEMORY[0x1E4FBBEB0];
  uint64_t v5 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 104);
  v5(v15, v25, v12);
  double v7 = CGFloat.rounded(_:toScale:)((uint64_t)v15, a5, v31);
  uint64_t v6 = *(void (**)(char *, uint64_t))(v13 + 8);
  v6(v15, v12);
  if (*(void *)(v26 + 16) < 2uLL)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v26 = v40;
    goto LABEL_14;
  }
  if (a1 - *(double *)(v26 + 80) < v7) {
    double v7 = a1 - *(double *)(v26 + 80);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_26;
  }
LABEL_14:
  unint64_t v32 = *(void *)(v26 + 16);
  if (!v32)
  {
    __break(1u);
    goto LABEL_28;
  }
  *(double *)(v26 + 32) = v7;
  if (v32 < 3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v43.origin.CGFloat y = *(CGFloat *)(v26 + 104);
  v43.size.CGFloat width = *(CGFloat *)(v26 + 112);
  v43.origin.CGFloat x = a1 - v43.size.width;
  *(double *)(v26 + 96) = a1 - v43.size.width;
  v43.size.CGFloat height = *(CGFloat *)(v26 + 120);
  double MinX = CGRectGetMinX(v43);
  if (*(void *)(v26 + 16) < 3uLL)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  double v34 = MinX + *(double *)(v26 + 112) * 0.25 - *(double *)(v26 + 112);
  v5(v15, v25, v12);
  double v35 = CGFloat.rounded(_:toScale:)((uint64_t)v15, a5, v34);
  v6(v15, v12);
  if (*(void *)(v26 + 16) < 4uLL)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  double v36 = 0.0;
  if (v35 > 0.0) {
    double v36 = v35;
  }
  *(double *)(v26 + 128) = v36;
  double MaxY = CGRectGetMaxY(*(CGRect *)(v26 + 32));
  unint64_t v38 = *(void *)(v26 + 16);
  if (v38 < 2) {
    goto LABEL_31;
  }
  *(double *)(v26 + 72) = MaxY - a4;
  if (v38 < 4)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v44.size.CGFloat width = *(CGFloat *)(v26 + 144);
  v44.size.CGFloat height = *(CGFloat *)(v26 + 152);
  v44.origin.CGFloat y = a2 - v44.size.height;
  *(double *)(v26 + 136) = a2 - v44.size.height;
  v44.origin.CGFloat x = *(CGFloat *)(v26 + 128);
  double MinY = CGRectGetMinY(v44);
  if (*(void *)(v26 + 16) >= 3uLL)
  {
    *(double *)(v26 + 104) = MinY - *(double *)(v26 + 120) + a4;
    return;
  }
LABEL_33:
  __break(1u);
}

void static OrganicLayout.create4UpRegularFrames(in:size:overlap:displayScale:)(double a1, double a2, __n128 a3, double a4, double a5)
{
  __n128 v42 = a3;
  uint64_t v10 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v14 = v42.n128_u64[0];
  uint64_t v15 = v43;
  double v16 = v42.n128_f64[0] - a4;
  double v17 = floor(v16 * 0.0 * a5);
  unint64_t v18 = *(void *)(v43 + 16);
  unint64_t v19 = *(void *)(v43 + 24) >> 1;
  unint64_t v20 = v18 + 1;
  if (v19 <= v18)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v14 = v42.n128_u64[0];
    uint64_t v15 = v43;
    unint64_t v19 = *(void *)(v43 + 24) >> 1;
  }
  *(void *)(v15 + 16) = v20;
  uint64_t v21 = v15 + 32 * v18;
  *(void *)(v21 + 32) = 0;
  int64x2_t v22 = vdupq_lane_s64(v14, 0);
  *(double *)(v21 + 40) = v17 / a5;
  *(int64x2_t *)(v21 + 48) = v22;
  double v23 = floor(v16 * a5);
  unint64_t v24 = v18 + 2;
  if (v19 <= v20)
  {
    __n128 v42 = (__n128)v22;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v22 = (int64x2_t)v42;
    uint64_t v15 = v43;
  }
  *(void *)(v15 + 16) = v24;
  uint64_t v25 = v15 + 32 * v20;
  *(void *)(v25 + 32) = 0;
  *(double *)(v25 + 40) = v23 / a5;
  *(int64x2_t *)(v25 + 48) = v22;
  double v26 = floor((v16 + v16) * a5);
  unint64_t v27 = *(void *)(v15 + 16);
  unint64_t v28 = v27 + 1;
  if (v27 >= *(void *)(v15 + 24) >> 1)
  {
    __n128 v42 = (__n128)v22;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v22 = (int64x2_t)v42;
  }
  uint64_t v29 = v43;
  *(void *)(v43 + 16) = v28;
  uint64_t v30 = v29 + 32 * v27;
  *(void *)(v30 + 32) = 0;
  *(double *)(v30 + 40) = v26 / a5;
  *(int64x2_t *)(v30 + 48) = v22;
  double v31 = floor(v16 * 3.0 * a5);
  unint64_t v32 = v27 + 2;
  if (v28 >= *(void *)(v29 + 24) >> 1)
  {
    __n128 v42 = (__n128)v22;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    int64x2_t v22 = (int64x2_t)v42;
    uint64_t v29 = v43;
  }
  *(void *)(v29 + 16) = v32;
  uint64_t v33 = v29 + 32 * v28;
  *(void *)(v33 + 32) = 0;
  *(double *)(v33 + 40) = v31 / a5;
  *(int64x2_t *)(v33 + 48) = v22;
  double MaxX = CGRectGetMaxX(*(CGRect *)(v29 + 64));
  if (*(void *)(v29 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_22;
  }
  double v35 = MaxX + *(double *)(v29 + 80) * -0.25;
  unint64_t v28 = *MEMORY[0x1E4FBBEB0];
  uint64_t v5 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 104);
  v5(v13, v28, v10);
  double v31 = CGFloat.rounded(_:toScale:)((uint64_t)v13, a5, v35);
  uint64_t v6 = *(void (**)(char *, uint64_t))(v11 + 8);
  v6(v13, v10);
  if (*(void *)(v29 + 16) < 2uLL)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v29 = v41;
    goto LABEL_14;
  }
  if (a1 - *(double *)(v29 + 80) < v31) {
    double v31 = a1 - *(double *)(v29 + 80);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_23;
  }
LABEL_14:
  unint64_t v36 = *(void *)(v29 + 16);
  if (!v36)
  {
    __break(1u);
    goto LABEL_25;
  }
  *(double *)(v29 + 32) = v31;
  if (v36 < 3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v44.origin.CGFloat y = *(CGFloat *)(v29 + 104);
  v44.size.CGFloat width = *(CGFloat *)(v29 + 112);
  v44.origin.CGFloat x = a1 - v44.size.width;
  *(double *)(v29 + 96) = a1 - v44.size.width;
  v44.size.CGFloat height = *(CGFloat *)(v29 + 120);
  double MinX = CGRectGetMinX(v44);
  if (*(void *)(v29 + 16) < 3uLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  double v38 = MinX + *(double *)(v29 + 112) * 0.25 - *(double *)(v29 + 112);
  v5(v13, v28, v10);
  double v39 = CGFloat.rounded(_:toScale:)((uint64_t)v13, a5, v38);
  v6(v13, v10);
  if (*(void *)(v29 + 16) < 4uLL)
  {
LABEL_27:
    __break(1u);
    return;
  }
  double v40 = 0.0;
  if (v39 > 0.0) {
    double v40 = v39;
  }
  *(double *)(v29 + 128) = v40;
}

uint64_t static OrganicLayout.fitFrames(_:to:)(uint64_t a1, double a2, double a3)
{
  if (a2 >= a3)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      uint64_t v16 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v6 = 0;
      uint64_t v4 = v16;
      unint64_t v7 = *(void *)(v16 + 16);
      uint64_t v8 = 32 * v7;
      do
      {
        int8x16_t v9 = *(int8x16_t *)(a1 + v6 + 32);
        int8x16_t v10 = *(int8x16_t *)(a1 + v6 + 48);
        unint64_t v11 = v7 + 1;
        if (v7 >= *(void *)(v16 + 24) >> 1)
        {
          int8x16_t v14 = *(int8x16_t *)(a1 + v6 + 32);
          int8x16_t v15 = *(int8x16_t *)(a1 + v6 + 48);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          int8x16_t v9 = v14;
          int8x16_t v10 = v15;
        }
        *(void *)(v16 + 16) = v11;
        uint64_t v12 = (int8x16_t *)(v16 + v8 + v6);
        v12[2] = vextq_s8(v9, v9, 8uLL);
        v12[3] = vextq_s8(v10, v10, 8uLL);
        v6 += 32;
        unint64_t v7 = v11;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return v4;
}

ValueMetadata *type metadata accessor for OrganicLayout()
{
  return &type metadata for OrganicLayout;
}

uint64_t getEnumTagSinglePayload for OrganicLayout.Configuration(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrganicLayout.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrganicLayout.Configuration()
{
  return &type metadata for OrganicLayout.Configuration;
}

void specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()()
{
  id v1 = MostActiveParticipantViewController.insulatingView.getter();
  if (v1)
  {
    id v4 = v1;
    id v2 = objc_msgSend(v1, sel_superview);

    if (!v2
      && *((unsigned char *)v0
         + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture) == 1)
    {
      objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
      objc_msgSend(v4, sel_setAutoresizingMask_, 18);
      id v3 = objc_msgSend(v0, sel_view);
      objc_msgSend(v3, sel_addSubview_, v4);
    }
  }
}

{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t vars8;

  id v1 = MultiwayViewController.insulatingView.getter();
  if (v1)
  {
    id v4 = v1;
    id v2 = objc_msgSend(v1, sel_superview);

    if (!v2 && MultiwayViewController.shouldShowActionTypePhotoCapture.getter())
    {
      objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
      objc_msgSend(v4, sel_setAutoresizingMask_, 18);
      id v3 = objc_msgSend(v0, sel_view);
      objc_msgSend(v3, sel_addSubview_, v4);
    }
  }
}

void specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()()
{
  id v1 = MostActiveParticipantViewController.flashView.getter();
  id v2 = objc_msgSend(v1, sel_superview);

  if (!v2
    && *((unsigned char *)v0
       + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture) == 1)
  {
    id v3 = MostActiveParticipantViewController.flashView.getter();
    objc_msgSend(v3, sel_setUserInteractionEnabled_, 0);

    id v4 = MostActiveParticipantViewController.flashView.getter();
    objc_msgSend(v4, sel_setAutoresizingMask_, 18);

    id v5 = objc_msgSend(v0, sel_view);
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = MostActiveParticipantViewController.flashView.getter();
      objc_msgSend(v6, sel_addSubview_, v7);
    }
    id v8 = objc_msgSend(v0, sel_view);
    if (v8)
    {
      int8x16_t v9 = v8;
      id v10 = MostActiveParticipantViewController.flashView.getter();
      objc_msgSend(v9, sel_bringSubviewToFront_, v10);
    }
  }
}

{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t vars8;

  uint64_t v0 = MultiwayViewController.flashView.getter();
  id v1 = objc_msgSend(v0, sel_superview);

  if (!v1 && MultiwayViewController.shouldShowActionTypePhotoCapture.getter())
  {
    id v2 = MultiwayViewController.flashView.getter();
    objc_msgSend(v2, sel_setUserInteractionEnabled_, 0);

    id v3 = MultiwayViewController.flashView.getter();
    objc_msgSend(v3, sel_setAutoresizingMask_, 18);

    id v4 = OUTLINED_FUNCTION_50_20();
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = MultiwayViewController.flashView.getter();
      objc_msgSend(v5, sel_addSubview_, v6);
    }
    id v7 = OUTLINED_FUNCTION_50_20();
    if (v7)
    {
      id v8 = v7;
      int8x16_t v9 = MultiwayViewController.flashView.getter();
      objc_msgSend(v8, sel_bringSubviewToFront_, v9);
    }
  }
}

id specialized InsulatingView.init(frame:content:forwardHits:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  *(void *)&v6[direct field offset for InsulatingView.content] = a1;
  v6[direct field offset for InsulatingView.forwardHits] = a2;
  id v11 = a1;
  v18.receiver = v6;
  v18.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InsulatingView<MomentsIndicatorView>);
  id v12 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a3, a4, a5, a6);
  id v13 = v11;
  id v14 = v12;
  objc_msgSend(v14, sel_bounds);
  objc_msgSend(v13, sel_setBounds_);

  id v15 = v13;
  objc_msgSend(v14, sel_center);
  objc_msgSend(v15, sel_setCenter_);

  objc_msgSend(v15, sel_setAutoresizingMask_, 18);
  objc_msgSend(v15, sel__setHostsLayoutEngine_, 1);
  objc_msgSend(v14, sel_addSubview_, v15);
  objc_msgSend(v15, sel_setNeedsLayout);
  objc_msgSend(v15, sel_layoutIfNeeded);
  id v16 = v14;
  objc_msgSend(v16, sel_setAutoresizingMask_, 18);

  return v16;
}

void MostActiveParticipantViewController.mostActiveParticipant.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v5 = v4;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_118();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_36_4();
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v23 = v3;
    uint64_t v24 = v7;
    uint64_t v25 = v5;
    uint64_t v15 = v13 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v16 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_10(v15, v2, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_10(v2, v1, (void (*)(void))type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        objc_super v18 = (const void *)(v1 + *(int *)(v17 + 48));
        OUTLINED_FUNCTION_8_2((uint64_t *)(v1 + *(int *)(v17 + 64)));
        memcpy(v26, v18, 0x150uLL);
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v19();
        LOBYTE(v18) = v26[0];
        outlined destroy of Participant.MediaInfo((uint64_t)v26);
        if ((v18 & 1) == 0)
        {
          uint64_t v3 = v23;
          outlined init with take of Participant(v2, v23);
          uint64_t v20 = 0;
          uint64_t v7 = v24;
          uint64_t v5 = v25;
          goto LABEL_10;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantV5StateOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant.State);
      }
      _s15ConversationKit11ParticipantV5StateOWOhTm_2(v2, (void (*)(void))type metadata accessor for Participant);
      v15 += v16;
      --v14;
    }
    while (v14);
    uint64_t v20 = 1;
    uint64_t v7 = v24;
    uint64_t v5 = v25;
    uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = 1;
  }
LABEL_10:
  __swift_storeEnumTagSinglePayload(v3, v20, 1, v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0(v3, 1, v7);
  if (v21)
  {
    uint64_t v22 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipant;
    OUTLINED_FUNCTION_2();
    _s15ConversationKit11ParticipantVWOcTm_10(v22, v5, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant(v3, v5);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t MostActiveParticipantViewController.focusedParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of FeatureEligibility?(v3, a1, &demangling cache variable for type metadata for Participant?);
}

uint64_t MostActiveParticipantViewController.participantIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    uint64_t v5 = type metadata accessor for UUID();
    uint64_t v6 = a1;
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v8 = v3 + *(int *)(v4 + 20);
    uint64_t v9 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v8, v9);
    uint64_t v6 = a1;
    uint64_t v7 = 0;
    uint64_t v5 = v9;
  }
  return __swift_storeEnumTagSinglePayload(v6, v7, 1, v5);
}

uint64_t MostActiveParticipantViewController.ignoreFocusedParticipantUpdates.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MostActiveParticipantViewController.ignoreFocusedParticipantUpdates.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MostActiveParticipantViewController.ignoreFocusedParticipantUpdates.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for MostActiveParticipantViewController.participantsViewControllerDelegate : MostActiveParticipantViewController@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for MostActiveParticipantViewController.participantsViewControllerDelegate : MostActiveParticipantViewController(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t MostActiveParticipantViewController.participantsViewControllerDelegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  return MEMORY[0x1C8776240](v1);
}

uint64_t MostActiveParticipantViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*MostActiveParticipantViewController.participantsViewControllerDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  void v3[4] = v7;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

char *MostActiveParticipantViewController.remoteParticipantView.getter()
{
  return MostActiveParticipantViewController.remoteParticipantView.getter(&OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView);
}

void key path setter for MostActiveParticipantViewController.remoteParticipantView : MostActiveParticipantViewController(id *a1)
{
}

void MostActiveParticipantViewController.remoteParticipantView.setter(uint64_t a1)
{
}

void (*MostActiveParticipantViewController.remoteParticipantView.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MostActiveParticipantViewController.remoteParticipantView.getter();
  return MostActiveParticipantViewController.remoteParticipantView.modify;
}

void MostActiveParticipantViewController.remoteParticipantView.modify(void **a1, char a2)
{
}

char *MostActiveParticipantViewController.localParticipantView.getter()
{
  return MostActiveParticipantViewController.remoteParticipantView.getter(&OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView);
}

char *MostActiveParticipantViewController.remoteParticipantView.getter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    uint64_t v4 = *(char **)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_allocWithZone((Class)type metadata accessor for ParticipantView());
    uint64_t v7 = ParticipantView.init(frame:localParticipant:)();
    uint64_t v8 = *(void **)(v1 + v2);
    *(void *)(v5 + v2) = v7;
    uint64_t v4 = v7;

    uint64_t v3 = 0;
  }
  id v9 = v3;
  return v4;
}

void key path setter for MostActiveParticipantViewController.localParticipantView : MostActiveParticipantViewController(id *a1)
{
}

void MostActiveParticipantViewController.localParticipantView.setter(uint64_t a1)
{
}

void (*MostActiveParticipantViewController.localParticipantView.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MostActiveParticipantViewController.localParticipantView.getter();
  return MostActiveParticipantViewController.localParticipantView.modify;
}

void MostActiveParticipantViewController.localParticipantView.modify(void **a1, char a2)
{
}

char *MostActiveParticipantViewController.currentParticipantView.getter()
{
  uint64_t v2 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16_0();
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  if (__swift_getEnumTagSinglePayload(v4, 1, v2)) {
    return MostActiveParticipantViewController.remoteParticipantView.getter();
  }
  _s15ConversationKit11ParticipantVWOcTm_10(v4, v1, (void (*)(void))type metadata accessor for Participant);
  uint64_t v5 = *(void *)(v1 + *(int *)(v2 + 28));
  _s15ConversationKit11ParticipantV5StateOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant);
  if (v5) {
    return MostActiveParticipantViewController.remoteParticipantView.getter();
  }
  else {
    return MostActiveParticipantViewController.localParticipantView.getter();
  }
}

uint64_t MostActiveParticipantViewController.frontBoardInterfaceOrientation.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t MostActiveParticipantViewController.frontBoardInterfaceOrientation.setter(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MostActiveParticipantViewController.frontBoardInterfaceOrientation.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MostActiveParticipantViewController.shouldShowActionTypePhotoCapture.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture);
}

uint64_t MostActiveParticipantViewController.isVisibleInPIP.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MostActiveParticipantViewController.isVisibleInPIP.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MostActiveParticipantViewController.isVisibleInPIP.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

BOOL MostActiveParticipantViewController.shouldRegisterVideoLayers.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  uint64_t v4 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v17[-v9];
  uint64_t v11 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  outlined init with copy of FeatureEligibility?(v11, v1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v1, 1, v4);
  if (v12)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
    return 0;
  }
  else
  {
    outlined init with take of Participant(v1, (uint64_t)v10);
    uint64_t v14 = (char *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP);
    OUTLINED_FUNCTION_2();
    char v15 = *v14;
    outlined init with take of Participant((uint64_t)v10, (uint64_t)v8);
    BOOL v13 = (v15 & 1) != 0 || *(void *)&v8[*(int *)(v4 + 28)] != 0;
    _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
  }
  return v13;
}

id MostActiveParticipantViewController.flashView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView);
  }
  else
  {
    uint64_t v4 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews);
    swift_beginAccess();
    *uint64_t v4 = 1;
    type metadata accessor for FlashView();
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void key path setter for MostActiveParticipantViewController.flashView : MostActiveParticipantViewController(id *a1)
{
}

void MostActiveParticipantViewController.flashView.setter(uint64_t a1)
{
}

void (*MostActiveParticipantViewController.flashView.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MostActiveParticipantViewController.flashView.getter();
  return MostActiveParticipantViewController.flashView.modify;
}

void MostActiveParticipantViewController.flashView.modify(void **a1, char a2)
{
}

void MostActiveParticipantViewController.remoteParticipantView.modify(void **a1, char a2, void (*a3)(void))
{
  uint64_t v4 = *a1;
  if (a2)
  {
    id v5 = v4;
    a3();
  }
  else
  {
    ((void (*)(void *))a3)(v4);
  }
}

id MostActiveParticipantViewController.insulatingView.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView];
  id v4 = v3;
  if (v3 != (void *)1) {
    goto LABEL_5;
  }
  id v5 = &v1[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews];
  swift_beginAccess();
  *id v5 = 1;
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    OUTLINED_FUNCTION_18_2();
    id v7 = objc_allocWithZone((Class)type metadata accessor for MomentsIndicatorView());
    double v8 = OUTLINED_FUNCTION_41();
    uint64_t v11 = objc_msgSend(v9, v10, v8);
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x68))(1);
    id result = objc_msgSend(v1, sel_view);
    if (result)
    {
      char v12 = result;
      objc_msgSend(result, sel_bounds);

      id v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InsulatingView<MomentsIndicatorView>));
      double v14 = OUTLINED_FUNCTION_41();
      id v4 = specialized InsulatingView.init(frame:content:forwardHits:)(v11, 0, v14, v15, v16, v17);
      objc_super v18 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v4;
      id v19 = v4;
      outlined consume of UIView??(v18);
LABEL_5:
      outlined copy of UIView??(v3);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void key path setter for MostActiveParticipantViewController.insulatingView : MostActiveParticipantViewController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  MostActiveParticipantViewController.insulatingView.setter((uint64_t)v1);
}

void MostActiveParticipantViewController.insulatingView.setter(uint64_t a1)
{
  id v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView);
  *(void *)(v1
            + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView) = a1;
  outlined consume of UIView??(v2);
}

void (*MostActiveParticipantViewController.insulatingView.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MostActiveParticipantViewController.insulatingView.getter();
  return MostActiveParticipantViewController.insulatingView.modify;
}

void MostActiveParticipantViewController.insulatingView.modify(uint64_t *a1, char a2)
{
  id v2 = (void *)*a1;
  if (a2)
  {
    id v3 = v2;
    MostActiveParticipantViewController.insulatingView.setter((uint64_t)v2);
  }
  else
  {
    MostActiveParticipantViewController.insulatingView.setter(*a1);
  }
}

uint64_t MostActiveParticipantViewController.hasInitializedMomentsViews.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MostActiveParticipantViewController.hasInitializedMomentsViews.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MostActiveParticipantViewController.hasInitializedMomentsViews.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id MostActiveParticipantViewController.__allocating_init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  id v13 = objc_allocWithZone(v6);
  return MostActiveParticipantViewController.init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, a2, a3, a4, a5, a6);
}

id MostActiveParticipantViewController.init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for Participant(0);
  uint64_t v14 = OUTLINED_FUNCTION_100();
  __swift_storeEnumTagSinglePayload(v14, v15, 1, v16);
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation] = 1;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView] = 1;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants] = a1;
  _s15ConversationKit11ParticipantVWOcTm_10(a2, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipant], (void (*)(void))type metadata accessor for Participant);
  double v17 = &v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_defaults];
  *double v17 = a3;
  v17[1] = a4;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture] = a5;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership] = a6;
  v20.receiver = v6;
  v20.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  _s15ConversationKit11ParticipantV5StateOWOhTm_2(a2, (void (*)(void))type metadata accessor for Participant);
  return v18;
}

id MostActiveParticipantViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void MostActiveParticipantViewController.init(coder:)()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant];
  uint64_t v2 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Bool __swiftcall MostActiveParticipantViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall MostActiveParticipantViewController.viewDidLoad()()
{
  OUTLINED_FUNCTION_31();
  id v3 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16_0();
  v61.receiver = v3;
  v61.super_class = ObjectType;
  objc_msgSendSuper2(&v61, sel_viewDidLoad);
  MostActiveParticipantViewController.mostActiveParticipant.getter();
  MostActiveParticipantViewController.focus(on:)();
  _s15ConversationKit11ParticipantV5StateOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant);
  id v7 = OUTLINED_FUNCTION_39_0();
  if (!v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v8 = v7;
  if (one-time initialization token for background != -1) {
    swift_once();
  }
  objc_msgSend(v8, sel_setBackgroundColor_, static Colors.MostActiveParticipantView.background);

  id v9 = OUTLINED_FUNCTION_39_0();
  if (!v9) {
    goto LABEL_16;
  }
  SEL v10 = v9;
  OUTLINED_FUNCTION_21_53();
  objc_msgSend(v10, sel_addSubview_, v8);

  id v11 = OUTLINED_FUNCTION_39_0();
  if (!v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  char v12 = v11;
  id v13 = MostActiveParticipantViewController.remoteParticipantView.getter();
  objc_msgSend(v12, sel_addSubview_, v13);

  objc_msgSend(OUTLINED_FUNCTION_21_53(), sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v14 = MostActiveParticipantViewController.remoteParticipantView.getter();
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  OUTLINED_FUNCTION_21_53();
  ParticipantView.shouldOverrideShadowHidden.setter(1);

  uint64_t v15 = MostActiveParticipantViewController.remoteParticipantView.getter();
  ParticipantView.shouldOverrideShadowHidden.setter(1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v16 = OUTLINED_FUNCTION_37_28();
  *(_OWORD *)(v16 + 16) = xmmword_1C3769580;
  id v17 = objc_msgSend(OUTLINED_FUNCTION_46_23(), sel_widthAnchor);

  id v18 = OUTLINED_FUNCTION_39_0();
  if (!v18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v19 = v18;
  id v20 = objc_msgSend(v18, sel_widthAnchor);

  id v21 = OUTLINED_FUNCTION_22_48();
  *(void *)(v16 + 32) = v21;
  id v22 = objc_msgSend(OUTLINED_FUNCTION_46_23(), sel_heightAnchor);

  id v23 = OUTLINED_FUNCTION_39_0();
  if (!v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_heightAnchor);

  id v26 = OUTLINED_FUNCTION_22_48();
  *(void *)(v16 + 40) = v26;
  id v27 = objc_msgSend(OUTLINED_FUNCTION_46_23(), sel_centerXAnchor);

  id v28 = OUTLINED_FUNCTION_39_0();
  if (!v28)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v29 = v28;
  id v30 = objc_msgSend(v28, sel_centerXAnchor);

  id v31 = OUTLINED_FUNCTION_22_48();
  *(void *)(v16 + 48) = v31;
  id v32 = objc_msgSend(OUTLINED_FUNCTION_46_23(), sel_centerYAnchor);

  id v33 = OUTLINED_FUNCTION_39_0();
  if (!v33)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  double v34 = v33;
  id v35 = objc_msgSend(v33, sel_centerYAnchor);

  id v36 = OUTLINED_FUNCTION_22_48();
  *(void *)(v16 + 56) = v36;
  specialized Array._endMutation()();
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints] = v16;
  swift_bridgeObjectRelease();
  double v37 = self;
  type metadata accessor for NSLayoutConstraint();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_activateConstraints_, isa);

  uint64_t v39 = OUTLINED_FUNCTION_37_28();
  *(_OWORD *)(v39 + 16) = xmmword_1C3769580;
  id v40 = objc_msgSend(OUTLINED_FUNCTION_45_17(), sel_widthAnchor);

  id v41 = OUTLINED_FUNCTION_39_0();
  if (!v41)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __n128 v42 = v41;
  id v43 = objc_msgSend(v41, sel_widthAnchor);

  id v44 = OUTLINED_FUNCTION_23_53();
  *(void *)(v39 + 32) = v44;
  id v45 = objc_msgSend(OUTLINED_FUNCTION_45_17(), sel_heightAnchor);

  id v46 = OUTLINED_FUNCTION_39_0();
  if (!v46)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v47 = v46;
  id v48 = objc_msgSend(v46, sel_heightAnchor);

  id v49 = OUTLINED_FUNCTION_23_53();
  *(void *)(v39 + 40) = v49;
  id v50 = objc_msgSend(OUTLINED_FUNCTION_45_17(), sel_centerXAnchor);

  id v51 = OUTLINED_FUNCTION_39_0();
  if (!v51)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v52 = v51;
  id v53 = objc_msgSend(v51, sel_centerXAnchor);

  id v54 = OUTLINED_FUNCTION_23_53();
  *(void *)(v39 + 48) = v54;
  id v55 = objc_msgSend(OUTLINED_FUNCTION_45_17(), sel_centerYAnchor);

  id v56 = OUTLINED_FUNCTION_39_0();
  if (v56)
  {
    uint64_t v57 = v56;
    id v58 = objc_msgSend(v56, sel_centerYAnchor);

    id v59 = OUTLINED_FUNCTION_23_53();
    *(void *)(v39 + 56) = v59;
    specialized Array._endMutation()();
    Class v60 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_activateConstraints_, v60);

    specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()();
    specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()();
    OUTLINED_FUNCTION_28();
    return;
  }
LABEL_25:
  __break(1u);
}

Swift::Void __swiftcall MostActiveParticipantViewController.focusOnMostActiveParticipant()()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_17_0();
  MostActiveParticipantViewController.mostActiveParticipant.getter();
  MostActiveParticipantViewController.focus(on:)();
  _s15ConversationKit11ParticipantV5StateOWOhTm_2(v0, (void (*)(void))type metadata accessor for Participant);
}

Swift::Void __swiftcall MostActiveParticipantViewController.viewDidLayoutSubviews()()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_viewDidLayoutSubviews);
  id v1 = MostActiveParticipantViewController.flashView.getter();
  id v2 = OUTLINED_FUNCTION_50_20();
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v2, sel_bounds);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_30_34();

  id v3 = MostActiveParticipantViewController.insulatingView.getter();
  if (!v3) {
    return;
  }
  id v4 = v3;
  id v5 = OUTLINED_FUNCTION_50_20();
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v5, sel_bounds);
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_30_34();
}

Swift::Void __swiftcall MostActiveParticipantViewController.handleParticipantVideoRotationForPIP()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_62();
  uint64_t v6 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v6)) {
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  swift_unknownObjectRelease();
  if (v9) {
    goto LABEL_23;
  }
  uint64_t v10 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  if (__swift_getEnumTagSinglePayload(v10, 1, v4)) {
    goto LABEL_23;
  }
  _s15ConversationKit11ParticipantVWOcTm_10(v10, (uint64_t)v1, (void (*)(void))type metadata accessor for Participant);
  uint64_t v11 = *(void *)&v1[*(int *)(v4 + 28)];
  _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v1, (void (*)(void))type metadata accessor for Participant);
  if (v11) {
    goto LABEL_23;
  }
  char v12 = (void *)(v3
                 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation);
  OUTLINED_FUNCTION_2();
  if (*v12 < 3uLL)
  {
    OUTLINED_FUNCTION_21_53();
    v72.a = 1.0;
    v72.b = 0.0;
    v72.c = 0.0;
    v72.d = 1.0;
    v72.tCGFloat x = 0.0;
    v72.tCGFloat y = 0.0;
    ParticipantView.updateLayerTransform(to:)(&v72);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v13 = OUTLINED_FUNCTION_37_28();
    *(_OWORD *)(v13 + 16) = xmmword_1C3769580;
    uint64_t v14 = MostActiveParticipantViewController.localParticipantView.getter();
    id v15 = objc_msgSend(v14, sel_widthAnchor);

    id v16 = OUTLINED_FUNCTION_123_1();
    if (v16)
    {
      id v17 = v16;
      id v18 = objc_msgSend(v16, sel_widthAnchor);

      id v19 = OUTLINED_FUNCTION_1_137();
      *(void *)(v13 + 32) = v19;
      id v20 = MostActiveParticipantViewController.localParticipantView.getter();
      id v21 = objc_msgSend(v20, sel_heightAnchor);

      id v22 = OUTLINED_FUNCTION_123_1();
      if (v22)
      {
        id v23 = v22;
        uint64_t v24 = (char *)objc_msgSend(v22, sel_heightAnchor);

        id v25 = OUTLINED_FUNCTION_1_137();
        id v26 = OUTLINED_FUNCTION_18_60();

        id v27 = OUTLINED_FUNCTION_123_1();
        if (v27)
        {
          id v28 = v27;
          uint64_t v29 = (char *)[v27 v24 + 2432];

          id v30 = OUTLINED_FUNCTION_1_137();
          id v31 = OUTLINED_FUNCTION_17_57();

          id v32 = OUTLINED_FUNCTION_123_1();
          if (v32) {
            goto LABEL_22;
          }
          goto LABEL_27;
        }
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  if (*v12 == 3)
  {
    OUTLINED_FUNCTION_21_53();
    CGAffineTransformMakeRotation(&v72, -1.57079633);
    OUTLINED_FUNCTION_39_29();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v13 = OUTLINED_FUNCTION_37_28();
    id v33 = OUTLINED_FUNCTION_43_23((__n128 *)v13, (__n128)xmmword_1C3769580);

    id v34 = OUTLINED_FUNCTION_123_1();
    if (v34)
    {
      id v35 = v34;
      id v36 = objc_msgSend(v34, sel_heightAnchor);

      id v37 = OUTLINED_FUNCTION_1_137();
      *(void *)(v13 + 32) = v37;
      double v38 = MostActiveParticipantViewController.localParticipantView.getter();
      id v39 = objc_msgSend(v38, sel_heightAnchor);

      id v40 = OUTLINED_FUNCTION_123_1();
      if (v40)
      {
        id v41 = v40;
        __n128 v42 = (char *)[v40 *(SEL *)(v2 + 1992)];

        id v43 = OUTLINED_FUNCTION_1_137();
        id v44 = OUTLINED_FUNCTION_18_60();

        id v45 = OUTLINED_FUNCTION_123_1();
        if (v45)
        {
          id v46 = v45;
          uint64_t v29 = (char *)[v45 v42 + 2432];

          id v47 = OUTLINED_FUNCTION_1_137();
          id v31 = OUTLINED_FUNCTION_17_57();

          id v32 = OUTLINED_FUNCTION_123_1();
          if (v32) {
            goto LABEL_22;
          }
          goto LABEL_31;
        }
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (*v12 == 4)
  {
    OUTLINED_FUNCTION_21_53();
    CGAffineTransformMakeRotation(&v72, 1.57079633);
    OUTLINED_FUNCTION_39_29();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v13 = OUTLINED_FUNCTION_37_28();
    id v48 = OUTLINED_FUNCTION_43_23((__n128 *)v13, (__n128)xmmword_1C3769580);

    id v49 = OUTLINED_FUNCTION_123_1();
    if (v49)
    {
      id v50 = v49;
      id v51 = objc_msgSend(v49, sel_heightAnchor);

      id v52 = OUTLINED_FUNCTION_1_137();
      *(void *)(v13 + 32) = v52;
      id v53 = MostActiveParticipantViewController.localParticipantView.getter();
      id v54 = objc_msgSend(v53, sel_heightAnchor);

      id v55 = OUTLINED_FUNCTION_123_1();
      if (v55)
      {
        id v56 = v55;
        uint64_t v57 = (char *)[v55 *(SEL *)(v2 + 1992)];

        id v58 = OUTLINED_FUNCTION_1_137();
        id v59 = OUTLINED_FUNCTION_18_60();

        id v60 = OUTLINED_FUNCTION_123_1();
        if (v60)
        {
          objc_super v61 = v60;
          uint64_t v29 = (char *)[v60 v57 + 2432];

          id v62 = OUTLINED_FUNCTION_1_137();
          id v31 = OUTLINED_FUNCTION_17_57();

          id v32 = OUTLINED_FUNCTION_123_1();
          if (v32)
          {
LABEL_22:
            uint64_t v63 = v32;
            id v64 = [v32 v29 + 2446];

            id v65 = OUTLINED_FUNCTION_1_137();
            *(void *)(v13 + 56) = v65;
            specialized Array._endMutation()();
            uint64_t v66 = v13;
            uint64_t v67 = self;
            uint64_t v68 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints;
            type metadata accessor for NSLayoutConstraint();
            swift_bridgeObjectRetain();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            objc_msgSend(v67, sel_deactivateConstraints_, isa);

            *(void *)(v3 + v68) = v66;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            Class v70 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            objc_msgSend(v67, sel_activateConstraints_, v70);

LABEL_23:
            OUTLINED_FUNCTION_28();
            return;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_36:
  v72.a = 0.0;
  v72.b = -2.68156159e154;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  v72.a = -2.31584178e77;
  *(void *)&v72.b = 0x80000001C37B4A00;
  type metadata accessor for UIInterfaceOrientation(0);
  v71._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v71);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MostActiveParticipantViewController.focus(on:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v96 = v1;
  uint64_t v2 = type metadata accessor for ParticipantViewModel(0);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_2_3();
  uint64_t v92 = v4;
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10_5();
  uint64_t v86 = v7;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8_4();
  uint64_t v89 = v9;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_8_4();
  uint64_t v90 = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8_4();
  uint64_t v87 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_8_4();
  uint64_t v95 = v15;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v85 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  uint64_t v20 = v19 - 8;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_21();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v25 = OUTLINED_FUNCTION_8(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_10_5();
  uint64_t v88 = v26;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_8_4();
  uint64_t v91 = v28;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_8_4();
  uint64_t v93 = v30;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_8_4();
  uint64_t v97 = v32;
  OUTLINED_FUNCTION_8_1();
  uint64_t v34 = MEMORY[0x1F4188790](v33);
  id v36 = (char *)&v85 - v35;
  MEMORY[0x1F4188790](v34);
  double v38 = (char *)&v85 - v37;
  v94 = (unsigned __int8 *)v0;
  uint64_t v39 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v40 = v96;
  _s15ConversationKit11ParticipantVWOcTm_10(v96, (uint64_t)v38, (void (*)(void))type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v5);
  uint64_t v41 = v23 + *(int *)(v20 + 56);
  outlined init with copy of FeatureEligibility?(v39, v23, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of FeatureEligibility?((uint64_t)v38, v41, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v23, 1, v5);
  if (v51)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v38, &demangling cache variable for type metadata for Participant?);
    uint64_t v42 = OUTLINED_FUNCTION_100();
    OUTLINED_FUNCTION_33_0(v42, v43, v5);
    if (v51)
    {
      uint64_t updated = outlined destroy of SystemUpdateNotice?(v23, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_51_20(updated, v45, (void (*)(void))type metadata accessor for Participant);
      uint64_t v46 = v97;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  uint64_t v47 = (uint64_t)v18;
  id v18 = (char *)v39;
  outlined init with copy of FeatureEligibility?(v23, (uint64_t)v36, &demangling cache variable for type metadata for Participant?);
  uint64_t v48 = OUTLINED_FUNCTION_100();
  uint64_t v49 = v5;
  OUTLINED_FUNCTION_33_0(v48, v50, v5);
  if (v51)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v38, &demangling cache variable for type metadata for Participant?);
    _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v36, (void (*)(void))type metadata accessor for Participant);
    uint64_t v39 = (uint64_t)v18;
LABEL_9:
    uint64_t v52 = outlined destroy of SystemUpdateNotice?(v23, &demangling cache variable for type metadata for (Participant?, Participant?));
    OUTLINED_FUNCTION_51_20(v52, v53, (void (*)(void))type metadata accessor for Participant);
    uint64_t v46 = v97;
LABEL_13:
    _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_14;
  }
  uint64_t v54 = v47;
  outlined init with take of Participant(v41, v47);
  static Participant.== infix(_:_:)();
  char v56 = v55;
  _s15ConversationKit11ParticipantV5StateOWOhTm_2(v54, (void (*)(void))type metadata accessor for Participant);
  outlined destroy of SystemUpdateNotice?((uint64_t)v38, &demangling cache variable for type metadata for Participant?);
  _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v36, (void (*)(void))type metadata accessor for Participant);
  outlined destroy of SystemUpdateNotice?(v23, &demangling cache variable for type metadata for Participant?);
  double v38 = (char *)v40;
  uint64_t v57 = v40;
  uint64_t v58 = v95;
  _s15ConversationKit11ParticipantVWOcTm_10(v57, v95, (void (*)(void))type metadata accessor for Participant);
  uint64_t v5 = v49;
  uint64_t v46 = v97;
  uint64_t v39 = (uint64_t)v18;
  id v18 = (char *)v58;
  if ((v56 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_11:
  int v59 = 1;
  if (__swift_getEnumTagSinglePayload(v39, 1, v5)
    || (uint64_t v80 = v87,
        _s15ConversationKit11ParticipantVWOcTm_10(v39, v87, (void (*)(void))type metadata accessor for Participant), Participant.videoInfo.getter(), _s15ConversationKit11ParticipantV5StateOWOhTm_2(v80, (void (*)(void))type metadata accessor for Participant), outlined init with take of Participant.VideoInfo?((uint64_t)v101, (uint64_t)v106), !v106[0]))
  {
    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v60 = v106[3];
    outlined release of LinearGradient((uint64_t)v101);
    int v59 = 0;
  }
  Participant.videoInfo.getter();
  _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of Participant.VideoInfo?((uint64_t)v102, (uint64_t)v105);
  if (v105[0])
  {
    uint64_t v81 = v105[3];
    outlined release of LinearGradient((uint64_t)v102);
    if (v60 == v81) {
      int v82 = v59;
    }
    else {
      int v82 = 1;
    }
    if (v82 != 1) {
      goto LABEL_38;
    }
  }
  else if (v59)
  {
    goto LABEL_38;
  }
LABEL_14:
  outlined init with copy of FeatureEligibility?(v39, v46, &demangling cache variable for type metadata for Participant?);
  uint64_t v61 = v93;
  _s15ConversationKit11ParticipantVWOcTm_10((uint64_t)v38, v93, (void (*)(void))type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload(v61, 0, 1, v5);
  swift_beginAccess();
  outlined assign with take of Participant?(v61, v39);
  swift_endAccess();
  id v62 = v94;
  uint64_t v63 = &v94[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates];
  OUTLINED_FUNCTION_2();
  if ((*v63 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_10((uint64_t)v38, v90, (void (*)(void))type metadata accessor for Participant);
    uint64_t v64 = v62[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership];
    MostActiveParticipantViewController.shouldRegisterVideoLayers.getter();
    OUTLINED_FUNCTION_41_25();
    LOBYTE(v87) = 1;
    uint64_t v86 = 0;
    LOBYTE(v85) = 1;
    uint64_t v65 = v92;
    OUTLINED_FUNCTION_38_27();
    ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v66, v67, v68, v69, v70, v71, v72, v64, v85, v86, v87, v88, v89, v90, v91, v92, v93, (uint64_t)v94, v95,
      v96,
      v97,
      v98,
      v99,
      v100);
    MostActiveParticipantViewController.updateParticipantViewVisibility()();
    uint64_t v73 = MostActiveParticipantViewController.currentParticipantView.getter();
    ParticipantView.configure(with:isOneToOneMode:)(v65, 0);

    uint64_t v74 = MostActiveParticipantViewController.currentParticipantView.getter();
    ParticipantView.setKickMemberButtonIsVisible(_:)(0);

    MostActiveParticipantViewController.currentParticipantView.getter();
    OUTLINED_FUNCTION_40_25();

    Participant.videoInfo.getter();
    outlined init with take of Participant.VideoInfo?((uint64_t)v103, (uint64_t)v104);
    if (v104[0])
    {
      outlined release of LinearGradient((uint64_t)v103);
      MostActiveParticipantViewController.update(participant:visibleCameraPosition:)();
    }
    uint64_t v46 = v97;
    uint64_t v75 = v91;
    outlined init with copy of FeatureEligibility?(v97, v91, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_33_0(v75, 1, v5);
    if (v51)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_2(v65, (void (*)(void))type metadata accessor for ParticipantViewModel);
      outlined destroy of SystemUpdateNotice?(v46, &demangling cache variable for type metadata for Participant?);
      uint64_t v46 = v75;
    }
    else
    {
      uint64_t v76 = v75;
      uint64_t v77 = v89;
      outlined init with take of Participant(v76, v89);
      uint64_t v78 = v88;
      outlined init with copy of FeatureEligibility?(v39, v88, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_33_0(v78, 1, v5);
      if (v79)
      {
        _s15ConversationKit11ParticipantV5StateOWOhTm_2(v77, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantV5StateOWOhTm_2(v65, (void (*)(void))type metadata accessor for ParticipantViewModel);
        outlined destroy of SystemUpdateNotice?(v46, &demangling cache variable for type metadata for Participant?);
        uint64_t v46 = v78;
      }
      else
      {
        uint64_t v83 = v78;
        uint64_t v84 = v86;
        outlined init with take of Participant(v83, v86);
        if ((*(void *)(v77 + *(int *)(v5 + 28)) != 0) == (*(void *)(v84 + *(int *)(v5 + 28)) == 0)
          && *(void *)(*(void *)&v62[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants]
                       + 16) >= 2uLL)
        {
          MostActiveParticipantViewController.handleParticipantVideoRotationForPIP()();
        }
        _s15ConversationKit11ParticipantV5StateOWOhTm_2(v84, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantV5StateOWOhTm_2(v89, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantV5StateOWOhTm_2(v65, (void (*)(void))type metadata accessor for ParticipantViewModel);
      }
    }
  }
  outlined destroy of SystemUpdateNotice?(v46, &demangling cache variable for type metadata for Participant?);
LABEL_38:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall MostActiveParticipantViewController.updateParticipantViewVisibility()()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_0();
  uint64_t v7 = v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  outlined init with copy of FeatureEligibility?(v7, v2, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v2, 1, v5);
  if (v8)
  {
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant(v2, v0);
    uint64_t v9 = MostActiveParticipantViewController.localParticipantView.getter();
    uint64_t v10 = *(void *)(v0 + *(int *)(v5 + 28));
    BOOL v11 = v10 == 0;
    objc_msgSend(v9, sel_setHidden_, v10 != 0);

    uint64_t v12 = MostActiveParticipantViewController.remoteParticipantView.getter();
    objc_msgSend(v12, sel_setHidden_, v11);

    _s15ConversationKit11ParticipantV5StateOWOhTm_2(v0, (void (*)(void))type metadata accessor for Participant);
  }
}

void MostActiveParticipantViewController.update(participant:visibleCameraPosition:)()
{
  OUTLINED_FUNCTION_31();
  int v33 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = type metadata accessor for Participant(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v32 = v3;
  uint64_t v11 = v3 + v10;
  uint64_t v12 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v30 - v8, v11, v12);
  uint64_t v15 = __swift_storeEnumTagSinglePayload((uint64_t)v30 - v8, 0, 1, v12);
  MEMORY[0x1F4188790](v15);
  uint64_t v31 = v0;
  MostActiveParticipantViewController.participantIdentifier.getter((uint64_t)v30 - v8);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v17 = OUTLINED_FUNCTION_8(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_21();
  uint64_t v20 = v19 - v18;
  uint64_t v22 = v19 - v18 + *(int *)(v21 + 56);
  outlined init with copy of FeatureEligibility?((uint64_t)v30 - v8, v19 - v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v30 - v8, v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v23 = OUTLINED_FUNCTION_33_0(v20, 1, v12);
  if (v24)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_33_0(v22, 1, v12);
    if (v24)
    {
      outlined destroy of SystemUpdateNotice?(v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_11:
      uint64_t v29 = MostActiveParticipantViewController.currentParticipantView.getter();
      ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(v33, 1, *(void *)(v32 + *(int *)(v9 + 28)) == 0, 0);

      goto LABEL_12;
    }
    goto LABEL_9;
  }
  long long v30[2] = v30;
  MEMORY[0x1F4188790](v23);
  outlined init with copy of FeatureEligibility?(v20, (uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v25 = OUTLINED_FUNCTION_33_0(v22, 1, v12);
  if (v24)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_29_4();
    v26();
LABEL_9:
    outlined destroy of SystemUpdateNotice?(v20, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_12;
  }
  v30[1] = v30;
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_36_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v7, v22, v12);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = *(void (**)(void))(v14 + 8);
  OUTLINED_FUNCTION_29_4();
  v28();
  outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_29_4();
  v28();
  outlined destroy of SystemUpdateNotice?(v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v27) {
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_28();
}

#error "1C357D904: call analysis failed (funcsize=140)"

id MostActiveParticipantViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MostActiveParticipantViewController.init(nibName:bundle:)()
{
}

id MostActiveParticipantViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void MostActiveParticipantViewController.update(participant:broadcastingState:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2_3();
  uint64_t v56 = v5;
  uint64_t v6 = type metadata accessor for ParticipantViewModel(0);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v57 = v8;
  uint64_t v54 = *(int *)(v3 + 28);
  if (!*(void *)(v2 + v54))
  {
    uint64_t v9 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipant;
    swift_beginAccess();
    outlined assign with copy of Participant(v2, v9);
    swift_endAccess();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v61 = &v51;
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v15 = *(int *)(v3 + 20);
  uint64_t v55 = v2;
  uint64_t v16 = v2 + v15;
  uint64_t v17 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v51 - v14, v16, v17);
  uint64_t v20 = __swift_storeEnumTagSinglePayload((uint64_t)&v51 - v14, 0, 1, v17);
  uint64_t v60 = &v51;
  MEMORY[0x1F4188790](v20);
  uint64_t v58 = (char *)v0;
  MostActiveParticipantViewController.participantIdentifier.getter((uint64_t)&v51 - v14);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  int v59 = &v51;
  uint64_t v22 = OUTLINED_FUNCTION_8(v21);
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_118();
  uint64_t v24 = v16 + *(int *)(v23 + 56);
  outlined init with copy of FeatureEligibility?((uint64_t)&v51 - v14, v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)&v51 - v14, v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v25 = OUTLINED_FUNCTION_100();
  uint64_t v27 = OUTLINED_FUNCTION_33_0(v25, v26, v17);
  if (!v29)
  {
    MEMORY[0x1F4188790](v27);
    outlined init with copy of FeatureEligibility?(v16, (uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v30 = OUTLINED_FUNCTION_33_0(v24, 1, v17);
    if (!v29)
    {
      uint64_t v53 = &v51;
      MEMORY[0x1F4188790](v30);
      OUTLINED_FUNCTION_21();
      uint64_t v52 = &v51;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v33 - v32, v24, v17);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *(void (**)(void))(v19 + 8);
      OUTLINED_FUNCTION_29_4();
      v35();
      outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_29_4();
      v35();
      outlined destroy of SystemUpdateNotice?(v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v28 = v58;
      OUTLINED_FUNCTION_20_57();
      if ((v34 & 1) == 0) {
        goto LABEL_28;
      }
      goto LABEL_13;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_29_4();
    v31();
LABEL_11:
    outlined destroy of SystemUpdateNotice?(v16, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    OUTLINED_FUNCTION_20_57();
    goto LABEL_28;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_33_0(v24, 1, v17);
  if (!v29) {
    goto LABEL_11;
  }
  outlined destroy of SystemUpdateNotice?(v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v28 = v58;
  OUTLINED_FUNCTION_20_57();
LABEL_13:
  id v36 = &v28[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates];
  OUTLINED_FUNCTION_2();
  if ((*v36 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_10(v55, v56, (void (*)(void))type metadata accessor for Participant);
    uint64_t v37 = v28[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership];
    Participant.videoInfo.getter();
    outlined init with take of Participant.VideoInfo?((uint64_t)v65, (uint64_t)v66);
    if (v66[0]
      && ((memcpy(v67, v66, 0x4AuLL),
           outlined release of LinearGradient((uint64_t)v65),
           outlined init with take of AspectRatio((uint64_t)&v67[40], (uint64_t)v68),
           outlined init with take of AspectRatio((uint64_t)v68, (uint64_t)v71),
           (v72 & 1) != 0)
       || (v71[0] == 1.0 ? (BOOL v38 = v71[1] == 1.0) : (BOOL v38 = 0), v38))
      && ((outlined init with take of AspectRatio((uint64_t)v68, (uint64_t)v69), (v70 & 1) != 0) || v69[2] == 1.0))
    {
      double v40 = v69[3];
      if (v70) {
        double v40 = 1.0;
      }
      BOOL v39 = v40 == 1.0;
    }
    else
    {
      BOOL v39 = 0;
    }
    MostActiveParticipantViewController.shouldRegisterVideoLayers.getter();
    OUTLINED_FUNCTION_41_25();
    LOBYTE(v53) = 1;
    uint64_t v52 = 0;
    LOBYTE(v51) = v39;
    uint64_t v41 = v57;
    OUTLINED_FUNCTION_38_27();
    ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v42, v43, v44, v45, v46, v47, v48, v37, v51, (uint64_t)v52, (uint64_t)v53, v54, v55, v56, v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61,
      v62,
      v63,
      v64,
      v65[0],
      v65[1]);
    uint64_t v49 = MostActiveParticipantViewController.currentParticipantView.getter();
    ParticipantView.configure(with:isOneToOneMode:)(v41, 0);

    uint64_t v50 = MostActiveParticipantViewController.currentParticipantView.getter();
    ParticipantView.setKickMemberButtonIsVisible(_:)(0);

    MostActiveParticipantViewController.currentParticipantView.getter();
    OUTLINED_FUNCTION_40_25();

    _s15ConversationKit11ParticipantV5StateOWOhTm_2(v41, (void (*)(void))type metadata accessor for ParticipantViewModel);
  }
LABEL_28:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall MostActiveParticipantViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  *(unsigned char *)(v2
           + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership) = isLocalMemberAuthorizedToChangeGroupMembership;
}

uint64_t MostActiveParticipantViewController.update(with:updateReason:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = type metadata accessor for Participant(0);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  MostActiveParticipantViewController.updateRemoteParticipants(with:)(a1);
  MostActiveParticipantViewController.mostActiveParticipant.getter();
  MostActiveParticipantViewController.focus(on:)();
  return _s15ConversationKit11ParticipantV5StateOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant);
}

Swift::Void __swiftcall MostActiveParticipantViewController.updateRemoteParticipants(with:)(Swift::OpaquePointer with)
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v3;
  uint64_t v29 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  uint64_t v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)v27 - v13;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t v16 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  if (v16)
  {
    v27[1] = v4;
    uint64_t v28 = v1;
    uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v18 = *(void *)(v8 + 72);
    uint64_t v30 = (v17 + 32) & ~v17;
    uint64_t v19 = v4 + v30;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_10(v19, (uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
      if (v14[*(int *)(v6 + 52)] == 1)
      {
        _s15ConversationKit11ParticipantVWOcTm_10((uint64_t)v14, v2, (void (*)(void))type metadata accessor for Participant.State);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 5u:
            goto LABEL_7;
          case 4u:
            uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            uint64_t v22 = v2 + *(int *)(v21 + 48);
            OUTLINED_FUNCTION_8_2((uint64_t *)(v2 + *(int *)(v21 + 64)));
            outlined destroy of Participant.MediaInfo(v22);
LABEL_7:
            type metadata accessor for Date();
            OUTLINED_FUNCTION_0();
            (*(void (**)())(v23 + 8))();
            break;
          case 6u:
            break;
          default:
            type metadata accessor for Date();
            OUTLINED_FUNCTION_0();
            OUTLINED_FUNCTION_26_2();
            v20();
            _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
            goto LABEL_13;
        }
      }
      outlined init with take of Participant((uint64_t)v14, (uint64_t)v12);
      uint64_t v24 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v31;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v31;
      }
      *(void *)(v24 + 16) = v26 + 1;
      outlined init with take of Participant((uint64_t)v12, v24 + v30 + v26 * v18);
LABEL_13:
      v19 += v18;
      --v16;
    }
    while (v16);
    uint64_t v15 = v31;
    uint64_t v1 = v28;
  }
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants) = v15;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
}

void MostActiveParticipantViewController.update(participant:audioPower:)(uint64_t a1, Swift::Float a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = a1 + *(int *)(type metadata accessor for Participant(0) + 20);
  uint64_t v12 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v30 - v9, v11, v12);
  uint64_t v15 = __swift_storeEnumTagSinglePayload((uint64_t)v30 - v9, 0, 1, v12);
  MEMORY[0x1F4188790](v15);
  uint64_t v16 = (char *)v30 - v9;
  MostActiveParticipantViewController.participantIdentifier.getter((uint64_t)v30 - v9);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v18 = OUTLINED_FUNCTION_8(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_63();
  uint64_t v20 = v2 + *(int *)(v19 + 56);
  outlined init with copy of FeatureEligibility?((uint64_t)v30 - v9, v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v30 - v9, v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v21 = OUTLINED_FUNCTION_33_0(v2, 1, v12);
  if (v22)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_33_0(v20, 1, v12);
    if (v22)
    {
      outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_11:
      uint64_t v29 = MostActiveParticipantViewController.currentParticipantView.getter();
      ParticipantMonogramView.updateAudioVisualization(with:)(a2);

      return;
    }
LABEL_9:
    outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    return;
  }
  MEMORY[0x1F4188790](v21);
  outlined init with copy of FeatureEligibility?(v2, (uint64_t)v30 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v23 = OUTLINED_FUNCTION_33_0(v20, 1, v12);
  if (v22)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v30 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_31_38();
    v24();
    goto LABEL_9;
  }
  v30[1] = v30;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_21();
  v30[0] = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v26 - v25, v20, v12);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = *(void (**)(void))(v14 + 8);
  OUTLINED_FUNCTION_31_38();
  v28();
  outlined destroy of SystemUpdateNotice?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_31_38();
  v28();
  outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v27) {
    goto LABEL_11;
  }
}

void MostActiveParticipantViewController.spatialPosition(for:relativeTo:)(uint64_t a1, uint64_t a2)
{
  if (objc_msgSend(v2, sel_view))
  {
    objc_msgSend(MostActiveParticipantViewController.currentParticipantView.getter(), sel_frame);
    OUTLINED_FUNCTION_18_2();
    double v4 = OUTLINED_FUNCTION_41();
    objc_msgSend(v5, v6, a2, v4);
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_41();
  }
  else
  {
    __break(1u);
  }
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance MostActiveParticipantViewController()
{
  return MostActiveParticipantViewController.participantsViewControllerDelegate.getter();
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance MostActiveParticipantViewController(uint64_t a1, uint64_t a2)
{
  return MostActiveParticipantViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance MostActiveParticipantViewController(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](v6);
  uint64_t v8 = *(void *)(v6 + 8);
  v3[3] = v7;
  void v3[4] = v8;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance MostActiveParticipantViewController()
{
}

uint64_t protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance MostActiveParticipantViewController(Swift::OpaquePointer a1)
{
  return MostActiveParticipantViewController.update(with:updateReason:)(a1);
}

void protocol witness for ParticipantsViewController.update(participant:audioPower:) in conformance MostActiveParticipantViewController(uint64_t a1, Swift::Float a2)
{
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance MostActiveParticipantViewController(Swift::OpaquePointer a1, Swift::Bool a2)
{
}

void protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance MostActiveParticipantViewController(uint64_t a1, uint64_t a2)
{
}

uint64_t MostActiveParticipantViewController.localLivePhotoAlertView.getter()
{
  return 0;
}

id MostActiveParticipantViewController.underlyingView.getter()
{
  id v1 = objc_msgSend(v0, sel_view);
  return v1;
}

void MostActiveParticipantViewController.nameForPhotoIndicator.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v25 - v5;
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  if (__swift_getEnumTagSinglePayload(v7, 1, v2)) {
    goto LABEL_11;
  }
  _s15ConversationKit11ParticipantVWOcTm_10(v7, (uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
  uint64_t v8 = *(void **)&v6[*(int *)(v2 + 28)];
  if (!v8)
  {
LABEL_10:
    _s15ConversationKit11ParticipantVWOcTm_10((uint64_t)v6, v1, (void (*)(void))type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)();
    id v24 = (id)v25[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    _s15ConversationKit11ParticipantV5StateOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_11;
  }
  id v9 = v8;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v9);
  if (!v10)
  {

    goto LABEL_10;
  }
  if ((objc_msgSend(v9, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v11 = type metadata accessor for PersonNameComponents();
  v25[1] = v25;
  OUTLINED_FUNCTION_4();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_21();
  uint64_t v17 = v16 - v15;
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  id v18 = (id)static NSPersonNameComponentsFormatter.initials;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v20 = objc_msgSend(v18, sel_stringFromPersonNameComponents_, isa);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  v25[2] = v21;
  v25[3] = v23;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.localizedUppercase.getter();

  swift_bridgeObjectRelease();
  _s15ConversationKit11ParticipantV5StateOWOhTm_2((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  OUTLINED_FUNCTION_28();
}

uint64_t outlined init with take of Participant.VideoInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.VideoInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s15ConversationKit11ParticipantV5StateOWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

char *sub_1C357EEFC()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = MostActiveParticipantViewController.remoteParticipantView.getter();
  void *v0 = result;
  return result;
}

char *sub_1C357EF28()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = MostActiveParticipantViewController.localParticipantView.getter();
  void *v0 = result;
  return result;
}

id sub_1C357EF54()
{
  OUTLINED_FUNCTION_2_0();
  id result = MostActiveParticipantViewController.flashView.getter();
  void *v0 = result;
  return result;
}

id sub_1C357EF80()
{
  OUTLINED_FUNCTION_2_0();
  id result = MostActiveParticipantViewController.insulatingView.getter();
  void *v0 = result;
  return result;
}

uint64_t ObjC metadata update function for MostActiveParticipantViewController()
{
  return type metadata accessor for MostActiveParticipantViewController();
}

uint64_t type metadata accessor for MostActiveParticipantViewController()
{
  uint64_t result = type metadata singleton initialization cache for MostActiveParticipantViewController;
  if (!type metadata singleton initialization cache for MostActiveParticipantViewController) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for MostActiveParticipantViewController()
{
  type metadata accessor for Participant(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for MostActiveParticipantViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MostActiveParticipantViewController);
}

uint64_t dispatch thunk of MostActiveParticipantViewController.__allocating_init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, char *a2)
{
  uint64_t v53 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v42 = a1;
  uint64_t v43 = v2;
  if (v9)
  {
    uint64_t v10 = type metadata accessor for IndexPath();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = v11;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v48 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource;
    uint64_t v47 = *(void *)(v11 + 72);
    uint64_t v15 = v11 + 16;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v51 = v15;
    uint64_t v52 = v14;
    uint64_t v49 = v12;
    uint64_t v45 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v46 = v12 + 32;
    uint64_t v16 = v10;
    swift_bridgeObjectRetain();
    uint64_t v54 = v16;
    uint64_t v55 = MEMORY[0x1E4FBC860];
    uint64_t v17 = (uint64_t)v44;
    uint64_t v50 = v8;
    while (1)
    {
      v52(v8, v13, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v16);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16);
      if (EnumTagSinglePayload == 1) {
        break;
      }
      uint64_t v56 = v9;
      int v59 = &v42;
      __n128 v19 = MEMORY[0x1F4188790](EnumTagSinglePayload);
      uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v22 + 32))(v21, v8, v16, v19);
      uint64_t v23 = type metadata accessor for UUID();
      uint64_t v58 = &v42;
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(void *)(v24 + 64);
      MEMORY[0x1F4188790](v23);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v60 = &v42;
      MEMORY[0x1F4188790](v26 - 8);
      uint64_t v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v29 = *(id *)&v53[v48];
      ParticipantsCollectionViewDataSource.participant(at:)((uint64_t)v21, v17);

      uint64_t v30 = type metadata accessor for Participant(0);
      int v31 = __swift_getEnumTagSinglePayload(v17, 1, v30);
      uint64_t v57 = v24;
      if (v31 == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v17, &demangling cache variable for type metadata for Participant?);
        uint64_t v32 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v28, v17 + *(int *)(v30 + 20), v23);
        _s15ConversationKit11ParticipantVWOhTm_11(v17, (void (*)(void))type metadata accessor for Participant);
        uint64_t v32 = 0;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v28, v32, 1, v23);
      uint64_t v16 = v54;
      (*v45)(v21, v54);
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v23) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        uint64_t v33 = *(uint64_t (**)(char *, char *, uint64_t))(v57 + 32);
        uint64_t v34 = v33((char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v23);
        uint64_t v60 = &v42;
        __n128 v35 = MEMORY[0x1F4188790](v34);
        ((void (*)(char *, char *, uint64_t, __n128))v33)((char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v55 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v55 + 16) + 1, 1, v55);
        }
        unint64_t v37 = *(void *)(v55 + 16);
        unint64_t v36 = *(void *)(v55 + 24);
        uint64_t v38 = v57;
        if (v37 >= v36 >> 1) {
          uint64_t v55 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1, v55);
        }
        uint64_t v39 = v55;
        *(void *)(v55 + 16) = v37 + 1;
        v33((char *)(v39+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v37), (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
        uint64_t v17 = (uint64_t)v44;
        uint64_t v16 = v54;
      }
      v13 += v47;
      uint64_t v9 = v56 - 1;
      uint64_t v8 = v50;
      if (v56 == 1) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = MEMORY[0x1E4FBC860];
LABEL_17:
    uint64_t v40 = type metadata accessor for IndexPath();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v40);
  }

  swift_bridgeObjectRelease();
  return v55;
}

uint64_t ParticipantListViewController.participantCount.getter()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource);
  uint64_t v2 = ParticipantsCollectionViewDataSource.participants.getter();

  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v3;
}

void *ParticipantListViewController.collectionView.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v1) {
    id v2 = v1;
  }
  return v1;
}

uint64_t ParticipantListViewController.participantsViewControllerDelegate.getter()
{
  return ParticipantGridViewController.participantsViewControllerDelegate.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate);
}

uint64_t ParticipantListViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  return ParticipantListViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate);
}

uint64_t (*ParticipantListViewController.participantsViewControllerDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  OUTLINED_FUNCTION_8_81((uint64_t)v3, OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate);
  uint64_t v4 = MEMORY[0x1C8776240](v1);
  uint64_t v5 = *(void *)(v1 + 8);
  v3[3] = v4;
  void v3[4] = v5;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

uint64_t key path setter for ParticipantListViewController.participantsViewControllerDelegate : ParticipantListViewController(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *a2 + *a5;
  OUTLINED_FUNCTION_9_26();
  *(void *)(v6 + 8) = v5;
  return swift_unknownObjectWeakAssign();
}

uint64_t ParticipantListViewController.participantListViewControllerDelegate.getter()
{
  return ParticipantGridViewController.participantsViewControllerDelegate.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate);
}

uint64_t ParticipantListViewController.participantListViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  return ParticipantListViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate);
}

uint64_t ParticipantListViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  OUTLINED_FUNCTION_9_26();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*ParticipantListViewController.participantListViewControllerDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  OUTLINED_FUNCTION_8_81((uint64_t)v3, OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate);
  uint64_t v4 = MEMORY[0x1C8776240](v1);
  uint64_t v5 = *(void *)(v1 + 8);
  v3[3] = v4;
  void v3[4] = v5;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

void *ParticipantListViewController.visibleParticipantIdentifiers.getter()
{
  uint64_t v1 = ParticipantListViewController.indexPathsForVisibleItems()();
  specialized Sequence.compactMap<A>(_:)(v1, (char *)v0);
  OUTLINED_FUNCTION_8_11();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ParticipantListViewController.indexPathsForVisibleItems()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = v1;
  objc_msgSend(v2, sel_layoutIfNeeded);
  id v3 = objc_msgSend(v2, sel_indexPathsForVisibleItems);
  type metadata accessor for IndexPath();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&v6);
  swift_bridgeObjectRelease();

  return v6;
}

void ParticipantListViewController.nonVisibleParticipantIdentifiers.getter()
{
  ParticipantListViewController.indexPathsForVisibleItems()();
  id v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_8_11();
  uint64_t v3 = specialized Sequence.compactMap<A>(_:)(v2, (char *)v0);
  swift_bridgeObjectRelease();
  uint64_t v4 = ParticipantListViewController.participantIdentifiers.getter();
  specialized _ArrayProtocol.filter(_:)(v4, v3);
}

uint64_t ParticipantListViewController.participantIdentifiers.getter()
{
  uint64_t v30 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_21();
  uint64_t v6 = v5 - v4;
  id v7 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource);
  uint64_t v8 = ParticipantsCollectionViewDataSource.participants.getter();

  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v9, 0);
    OUTLINED_FUNCTION_22_0();
    v26[1] = v8;
    uint64_t v11 = v8 + v10;
    uint64_t v12 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    uint64_t v15 = v14;
    uint64_t v28 = *(void *)(v16 + 64);
    uint64_t v29 = v13;
    uint64_t v17 = *(void *)(v2 + 72);
    id v18 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v26[2] = v14 + 32;
    uint64_t v27 = v17;
    do
    {
      MEMORY[0x1F4188790](v13);
      uint64_t v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      _s15ConversationKit11ParticipantVWOcTm_17(v11, v6);
      (*v18)(v20, v6 + *(int *)(v30 + 20), v12);
      _s15ConversationKit11ParticipantVWOhTm_11(v6, (void (*)(void))type metadata accessor for Participant);
      uint64_t v21 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v31;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v31;
      }
      *(void *)(v21 + 16) = v23 + 1;
      OUTLINED_FUNCTION_22_0();
      uint64_t v12 = v29;
      uint64_t v13 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21 + v24 + *(void *)(v15 + 72) * v23, v20, v29);
      uint64_t v31 = v21;
      v11 += v27;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v21;
}

char *ParticipantListViewController.__allocating_init(localParticipant:remoteParticipants:participantIsShownInGrid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return ParticipantListViewController.init(localParticipant:remoteParticipants:participantIsShownInGrid:)(a1, a2, a3, a4);
}

char *ParticipantListViewController.init(localParticipant:remoteParticipants:participantIsShownInGrid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ParticipantListLayout());
  uint64_t v13 = v5;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_init);
  uint64_t v14 = &v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = &v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  OUTLINED_FUNCTION_7_0((uint64_t)&v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_7_0((uint64_t)&v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate]);
  objc_allocWithZone((Class)type metadata accessor for ParticipantsCollectionViewDataSource());
  swift_retain();
  *(void *)&v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource] = ParticipantsCollectionViewDataSource.init(participants:participantIsShownInGrid:)(a2, a3, a4);

  v19.receiver = v13;
  v19.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  _s15ConversationKit11ParticipantVWOhTm_11(a1, (void (*)(void))type metadata accessor for Participant);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout]
      + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  swift_beginAccess();
  *(void *)(v17 + 8) = &protocol witness table for ParticipantListViewController;
  swift_unknownObjectWeakAssign();
  return v16;
}

id ParticipantListViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantListViewController.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantListLayout()), sel_init);
  uint64_t v2 = &v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  id v3 = &v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  OUTLINED_FUNCTION_7_0((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_7_0((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantListViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v31.receiver = v0;
  v31.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v31, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v3 = v2;
  objc_msgSend(v2, sel_bounds);

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout];
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1568]);
  double v6 = OUTLINED_FUNCTION_41();
  objc_msgSend(v7, v8, v4, v6);
  OUTLINED_FUNCTION_89();
  type metadata accessor for ParticipantCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (one-time initialization token for reuseIdentifier != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)MEMORY[0x1C87730B0](static ParticipantCell.reuseIdentifier, *(void *)algn_1EA37DF48);
  objc_msgSend(v4, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v10);

  objc_msgSend(v4, sel_setDataSource_, *(void *)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource]);
  objc_msgSend(v4, sel_setDelegate_, v1);
  objc_msgSend(v4, sel_setDragInteractionEnabled_, 0);
  objc_msgSend(v4, sel_setAlwaysBounceHorizontal_, 1);
  objc_msgSend(v4, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v4, sel_setClipsToBounds_, 1);
  id v11 = v4;
  static Platform.current.getter();
  objc_msgSend(v11, sel__setContinuousCornerRadius_, 10.0);

  id v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_clearColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  id v15 = OUTLINED_FUNCTION_11_73();
  if (!v15) {
    goto LABEL_11;
  }
  uint64_t v16 = v15;
  objc_msgSend(v15, sel_addSubview_, v13);

  id v17 = OUTLINED_FUNCTION_11_73();
  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v18 = v17;
  v32.top = OUTLINED_FUNCTION_41();
  UIView.addConstraintsToFill(_:insets:)(v19, v32);

  id v20 = OUTLINED_FUNCTION_11_73();
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v21 = v20;
  UIView.addTapInteraction(withTapCount:)(1);

  type metadata accessor for ParticipantDimmingView();
  id v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v23 = OUTLINED_FUNCTION_11_73();
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v24 = v23;
  objc_msgSend(v23, sel_addSubview_, v22);

  id v25 = OUTLINED_FUNCTION_11_73();
  if (v25)
  {
    uint64_t v26 = v25;
    v33.top = OUTLINED_FUNCTION_41();
    UIView.addConstraintsToFill(_:insets:)(v27, v33);

    uint64_t v28 = &v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
    uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
    uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent + 8];
    *(void *)uint64_t v28 = v13;
    *((void *)v28 + 1) = v22;
    outlined consume of ConversationControlsRecipe.View?(v29, v30);
    return;
  }
LABEL_15:
  __break(1u);
}

Swift::Void __swiftcall ParticipantListViewController.centerParticipantListForAutomationIfNecessary()()
{
  uint64_t v1 = v0;
  id v2 = (id)type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  SEL v8 = (void *)(v7 - v6);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  void *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(void *, void, id))(v4 + 104))(v8, *MEMORY[0x1E4FBCBE8], v2);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, id))(v4 + 8))(v8, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
LABEL_5:
    if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 472))())
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      objc_msgSend(v1, sel_contentOffset);
      double v13 = v12;
      objc_msgSend(v8, sel_itemSize);
      objc_msgSend(v1, sel_setContentOffset_animated_, 0, v14 * 0.5, v13);
    }
    goto LABEL_9;
  }
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  if (!v10) {
    return;
  }
  uint64_t v1 = v10;
  id v2 = objc_msgSend(v1, sel_collectionViewLayout);
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    SEL v8 = (void *)v11;
    if (one-time initialization token for shared == -1) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
}

Swift::Void __swiftcall ParticipantListViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1);
  ParticipantListViewController.centerParticipantListForAutomationIfNecessary()();
}

Swift::Void __swiftcall ParticipantListViewController.viewDidLayoutSubviews()()
{
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, sel_viewDidLayoutSubviews);
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  double v2 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  double v3 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize + 8];
  char v4 = v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize + 16];
  id v5 = objc_msgSend(v0, sel_view);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_bounds);
    double v8 = v7;
    double v10 = v9;

    if ((v4 & 1) != 0 || (v2 == v8 ? (BOOL v11 = v3 == v10) : (BOOL v11 = 0), !v11))
    {
      double v12 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
      if (v12) {
        objc_msgSend(v12, sel_reloadData);
      }
    }
    id v13 = objc_msgSend(v0, sel_view);
    if (v13)
    {
      double v14 = v13;
      objc_msgSend(v13, sel_bounds);
      uint64_t v16 = v15;
      uint64_t v18 = v17;

      *(void *)uint64_t v1 = v16;
      *((void *)v1 + 1) = v18;
      v1[16] = 0;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Bool __swiftcall ParticipantListViewController._canShowWhileLocked()()
{
  return 1;
}

id ParticipantListViewController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

Swift::Void __swiftcall ParticipantListViewController.setOverlayHidden(_:)(Swift::Bool a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent))
  {
    id v3 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent + 8);
    ParticipantDimmingView.setHidden(_:)(a1);
  }
}

uint64_t static ParticipantListViewController.filterAndSort(_:)(uint64_t a1)
{
  uint64_t v25 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v25);
  id v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  double v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  double v10 = (char *)v24 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = *(void *)(v5 + 72);
    v24[1] = a1;
    uint64_t v26 = (v13 + 32) & ~v13;
    uint64_t v15 = a1 + v26;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_17(v15, (uint64_t)v10);
      if (v10[*(int *)(v4 + 52)] == 1)
      {
        _s15ConversationKit11ParticipantVWOcTm_17((uint64_t)v10, (uint64_t)v3);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 5u:
            goto LABEL_7;
          case 4u:
            uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            uint64_t v18 = (uint64_t)&v3[*(int *)(v17 + 48)];
            outlined consume of Participant.CopresenceInfo?(*(void *)&v3[*(int *)(v17 + 64)], *(void *)&v3[*(int *)(v17 + 64) + 8]);
            outlined destroy of Participant.MediaInfo(v18);
LABEL_7:
            uint64_t v19 = type metadata accessor for Date();
            (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v3, v19);
            break;
          case 6u:
            break;
          default:
            uint64_t v16 = type metadata accessor for Date();
            (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v3, v16);
            _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
            goto LABEL_13;
        }
      }
      outlined init with take of Participant((uint64_t)v10, (uint64_t)v8);
      uint64_t v20 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v27;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v27;
      }
      *(void *)(v20 + 16) = v22 + 1;
      outlined init with take of Participant((uint64_t)v8, v20 + v26 + v22 * v14);
LABEL_13:
      v15 += v14;
      --v12;
    }
    while (v12);
    uint64_t v11 = v27;
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v11;
  swift_retain();
  specialized MutableCollection<>.sort(by:)(&v27);
  swift_release();
  return v27;
}

uint64_t closure #2 in static ParticipantListViewController.filterAndSort(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v2 = *(void *)(*(void *)(v1 - 8) + 64);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = Participant.broadcastStartDate.getter((uint64_t)v3);
  MEMORY[0x1F4188790](started);
  Participant.broadcastStartDate.getter((uint64_t)v3);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Date?, Date?));
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  double v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)&v8[*(int *)(v6 + 56)];
  outlined init with take of Date?((uint64_t)v3, (uint64_t)v8);
  outlined init with take of Date?((uint64_t)v3, v9);
  uint64_t v10 = type metadata accessor for Date();
  LODWORD(v3) = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v10);
  if (v3 == 1)
  {
    if (EnumTagSinglePayload == 1)
    {
      Participant.contactDetails.getter();
      uint64_t v12 = (void *)v28[14];
      uint64_t v13 = v28[15];
      uint64_t v14 = v28[16];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v28[12] = v13;
      v28[13] = v14;
      Participant.contactDetails.getter();
      uint64_t v15 = (void *)v28[5];
      uint64_t v16 = v28[6];
      uint64_t v17 = v28[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v28[3] = v16;
      v28[4] = v17;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v18 = StringProtocol.localizedCompare<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v19 = v18 == 1;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, (uint64_t *)&demangling cache variable for type metadata for Date?);
      char v19 = 0;
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v10 - 8);
    uint64_t v21 = v20;
    if (EnumTagSinglePayload == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v10);
      char v19 = 1;
    }
    else
    {
      v28[2] = v28;
      uint64_t v22 = *(void *)(v20 + 64);
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      v28[23] = v0;
      id v23 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = *(uint64_t (**)(char *, char *, uint64_t))(v21 + 32);
      uint64_t v25 = v24(v23, v8, v10);
      v28[1] = v28;
      MEMORY[0x1F4188790](v25);
      v24(v23, (char *)v9, v10);
      char v19 = static Date.< infix(_:_:)();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v21 + 8);
      v26(v23, v10);
      v26(v23, v10);
    }
  }
  return v19 & 1;
}

uint64_t ParticipantListViewController.rangeOfVisibleItems()()
{
  uint64_t v0 = ParticipantListViewController.indexPathsForVisibleItems()();
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = (char *)v22 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  specialized Collection.first.getter(v0, (uint64_t)v22 - v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22 - v8, 1, v1) == 1)
  {
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22 - v8, &demangling cache variable for type metadata for IndexPath?);
    return 0;
  }
  uint64_t v25 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v10 = v25((char *)v22 - v4, (char *)v22 - v8, v1);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v22 - v4;
  MEMORY[0x1F4188790](v11);
  specialized BidirectionalCollection.last.getter(v0, (uint64_t)v22 - v8);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22 - v8, 1, v1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22 - v8, &demangling cache variable for type metadata for IndexPath?);
    return 0;
  }
  uint64_t v24 = v2;
  v25(v12, (char *)v22 - v8, v1);
  uint64_t result = IndexPath.section.getter();
  if (result < 0)
  {
LABEL_25:
    __break(1u);
  }
  else
  {
    uint64_t v14 = result;
    v22[1] = v22;
    uint64_t v23 = v1;
    Swift::Int v15 = 0;
    uint64_t v16 = 0;
    uint64_t v9 = 0;
    uint64_t v17 = 0;
    LODWORD(v25) = 1;
    int v18 = 1;
    while (1)
    {
      if (v15 == IndexPath.section.getter())
      {
        uint64_t result = IndexPath.item.getter();
        uint64_t v9 = v17 + result;
        if (__OFADD__(v17, result)) {
          goto LABEL_23;
        }
        int v18 = 0;
      }
      if (v15 == IndexPath.section.getter())
      {
        uint64_t result = IndexPath.item.getter();
        uint64_t v16 = v17 + result;
        if (__OFADD__(v17, result)) {
          goto LABEL_24;
        }
        LODWORD(v25) = 0;
      }
      uint64_t result = ParticipantsCollectionViewDataSource.numberOfItemsInSection(_:)(v15);
      BOOL v19 = __OFADD__(v17, result);
      v17 += result;
      if (v19)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (v14 == v15) {
        break;
      }
      BOOL v19 = __OFADD__(v15++, 1);
      if (v19)
      {
        __break(1u);
        break;
      }
    }
    uint64_t v20 = v23;
    uint64_t v21 = *(void (**)(char *, uint64_t))(v24 + 8);
    v21(v12, v23);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v5, v20);
    if ((v18 | v25)) {
      return 0;
    }
    if (v16 >= v9) {
      return v9;
    }
  }
  __break(1u);
  return result;
}

uint64_t ParticipantListViewController.visibilityIndex(for:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v2, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v2, v5);
  if (v9)
  {
    uint64_t v11 = ParticipantListViewController.rangeOfVisibleItems()();
    if ((v13 & 1) == 0)
    {
      uint64_t v14 = v11;
      uint64_t v15 = v12;
      id v16 = objc_retain(*(id *)(v3
                              + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource));
      uint64_t v17 = ParticipantsCollectionViewDataSource.participants.getter();

      MEMORY[0x1F4188790](v18);
      v23[2] = a1;
      uint64_t v19 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #2 in ParticipantsCollectionViewDataSource.indexPath(of:), (uint64_t)v23, v17);
      char v21 = v20;
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        if (v19 >= v14)
        {
          if (v15 < v19)
          {
            uint64_t v22 = v19 - v15;
            if (!__OFSUB__(v19, v15)) {
              return v22;
            }
            __break(1u);
          }
          return 0;
        }
        uint64_t v22 = v14 - v19;
        if (!__OFSUB__(v14, v19)) {
          return v22;
        }
        __break(1u);
      }
    }
    uint64_t v22 = *(void *)(ParticipantListViewController.participantIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    return v22;
  }
  __break(1u);
  return result;
}

void *ParticipantListViewController.accessibilityParticipantCollectionView()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v1) {
    id v2 = v1;
  }
  return v1;
}

id ParticipantListViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ParticipantListViewController.init(nibName:bundle:)()
{
}

void ParticipantListViewController.update(participant:broadcastingState:)(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v2)
  {
    unint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource);
    id v5 = v2;
    id v6 = v4;
    ParticipantsCollectionViewDataSource.update(_:in:)(a1, v5);
  }
}

void ParticipantListViewController.update(participant:localParticipantOrientation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v3)
  {
    id v6 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource);
    id v7 = v3;
    id v8 = v6;
    ParticipantsCollectionViewDataSource.update(_:in:with:)(a1, v7, a2);
  }
}

Swift::Void __swiftcall ParticipantListViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v3 = v2;
  uint64_t v4 = OUTLINED_FUNCTION_89();
  uint64_t v85 = type metadata accessor for Participant.State(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_10_5();
  uint64_t v82 = v6;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v69 - v8;
  uint64_t v10 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_10_5();
  uint64_t v78 = v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v69 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v86 = (uint64_t)&v69 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v23)
  {
    char v79 = v9;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v87 = MEMORY[0x1E4FBC860];
    uint64_t v25 = *(void *)(v2 + 16);
    id v26 = v23;
    swift_bridgeObjectRetain();
    if (v25)
    {
      uint64_t v76 = v17;
      uint64_t v77 = v10;
      id v70 = v26;
      uint64_t v71 = v12;
      uint64_t v72 = v2;
      uint64_t v73 = v2;
      OUTLINED_FUNCTION_22_0();
      uint64_t v83 = *(void *)(v12 + 72);
      uint64_t v74 = v27;
      uint64_t v75 = v28;
      uint64_t v29 = v2 + v27;
      uint64_t v30 = v82;
      uint64_t v31 = (uint64_t)v79;
      uint64_t v81 = v22;
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_17(v29, (uint64_t)v22);
        _s15ConversationKit11ParticipantVWOcTm_17((uint64_t)v22, v31);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            type metadata accessor for Date();
            OUTLINED_FUNCTION_0();
            (*(void (**)(uint64_t))(v32 + 8))(v31);
            uint64_t v33 = v86;
            _s15ConversationKit11ParticipantVWOcTm_17((uint64_t)v22, v86);
            _s15ConversationKit11ParticipantVWOhTm_11(v33, (void (*)(void))type metadata accessor for Participant);
            goto LABEL_18;
          case 4u:
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            uint64_t v35 = v31 + *(int *)(v34 + 48);
            OUTLINED_FUNCTION_8_2((uint64_t *)(v31 + *(int *)(v34 + 64)));
            outlined destroy of Participant.MediaInfo(v35);
            goto LABEL_7;
          case 6u:
            goto LABEL_8;
          default:
LABEL_7:
            type metadata accessor for Date();
            OUTLINED_FUNCTION_0();
            (*(void (**)(uint64_t))(v36 + 8))(v31);
LABEL_8:
            uint64_t v37 = (uint64_t)v22;
            uint64_t v38 = v86;
            _s15ConversationKit11ParticipantVWOcTm_17(v37, v86);
            uint64_t v39 = type metadata accessor for Date();
            uint64_t v84 = &v69;
            OUTLINED_FUNCTION_4();
            uint64_t v41 = v40;
            uint64_t v43 = *(void *)(v42 + 64);
            MEMORY[0x1F4188790](v44);
            _s15ConversationKit11ParticipantVWOcTm_17(v38, v30);
            if (swift_getEnumCaseMultiPayload() != 4)
            {
              _s15ConversationKit11ParticipantVWOhTm_11(v30, (void (*)(void))type metadata accessor for Participant.State);
              uint64_t v22 = v81;
LABEL_25:
              _s15ConversationKit11ParticipantVWOhTm_11(v86, (void (*)(void))type metadata accessor for Participant);
LABEL_26:
              _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
              goto LABEL_27;
            }
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            uint64_t v46 = v30 + *(int *)(v45 + 48);
            OUTLINED_FUNCTION_8_2((uint64_t *)(v30 + *(int *)(v45 + 64)));
            (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))((char *)&v69 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v39);
            outlined destroy of Participant.MediaInfo(v46);
            uint64_t v47 = Date.timeIntervalSinceNow.getter();
            double v49 = v48;
            MEMORY[0x1F4188790](v47);
            uint64_t v50 = OUTLINED_FUNCTION_14_70();
            v51(v50);
            uint64_t v22 = v81;
            uint64_t v80 = &v69;
            if (v49 <= 0.0)
            {
              Date.timeIntervalSinceNow.getter();
              double v54 = v53;
              if (one-time initialization token for shared != -1) {
                swift_once();
              }
              BOOL v52 = -v54 <= (double)(*(uint64_t (**)(void))(*(void *)static Defaults.shared + 696))();
            }
            else
            {
              BOOL v52 = 0;
            }
            uint64_t v31 = (uint64_t)v79;
            uint64_t v55 = *(void (**)(void))(v41 + 8);
            OUTLINED_FUNCTION_336();
            v55();
            OUTLINED_FUNCTION_336();
            v55();
            uint64_t v57 = (uint64_t)v76;
            uint64_t v56 = v77;
            int v58 = *(unsigned __int8 *)(v75 + *(int *)(v77 + 24));
            _s15ConversationKit11ParticipantVWOcTm_17(v86, (uint64_t)v76);
            if (v58 != 1)
            {
              _s15ConversationKit11ParticipantVWOhTm_11(v57, (void (*)(void))type metadata accessor for Participant);
LABEL_24:
              OUTLINED_FUNCTION_10_80();
              goto LABEL_25;
            }
            uint64_t v59 = *(void *)(v57 + *(int *)(v56 + 28));
            _s15ConversationKit11ParticipantVWOhTm_11(v57, (void (*)(void))type metadata accessor for Participant);
            if (!v59) {
              goto LABEL_24;
            }
            OUTLINED_FUNCTION_10_80();
            _s15ConversationKit11ParticipantVWOhTm_11(v86, (void (*)(void))type metadata accessor for Participant);
            if (!v52) {
              goto LABEL_26;
            }
LABEL_18:
            outlined init with take of Participant((uint64_t)v22, v78);
            uint64_t v60 = v87;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v60 + 16) + 1, 1);
              uint64_t v60 = v87;
            }
            unint64_t v62 = *(void *)(v60 + 16);
            unint64_t v61 = *(void *)(v60 + 24);
            if (v62 >= v61 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
              uint64_t v60 = v87;
            }
            *(void *)(v60 + 16) = v62 + 1;
            outlined init with take of Participant(v78, v60 + v74 + v62 * v83);
LABEL_27:
            uint64_t v30 = v82;
            v29 += v83;
            if (!--v25)
            {
              uint64_t v24 = v87;
              uint64_t v3 = v73;
              id v26 = v70;
              uint64_t v12 = v71;
              goto LABEL_29;
            }
            break;
        }
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v24 + 16);
    if (v63)
    {
      OUTLINED_FUNCTION_22_0();
      uint64_t v65 = v24 + v64;
      uint64_t v66 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource;
      uint64_t v67 = *(void *)(v12 + 72);
      swift_retain();
      do
      {
        id v68 = *(id *)(v3 + v66);
        ParticipantsCollectionViewDataSource.update(_:in:)(v65, v26);

        v65 += v67;
        --v63;
      }
      while (v63);

      swift_release_n();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t ParticipantListViewController.update(with:updateReason:)()
{
  swift_getObjectType();
  uint64_t v1 = OUTLINED_FUNCTION_8_11();
  static ParticipantListViewController.filterAndSort(_:)(v1);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  if (v2)
  {
    uint64_t v0 = *(char **)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
    uint64_t v3 = v2;
    uint64_t v4 = v0;
    uint64_t v5 = OUTLINED_FUNCTION_8_11();
    ParticipantsCollectionViewDataSource.set(_:in:)((Swift::OpaquePointer)v5, v3);
  }
  else
  {
    id v6 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
    uint64_t v7 = OUTLINED_FUNCTION_8_11();
    ParticipantsCollectionViewDataSource.set(_:)((Swift::OpaquePointer)v7);
  }

  return swift_bridgeObjectRelease();
}

void ParticipantListViewController.update(participant:audioPower:)(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v2)
  {
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource);
    id v5 = v2;
    id v6 = v4;
    ParticipantsCollectionViewDataSource.updateAudioPower(forParticipant:in:withPower:)(a1, v2, 5.0);
  }
}

Swift::Void __swiftcall ParticipantListViewController.removeAllParticipants()()
{
}

void ParticipantListViewController.spatialPosition(for:relativeTo:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v52 = a1;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v3, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_336();
  v11();
  if (v10)
  {
    OUTLINED_FUNCTION_4_121();
    CGRectGetWidth(v53);
    objc_msgSend(a2, sel_displayScale);
    uint64_t v12 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate;
    OUTLINED_FUNCTION_2();
    if (MEMORY[0x1C8776240](v12))
    {
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
      LOBYTE(v13) = v16;
      swift_unknownObjectRelease();
      char v17 = v13 & 1;
    }
    else
    {
      uint64_t v15 = 0;
      char v17 = 1;
    }
    type metadata accessor for MultiwayViewConstraintsController();
    static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(v15, v17);
    uint64_t v18 = ParticipantListViewController.rangeOfVisibleItems()();
    if (v20) {
      goto LABEL_10;
    }
    uint64_t v21 = v18;
    uint64_t v22 = v19;
    uint64_t v23 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource;
    id v24 = objc_retain(*(id *)(v4
                            + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource));
    uint64_t v25 = ParticipantsCollectionViewDataSource.participants.getter();

    MEMORY[0x1F4188790](v26);
    v50[2] = v52;
    uint64_t v27 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)v50, v25);
    char v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0
      || (uint64_t v30 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent)) == 0)
    {
LABEL_10:
      OUTLINED_FUNCTION_4_121();
      CGRectGetWidth(v55);
      OUTLINED_FUNCTION_4_121();
      CGRectGetHeight(v56);
      return;
    }
    if (v27 < v21)
    {
      id v31 = v30;
      OUTLINED_FUNCTION_4_121();
      CGRectGetHeight(v54);

      return;
    }
    if (v22 < v27)
    {
      id v32 = v30;
      OUTLINED_FUNCTION_4_121();
      CGRectGetWidth(v57);
      OUTLINED_FUNCTION_4_121();
      CGRectGetHeight(v58);

      return;
    }
    uint64_t v33 = type metadata accessor for IndexPath();
    v51[2] = v51;
    OUTLINED_FUNCTION_4();
    v51[0] = v34;
    MEMORY[0x1F4188790](v35);
    OUTLINED_FUNCTION_64();
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
    v51[1] = v51;
    MEMORY[0x1F4188790](v36 - 8);
    OUTLINED_FUNCTION_21();
    uint64_t v39 = v38 - v37;
    uint64_t v40 = *(void **)(v4 + v23);
    uint64_t v41 = v52 + *(int *)(type metadata accessor for Participant(0) + 20);
    id v42 = v30;
    id v43 = v40;
    ParticipantsCollectionViewDataSource.indexPath(of:)(v41, v39);

    if (__swift_getEnumTagSinglePayload(v39, 1, v33) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for IndexPath?);
      OUTLINED_FUNCTION_10_80();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51[0] + 32))(v22, v39, v33);
      OUTLINED_FUNCTION_10_80();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v45 = objc_msgSend(v42, sel_cellForItemAtIndexPath_, isa);

      if (v45)
      {
        objc_msgSend(v45, sel_frame);
        objc_msgSend(v42, sel_convertRect_toCoordinateSpace_, a2);

        uint64_t v46 = OUTLINED_FUNCTION_13_75();
        v47(v46);
        return;
      }
      uint64_t v48 = OUTLINED_FUNCTION_13_75();
      v49(v48);
    }
    OUTLINED_FUNCTION_4_121();
    CGRectGetWidth(v59);
    OUTLINED_FUNCTION_4_121();
    CGRectGetHeight(v60);
  }
  else
  {
    __break(1u);
  }
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance ParticipantListViewController()
{
  return ParticipantListViewController.participantsViewControllerDelegate.getter();
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance ParticipantListViewController(uint64_t a1, uint64_t a2)
{
  return ParticipantListViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance ParticipantListViewController(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](v6);
  uint64_t v8 = *(void *)(v6 + 8);
  v3[3] = v7;
  void v3[4] = v8;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

uint64_t protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance ParticipantListViewController()
{
  return ParticipantListViewController.participantIdentifiers.getter();
}

uint64_t protocol witness for ParticipantsViewController.participantCount.getter in conformance ParticipantListViewController()
{
  return ParticipantListViewController.participantCount.getter();
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance ParticipantListViewController(uint64_t a1)
{
}

void protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance ParticipantListViewController(uint64_t a1, uint64_t a2)
{
}

uint64_t protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance ParticipantListViewController()
{
  return ParticipantListViewController.update(with:updateReason:)();
}

void protocol witness for ParticipantsViewController.update(participant:audioPower:) in conformance ParticipantListViewController(uint64_t a1)
{
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance ParticipantListViewController(Swift::OpaquePointer a1)
{
}

void protocol witness for ParticipantsViewController.removeAllParticipants() in conformance ParticipantListViewController()
{
}

void protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance ParticipantListViewController(uint64_t a1, void *a2)
{
}

uint64_t ParticipantListViewController.configurableRosterCellWidth.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v1)) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t protocol witness for ParticipantListLayoutDelegate.configurableRosterCellWidth.getter in conformance ParticipantListViewController()
{
  return ParticipantListViewController.configurableRosterCellWidth.getter();
}

void ParticipantListViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  swift_getObjectType();
  uint64_t v6 = OUTLINED_FUNCTION_89();
  uint64_t v7 = type metadata accessor for Participant(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_63();
  uint64_t v11 = &v2[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate];
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v11))
  {
    id v42 = a2;
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    v43[3] = v2;
    v43[4] = &protocol witness table for ParticipantListViewController;
    v43[0] = v2;
    uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
    uint64_t v14 = v4;
    id v15 = v13;
    uint64_t v16 = ParticipantsCollectionViewDataSource.participants.getter();

    unint64_t v17 = IndexPath.item.getter();
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *(void *)(v16 + 16))
    {
      OUTLINED_FUNCTION_22_0();
      _s15ConversationKit11ParticipantVWOcTm_17(v16 + v18 + *(void *)(v9 + 72) * v19, v3);
      swift_bridgeObjectRelease();
      uint64_t v20 = v3 + *(int *)(v7 + 20);
      uint64_t v21 = type metadata accessor for UUID();
      v40[1] = v40;
      OUTLINED_FUNCTION_4();
      uint64_t v22 = v12;
      uint64_t v24 = v23;
      MEMORY[0x1F4188790](v25);
      OUTLINED_FUNCTION_21();
      uint64_t v28 = v27 - v26;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v27 - v26, v20, v21);
      _s15ConversationKit11ParticipantVWOhTm_11(v3, (void (*)(void))type metadata accessor for Participant);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v22 + 64))(v43, v28, ObjectType, v22);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_336();
      v29();
      OUTLINED_FUNCTION_10_80();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      a2 = v42;
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
LABEL_5:
  type metadata accessor for ParticipantCell();
  uint64_t v30 = swift_dynamicCastClass();
  if (v30)
  {
    uint64_t v31 = v30;
    if (MEMORY[0x1C8776240](v11))
    {
      uint64_t v32 = *((void *)v11 + 1);
      swift_getObjectType();
      uint64_t v33 = *(uint64_t (**)(uint64_t))(v32 + 16);
      id v34 = a2;
      uint64_t v35 = OUTLINED_FUNCTION_17_58();
      if (v33(v35))
      {

        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v36 = *(uint64_t (**)(uint64_t))(v32 + 8);
        id v37 = *(id *)&v4[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
        uint64_t v38 = OUTLINED_FUNCTION_17_58();
        uint64_t v39 = v36(v38);
        ParticipantsCollectionViewDataSource.configureCell(_:with:)(v31, v39);

        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t ParticipantListViewController.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for ParticipantCell();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v9);
    OUTLINED_FUNCTION_63();
    uint64_t v10 = v7 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier;
    OUTLINED_FUNCTION_2();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v11 - 8);
    OUTLINED_FUNCTION_64();
    outlined init with copy of UUID?(v10, v7);
    if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
    {
      return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    }
    else
    {
      uint64_t v12 = OUTLINED_FUNCTION_14_70();
      v13(v12);
      uint64_t v14 = &v2[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate];
      OUTLINED_FUNCTION_2();
      if (MEMORY[0x1C8776240](v14))
      {
        uint64_t v15 = *((void *)v14 + 1);
        uint64_t v23 = swift_getObjectType();
        v24[0] = v2;
        v24[3] = ObjectType;
        v24[4] = &protocol witness table for ParticipantListViewController;
        uint64_t v16 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v15 + 72);
        id v17 = a2;
        uint64_t v18 = v2;
        v16(v24, v3, v23, v15);

        swift_unknownObjectRelease();
        uint64_t v19 = OUTLINED_FUNCTION_19_52();
        v20(v19);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {
        uint64_t v21 = OUTLINED_FUNCTION_19_52();
        return v22(v21);
      }
    }
  }
  return result;
}

uint64_t ParticipantListViewController.currentRosterViews.getter()
{
  if (!objc_msgSend(v0, sel_isViewLoaded)) {
    return MEMORY[0x1E4FBC860];
  }
  if (!ParticipantListViewController.participantCount.getter()) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v1 = ParticipantListViewController.collectionView.getter();
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_visibleCells);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UICollectionViewCell);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    swift_bridgeObjectRetain();
    uint64_t v5 = _bridgeCocoaArray<A>(_:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);

    uint64_t v5 = v4;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_17(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_89();
  v5(v4);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_11(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C3583914@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate, a2);
}

uint64_t sub_1C3583934(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ParticipantListViewController.participantsViewControllerDelegate : ParticipantListViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate);
}

uint64_t sub_1C3583954@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate, a2);
}

uint64_t sub_1C3583974(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ParticipantListViewController.participantsViewControllerDelegate : ParticipantListViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate);
}

uint64_t dispatch thunk of ParticipantListViewControllerDelegate.configurableRosterCellWidth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ParticipantListViewController()
{
  return self;
}

uint64_t method lookup function for ParticipantListViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParticipantListViewController);
}

uint64_t dispatch thunk of ParticipantListViewController.__allocating_init(localParticipant:remoteParticipants:participantIsShownInGrid:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void *initializeBufferWithCopyOfBuffer for ParticipantListViewController.ViewContent(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ParticipantListViewController.ViewContent(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ParticipantListViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ParticipantListViewController.ViewContent(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

void *type metadata accessor for ParticipantListViewController.ViewContent()
{
  return &unk_1F1EB3C30;
}

uint64_t _s10Foundation4UUIDVACSQAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TranscriptionViewModel.callUUID.getter()
{
  return TranscriptionViewModel.callUUID.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t TranscriptionViewModel.state.setter()
{
  return static Published.subscript.setter();
}

uint64_t TranscriptionViewModel.captions.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t TranscriptionViewModel.Caption.init(id:dateCreated:dateUpdated:text:isBadTranscription:lowConfidenceRanges:isComplete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>)
{
  *a9 = a1;
  uint64_t v14 = (int *)type metadata accessor for TranscriptionViewModel.Caption(0);
  uint64_t v15 = (char *)a9 + v14[5];
  uint64_t v16 = type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  v18(v15, a2, v16);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)((char *)a9 + v14[6], a3, v16);
  uint64_t v20 = (void *)((char *)a9 + v14[7]);
  *uint64_t v20 = a4;
  v20[1] = a5;
  *((unsigned char *)a9 + v14[8]) = a6;
  *(void *)((char *)a9 + v14[9]) = a7;
  *((unsigned char *)a9 + v14[10]) = a8;
  return result;
}

uint64_t TranscriptionViewModel.__allocating_init(config:)()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v2 = swift_allocObject();
  TranscriptionViewModel.init(config:)(v1, v0);
  return v2;
}

uint64_t TranscriptionViewModel.hidePrivacySensitiveContent.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t TranscriptionViewModel.$callUUID.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callUUID, &demangling cache variable for type metadata for Published<String>);
}

uint64_t TranscriptionViewModel.$captions.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
}

Swift::Int TranscriptionViewModel.CaptionID.hashValue.getter(Swift::UInt a1)
{
  return Hasher._finalize()();
}

uint64_t TranscriptionViewModel.callUUID.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t TranscriptionViewModel.callerDisplayName.setter()
{
  return OUTLINED_FUNCTION_23_54();
}

uint64_t TranscriptionViewModel.hidePrivacySensitiveContent.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t TranscriptionViewModel.state.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

BOOL static TranscriptionViewModel.State.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t TranscriptionViewModel.isGibberish.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t key path getter for TranscriptionViewModel.captions : TranscriptionViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.captions.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for TranscriptionViewModel.captions : TranscriptionViewModel()
{
  return TranscriptionViewModel.captions.setter();
}

uint64_t TranscriptionViewModel.captions.setter()
{
  return static Published.subscript.setter();
}

uint64_t TranscriptionViewModel.callerDisplayName.getter()
{
  return TranscriptionViewModel.callUUID.getter();
}

uint64_t (*TranscriptionViewModel.captions.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t TranscriptionViewModel.isGibberish.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t TranscriptionViewModel.Caption.id.getter()
{
  return *(void *)v0;
}

uint64_t TranscriptionViewModel.Caption.id.setter(uint64_t result)
{
  *unsigned __int8 v1 = result;
  return result;
}

uint64_t (*TranscriptionViewModel.Caption.id.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.dateCreated.getter()
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t TranscriptionViewModel.Caption.dateCreated.setter(uint64_t a1)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

double (*TranscriptionViewModel.Caption.dateCreated.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.dateUpdated.getter()
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t TranscriptionViewModel.Caption.dateUpdated.setter(uint64_t a1)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

double (*TranscriptionViewModel.Caption.dateUpdated.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.text.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t TranscriptionViewModel.Caption.text.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v3 = v2;
  v3[1] = v0;
  return result;
}

double (*TranscriptionViewModel.Caption.text.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.isBadTranscription.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 32));
}

uint64_t TranscriptionViewModel.Caption.isBadTranscription.setter(char a1)
{
  uint64_t result = type metadata accessor for TranscriptionViewModel.Caption(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

double (*TranscriptionViewModel.Caption.isBadTranscription.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.lowConfidenceRanges.getter()
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptionViewModel.Caption.lowConfidenceRanges.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_16_57() + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

double (*TranscriptionViewModel.Caption.lowConfidenceRanges.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.isComplete.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 40));
}

uint64_t TranscriptionViewModel.Caption.isComplete.setter(char a1)
{
  uint64_t result = type metadata accessor for TranscriptionViewModel.Caption(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*TranscriptionViewModel.Caption.isComplete.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static TranscriptionViewModel.Caption.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    goto LABEL_12;
  }
  uint64_t v4 = (int *)type metadata accessor for TranscriptionViewModel.Caption(0);
  if ((static Date.== infix(_:_:)() & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_20_58();
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v9 = 0, (v8 & 1) != 0))
  {
    if (*((unsigned __int8 *)a1 + v4[8]) == *((unsigned __int8 *)a2 + v4[8]))
    {
      specialized static Array<A>.== infix(_:_:)(*(int64x2_t **)((char *)a1 + v4[9]), *(int64x2_t **)((char *)a2 + v4[9]));
      if (v10)
      {
        char v9 = *((unsigned char *)a1 + v4[10]) ^ *((unsigned char *)a2 + v4[10]) ^ 1;
        return v9 & 1;
      }
    }
LABEL_12:
    char v9 = 0;
  }
  return v9 & 1;
}

BOOL static TranscriptionViewModel.CaptionID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void TranscriptionViewModel.CaptionID.hash(into:)(int a1, Swift::UInt a2)
{
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance TranscriptionViewModel.CaptionID()
{
  return TranscriptionViewModel.CaptionID.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance TranscriptionViewModel.CaptionID(int a1)
{
  TranscriptionViewModel.CaptionID.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel.CaptionID(uint64_t *a1, uint64_t *a2)
{
  return static TranscriptionViewModel.CaptionID.== infix(_:_:)(*a1, *a2);
}

void TranscriptionViewModel.State.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int TranscriptionViewModel.State.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel.State(char *a1, char *a2)
{
  return static TranscriptionViewModel.State.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance TranscriptionViewModel.State()
{
  return TranscriptionViewModel.State.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance TranscriptionViewModel.State(uint64_t a1)
{
  TranscriptionViewModel.State.hash(into:)(a1, *v1);
}

#error "1C358ADF4: call analysis failed (funcsize=80)"

uint64_t static TranscriptionViewModel.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t TranscriptionViewModel.Configuration.defaultText.getter(uint64_t a1)
{
  return a1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel.Configuration(uint64_t *a1, uint64_t *a2)
{
  return static TranscriptionViewModel.Configuration.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t key path getter for TranscriptionViewModel.callUUID : TranscriptionViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.callUUID.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C358AF00()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = TranscriptionViewModel.callUUID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t key path setter for TranscriptionViewModel.callUUID : TranscriptionViewModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.callUUID : TranscriptionViewModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))TranscriptionViewModel.callUUID.setter);
}

uint64_t (*TranscriptionViewModel.callUUID.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = TranscriptionViewModel.callUUID.getter();
  a1[1] = v3;
  return TranscriptionViewModel.callUUID.modify;
}

uint64_t TranscriptionViewModel.callUUID.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return TranscriptionViewModel.callUUID.setter();
  }
  swift_bridgeObjectRetain();
  TranscriptionViewModel.callUUID.setter();
  return swift_bridgeObjectRelease();
}

uint64_t TranscriptionViewModel.$callUUID.setter(uint64_t a1)
{
  return TranscriptionViewModel.$callUUID.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callUUID, &demangling cache variable for type metadata for Published<String>);
}

void (*TranscriptionViewModel.$callUUID.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return TranscriptionViewModel.$callUUID.modify;
}

void TranscriptionViewModel.$callUUID.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for TranscriptionViewModel.callerDisplayName : TranscriptionViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.callerDisplayName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for TranscriptionViewModel.callerDisplayName : TranscriptionViewModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.callUUID : TranscriptionViewModel(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))TranscriptionViewModel.callerDisplayName.setter);
}

uint64_t key path setter for TranscriptionViewModel.callUUID : TranscriptionViewModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t (*TranscriptionViewModel.callerDisplayName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t TranscriptionViewModel.$callerDisplayName.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callerDisplayName, &demangling cache variable for type metadata for Published<String>);
}

uint64_t key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_21();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v10 - v9, a1);
  return a6(v11);
}

uint64_t TranscriptionViewModel.$callerDisplayName.setter(uint64_t a1)
{
  return TranscriptionViewModel.$callUUID.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callerDisplayName, &demangling cache variable for type metadata for Published<String>);
}

void (*TranscriptionViewModel.$callerDisplayName.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return TranscriptionViewModel.$callerDisplayName.modify;
}

void TranscriptionViewModel.$callerDisplayName.modify(uint64_t a1, char a2)
{
}

void TranscriptionViewModel.$callUUID.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 48);
  uint64_t v6 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v7 = v4[4];
    uint64_t v8 = v4[5];
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 48), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 56));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t key path getter for TranscriptionViewModel.state : TranscriptionViewModel@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.state.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C358B458()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = TranscriptionViewModel.state.getter();
  unsigned char *v0 = result;
  return result;
}

uint64_t key path setter for TranscriptionViewModel.state : TranscriptionViewModel()
{
  return TranscriptionViewModel.state.setter();
}

uint64_t sub_1C358B4A8()
{
  return TranscriptionViewModel.state.setter();
}

uint64_t sub_1C358B4D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.captions.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for TranscriptionViewModel.Caption(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptionViewModel.Caption);
}

uint64_t (*TranscriptionViewModel.state.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t TranscriptionViewModel.$state.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
}

uint64_t TranscriptionViewModel.$state.setter(uint64_t a1)
{
  return TranscriptionViewModel.$callUUID.setter(a1, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
}

void (*TranscriptionViewModel.$state.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
  Published.projectedValue.getter();
  swift_endAccess();
  return TranscriptionViewModel.$state.modify;
}

void TranscriptionViewModel.$state.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for TranscriptionViewModel.isGibberish : TranscriptionViewModel@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.isGibberish.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path setter for TranscriptionViewModel.isGibberish : TranscriptionViewModel()
{
  return TranscriptionViewModel.isGibberish.setter();
}

uint64_t (*TranscriptionViewModel.isGibberish.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t TranscriptionViewModel.$isGibberish.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__isGibberish, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t TranscriptionViewModel.$isGibberish.setter(uint64_t a1)
{
  return TranscriptionViewModel.$callUUID.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__isGibberish, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void (*TranscriptionViewModel.$isGibberish.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return TranscriptionViewModel.$isGibberish.modify;
}

void TranscriptionViewModel.$isGibberish.modify(uint64_t a1, char a2)
{
}

uint64_t TranscriptionViewModel.$captions.setter(uint64_t a1)
{
  return TranscriptionViewModel.$callUUID.setter(a1, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
}

void (*TranscriptionViewModel.$captions.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return TranscriptionViewModel.$captions.modify;
}

void TranscriptionViewModel.$captions.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for TranscriptionViewModel.hidePrivacySensitiveContent : TranscriptionViewModel@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path setter for TranscriptionViewModel.hidePrivacySensitiveContent : TranscriptionViewModel()
{
  return TranscriptionViewModel.hidePrivacySensitiveContent.setter();
}

uint64_t (*TranscriptionViewModel.hidePrivacySensitiveContent.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t TranscriptionViewModel.$hidePrivacySensitiveContent.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__hidePrivacySensitiveContent, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t TranscriptionViewModel.$hidePrivacySensitiveContent.setter(uint64_t a1)
{
  return TranscriptionViewModel.$callUUID.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__hidePrivacySensitiveContent, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t TranscriptionViewModel.$callUUID.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11 - v10, a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
}

void (*TranscriptionViewModel.$hidePrivacySensitiveContent.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_5_5(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return TranscriptionViewModel.$hidePrivacySensitiveContent.modify;
}

void TranscriptionViewModel.$hidePrivacySensitiveContent.modify(uint64_t a1, char a2)
{
}

uint64_t TranscriptionViewModel.config.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t TranscriptionViewModel.init(config:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  OUTLINED_FUNCTION_4();
  uint64_t v31 = v4;
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_21();
  uint64_t v30 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_21();
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_21();
  uint64_t v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_21();
  Published.init(initialValue:)();
  uint64_t v18 = *(void (**)(uint64_t))(v16 + 32);
  uint64_t v19 = OUTLINED_FUNCTION_14_71();
  v18(v19);
  Published.init(initialValue:)();
  uint64_t v20 = OUTLINED_FUNCTION_14_71();
  v18(v20);
  uint64_t v21 = v2 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v21, v14, v28);
  Published.init(initialValue:)();
  uint64_t v22 = *(void (**)(uint64_t))(v29 + 32);
  uint64_t v23 = OUTLINED_FUNCTION_15_74();
  v22(v23);
  uint64_t v24 = v2 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v24, v30, v32);
  Published.init(initialValue:)();
  uint64_t v25 = OUTLINED_FUNCTION_15_74();
  v22(v25);
  uint64_t v26 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel_config);
  void *v26 = a1;
  v26[1] = a2;
  return v2;
}

uint64_t sub_1C358BED4()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1C358BF00()
{
  return TranscriptionViewModel.hidePrivacySensitiveContent.setter();
}

uint64_t TranscriptionViewModel.deinit()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_15_5();
  v2();
  OUTLINED_FUNCTION_15_5();
  v2();
  uint64_t v3 = v0 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v4 + 8))(v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_0();
  uint64_t v6 = *(void (**)(void))(v5 + 8);
  OUTLINED_FUNCTION_15_5();
  v6();
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v8 + 8))(v7);
  OUTLINED_FUNCTION_15_5();
  v6();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TranscriptionViewModel.__deallocating_deinit()
{
  TranscriptionViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel(void *a1, void *a2)
{
  return static TranscriptionViewModel.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1C358C108()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = TranscriptionViewModel.callerDisplayName.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C358C134()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = TranscriptionViewModel.isGibberish.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1C358C160()
{
  return TranscriptionViewModel.isGibberish.setter();
}

unint64_t lazy protocol witness table accessor for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State;
  if (!lazy protocol witness table cache variable for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State);
  }
  return result;
}

uint64_t sub_1C358C22C()
{
  return TranscriptionViewModel.$callUUID.getter();
}

uint64_t sub_1C358C250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<String>.Publisher, TranscriptionViewModel.$callUUID.setter);
}

uint64_t sub_1C358C284()
{
  return TranscriptionViewModel.$callerDisplayName.getter();
}

uint64_t sub_1C358C2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<String>.Publisher, TranscriptionViewModel.$callerDisplayName.setter);
}

uint64_t sub_1C358C2DC()
{
  return TranscriptionViewModel.$state.getter();
}

uint64_t sub_1C358C300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>.Publisher, TranscriptionViewModel.$state.setter);
}

uint64_t sub_1C358C334()
{
  return TranscriptionViewModel.$isGibberish.getter();
}

uint64_t sub_1C358C358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, TranscriptionViewModel.$isGibberish.setter);
}

uint64_t sub_1C358C38C()
{
  return TranscriptionViewModel.$captions.getter();
}

uint64_t sub_1C358C3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher, TranscriptionViewModel.$captions.setter);
}

uint64_t sub_1C358C3E4()
{
  return TranscriptionViewModel.$hidePrivacySensitiveContent.getter();
}

uint64_t sub_1C358C408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, TranscriptionViewModel.$hidePrivacySensitiveContent.setter);
}

uint64_t ObjC metadata update function for TranscriptionViewModel()
{
  return type metadata accessor for TranscriptionViewModel(0);
}

uint64_t type metadata accessor for TranscriptionViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptionViewModel);
}

void type metadata completion function for TranscriptionViewModel()
{
  type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<String>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<TranscriptionViewModel.State>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<[TranscriptionViewModel.Caption]>();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for TranscriptionViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TranscriptionViewModel);
}

uint64_t dispatch thunk of TranscriptionViewModel.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void type metadata accessor for Published<[TranscriptionViewModel.Caption]>()
{
  if (!lazy cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = &v4[v12];
    uint64_t v15 = &a2[v12];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v4[v13] = a2[v13];
    uint64_t v17 = a3[10];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
    v4[v17] = a2[v17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

char *initializeWithCopy for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  a1[v12] = a2[v12];
  uint64_t v16 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v16] = a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *initializeWithTake for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v12] = a2[v12];
  return a1;
}

char *assignWithTake for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptionViewModel.Caption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C358CB94);
}

uint64_t sub_1C358CB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptionViewModel.Caption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C358CC3C);
}

void sub_1C358CC3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
}

uint64_t type metadata completion function for TranscriptionViewModel.Caption()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for TranscriptionViewModel.CaptionID()
{
}

unsigned char *storeEnumTagSinglePayload for TranscriptionViewModel.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C358CE64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for TranscriptionViewModel.State()
{
}

void type metadata accessor for TranscriptionViewModel.Configuration()
{
}

uint64_t ShareScreenButtonConfig.buttonConfig.getter()
{
  return swift_retain();
}

uint64_t key path getter for ShareScreenButtonConfig.buttonConfig : ShareScreenButtonConfig@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShareScreenButtonConfig.buttonConfig.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C358CF70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShareScreenButtonConfig.buttonConfig.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for ShareScreenButtonConfig.buttonConfig : ShareScreenButtonConfig()
{
  uint64_t v0 = swift_retain();
  return ShareScreenButtonConfig.buttonConfig.setter(v0);
}

uint64_t type metadata accessor for ShareScreenButtonConfig()
{
  uint64_t result = type metadata singleton initialization cache for ShareScreenButtonConfig;
  if (!type metadata singleton initialization cache for ShareScreenButtonConfig) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShareScreenButtonConfig.buttonConfig.setter(uint64_t a1)
{
  return ShareScreenButtonConfig.buttonConfig.setter(a1, (uint64_t)&unk_1C37888B0, (uint64_t)partial apply for closure #1 in CaptionsViewModel.source.setter, MEMORY[0x1E4FBC8D0]);
}

uint64_t ShareScreenButtonConfig.buttonConfig.init@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ShareScreenButtonConfig.access<A>(keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t specialized ShareScreenButtonConfig.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ShareScreenButtonConfig.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*ShareScreenButtonConfig.buttonConfig.modify())(void **a1)
{
  unint64_t v2 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v2);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit23ShareScreenButtonConfig___observationRegistrar);
  uint64_t v3 = lazy protocol witness table accessor for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_1_47(v3);
  swift_release();
  *unint64_t v1 = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_3_47();
  return ShareScreenButtonConfig.buttonConfig.modify;
}

void ShareScreenButtonConfig.buttonConfig.modify(void **a1)
{
}

uint64_t ShareScreenButtonConfig.menuItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t key path getter for ShareScreenButtonConfig.menuItems : ShareScreenButtonConfig@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShareScreenButtonConfig.menuItems.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C358D404@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShareScreenButtonConfig.menuItems.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for ShareScreenButtonConfig.menuItems : ShareScreenButtonConfig()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return ShareScreenButtonConfig.menuItems.setter(v0);
}

uint64_t ShareScreenButtonConfig.menuItems.setter(uint64_t a1)
{
  return ShareScreenButtonConfig.buttonConfig.setter(a1, (uint64_t)&unk_1C37888D8, (uint64_t)partial apply for closure #1 in ShareScreenButtonConfig.menuItems.setter, MEMORY[0x1E4FBC898]);
}

uint64_t ShareScreenButtonConfig.buttonConfig.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return a4(a1);
}

uint64_t ShareScreenButtonConfig.menuItems.init@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t closure #1 in ShareScreenButtonConfig.menuItems.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t partial apply for closure #1 in ShareScreenButtonConfig.menuItems.setter()
{
  return closure #1 in ShareScreenButtonConfig.menuItems.setter(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*ShareScreenButtonConfig.menuItems.modify())(void **a1)
{
  unint64_t v2 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v2);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit23ShareScreenButtonConfig___observationRegistrar);
  uint64_t v3 = lazy protocol witness table accessor for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_1_47(v3);
  swift_release();
  *unint64_t v1 = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_3_47();
  return ShareScreenButtonConfig.menuItems.modify;
}

void ShareScreenButtonConfig.menuItems.modify(void **a1)
{
}

uint64_t ShareScreenButtonConfig.didTapAskToScreenShare.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_4_17();
  swift_release();
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void *)(v0 + 32);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t key path getter for ShareScreenButtonConfig.didTapAskToScreenShare : ShareScreenButtonConfig@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result = ShareScreenButtonConfig.didTapAskToScreenShare.getter();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    unsigned int v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> ();
  }
  else
  {
    unsigned int v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t key path setter for ShareScreenButtonConfig.didTapAskToScreenShare : ShareScreenButtonConfig(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ());
  }
  else
  {
    uint64_t v4 = 0;
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return ShareScreenButtonConfig.didTapAskToScreenShare.setter((uint64_t)v4);
}

uint64_t ShareScreenButtonConfig.didTapAskToScreenShare.setter(uint64_t a1)
{
  return swift_release();
}

uint64_t ShareScreenButtonConfig.didTapAskToScreenShare.init@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t closure #1 in ShareScreenButtonConfig.didTapAskToScreenShare.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = a3;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
}

uint64_t partial apply for closure #1 in ShareScreenButtonConfig.didTapAskToScreenShare.setter()
{
  return closure #1 in ShareScreenButtonConfig.didTapAskToScreenShare.setter(v0[2], v0[3], v0[4]);
}

void (*ShareScreenButtonConfig.didTapAskToScreenShare.modify())(void **a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v2);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit23ShareScreenButtonConfig___observationRegistrar);
  uint64_t v3 = lazy protocol witness table accessor for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_1_47(v3);
  swift_release();
  *uint64_t v1 = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_3_47();
  return ShareScreenButtonConfig.didTapAskToScreenShare.modify;
}

void ShareScreenButtonConfig.didTapAskToScreenShare.modify(void **a1)
{
}

uint64_t ShareScreenButtonConfig.__allocating_init(buttonConfig:menuItems:didTapAskToScreenShare:)()
{
  OUTLINED_FUNCTION_8_8();
  uint64_t v0 = swift_allocObject();
  ShareScreenButtonConfig.init(buttonConfig:menuItems:didTapAskToScreenShare:)();
  return v0;
}

void *ShareScreenButtonConfig.init(buttonConfig:menuItems:didTapAskToScreenShare:)()
{
  OUTLINED_FUNCTION_8_8();
  v0[4] = 0;
  v0[5] = 0;
  ObservationRegistrar.init()();
  v0[2] = v3;
  v0[3] = v2;
  swift_retain();
  ShareScreenButtonConfig.didTapAskToScreenShare.setter(v1);
  swift_release();
  return v0;
}

uint64_t ShareScreenButtonConfig.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(void *)(v0 + 32));
  type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v1();
  return v0;
}

uint64_t ShareScreenButtonConfig.__deallocating_deinit()
{
  ShareScreenButtonConfig.deinit();
  return swift_deallocClassInstance();
}

uint64_t ShareScreenButton.state.getter()
{
  ShareScreenButtonConfig.buttonConfig.getter();
  swift_retain();
  swift_release();
  __int16 v0 = specialized StateHolder.state.getter();
  swift_release();
  return v0 & 0x101;
}

uint64_t ShareScreenButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 168))() & 1) == 0
    || (uint64_t v8 = *(void *)(ShareScreenButtonConfig.menuItems.getter() + 16), swift_bridgeObjectRelease(), !v8)
    || (ShareScreenButtonConfig.buttonConfig.getter(),
        swift_retain(),
        swift_release(),
        __int16 v9 = specialized StateHolder.state.getter(),
        swift_release(),
        (v9 & 0x100) != 0))
  {
LABEL_12:
    uint64_t v15 = ShareScreenButtonConfig.buttonConfig.getter();
    long long v21 = 0uLL;
    uint64_t v20 = v15;
    char v22 = 1;
    goto LABEL_13;
  }
  uint64_t v10 = ShareScreenButtonConfig.menuItems.getter();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v13 = *(void *)(v5 + 72);
    while (1)
    {
      outlined init with copy of Participant(v12, (uint64_t)v7);
      int v14 = v7[*(int *)(v4 + 24) + 1];
      outlined destroy of Participant((uint64_t)v7);
      if (v14 != 1) {
        break;
      }
      v12 += v13;
      if (!--v11) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v20 = a1;
  long long v21 = xmmword_1C377DDE0;
  char v22 = 0;
  swift_retain();
LABEL_13:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButton<ShareMenuActionState>);
  lazy protocol witness table accessor for type ScreenShareMenu and conformance ScreenShareMenu();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<ShareMenuActionState> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<ShareMenuActionState>);
  uint64_t result = _ConditionalContent<>.init(storage:)();
  uint64_t v17 = v24;
  uint64_t v18 = v25;
  char v19 = v26;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 24) = v19;
  return result;
}

unint64_t lazy protocol witness table accessor for type ScreenShareMenu and conformance ScreenShareMenu()
{
  unint64_t result = lazy protocol witness table cache variable for type ScreenShareMenu and conformance ScreenShareMenu;
  if (!lazy protocol witness table cache variable for type ScreenShareMenu and conformance ScreenShareMenu)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenShareMenu and conformance ScreenShareMenu);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ShareScreenButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ShareScreenButton@<X0>(uint64_t a1@<X8>)
{
  return ShareScreenButton.body.getter(*v1, a1);
}

uint64_t ObjC metadata update function for ShareScreenButtonConfig()
{
  return type metadata accessor for ShareScreenButtonConfig();
}

uint64_t type metadata completion function for ShareScreenButtonConfig()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ShareScreenButtonConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShareScreenButtonConfig);
}

uint64_t dispatch thunk of ShareScreenButtonConfig.__allocating_init(buttonConfig:menuItems:didTapAskToScreenShare:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for ShareScreenButton()
{
  return &type metadata for ShareScreenButton;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>>);
    lazy protocol witness table accessor for type ScreenShareMenu and conformance ScreenShareMenu();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<ShareMenuActionState> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<ShareMenuActionState>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ScreenShareMenu(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for ScreenShareMenu(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for ScreenShareMenu(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *type metadata accessor for ScreenShareMenu()
{
  return &unk_1F1EB3E10;
}

uint64_t associated type witness table accessor for View.Body : View in ScreenShareMenu()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ScreenShareMenu.body.getter(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for MenuOrder();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = ShareScreenButtonConfig.buttonConfig.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(double *)(v9 + 24) = a2;
  v11[1] = v8;
  v11[2] = partial apply for closure #1 in ScreenShareMenu.body.getter;
  void v11[3] = v9;
  swift_retain();
  static MenuOrder.fixed.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>> and conformance IconMenu<A, B>, &demangling cache variable for type metadata for IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>>);
  View.menuOrder(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in ScreenShareMenu.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(double *)(v19 + 24) = a3;
  swift_retain();
  Button.init(action:label:)();
  ShareScreenButtonConfig.menuItems.getter();
  ScreenShareMenu.askToShareScreenMenu(participants:)(a1, (uint64_t)v11, a3);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v20(v15, v18, v12);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v11, (uint64_t)v8, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  v20(a2, v15, v12);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>));
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v8, (uint64_t)&a2[*(int *)(v21 + 48)], &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v11, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  char v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v18, v12);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v8, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  return ((uint64_t (*)(char *, uint64_t))v22)(v15, v12);
}

uint64_t ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v69 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  uint64_t v67 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>.Storage);
  MEMORY[0x1F4188790](v68);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v65 = (uint64_t)&v56 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Participant(0);
  uint64_t v59 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v59 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v60 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v56 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v66 = (uint64_t)&v56 - v25;
  uint64_t v26 = *(void *)(ShareScreenButtonConfig.menuItems.getter() + 16);
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v26 != 1) {
    goto LABEL_4;
  }
  CGRect v58 = v9;
  uint64_t v28 = ShareScreenButtonConfig.menuItems.getter();
  specialized Collection.first.getter(v28, (uint64_t)v18);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1)
  {
    uint64_t v27 = outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v18, &demangling cache variable for type metadata for Participant?);
    uint64_t v9 = v58;
LABEL_4:
    MEMORY[0x1F4188790](v27);
    *(&v56 - 2) = a1;
    *((double *)&v56 - 1) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>);
    lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>();
    Menu.init(content:label:)();
    uint64_t v29 = v67;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v9, v7, v5);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v5);
  }
  uint64_t v31 = v66;
  outlined init with take of Participant((uint64_t)v18, v66);
  outlined init with copy of Participant(v31, (uint64_t)v23);
  unint64_t v32 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = a1;
  *(double *)(v33 + 24) = a3;
  outlined init with take of Participant((uint64_t)v23, v33 + v32);
  swift_retain();
  uint64_t v34 = v62;
  Button.init(action:label:)();
  char v35 = Participant.isActive.getter();
  uint64_t v36 = v60;
  uint64_t v37 = outlined init with copy of Participant(v31, v60);
  uint64_t v57 = v5;
  if (v35)
  {
    Participant.isRequestToScreenShareAvailable.getter(v37, v38, v39, v40, v41, v42, v43, v44, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64, v65, v66,
      v67);
    char v46 = v45 ^ 1;
  }
  else
  {
    char v46 = 1;
  }
  uint64_t v47 = (uint64_t)v58;
  uint64_t v48 = v12;
  outlined destroy of Participant(v36);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = swift_allocObject();
  *(unsigned char *)(v50 + 16) = v46 & 1;
  uint64_t v52 = v63;
  uint64_t v51 = v64;
  uint64_t v53 = v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v61, v34, v64);
  CGRect v54 = (uint64_t *)(v53 + *(int *)(v48 + 36));
  *CGRect v54 = KeyPath;
  v54[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v54[2] = v50;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v34, v51);
  uint64_t v55 = v65;
  outlined init with take of ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>(v53, v65);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v55, v47, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  _ConditionalContent<>.init(storage:)();
  outlined destroy of Environment<RedactionReasons>.Content(v55, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  return outlined destroy of Participant(v66);
}

uint64_t closure #1 in ScreenShareMenu.screenShareMenuItem()()
{
  uint64_t v0 = *(void (**)(uint64_t))(ShareScreenButtonConfig.buttonConfig.getter() + 224);
  swift_retain();
  uint64_t v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t closure #2 in ScreenShareMenu.screenShareMenuItem()@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0x794D206572616853;
  v3._object = (void *)0xEF6E656572635320;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)(uint64_t a1, double a2)
{
  ShareScreenButtonConfig.menuItems.getter();
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [Participant] and conformance [A], &demangling cache variable for type metadata for [Participant]);
  lazy protocol witness table accessor for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig(&lazy protocol witness table cache variable for type Participant and conformance Participant, (void (*)(uint64_t))type metadata accessor for Participant);
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v40 = a3;
  uint64_t v7 = type metadata accessor for Participant(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  Swift::String v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v14 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1F4188790](v38);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Participant(a1, (uint64_t)v13);
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(double *)(v20 + 24) = a4;
  outlined init with take of Participant((uint64_t)v13, v20 + v19);
  uint64_t v43 = a1;
  swift_retain();
  Button.init(action:label:)();
  char v21 = Participant.isActive.getter();
  uint64_t v22 = outlined init with copy of Participant(a1, (uint64_t)v10);
  if (v21)
  {
    Participant.isRequestToScreenShareAvailable.getter(v22, v23, v24, v25, v26, v27, v28, v29, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
      v48);
    char v31 = v30 ^ 1;
  }
  else
  {
    char v31 = 1;
  }
  outlined destroy of Participant((uint64_t)v10);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = v31 & 1;
  uint64_t v34 = v39;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v39);
  char v35 = (uint64_t *)&v18[*(int *)(v38 + 36)];
  uint64_t *v35 = KeyPath;
  v35[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v35[2] = v33;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v34);
  return outlined init with take of ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>((uint64_t)v18, v40);
}

void (*closure #1 in ScreenShareMenu.askToShareScreenMenu(participants:)(uint64_t a1, uint64_t a2))(uint64_t)
{
  uint64_t result = (void (*)(uint64_t))ShareScreenButtonConfig.didTapAskToScreenShare.getter();
  if (result)
  {
    uint64_t v4 = (uint64_t)result;
    result(a2);
    return (void (*)(uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  return result;
}

uint64_t closure #2 in ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C37A3650;
  v3._countAndFlagsBits = 0xD000000000000013;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance ScreenShareMenu()
{
  return ScreenShareMenu.body.getter(*(void *)v0, *(double *)(v0 + 8));
}

uint64_t sub_1C358F3DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenShareMenu.body.getter@<X0>(char *a1@<X8>)
{
  return closure #1 in ScreenShareMenu.body.getter(*(void *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t partial apply for closure #1 in ScreenShareMenu.screenShareMenuItem()()
{
  return closure #1 in ScreenShareMenu.screenShareMenuItem()();
}

uint64_t partial apply for closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)()
{
  return closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>);
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)(a1, *(void *)(v2 + 16), a2, *(double *)(v2 + 24));
}

uint64_t lazy protocol witness table accessor for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_17Tm_0()
{
  uint64_t v1 = (int *)type metadata accessor for Participant(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      (*(void (**)(unint64_t))(v4 + 8))(v0 + v2);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_26_2();
      v11();
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v13 = v3 + *(int *)(v12 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v13 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v13 + 96);
      }
      if (*(void *)(v13 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v3 + *(int *)(v12 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v5();
  uint64_t v6 = (id *)(v3 + v1[7]);
  if (*v6)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v7 = v3 + v1[14];
  uint64_t v8 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v7 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v9, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v9, v8);
  }
  swift_release();
  return swift_deallocObject();
}

void (*partial apply for closure #1 in ScreenShareMenu.askToShareScreenMenu(participants:)())(uint64_t)
{
  uint64_t v1 = *(void *)(type metadata accessor for Participant(0) - 8);
  return closure #1 in ScreenShareMenu.askToShareScreenMenu(participants:)(*(void *)(v0 + 16), v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1C358F8F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ())(uint64_t a1)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ())(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> ()(uint64_t a1)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> ()(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C358F93C()
{
  return swift_getOpaqueTypeConformance2();
}

double AspectRatio.portrait.getter()
{
  outlined init with take of AspectRatio(v0, (uint64_t)&v2);
  double result = v2;
  if (v3) {
    return 1.0;
  }
  return result;
}

BOOL static AspectRatio.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  outlined init with take of AspectRatio(a1, (uint64_t)v24);
  if (v25) {
    double v4 = 1.0;
  }
  else {
    double v4 = *(double *)&v24[1];
  }
  if (v25) {
    double v5 = 1.0;
  }
  else {
    double v5 = *(double *)v24;
  }
  outlined init with take of AspectRatio(a2, (uint64_t)v22);
  double v6 = *(double *)v22;
  double v7 = *(double *)&v22[1];
  if (v23)
  {
    double v7 = 1.0;
    double v6 = 1.0;
  }
  if (v5 != v6 || v4 != v7) {
    return 0;
  }
  outlined init with take of AspectRatio(a1, (uint64_t)v18);
  int v9 = v21;
  double v10 = v20;
  if (v21) {
    double v11 = 1.0;
  }
  else {
    double v11 = v19;
  }
  outlined init with take of AspectRatio(a2, (uint64_t)v16);
  double v12 = *(double *)&v16[2];
  if (v17) {
    double v12 = 1.0;
  }
  if (v11 != v12) {
    return 0;
  }
  double v13 = *(double *)&v16[3];
  double v14 = 1.0;
  if (v17) {
    double v13 = 1.0;
  }
  if (!v9) {
    double v14 = v10;
  }
  return v14 == v13;
}

double AspectRatio.landscape.getter()
{
  outlined init with take of AspectRatio(v0, (uint64_t)v2);
  double result = v3;
  if (v4) {
    return 1.0;
  }
  return result;
}

BOOL AspectRatio.isRectangle.getter()
{
  outlined init with take of AspectRatio(v0, (uint64_t)v2);
  return (v2[32] & 1) == 0;
}

BOOL CGSize.containsZero.getter(double a1, double a2)
{
  return a2 == 0.0 || a1 == 0.0;
}

double static CGRect.identity.getter()
{
  return 0.0;
}

uint64_t AspectRatio.debugDescription.getter()
{
  outlined init with take of AspectRatio(v0, (uint64_t)&v4);
  if (v5) {
    return 0x6572617571732ELL;
  }
  _StringGuts.grow(_:)(17);
  v2._countAndFlagsBits = 0x676E61746365722ELL;
  v2._object = (void *)0xEB0000000028656CLL;
  String.append(_:)(v2);
  type metadata accessor for CGSize(0);
  OUTLINED_FUNCTION_0_108();
  v3._countAndFlagsBits = 8236;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_0_108();
  return 0;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AspectRatio()
{
  outlined init with take of AspectRatio(v0, (uint64_t)v2);
  return AspectRatio.debugDescription.getter();
}

void AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(void *a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D2>, double a9@<D3>)
{
  if ((a2 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    goto LABEL_12;
  }
  if (a3)
  {
    static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)(a1, a5, a4 & 1, a6, (uint64_t)&v35);
    double v11 = *(double *)&v35;
    double v12 = v36;
    char v13 = v37;
    double v14 = v38;
    double v15 = v39;
    int v16 = v40;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.conversationKit);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      int v31 = v16;
      double v32 = v15;
      double v33 = v14;
      double v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = v21;
      *(_DWORD *)double v20 = 136315138;
      if (v13)
      {
        unint64_t v22 = 0xE300000000000000;
        uint64_t v23 = 7104878;
      }
      else
      {
        *(double *)&uint64_t v35 = v11;
        double v36 = v12;
        type metadata accessor for CGSize(0);
        uint64_t v23 = String.init<A>(reflecting:)();
        unint64_t v22 = v30;
      }
      *(double *)&uint64_t v35 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v22, &v34));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v18, v19, "Updating the local video aspect ratio to %s", v20, 0xCu);
      char v29 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v21, -1, -1);
      MEMORY[0x1C87760E0](v20, -1, -1);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      double v15 = v32;
      double v14 = v33;
      int v16 = v31;
      if (v13)
      {
        OUTLINED_FUNCTION_2_130();
        goto LABEL_31;
      }
      goto LABEL_16;
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    if (v13)
    {
LABEL_12:
      OUTLINED_FUNCTION_2_130();
      char v29 = 1;
      goto LABEL_31;
    }
  }
  else
  {
    static AspectRatio.remoteAspectRatios(with:contentsRect:)(a1, (uint64_t)&v35, a8, a9);
    double v11 = *(double *)&v35;
    double v12 = v36;
    char v24 = v37;
    double v14 = v38;
    double v15 = v39;
    int v16 = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_16:
  if (v16) {
    double v28 = v11;
  }
  else {
    double v28 = v15;
  }
  if (v16) {
    double v27 = v12;
  }
  else {
    double v27 = v14;
  }
  if (v11 == v12) {
    double v25 = 0.0;
  }
  else {
    double v25 = v11;
  }
  if (v11 == v12) {
    double v26 = 0.0;
  }
  else {
    double v26 = v12;
  }
  if (v11 == v12)
  {
    double v27 = 0.0;
    double v28 = 0.0;
    char v29 = 1;
  }
  else
  {
    char v29 = 0;
  }
LABEL_31:
  *(double *)a7 = v25;
  *(double *)(a7 + 8) = v26;
  *(double *)(a7 + 16) = v27;
  *(double *)(a7 + 24) = v28;
  *(unsigned char *)(a7 + 32) = v29;
}

uint64_t static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  long long v44 = 0uLL;
  char v45 = 1;
  outlined init with copy of IDSLookupManager((uint64_t)a1, (uint64_t)v43);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if (swift_dynamicCast())
  {

    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    *(double *)&uint64_t v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 112))(v9, v10));
    double v13 = v12;
    char v15 = v14;
    uint64_t v17 = a1[3];
    uint64_t v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    *(double *)&uint64_t v18 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96))(v17, v16));
  }
  else
  {
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    *(double *)&uint64_t v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 104))(v21, v22));
    double v13 = v23;
    char v15 = v24;
    uint64_t v25 = a1[3];
    uint64_t v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    *(double *)&uint64_t v18 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v25, v26));
  }
  uint64_t v27 = v18;
  double v28 = v19;
  if ((a2 | 2) == 2) {
    char v29 = 1;
  }
  else {
    char v29 = a3;
  }
  if ((v20 & 1) == 0)
  {
    if (a2 == 1)
    {
      if ((v29 & 1) == 0)
      {
LABEL_10:
        double v30 = *(double *)&v18;
        double v31 = v19;
        swift_beginAccess();
        *(void *)&long long v44 = v27;
        *((double *)&v44 + 1) = v28;
        goto LABEL_14;
      }
    }
    else if (!((a2 != 3) | v29 & 1))
    {
      goto LABEL_10;
    }
  }
  if ((((v15 & 1) == 0) & v29) == 1)
  {
    double v30 = v13;
    double v31 = *(double *)&v11;
    swift_beginAccess();
    *(void *)&long long v44 = v11;
    *((double *)&v44 + 1) = v13;
LABEL_14:
    char v45 = 0;
    if (v31 < v30) {
      specialized closure #1 in static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)((uint64_t *)&v44, a2);
    }
    goto LABEL_26;
  }
  outlined init with take of AspectRatio?(a4, (uint64_t)v43);
  if (v43[33])
  {
    swift_beginAccess();
    __asm { FMOV            V0.2D, #1.0 }
    long long v44 = _Q0;
  }
  else
  {
    outlined init with take of AspectRatio((uint64_t)v43, (uint64_t)v46);
    outlined init with take of AspectRatio((uint64_t)v46, (uint64_t)v47);
    if (v48) {
      uint64_t v37 = 0x3FF0000000000000;
    }
    else {
      uint64_t v37 = (uint64_t)v47[1];
    }
    if (v48) {
      uint64_t v38 = 0x3FF0000000000000;
    }
    else {
      uint64_t v38 = (uint64_t)v47[0];
    }
    swift_beginAccess();
    *(void *)&long long v44 = v38;
    *((void *)&v44 + 1) = v37;
  }
  char v45 = 0;
LABEL_26:
  uint64_t result = swift_beginAccess();
  long long v40 = v44;
  char v41 = v45;
  *(_OWORD *)a5 = v44;
  *(unsigned char *)(a5 + 16) = v41;
  *(_OWORD *)(a5 + 24) = v40;
  *(unsigned char *)(a5 + 40) = v41;
  return result;
}

double static AspectRatio.remoteAspectRatios(with:contentsRect:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D2>, double a4@<D3>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = OUTLINED_FUNCTION_3_24();
  *(double *)&uint64_t v10 = COERCE_DOUBLE(v9(v8));
  if (v12)
  {
    double v14 = 0.0;
    double v15 = 0.0;
    BOOL v13 = 1;
  }
  else
  {
    BOOL v13 = 1;
    if ((v10 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      if ((*(void *)&v11 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        double v14 = *(double *)&v10;
      }
      else {
        double v14 = 0.0;
      }
      if ((*(void *)&v11 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        double v15 = v11;
      }
      else {
        double v15 = 0.0;
      }
      BOOL v13 = (*(void *)&v11 & 0x7FFFFFFFFFFFFFFFLL) == 0;
    }
    else
    {
      double v14 = 0.0;
      double v15 = 0.0;
    }
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = OUTLINED_FUNCTION_3_24();
  *(double *)&uint64_t v18 = COERCE_DOUBLE(v17(v16));
  if ((v20 & 1) == 0
    && (double v21 = *(double *)&v18, (v18 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    && (double v22 = v19, (*(void *)&v19 & 0x7FFFFFFFFFFFFFFFLL) != 0))
  {
    if (v13)
    {
      id v23 = objc_msgSend(self, sel_mainScreen);
      objc_msgSend(v23, sel_bounds);
      double v25 = v24;
      double v27 = v26;

      double v14 = v25;
      double v15 = v27;
    }
  }
  else
  {
    double v22 = v14;
    double v21 = v15;
    if (v13)
    {
      double v28 = self;
      id v29 = objc_msgSend(v28, sel_mainScreen);
      objc_msgSend(v29, sel_bounds);
      double v31 = v30;
      double v33 = v32;

      double v14 = v31;
      double v15 = v33;
      id v34 = objc_msgSend(v28, sel_mainScreen);
      objc_msgSend(v34, sel_bounds);
      double v36 = v35;

      id v37 = objc_msgSend(v28, sel_mainScreen);
      objc_msgSend(v37, sel_bounds);
      double v39 = v38;

      double v21 = v36;
      double v22 = v39;
    }
  }
  double result = v21 * a3;
  *(double *)a2 = v14 * a3;
  *(double *)(a2 + 8) = v15 * a4;
  *(unsigned char *)(a2 + 16) = 0;
  *(double *)(a2 + 24) = v21 * a3;
  *(double *)(a2 + 32) = v22 * a4;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

uint64_t specialized closure #1 in static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)(uint64_t *a1, uint64_t a2)
{
  if (static Platform.current.getter() < 2u || static Platform.current.getter() == 2)
  {
    swift_beginAccess();
    char v4 = *((unsigned char *)a1 + 16);
    if (v4) {
      uint64_t v5 = *a1;
    }
    else {
      uint64_t v5 = a1[1];
    }
    if (*((unsigned char *)a1 + 16)) {
      uint64_t v6 = a1[1];
    }
    else {
      uint64_t v6 = *a1;
    }
    uint64_t result = swift_beginAccess();
    *a1 = v5;
    a1[1] = v6;
    *((unsigned char *)a1 + 16) = v4;
  }
  else
  {
    BOOL v8 = (a2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
    if ((a2 & 0xFFFFFFFFFFFFFFFDLL) == 1) {
      uint64_t v9 = 0x4008000000000000;
    }
    else {
      uint64_t v9 = 0x4010000000000000;
    }
    if (v8) {
      uint64_t v10 = 0x4010000000000000;
    }
    else {
      uint64_t v10 = 0x4008000000000000;
    }
    uint64_t result = swift_beginAccess();
    *a1 = v9;
    a1[1] = v10;
    *((unsigned char *)a1 + 16) = 0;
  }
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AspectRatio(uint64_t a1, uint64_t a2)
{
  outlined init with take of AspectRatio(a1, (uint64_t)v4);
  outlined init with take of AspectRatio(a2, (uint64_t)v5);
  return static AspectRatio.== infix(_:_:)((uint64_t)v4, (uint64_t)v5);
}

uint64_t getEnumTagSinglePayload for AspectRatio(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AspectRatio(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t getEnumTag for AspectRatio(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t destructiveInjectEnumTag for AspectRatio(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 32) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AspectRatio()
{
  return &type metadata for AspectRatio;
}

uint64_t outlined init with take of AspectRatio?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AspectRatio?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static ConversationHUDControlsButtonShelfView.Configuration.fillEqually.getter(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_sharedApplication);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  char v4 = static UIContentSizeCategory.>= infix(_:_:)();
  if (v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = 3;
  }
  static Layout.ConversationControls.values.getter((uint64_t)v7);
  uint64_t v6 = v7[29];
  *(void *)a1 = v4 & 1;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 0;
}

id ConversationHUDControlsButtonShelfView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  return ConversationHUDControlsButtonShelfView.init(recipe:controlsManager:context:menuHostViewController:)(a1, a2, a3, a4);
}

id ConversationHUDControlsButtonShelfView.init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha] = 0x3FF0000000000000;
  v82.receiver = v4;
  v82.super_class = (Class)type metadata accessor for ConversationHUDControlsButtonShelfView();
  id v9 = objc_msgSendSuper2(&v82, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = a1 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 60);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 40);
  if (v11 >= 0xFE)
  {

LABEL_5:
    outlined destroy of ConversationControlsRecipe(a1);
    return v9;
  }
  char v77 = a3;
  uint64_t v12 = *(void *)v10;
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = *(void *)(v10 + 24);
  double v15 = *(double *)(v10 + 32);
  uint64_t v16 = OUTLINED_FUNCTION_0_109();
  if ((v11 & 0x80) == 0)
  {
    outlined copy of ConversationControlsRecipe.Actions(v16, v17, v18, v19, v20, v21);

    uint64_t v22 = OUTLINED_FUNCTION_0_109();
    outlined consume of ConversationControlsRecipe.Actions?(v22, v23, v24, v25, v26, v27);
    goto LABEL_5;
  }
  outlined copy of ConversationControlsRecipe.Actions?(v16, v17, v18, v19, v20, v21);
  id v29 = v9;
  objc_msgSend(v29, sel_setAxis_);
  objc_msgSend(v29, sel_setAlignment_, v13);
  id v80 = v29;
  objc_msgSend(v29, sel_setDistribution_, v14);
  if ((v11 & 1) == 0) {
    objc_msgSend(v29, sel_setSpacing_, v15);
  }
  uint64_t v30 = *(void *)(v12 + 16);
  if (v30)
  {
    id v73 = v9;
    uint64_t v74 = a1;
    uint64_t v31 = *(void *)(type metadata accessor for ConversationControlsAction() - 8);
    uint64_t v32 = v12 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    OUTLINED_FUNCTION_1_138();
    unsigned __int8 v72 = v11;
    outlined copy of ConversationControlsRecipe.Actions(v33, v34, v35, v36, v37, v11);
    uint64_t v79 = *(void *)(v31 + 72);
    uint64_t v75 = *MEMORY[0x1E4FB27B0];
    uint64_t v76 = a2;
    char v38 = v77;
    do
    {
      ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
      long long v40 = v39;
      uint64_t v42 = v41;
      uint64_t ObjectType = swift_getObjectType();
      id v44 = v40;
      static Layout.ConversationControls.iOS.getter((uint64_t)v83);
      objc_msgSend(v44, sel__setTouchInsets_, v84, v85, v86, v87);

      self;
      char v45 = (void *)swift_dynamicCastObjCClass();
      if (v45) {
        objc_msgSend(v45, sel_setPreferredBehavioralStyle_, 1);
      }
      if (v38 == 2 && (type metadata accessor for ConversationControlsButton(), (uint64_t v46 = swift_dynamicCastClass()) != 0))
      {
        uint64_t v47 = (char *)v46;
        id v48 = v44;
        objc_msgSend(v47, sel_setMaximumContentSizeCategory_, v75);
        uint64_t v78 = ObjectType;
        double v49 = (uint64_t *)&v47[OBJC_IVAR___CNKConversationControlsButton_localizedName];
        swift_beginAccess();
        uint64_t v50 = a4;
        uint64_t v52 = *v49;
        uint64_t v51 = v49[1];
        id v53 = objc_allocWithZone((Class)type metadata accessor for LabeledButtonView());
        swift_bridgeObjectRetain();
        id v54 = v48;
        uint64_t v55 = v52;
        a4 = v50;
        a2 = v76;
        uint64_t v56 = v51;
        uint64_t ObjectType = v78;
        char v38 = v77;
        uint64_t v57 = LabeledButtonView.init(control:text:)(v47, v55, v56);
        objc_msgSend(v80, sel_addArrangedSubview_, v57);
      }
      else
      {
        objc_msgSend(v80, sel_addArrangedSubview_, v44);
      }
      if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v42 + 32))(ObjectType, v42) == 1)
      {
        id v58 = objc_msgSend(v44, sel_widthAnchor);
        id v59 = objc_msgSend(v44, sel_heightAnchor);
        id v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

        type metadata accessor for UILayoutPriority(0);
        lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
        static _UIKitNumericRawRepresentable.- infix(_:_:)();
        LODWORD(v61) = v81;
        objc_msgSend(v60, sel_setPriority_, v61);
        objc_msgSend(v60, sel_setActive_, 1);
      }
      v32 += v79;
      --v30;
    }
    while (v30);
    OUTLINED_FUNCTION_1_138();
    LOBYTE(v11) = v72;
    outlined consume of ConversationControlsRecipe.Actions?(v62, v63, v64, v65, v66, v72);
    id v9 = v73;
    a1 = v74;
  }

  outlined destroy of ConversationControlsRecipe(a1);
  OUTLINED_FUNCTION_1_138();
  outlined consume of ConversationControlsRecipe.Actions?(v67, v68, v69, v70, v71, v11);
  return v9;
}

void key path getter for ConversationHUDControlsButtonShelfView.cnkContentAlpha : ConversationHUDControlsButtonShelfView(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x60))();
}

uint64_t key path setter for ConversationHUDControlsButtonShelfView.cnkContentAlpha : ConversationHUDControlsButtonShelfView(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x68))(*a1);
}

void ConversationHUDControlsButtonShelfView.cnkContentAlpha.didset()
{
  id v1 = objc_msgSend(v0, sel_arrangedSubviews);
  type metadata accessor for UIView();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_14:
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 >= 1)
  {
    char v4 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha];
    swift_beginAccess();
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C87744F0](i, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      double v7 = v6;
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional((uint64_t)v7))
      {
        uint64_t v9 = v8;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, double))(v9 + 16))(ObjectType, v9, *v4);
      }
      else
      {
        objc_msgSend(v7, sel_setAlpha_, *v4);
      }
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

double ConversationHUDControlsButtonShelfView.cnkContentAlpha.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha;
  swift_beginAccess();
  return *(double *)v1;
}

void ConversationHUDControlsButtonShelfView.cnkContentAlpha.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha);
  swift_beginAccess();
  *uint64_t v3 = a1;
  ConversationHUDControlsButtonShelfView.cnkContentAlpha.didset();
}

void (*ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify;
}

void ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    ConversationHUDControlsButtonShelfView.cnkContentAlpha.didset();
  }
}

id ConversationHUDControlsButtonShelfView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDControlsButtonShelfView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha] = 0x3FF0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ConversationHUDControlsButtonShelfView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDControlsButtonShelfView.init(frame:)()
{
}

id ConversationHUDControlsButtonShelfView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDControlsButtonShelfView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.axis.getter()
{
  return *(void *)v0;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.axis.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.axis.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.alignment.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.alignment.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.alignment.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.distribution.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.distribution.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.distribution.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.spacing.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.spacing.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.spacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static ConversationHUDControlsButtonShelfView.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.init(axis:alignment:distribution:spacing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

uint64_t type metadata accessor for ConversationHUDControlsButtonShelfView()
{
  return self;
}

void *ConversationHUDControlsButtonShelfView.Configuration.default.unsafeMutableAddressor()
{
  return &static ConversationHUDControlsButtonShelfView.Configuration.default;
}

double static ConversationHUDControlsButtonShelfView.Configuration.default.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)&double result = 3;
  *(_OWORD *)(a1 + 16) = xmmword_1C3765400;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t method lookup function for ConversationHUDControlsButtonShelfView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationHUDControlsButtonShelfView);
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.cnkContentAlpha.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.cnkContentAlpha.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t storeEnumTagSinglePayload for ConversationHUDControlsButtonShelfView.Configuration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)double result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConversationHUDControlsButtonShelfView.Configuration()
{
  return &type metadata for ConversationHUDControlsButtonShelfView.Configuration;
}

char *PushToTalkLabelButtonView.__allocating_init(button:labelText:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return PushToTalkLabelButtonView.init(button:labelText:)(a1, a2, a3);
}

id PushToTalkLabelButtonView.button.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button);
}

id PushToTalkLabelButtonView.label.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);
}

char *PushToTalkLabelButtonView.init(button:labelText:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label;
  id v8 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button] = a1;
  id v10 = a1;

  v22.receiver = v9;
  v22.super_class = (Class)type metadata accessor for PushToTalkLabelButtonView();
  uint64_t v11 = (char *)objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button];
  uint64_t v13 = v11;
  objc_msgSend(v13, sel_addSubview_, v12);
  uint64_t v14 = OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label;
  double v15 = *(void **)&v13[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label];
  outlined bridged method (mbnn) of @objc UILabel.text.setter(a2, a3, v15);
  uint64_t v16 = one-time initialization token for buttonLabel;
  id v17 = v15;
  if (v16 != -1) {
    swift_once();
  }
  objc_msgSend(v17, sel_setFont_, static Fonts.PTT.buttonLabel);

  uint64_t v18 = *(void **)&v13[v14];
  objc_msgSend(v18, sel_setTextAlignment_, 1);
  uint64_t v19 = one-time initialization token for buttonLabel;
  id v20 = v18;
  if (v19 != -1) {
    swift_once();
  }
  objc_msgSend(v20, sel_setTextColor_, static Colors.PTT.buttonLabel);

  objc_msgSend(v13, sel_addSubview_, *(void *)&v13[v14]);
  PushToTalkLabelButtonView.setupConstraints()();

  return v13;
}

uint64_t type metadata accessor for PushToTalkLabelButtonView()
{
  return self;
}

id PushToTalkLabelButtonView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PushToTalkLabelButtonView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkLabelButtonView.setupConstraints()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button];
  char v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C377B2F0;
  id v4 = objc_msgSend(v1, sel_topAnchor);
  id v5 = objc_msgSend(v0, (SEL)&selRef_insertAttributedString_atIndex_ + 3);
  id v6 = OUTLINED_FUNCTION_1_10();

  *(void *)(v3 + 32) = v6;
  id v7 = objc_msgSend(v1, sel_leadingAnchor);
  id v8 = objc_msgSend(v0, sel_leadingAnchor);
  id v9 = OUTLINED_FUNCTION_1_10();

  *(void *)(v3 + 40) = v9;
  id v10 = objc_msgSend(v1, sel_trailingAnchor);
  id v11 = objc_msgSend(v0, sel_trailingAnchor);
  id v12 = OUTLINED_FUNCTION_1_10();

  *(void *)(v3 + 48) = v12;
  id v13 = objc_msgSend(v1, sel_heightAnchor);
  id v14 = objc_msgSend(v13, sel_constraintEqualToConstant_, 80.0);

  *(void *)(v3 + 56) = v14;
  id v15 = objc_msgSend(v1, sel_widthAnchor);
  id v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, 80.0);

  *(void *)(v3 + 64) = v16;
  id v17 = objc_msgSend(v2, sel_topAnchor);
  id v18 = objc_msgSend(v1, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 10.0);

  *(void *)(v3 + 72) = v19;
  id v20 = objc_msgSend(v2, sel_leadingAnchor);
  id v21 = OUTLINED_FUNCTION_1_13((uint64_t)objc_msgSend(v0, sel_leadingAnchor));

  *(void *)(v3 + 80) = v21;
  id v22 = objc_msgSend(v2, sel_trailingAnchor);
  id v23 = OUTLINED_FUNCTION_1_13((uint64_t)objc_msgSend(v0, sel_trailingAnchor));

  *(void *)(v3 + 88) = v23;
  id v24 = objc_msgSend(v2, sel_bottomAnchor);
  id v25 = objc_msgSend(v0, sel_bottomAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v3 + 96) = v26;
  specialized Array._endMutation()();
  unsigned __int8 v27 = self;
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, isa);
}

id PushToTalkLabelButtonView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void PushToTalkLabelButtonView.init(frame:)()
{
}

id PushToTalkLabelButtonView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkLabelButtonView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PushToTalkLabelButtonView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PushToTalkLabelButtonView);
}

uint64_t dispatch thunk of PushToTalkLabelButtonView.__allocating_init(button:labelText:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t CallControlTextButton.init(config:)()
{
  type metadata accessor for CallControlsTextButtonConfiguration(0);
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  return Bindable<A>.init(wrappedValue:)();
}

uint64_t type metadata accessor for CallControlsTextButtonConfiguration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlsTextButtonConfiguration);
}

uint64_t CallControlTextButtonStyle.init(tint:role:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v5 = type metadata accessor for CallControlTextButtonStyle(0);
  return _sypSgWObTm_0(a2, (uint64_t)a3 + *(int *)(v5 + 20), &demangling cache variable for type metadata for ButtonRole?);
}

uint64_t type metadata accessor for CallControlTextButtonStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlTextButtonStyle);
}

uint64_t CallControlsTextButtonConfiguration.__allocating_init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_14_72();
  uint64_t v17 = swift_allocObject();
  CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(v15, v14, v13, v12, v11, v10, a7, a8, a9, a10);
  return v17;
}

uint64_t CallControlTextButton.config.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for CallControlTextButton.config : CallControlTextButton()
{
  return CallControlTextButton.config.setter();
}

uint64_t CallControlTextButton.config.setter()
{
  return Bindable.wrappedValue.setter();
}

void (*CallControlTextButton.config.modify(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  void v2[4] = Bindable.wrappedValue.modify();
  return CallControlsMenuView.viewModel.modify;
}

uint64_t CallControlTextButton.$config.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return MEMORY[0x1F40FCAB0](v0);
}

uint64_t CallControlTextButton.buttonWithAccessbilityLabel()@<X0>(uint64_t a1@<X8>)
{
  v18[1] = a1;
  v18[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>>.Storage);
  MEMORY[0x1F4188790](v18[0]);
  objc_super v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v18 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  uint64_t v12 = CallControlsTextButtonConfiguration.accessibilityLabel.getter();
  uint64_t v14 = v13;
  swift_release();
  CallControlTextButton.buttonWithAccessbilityIdentifier()((uint64_t)v5);
  if (v14)
  {
    v18[2] = v12;
    v18[3] = v14;
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type String and conformance String();
    View.accessibilityLabel<A>(_:)();
    outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>((uint64_t)v5, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>);
    swift_bridgeObjectRelease();
    uint64_t v15 = &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>;
    _sypSgWObTm_0((uint64_t)v8, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
    outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v11, (uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v16 = (uint64_t)v11;
  }
  else
  {
    uint64_t v15 = &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>;
    outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v5, (uint64_t)v2, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v16 = (uint64_t)v5;
  }
  return outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>(v16, v15);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityLabel.getter()
{
  return CallControlsTextButtonConfiguration.accessibilityLabel.getter((uint64_t)&unk_1C3788C10, &OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityLabel);
}

uint64_t CallControlTextButton.buttonWithAccessbilityIdentifier()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>.Storage);
  MEMORY[0x1F4188790](v18);
  objc_super v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  CallControlsTextButtonConfiguration.accessibilityIdentifier.getter();
  uint64_t v13 = v12;
  swift_release();
  CallControlTextButton.button()((uint64_t)v5);
  if (v13)
  {
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>((uint64_t)v5, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v14 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>;
    _sypSgWObTm_0((uint64_t)v8, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
    outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v11, (uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v15 = (uint64_t)v11;
  }
  else
  {
    uint64_t v14 = &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>;
    outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v5, (uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v15 = (uint64_t)v5;
  }
  return outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>(v15, v14);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityIdentifier.getter()
{
  return CallControlsTextButtonConfiguration.accessibilityLabel.getter((uint64_t)&unk_1C3788C38, &OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityIdentifier);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityLabel.getter(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (uint64_t *)(v2 + *a2);
  OUTLINED_FUNCTION_5_0();
  uint64_t v5 = *v4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t CallControlTextButton.button()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v21 = type metadata accessor for CallControlTextButtonStyle(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v3 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v6 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  uint64_t v9 = CallControlsTextButtonConfiguration.text.getter();
  uint64_t v11 = v10;
  swift_release();
  uint64_t v24 = v9;
  uint64_t v25 = v11;
  Bindable.wrappedValue.getter();
  swift_retain();
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  Bindable.wrappedValue.getter();
  outlined init with copy of CallControlTextButtonStyle(v24 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle, (uint64_t)v2);
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlTextButtonStyle and conformance CallControlTextButtonStyle, (void (*)(uint64_t))type metadata accessor for CallControlTextButtonStyle);
  uint64_t v12 = v20;
  View.buttonStyle<A>(_:)();
  outlined destroy of CallControlTextButtonStyle((uint64_t)v2, (void (*)(void))type metadata accessor for CallControlTextButtonStyle);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  Bindable.wrappedValue.getter();
  LOBYTE(v9) = CallControlsTextButtonConfiguration.enabled.getter();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = (v9 & 1) == 0;
  uint64_t v16 = v22;
  uint64_t v15 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v23, v8, v22);
  uint64_t v17 = (uint64_t *)(v15
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *uint64_t v17 = KeyPath;
  v17[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v17[2] = v14;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
}

uint64_t CallControlsTextButtonConfiguration.text.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__text);
  OUTLINED_FUNCTION_5_0();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CallControlsTextButtonConfiguration.enabled.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__enabled);
  OUTLINED_FUNCTION_5_0();
  return *v1;
}

uint64_t CallControlsTextButtonConfiguration.buttonStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of CallControlTextButtonStyle(v1 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle, a1);
}

uint64_t key path getter for CallControlsTextButtonConfiguration.text : CallControlsTextButtonConfiguration@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallControlsTextButtonConfiguration.text.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for CallControlsTextButtonConfiguration.text : CallControlsTextButtonConfiguration()
{
  return CallControlsTextButtonConfiguration.text.setter();
}

uint64_t CallControlsTextButtonConfiguration.text.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t CallControlsTextButtonConfiguration.text.init@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t CallControlsTextButtonConfiguration.access<A>(keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in CallControlsTextButtonConfiguration.text.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__text);
  swift_beginAccess();
  *uint64_t v5 = a2;
  v5[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t specialized CallControlsTextButtonConfiguration.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t CallControlsTextButtonConfiguration.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*CallControlsTextButtonConfiguration.text.modify())(void **a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v0);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  uint64_t v1 = lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_1_47(v1);
  swift_release();
  OUTLINED_FUNCTION_12_20();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_1_139();
  return CallControlsTextButtonConfiguration.text.modify;
}

void CallControlsTextButtonConfiguration.text.modify(void **a1)
{
}

uint64_t key path getter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallControlsTextButtonConfiguration.accessibilityLabel.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CallControlsTextButtonConfiguration.accessibilityLabel.setter);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityLabel.setter()
{
  return CallControlsTextButtonConfiguration.accessibilityLabel.setter();
}

{
  swift_getKeyPath();
  specialized CallControlsTextButtonConfiguration.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CallControlsTextButtonConfiguration.accessibilityLabel.init@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void (*CallControlsTextButtonConfiguration.accessibilityLabel.modify())(void **a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v0);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  uint64_t v1 = lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_1_47(v1);
  swift_release();
  OUTLINED_FUNCTION_12_20();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_1_139();
  return CallControlsTextButtonConfiguration.accessibilityLabel.modify;
}

void CallControlsTextButtonConfiguration.accessibilityLabel.modify(void **a1)
{
}

uint64_t key path getter for CallControlsTextButtonConfiguration.accessibilityIdentifier : CallControlsTextButtonConfiguration@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallControlsTextButtonConfiguration.accessibilityIdentifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for CallControlsTextButtonConfiguration.accessibilityIdentifier : CallControlsTextButtonConfiguration(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CallControlsTextButtonConfiguration.accessibilityIdentifier.setter);
}

uint64_t key path setter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityIdentifier.setter()
{
  return CallControlsTextButtonConfiguration.accessibilityLabel.setter();
}

uint64_t closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v6 = a2;
  v6[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void (*CallControlsTextButtonConfiguration.accessibilityIdentifier.modify())(void **a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v0);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  uint64_t v1 = lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_1_47(v1);
  swift_release();
  OUTLINED_FUNCTION_12_20();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_1_139();
  return CallControlsTextButtonConfiguration.accessibilityIdentifier.modify;
}

void CallControlsTextButtonConfiguration.accessibilityIdentifier.modify(void **a1)
{
}

uint64_t key path getter for CallControlsTextButtonConfiguration.enabled : CallControlsTextButtonConfiguration@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CallControlsTextButtonConfiguration.enabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path setter for CallControlsTextButtonConfiguration.enabled : CallControlsTextButtonConfiguration()
{
  return CallControlsTextButtonConfiguration.enabled.setter();
}

uint64_t CallControlsTextButtonConfiguration.enabled.setter()
{
  return swift_release();
}

uint64_t CallControlsTextButtonConfiguration.enabled.init@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t closure #1 in CallControlsTextButtonConfiguration.enabled.setter(uint64_t a1, char a2)
{
  uint64_t v3 = (unsigned char *)(a1 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__enabled);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a2;
  return result;
}

void (*CallControlsTextButtonConfiguration.enabled.modify())(void **a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_6_26((uint64_t)v0);
  swift_getKeyPath();
  OUTLINED_FUNCTION_4_22(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  uint64_t v1 = lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_1_47(v1);
  swift_release();
  OUTLINED_FUNCTION_12_20();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_1_139();
  return CallControlsTextButtonConfiguration.enabled.modify;
}

void CallControlsTextButtonConfiguration.enabled.modify(void **a1)
{
}

uint64_t CallControlsTextButtonConfiguration.didTap.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_didTap);
  swift_retain();
  return v1;
}

uint64_t CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_14_72();
  uint64_t v17 = (void *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityLabel);
  *uint64_t v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (void *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityIdentifier);
  void *v18 = 0;
  v18[1] = 0;
  ObservationRegistrar.init()();
  outlined init with take of CallControlTextButtonStyle(v16, v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle);
  uint64_t v19 = (void *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__text);
  void *v19 = v15;
  v19[1] = v14;
  swift_bridgeObjectRelease();
  *uint64_t v17 = v13;
  v17[1] = v12;
  swift_bridgeObjectRelease();
  void *v18 = v11;
  v18[1] = a7;
  *(unsigned char *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__enabled) = a8;
  uint64_t v20 = (void *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_didTap);
  *uint64_t v20 = a9;
  v20[1] = a10;
  return v10;
}

uint64_t sub_1C359366C()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = CallControlsTextButtonConfiguration.accessibilityLabel.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C3593698()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = CallControlsTextButtonConfiguration.accessibilityIdentifier.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C35936C4()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = CallControlsTextButtonConfiguration.text.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C35936F0()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = CallControlsTextButtonConfiguration.enabled.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1C359371C()
{
  return CallControlsTextButtonConfiguration.enabled.setter();
}

uint64_t outlined init with copy of CallControlTextButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CallControlTextButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.text.setter()
{
  return closure #1 in CallControlsTextButtonConfiguration.text.setter(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter()
{
  return closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityLabel);
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.accessibilityIdentifier.setter()
{
  return closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityIdentifier);
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.enabled.setter()
{
  return closure #1 in CallControlsTextButtonConfiguration.enabled.setter(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t outlined init with take of CallControlTextButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CallControlTextButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CallControlsTextButtonConfiguration.deinit()
{
  outlined destroy of CallControlTextButtonStyle(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle, (void (*)(void))type metadata accessor for CallControlTextButtonStyle);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_48();
  uint64_t v1 = OUTLINED_FUNCTION_28_6();
  v2(v1);
  return v0;
}

uint64_t CallControlsTextButtonConfiguration.__deallocating_deinit()
{
  CallControlsTextButtonConfiguration.deinit();
  return swift_deallocClassInstance();
}

uint64_t CallControlTextButtonStyle.tint.getter()
{
  return swift_retain();
}

uint64_t CallControlTextButtonStyle.role.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CallControlTextButtonStyle(0);
  return outlined init with copy of LinkShareCoordinatorProtocol?(v1 + *(int *)(v3 + 20), a1, &demangling cache variable for type metadata for ButtonRole?);
}

uint64_t CallControlTextButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CallControlTextButtonDefaultStyle(0);
  OUTLINED_FUNCTION_48();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  uint64_t v7 = (void *)(v6 - v5);
  uint64_t v8 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_21();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_21();
  uint64_t v21 = v20 - v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, a1, v8);
  Button<>.init(_:)();
  uint64_t v22 = *v1;
  uint64_t v23 = type metadata accessor for CallControlTextButtonStyle(0);
  outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v1 + *(int *)(v23 + 20), (uint64_t)v7 + *(int *)(v3 + 20), &demangling cache variable for type metadata for ButtonRole?);
  void *v7 = v22;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type CallControlTextButtonDefaultStyle and conformance CallControlTextButtonDefaultStyle, (void (*)(uint64_t))type metadata accessor for CallControlTextButtonDefaultStyle);
  swift_retain();
  View.buttonStyle<A>(_:)();
  outlined destroy of CallControlTextButtonStyle((uint64_t)v7, (void (*)(void))type metadata accessor for CallControlTextButtonDefaultStyle);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
}

uint64_t type metadata accessor for CallControlTextButtonDefaultStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlTextButtonDefaultStyle);
}

uint64_t lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined destroy of CallControlTextButtonStyle(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_48();
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  v4(v3);
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in CallControlTextButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in CallControlTextButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C3593D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CallControlTextButton.config.getter();
  *a1 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for CallControlTextButton(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallControlTextButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3593FF0);
}

uint64_t sub_1C3593FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CallControlTextButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3594050);
}

uint64_t sub_1C3594050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CallControlTextButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlTextButton);
}

void type metadata completion function for CallControlTextButton()
{
  type metadata accessor for Bindable<CallControlsTextButtonConfiguration>(319, &lazy cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>, type metadata accessor for CallControlsTextButtonConfiguration, MEMORY[0x1E4F3EED8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t ObjC metadata update function for CallControlsTextButtonConfiguration()
{
  return type metadata accessor for CallControlsTextButtonConfiguration(0);
}

uint64_t type metadata completion function for CallControlsTextButtonConfiguration()
{
  uint64_t result = type metadata accessor for CallControlTextButtonStyle(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for CallControlsTextButtonConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallControlsTextButtonConfiguration);
}

uint64_t dispatch thunk of CallControlsTextButtonConfiguration.__allocating_init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t getEnumTagSinglePayload for CallControlTextButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_19Tm);
}

uint64_t storeEnumTagSinglePayload for CallControlTextButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_20Tm);
}

void type metadata accessor for Bindable<CallControlsTextButtonConfiguration>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C359435C()
{
  return lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration((unint64_t *)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>()
{
  return lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration((unint64_t *)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1C3594710()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for CallControlTextButtonStyle()
{
  OUTLINED_FUNCTION_10_0();
  int v2 = *(_DWORD *)(v1 + 80);
  uint64_t v4 = *v3;
  uint64_t *v0 = *v3;
  if ((v2 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v2 + 16) & ~(unint64_t)v2));
    swift_retain();
  }
  else
  {
    uint64_t v5 = v0;
    OUTLINED_FUNCTION_12_71();
    swift_retain();
    if (OUTLINED_FUNCTION_7_102())
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
      uint64_t v7 = OUTLINED_FUNCTION_8(v6);
      OUTLINED_FUNCTION_18_61(v7, v9, *(void *)(v8 + 64));
    }
    else
    {
      OUTLINED_FUNCTION_48();
      uint64_t v10 = OUTLINED_FUNCTION_8_82();
      v11(v10);
      OUTLINED_FUNCTION_4_122();
    }
  }
  return v5;
}

uint64_t destroy for CallControlTextButtonStyle(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ButtonRole();
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    OUTLINED_FUNCTION_48();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v8(v4, v5);
  }
  return result;
}

void *initializeWithCopy for CallControlTextButtonStyle(void *a1, void *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_12_71();
  swift_retain();
  if (OUTLINED_FUNCTION_7_102())
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    uint64_t v4 = OUTLINED_FUNCTION_8(v3);
    OUTLINED_FUNCTION_18_61(v4, v6, *(void *)(v5 + 64));
  }
  else
  {
    OUTLINED_FUNCTION_48();
    uint64_t v7 = OUTLINED_FUNCTION_8_82();
    v8(v7);
    OUTLINED_FUNCTION_4_122();
  }
  return a1;
}

void *assignWithCopy for CallControlTextButtonStyle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v5 = OUTLINED_FUNCTION_23_55();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a3, 1, v5);
  int v7 = OUTLINED_FUNCTION_7_102();
  if (!EnumTagSinglePayload)
  {
    OUTLINED_FUNCTION_10_0();
    if (!v10)
    {
      uint64_t v18 = OUTLINED_FUNCTION_24_52();
      v19(v18);
      return a1;
    }
    uint64_t v11 = OUTLINED_FUNCTION_22_49();
    v12(v11);
    goto LABEL_6;
  }
  if (v7)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    uint64_t v14 = OUTLINED_FUNCTION_8(v13);
    OUTLINED_FUNCTION_18_61(v14, v16, *(void *)(v15 + 64));
    return a1;
  }
  OUTLINED_FUNCTION_48();
  uint64_t v8 = OUTLINED_FUNCTION_8_82();
  v9(v8);
  OUTLINED_FUNCTION_4_122();
  return a1;
}

void *initializeWithTake for CallControlTextButtonStyle(void *a1, void *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_12_71();
  if (OUTLINED_FUNCTION_7_102())
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    uint64_t v4 = OUTLINED_FUNCTION_8(v3);
    OUTLINED_FUNCTION_18_61(v4, v6, *(void *)(v5 + 64));
  }
  else
  {
    OUTLINED_FUNCTION_48();
    uint64_t v7 = OUTLINED_FUNCTION_19_53();
    v8(v7);
    OUTLINED_FUNCTION_4_122();
  }
  return a1;
}

void *assignWithTake for CallControlTextButtonStyle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v5 = OUTLINED_FUNCTION_23_55();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a3, 1, v5);
  int v7 = OUTLINED_FUNCTION_7_102();
  if (!EnumTagSinglePayload)
  {
    OUTLINED_FUNCTION_10_0();
    if (!v10)
    {
      uint64_t v18 = OUTLINED_FUNCTION_24_52();
      v19(v18);
      return a1;
    }
    uint64_t v11 = OUTLINED_FUNCTION_22_49();
    v12(v11);
    goto LABEL_6;
  }
  if (v7)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    uint64_t v14 = OUTLINED_FUNCTION_8(v13);
    OUTLINED_FUNCTION_18_61(v14, v16, *(void *)(v15 + 64));
    return a1;
  }
  OUTLINED_FUNCTION_48();
  uint64_t v8 = OUTLINED_FUNCTION_19_53();
  v9(v8);
  OUTLINED_FUNCTION_4_122();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallControlTextButtonDefaultStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3594C5C);
}

uint64_t __swift_get_extra_inhabitant_index_19Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CallControlTextButtonDefaultStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3594D00);
}

void *__swift_store_extra_inhabitant_index_20Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for CallControlTextButtonStyle()
{
  type metadata accessor for Bindable<CallControlsTextButtonConfiguration>(319, &lazy cache variable for type metadata for ButtonRole?, MEMORY[0x1E4F3C4B0], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in CallControlTextButtonDefaultStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t CallControlTextButtonDefaultStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for ButtonBorderShape();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v51 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  uint64_t v50 = v6;
  MEMORY[0x1F4188790](v5);
  id v44 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.acceptsFirstMouse()>>.0>);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  uint64_t v46 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
  uint64_t v19 = v18 - 8;
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v20);
  unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v24 + v23, (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v56 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.acceptsFirstMouse()>>.0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  unint64_t v26 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v57 = v25;
  unint64_t v58 = v26;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  unsigned __int8 v27 = v44;
  BorderedProminentButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.acceptsFirstMouse()>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.acceptsFirstMouse()>>.0>);
  lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, MEMORY[0x1E4F3DEB8]);
  uint64_t v28 = v45;
  uint64_t v29 = v49;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v29);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v28);
  uint64_t v30 = v51;
  static ButtonBorderShape.capsule.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = (uint64_t *)&v22[*(int *)(v19 + 44)];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ButtonBorderShape>);
  uint64_t v35 = v52;
  uint64_t v34 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v32 + *(int *)(v33 + 28), v30, v53);
  *uint64_t v32 = KeyPath;
  uint64_t v37 = v47;
  uint64_t v36 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v22, v17, v48);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v34);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v36);
  uint64_t v38 = *v54;
  uint64_t v39 = swift_getKeyPath();
  uint64_t v57 = v38;
  swift_retain_n();
  uint64_t v40 = AnyShapeStyle.init<A>(_:)();
  uint64_t v41 = v55;
  outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v22, v55, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
  swift_release();
  uint64_t v42 = (uint64_t *)(v41
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>)
                           + 36));
  uint64_t *v42 = v39;
  v42[1] = v40;
  return outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
}

uint64_t closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v1 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v47);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1F4188790](v51);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.acceptsFirstMouse()>>.0);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v48 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  PrimitiveButtonStyleConfiguration.label.getter();
  unsigned int v14 = static Edge.Set.leading.getter();
  unsigned int v15 = static Edge.Set.trailing.getter();
  uint64_t v16 = MEMORY[0x1C8771D90](0);
  int v17 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v17 & v14) != v14) {
    uint64_t v16 = MEMORY[0x1C8771D90](v16 | v14);
  }
  int v18 = MEMORY[0x1C8771D90](v16);
  if (MEMORY[0x1C8771D90](v18 & v15) != v15) {
    LOBYTE(v16) = MEMORY[0x1C8771D90](v16 | v15);
  }
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  unsigned __int8 v27 = &v7[*(int *)(v5 + 36)];
  *unsigned __int8 v27 = v16;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  unsigned int v28 = static Edge.Set.top.getter();
  unsigned int v29 = static Edge.Set.bottom.getter();
  uint64_t v30 = MEMORY[0x1C8771D90](0);
  int v31 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v31 & v28) != v28) {
    uint64_t v30 = MEMORY[0x1C8771D90](v30 | v28);
  }
  int v32 = MEMORY[0x1C8771D90](v30);
  if (MEMORY[0x1C8771D90](v32 & v29) != v29) {
    LOBYTE(v30) = MEMORY[0x1C8771D90](v30 | v29);
  }
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v7, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
  uint64_t v41 = &v9[*(int *)(v47 + 36)];
  *uint64_t v41 = v30;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
  static Font.subheadline.getter();
  uint64_t v42 = Font.bold()();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v9, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
  id v44 = (uint64_t *)&v11[*(int *)(v51 + 36)];
  *id v44 = KeyPath;
  v44[1] = v42;
  outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v45 = v48;
  View.acceptsFirstMouse()();
  outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v52, v45, v50);
}

uint64_t sub_1C35958D8()
{
  type metadata accessor for PrimitiveButtonStyleConfiguration();
  OUTLINED_FUNCTION_48();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
    lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type PrimitiveButtonStyleConfiguration.Label and conformance PrimitiveButtonStyleConfiguration.Label, MEMORY[0x1E4F3DFC0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1C3595B34()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t key path setter for EnvironmentValues._buttonBorderShape : EnvironmentValues, serialized(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ButtonBorderShape();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues._buttonBorderShape.setter();
}

uint64_t outlined destroy of ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_48();
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  v4(v3);
  return a1;
}

uint64_t sub_1C3595C8C()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<<<opaque return type of View.acceptsFirstMouse()>>.0>);
    type metadata accessor for BorderedProminentButtonStyle();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.acceptsFirstMouse()>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.acceptsFirstMouse()>>.0>);
    lazy protocol witness table accessor for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, MEMORY[0x1E4F3DEB8]);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ButtonBorderShape> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ButtonBorderShape>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void InCallControlsPTTTitleCell.configure(with:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()();
  id v7 = objc_msgSend(self, sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  uint64_t v8 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  MEMORY[0x1C8773CE0](v6);
  InCallControlsPTTTitleCell.setupAvatarViewController(viewModel:)((uint64_t)a1);
  InCallControlsPTTTitleCell.setupTitleLabel()();
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  id v11 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel);
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(v10, v9, v11);
}

id InCallControlsPTTTitleCell.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

id InCallControlsPTTTitleCell.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView] = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  double v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint] = 0;

  double v5 = OUTLINED_FUNCTION_6_2();
  id v8 = objc_msgSendSuper2(v6, v7, v5, v4, ObjectType);
  objc_msgSend(v8, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  return v8;
}

id InCallControlsPTTTitleCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsPTTTitleCell.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void InCallControlsPTTTitleCell.setupAvatarViewController(viewModel:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView;
  double v5 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView];
  if (v5)
  {
    objc_msgSend(v5, sel_removeFromSuperview);
    uint64_t v6 = *(void **)&v1[v4];
    *(void *)&v1[v4] = 0;

    SEL v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController];
    *(void *)&v1[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController] = 0;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
  id v8 = static UIImageView.appIcon(for:)(*(void *)(a1 + 16), *(void **)(a1 + 24));
  id v9 = objc_msgSend(v8, sel_image);

  id v10 = *(id *)(a1 + 48);
  id v35 = v9;
  specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(v10, v9);
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController;
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController];
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController] = v13;

  unsigned int v14 = *(void **)&v2[v11];
  if (v14 && (id v15 = objc_msgSend(v14, sel_view)) != 0)
  {
    uint64_t v16 = *(void **)&v2[v4];
    *(void *)&v2[v4] = v15;
    id v17 = v15;

    id v18 = objc_msgSend(v2, sel_contentView);
    objc_msgSend(v18, sel_addSubview_, v17);

    objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v19 = self;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C3769580;
    id v21 = objc_msgSend(v17, sel_widthAnchor);
    id v22 = objc_msgSend(v21, sel_constraintEqualToConstant_, 100.0);

    *(void *)(v20 + 32) = v22;
    id v23 = objc_msgSend(v17, sel_heightAnchor);
    id v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 100.0);

    *(void *)(v20 + 40) = v24;
    id v25 = objc_msgSend(v17, sel_centerXAnchor);
    id v26 = objc_msgSend(v2, sel_contentView);
    id v27 = objc_msgSend(v26, sel_centerXAnchor);

    id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
    *(void *)(v20 + 48) = v28;
    id v29 = objc_msgSend(v17, sel_topAnchor);
    id v30 = objc_msgSend(v2, sel_contentView);
    id v31 = objc_msgSend(v30, sel_topAnchor);

    id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
    *(void *)(v20 + 56) = v32;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_activateConstraints_, isa);

    Class v34 = isa;
  }
  else
  {
    Class v34 = (Class)v35;
  }
}

void InCallControlsPTTTitleCell.setupTitleLabel()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView];
  if (!v1) {
    return;
  }
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint];
  if (!v3)
  {
    uint64_t v13 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
    unsigned int v14 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel];
    uint64_t v15 = one-time initialization token for tableViewHeaderTitleLabel;
    id v46 = v1;
    id v16 = v14;
    if (v15 != -1) {
      swift_once();
    }
    objc_msgSend(v16, sel_setTextColor_, static Colors.InCallControls.tableViewHeaderTitleLabel);

    uint64_t v17 = one-time initialization token for detailTitleLabel;
    id v18 = *(id *)&v0[v13];
    if (v17 != -1) {
      swift_once();
    }
    objc_msgSend(v18, sel_setFont_, static Fonts.PTT.detailTitleLabel);

    objc_msgSend(*(id *)&v0[v13], sel_setNumberOfLines_, 2);
    objc_msgSend(*(id *)&v0[v13], sel_setTextAlignment_, 1);
    id v19 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v19, sel_addSubview_, *(void *)&v0[v13]);

    objc_msgSend(*(id *)&v0[v13], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v20 = objc_msgSend(*(id *)&v0[v13], sel_topAnchor);
    id v21 = objc_msgSend(v46, sel_bottomAnchor);
    id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 14.0);

    id v23 = *(void **)&v0[v2];
    *(void *)&v0[v2] = v22;

    id v24 = *(void **)&v0[v2];
    if (!v24) {
      goto LABEL_14;
    }
    id v45 = self;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C3769600;
    id v26 = *(void **)&v0[v13];
    id v27 = v24;
    id v28 = objc_msgSend(v26, sel_centerXAnchor);
    id v29 = objc_msgSend(v0, sel_contentView);
    id v30 = objc_msgSend(v29, sel_centerXAnchor);

    id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
    *(void *)(v25 + 32) = v31;
    id v32 = objc_msgSend(*(id *)&v0[v13], sel_leadingAnchor);
    id v33 = objc_msgSend(v0, sel_contentView);
    id v34 = objc_msgSend(v33, sel_leadingAnchor);

    id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
    *(void *)(v25 + 40) = v35;
    id v36 = objc_msgSend(*(id *)&v0[v13], sel_trailingAnchor);
    id v37 = objc_msgSend(v0, sel_contentView);
    id v38 = objc_msgSend(v37, sel_trailingAnchor);

    id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
    *(void *)(v25 + 48) = v39;
    *(void *)(v25 + 56) = v27;
    uint64_t v40 = *(void **)&v0[v13];
    id v12 = v27;
    id v41 = objc_msgSend(v40, (SEL)&selRef_canOpenURL_ + 5);
    id v42 = objc_msgSend(v0, sel_contentView);
    id v43 = objc_msgSend(v42, (SEL)&selRef_canOpenURL_ + 5);

    id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, -20.0);
    *(void *)(v25 + 64) = v44;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel_activateConstraints_, isa);
    goto LABEL_12;
  }
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
  double v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel];
  Class isa = v1;
  id v46 = v3;
  objc_msgSend(v5, sel_removeConstraint_);
  id v7 = objc_msgSend(*(id *)&v0[v4], sel_topAnchor);
  id v8 = [(objc_class *)isa bottomAnchor];
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 14.0);

  id v10 = *(void **)&v0[v2];
  *(void *)&v0[v2] = v9;

  uint64_t v11 = *(void **)&v0[v2];
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v12, sel_setActive_, 1);
LABEL_12:
  }
LABEL_14:
}

id InCallControlsPTTTitleCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InCallControlsPTTTitleCell()
{
  return self;
}

Swift::String __swiftcall TUCall.channelDisplayName()()
{
  id v1 = objc_msgSend(v0, sel_provider);
  id v2 = objc_msgSend(v1, sel_localizedName);

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v5 = v4;

  uint64_t v6 = outlined bridged method (pb) of @objc TUCall.callerNameFromNetwork.getter(v0);
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = v6;
  id v9 = v7;
  v21[0] = v6;
  v21[1] = v7;
  uint64_t v10 = type metadata accessor for CharacterSet();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CharacterSet.whitespaces.getter();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v14 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v8 = v3;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  double v5 = v9;
LABEL_8:
  uint64_t v18 = v8;
  id v19 = v5;
  result._object = v19;
  result._countAndFlagsBits = v18;
  return result;
}

id @objc TUCall.channelDisplayName()(void *a1)
{
  id v1 = a1;
  Swift::String v2 = TUCall.channelDisplayName()();

  uint64_t v3 = (void *)MEMORY[0x1C87730B0](v2._countAndFlagsBits, v2._object);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t outlined bridged method (pb) of @objc TUCall.callerNameFromNetwork.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_callerNameFromNetwork);
  if (!v1) {
    return 0;
  }
  Swift::String v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t CallScreeningListeningState.init(prevState:canScreenCall:)()
{
  return OUTLINED_FUNCTION_5_112();
}

uint64_t CallScreeningListeningState.init(prevState:canScreenCall:)(uint64_t a1)
{
  swift_release();
  long long v3 = *(_OWORD *)(a1 + 16);
  outlined release of String((uint64_t)&v3);
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  swift_allocObject();
  OUTLINED_FUNCTION_6_111();
  return OUTLINED_FUNCTION_5_112();
}

uint64_t CallScreeningListeningState.init(prevState:canScreenCall:)(long long *a1)
{
  outlined init with take of CallScreening.EndingAction(a1, (uint64_t)v2);
  outlined release of CallScreening.EndingAction((uint64_t)v2);
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  swift_allocObject();
  OUTLINED_FUNCTION_6_111();
  return OUTLINED_FUNCTION_5_112();
}

uint64_t CallScreeningListeningState.canScreenCall.getter(uint64_t a1)
{
  return a1;
}

uint64_t CallScreeningListeningState.stateMachineContainer.getter()
{
  return swift_retain();
}

uint64_t CallScreeningListeningState.willExit(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_63();
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  uint64_t v13 = type metadata accessor for CallScreeningListeningState();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = CallScreeningState.stateMachine.getter(v13, WitnessTable);
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
    swift_retain();
    swift_retain();
    outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined copy of CallScreening.State);
    swift_retain();
    swift_retain();
    outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined copy of CallScreening.State);
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v25 = v17;
      uint64_t v18 = swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446466;
      swift_release();
      swift_release();
      id v24 = v16;
      uint64_t v27 = OUTLINED_FUNCTION_2_131();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_13_76();
      swift_release();
      swift_release();
      *(_WORD *)(v18 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined copy of CallScreening.State);
      unint64_t v19 = CallScreening.State.description.getter();
      unint64_t v21 = v20;
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      unint64_t v16 = v24;
      _os_log_impl(&dword_1C2F90000, v24, v25, "%{public}s Exiting to %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      swift_release_n();
      swift_release_n();
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
    }
    swift_unknownObjectRelease();

    uint64_t v22 = OUTLINED_FUNCTION_6_24();
    return v23(v22);
  }
  return result;
}

uint64_t type metadata accessor for CallScreeningListeningState()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningListeningState.enteredState()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_63();
  uint64_t v5 = type metadata accessor for CallScreeningListeningState();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (CallScreeningState.stateMachine.getter(v5, WitnessTable))
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
    swift_retain();
    swift_retain();
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      swift_slowAlloc();
      *(_DWORD *)id v9 = 136446210;
      OUTLINED_FUNCTION_2_131();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_13_76();
      swift_release();
      swift_release();
      _os_log_impl(&dword_1C2F90000, v7, v8, "EnteredState %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      swift_release();
      swift_release();
    }
    swift_unknownObjectRelease();

    uint64_t v10 = OUTLINED_FUNCTION_6_24();
    v11(v10);
  }
}

uint64_t CallScreeningListeningState.update(with:)()
{
  OUTLINED_FUNCTION_17_2();
  v0[13] = v1;
  v0[14] = v2;
  v0[11] = v3;
  v0[12] = v4;
  v0[9] = v5;
  v0[10] = v6;
  uint64_t v7 = type metadata accessor for Logger();
  v0[15] = v7;
  v0[16] = *(void *)(v7 - 8);
  v0[17] = swift_task_alloc();
  v0[18] = swift_task_alloc();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v8 = static CKStateMachineActor.shared;
  v0[19] = static CKStateMachineActor.shared;
  return MEMORY[0x1F4188298](CallScreeningListeningState.update(with:), v8, 0);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 152);
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v6 = v5;
  *(unsigned char *)(v8 + 216) = v7;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](CallScreeningListeningState.update(with:), v4, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  uint64_t v1 = *(void *)(v0 + 72);
  if (*(unsigned char *)(v0 + 216) & 1) != 0 || (*(unsigned char *)(v1 + 33))
  {
    unint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v15;
    *unint64_t v15 = v0;
    v15[1] = CallScreeningListeningState.update(with:);
    OUTLINED_FUNCTION_7_6();
    __asm { BRAA            X9, X16 }
  }
  (*(void (**)(void, void))(v0 + 168))(*(void *)(v0 + 104), *(void *)(v0 + 112));
  swift_retain();
  swift_retain();
  outlined retain of AnsweringMachineCallStatus(v1);
  swift_retain();
  swift_retain();
  outlined retain of AnsweringMachineCallStatus(v1);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 72);
  if (v4)
  {
    unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    unint64_t v20 = *(void *)(v0 + 136);
    id v9 = (uint8_t *)swift_slowAlloc();
    id v23 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446466;
    swift_release();
    uint64_t v10 = swift_release();
    *(void *)(v0 + 40) = OUTLINED_FUNCTION_3_131(v10, v11, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_13_76();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_11_74();
    uint64_t v12 = AnsweringMachineCallStatus.description.getter();
    uint64_t v14 = v13;
    outlined release of AnsweringMachineCallStatus(v8);
    *(void *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined release of AnsweringMachineCallStatus(v8);
    outlined release of AnsweringMachineCallStatus(v8);
    _os_log_impl(&dword_1C2F90000, v2, v3, "%{public}s Cannot screen call with %{public}s", v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    swift_unknownObjectRelease();

    v21(v20, v7);
  }
  else
  {
    swift_release_n();
    swift_release_n();
    swift_unknownObjectRelease();
    outlined release of AnsweringMachineCallStatus(v8);
    outlined release of AnsweringMachineCallStatus(v8);

    v5(v6, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_4();
  return v18();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v8;

  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v6 = CallScreeningListeningState.update(with:);
  }
  else {
    uint64_t v6 = CallScreeningListeningState.update(with:);
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_4();
  return v0();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_17_2();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void CallScreeningListeningState.update(with:)()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 80);
  *(void *)(v0 + 32) = *(void *)(v0 + 96);
  uint64_t v1 = type metadata accessor for CallScreeningListeningState();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = CallScreeningState.stateMachine.getter(v1, WitnessTable);
  *(void *)(v0 + 160) = v3;
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void (**)(uint64_t))(v6 + 16);
    *(void *)(v0 + 168) = v7;
    *(void *)(v0 + 176) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0x5F58000000000000;
    v7(v5);
    swift_retain();
    swift_retain();
    outlined retain of AnsweringMachineCallStatus(v4);
    swift_retain();
    swift_retain();
    outlined retain of AnsweringMachineCallStatus(v4);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 72);
    if (v9)
    {
      uint64_t v27 = *(void *)(v0 + 120);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446466;
      swift_release();
      uint64_t v15 = swift_release();
      log = v8;
      *(void *)(v0 + 56) = OUTLINED_FUNCTION_3_131(v15, v16, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_13_76();
      OUTLINED_FUNCTION_11_74();
      uint64_t v17 = AnsweringMachineCallStatus.description.getter();
      unint64_t v19 = v18;
      outlined release of AnsweringMachineCallStatus(v13);
      *(void *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of AnsweringMachineCallStatus(v13);
      outlined release of AnsweringMachineCallStatus(v13);
      _os_log_impl(&dword_1C2F90000, log, type, "%{public}s recieved callUpdate %{public}s", v14, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

      unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v20(v10, v27);
    }
    else
    {
      swift_release_n();
      swift_release_n();
      outlined release of AnsweringMachineCallStatus(v13);
      outlined release of AnsweringMachineCallStatus(v13);

      unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v20(v10, v12);
    }
    *(void *)(v0 + 184) = v20;
    id v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v23;
    *id v23 = v0;
    v23[1] = CallScreeningListeningState.update(with:);
    OUTLINED_FUNCTION_7_6();
    __asm { BRAA            X1, X16 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_7_6();
  __asm { BRAA            X1, X16 }
}

void closure #1 in CallScreeningListeningState.update(with:)(long long *a1)
{
  outlined init with take of CallScreening.State(a1, (uint64_t)v3);
  unint64_t v1 = v4;
  v4 &= 0x1FFFFFFFFFFFFFFFuLL;
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  uint64_t v2 = (void *)swift_allocError();
  if (v1 >> 61 == 1) {

  }
  else {
    swift_willThrow();
  }
}

uint64_t protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningListeningState<A>(void *a1, uint64_t a2)
{
  return CallScreeningListeningState.willExit(to:)(a1, *v2, v2[1], v2[2], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningListeningState<A>()
{
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningListeningState<A>()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningListeningState<A>;
  return CallScreeningListeningState.update(with:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  unint64_t v1 = *v0;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t static CallScreeningListeningState.== infix(_:_:)()
{
  return 1;
}

uint64_t CallScreeningListeningState.description.getter()
{
  return 0x6E696E657473694CLL;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CallScreeningListeningState<A>()
{
  return 0x6E696E657473694CLL;
}

uint64_t instantiation function for generic protocol witness table for CallScreeningListeningState<A>(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for CallScreeningListeningState()
{
  swift_release();
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for CallScreeningListeningState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CallScreeningListeningState(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningListeningState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t ClarityUIFavorite.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClarityUIFavorite.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClarityUIFavorite.actions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ClarityUIFavorite.actions.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIFavorite.contact.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)v1[3];
  uint64_t v3 = (void *)v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  id v6 = v2;
  id v7 = v3;
  return swift_bridgeObjectRetain();
}

__n128 ClarityUIFavorite.contact.setter(__n128 *a1)
{
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  uint64_t v5 = (void *)v1[3];
  id v6 = (void *)v1[4];
  swift_bridgeObjectRelease();

  __n128 result = *a1;
  *(__n128 *)(v1 + 3) = *a1;
  v1[5] = v3;
  v1[6] = v4;
  return result;
}

uint64_t (*ClarityUIFavorite.contact.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void __swiftcall ClarityUIFavorite.init(id:actions:contact:)(ConversationKit::ClarityUIFavorite *__return_ptr retstr, Swift::String id, Swift::OpaquePointer actions, ConversationKit::ClarityUIContact contact)
{
  uint64_t v4 = *((void *)contact.cnContact.super.isa + 2);
  uint64_t v5 = (void *)*((void *)contact.cnContact.super.isa + 3);
  retstr->id = id;
  retstr->actions = actions;
  *(_OWORD *)&retstr->contact.cnContact.super.Class isa = *(_OWORD *)contact.cnContact.super.isa;
  retstr->contact.id._countAndFlagsBits = v4;
  retstr->contact.id._object = v5;
}

uint64_t static ClarityUIFavorite.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t ClarityUIFavorite.hash(into:)()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int ClarityUIFavorite.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIFavorite()
{
  return Hasher._finalize()();
}

Swift::Void __swiftcall CNFavoritesEntry.makeCall()()
{
  void v2[4] = closure #1 in CNFavoritesEntry.makeCall();
  v2[5] = 0;
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 1107296256;
  v2[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v2[3] = &block_descriptor_99;
  uint64_t v1 = _Block_copy(v2);
  objc_msgSend(v0, sel_performActionWithCompletion_, v1);
  _Block_release(v1);
}

uint64_t closure #1 in CNFavoritesEntry.makeCall()(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t result = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v6 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
    type metadata accessor for MainActor();
    id v7 = a1;
    uint64_t v8 = static MainActor.shared.getter();
    BOOL v9 = (void *)swift_allocObject();
    uint64_t v10 = MEMORY[0x1E4FBCFD8];
    _OWORD v9[2] = v8;
    v9[3] = v10;
    v9[4] = a1;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in CNFavoritesEntry.makeCall()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 64) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #1 in CNFavoritesEntry.makeCall(), v6, v5);
}

uint64_t closure #1 in closure #1 in CNFavoritesEntry.makeCall()()
{
  uint64_t v15 = v0;
  swift_release();
  if (one-time initialization token for clarityUI != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.clarityUI);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[7];
  if (v7)
  {
    BOOL v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)BOOL v9 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = Error.localizedDescription.getter();
    v0[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v5, v6, "Unable to call favorite. Error: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t CNFavoritesEntry.callType.getter()
{
  uint64_t v1 = objc_msgSend(v0, sel_actionType);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v7 = OUTLINED_FUNCTION_0_14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_16:

    return 0;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = OUTLINED_FUNCTION_0_14();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      if (one-time initialization token for clarityUI != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Log.clarityUI);
      id v15 = v0;
      uint64_t v1 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v1, v16))
      {

        return 0;
      }
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      id v18 = objc_msgSend(v15, sel_actionType);
      type metadata accessor for CNActionType(0);
      uint64_t v19 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v1, v16, "Unhandled action type for favorite: %s", v17, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
      goto LABEL_16;
    }
  }
  return 1;
}

uint64_t destroy for ClarityUIFavorite(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClarityUIFavorite(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  os_log_type_t v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClarityUIFavorite(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[3];
  uint64_t v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  id v7 = (void *)a2[4];
  id v8 = (void *)a1[4];
  a1[4] = v7;
  id v9 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClarityUIFavorite(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIFavorite()
{
  return &type metadata for ClarityUIFavorite;
}

uint64_t sub_1C3599078()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CNFavoritesEntry.makeCall()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in closure #1 in CNFavoritesEntry.makeCall()(a1, v4, v5, v6);
}

void TUStringShareItem.activityViewControllerPlaceholderItem(_:)(void *a1@<X8>)
{
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

id @objc TUStringShareItem.activityViewControllerPlaceholderItem(_:)()
{
  TUStringShareItem.activityViewControllerPlaceholderItem(_:)(v2);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  uint64_t v0 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return v0;
}

double TUStringShareItem.activityViewController(_:itemForActivityType:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_7:
      id v10 = objc_msgSend(v2, sel_message);
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];
      *(void *)a2 = v11;
      *(void *)(a2 + 8) = v13;
      return result;
    }
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

id @objc TUStringShareItem.activityViewController(_:itemForActivityType:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  TUStringShareItem.activityViewController(_:itemForActivityType:)((uint64_t)a4, (uint64_t)v17);

  uint64_t v9 = v18;
  if (v18)
  {
    id v10 = __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = MEMORY[0x1F4188790](v10);
    uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    id v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    id v15 = 0;
  }
  return v15;
}

LPLinkMetadata_optional __swiftcall TUStringShareItem.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  uint64_t v1 = 0;
  result.value.super.Class isa = v1;
  return result;
}

id @objc TUStringShareItem.activityViewControllerLinkMetadata(_:)()
{
  return 0;
}

uint64_t LinkDetailParticipantCollectionViewCell.style.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[3];
  long long v10 = *((_OWORD *)a1 + 2);
  long long v11 = *(_OWORD *)(a1 + 1);
  uint64_t v4 = a1[6];
  uint64_t v5 = v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  id v6 = *(void **)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  unint64_t v8 = *(void *)(v5 + 16);
  *(void *)uint64_t v5 = v2;
  *(_OWORD *)(v5 + 8) = v11;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v10;
  *(void *)(v5 + 48) = v4;
  outlined consume of LinkDetailParticipantCollectionViewCell.Style(v6, v7, v8);
  return LinkDetailParticipantCollectionViewCell.applyStyle()();
}

uint64_t LinkDetailParticipantCollectionViewCell.Style.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return 0;
  }
  if (v1 == 1)
  {
    id v2 = objc_msgSend(self, sel_conversationKit);
    v8._object = (void *)0xE000000000000000;
    v3._uint64_t countAndFlagsBits = 0x454D495445434146;
    v3._object = (void *)0xEE004C4542414C5FLL;
    v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v4.value._object = (void *)0xEF74694B6E6F6974;
    v5._uint64_t countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v8._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v8)._countAndFlagsBits;
  }
  else
  {
    uint64_t countAndFlagsBits = *(void *)(v0 + 8);
    swift_bridgeObjectRetain();
  }
  return countAndFlagsBits;
}

void *LinkDetailParticipantCollectionViewCell.style.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  Swift::String_optional v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  unint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  *a1 = *(void *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  return outlined copy of LinkDetailParticipantCollectionViewCell.Style(v4, v5, v6);
}

void *key path getter for LinkDetailParticipantCollectionViewCell.style : LinkDetailParticipantCollectionViewCell@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  Swift::String_optional v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  unint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  *a2 = *(void *)v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  return outlined copy of LinkDetailParticipantCollectionViewCell.Style(v4, v5, v6);
}

uint64_t key path setter for LinkDetailParticipantCollectionViewCell.style : LinkDetailParticipantCollectionViewCell(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  id v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  Swift::String_optional v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t v6 = *(void **)(a1 + 48);
  v8[0] = *(void **)a1;
  v8[1] = v1;
  v8[2] = v2;
  v8[3] = v3;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v6;
  outlined copy of LinkDetailParticipantCollectionViewCell.Style(v8[0], (uint64_t)v1, (unint64_t)v2);
  return LinkDetailParticipantCollectionViewCell.style.setter((uint64_t *)v8);
}

uint64_t LinkDetailParticipantCollectionViewCell.applyStyle()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICellAccessory();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  id v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v32 = (char *)&v30 - v7;
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  __n128 v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1C8773D30](v10);
  uint64_t v13 = v0 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    if (v14 == 1)
    {
      id v15 = objc_msgSend(self, sel_conversationKit);
      v35._object = (void *)0xE000000000000000;
      v16._uint64_t countAndFlagsBits = 0x454D495445434146;
      v16._object = (void *)0xEE004C4542414C5FLL;
      v17.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
      v17.value._object = (void *)0xEF74694B6E6F6974;
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      v35._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v35);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  UIListContentConfiguration.text.setter();
  id v19 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2908]);
  unint64_t v20 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v20(v34, 0);
  UIListContentConfiguration.directionalLayoutMargins.setter();
  v34[3] = v8;
  v34[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v12, v8);
  MEMORY[0x1C8773CD0](v34);
  v34[0] = MEMORY[0x1E4FBC860];
  LinkDetailParticipantCollectionViewCell.styleAccessories.getter();
  specialized Array.append<A>(contentsOf:)();
  LinkDetailParticipantCollectionViewCell.avatarAccessory()((uint64_t)v3);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    outlined destroy of Conversation?((uint64_t)v3, &demangling cache variable for type metadata for UICellAccessory?);
  }
  else
  {
    id v23 = v32;
    uint64_t v22 = v33;
    id v24 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v24(v32, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v31, v23, v4);
    uint64_t v25 = v34[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    if (v27 >= v26 >> 1) {
      uint64_t v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v27 + 1;
    uint64_t v28 = v33;
    v24((char *)(v25+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v33 + 72) * v27), v31, v4);
    v34[0] = v25;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v4);
  }
  UICollectionViewListCell.accessories.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t (*LinkDetailParticipantCollectionViewCell.style.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return LinkDetailParticipantCollectionViewCell.style.modify;
}

uint64_t LinkDetailParticipantCollectionViewCell.style.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return LinkDetailParticipantCollectionViewCell.applyStyle()();
  }
  return result;
}

void *LinkDetailParticipantCollectionViewCell.avatarController.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void LinkDetailParticipantCollectionViewCell.avatarController.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*LinkDetailParticipantCollectionViewCell.avatarController.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id LinkDetailParticipantCollectionViewCell.joinButton.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  return v1;
}

void LinkDetailParticipantCollectionViewCell.joinButton.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*LinkDetailParticipantCollectionViewCell.joinButton.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

id LinkDetailParticipantCollectionViewCell.joinButtonFont.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont));
}

void one-time initialization function for maxWidth()
{
  static LinkDetailParticipantCollectionViewCell.maxWidth = 0x4054000000000000;
}

uint64_t *LinkDetailParticipantCollectionViewCell.maxWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for maxWidth != -1) {
    swift_once();
  }
  return &static LinkDetailParticipantCollectionViewCell.maxWidth;
}

double static LinkDetailParticipantCollectionViewCell.maxWidth.getter()
{
  if (one-time initialization token for maxWidth != -1) {
    swift_once();
  }
  return *(double *)&static LinkDetailParticipantCollectionViewCell.maxWidth;
}

uint64_t LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth);
  if (v2 == 2)
  {
    swift_getObjectType();
    char v3 = closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter(v0);
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    char v3 = v2 & 1;
  }
  return v3 & 1;
}

BOOL closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  v16._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C37B52B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v16);

  uint64_t v7 = (void *)MEMORY[0x1C87730B0](v6._countAndFlagsBits, v6._object);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  uint64_t v9 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont);
  *(void *)(inited + 64) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  *(void *)(inited + 40) = v10;
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  id v11 = v9;
  id v12 = v10;
  uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
  double v14 = outlined bridged method (mbnn) of @objc NSString.size(withAttributes:)(v13, v7);

  if (one-time initialization token for maxWidth != -1) {
    swift_once();
  }
  return *(double *)&static LinkDetailParticipantCollectionViewCell.maxWidth < v14;
}

uint64_t LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  Swift::String v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = v1
     + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonConfiguration;
  swift_beginAccess();
  outlined init with copy of UIButton.Configuration?(v9, (uint64_t)v8);
  uint64_t v10 = type metadata accessor for UIButton.Configuration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v8, v10);
  }
  outlined destroy of Conversation?((uint64_t)v8, &demangling cache variable for type metadata for UIButton.Configuration?);
  closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter(v1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of UIButton.Configuration?((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  if (LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter())
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    @nonobjc UIImage.__allocating_init(systemName:)();
    UIButton.Configuration.image.setter();
    id v6 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB28C8], 2);
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    uint64_t v24 = (uint64_t)&v24;
    MEMORY[0x1F4188790](v7 - 8);
    uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v10 = objc_msgSend(self, sel_conversationKit);
    v27._object = (void *)0xE000000000000000;
    v11._object = (void *)0x80000001C37B52B0;
    v11._uint64_t countAndFlagsBits = 0xD000000000000012;
    v12.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v12.value._object = (void *)0xEF74694B6E6F6974;
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v27._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v27);

    uint64_t v14 = type metadata accessor for AttributeContainer();
    MEMORY[0x1F4188790](v14 - 8);
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    uint64_t v15 = type metadata accessor for AttributedString();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v15);
    UIButton.Configuration.attributedTitle.setter();
    Swift::String v16 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
    if (!__swift_getEnumTagSinglePayload(v17, 1, v15))
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath);
      swift_getKeyPath();
      uint64_t v25 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont);
      id v19 = v25;
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      id v20 = v19;
      AttributedString.subscript.setter();
    }
    v16(v26, 0);
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FB1218], v2);
  UIButton.Configuration.cornerStyle.setter();
  UIButton.Configuration.contentInsets.setter();
  if (one-time initialization token for systemGreenWithUserInterfaceStyleLight != -1) {
    swift_once();
  }
  id v21 = (id)static UIColor.systemGreenWithUserInterfaceStyleLight;
  uint64_t v22 = (uint64_t (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  return v22(v26, 0);
}

id LinkDetailParticipantCollectionViewCell.imageView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView);
  }
  else
  {
    id v4 = closure #1 in LinkDetailParticipantCollectionViewCell.imageView.getter();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in LinkDetailParticipantCollectionViewCell.imageView.getter()
{
  id v0 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB2998], 2);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  id v1 = v0;
  id v2 = @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(0x69662E6F65646976, 0xEA00000000006C6CLL, v0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v2);
  id v4 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v3, sel_setTintColor_, v4);

  return v3;
}

uint64_t LinkDetailParticipantCollectionViewCell.styleAccessories.getter()
{
  uint64_t v1 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  Swift::String v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  if (v13 == 1)
  {
    char v14 = LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    uint64_t v15 = *(void *)(type metadata accessor for UICellAccessory() - 8);
    uint64_t v16 = *(void *)(v15 + 72);
    unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v18 = swift_allocObject();
    if (v14)
    {
      *(_OWORD *)(v18 + 16) = xmmword_1C3769620;
      uint64_t v19 = v18 + v17;
    }
    else
    {
      *(_OWORD *)(v18 + 16) = xmmword_1C37696D0;
      LinkDetailParticipantCollectionViewCell.imageAccessory()(v18 + v17);
      uint64_t v19 = v18 + v17 + v16;
    }
    LinkDetailParticipantCollectionViewCell.joinAccessory()(v19);
  }
  else
  {
    uint64_t v20 = type metadata accessor for UICellAccessory.LayoutDimension();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v20);
    id v21 = objc_msgSend(self, sel_secondaryLabelColor);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    type metadata accessor for UICellAccessory();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C3769620;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FB0E18], v1);
    static UICellAccessory.disclosureIndicator(displayed:options:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v18;
}

uint64_t LinkDetailParticipantCollectionViewCell.joinAccessory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v9 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  Swift::String v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton);
  swift_beginAccess();
  id v16 = *v15;
  LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter((uint64_t)v14);
  uint64_t v17 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v17);
  UIButton.configuration.setter();

  id v18 = *v15;
  uint64_t v19 = (uint64_t (**)())&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  uint64_t v20 = *MEMORY[0x1E4FB0E18];
  uint64_t v21 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v8, v20, v21);
  void *v19 = OUTLINED_FUNCTION_17_1;
  v19[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB0E60], v5);
  uint64_t v22 = *MEMORY[0x1E4FB0E28];
  uint64_t v23 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v4, v22, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v23);
  id v24 = v18;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v27);
}

uint64_t LinkDetailParticipantCollectionViewCell.imageAccessory()@<X0>(uint64_t a1@<X8>)
{
  v17[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  Swift::String v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LinkDetailParticipantCollectionViewCell.imageView.getter();
  uint64_t v12 = (uint64_t (**)(uint64_t))&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                                     + 48)];
  uint64_t v13 = *MEMORY[0x1E4FB0E18];
  uint64_t v14 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v7, v13, v14);
  *uint64_t v12 = specialized NoticeQueueStore.count.getter;
  v12[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FB0E58], v4);
  uint64_t v15 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v15);
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id LinkDetailParticipantCollectionViewCell.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

id LinkDetailParticipantCollectionViewCell.init(frame:)()
{
  id v1 = v0;
  OUTLINED_FUNCTION_7();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = &v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((void *)v3 + 6) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController] = 0;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton;
  uint64_t v5 = self;
  uint64_t v6 = v0;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_buttonWithType_, 1);
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09B8]);
  if (result)
  {
    *(void *)&v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont] = result;
    v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth] = 2;
    uint64_t v8 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonConfiguration];
    uint64_t v9 = type metadata accessor for UIButton.Configuration();
    __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
    *(void *)&v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView] = 0;

    double v10 = OUTLINED_FUNCTION_6_2();
    return objc_msgSendSuper2(v11, v12, v10, v6, ObjectType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id LinkDetailParticipantCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LinkDetailParticipantCollectionViewCell.init(coder:)()
{
  id v1 = &v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((void *)v1 + 6) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController] = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton;
  *(void *)&v0[v2] = objc_msgSend(self, sel_buttonWithType_, 1);
  id v3 = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09B8]);
  if (!v3) {
    __break(1u);
  }
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont] = v3;
  v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth] = 2;
  uint64_t v4 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonConfiguration];
  uint64_t v5 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall LinkDetailParticipantCollectionViewCell.prepareForReuse()()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_prepareForReuse);
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  LinkDetailParticipantCollectionViewCell.style.setter((uint64_t *)v3);
  id v1 = (void **)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController];
  swift_beginAccess();
  uint64_t v2 = *v1;
  *id v1 = 0;

  UICollectionViewListCell.accessories.setter();
}

id LinkDetailParticipantCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ObjC metadata update function for LinkDetailParticipantCollectionViewCell()
{
  return type metadata accessor for LinkDetailParticipantCollectionViewCell();
}

uint64_t type metadata accessor for LinkDetailParticipantCollectionViewCell()
{
  uint64_t result = type metadata singleton initialization cache for LinkDetailParticipantCollectionViewCell;
  if (!type metadata singleton initialization cache for LinkDetailParticipantCollectionViewCell) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for LinkDetailParticipantCollectionViewCell()
{
  type metadata accessor for UIButton.Configuration?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t destroy for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    id v3 = *(void **)a1;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    uint64_t v4 = *(void **)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v3;
    *(void *)(a1 + 24) = v6;
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    id v10 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 2);
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      uint64_t v8 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      id v9 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v10 = *a2;
    long long v11 = a2[1];
    long long v12 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  id v5 = *(id *)a1;
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v7 = v6;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    uint64_t v8 = *(void **)a1;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LinkDetailParticipantCollectionViewCell.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

double destructiveInjectEnumTag for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkDetailParticipantCollectionViewCell.Style()
{
  return &type metadata for LinkDetailParticipantCollectionViewCell.Style;
}

uint64_t LinkDetailParticipantCollectionViewCell.avatarAccessory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  unint64_t v14 = *(void *)(v13 + 16);
  if (v14 < 2) {
    goto LABEL_9;
  }
  uint64_t v57 = v5;
  unint64_t v58 = v8;
  uint64_t v55 = v12;
  uint64_t v56 = v4;
  uint64_t v59 = v6;
  uint64_t v60 = v10;
  uint64_t v15 = *(void **)v13;
  uint64_t v61 = *(void *)(v13 + 8);
  uint64_t v17 = *(void *)(v13 + 24);
  uint64_t v16 = *(void *)(v13 + 32);
  uint64_t v19 = *(void *)(v13 + 40);
  uint64_t v18 = *(void *)(v13 + 48);
  uint64_t v20 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (!*v20) {
    goto LABEL_9;
  }
  uint64_t v54 = v17;
  id v22 = v15;
  unint64_t v23 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = objc_msgSend(v21, sel_view);
  if (!v24)
  {
    outlined consume of LinkDetailParticipantCollectionViewCell.Style(v15, v61, v14);
LABEL_9:
    uint64_t v35 = 1;
    uint64_t v36 = v62;
    goto LABEL_10;
  }
  id v50 = v24;
  uint64_t v51 = v16;
  uint64_t v52 = v19;
  uint64_t v53 = v18;
  id v25 = v22;
  uint64_t v26 = v15;
  if (!v15) {
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B8F8]), sel_init);
  }
  uint64_t v27 = *v20;
  uint64_t v49 = v9;
  uint64_t v29 = v57;
  uint64_t v28 = v58;
  if (v27)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1C3769830;
    *(void *)(v30 + 32) = v25;
    uint64_t v63 = v30;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    id v31 = v22;
    id v32 = v27;
    id v33 = v25;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v32, sel_setContacts_, isa);

    uint64_t v26 = v15;
  }
  else
  {
    id v39 = v22;
  }
  uint64_t v40 = v25;
  id v42 = v55;
  uint64_t v41 = (uint64_t)v56;
  id v43 = v50;
  objc_msgSend(v50, sel_setFrame_, 0.0, 0.0, 37.0, 37.0, v49);
  id v44 = (uint64_t (**)(uint64_t))&v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                                      + 48)];
  uint64_t v45 = *MEMORY[0x1E4FB0E18];
  uint64_t v46 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v28, v45, v46);
  *id v44 = specialized NoticeQueueStore.count.getter;
  v44[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v28, *MEMORY[0x1E4FB0E58], v29);
  uint64_t v47 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload(v41, 1, 1, v47);
  id v48 = v43;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  uint64_t v36 = v62;
  static UICellAccessory.customView(configuration:)();
  outlined consume of LinkDetailParticipantCollectionViewCell.Style(v26, v61, v23);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v49);
  uint64_t v35 = 0;
LABEL_10:
  uint64_t v37 = type metadata accessor for UICellAccessory();
  return __swift_storeEnumTagSinglePayload(v36, v35, 1, v37);
}

uint64_t sub_1C359C0DC()
{
  return 8;
}

uint64_t sub_1C359C0E8()
{
  return swift_release();
}

uint64_t sub_1C359C0F0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1C359C104(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

double outlined bridged method (mbnn) of @objc NSString.size(withAttributes:)(uint64_t a1, void *a2)
{
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_sizeWithAttributes_, isa);
  double v5 = v4;

  return v5;
}

uint64_t specialized Sequence.flatMap<A>(_:)(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](i - 4, a1) : *(id *)(a1 + 8 * i);
      double v5 = v4;
      uint64_t v6 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_windows);
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIWindow);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      specialized Array.append<A>(contentsOf:)();
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIAlertController.show()()
{
  uint64_t v1 = UIAlertController.keyWindowScene.getter();
  id v2 = objc_msgSend(v1, sel_keyWindow);

  if (v2)
  {
LABEL_4:
    id v4 = objc_msgSend(v2, sel_rootViewController);
    if (v4)
    {
      double v5 = v4;
      objc_msgSend(v4, sel_presentViewController_animated_completion_, v0, 1, 0);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationKit);
      id v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_1C2F90000, v7, v8, "SERIOUS ERROR: Failed to find a viewcontroller to preset UIAlertController", v9, 2u);
        MEMORY[0x1C87760E0](v9, -1, -1);
      }

      lazy protocol witness table accessor for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError();
      swift_allocError();
      OUTLINED_FUNCTION_5_6(v10, 0xD00000000000002CLL);
    }
    return;
  }
  uint64_t v3 = UIAlertController.topLevelWindow.getter();
  if (v3)
  {
    id v2 = (id)v3;
    goto LABEL_4;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationKit);
  long long v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v14 = 0;
    _os_log_impl(&dword_1C2F90000, v12, v13, "SERIOUS ERROR: Failed to find top window to preset UIAlertController", v14, 2u);
    MEMORY[0x1C87760E0](v14, -1, -1);
  }

  lazy protocol witness table accessor for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError();
  swift_allocError();
  OUTLINED_FUNCTION_5_6(v15, 0xD000000000000023);
}

unint64_t UIAlertController.FailedToFindWindowError.init()()
{
  return 0xD000000000000023;
}

uint64_t UIAlertController.FailedToFindVCError.message.getter(uint64_t a1)
{
  return a1;
}

unint64_t UIAlertController.FailedToFindVCError.init()()
{
  return 0xD00000000000002CLL;
}

uint64_t UIAlertController.alertWindow.getter()
{
  uint64_t v0 = static UIAlertController.alertWindow;
  id v1 = (id)static UIAlertController.alertWindow;
  return v0;
}

void key path setter for UIAlertController.alertWindow : UIAlertController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  UIAlertController.alertWindow.setter((uint64_t)v1);
}

void UIAlertController.alertWindow.setter(uint64_t a1)
{
  id v1 = (void *)static UIAlertController.alertWindow;
  static UIAlertController.alertWindow = a1;
}

void (*UIAlertController.alertWindow.modify(void *a1))(uint64_t *a1)
{
  id v1 = (void *)static UIAlertController.alertWindow;
  *a1 = static UIAlertController.alertWindow;
  id v2 = v1;
  return UIAlertController.alertWindow.modify;
}

void UIAlertController.alertWindow.modify(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = (void *)static UIAlertController.alertWindow;
  static UIAlertController.alertWindow = v1;
}

void *UIAlertController.keyWindowScene.getter()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  unint64_t v1 = UIApplication.connectedWindowScenes.getter();

  if (v1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      double v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v4, sel__isKeyWindowScene))
      {
        type metadata accessor for ActivityScene();
        if (!swift_dynamicCastClass())
        {
          swift_bridgeObjectRelease_n();
          return v5;
        }
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t UIAlertController.topLevelWindow.getter()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  unint64_t v1 = UIApplication.connectedAppWindows.getter();

  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v2 = specialized _copyCollectionToContiguousArray<A>(_:)(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = v2;
  specialized MutableCollection<>.sort(by:)(&v8);
  swift_bridgeObjectRelease();
  uint64_t v3 = v8;
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(v8 + 16);
    if (!v4) {
      goto LABEL_10;
    }
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0) {
    id v5 = (id)MEMORY[0x1C87744F0](0, v3);
  }
  else {
    id v5 = *(id *)(v3 + 32);
  }
  uint64_t v4 = (uint64_t)v5;
LABEL_10:
  swift_release();
  return v4;
}

unint64_t lazy protocol witness table accessor for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError()
{
  unint64_t result = lazy protocol witness table cache variable for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError;
  if (!lazy protocol witness table cache variable for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError);
  }
  return result;
}

uint64_t UIApplication.connectedWindowScenes.getter()
{
  id v1 = objc_msgSend(v0, sel_connectedScenes);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIScene);
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t UIApplication.connectedAppWindows.getter()
{
  unint64_t result = UIApplication.connectedWindowScenes.getter();
  unint64_t v1 = result;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  if (!(result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_15:
    uint64_t v7 = specialized Sequence.flatMap<A>(_:)(v6);
    swift_release();
    return v7;
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v4 = (id)MEMORY[0x1C87744F0](i, v1);
      }
      else {
        id v4 = *(id *)(v1 + 8 * i + 32);
      }
      id v5 = v4;
      type metadata accessor for ActivityScene();
      if (swift_dynamicCastClass())
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v6 = v8;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError()
{
  unint64_t result = lazy protocol witness table cache variable for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError;
  if (!lazy protocol witness table cache variable for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError);
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **a1, id *a2, unint64_t a3, void **a4)
{
  unint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    id v38 = a4;
    long long v12 = &a4[v11];
    if (v7 >= v6 || v10 <= 7)
    {
LABEL_39:
      unint64_t v14 = v38;
      goto LABEL_40;
    }
    type metadata accessor for UIWindowLevel(0);
    id v24 = (id *)(a3 - 8);
    while (1)
    {
      id v39 = v24 + 1;
      uint64_t v41 = v6;
      id v25 = v12 - 1;
      uint64_t v26 = v6;
      unint64_t v27 = (unint64_t)v12;
      uint64_t v29 = *(v26 - 1);
      uint64_t v28 = v26 - 1;
      id v30 = *(v12 - 1);
      id v31 = v29;
      objc_msgSend(v30, sel_windowLevel);
      objc_msgSend(v31, sel_windowLevel);
      lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel();
      char v32 = dispatch thunk of static Comparable.< infix(_:_:)();

      if (v32)
      {
        BOOL v33 = v39 != v41 || v24 >= v41;
        id v34 = v38;
        long long v12 = (void **)v27;
        unint64_t v6 = v28;
        if (!v33) {
          goto LABEL_35;
        }
      }
      else
      {
        id v34 = v38;
        BOOL v35 = v39 != (id *)v27 || (unint64_t)v24 >= v27;
        uint64_t v28 = v25;
        long long v12 = v25;
        unint64_t v6 = v41;
        if (!v35) {
          goto LABEL_35;
        }
      }
      *id v24 = *v28;
LABEL_35:
      --v24;
      if (v6 <= v7 || v12 <= v34) {
        goto LABEL_39;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2 - a1, a4);
  long long v12 = &a4[v9];
  BOOL v13 = (unint64_t)v6 >= a3 || v8 <= 7;
  unint64_t v14 = a4;
  if (!v13)
  {
    type metadata accessor for UIWindowLevel(0);
    unint64_t v40 = a3;
    do
    {
      unint64_t v15 = (unint64_t)v12;
      uint64_t v16 = *v14;
      id v17 = *v6;
      id v18 = v16;
      objc_msgSend(v17, sel_windowLevel);
      objc_msgSend(v18, sel_windowLevel);
      lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel();
      char v19 = dispatch thunk of static Comparable.< infix(_:_:)();

      if (v19)
      {
        uint64_t v20 = v6;
        BOOL v21 = v7 == v6++;
      }
      else
      {
        uint64_t v20 = v14;
        BOOL v21 = v7 == v14++;
      }
      long long v12 = (void **)v15;
      if (!v21) {
        NSObject *v7 = *v20;
      }
      ++v7;
    }
    while ((unint64_t)v14 < v15 && (unint64_t)v6 < v40);
  }
  unint64_t v6 = v7;
LABEL_40:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v14, v12 - v14, v6);
  return 1;
}

uint64_t sub_1C359DA34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UIAlertController.alertWindow.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for UIAlertController.FailedToFindWindowError()
{
  return &type metadata for UIAlertController.FailedToFindWindowError;
}

ValueMetadata *type metadata accessor for UIAlertController.FailedToFindVCError()
{
  return &type metadata for UIAlertController.FailedToFindVCError;
}

unint64_t lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel()
{
  unint64_t result = lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel;
  if (!lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel)
  {
    type metadata accessor for UIWindowLevel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UIScene and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type UIScene and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIScene and conformance NSObject)
  {
    type metadata accessor for NSObject(255, &lazy cache variable for type metadata for UIScene);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIScene and conformance NSObject);
  }
  return result;
}

id InCallControlsSectionHeaderView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

char *InCallControlsSectionHeaderView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);

  type metadata accessor for InCallControlsSectionHeaderView();
  double v4 = OUTLINED_FUNCTION_6_2();
  uint64_t v7 = (char *)objc_msgSendSuper2(v5, v6, v4);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel;
  uint64_t v9 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel];
  uint64_t v10 = self;
  uint64_t v11 = *MEMORY[0x1E4FB28F0];
  long long v12 = v7;
  id v13 = v9;
  id v14 = objc_msgSend(v10, sel_preferredFontForTextStyle_, v11);
  Class isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  objc_msgSend(v13, sel_setFont_, isa);
  uint64_t v16 = one-time initialization token for collectionViewSectionHeaderTitleLabel;
  id v17 = *(id *)&v7[v8];
  if (v16 != -1) {
    swift_once();
  }
  objc_msgSend(v17, sel_setTextColor_, static Colors.InCallControls.collectionViewSectionHeaderTitleLabel);

  id v18 = *(void **)&v7[v8];
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v12, sel_addSubview_, v18);
  char v19 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C3769580;
  id v21 = objc_msgSend(v18, sel_leadingAnchor);
  id v22 = objc_msgSend(v12, sel_leadingAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, 16.0);

  *(void *)(v20 + 32) = v23;
  id v24 = objc_msgSend(*(id *)&v7[v8], sel_trailingAnchor);
  id v25 = objc_msgSend(v12, sel_trailingAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, -16.0);

  *(void *)(v20 + 40) = v26;
  id v27 = objc_msgSend(*(id *)&v7[v8], sel_topAnchor);
  id v28 = objc_msgSend(v12, sel_topAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v28, 0.0);

  *(void *)(v20 + 48) = v29;
  id v30 = objc_msgSend(*(id *)&v7[v8], sel_bottomAnchor);
  id v31 = objc_msgSend(v12, sel_bottomAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, -4.0);

  *(void *)(v20 + 56) = v32;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  Class v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_activateConstraints_, v33);

  return v12;
}

uint64_t type metadata accessor for InCallControlsSectionHeaderView()
{
  return self;
}

id InCallControlsSectionHeaderView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsSectionHeaderView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall InCallControlsSectionHeaderView.configure(with:)(ConversationKit::InCallControlsActivitySectionHeaderViewModel with)
{
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(with.title._countAndFlagsBits, (uint64_t)with.title._object, *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel));
}

id InCallControlsSectionHeaderView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsSectionHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for InCallControlsSectionHeaderView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InCallControlsSectionHeaderView);
}

uint64_t dispatch thunk of InCallControlsSectionHeaderView.configure(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t RosterVisibilityMonitor.sortedParticipantIDs.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t RosterVisibilityMonitor.participantVisibilityByID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RosterVisibilityMonitor.visibleParticipantRange.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t RosterVisibilityMonitor.visibleParticipantRange.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 32) = result;
  *(void *)(v2 + 40) = a2;
  return result;
}

void RosterVisibilityMonitor.rosterVisibilityIndices.getter()
{
  partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
  uint64_t v1 = MEMORY[0x1C8773490]();
  swift_bridgeObjectRelease();
  if (v1 < 1) {
    return;
  }
  RosterVisibilityMonitor.participantVisibilityByID.getter();
  uint64_t v2 = MEMORY[0x1C8772EE0]();
  swift_bridgeObjectRelease();
  if (v2 < 1)
  {
LABEL_13:
    partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
    uint64_t v16 = MEMORY[0x1C8773490]();
    swift_bridgeObjectRelease();
    if (v16 >= 1)
    {
      specialized _copyCollectionToContiguousArray<A>(_:)(1, v16);
      return;
    }
    goto LABEL_30;
  }
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  BOOL v5 = __OFSUB__(v4, v3);
  uint64_t v6 = v4 - v3;
  if (v5)
  {
    __break(1u);
    goto LABEL_29;
  }
  BOOL v5 = __OFADD__(v6, 1);
  uint64_t v7 = v6 + 1;
  if (v5)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v7 < 1) {
    goto LABEL_13;
  }
  partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
  uint64_t v8 = MEMORY[0x1C8773490]();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = v10 - v9;
  if (__OFSUB__(v10, v9))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
  uint64_t v13 = MEMORY[0x1C8773490]();
  swift_bridgeObjectRelease();
  if (v12 < v8)
  {
    uint64_t v14 = v13 - 1;
    if (!__OFSUB__(v13, 1))
    {
      if (v9)
      {
        if (v9 < 1)
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        uint64_t v15 = specialized _copyCollectionToContiguousArray<A>(_:)(1, v9);
        specialized Sequence.reversed()(v15);
      }
      uint64_t v17 = *(void *)(v0 + 32);
      uint64_t v18 = *(void *)(v0 + 40);
      BOOL v5 = __OFSUB__(v18, v17);
      uint64_t v19 = v18 - v17;
      if (!v5)
      {
        if (!__OFADD__(v19, 1))
        {
          specialized Array.init(repeating:count:)(0, v19 + 1);
          if (v10 == v14)
          {
LABEL_27:
            specialized Array.append<A>(contentsOf:)();
            specialized Array.append<A>(contentsOf:)();
            return;
          }
          uint64_t v20 = v14 - v10;
          if (!__OFSUB__(v14, v10))
          {
            if (v20 >= 1)
            {
              specialized _copyCollectionToContiguousArray<A>(_:)(1, v20);
              goto LABEL_27;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return;
        }
        goto LABEL_35;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  specialized Array.init(repeating:count:)(0, v13);
}

void specialized Sequence.reversed()(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 3; ; --i)
  {
    if (v3 == i - 4) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 16);
    if (v3 >= v6) {
      break;
    }
    if (i - 4 >= v6) {
      goto LABEL_12;
    }
    uint64_t v7 = *(void *)(v1 + 8 * v3 + 32);
    uint64_t v8 = *(void *)(v1 + 8 * i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t v1 = v9;
    }
    *(void *)(v1 + 8 * v3 + 32) = v8;
    *(void *)(v1 + 8 * i) = v7;
LABEL_9:
    if (v4 == ++v3) {
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

Swift::Void __swiftcall RosterVisibilityMonitor.onRosterParticipantsDidUpdate(_:)(Swift::OpaquePointer a1)
{
  partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
  char v1 = static Array<A>.== infix(_:_:)();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    uint64_t v3 = partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
    MEMORY[0x1F4188790](v3);
    type metadata accessor for Array();
    swift_getWitnessTable();
    Sequence.forEach(_:)();
    swift_bridgeObjectRelease();
    uint64_t v2 = swift_bridgeObjectRetain();
    RosterVisibilityMonitor.sortedParticipantIDs.setter(v2);
    RosterVisibilityMonitor.updateVisibleParticipantRange()();
  }
}

uint64_t closure #1 in RosterVisibilityMonitor.onRosterParticipantsDidUpdate(_:)()
{
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t result = Sequence<>.contains(_:)();
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    type metadata accessor for Dictionary();
    Dictionary.removeValue(forKey:)();
    return swift_endAccess();
  }
  return result;
}

uint64_t RosterVisibilityMonitor.onParticipant(_:didChangeVisibility:)(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_5_3();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  (*(void (**)(unsigned char *, __n128))(v6 + 16))(&v8[-v5], v4);
  v8[31] = a2;
  swift_beginAccess();
  type metadata accessor for Dictionary();
  Dictionary.subscript.setter();
  swift_endAccess();
  return RosterVisibilityMonitor.updateVisibleParticipantRange()();
}

uint64_t RosterVisibilityMonitor.updateVisibleParticipantRange()()
{
  uint64_t v54 = *v0;
  uint64_t v1 = *(void *)(v54 + 80);
  OUTLINED_FUNCTION_5_3();
  uint64_t v49 = v2;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v48 - v7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_5_3();
  uint64_t v57 = v10;
  uint64_t v58 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void *)((char *)v48 - v14);
  MEMORY[0x1F4188790](v16);
  uint64_t v52 = (char *)v48 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (void *)((char *)v48 - v19);
  uint64_t v56 = v0;
  uint64_t v60 = partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)();
  uint64_t v21 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C87732D0](v59, v21, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v23 = v59[0];
  uint64_t v60 = v59[0];
  uint64_t v24 = type metadata accessor for EnumeratedSequence();
  v48[0] = v23;
  swift_bridgeObjectRetain();
  v48[1] = v24;
  EnumeratedSequence.makeIterator()();
  uint64_t v25 = type metadata accessor for EnumeratedSequence.Iterator();
  id v26 = v52;
  uint64_t v51 = v25;
  EnumeratedSequence.Iterator.next()();
  id v27 = *(void (**)(void, void, void))(v58 + 32);
  v58 += 32;
  uint64_t v55 = v27;
  v27(v20, v26, v57);
  uint64_t v28 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, TupleTypeMetadata2) != 1)
  {
    id v50 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    id v29 = (void (**)(char *, uint64_t))(v49 + 8);
    while (1)
    {
      uint64_t v28 = *v20;
      v50(v8, (char *)v20 + *(int *)(TupleTypeMetadata2 + 48), v1);
      uint64_t v30 = RosterVisibilityMonitor.participantVisibilityByID.getter();
      MEMORY[0x1C8772F10](&v60, v8, v30, v1, MEMORY[0x1E4FBB390], *(void *)(v54 + 88));
      swift_bridgeObjectRelease();
      (*v29)(v8, v1);
      if v60 != 2 && (v60) {
        break;
      }
      EnumeratedSequence.Iterator.next()();
      OUTLINED_FUNCTION_1_140();
      v31();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, TupleTypeMetadata2) == 1)
      {
        uint64_t v28 = 0;
        break;
      }
    }
  }
  uint64_t v51 = v28;
  swift_bridgeObjectRelease();
  v59[0] = v48[0];
  swift_getWitnessTable();
  uint64_t v32 = Sequence.reversed()();
  uint64_t v33 = Array.startIndex.getter();
  v59[0] = v33;
  uint64_t v52 = (char *)(TupleTypeMetadata2 - 8);
  id v34 = (void (**)(char *, char *, uint64_t))(v49 + 32);
  BOOL v35 = (void (**)(char *, uint64_t))(v49 + 8);
  while (1)
  {
    if (v33 == MEMORY[0x1C87734C0](v32, TupleTypeMetadata2))
    {
      uint64_t v36 = (uint64_t)v53;
      uint64_t v37 = 1;
      goto LABEL_13;
    }
    Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)();
    if (!IsNativeType) {
      break;
    }
    id v39 = v53;
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 16))(v53, v32+ ((*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80))+ *(void *)(*(void *)(TupleTypeMetadata2 - 8) + 72) * v33, TupleTypeMetadata2);
LABEL_12:
    swift_bridgeObjectRetain();
    MEMORY[0x1C87734E0](v59, v32, TupleTypeMetadata2);
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t)v39;
    uint64_t v37 = 0;
LABEL_13:
    __swift_storeEnumTagSinglePayload(v36, v37, 1, TupleTypeMetadata2);
    OUTLINED_FUNCTION_1_140();
    v40();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, TupleTypeMetadata2) == 1)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v45 = 0;
      uint64_t v46 = v51;
LABEL_23:
      uint64_t v47 = v56;
      v56[4] = v46;
      v47[5] = v45;
      return result;
    }
    uint64_t v41 = *v15;
    (*v34)(v5, (char *)v15 + *(int *)(TupleTypeMetadata2 + 48), v1);
    uint64_t v42 = RosterVisibilityMonitor.participantVisibilityByID.getter();
    MEMORY[0x1C8772F10](&v60, v5, v42, v1, MEMORY[0x1E4FBB390], *(void *)(v54 + 88));
    swift_bridgeObjectRelease();
    (*v35)(v5, v1);
    if v60 != 2 && (v60)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v46 = v51;
      if (v41 <= v51) {
        uint64_t v45 = v51;
      }
      else {
        uint64_t v45 = v41;
      }
      goto LABEL_23;
    }
    uint64_t v33 = v59[0];
  }
  uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
  uint64_t v44 = *(void *)(TupleTypeMetadata2 - 8);
  if (*(void *)(v44 + 64) == 8)
  {
    uint64_t v60 = result;
    id v39 = v53;
    (*(void (**)(char *, uint64_t *, uint64_t))(v44 + 16))(v53, &v60, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t RosterVisibilityMonitor.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RosterVisibilityMonitor.__deallocating_deinit()
{
  RosterVisibilityMonitor.deinit();
  return swift_deallocClassInstance();
}

uint64_t RosterVisibilityMonitor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  RosterVisibilityMonitor.init()();
  return v0;
}

void *RosterVisibilityMonitor.init()()
{
  v0[2] = static Array._allocateUninitialized(_:)();
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();
  uint64_t v1 = Dictionary.init(dictionaryLiteral:)();
  v0[4] = 0;
  v0[5] = 0;
  v0[3] = v1;
  return v0;
}

uint64_t partial apply for closure #1 in RosterVisibilityMonitor.onRosterParticipantsDidUpdate(_:)()
{
  return closure #1 in RosterVisibilityMonitor.onRosterParticipantsDidUpdate(_:)();
}

uint64_t type metadata completion function for RosterVisibilityMonitor()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RosterVisibilityMonitor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for RosterVisibilityMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RosterVisibilityMonitor);
}

uint64_t dispatch thunk of RosterVisibilityMonitor.rosterVisibilityIndices.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of RosterVisibilityMonitor.onRosterParticipantsDidUpdate(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of RosterVisibilityMonitor.onParticipant(_:didChangeVisibility:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of RosterVisibilityMonitor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

void NameAndPhotoUtilities.pendingIncomingName(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_26_3();
  a23 = v24;
  a24 = v25;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 960))() & 1) == 0)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_17_59();
    id v27 = (void *)v26();
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_value);

      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      NameAndPhotoUtilities.allContactHandlesFromHandle(_:)(v30, v32);
      id v33 = NameAndPhotoUtilities.pendingIncomingIMNickname(from:)();
      swift_bridgeObjectRelease();
      if (v33)
      {
        swift_bridgeObjectRelease();
        static NameAndPhotoUtilities.formattedDisplayName(for:)(v33);

        goto LABEL_18;
      }
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v42 = type metadata accessor for Logger();
      OUTLINED_FUNCTION_16_58(v42, (uint64_t)static Logger.nickname);
      BOOL v35 = (void *)Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.error.getter();
      if (!OUTLINED_FUNCTION_107(v43))
      {

        OUTLINED_FUNCTION_3_9();
        goto LABEL_18;
      }
      OUTLINED_FUNCTION_37();
      a12 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_15_75(4.8149e-34);
      swift_bridgeObjectRetain();
      uint64_t v44 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &a12);
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_3_9();
      swift_bridgeObjectRelease();
      uint64_t v41 = "Couldnt find a pending IMNickname for handle %s";
    }
    else
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.conversationControls);
      swift_unknownObjectRetain_n();
      BOOL v35 = (void *)Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (!OUTLINED_FUNCTION_107(v36))
      {

        OUTLINED_FUNCTION_35_26();
        goto LABEL_18;
      }
      OUTLINED_FUNCTION_37();
      a12 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_15_75(4.8149e-34);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
      uint64_t v37 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &a12);
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_35_26();
      swift_bridgeObjectRelease();
      uint64_t v41 = "Couldnt find a pending IMNickname since cant find handle for call %s";
    }
    OUTLINED_FUNCTION_2_8(&dword_1C2F90000, v39, v40, v41);
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
LABEL_18:
  OUTLINED_FUNCTION_16();
}

void NameAndPhotoUtilities.sendNameAndPhoto(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  OUTLINED_FUNCTION_17_59();
  uint64_t v7 = (void *)v6();
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_value);

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    uint64_t v13 = NameAndPhotoUtilities.fromIDFromCall(_:)(a1, a2);
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      OUTLINED_FUNCTION_22_50(v17, (uint64_t)static Logger.nickname);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v36 = OUTLINED_FUNCTION_9_0();
        *uint64_t v20 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v21 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v36);
        OUTLINED_FUNCTION_34_36();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_3_9();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_10_12(&dword_1C2F90000, v23, v24, "Sharing name and photo handle id %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        OUTLINED_FUNCTION_3_9();
      }
      id v33 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
      uint64_t v34 = (void *)MEMORY[0x1C87730B0](v10, v12);
      swift_bridgeObjectRelease();
      BOOL v35 = (void *)MEMORY[0x1C87730B0](v15, v16);
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_sendPersonalNicknameToHandleID_fromHandleID_, v34, v35);
    }
    else
    {
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      OUTLINED_FUNCTION_16_58(v25, (uint64_t)static Logger.nickname);
      id v26 = (void *)Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_107(v27))
      {
        uint64_t v28 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v36 = OUTLINED_FUNCTION_9_0();
        _DWORD *v28 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v29 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v36);
        OUTLINED_FUNCTION_24_53();
        OUTLINED_FUNCTION_3_9();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_2_8(&dword_1C2F90000, v31, v32, "Cant share name and photo to handle id %s because of nil fromID");
        OUTLINED_FUNCTION_78_0();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        OUTLINED_FUNCTION_3_9();
      }
    }
  }
}

void NameAndPhotoUtilities.sendName(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  OUTLINED_FUNCTION_17_59();
  uint64_t v7 = (void *)v6();
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_value);

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    uint64_t v13 = NameAndPhotoUtilities.fromIDFromCall(_:)(a1, a2);
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      OUTLINED_FUNCTION_22_50(v17, (uint64_t)static Logger.nickname);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v38 = v15;
        uint64_t v20 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v39 = OUTLINED_FUNCTION_9_0();
        *uint64_t v20 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v21 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v39);
        OUTLINED_FUNCTION_34_36();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_3_9();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_10_12(&dword_1C2F90000, v23, v24, "Sharing only name to handle id %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        uint64_t v15 = v38;
        OUTLINED_FUNCTION_3();
      }
      else
      {

        OUTLINED_FUNCTION_3_9();
      }
      id v33 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
      if (objc_msgSend(v33, sel_respondsToSelector_, sel_sendNameOnlyToHandleIDs_fromHandleID_))
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1C3769620;
        *(void *)(v34 + 32) = v10;
        *(void *)(v34 + 40) = v12;
        id v35 = v33;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        uint64_t v37 = (void *)MEMORY[0x1C87730B0](v15, v16);
        objc_msgSend(v35, sel_sendNameOnlyToHandleIDs_fromHandleID_, isa, v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      OUTLINED_FUNCTION_16_58(v25, (uint64_t)static Logger.nickname);
      id v26 = (void *)Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_107(v27))
      {
        uint64_t v28 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v39 = OUTLINED_FUNCTION_9_0();
        _DWORD *v28 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v29 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v39);
        OUTLINED_FUNCTION_24_53();
        OUTLINED_FUNCTION_3_9();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_2_8(&dword_1C2F90000, v31, v32, "Cant share name and photo to handle id %s because of nil fromID");
        OUTLINED_FUNCTION_78_0();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        OUTLINED_FUNCTION_3_9();
      }
    }
  }
}

void NameAndPhotoUtilities.acceptIncomingName(from:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v108 = *MEMORY[0x1E4F143B8];
  swift_getObjectType();
  OUTLINED_FUNCTION_17_59();
  uint64_t v7 = (void *)v6();
  if (!v7)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.nickname);
    swift_unknownObjectRetain_n();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (!OUTLINED_FUNCTION_107(v37))
    {

      OUTLINED_FUNCTION_35_26();
      return;
    }
    OUTLINED_FUNCTION_37();
    v107 = (void *)OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_15_75(4.8149e-34);
    id v103 = a1;
    uint64_t v104 = a2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v38 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, (uint64_t *)&v107);
    OUTLINED_FUNCTION_11_75();
    OUTLINED_FUNCTION_35_26();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_8(&dword_1C2F90000, v40, v41, "Cannot accept incoming name because failed to find handle for activeCall %s");
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
LABEL_21:
    OUTLINED_FUNCTION_3();
    goto LABEL_22;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_value);

  uint64_t v10 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v13 = (void *)NameAndPhotoUtilities.allContactHandlesFromHandle(_:)((uint64_t)v10, v12);
  id v14 = NameAndPhotoUtilities.pendingIncomingIMNickname(from:)();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_16_58(v42, (uint64_t)static Logger.nickname);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (!OUTLINED_FUNCTION_105(v43))
    {

      OUTLINED_FUNCTION_3_9();
      return;
    }
    uint64_t v44 = (_DWORD *)OUTLINED_FUNCTION_37();
    id v103 = (id)OUTLINED_FUNCTION_9_0();
    *uint64_t v44 = 136315138;
    v107 = v13;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
    uint64_t v45 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, (uint64_t *)&v103);
    OUTLINED_FUNCTION_25_53();
    OUTLINED_FUNCTION_3_9();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_6(&dword_1C2F90000, v47, v48, "Cannot accept incoming name because couldnt find a pending IMNickname for handle %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    goto LABEL_21;
  }
  id v100 = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore);
  uint64_t v16 = (void *)MEMORY[0x1C87730B0](v10, v12);
  Class isa = (Class)objc_msgSend(self, sel_keysForNicknameHandling);
  if (!isa)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v18 = objc_msgSend(v15, sel_contactForDestinationId_keysToFetch_, v16, isa);

  if (v18)
  {
    id v19 = v18;
    objc_msgSend(v19, sel_mutableCopy);
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNMutableContact);
    if (swift_dynamicCast())
    {
      id v99 = v15;
      uint64_t v20 = v107;
      id v21 = objc_msgSend(v100, sel_firstName);
      if (!v21)
      {
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v21 = (id)MEMORY[0x1C87730B0](v22);
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v107, sel_setGivenName_, v21);

      id v23 = objc_msgSend(v100, sel_lastName);
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      outlined bridged method (mbnn) of @objc CNMutableContact.lastName.setter(v24, v26, v107);
      id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BAA8]), sel_init);
      objc_msgSend(v27, sel_updateContact_, v107);
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.nickname);
      swift_bridgeObjectRetain_n();
      uint64_t v97 = v29;
      unint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_105(v31))
      {
        uint64_t v96 = (uint64_t)v27;
        uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_37();
        v107 = (void *)OUTLINED_FUNCTION_9_0();
        uint64_t v95 = (uint64_t)v19;
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v98 = (uint64_t)v20;
        uint64_t v104 = v12;
        swift_bridgeObjectRetain();
        uint64_t v33 = String.init<A>(reflecting:)();
        id v103 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, (uint64_t *)&v107);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_32_1();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v30, (os_log_type_t)v26, "Accepting incoming name from handle id %s", v32, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        id v27 = (id)v96;
        OUTLINED_FUNCTION_3();
      }
      else
      {

        OUTLINED_FUNCTION_32_1();
      }
      id v103 = 0;
      unsigned int v64 = objc_msgSend(v99, sel_executeSaveRequest_error_, v27, &v103);
      id v65 = v103;
      if (v64)
      {
        swift_bridgeObjectRetain();
        id v66 = v65;
        NameAndPhotoUtilities.createIMHandle(with:)((uint64_t)v10, v12, v67, v68, v69, v70, v71, v72, v94, v95, v96, v97, v98, (uint64_t)v99, (uint64_t)v100, v102, (uint64_t)v103, v104, v105,
          v106,
          (uint64_t)v107,
          v108,
          v109,
          v110);
        uint64_t v74 = v73;
        swift_bridgeObjectRelease();
        if (v74)
        {
          swift_bridgeObjectRelease();
          objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController), sel_clearPendingNicknameUpdatesForHandle_, v74);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v89 = Logger.logObject.getter();
          os_log_type_t v90 = static os_log_type_t.error.getter();
          if (OUTLINED_FUNCTION_105(v90))
          {
            uint64_t v91 = (uint8_t *)OUTLINED_FUNCTION_37();
            v107 = (void *)OUTLINED_FUNCTION_9_0();
            *(_DWORD *)uint64_t v91 = 136315138;
            id v103 = v10;
            uint64_t v104 = v12;
            swift_bridgeObjectRetain();
            uint64_t v92 = String.init<A>(reflecting:)();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v92, v93, (uint64_t *)&v107);
            OUTLINED_FUNCTION_11_75();
            OUTLINED_FUNCTION_32_1();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2F90000, v89, (os_log_type_t)v26, "Failed to create IMHandle from handle %s", v91, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_3();
            OUTLINED_FUNCTION_3();
          }
          else
          {

            OUTLINED_FUNCTION_32_1();
          }
        }
        return;
      }
      id v75 = v103;
      swift_bridgeObjectRelease();
      uint64_t v76 = (void *)_convertNSErrorToError(_:)();

      swift_willThrow();
      id v77 = v27;
      id v78 = v76;
      id v79 = v77;
      id v80 = v76;
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v81 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v81))
      {
        uint64_t v82 = swift_slowAlloc();
        id v103 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v82 = 136315394;
        v107 = v79;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNSaveRequest);
        id v83 = v79;
        uint64_t v84 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, (uint64_t *)&v103);
        OUTLINED_FUNCTION_36_28();

        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 12) = 2080;
        v107 = v76;
        id v86 = v76;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        uint64_t v87 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v87, v88, (uint64_t *)&v103);
        OUTLINED_FUNCTION_36_28();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2F90000, v36, v81, "Failed to execute saveRequest %s error: %s", (uint8_t *)v82, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        return;
      }

LABEL_22:
      return;
    }
    swift_bridgeObjectRelease();
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    __swift_project_value_buffer(v57, (uint64_t)static Logger.nickname);
    id v58 = v19;
    id v50 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v50, v59))
    {

      return;
    }
    uint64_t v60 = (uint8_t *)OUTLINED_FUNCTION_37();
    id v103 = (id)OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v60 = 136315138;
    v107 = v58;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    id v61 = v58;
    uint64_t v62 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, (uint64_t *)&v103);
    OUTLINED_FUNCTION_25_53();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v50, v59, "Failed to create mutableContact for contact %s", v60, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

LABEL_32:
    return;
  }
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  __swift_project_value_buffer(v49, (uint64_t)static Logger.nickname);
  swift_bridgeObjectRetain();
  id v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (_DWORD *)OUTLINED_FUNCTION_37();
    v107 = (void *)OUTLINED_FUNCTION_9_0();
    _DWORD *v52 = 136315138;
    id v103 = v10;
    uint64_t v104 = v12;
    swift_bridgeObjectRetain();
    uint64_t v53 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, (uint64_t *)&v107);
    OUTLINED_FUNCTION_11_75();
    OUTLINED_FUNCTION_32_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_2(&dword_1C2F90000, v55, v56, "Cannot accept incoming name because couldnt find a contact for handle %s");
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    goto LABEL_32;
  }

  OUTLINED_FUNCTION_32_1();
}

uint64_t static NameAndPhotoUtilities.formattedDisplayName(for:)(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = type metadata accessor for PersonNameComponents();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  id v5 = objc_msgSend(a1, sel_firstName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = objc_msgSend(a1, sel_lastName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  MEMORY[0x1F4188790](v7 - 8);
  OUTLINED_FUNCTION_21();
  __swift_storeEnumTagSinglePayload(v9 - v8, 1, 1, v3);
  PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)();
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  uint64_t v11 = OUTLINED_FUNCTION_41_0();
  v12(v11);
  id v13 = objc_msgSend(v2, sel_localizedStringFromPersonNameComponents_style_options_, isa, 2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return OUTLINED_FUNCTION_41_0();
}

void NameAndPhotoUtilities.denyIncomingName(from:)()
{
  swift_getObjectType();
  OUTLINED_FUNCTION_8_10();
  specialized NameAndPhotoUtilities.denyIncomingName(from:)();
}

uint64_t NameAndPhotoUtilities.denySendingNameAndPhoto(using:)()
{
  swift_getObjectType();
  uint64_t v0 = OUTLINED_FUNCTION_8_10();
  return specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)(v0);
}

id NameAndPhotoUtilities.pendingOrCurrentIMNickname(from:)(uint64_t a1, unint64_t a2)
{
  if (!a2)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.nickname);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v11, v12, "Could not handle id is nil so unable to get imnicknames");
      OUTLINED_FUNCTION_3();
    }

    return 0;
  }
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
  swift_bridgeObjectRetain();
  id v6 = (void *)MEMORY[0x1C87730B0](a1, a2);
  id v7 = objc_msgSend(v5, sel_nicknameForHandleID_, v6);

  if (!v7)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_16_58(v13, (uint64_t)static Logger.nickname);
    id v14 = (void *)Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_107(v15))
    {
      OUTLINED_FUNCTION_37();
      uint64_t v19 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_15_75(4.8149e-34);
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_2_8(&dword_1C2F90000, v16, v17, "Could not find a pending or previously handled IMNickname for handle %s");
      OUTLINED_FUNCTION_78_0();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      OUTLINED_FUNCTION_3_9();
    }
    return 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

Swift::OpaquePointer_optional __swiftcall NameAndPhotoUtilities.unknownSenderRecordInfo(for:)(Swift::String_optional a1)
{
  if (a1.value._object)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
    uint64_t v3 = (void *)MEMORY[0x1C87730B0](a1.value._countAndFlagsBits);
    id v4 = objc_msgSend(v2, sel_unknownSenderRecordInfoFor_, v3);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyHashable : Any]);
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.nickname);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v10, v11, "unknownSenderRecordInfo is nil");
      OUTLINED_FUNCTION_3();
    }

    uint64_t v5 = 0;
  }
  uint64_t v12 = (void *)v5;
  result.value._rawValue = v12;
  result.is_nil = v6;
  return result;
}

id NameAndPhotoUtilities.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static NameAndPhotoUtilities.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NameAndPhotoUtilities.shared;
  return v0;
}

uint64_t closure #1 in static NameAndPhotoUtilities.prewarm()()
{
  if (one-time initialization token for shared != -1) {
    return swift_once();
  }
  return result;
}

void one-time initialization function for secondsDelayBeforeShowingNameAndPhotoBanner()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner = (*(double (**)(void))(*(void *)static Defaults.shared
                                                                                                 + 824))();
}

double static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner.getter()
{
  if (one-time initialization token for secondsDelayBeforeShowingNameAndPhotoBanner != -1) {
    swift_once();
  }
  return *(double *)&static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner;
}

void *NameAndPhotoUtilities.personalNickname.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  id v2 = v1;
  return v1;
}

id key path getter for NameAndPhotoUtilities.personalNickname : NameAndPhotoUtilities@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for NameAndPhotoUtilities.personalNickname : NameAndPhotoUtilities(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  NameAndPhotoUtilities.personalNickname.setter(v1);
}

void NameAndPhotoUtilities.personalNickname.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname);
  swift_beginAccess();
  id v4 = *v3;
  *uint64_t v3 = a1;
  id v5 = a1;
  NameAndPhotoUtilities.personalNickname.didset(v4);
}

uint64_t NameAndPhotoUtilities.personalNickname.didset(void *a1)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v18 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = a1;
  aBlock[4] = partial apply for closure #1 in NameAndPhotoUtilities.personalNickname.didset;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_19_3;
  id v4 = _Block_copy(aBlock);
  id v5 = a1;
  id v6 = v1;
  swift_release();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  os_log_type_t v15 = (void *)v18;
  MEMORY[0x1C8773BA0](0, v10, v14, v4);
  _Block_release(v4);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t closure #1 in NameAndPhotoUtilities.personalNickname.didset(void *a1, uint64_t a2)
{
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.nickname);
  id v5 = a1;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v28[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = (void **)&v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname];
    swift_beginAccess();
    uint64_t v11 = *v10;
    if (*v10)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMNickname);
      id v12 = v11;
      uint64_t v13 = String.init<A>(reflecting:)();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v6, v7, "Updated personalNickname to %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = (id *)&v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname];
  swift_beginAccess();
  id v17 = *v16;
  id v18 = *v16;
  NameAndPhotoUtilities.updatePersonalDisplayName(using:)(v17);

  id v19 = *v16;
  id v20 = *v16;
  NameAndPhotoUtilities.updatePersonalAvatarView(using:)(v19);

  id v21 = &v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate];
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v21);
  if (result)
  {
    uint64_t v23 = *((void *)v21 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v25 = *v16;
    uint64_t v26 = *(void (**)(uint64_t, id, uint64_t, uint64_t))(v23 + 8);
    id v27 = v25;
    v26(a2, v25, ObjectType, v23);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t NameAndPhotoUtilities.updatePersonalDisplayName(using:)(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    uint64_t v3 = static NameAndPhotoUtilities.formattedDisplayName(for:)(v2);
    uint64_t v5 = v4;

    id v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
    swift_beginAccess();
    *id v6 = v3;
    v6[1] = v5;
  }
  else
  {
    os_log_type_t v7 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
    swift_beginAccess();
    void *v7 = 0;
    v7[1] = 0;
  }
  return swift_bridgeObjectRelease();
}

void NameAndPhotoUtilities.updatePersonalAvatarView(using:)(void *a1)
{
  uint64_t v2 = v1;
  if (!a1) {
    goto LABEL_5;
  }
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_avatar);
  if (!v4)
  {

LABEL_5:
    id v18 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
    swift_beginAccess();
    id v17 = *v18;
    NSObject *v18 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_imageData);

  uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v9 = v8;

  id v10 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v10, sel_scale);
  double v12 = v11;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  outlined copy of Data._Representation(v7, v9);
  id v13 = UIImage.__allocating_init(data:scale:)(v7, v9, v12);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v13);
  id v15 = objc_msgSend(v14, sel_layer);
  objc_msgSend(v15, sel_setMasksToBounds_, 1);

  outlined consume of Data._Representation(v7, v9);
  uint64_t v16 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
  swift_beginAccess();
  id v17 = *v16;
  *uint64_t v16 = v14;
LABEL_6:
}

void (*NameAndPhotoUtilities.personalNickname.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = v1;
  id v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname);
  OUTLINED_FUNCTION_41_0();
  swift_beginAccess();
  uint64_t v5 = *v4;
  _OWORD v3[3] = *v4;
  id v6 = v5;
  return NameAndPhotoUtilities.personalNickname.modify;
}

void NameAndPhotoUtilities.personalNickname.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  id v4 = (id *)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    NameAndPhotoUtilities.personalNickname.setter(v3);
  }
  else
  {
    NameAndPhotoUtilities.personalNickname.setter(*(void **)(*(void *)a1 + 24));
  }
  free(v2);
}

uint64_t key path getter for NameAndPhotoUtilities.delegate : NameAndPhotoUtilities@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for NameAndPhotoUtilities.delegate : NameAndPhotoUtilities(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t NameAndPhotoUtilities.delegate.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t NameAndPhotoUtilities.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  OUTLINED_FUNCTION_41_0();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*NameAndPhotoUtilities.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  OUTLINED_FUNCTION_41_0();
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  _OWORD v3[3] = v6;
  void v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t NameAndPhotoUtilities.personalDisplayName.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NameAndPhotoUtilities.personalDisplayName.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*NameAndPhotoUtilities.personalDisplayName.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

void *NameAndPhotoUtilities.personalAvatarView.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void NameAndPhotoUtilities.personalAvatarView.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*NameAndPhotoUtilities.personalAvatarView.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t NameAndPhotoUtilities.fromIDFromCall(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 160);
  uint64_t v5 = (void *)v4(ObjectType, a2);
  unsigned int v6 = objc_msgSend(v5, sel_isFaceTimeProvider);

  if (!v6)
  {
    unint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 256))(ObjectType, a2);
    if (v9)
    {
      id v10 = v9;
      id v11 = objc_msgSend(v9, sel_handle);

      if (v11)
      {
        id v12 = objc_msgSend(v11, sel_value);

        goto LABEL_14;
      }
    }
    id v13 = (void *)v4(ObjectType, a2);
    id v14 = objc_msgSend(v13, sel_prioritizedSenderIdentities);

    id v15 = objc_msgSend(v14, sel_firstObject);
    if (v15)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v18, 0, sizeof(v18));
    }
    outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v18, (uint64_t)v19, &demangling cache variable for type metadata for Any?);
    if (v20)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUSenderIdentity);
      if (swift_dynamicCast())
      {
        id v8 = objc_msgSend(v17, sel_handle);

        if (!v8) {
          return (uint64_t)v8;
        }
        id v12 = objc_msgSend(v8, sel_value);

LABEL_14:
        id v8 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();

        return (uint64_t)v8;
      }
    }
    else
    {
      outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for Any?);
    }
    return 0;
  }
  id v7 = objc_msgSend(self, sel_facetimeService);
  id v8 = (id)IMPreferredAccountForService();

  if (v8) {
    return outlined bridged method (ob) of @objc IMAccount.displayName.getter(v8);
  }
  return (uint64_t)v8;
}

id NameAndPhotoUtilities.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v2 = &v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView] = 0;
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F6BD58]);
  uint64_t v5 = v0;
  *(void *)&v0[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController;
  *(void *)&v5[v6] = objc_msgSend(self, sel_sharedInstance);
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore;
  id v8 = objc_msgSend(self, sel_sharedInstance);
  id v9 = objc_msgSend(v8, sel_contactStore);

  *(void *)&v5[v7] = v9;
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_pendingNicknameFetchKeys;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C3769610;
  id v12 = (void *)*MEMORY[0x1E4F1AEE0];
  id v13 = (void *)*MEMORY[0x1E4F1ADC8];
  *(void *)(v11 + 32) = *MEMORY[0x1E4F1AEE0];
  *(void *)(v11 + 40) = v13;
  uint64_t v27 = v11;
  specialized Array._endMutation()();
  *(void *)&v5[v10] = v27;
  id v14 = &v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus];
  *(void *)id v14 = 0;
  *((void *)v14 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_currentCallRemoteParticipantHandleIds] = MEMORY[0x1E4FBC860];
  uint64_t v15 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_idsLookupManager;
  uint64_t v16 = self;
  id v17 = v12;
  id v18 = v13;
  *(void *)&v5[v15] = objc_msgSend(v16, sel_sharedManager);

  v26.receiver = v5;
  v26.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v26, sel_init);
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_defaultCenter);
  objc_msgSend(v22, sel_addObserver_selector_name_object_, v21, sel_handleIdsStatusChanged, *MEMORY[0x1E4FADEC0], 0);

  id v23 = objc_msgSend(v20, sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v21, sel_handlePersonalNicknameChanged_, *MEMORY[0x1E4F6BB68], 0);

  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  specialized NameAndPhotoUtilities.getOrFetchPersonalNickname(completion:)((uint64_t)v21, v24);

  return v21;
}

Swift::Void __swiftcall NameAndPhotoUtilities.getOrFetchPersonalNickName()()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  specialized NameAndPhotoUtilities.getOrFetchPersonalNickname(completion:)(v0, v1);
}

void closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName()(void *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = a1;
    NameAndPhotoUtilities.personalNickname.setter(a1);
  }
}

uint64_t specialized NameAndPhotoUtilities.getOrFetchPersonalNickname(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  swift_retain();
  id v5 = objc_msgSend(v4, sel_sharedController);
  uint64_t v6 = *MEMORY[0x1E4FADD18];
  unsigned __int8 v7 = objc_msgSend(v5, sel_hasListenerForID_, *MEMORY[0x1E4FADD18]);

  if ((v7 & 1) == 0)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.nickname);
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      aBlock[0] = v12;
      uint64_t v32 = a1;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v9, v10, "Adding addListenerID: %s to IMDaemonController", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v12, -1, -1);
      MEMORY[0x1C87760E0](v11, -1, -1);
    }

    id v15 = objc_msgSend(v4, sel_sharedController);
    objc_msgSend(v15, sel_addListenerID_capabilities_, v6, *MEMORY[0x1E4F6C4F0]);
  }
  uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
  id v17 = objc_msgSend(v16, sel_personalNickname, v32, v33, aBlock[0]);
  if (v17)
  {
    id v18 = v17;
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.nickname);
    uint64_t v20 = v18;
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)id v23 = 138412290;
      aBlock[0] = (uint64_t)v20;
      id v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v18;

      _os_log_impl(&dword_1C2F90000, v21, v22, "Reading the personal nick name from cache %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v24, -1, -1);
      MEMORY[0x1C87760E0](v23, -1, -1);
    }
    else
    {

      id v21 = v20;
    }

    swift_beginAccess();
    uint64_t v28 = MEMORY[0x1C8776240](a2 + 16);
    if (v28)
    {
      uint64_t v29 = v28;
      unint64_t v30 = v20;
      NameAndPhotoUtilities.personalNickname.setter(v18);
      swift_release();

      uint64_t v20 = v29;
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = partial apply for closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName();
    *(void *)(v26 + 24) = a2;
    aBlock[4] = (uint64_t)partial apply for closure #1 in PersonalNicknameMenuView.getPersonalNickname(completion:);
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AVCaptureDevice?) -> ();
    aBlock[3] = (uint64_t)&block_descriptor_13_2;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_fetchPersonalNicknameWithCompletion_, v27);
    _Block_release(v27);
    swift_release();
  }
  return swift_release();
}

double NameAndPhotoUtilities.suggestedBannerType(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0xD0))() & 1) == 0) {
    return OUTLINED_FUNCTION_23_56();
  }
  if (!a1)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.nickname);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v13, v14, "Not showing Name+Photo banner because not tracking active call");
      OUTLINED_FUNCTION_3();
    }

    return OUTLINED_FUNCTION_23_56();
  }
  unsigned __int8 v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus);
  uint64_t *v7 = a1;
  v7[1] = a2;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  char v8 = NameAndPhotoUtilities.beginCheckForShouldShowOutgoingShareBanner(forCall:)(a1, a2);
  if (v8 != 2)
  {
    NameAndPhotoUtilities.checkBannerType(forCall:shouldShowOutgoingShareBanner:)(a1, a2, v8 & 1, (uint64_t)v15);
    swift_unknownObjectRelease();
    if (v16 != 255)
    {
      outlined init with take of ConversationControlsType(v15, a3);
      return result;
    }
    outlined destroy of Conversation?((uint64_t)v15, &demangling cache variable for type metadata for ConversationControlsType?);
    return OUTLINED_FUNCTION_23_56();
  }
  OUTLINED_FUNCTION_23_56();
  swift_unknownObjectRelease();
  return result;
}

uint64_t NameAndPhotoUtilities.beginCheckForShouldShowOutgoingShareBanner(forCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = NameAndPhotoUtilities.checkForShouldShowOutgoingShareBanner(forCall:)(a1, a2);
  if (result == 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = NameAndPhotoUtilities.beginQueryIsShareNameAndPhotoAvailable(forDestination:)();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t NameAndPhotoUtilities.checkBannerType(forCall:shouldShowOutgoingShareBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3)
  {
    NameAndPhotoUtilities.areAllRemoteParticipantsContacts(for:)(a1, (uint64_t (**)(uint64_t, uint64_t))a2);
    uint64_t v7 = 13;
    if ((v6 & 1) == 0) {
      uint64_t v7 = 14;
    }
    uint64_t v19 = v7;
    long long v20 = 0u;
    long long v21 = 0u;
    char v22 = 6;
    return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)&v19, a4, &demangling cache variable for type metadata for ConversationControlsType?);
  }
  else
  {
    swift_getObjectType();
    uint64_t v9 = (*(uint64_t (**)(void))(a2 + 168))();
    uint64_t v10 = specialized Set.count.getter(v9);
    uint64_t result = swift_bridgeObjectRelease();
    if (v10 != 1) {
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_17_59();
    os_log_type_t v12 = (void *)v11();
    uint64_t v13 = v12;
    if (v12)
    {
      id v14 = objc_msgSend(v12, sel_value);

      uint64_t v13 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v16 = 0;
    }
    char v17 = NameAndPhotoUtilities.shouldShowIncomingShareBanner(from:)((uint64_t)v13, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      *(void *)a4 = 20;
      *(_OWORD *)(a4 + 8) = 0u;
      *(_OWORD *)(a4 + 24) = 0u;
      char v18 = 6;
    }
    else
    {
LABEL_11:
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      char v18 = -1;
    }
    *(unsigned char *)(a4 + 40) = v18;
  }
  return result;
}

uint64_t NameAndPhotoUtilities.shouldShowIncomingShareBanner(from:)(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 960))()) {
    return 1;
  }
  if (a2)
  {
    swift_bridgeObjectRetain();
    NameAndPhotoUtilities.createIMHandle(with:)(a1, a2, v5, v6, v7, v8, v9, v10, v31, v32, v33, var58[0], var58[1], var58[2], var58[3], var58[4], var58[5], var58[6], var58[7],
      var58[8],
      var58[9],
      var58[10],
      var58[11],
      var58[12]);
    if (v11)
    {
      os_log_type_t v12 = v11;
      swift_bridgeObjectRelease();
      unint64_t v13 = (unint64_t)objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController), sel_nicknameUpdateForHandle_nicknameIfAvailable_, v12, 0);
      char v14 = v13;
      a2 = (v13 >> 1) & 1;
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      __swift_project_value_buffer(v15, (uint64_t)static Logger.nickname);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        unint64_t v18 = v14 & 2;
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v32 = v20;
        *(_DWORD *)uint64_t v19 = 136315394;
        LOBYTE(var58[0]) = v18 >> 1;
        uint64_t v21 = String.init<A>(reflecting:)();
        var58[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 1024;
        LODWORD(var58[0]) = v18 >> 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1C2F90000, v16, v17, "shouldShowIncomingShareBanner=%s because nicknameUpdate.contains(.nameUpdate): %{BOOL}d", (uint8_t *)v19, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v20, -1, -1);
        MEMORY[0x1C87760E0](v19, -1, -1);
      }
    }
    else
    {
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      __swift_project_value_buffer(v23, (uint64_t)static Logger.nickname);
      swift_bridgeObjectRetain();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v33 = a2;
        var58[0] = v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v28 = String.init<A>(reflecting:)();
        uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, var58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v24, v25, "Cant determine if we should show incoming share banner for handle %s because failed to create IMHandle", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v27, -1, -1);
        MEMORY[0x1C87760E0](v26, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  return a2;
}

void NameAndPhotoUtilities.areAllRemoteParticipantsContacts(for:)(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = a2[21];
  uint64_t v5 = v4(ObjectType, (uint64_t)a2);
  uint64_t v6 = specialized Set.count.getter(v5);
  swift_bridgeObjectRelease();
  if (v6 != 1)
  {
    uint64_t v7 = (void *)a2[20](ObjectType, (uint64_t)a2);
    unsigned int v8 = objc_msgSend(v7, sel_isTelephonyProvider);

    if (!v8)
    {
      uint64_t v9 = v4(ObjectType, (uint64_t)a2);
      uint64_t v10 = v9;
      if ((v9 & 0xC000000000000001) != 0)
      {
        __CocoaSet.makeIterator()();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        lazy protocol witness table accessor for type TUHandle and conformance NSObject();
        Set.Iterator.init(_cocoa:)();
        uint64_t v10 = v34;
        uint64_t v31 = v35;
        uint64_t v11 = v36;
        int64_t v12 = v37;
        unint64_t v13 = v38;
      }
      else
      {
        int64_t v12 = 0;
        uint64_t v14 = -1 << *(unsigned char *)(v9 + 32);
        uint64_t v31 = v9 + 56;
        uint64_t v11 = ~v14;
        uint64_t v15 = -v14;
        if (v15 < 64) {
          uint64_t v16 = ~(-1 << v15);
        }
        else {
          uint64_t v16 = -1;
        }
        unint64_t v13 = v16 & *(void *)(v9 + 56);
      }
      int64_t v30 = (unint64_t)(v11 + 64) >> 6;
      while (1)
      {
        int64_t v17 = v12;
        if (v10 < 0)
        {
          if (!__CocoaSet.Iterator.next()()) {
            goto LABEL_39;
          }
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v20 = v33;
          swift_unknownObjectRelease();
          if (!v33) {
            goto LABEL_39;
          }
        }
        else
        {
          if (v13)
          {
            unint64_t v18 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
            unint64_t v19 = v18 | (v12 << 6);
          }
          else
          {
            int64_t v21 = v12 + 1;
            if (__OFADD__(v12, 1))
            {
              __break(1u);
              return;
            }
            if (v21 >= v30) {
              goto LABEL_39;
            }
            unint64_t v22 = *(void *)(v31 + 8 * v21);
            ++v12;
            if (!v22)
            {
              int64_t v12 = v17 + 2;
              if (v17 + 2 >= v30) {
                goto LABEL_39;
              }
              unint64_t v22 = *(void *)(v31 + 8 * v12);
              if (!v22)
              {
                int64_t v12 = v17 + 3;
                if (v17 + 3 >= v30) {
                  goto LABEL_39;
                }
                unint64_t v22 = *(void *)(v31 + 8 * v12);
                if (!v22)
                {
                  int64_t v12 = v17 + 4;
                  if (v17 + 4 >= v30) {
                    goto LABEL_39;
                  }
                  unint64_t v22 = *(void *)(v31 + 8 * v12);
                  if (!v22)
                  {
                    int64_t v23 = v17 + 5;
                    while (v23 < v30)
                    {
                      unint64_t v22 = *(void *)(v31 + 8 * v23++);
                      if (v22)
                      {
                        int64_t v12 = v23 - 1;
                        goto LABEL_31;
                      }
                    }
LABEL_39:
                    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
                    return;
                  }
                }
              }
            }
LABEL_31:
            unint64_t v13 = (v22 - 1) & v22;
            unint64_t v19 = __clz(__rbit64(v22)) + (v12 << 6);
          }
          id v20 = *(id *)(*(void *)(v10 + 48) + 8 * v19);
          if (!v20) {
            goto LABEL_39;
          }
        }
        uint64_t v24 = v10;
        os_log_type_t v25 = *(void **)(v32 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore);
        id v26 = objc_msgSend(v20, sel_value);
        if (!v26)
        {
          uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v26 = (id)MEMORY[0x1C87730B0](v27);
          swift_bridgeObjectRelease();
        }
        Class isa = (Class)objc_msgSend(self, sel_keysForNicknameHandling);
        if (!isa)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
          static Array._unconditionallyBridgeFromObjectiveC(_:)();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        id v29 = objc_msgSend(v25, sel_contactForDestinationId_keysToFetch_, v26, isa);

        uint64_t v10 = v24;
        if (!v29)
        {
          outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
          return;
        }
      }
    }
  }
  if (a2[33](ObjectType, (uint64_t)a2)) {
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall NameAndPhotoUtilities.handleIdsStatusChanged()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Recieved ids status changed call");
    OUTLINED_FUNCTION_3();
  }

  uint64_t v7 = swift_bridgeObjectRetain();
  Swift::Bool v8 = NameAndPhotoUtilities.isShareNameAndPhotoAvailable(forDestinations:)((Swift::OpaquePointer)v7);
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus);
    if (v9)
    {
      uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus + 8);
      uint64_t ObjectType = swift_getObjectType();
      int64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 88);
      swift_unknownObjectRetain();
      if (v12(ObjectType, v10))
      {
        char v13 = NameAndPhotoUtilities.checkForShouldShowOutgoingShareBanner(forCall:)(v9, v10);
        NameAndPhotoUtilities.checkBannerType(forCall:shouldShowOutgoingShareBanner:)(v9, v10, (v13 == 2) | v13 & 1, (uint64_t)v19);
        if (v20 == 255)
        {
          swift_unknownObjectRelease();
          outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for ConversationControlsType?);
        }
        else
        {
          outlined init with take of ConversationControlsType(v19, v21);
          uint64_t v14 = v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
          swift_beginAccess();
          if (MEMORY[0x1C8776240](v14))
          {
            uint64_t v15 = *(void *)(v14 + 8);
            uint64_t v16 = swift_getObjectType();
            outlined init with copy of ConversationControlsType((uint64_t)v21, (uint64_t)v19);
            int64_t v17 = *(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v15 + 16);
            uint64_t v18 = swift_bridgeObjectRetain();
            v17(v18, v19, v16, v15);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for ConversationControlsType?);
          }
          else
          {
            swift_unknownObjectRelease();
          }
          outlined destroy of ConversationControlsType((uint64_t)v21);
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

Swift::Bool __swiftcall NameAndPhotoUtilities.isShareNameAndPhotoAvailable(forDestinations:)(Swift::OpaquePointer forDestinations)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_idsLookupManager);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  unsigned __int8 v4 = objc_msgSend(v2, sel_isNameAndPhotoAvailableForDestination_, isa);

  if (v4) {
    return 1;
  }
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  unsigned __int8 v5 = objc_msgSend(v2, sel_isiMessageAvailableForAnyDestinationInDestinations_, v6);

  return v5;
}

uint64_t NameAndPhotoUtilities.checkForShouldShowOutgoingShareBanner(forCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v75 = a2;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 168))(ObjectType, a2);
  uint64_t v4 = specialized Set.count.getter(v3);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v81 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = __CocoaSet.startIndex.getter();
      unsigned __int8 v8 = 1;
    }
    else
    {
      uint64_t v6 = specialized _NativeSet.startIndex.getter(v3);
      unsigned __int8 v8 = v10 & 1;
    }
    uint64_t v78 = v6;
    uint64_t v79 = v7;
    unsigned __int8 v80 = v8;
    if ((v5 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        uint64_t v11 = v78;
        uint64_t v12 = v79;
        uint64_t v13 = v80;
        specialized Set.subscript.getter(v78, v79, v80, v3);
        uint64_t v15 = v14;
        id v16 = objc_msgSend(v14, sel_value);
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        uint64_t v20 = v81;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v20 = v81;
        }
        unint64_t v21 = *(void *)(v20 + 16);
        if (v21 >= *(void *)(v20 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v20 = v81;
        }
        *(void *)(v20 + 16) = v21 + 1;
        uint64_t v22 = v20 + 16 * v21;
        *(void *)(v22 + 32) = v17;
        *(void *)(v22 + 40) = v19;
        if ((v3 & 0xC000000000000001) != 0)
        {
          if ((v13 & 1) == 0)
          {
            __break(1u);
LABEL_74:
            swift_once();
LABEL_60:
            uint64_t v60 = type metadata accessor for Logger();
            __swift_project_value_buffer(v60, (uint64_t)static Logger.nickname);
            id v61 = Logger.logObject.getter();
            os_log_type_t v62 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v61, v62))
            {
              unint64_t v63 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v63 = 0;
              _os_log_impl(&dword_1C2F90000, v61, v62, "shouldShowOutgoingShareBanner = true on FaceTime call", v63, 2u);
              MEMORY[0x1C87760E0](v63, -1, -1);
            }

            return 1;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
          uint64_t v28 = (void (*)(char *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v28(v77, 0);
        }
        else
        {
          uint64_t v23 = specialized _NativeSet.index(after:)(v11, v12, v13, v3);
          uint64_t v25 = v24;
          char v27 = v26;
          outlined consume of Set<TUHandle>.Index._Variant(v11, v12, v13);
          uint64_t v78 = v23;
          uint64_t v79 = v25;
          unsigned __int8 v80 = v27 & 1;
        }
        if (!--v5)
        {
          outlined consume of Set<TUHandle>.Index._Variant(v78, v79, v80);
          swift_bridgeObjectRelease();
          uint64_t v9 = v81;
          goto LABEL_19;
        }
      }
    }
    __break(1u);
    goto LABEL_72;
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_19:
  uint64_t v29 = *(void *)(v9 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    int64_t v30 = (uint64_t *)(v9 + 40);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v32 = *(v30 - 1);
      uint64_t v33 = *v30;
      swift_bridgeObjectRetain();
      uint64_t v34 = (void *)MEMORY[0x1C87730B0](v32, v33);
      id v35 = (id)TUCopyIDSCanonicalAddressForDestinationID();

      if (v35)
      {
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v31 = v41;
        }
        unint64_t v39 = *(void *)(v31 + 16);
        if (v39 >= *(void *)(v31 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v31 = v42;
        }
        *(void *)(v31 + 16) = v39 + 1;
        uint64_t v40 = v31 + 16 * v39;
        *(void *)(v40 + 32) = v36;
        *(void *)(v40 + 40) = v38;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v30 += 2;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_currentCallRemoteParticipantHandleIds;
  *(void *)&v76[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_currentCallRemoteParticipantHandleIds] = v31;
  swift_bridgeObjectRelease();
  uint64_t v44 = &v76[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname];
  swift_beginAccess();
  if (!*(void *)v44)
  {
    if (one-time initialization token for nickname == -1)
    {
LABEL_38:
      uint64_t v52 = type metadata accessor for Logger();
      __swift_project_value_buffer(v52, (uint64_t)static Logger.nickname);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v48, v49))
      {
LABEL_56:

        return 0;
      }
      id v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v50 = 0;
      os_log_type_t v51 = "shouldShowOutgoingShareBanner = false due to personalNickname is nil";
LABEL_55:
      _os_log_impl(&dword_1C2F90000, v48, v49, v51, v50, 2u);
      MEMORY[0x1C87760E0](v50, -1, -1);
      goto LABEL_56;
    }
LABEL_72:
    swift_once();
    goto LABEL_38;
  }
  uint64_t v45 = swift_bridgeObjectRetain();
  char v46 = NameAndPhotoUtilities.hasAlreadySentOrDeniedSendingNameAndPhoto(to:)(v45);
  swift_bridgeObjectRelease();
  if (v46)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    __swift_project_value_buffer(v47, (uint64_t)static Logger.nickname);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49)) {
      goto LABEL_56;
    }
    id v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v50 = 0;
    os_log_type_t v51 = "shouldShowOutgoingShareBanner = false bc hasAlreadySentOrDeniedSendingToRemotes";
    goto LABEL_55;
  }
  if ((NameAndPhotoUtilities.snapEnabled.getter() & 1) == 0)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    __swift_project_value_buffer(v54, (uint64_t)static Logger.nickname);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49)) {
      goto LABEL_56;
    }
    id v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v50 = 0;
    os_log_type_t v51 = "shouldShowOutgoingShareBanner = false bc snapEnabled is false";
    goto LABEL_55;
  }
  if (!NameAndPhotoUtilities.alwaysAskNameAndPhotoSharingEnabled.getter())
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    __swift_project_value_buffer(v55, (uint64_t)static Logger.nickname);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49)) {
      goto LABEL_56;
    }
    id v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v50 = 0;
    os_log_type_t v51 = "shouldShowOutgoingShareBanner = false bc alwaysAskNameAndPhotoSharing is not enabled";
    goto LABEL_55;
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v75 + 392))(ObjectType, v75))
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    __swift_project_value_buffer(v53, (uint64_t)static Logger.nickname);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49)) {
      goto LABEL_56;
    }
    id v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v50 = 0;
    os_log_type_t v51 = "shouldShowOutgoingShareBanner = false bc isEmergency";
    goto LABEL_55;
  }
  id v58 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v75 + 160))(ObjectType, v75);
  unsigned int v59 = objc_msgSend(v58, sel_isFaceTimeProvider);

  if (v59)
  {
    if (one-time initialization token for nickname != -1) {
      goto LABEL_74;
    }
    goto LABEL_60;
  }
  uint64_t v64 = swift_bridgeObjectRetain();
  Swift::Bool v65 = NameAndPhotoUtilities.isShareNameAndPhotoAvailable(forDestinations:)((Swift::OpaquePointer)v64);
  swift_bridgeObjectRelease();
  if (!v65) {
    return 2;
  }
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v66 = type metadata accessor for Logger();
  __swift_project_value_buffer(v66, (uint64_t)static Logger.nickname);
  uint64_t v67 = v76;
  uint64_t v68 = Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v68, v69))
  {

    return 1;
  }
  uint64_t v70 = (uint8_t *)swift_slowAlloc();
  uint64_t v71 = swift_slowAlloc();
  *(_DWORD *)uint64_t v70 = 136315138;
  uint64_t v78 = v71;
  uint64_t v81 = *(void *)&v76[v43];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  uint64_t v72 = String.init<A>(reflecting:)();
  uint64_t v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, &v78);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C2F90000, v68, v69, "shouldShowOutgoingShareBanner = true bc destination status found in cache for handleIDs: %s", v70, 0xCu);
  uint64_t v56 = 1;
  swift_arrayDestroy();
  MEMORY[0x1C87760E0](v71, -1, -1);
  MEMORY[0x1C87760E0](v70, -1, -1);

  return v56;
}

uint64_t NameAndPhotoUtilities.allContactHandlesFromHandle(_:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = specialized Set.init<A>(_:)(inited);
  uint64_t v14 = v6;
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore);
  unsigned __int8 v8 = (void *)MEMORY[0x1C87730B0](a1, a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v10 = objc_msgSend(v7, sel_contactForDestinationId_keysToFetch_, v8, isa);

  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_handles);
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Set.formUnion<A>(_:)(v12);
    return v14;
  }
  return v6;
}

id NameAndPhotoUtilities.pendingIncomingIMNickname(from:)()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v3 = objc_msgSend(v1, sel_pendingNicknameForHandleIDs_, isa);

  if (!v3)
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static Logger.nickname);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Set<String> and conformance Set<A>, &demangling cache variable for type metadata for Set<String>);
      lazy protocol witness table accessor for type String and conformance String();
      Sequence<>.joined(separator:)();
      uint64_t v9 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v5, v6, "Couldnt find a pending IMNickname for handle %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v8, -1, -1);
      MEMORY[0x1C87760E0](v7, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v3;
}

void NameAndPhotoUtilities.createIMHandle(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_26_3();
  a23 = v24;
  a24 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for IMServiceImpl);
  id v30 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_iMessageService);
  id v31 = (id)IMPreferredAccountForService();

  if (v31
    && ((id v32 = v31, !v27) ? (v33 = 0) : (v33 = (void *)MEMORY[0x1C87730B0](v29, v27)),
        id v34 = objc_msgSend(v31, sel_imHandleWithID_, v33),
        v31,
        v33,
        v34))
  {
  }
  else
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_22_50(v35, (uint64_t)static Logger.nickname);
    id v36 = v31;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      a12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315394;
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = String.init<A>(reflecting:)();
        unint64_t v42 = v41;
      }
      else
      {
        unint64_t v42 = 0xE300000000000000;
        uint64_t v40 = OUTLINED_FUNCTION_37_29();
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_3_9();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      if (v31)
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
        id v43 = v36;
        uint64_t v44 = String.init<A>(reflecting:)();
        unint64_t v46 = v45;
      }
      else
      {
        unint64_t v46 = 0xE300000000000000;
        uint64_t v44 = OUTLINED_FUNCTION_37_29();
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v37, v38, "Could not create IMHandle with handle %s account: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      OUTLINED_FUNCTION_3_9();
    }
  }
  OUTLINED_FUNCTION_16();
}

void NameAndPhotoUtilities.currentIMNickname(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_26_3();
  a23 = v25;
  a24 = v27;
  if (v26)
  {
    uint64_t v28 = v26;
    uint64_t v29 = self;
    id v30 = v28;
    unsigned int v31 = objc_msgSend(v29, sel_contactIsInAutoUpdateState_, v30);
    id v32 = *(void **)(v24 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
    unsigned int v33 = objc_msgSend(v32, sel_haveNicknamesLoaded);
    id v34 = 0;
    if (v31 && v33) {
      id v34 = objc_msgSend(v32, sel_currentNicknameForContact_, v30);
    }
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.nickname);
    id v36 = v34;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      a12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 67109634;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 8) = 2080;
      uint64_t v40 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 18) = 2080;
      if (v34)
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMNickname);
        id v42 = v36;
        uint64_t v43 = String.init<A>(reflecting:)();
        unint64_t v45 = v44;
      }
      else
      {
        unint64_t v45 = 0xE300000000000000;
        uint64_t v43 = OUTLINED_FUNCTION_37_29();
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v37, v38, "SNAP: imNicknameProviderReady: %{BOOL}d contactIsInAutoUpdateState: %s fetched contacts associated IMNickname: %s", (uint8_t *)v39, 0x1Cu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
  }
  OUTLINED_FUNCTION_16();
}

Swift::Void __swiftcall NameAndPhotoUtilities.handlePersonalNicknameChanged(_:)(NSNotification a1)
{
  uint64_t v2 = v1;
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.nickname);
  uint64_t v5 = a1.super.isa;
  os_log_type_t v6 = (void *)Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v7))
  {
    uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v15 = OUTLINED_FUNCTION_9_0();
    _DWORD *v8 = 136315138;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSNotification);
    uint64_t v9 = v5;
    uint64_t v10 = String.init<A>(reflecting:)();
    uint64_t v14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_6(&dword_1C2F90000, v12, v13, "handlePersonalNicknameChanged %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  NameAndPhotoUtilities.personalNickname.setter(objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController), sel_personalNickname, v14, v15));
}

id NameAndPhotoUtilities.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL NameAndPhotoUtilities.alwaysAskNameAndPhotoSharingEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_sharingAudience);

  return v1 == (id)2;
}

id NameAndPhotoUtilities.snapEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_sharingEnabled);

  return v1;
}

uint64_t NameAndPhotoUtilities.hasAlreadySentOrDeniedSendingNameAndPhoto(to:)(uint64_t a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v2 = static Defaults.shared;
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 952))()) {
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(void *)v2 + 960))()) {
    return 1;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for IMServiceImpl);
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_iMessageService);
  id v6 = (id)IMPreferredAccountForService();

  char v43 = 0;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController;
    swift_bridgeObjectRetain();
    LOBYTE(v9) = 0;
    uint64_t v10 = (unint64_t *)(a1 + 40);
    LOBYTE(v11) = 1;
    while (1)
    {
      uint64_t v13 = *(v10 - 1);
      unint64_t v12 = *v10;
      if (!v6)
      {
        char v43 = 0;
        swift_bridgeObjectRetain();
        goto LABEL_28;
      }
      swift_bridgeObjectRetain();
      id v14 = v6;
      id v15 = v6;
      id v16 = outlined bridged method (mbgnn) of @objc IMAccount.imHandle(withID:)(v13, v12, v15);

      if (!v16) {
        break;
      }
      id v17 = v16;
      swift_bridgeObjectRelease();
      if (v11) {
        unsigned int v11 = objc_msgSend(*(id *)(v40 + v8), sel_handleIsAllowedForSharing_, v17);
      }
      else {
        unsigned int v11 = 0;
      }
      id v6 = v14;
      if (v9) {
        unsigned int v9 = 1;
      }
      else {
        unsigned int v9 = objc_msgSend(*(id *)(v40 + v8), sel_handleIsDeniedForSharing_, v17);
      }
      v10 += 2;

      if (!--v7)
      {
        char v43 = v9;
        swift_bridgeObjectRelease();
        uint64_t v3 = v11 | v9;
        goto LABEL_21;
      }
    }
    char v43 = v9;
    id v6 = v14;
LABEL_28:
    swift_bridgeObjectRelease();
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)static Logger.nickname);
    id v30 = v6;
    swift_bridgeObjectRetain();
    id v31 = v30;
    id v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v41[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315394;
      if (v6)
      {
        id v42 = v31;
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
        id v36 = v31;
        uint64_t v37 = String.init<A>(reflecting:)();
        unint64_t v39 = v38;
      }
      else
      {
        unint64_t v39 = 0xE300000000000000;
        uint64_t v37 = 7104878;
      }
      id v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      swift_bridgeObjectRetain();
      id v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v32, v33, "Failed to generate imHandle using account %s handleID: %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v35, -1, -1);
      MEMORY[0x1C87760E0](v34, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 1;
  }
  uint64_t v3 = 1;
LABEL_21:
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.nickname);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    id v42 = (id)v22;
    *(_DWORD *)uint64_t v21 = 136315650;
    uint64_t v23 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v25 = String.init<A>(reflecting:)();
    v41[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    swift_beginAccess();
    uint64_t v27 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v19, v20, "hasAlreadySentOrDeniedSendingNameAndPhoto: %s due to hasAlreadySentToAll: %s hasDeniedToAny: %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v22, -1, -1);
    MEMORY[0x1C87760E0](v21, -1, -1);
  }
  else
  {
  }
  return v3;
}

uint64_t NameAndPhotoUtilities.beginQueryIsShareNameAndPhotoAvailable(forDestination:)()
{
  uint64_t v1 = v0;
  if (NameAndPhotoUtilities.isSnapQueryEnabled()())
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.nickname);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v21 = v6;
      *(_DWORD *)id v5 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      uint64_t v7 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v3, v4, "beginQueryIsShareNameAndPhotoAvailable - Querying IDS to see com.apple.private.alloy.nameandphoto status for handleIDs: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v6, -1, -1);
      MEMORY[0x1C87760E0](v5, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v17 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_idsLookupManager);
    uint64_t v18 = swift_bridgeObjectRetain();
    specialized Set.init<A>(_:)(v18);
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_beginBatchQueryWithDestinations_services_, isa, 63);

    return 2;
  }
  else
  {
    if (one-time initialization token for nickname != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.nickname);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v21 = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      uint64_t v14 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v10, v11, "beginQueryIsShareNameAndPhotoAvailable - SNAP Query is disabled for handleIDs: %s", v12, 0xCu);
      uint64_t v16 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v13, -1, -1);
      MEMORY[0x1C87760E0](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  return v16;
}

Swift::Bool __swiftcall NameAndPhotoUtilities.isSnapQueryEnabled()()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  if (!v0)
  {
    __break(1u);
    return (char)v0;
  }
  uint64_t v1 = v0;
  id v2 = outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001CLL, 0x80000001C37B5410, v0);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)v6, (uint64_t)v7, &demangling cache variable for type metadata for Any?);
  if (!v8)
  {
    outlined destroy of Conversation?((uint64_t)v7, &demangling cache variable for type metadata for Any?);
    goto LABEL_9;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    LOBYTE(v0) = 1;
    return (char)v0;
  }
  unsigned __int8 v3 = objc_msgSend(v5, sel_BOOLValue);

  LOBYTE(v0) = v3 ^ 1;
  return (char)v0;
}

void outlined bridged method (mbnn) of @objc CNMutableContact.lastName.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setLastName_, v4);
}

id outlined bridged method (mbgnn) of @objc IMAccount.imHandle(withID:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)MEMORY[0x1C87730B0]();
  id v5 = objc_msgSend(a3, sel_imHandleWithID_, v4);

  return v5;
}

#error "1C35A5C04: call analysis failed (funcsize=223)"

void specialized NameAndPhotoUtilities.denyIncomingName(from:)()
{
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.nickname);
  swift_unknownObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unsigned __int8 v3 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v11 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)unsigned __int8 v3 = 136315138;
    OUTLINED_FUNCTION_17_59();
    id v5 = (void *)v4();
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_value);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = String.init<A>(reflecting:)();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0xE300000000000000;
      uint64_t v8 = OUTLINED_FUNCTION_37_29();
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v1, v2, "Denying incoming name from handle %s", v3, 0xCu);
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1C35A611C()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static NameAndPhotoUtilities.prewarm()()
{
  return closure #1 in static NameAndPhotoUtilities.prewarm()();
}

uint64_t sub_1C35A6134()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t dispatch thunk of NameAndPhotoUtilitiesDelegate.nameAndPhotoUtilitiesDidUpdatePersonalNickname(oldValue:newValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of NameAndPhotoUtilitiesDelegate.nameAndPhotoUtilitiesNameAndPhotoAvailable(forDestinations:withBannerType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for NameAndPhotoUtilities()
{
  return self;
}

void partial apply for closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName()(void *a1)
{
  closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName()(a1, v1);
}

uint64_t sub_1C35A61D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C35A6208()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in NameAndPhotoUtilities.personalNickname.didset()
{
  return closure #1 in NameAndPhotoUtilities.personalNickname.didset(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t ConversationControlsButtonProvider.init(controlsManager:context:shape:)(uint64_t a1, char a2, char a3)
{
  *(void *)(v3 + 136) = a1;
  return ControlsButtonProvider.init(context:shape:)(a2, a3);
}

Swift::Void __swiftcall ControlsButtonProvider.buttonChanged()()
{
  OUTLINED_FUNCTION_50();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 168))();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    v8[4] = partial apply for closure #1 in ControlsButtonProvider.buttonChanged();
    v8[5] = v4;
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 1107296256;
    v8[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    v8[3] = &block_descriptor_101;
    id v5 = _Block_copy(v8);
    id v6 = v3;
    swift_release();
    objc_msgSend(v6, sel_setConfigurationUpdateHandler_, v5);
    _Block_release(v5);

    LOBYTE(v5) = *(unsigned char *)(v0 + 41);
    *(unsigned char *)(swift_allocObject() + 16) = (_BYTE)v5;
    id v7 = v6;
    UIButton.pointerStyleProvider.setter();

    objc_msgSend(v7, sel_setPointerInteractionEnabled_, 1);
    objc_msgSend(v7, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27B0]);
    objc_msgSend(v7, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E4FB27D0]);
    objc_msgSend(v7, sel_setNeedsUpdateConfiguration);
  }
}

uint64_t ConversationControlsButtonProvider.deinit()
{
  ControlsButtonProvider.deinit();

  return v0;
}

uint64_t ControlsButtonProvider.button.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C8776240](v0 + 16);
}

void ControlsButtonProvider.button.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  v2[3] = a2;
  uint64_t v5 = swift_unknownObjectWeakAssign();
  (*(void (**)(uint64_t))(*v2 + 424))(v5);
}

double ControlsButtonProvider.cnkContentAlpha.getter()
{
  OUTLINED_FUNCTION_7_2();
  return *(double *)(v0 + 32);
}

void ControlsButtonProvider.cnkContentAlpha.setter(double a1)
{
  OUTLINED_FUNCTION_18_0();
  *(double *)(v1 + 32) = a1;
  ControlsButtonProvider.cnkContentAlpha.didset();
}

void (*ControlsButtonProvider.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  return ControlsButtonProvider.cnkContentAlpha.modify;
}

void ControlsButtonProvider.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    ControlsButtonProvider.cnkContentAlpha.didset();
  }
}

uint64_t ControlsButtonProvider.callbackCancellable.getter()
{
  return swift_retain();
}

uint64_t ControlsButtonProvider.callbackCancellable.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_18_0();
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*ControlsButtonProvider.callbackCancellable.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ControlsButtonProvider.menuDataSource.getter()
{
  return 0;
}

void *ControlsButtonProvider.backgroundStyle.getter()
{
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void **)(v0 + 56);
  outlined copy of ButtonBackgroundStyle?(v1, *(void **)(v0 + 64), *(unsigned char *)(v0 + 72));
  return v1;
}

void ControlsButtonProvider.backgroundStyle.setter(void *a1, void *a2, char a3)
{
  OUTLINED_FUNCTION_18_0();
  id v7 = *(void **)(v3 + 56);
  uint64_t v8 = *(void **)(v3 + 64);
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  char v9 = *(unsigned char *)(v3 + 72);
  *(unsigned char *)(v3 + 72) = a3;
  outlined copy of ButtonBackgroundStyle?(a1, a2, a3);
  outlined consume of ButtonBackgroundStyle?(v7, v8, v9);
  ControlsButtonProvider.backgroundStyle.didset();
  outlined consume of ButtonBackgroundStyle?(a1, a2, a3);
}

uint64_t (*ControlsButtonProvider.backgroundStyle.modify(uint64_t a1))()
{
  return ControlsButtonProvider.backgroundStyle.modify;
}

void ControlsButtonProvider.titleFont.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    ControlsButtonProvider.backgroundStyle.didset();
  }
}

void *ControlsButtonProvider.foregroundColor.getter()
{
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

void ControlsButtonProvider.foregroundColor.setter(void *a1)
{
  OUTLINED_FUNCTION_18_0();
  uint64_t v3 = *(void **)(v1 + 80);
  *(void *)(v1 + 80) = a1;
  id v4 = a1;

  ControlsButtonProvider.backgroundStyle.didset();
}

uint64_t (*ControlsButtonProvider.foregroundColor.modify(uint64_t a1))()
{
  return ControlsButtonProvider.backgroundStyle.modify;
}

uint64_t ControlsButtonProvider.captureGroupName.getter()
{
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

void ControlsButtonProvider.captureGroupName.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_0();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  swift_bridgeObjectRelease();
  ControlsButtonProvider.backgroundStyle.didset();
}

uint64_t (*ControlsButtonProvider.captureGroupName.modify(uint64_t a1))()
{
  return ControlsButtonProvider.backgroundStyle.modify;
}

void *ControlsButtonProvider.image.getter()
{
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void **)(v0 + 104);
  id v2 = v1;
  return v1;
}

void ControlsButtonProvider.image.setter(void *a1)
{
  OUTLINED_FUNCTION_18_0();
  uint64_t v3 = *(void **)(v1 + 104);
  *(void *)(v1 + 104) = a1;
  id v4 = a1;

  ControlsButtonProvider.backgroundStyle.didset();
}

uint64_t (*ControlsButtonProvider.image.modify(uint64_t a1))()
{
  return ControlsButtonProvider.backgroundStyle.modify;
}

uint64_t ControlsButtonProvider.title.getter()
{
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

void ControlsButtonProvider.title.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_0();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  swift_bridgeObjectRelease();
  ControlsButtonProvider.backgroundStyle.didset();
}

uint64_t (*ControlsButtonProvider.title.modify(uint64_t a1))()
{
  return ControlsButtonProvider.backgroundStyle.modify;
}

void *ControlsButtonProvider.titleFont.getter()
{
  OUTLINED_FUNCTION_7_2();
  uint64_t v1 = *(void **)(v0 + 128);
  id v2 = v1;
  return v1;
}

void ControlsButtonProvider.titleFont.setter(void *a1)
{
  OUTLINED_FUNCTION_18_0();
  uint64_t v3 = *(void **)(v1 + 128);
  *(void *)(v1 + 128) = a1;
  id v4 = a1;

  ControlsButtonProvider.backgroundStyle.didset();
}

uint64_t (*ControlsButtonProvider.titleFont.modify(uint64_t a1))()
{
  return ControlsButtonProvider.backgroundStyle.modify;
}

void ConversationControlsButtonProvider.__allocating_init(context:shape:)()
{
}

id ControlsButtonProvider.makeButton(frame:)()
{
  id v1 = static ConversationControlsButtonFactory.makeButton(frame:provider:)(v0);
  uint64_t v3 = v2;
  id v4 = v1;
  ControlsButtonProvider.button.setter(v1, v3);
  return v1;
}

Swift::Void __swiftcall ControlsButtonProvider.updateButtonConfiguration()()
{
  OUTLINED_FUNCTION_50();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 168))();
  if (v2)
  {
    id v4 = (void *)v2;
    uint64_t v5 = v3;
    uint64_t v6 = self;
    id v7 = (void *)swift_allocObject();
    _OWORD v7[2] = v4;
    v7[3] = v5;
    v7[4] = v0;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = partial apply for closure #1 in ControlsButtonProvider.updateButtonConfiguration();
    *(void *)(v8 + 24) = v7;
    v15[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    v15[5] = v8;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    long long v15[2] = thunk for @escaping @callee_guaranteed () -> ();
    v15[3] = &block_descriptor_13_3;
    char v9 = _Block_copy(v15);
    id v10 = v4;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v6, sel_performWithoutAnimation_, v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v6)
    {
      __break(1u);
    }
    else
    {
      ControlsButtonProvider.updateTextAttributes()();
      OUTLINED_FUNCTION_50();
      unint64_t v12 = *(double (**)(void))(v11 + 192);
      id v13 = v10;
      double v14 = v12();
      UIButton.updateContentAlpha(_:)(v14);
      swift_release();
    }
  }
}

void ControlsButtonProvider.startedContextMenu(button:animator:)(void *a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v3 = type metadata accessor for Notification();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification.contextMenuWillPresent(target:)(a1);
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  objc_msgSend(v2, sel_postNotification_, isa);
}

uint64_t ControlsButtonProvider.endedContextMenu(button:animator:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v6 = type metadata accessor for Notification();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_18_6();
  static Notification.contextMenuDidDismiss(target:)(a1);
  NSNotificationCenter.post(_:afterAnimatorCompletes:)(v2, a2);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
}

Class ControlsButtonProvider.prominentTitleFont.getter()
{
  if (!*(unsigned char *)(v0 + 40)) {
    return 0;
  }
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  Class isa = UIFont.withTraits(_:)(0x8002u).super.isa;

  v3.super.Class isa = UIFont.caseSensitive()().super.isa;
  return v3.super.isa;
}

uint64_t ConversationControlsButtonProvider.__allocating_init(controlsManager:context:shape:)(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, a3);
  return v6;
}

id ConversationControlsButtonProvider.controlsManager.getter()
{
  return *(id *)(v0 + 136);
}

uint64_t ControlsButtonProvider.init(context:shape:)(char a1, char a2)
{
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 32) = 0x3FF0000000000000;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 72) = -4;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 40) = a1;
  *(unsigned char *)(v2 + 41) = a2;
  return v2;
}

uint64_t sub_1C35A71B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void ConversationControlsButtonProvider.init(context:shape:)()
{
}

void ConversationControlsButtonProvider.__ivar_destroyer()
{
}

uint64_t ControlsButtonProvider.deinit()
{
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  swift_release();
  outlined consume of ButtonBackgroundStyle?(*(void **)(v0 + 56), *(void **)(v0 + 64), *(unsigned char *)(v0 + 72));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t ConversationControlsButtonProvider.__deallocating_deinit()
{
  ControlsButtonProvider.deinit();

  return swift_deallocClassInstance();
}

void ControlsButtonProvider.ImageGeometry.size.setter(double a1, double a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
}

uint64_t (*ControlsButtonProvider.ImageGeometry.size.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ControlsButtonProvider.ImageGeometry.offset.getter(double a1, double a2, double a3)
{
  return a3;
}

void ControlsButtonProvider.ImageGeometry.offset.setter(double a1, double a2)
{
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*ControlsButtonProvider.ImageGeometry.offset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 1 of ControlsButtonProvider.ImageGeometry.init(size:offset:)()
{
  return 0.0;
}

void key path setter for ControlsButtonProvider.button : ControlsButtonProvider(uint64_t a1)
{
  id v1 = *(id *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  id v3 = *(id *)a1;
  ControlsButtonProvider.button.setter(v1, v2);
}

void ControlsButtonProvider.cnkContentAlpha.didset()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 168))();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    swift_beginAccess();
    UIButton.updateContentAlpha(_:)(v0[4]);
  }
}

uint64_t ControlsButtonProvider.context.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ControlsButtonProvider.shape.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t key path setter for ControlsButtonProvider.callbackCancellable : ControlsButtonProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 224);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t key path getter for ControlsButtonProvider.backgroundStyle : ControlsButtonProvider@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 248))();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t key path setter for ControlsButtonProvider.backgroundStyle : ControlsButtonProvider(uint64_t a1, uint64_t a2)
{
  id v2 = *(id *)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(uint64_t (**)(id, void *, uint64_t))(**(void **)a2 + 256);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  outlined copy of ButtonBackgroundStyle?(*(id *)a1, v3, v5);
  return v4(v2, v3, v5);
}

uint64_t key path setter for ControlsButtonProvider.foregroundColor : ControlsButtonProvider(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 280);
  id v4 = *a1;
  return v3(v2);
}

uint64_t key path setter for ControlsButtonProvider.captureGroupName : ControlsButtonProvider(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 304);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t key path setter for ControlsButtonProvider.image : ControlsButtonProvider(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 328);
  id v4 = *a1;
  return v3(v2);
}

uint64_t key path setter for ControlsButtonProvider.title : ControlsButtonProvider(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 352);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t key path setter for ControlsButtonProvider.titleFont : ControlsButtonProvider(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 376);
  id v4 = *a1;
  return v3(v2);
}

void ControlsButtonProvider.backgroundStyle.didset()
{
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(v0 + 168))();
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
  }
}

uint64_t ControlsButtonProvider.__allocating_init(context:shape:)(char a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  ControlsButtonProvider.init(context:shape:)(a1, a2);
  return v4;
}

uint64_t closure #1 in ControlsButtonProvider.updateButtonConfiguration()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __n128 v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(*(void *)a3 + 416))(v5);
  uint64_t v8 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  return UIButton.configuration.setter();
}

void ControlsButtonProvider.updateTextAttributes()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIConfigurationTextAttributesTransformer?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  __n128 v11 = MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v27 - v12;
  double v14 = (void *)(*(uint64_t (**)(__n128))(*(void *)v0 + 168))(v11);
  if (v14)
  {
    id v28 = v14;
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)v0 + 368))();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      id v17 = v28;
      UIButton.configuration.getter();
      uint64_t v18 = type metadata accessor for UIButton.Configuration();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v18))
      {
        outlined init with copy of UIButton.Configuration?((uint64_t)v13, (uint64_t)v9);
        UIButton.configuration.setter();

        uint64_t v19 = (uint64_t)v13;
LABEL_8:
        outlined destroy of UIButton.Configuration?(v19);
        return;
      }
      *(void *)(swift_allocObject() + 16) = v16;
      id v22 = v16;
      UIConfigurationTextAttributesTransformer.init(_:)();
      uint64_t v23 = type metadata accessor for UIConfigurationTextAttributesTransformer();
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v23);
      UIButton.Configuration.titleTextAttributesTransformer.setter();
      UIButton.configuration.setter();
    }
    else if (v0[40])
    {
      id v20 = v28;
      UIButton.configuration.getter();
      uint64_t v21 = type metadata accessor for UIButton.Configuration();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v21))
      {
        outlined init with copy of UIButton.Configuration?((uint64_t)v6, (uint64_t)v9);
        UIButton.configuration.setter();

        uint64_t v19 = (uint64_t)v6;
        goto LABEL_8;
      }
      id v25 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28D8]);
      *(void *)(swift_allocObject() + 16) = v25;
      UIConfigurationTextAttributesTransformer.init(_:)();
      uint64_t v26 = type metadata accessor for UIConfigurationTextAttributesTransformer();
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v26);
      UIButton.Configuration.titleTextAttributesTransformer.setter();
      UIButton.configuration.setter();
    }
    else
    {
      objc_msgSend(v28, sel_sbui_updateConfiguration);
      id v24 = v28;
    }
  }
}

uint64_t ControlsButtonProvider.defaultButtonConfiguration.getter()
{
  uint64_t v4 = v0;
  uint64_t v5 = type metadata accessor for UIButton.Configuration.CornerStyle();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_31_20();
  uint64_t v9 = type metadata accessor for UIButton.Configuration.Size();
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_61();
  uint64_t v13 = type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_18_6();
  static UIButton.Configuration.filled()();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v3, *MEMORY[0x1E4FB1260], v9);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v2, *MEMORY[0x1E4FB1218], v5);
  uint64_t v17 = UIButton.Configuration.cornerStyle.setter();
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 344))(v17);
  if (v19)
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    MEMORY[0x1F4188790](v20 - 8);
    OUTLINED_FUNCTION_31_20();
    uint64_t v21 = type metadata accessor for AttributeContainer();
    MEMORY[0x1F4188790](v21 - 8);
    OUTLINED_FUNCTION_61();
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    uint64_t v22 = type metadata accessor for AttributedString();
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v22);
    uint64_t v18 = UIButton.Configuration.attributedTitle.setter();
  }
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 320))(v18);
  if (v23)
  {
    id v24 = (void *)v23;
    id v25 = self;
    id v26 = objc_msgSend(v25, sel_unspecifiedConfiguration);
    id v27 = objc_msgSend(v24, sel_imageWithSymbolConfiguration_, v26);

    UIButton.Configuration.image.setter();
    id v28 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    id v29 = objc_msgSend(v25, sel_configurationWithFont_scale_, v28, 3);

    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  }
  id v30 = (id)(*(uint64_t (**)(void))(*(void *)v4 + 248))();
  if (v32 < 0xFCu) {
    goto LABEL_8;
  }
  if (ControlsButtonProvider.usesVibrantBackgroundStyle.getter())
  {
    id v30 = ControlsButtonProvider.defaultVibrantBackgroundStyle.getter();
LABEL_8:
    id v33 = v30;
    uint64_t v34 = v31;
    char v35 = v32;
    goto LABEL_10;
  }
  id v33 = ControlsButtonProvider.defaultFlatBackgroundColor.getter();
  uint64_t v34 = 0;
  char v35 = 64;
LABEL_10:
  if (!(*(uint64_t (**)(void))(*(void *)v4 + 272))()) {
    id v36 = objc_msgSend(self, sel_whiteColor);
  }
  UIButton.Configuration.baseForegroundColor.setter();
  UIButton.Configuration.withBackgroundStyle(_:)(v33, v34, v35);
  outlined consume of ButtonBackgroundStyle(v33, v34, v35);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v1, v13);
}

uint64_t closure #1 in ControlsButtonProvider.buttonChanged()()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 408))(result);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in ControlsButtonProvider.buttonChanged()()
{
  return closure #1 in ControlsButtonProvider.buttonChanged()();
}

uint64_t closure #2 in ControlsButtonProvider.buttonChanged()(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v5 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIPointerShape?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (CGFloat *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for UIPointerEffect();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  objc_msgSend(a1, sel_bounds);
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  uint64_t v21 = (void *)UIPointerEffect.preview.getter();
  id v22 = objc_msgSend(v21, sel_target);

  id v23 = objc_msgSend(v22, sel_container);
  objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, v23, v14, v16, v18, v20);
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;

  if (v5)
  {
    v38.origin.CGFloat x = v25;
    v38.origin.CGFloat y = v27;
    v38.size.CGFloat width = v29;
    v38.size.CGFloat height = v31;
    double v32 = CGRectGetHeight(v38) * 0.5;
  }
  else
  {
    static UIPointerShape.defaultCornerRadius.getter();
    double v32 = v33;
  }
  type metadata accessor for UIPointerStyle();
  *uint64_t v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D48]), sel_initWithView_, a1);
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FB0E70], v9);
  CGFloat *v8 = v25;
  v8[1] = v27;
  v8[2] = v29;
  v8[3] = v31;
  v8[4] = v32;
  uint64_t v34 = *MEMORY[0x1E4FB0DC8];
  uint64_t v35 = type metadata accessor for UIPointerShape();
  (*(void (**)(CGFloat *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v8, v34, v35);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v35);
  return UIPointerStyle.init(effect:shape:)();
}

uint64_t sub_1C35A83D4()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t partial apply for closure #2 in ControlsButtonProvider.buttonChanged()(void *a1, uint64_t a2, uint64_t a3)
{
  return closure #2 in ControlsButtonProvider.buttonChanged()(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

id outlined copy of ButtonBackgroundStyle?(id result, void *a2, char a3)
{
  if (a3 <= 0xFBu) {
    return outlined copy of ButtonBackgroundStyle(result, a2, a3);
  }
  return result;
}

void outlined consume of ButtonBackgroundStyle?(void *a1, void *a2, char a3)
{
  if (a3 <= 0xFBu) {
    outlined consume of ButtonBackgroundStyle(a1, a2, a3);
  }
}

uint64_t sub_1C35A8410()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ControlsButtonProvider.updateButtonConfiguration()()
{
  return closure #1 in ControlsButtonProvider.updateButtonConfiguration()(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C35A845C()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t ControlsButtonProvider.__deallocating_deinit()
{
  ControlsButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ButtonLifecycleDelegate.didLayoutSubviews(button:) in conformance ControlsButtonProvider()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t protocol witness for ButtonLifecycleDelegate.movedToWindow(button:) in conformance ControlsButtonProvider()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t protocol witness for ButtonLifecycleDelegate.startedContextMenu(button:animator:) in conformance ControlsButtonProvider()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t protocol witness for ButtonLifecycleDelegate.endedContextMenu(button:animator:) in conformance ControlsButtonProvider()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t ControlsButtonProvider.usesVibrantBackgroundStyle.getter()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 168))();
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_tintAdjustmentMode) == (id)2 || !v0[40])
  {

LABEL_8:
    char v4 = 0;
    return v4 & 1;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  char v3 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 320))();

  char v4 = v3 ^ 1;
  return v4 & 1;
}

id ControlsButtonProvider.defaultVibrantBackgroundStyle.getter()
{
  if (*(unsigned __int8 *)(v0 + 40) < 2u) {
    return 0;
  }
  type metadata accessor for ConversationHUDInCallBackdropView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id ControlsButtonProvider.defaultFlatBackgroundColor.getter()
{
  id result = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  id v2 = result;
  if (!*(unsigned char *)(v0 + 40))
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    id v4 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    return @nonobjc UIColor.init(dynamicProvider:)((uint64_t)partial apply for closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter, v3);
  }
  return result;
}

id closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)UITraitCollection.modifyingTraits(_:)();
  id v4 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, v3);

  return v4;
}

uint64_t closure #1 in closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(uint64_t a1)
{
  return UIMutableTraits.userInterfaceLevel.setter();
}

uint64_t closure #1 in ControlsButtonProvider.textAttributesTransformer(font:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
  id v7 = a2;
  return AttributeContainer.subscript.setter();
}

uint64_t ControlsButtonProvider.presentingControl.getter()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t protocol witness for ControlMenuPresenter.menuDataSource.getter in conformance ControlsButtonProvider()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t ControlsButtonProvider.debugDescription.getter()
{
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ControlsButtonProvider.Type);
  v0._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 0x7865746E6F63203ALL;
  v1._object = (void *)0xEC000000203D2074;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x206570616873203BLL;
  v3._object = (void *)0xEA0000000000203DLL;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 15931;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  return 60;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ControlsButtonProvider()
{
  return ControlsButtonProvider.debugDescription.getter();
}

uint64_t sub_1C35A8A70()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 168))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

void sub_1C35A8AB4()
{
  OUTLINED_FUNCTION_6_4();
  double *v0 = (*(double (**)(void))(v1 + 192))();
}

uint64_t sub_1C35A8AF4()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1C35A8B38()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 216))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_1C35A8B84()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 272))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_1C35A8BD0()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 296))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1C35A8C1C()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 320))();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_1C35A8C68()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 344))();
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1C35A8CB4()
{
  OUTLINED_FUNCTION_6_4();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 368))();
  uint64_t *v0 = result;
  return result;
}

uint64_t type metadata accessor for ConversationControlsButtonProvider()
{
  return self;
}

uint64_t method lookup function for ConversationControlsButtonProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsButtonProvider);
}

uint64_t dispatch thunk of ConversationControlsButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  return (*(uint64_t (**)(void))(v0 + 472))();
}

uint64_t type metadata accessor for ControlsButtonProvider()
{
  return self;
}

uint64_t method lookup function for ControlsButtonProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlsButtonProvider);
}

uint64_t dispatch thunk of ControlsButtonProvider.button.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ControlsButtonProvider.cnkContentAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ControlsButtonProvider.cnkContentAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ControlsButtonProvider.cnkContentAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ControlsButtonProvider.callbackCancellable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ControlsButtonProvider.callbackCancellable.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ControlsButtonProvider.callbackCancellable.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ControlsButtonProvider.menuDataSource.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ControlsButtonProvider.backgroundStyle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ControlsButtonProvider.backgroundStyle.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ControlsButtonProvider.backgroundStyle.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ControlsButtonProvider.foregroundColor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ControlsButtonProvider.foregroundColor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ControlsButtonProvider.foregroundColor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ControlsButtonProvider.captureGroupName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ControlsButtonProvider.captureGroupName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of ControlsButtonProvider.captureGroupName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ControlsButtonProvider.image.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of ControlsButtonProvider.image.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ControlsButtonProvider.image.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of ControlsButtonProvider.title.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of ControlsButtonProvider.title.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of ControlsButtonProvider.title.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of ControlsButtonProvider.titleFont.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of ControlsButtonProvider.titleFont.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of ControlsButtonProvider.titleFont.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of ControlsButtonProvider.__allocating_init(context:shape:)()
{
  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t dispatch thunk of ControlsButtonProvider.makeButton(frame:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of ControlsButtonProvider.updateButtonConfiguration()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of ControlsButtonProvider.buttonConfiguration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of ControlsButtonProvider.buttonChanged()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ControlsButtonProvider.didLayoutSubviews(button:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of ControlsButtonProvider.movedToWindow(button:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ControlsButtonProvider.startedContextMenu(button:animator:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of ControlsButtonProvider.endedContextMenu(button:animator:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

ValueMetadata *type metadata accessor for ControlsButtonProvider.ImageGeometry()
{
  return &type metadata for ControlsButtonProvider.ImageGeometry;
}

uint64_t sub_1C35A9340()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(uint64_t a1)
{
  return closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #1 in ControlsButtonProvider.textAttributesTransformer(font:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in ControlsButtonProvider.textAttributesTransformer(font:)(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C35A9394()
{
  return 8;
}

uint64_t sub_1C35A93A0()
{
  return swift_release();
}

uint64_t sub_1C35A93A8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1C35A93BC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t type metadata accessor for UIPointerStyle()
{
  unint64_t result = lazy cache variable for type metadata for UIPointerStyle;
  if (!lazy cache variable for type metadata for UIPointerStyle)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIPointerStyle);
  }
  return result;
}

uint64_t *AssetPackageDescriptor.phoneInCall.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneInCall != -1) {
    swift_once();
  }
  return &static AssetPackageDescriptor.phoneInCall;
}

uint64_t *AssetPackageDescriptor.faceTimeVideo.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTimeVideo != -1) {
    swift_once();
  }
  return &static AssetPackageDescriptor.faceTimeVideo;
}

uint64_t static AssetPackageDescriptor.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    type metadata accessor for NSObject();
    if (static NSObject.== infix(_:_:)())
    {
      uint64_t v7 = a1[4];
      uint64_t v8 = a2[4];
      if (v7)
      {
        if (v8)
        {
          BOOL v9 = a1[3] == a2[3] && v7 == v8;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t AssetPackageDescriptor.packageName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id AssetPackageDescriptor.bundle.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t AssetPackageDescriptor.activeState.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall AssetPackageDescriptor.init(packageName:bundle:activeState:)(ConversationKit::AssetPackageDescriptor *__return_ptr retstr, Swift::String packageName, NSBundle bundle, Swift::String_optional activeState)
{
  retstr->packageName = packageName;
  retstr->bundle = bundle;
  retstr->activeState = activeState;
}

uint64_t one-time initialization function for faceTimeVideo()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  return OUTLINED_FUNCTION_1_141((uint64_t)v0, &static AssetPackageDescriptor.faceTimeVideo);
}

uint64_t static AssetPackageDescriptor.faceTimeVideo.getter()
{
  if (one-time initialization token for faceTimeVideo != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_110(&static AssetPackageDescriptor.faceTimeVideo);
  id v1 = v0;
  return swift_bridgeObjectRetain();
}

uint64_t one-time initialization function for phoneInCall()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  return OUTLINED_FUNCTION_1_141((uint64_t)v0, &static AssetPackageDescriptor.phoneInCall);
}

uint64_t static AssetPackageDescriptor.phoneInCall.getter()
{
  if (one-time initialization token for phoneInCall != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_110(&static AssetPackageDescriptor.phoneInCall);
  id v1 = v0;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for AssetPackageDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AssetPackageDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  char v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AssetPackageDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  char v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssetPackageDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetPackageDescriptor()
{
  return &type metadata for AssetPackageDescriptor;
}

BOOL ConversationControlsRecipe.isNotice.getter()
{
  outlined init with copy of ConversationControlsType(v0, (uint64_t)v3);
  BOOL v1 = v3[40] == 0;
  outlined destroy of ConversationControlsType((uint64_t)v3);
  return v1;
}

uint64_t ConversationControlsRecipe.debugDescription.getter()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(25);
  uint64_t v2 = ConversationControlsType.debugDescription.getter();
  swift_bridgeObjectRelease();
  uint64_t v20 = v2;
  v3._uint64_t countAndFlagsBits = 0x3A656C746974202CLL;
  v3._object = (void *)0xE800000000000000;
  String.append(_:)(v3);
  id v4 = objc_msgSend(*(id *)(v1 + 80), sel_string);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x746974627573202CLL;
  v9._object = (void *)0xEB000000003A656CLL;
  String.append(_:)(v9);
  unint64_t v10 = *(void *)(v1 + 88);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    double v17 = (void *)0xE000000000000000;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_7;
  }
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v10 & 0xC000000000000001) == 0, v10);
  if ((v10 & 0xC000000000000001) != 0) {
    id v12 = (id)MEMORY[0x1C87744F0](0, v10);
  }
  else {
    id v12 = *(id *)(v10 + 32);
  }
  double v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, sel_string);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v17 = v16;

LABEL_8:
  v18._uint64_t countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t default argument 1 of ConversationControlsRecipe.View.init(view:fallbackImage:hash:)()
{
  return 0;
}

uint64_t ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, unint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, NSObject *a8@<X7>, uint64_t a9@<X8>, NSObject *a10, NSObject *a11, uint64_t a12, os_log_type_t a13, char a14, uint64_t a15, uint64_t a16, uint8_t *a17, void *a18, void *a19, unsigned __int8 a20)
{
  outlined init with take of ConversationControlsRecipe.Actions?((uint64_t)a17, (uint64_t)v69);
  uint64_t v55 = v70;
  uint64_t v56 = v71;
  CGFloat v25 = (int *)type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_63();
  uint64_t v28 = (uint64_t)v20 + *(int *)(v27 + 36);
  uint64_t v58 = v28;
  uint64_t v29 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload(v28, 1, 1, v29);
  double v30 = (NSObject **)((char *)v20 + v25[10]);
  CGFloat v31 = (char *)v20 + v25[15];
  *((void *)v31 + 4) = 0;
  *(_OWORD *)CGFloat v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  uint64_t v57 = (uint64_t)v31;
  v31[40] = -2;
  *((unsigned char *)v20 + v25[16]) = 0;
  double v32 = (char *)v20 + v25[17];
  *(void *)double v32 = 0;
  *((void *)v32 + 1) = 0;
  v32[16] = -1;
  double v33 = (char *)v20 + v25[18];
  *(void *)double v33 = 1;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_OWORD *)(v33 + 40) = 0u;
  *(_OWORD *)(v33 + 56) = 0u;
  v33[72] = 0;
  outlined init with copy of ConversationControlsType(a1, (uint64_t)v20);
  v20[6] = a2;
  v20[7] = a3;
  void v20[8] = a4;
  v20[9] = a5;
  void v20[10] = a6;
  v20[11] = a7;
  *double v30 = a8;
  v30[1] = a10;
  void v30[2] = a11;
  id v65 = a6;
  outlined copy of ConversationControlsRecipe.View?(a8, a10);
  uint64_t v60 = a3;
  id v61 = a4;
  outlined copy of ConversationControlsRecipe.View?(a3, a4);
  id v34 = a2;
  outlined assign with copy of AttributedString?(a12, v58);
  *((unsigned char *)v20 + v25[11]) = a13;
  *((unsigned char *)v20 + v25[12]) = a14;
  *(void *)((char *)v20 + v25[13]) = a15;
  *(void *)((char *)v20 + v25[14]) = a16;
  uint64_t v35 = *(void **)v32;
  uint64_t v36 = *((void *)v32 + 1);
  *(void *)double v32 = a18;
  *((void *)v32 + 1) = a19;
  LOBYTE(a4) = v32[16];
  v32[16] = a20;
  outlined copy of LeadingViewType?(a18, (uint64_t)a19, a20);
  outlined consume of LeadingViewType?(v35, v36, a4);
  outlined init with take of ConversationControlsRecipe.Actions?((uint64_t)a17, (uint64_t)&v72);
  if (v73 >= 0xFEu)
  {
    outlined consume of LeadingViewType?(a18, (uint64_t)a19, a20);
    outlined consume of ConversationControlsRecipe.View?(a8, a10);

    outlined consume of ConversationControlsRecipe.View?(v60, v61);
LABEL_16:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a12, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    outlined destroy of ConversationControlsType(a1);
    outlined assign with take of CompactPresentable?((uint64_t)a17, v57, &demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
    outlined init with copy of ConversationControlsRecipe((uint64_t)v20, a9);
    __swift_storeEnumTagSinglePayload(a9, 0, 1, (uint64_t)v25);
    return _s15ConversationKit0A14ControlsRecipeVWOhTm_1((uint64_t)v20, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  }
  outlined init with take of ConversationControlsType(&v72, &v74);
  outlined init with take of ConversationControlsType(&v74, &v75);
  if (v76 < 0)
  {
    v76 &= ~0x80u;
    OUTLINED_FUNCTION_0_111();
    uint64_t v37 = a8;
    CGRect v38 = a18;
    unint64_t v39 = v65;
    if (a5 > 5)
    {
      unsigned int v59 = v34;
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v48 = type metadata accessor for Logger();
      unint64_t v41 = (void *)OUTLINED_FUNCTION_2_132(v48, (uint64_t)static Logger.conversationControls);
      os_log_type_t v49 = static os_log_type_t.fault.getter();
      if (OUTLINED_FUNCTION_15_76(v49))
      {
        OUTLINED_FUNCTION_14_73();
        uint64_t v50 = OUTLINED_FUNCTION_10_81();
        OUTLINED_FUNCTION_13_77(v50);
        OUTLINED_FUNCTION_8_83(4.8149e-34);
        uint64_t v51 = String.init<A>(reflecting:)();
        uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, &v68);
        OUTLINED_FUNCTION_7_103(v53);
        swift_bridgeObjectRelease();
        outlined release of ConversationControlsRecipe.Actions?((uint64_t)v61);
        outlined release of ConversationControlsRecipe.Actions?((uint64_t)v61);
        uint64_t v47 = "Too many buttonShelf actions (%s)";
        goto LABEL_14;
      }
LABEL_17:
      OUTLINED_FUNCTION_4_123();

      OUTLINED_FUNCTION_18_62();
      outlined release of ConversationControlsRecipe.Actions?((uint64_t)a17);
      outlined release of ConversationControlsRecipe.Actions?((uint64_t)a17);
      outlined consume of ConversationControlsRecipe.Actions(v37, v55, a19, v56, a18, v34);
      goto LABEL_18;
    }
LABEL_15:
    outlined consume of LeadingViewType?(v38, (uint64_t)a19, a20);
    outlined consume of ConversationControlsRecipe.View?(v37, a10);

    OUTLINED_FUNCTION_18_62();
    outlined release of ConversationControlsRecipe.Actions?((uint64_t)a17);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_0_111();
  uint64_t v37 = a8;
  CGRect v38 = a18;
  unint64_t v39 = v65;
  if (a5 <= 2) {
    goto LABEL_15;
  }
  unsigned int v59 = v34;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  unint64_t v41 = (void *)OUTLINED_FUNCTION_2_132(v40, (uint64_t)static Logger.conversationControls);
  os_log_type_t v42 = static os_log_type_t.fault.getter();
  if (!OUTLINED_FUNCTION_15_76(v42)) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_14_73();
  uint64_t v43 = OUTLINED_FUNCTION_10_81();
  OUTLINED_FUNCTION_13_77(v43);
  OUTLINED_FUNCTION_8_83(4.8149e-34);
  uint64_t v44 = String.init<A>(reflecting:)();
  uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v68);
  OUTLINED_FUNCTION_7_103(v46);
  swift_bridgeObjectRelease();
  outlined release of ConversationControlsRecipe.Actions?((uint64_t)v61);
  outlined release of ConversationControlsRecipe.Actions?((uint64_t)v61);
  uint64_t v47 = "Too many trailing actions (%s)";
LABEL_14:
  _os_log_impl(&dword_1C2F90000, v37, a13, v47, a17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C87760E0](v60, -1, -1);
  MEMORY[0x1C87760E0](a17, -1, -1);
  OUTLINED_FUNCTION_4_123();

  outlined consume of ConversationControlsRecipe.View?(a18, a19);
  outlined release of ConversationControlsRecipe.Actions?((uint64_t)v61);
LABEL_18:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a12, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  outlined destroy of ConversationControlsType(a1);
  _s15ConversationKit0A14ControlsRecipeVWOhTm_1((uint64_t)v20, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  return __swift_storeEnumTagSinglePayload(a9, 1, 1, (uint64_t)v25);
}

uint64_t SystemApertureElement.init(leadingView:trailingView:minimalView:detachedMinimalView:maximumLayoutMode:alertingStyle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11;
  return result;
}

uint64_t ConversationControlsRecipe.supportsAlerting.getter()
{
  outlined init with copy of ConversationControlsType(v0, (uint64_t)&v6);
  if (v9 == 2)
  {
    uint64_t v4 = 0;
  }
  else
  {
    if (v9 == 6)
    {
      int8x16_t v1 = vorrq_s8(v7, v8);
      int8x8_t v2 = vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL));
      if (v6 == 5 && *(void *)&v2 == 0) {
        return 0;
      }
    }
    uint64_t v4 = 1;
  }
  outlined destroy of ConversationControlsType((uint64_t)&v6);
  return v4;
}

uint64_t SystemApertureElement.AlertingStyle.alertRequiredForTransition(from:)(unsigned __int8 a1, char a2)
{
  BOOL v2 = a1 > 0xFDu || (a1 & 0xC0) != 64;
  return (a2 & 0x80) == 0 || v2;
}

uint64_t ConversationControlsRecipe.buttonShelfActions.getter()
{
  uint64_t v2 = v1 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 60);
  uint64_t v3 = *(char *)(v2 + 40);
  if ((int)v3 > -3) {
    return MEMORY[0x1E4FBC860];
  }
  OUTLINED_FUNCTION_17_60(v3, (uint64_t *)v2);
  return v0;
}

uint64_t EphemeralAlert.description.getter(id a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    id v4 = objc_msgSend(a1, sel_string);
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    v8._uint64_t countAndFlagsBits = 2108704;
    v8._object = (void *)0xE300000000000000;
    String.append(_:)(v8);
    id v9 = objc_msgSend(v3, sel_string, v5, v7);
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v12 = v11;

    v13._uint64_t countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);

    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = objc_msgSend(a1, sel_string);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_35();
}

uint64_t ConversationControlsRecipe.isMicIndicatorVisible.getter()
{
  uint64_t v1 = type metadata accessor for ConversationControlsAction();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  uint64_t v3 = ConversationControlsRecipe.allActions.getter();
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v5 = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v6 = *(void *)(v2 + 72);
    uint64_t v7 = v4 - 1;
    do
    {
      uint64_t v8 = v7;
      static ConversationControlsAction.== infix(_:_:)();
      char v10 = v9;
      if (v9) {
        break;
      }
      uint64_t v7 = v8 - 1;
      v5 += v6;
    }
    while (v8);
  }
  else
  {
    char v10 = 0;
  }
  _s15ConversationKit0A14ControlsRecipeVWOhTm_1(v0, (void (*)(void))type metadata accessor for ConversationControlsAction);
  swift_bridgeObjectRelease();
  return v10 & 1;
}

void ConversationControlsRecipe.copyWithoutSystemApertureViews()(uint64_t a1@<X8>)
{
  outlined init with copy of ConversationControlsRecipe(v1, a1);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 72);
  uint64_t v4 = *(void *)(v3 + 8);
  unint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void **)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  char v9 = *(void **)(v3 + 48);
  uint64_t v10 = *(void *)(v3 + 56);
  uint64_t v11 = *(void *)(v3 + 64);
  char v12 = *(unsigned char *)(v3 + 72);
  if (*(void *)v3 == 1)
  {
    uint64_t v13 = 1;
  }
  else
  {
    outlined consume of SystemApertureElement?(*(void **)v3, v4, v5, v6, v7, v8, v9);
    uint64_t v13 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    char v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)uint64_t v3 = v13;
  *(void *)(v3 + 8) = v4;
  *(void *)(v3 + 16) = v5;
  *(void *)(v3 + 24) = v6;
  *(void *)(v3 + 32) = v7;
  *(void *)(v3 + 40) = v8;
  *(void *)(v3 + 48) = v9;
  *(void *)(v3 + 56) = v10;
  *(void *)(v3 + 64) = v11;
  *(unsigned char *)(v3 + 72) = v12;
}

uint64_t ConversationControlsRecipe.showsDefaultHUDOnTap.getter()
{
  uint64_t v3 = 24;
  long long v4 = 0u;
  long long v5 = 0u;
  char v6 = 6;
  char v1 = static ConversationControlsType.== infix(_:_:)(v0);
  outlined destroy of ConversationControlsType((uint64_t)&v3);
  return v1 & 1;
}

uint64_t ConversationControlsRecipe.trailingActions.getter()
{
  uint64_t v2 = v1 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 60);
  uint64_t v3 = *(char *)(v2 + 40);
  if ((v3 & 0x80000000) != 0) {
    return MEMORY[0x1E4FBC860];
  }
  OUTLINED_FUNCTION_17_60(v3, (uint64_t *)v2);
  return v0;
}

uint64_t SystemApertureElement.leadingView.getter()
{
  id v1 = *v0;
  return OUTLINED_FUNCTION_35();
}

uint64_t SystemApertureElement.trailingView.getter()
{
  id v1 = *(id *)(v0 + 16);
  return OUTLINED_FUNCTION_35();
}

uint64_t SystemApertureElement.minimalView.getter()
{
  id v1 = *(id *)(v0 + 32);
  return OUTLINED_FUNCTION_35();
}

uint64_t SystemApertureElement.detachedMinimalView.getter()
{
  id v1 = *(id *)(v0 + 48);
  return OUTLINED_FUNCTION_35();
}

uint64_t SystemApertureElement.maximumLayoutMode.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t SystemApertureElement.maximumLayoutMode.setter(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t (*SystemApertureElement.maximumLayoutMode.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SystemApertureElement.AlertingStyle.debugDescription.getter(unsigned __int8 a1)
{
  if (!(a1 >> 6)) {
    return 0x676E697472656C61;
  }
  if (a1 >> 6 != 1) {
    return 6583656;
  }
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0xD000000000000011;
}

uint64_t static SystemApertureElement.AlertingStyle.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40) {
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    if (a2 == 128)
    {
      char v2 = 1;
      return v2 & 1;
    }
LABEL_9:
    char v2 = 0;
    return v2 & 1;
  }
  if (a2 >= 0x40u) {
    goto LABEL_9;
  }
LABEL_6:
  char v2 = ((a1 & 1) == 0) ^ a2;
  return v2 & 1;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SystemApertureElement.AlertingStyle()
{
  return SystemApertureElement.AlertingStyle.debugDescription.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureElement.AlertingStyle(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SystemApertureElement.AlertingStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t SystemApertureElement.alertingStyle.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

double SystemApertureElement.copyWithoutViews()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  char v3 = *(unsigned char *)(v1 + 72);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = v2;
  *(unsigned char *)(a1 + 72) = v3;
  return result;
}

void *ConversationControlsRecipe.View.fallbackImage.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void ConversationControlsRecipe.View.fallbackImage.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*ConversationControlsRecipe.View.fallbackImage.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.View.hash.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t ConversationControlsRecipe.LabelConfiguration.numberOfLines.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ConversationControlsRecipe.LabelConfiguration.numberOfLines.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

ConversationKit::ConversationControlsRecipe::LabelConfiguration __swiftcall ConversationControlsRecipe.LabelConfiguration.init()()
{
  return (ConversationKit::ConversationControlsRecipe::LabelConfiguration)1;
}

uint64_t default argument 0 of ConversationControlsRecipe.LabelConfiguration.init(numberOfLines:)()
{
  return 1;
}

void *ConversationControlsRecipe.maxTrailingActions.unsafeMutableAddressor()
{
  return &static ConversationControlsRecipe.maxTrailingActions;
}

uint64_t static ConversationControlsRecipe.maxTrailingActions.getter()
{
  return 2;
}

void *ConversationControlsRecipe.maxButtonShelfActions.unsafeMutableAddressor()
{
  return &static ConversationControlsRecipe.maxButtonShelfActions;
}

uint64_t static ConversationControlsRecipe.maxButtonShelfActions.getter()
{
  return 5;
}

uint64_t ConversationControlsRecipe.type.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ConversationControlsType(v1, a1);
}

uint64_t ConversationControlsRecipe.type.setter(uint64_t a1)
{
  return outlined assign with take of ConversationControlsType(a1, v1);
}

uint64_t (*ConversationControlsRecipe.type.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *ConversationControlsRecipe.avatar.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void ConversationControlsRecipe.avatar.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

uint64_t (*ConversationControlsRecipe.avatar.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *ConversationControlsRecipe.leadingAccessoryView.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  outlined copy of ConversationControlsRecipe.View?(v1, *(void **)(v0 + 64));
  return v1;
}

void ConversationControlsRecipe.leadingAccessoryView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  outlined consume of ConversationControlsRecipe.View?(*(void **)(v3 + 56), *(void **)(v3 + 64));
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = a3;
}

uint64_t (*ConversationControlsRecipe.leadingAccessoryView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ConversationControlsRecipe.title.getter()
{
  return *(id *)(v0 + 80);
}

void ConversationControlsRecipe.title.setter(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
}

uint64_t (*ConversationControlsRecipe.title.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.subtitles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ConversationControlsRecipe.subtitles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*ConversationControlsRecipe.subtitles.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.fullSentence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v1 + *(int *)(v3 + 36), a1, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
}

uint64_t ConversationControlsRecipe.fullSentence.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_142();
  return outlined assign with take of CompactPresentable?(v0, v1 + *(int *)(v2 + 36), (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
}

double (*ConversationControlsRecipe.fullSentence.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ConversationControlsRecipe.subtitleLeadingBadge.getter()
{
  uint64_t v1 = (id *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 40));
  id v2 = *v1;
  outlined copy of ConversationControlsRecipe.View?(*v1, v1[1]);
  return v2;
}

void ConversationControlsRecipe.subtitleLeadingBadge.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 40);
  outlined consume of ConversationControlsRecipe.View?(*(void **)v7, *(void **)(v7 + 8));
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(void *)(v7 + 16) = a3;
}

double (*ConversationControlsRecipe.subtitleLeadingBadge.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.showsInfoButton.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 44));
}

uint64_t ConversationControlsRecipe.showsInfoButton.setter(char a1)
{
  uint64_t result = type metadata accessor for ConversationControlsRecipe();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

double (*ConversationControlsRecipe.showsInfoButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.showsSubtitleChevron.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 48));
}

uint64_t ConversationControlsRecipe.showsSubtitleChevron.setter(char a1)
{
  uint64_t result = type metadata accessor for ConversationControlsRecipe();
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

double (*ConversationControlsRecipe.showsSubtitleChevron.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.titleConfiguration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 52));
}

uint64_t ConversationControlsRecipe.titleConfiguration.setter()
{
  uint64_t result = OUTLINED_FUNCTION_1_142();
  *(void *)(v1 + *(int *)(result + 52)) = v0;
  return result;
}

double (*ConversationControlsRecipe.titleConfiguration.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.subtitleConfiguration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 56));
}

uint64_t ConversationControlsRecipe.subtitleConfiguration.setter()
{
  uint64_t result = OUTLINED_FUNCTION_1_142();
  *(void *)(v1 + *(int *)(result + 56)) = v0;
  return result;
}

double (*ConversationControlsRecipe.subtitleConfiguration.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v1 + *(int *)(v3 + 60), a1, &demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
}

uint64_t ConversationControlsRecipe.actions.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_142();
  return outlined assign with take of CompactPresentable?(v0, v1 + *(int *)(v2 + 60), &demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
}

double (*ConversationControlsRecipe.actions.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUI.getter()
{
  uint64_t v2 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1F4188790](v2 - 8);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_12_72(4);
  char v7 = 6;
  char v3 = static ConversationControlsType.== infix(_:_:)(v1);
  outlined destroy of ConversationControlsType((uint64_t)v6);
  outlined init with copy of ConversationControlsRecipe(v1, v0);
  if (v3)
  {
    _s15ConversationKit0A14ControlsRecipeVWOhTm_1(v0, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    char v4 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_12_72(24);
    char v7 = 6;
    char v4 = static ConversationControlsType.== infix(_:_:)(v0) ^ 1;
    outlined destroy of ConversationControlsType((uint64_t)v6);
    _s15ConversationKit0A14ControlsRecipeVWOhTm_1(v0, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  }
  return v4 & 1;
}

uint64_t ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUIWhenCustom.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 64));
}

uint64_t ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUIWhenCustom.setter(char a1)
{
  uint64_t result = type metadata accessor for ConversationControlsRecipe();
  *(unsigned char *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

double (*ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUIWhenCustom.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.allowsCallDetailsPresentation.getter()
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_17_0();
  char v6 = *(unsigned char *)(v2 + *(int *)(v5 + 44));
  outlined init with copy of ConversationControlsRecipe(v2, v0);
  if (v6) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 48));
  }
  _s15ConversationKit0A14ControlsRecipeVWOhTm_1(v0, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  return v7;
}

id ConversationControlsRecipe.leadingViewType.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 68);
  id v2 = *(id *)v1;
  outlined copy of LeadingViewType?(*(id *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

void ConversationControlsRecipe.leadingViewType.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = v3 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 68);
  outlined consume of LeadingViewType?(*(id *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(unsigned char *)(v7 + 16) = a3;
}

double (*ConversationControlsRecipe.leadingViewType.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.systemApertureElement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v1 + *(int *)(v3 + 72), a1, (uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
}

uint64_t ConversationControlsRecipe.systemApertureElement.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_142();
  return outlined assign with take of CompactPresentable?(v0, v1 + *(int *)(v2 + 72), (uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
}

double (*ConversationControlsRecipe.systemApertureElement.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.requiresAnimation(from:)(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_63();
  uint64_t v5 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v23 - v10;
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_6:
    char v14 = 1;
    return v14 & 1;
  }
  outlined init with take of ConversationControlsRecipe(v2, (uint64_t)v11);
  OUTLINED_FUNCTION_16_59(23);
  char v25 = 6;
  char v12 = static ConversationControlsType.== infix(_:_:)(v1);
  outlined destroy of ConversationControlsType((uint64_t)v24);
  outlined init with copy of ConversationControlsRecipe((uint64_t)v11, (uint64_t)v8);
  if (v12)
  {
    OUTLINED_FUNCTION_16_59(22);
    char v25 = 6;
    char v13 = static ConversationControlsType.== infix(_:_:)((uint64_t)v8);
    outlined destroy of ConversationControlsType((uint64_t)v24);
    _s15ConversationKit0A14ControlsRecipeVWOhTm_1((uint64_t)v8, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    if (v13)
    {
      _s15ConversationKit0A14ControlsRecipeVWOhTm_1((uint64_t)v11, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_6;
    }
  }
  else
  {
    _s15ConversationKit0A14ControlsRecipeVWOhTm_1((uint64_t)v8, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  }
  uint64_t v15 = *(int *)(v5 + 60);
  double v16 = (void *)(v1 + v15);
  uint64_t v17 = *(char *)(v1 + v15 + 40);
  if ((int)v17 <= -3)
  {
    uint64_t v18 = *v16;
    outlined copy of ConversationControlsRecipe.Actions(*v16, v16[1], v16[2], v16[3], v16[4], v17);
    uint64_t v15 = *(int *)(v5 + 60);
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  double v19 = &v11[v15];
  uint64_t v20 = v19[40];
  if ((int)v20 <= -3) {
    outlined copy of ConversationControlsRecipe.Actions(*(void *)v19, *((void *)v19 + 1), *((void *)v19 + 2), *((void *)v19 + 3), *((void *)v19 + 4), v20);
  }
  v24[0] = v18;
  specialized Array.append<A>(contentsOf:)();
  specialized Set.init<A>(_:)();
  v24[0] = v21;
  if (one-time initialization token for avLessLeaveConfirmationActions != -1) {
    swift_once();
  }
  v23[1] = static ConversationControlsAction.avLessLeaveConfirmationActions;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<ConversationControlsAction>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ConversationControlsAction]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Set<ConversationControlsAction> and conformance Set<A>, &demangling cache variable for type metadata for Set<ConversationControlsAction>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [ConversationControlsAction] and conformance [A], &demangling cache variable for type metadata for [ConversationControlsAction]);
  lazy protocol witness table accessor for type ConversationControlsAction and conformance ConversationControlsAction();
  char v14 = Collection<>.contains<A>(_:)();
  swift_bridgeObjectRelease();
  _s15ConversationKit0A14ControlsRecipeVWOhTm_1((uint64_t)v11, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  return v14 & 1;
}

uint64_t ConversationControlsRecipe.wantsSessionSizeClass.getter()
{
  outlined init with copy of ConversationControlsType(v0, (uint64_t)&v7);
  if (v10 == 1)
  {
    uint64_t v5 = 1;
  }
  else
  {
    if (v10 == 6)
    {
      BOOL v1 = v7 == 5 || v7 == 2;
      int8x16_t v2 = vorrq_s8(v8, v9);
      int8x8_t v3 = vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
      if (v1 && *(void *)&v3 == 0) {
        return 1;
      }
    }
    uint64_t v5 = 0;
  }
  outlined destroy of ConversationControlsType((uint64_t)&v7);
  return v5;
}

uint64_t static ConversationControlsRecipe.Actions.== infix(_:_:)(long long *a1, long long *a2)
{
  outlined init with take of ConversationControlsType(a1, &v23);
  char v3 = v27;
  if (v27 < 0)
  {
    v27 &= ~0x80u;
    uint64_t v5 = *((void *)&v23 + 1);
    uint64_t v6 = v24;
    uint64_t v7 = v25;
    double v8 = v26;
    outlined init with take of ConversationControlsType(a2, &v18);
    char v9 = v22;
    if ((v22 & 0x80) == 0) {
      goto LABEL_13;
    }
    v22 &= ~0x80u;
    uint64_t v10 = *((void *)&v18 + 1);
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    double v13 = v21;
    specialized static Array<A>.== infix(_:_:)();
    if ((v14 & 1) == 0) {
      goto LABEL_13;
    }
    BOOL v15 = v5 == v10 && v6 == v11;
    if (!v15 || v7 != v12) {
      goto LABEL_13;
    }
    if (v3)
    {
      if ((v9 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else if ((v9 & 1) != 0 || v8 != v13)
    {
      goto LABEL_13;
    }
    char v4 = 1;
    return v4 & 1;
  }
  outlined init with take of ConversationControlsType(a2, &v18);
  if (v22 < 0)
  {
LABEL_13:
    char v4 = 0;
    return v4 & 1;
  }
  specialized static Array<A>.== infix(_:_:)();
  return v4 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsRecipe.Actions(long long *a1, long long *a2)
{
  outlined init with take of ConversationControlsType(a1, v4);
  outlined init with take of ConversationControlsType(a2, v5);
  return static ConversationControlsRecipe.Actions.== infix(_:_:)(v4, v5) & 1;
}

uint64_t ConversationControlsRecipe.allActions.getter()
{
  BOOL v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 60));
  uint64_t v2 = *((unsigned __int8 *)v1 + 40);
  if (v2 <= 0xFD)
  {
    if ((v2 & 0x80) != 0) {
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    else {
      uint64_t v4 = *v1;
    }
    outlined copy of ConversationControlsRecipe.Actions(*v1, v1[1], v1[2], v1[3], v1[4], v2);
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  specialized Array.append<A>(contentsOf:)();
  return v4;
}

void *EphemeralAlert.subtitle.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

uint64_t EphemeralAlert.wantsAutomaticDismissal.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t EphemeralAlert.wantsAutomaticDismissal.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*EphemeralAlert.wantsAutomaticDismissal.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EphemeralAlert()
{
  return EphemeralAlert.description.getter(*v0, v0[1]);
}

uint64_t outlined init with take of ConversationControlsRecipe.Actions?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConversationControlsRecipe()
{
  uint64_t result = type metadata singleton initialization cache for ConversationControlsRecipe;
  if (!type metadata singleton initialization cache for ConversationControlsRecipe) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined assign with copy of AttributedString?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined release of ConversationControlsRecipe.Actions?(uint64_t a1)
{
  return a1;
}

uint64_t _s15ConversationKit0A14ControlsRecipeVWOhTm_1(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsAction and conformance ConversationControlsAction()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction)
  {
    type metadata accessor for ConversationControlsAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction);
  }
  return result;
}

void destroy for SystemApertureElement(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for SystemApertureElement(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v10 = (void *)v4;
  long long v11 = a2[2];
  long long v12 = a2[3];
  *(_OWORD *)(a1 + 32) = v11;
  *(_OWORD *)(a1 + 48) = v12;
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  id v5 = (id)v3;
  id v6 = v10;
  id v7 = (id)v11;
  id v8 = (id)v12;
  return a1;
}

uint64_t assignWithCopy for SystemApertureElement(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  id v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v4;

  *(void *)(a1 + 8) = v5;
  id v8 = *(void **)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v8;
  id v11 = v8;

  *(void *)(a1 + 24) = v9;
  long long v12 = *(void **)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  char v14 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v12;
  id v15 = v12;

  *(void *)(a1 + 40) = v13;
  double v16 = *(void **)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  long long v18 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v16;
  id v19 = v16;

  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void *__swift_memcpy73_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for SystemApertureElement(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureElement(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 73))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureElement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for SystemApertureElement()
{
}

uint64_t getEnumTagSinglePayload for SystemApertureElement.AlertingStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7E)
  {
    if (a2 + 130 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 130) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 131;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v5 >= 0x7D) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for SystemApertureElement.AlertingStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *unint64_t result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C35AC1D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for SystemApertureElement.AlertingStyle(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return v1 & 1 | 2u;
  }
}

unsigned char *destructiveProjectEnumData for SystemApertureElement.AlertingStyle(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *destructiveInjectEnumTag for SystemApertureElement.AlertingStyle(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    char v2 = *result & 1 | ((_BYTE)a2 << 6);
  }
  else {
    char v2 = a2 & 1 | 0x80;
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for SystemApertureElement.AlertingStyle()
{
}

void destroy for LeadingViewType(id *a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for LeadingViewType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of PreCallControlsContext(*(id *)a2);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LeadingViewType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of PreCallControlsContext(*(id *)a2);
  unsigned int v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of PreCallControlsContext(v6);
  return a1;
}

uint64_t assignWithTake for LeadingViewType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of PreCallControlsContext(v4);
  return a1;
}

void type metadata accessor for LeadingViewType()
{
}

char *initializeBufferWithCopyOfBuffer for ConversationControlsRecipe(char *a1, char **a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v8 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(*((unsigned char *)a2 + 40))
    {
      case 0:
        long long v7 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(char *, char **))(v7 - 8))(a1, a2);
        unsigned char v4[40] = 0;
        break;
      case 1:
        uint64_t v9 = a2[1];
        *(void *)uint64_t v4 = *a2;
        *((void *)v4 + 1) = v9;
        char v10 = 1;
        goto LABEL_8;
      case 2:
        id v11 = *a2;
        *(void *)a1 = *a2;
        a1[40] = 2;
        long long v12 = v11;
        break;
      case 3:
        uint64_t v13 = a2[1];
        *(void *)uint64_t v4 = *a2;
        *((void *)v4 + 1) = v13;
        char v10 = 3;
LABEL_8:
        unsigned char v4[40] = v10;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[40] = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v14 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v14;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
        break;
    }
    id v15 = a2[7];
    double v16 = a2[6];
    *((void *)v4 + 6) = v16;
    uint64_t v17 = v16;
    if (v15)
    {
      id v19 = a2[8];
      long long v18 = a2[9];
      *((void *)v4 + 7) = v15;
      *((void *)v4 + 8) = v19;
      *((void *)v4 + 9) = v18;
      uint64_t v20 = v15;
      double v21 = v19;
    }
    else
    {
      *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
      *((void *)v4 + 9) = a2[9];
    }
    long long v23 = a2[10];
    char v22 = a2[11];
    *((void *)v4 + 10) = v23;
    *((void *)v4 + 11) = v22;
    uint64_t v24 = a3[9];
    uint64_t v25 = &v4[v24];
    double v26 = (char *)a2 + v24;
    uint64_t v27 = type metadata accessor for AttributedString();
    uint64_t v28 = v23;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
    uint64_t v30 = a3[10];
    CGFloat v31 = &v4[v30];
    uint64_t v32 = (uint64_t)a2 + v30;
    double v33 = *(void **)v32;
    if (*(void *)v32)
    {
      uint64_t v35 = *(void **)(v32 + 8);
      uint64_t v34 = *(void *)(v32 + 16);
      *(void *)CGFloat v31 = v33;
      *((void *)v31 + 1) = v35;
      *((void *)v31 + 2) = v34;
      id v36 = v33;
      id v37 = v35;
    }
    else
    {
      *(_OWORD *)CGFloat v31 = *(_OWORD *)v32;
      *((void *)v31 + 2) = *(void *)(v32 + 16);
    }
    uint64_t v38 = a3[12];
    v4[a3[11]] = *((unsigned char *)a2 + a3[11]);
    v4[v38] = *((unsigned char *)a2 + v38);
    uint64_t v39 = a3[14];
    *(void *)&v4[a3[13]] = *(char **)((char *)a2 + a3[13]);
    *(void *)&v4[v39] = *(char **)((char *)a2 + v39);
    uint64_t v40 = a3[15];
    unint64_t v41 = &v4[v40];
    os_log_type_t v42 = (uint64_t *)((char *)a2 + v40);
    unsigned int v43 = *((unsigned __int8 *)v42 + 40);
    if (v43 <= 0xFD)
    {
      uint64_t v45 = *v42;
      uint64_t v46 = v42[1];
      uint64_t v47 = v42[2];
      uint64_t v48 = v42[3];
      uint64_t v49 = v42[4];
      outlined copy of ConversationControlsRecipe.Actions(*v42, v46, v47, v48, v49, *((unsigned __int8 *)v42 + 40));
      *(void *)unint64_t v41 = v45;
      *((void *)v41 + 1) = v46;
      *((void *)v41 + 2) = v47;
      *((void *)v41 + 3) = v48;
      *((void *)v41 + 4) = v49;
      v41[40] = v43;
    }
    else
    {
      long long v44 = *((_OWORD *)v42 + 1);
      *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v44;
      *(_OWORD *)(v41 + 25) = *(_OWORD *)((char *)v42 + 25);
    }
    uint64_t v50 = a3[17];
    v4[a3[16]] = *((unsigned char *)a2 + a3[16]);
    uint64_t v51 = &v4[v50];
    unint64_t v52 = (uint64_t *)((char *)a2 + v50);
    int v53 = *((unsigned __int8 *)a2 + v50 + 16);
    if (v53 == 255)
    {
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      v51[16] = *((unsigned char *)v52 + 16);
    }
    else
    {
      char v54 = v53 & 1;
      uint64_t v55 = *v52;
      uint64_t v56 = v52[1];
      outlined copy of PreCallControlsContext((id)*v52);
      *(void *)uint64_t v51 = v55;
      *((void *)v51 + 1) = v56;
      v51[16] = v54;
    }
    uint64_t v57 = a3[18];
    uint64_t v58 = &v4[v57];
    uint64_t v59 = (uint64_t)a2 + v57;
    uint64_t v60 = *(char **)((char *)a2 + v57);
    if (v60 == (void *)1)
    {
      memcpy(v58, (const void *)v59, 0x49uLL);
    }
    else
    {
      uint64_t v61 = *(void *)(v59 + 8);
      *(void *)uint64_t v58 = v60;
      *((void *)v58 + 1) = v61;
      long long v67 = *(_OWORD *)(v59 + 16);
      long long v68 = *(_OWORD *)(v59 + 32);
      *((_OWORD *)v58 + 1) = v67;
      *((_OWORD *)v58 + 2) = v68;
      long long v69 = *(_OWORD *)(v59 + 48);
      *((_OWORD *)v58 + 3) = v69;
      *((void *)v58 + 8) = *(void *)(v59 + 64);
      v58[72] = *(unsigned char *)(v59 + 72);
      id v62 = v60;
      id v63 = (id)v67;
      id v64 = (id)v68;
      id v65 = (id)v69;
    }
  }
  return v4;
}

void destroy for ConversationControlsRecipe(uint64_t a1, int *a2)
{
  switch(*(unsigned char *)(a1 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  uint64_t v4 = *(void **)(a1 + 56);
  if (v4)
  {
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[9];
  uint64_t v6 = type metadata accessor for AttributedString();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  long long v7 = (id *)(a1 + a2[10]);
  if (*v7)
  {
  }
  uint64_t v8 = a1 + a2[15];
  uint64_t v9 = *(unsigned __int8 *)(v8 + 40);
  if (v9 <= 0xFD) {
    outlined consume of ConversationControlsRecipe.Actions(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), v9);
  }
  uint64_t v10 = a1 + a2[17];
  if (*(unsigned __int8 *)(v10 + 16) != 255) {
    outlined consume of PreCallControlsContext(*(id *)v10);
  }
  uint64_t v11 = a1 + a2[18];
  if (*(void *)v11 != 1)
  {

    long long v12 = *(void **)(v11 + 48);
  }
}

uint64_t initializeWithCopy for ConversationControlsRecipe(uint64_t a1, uint64_t a2, int *a3)
{
  switch(*(unsigned char *)(a2 + 40))
  {
    case 0:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
      break;
    case 1:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      char v8 = 1;
      goto LABEL_6;
    case 2:
      uint64_t v9 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 2;
      id v10 = v9;
      break;
    case 3:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      char v8 = 3;
LABEL_6:
      *(unsigned char *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  uint64_t v13 = *(void **)(a2 + 56);
  long long v14 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v14;
  id v15 = v14;
  if (v13)
  {
    uint64_t v17 = *(void **)(a2 + 64);
    uint64_t v16 = *(void *)(a2 + 72);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v16;
    id v18 = v13;
    id v19 = v17;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  double v21 = *(void **)(a2 + 80);
  uint64_t v20 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v21;
  *(void *)(a1 + 88) = v20;
  uint64_t v22 = a3[9];
  long long v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = type metadata accessor for AttributedString();
  id v26 = v21;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = a2 + v28;
  CGFloat v31 = *(void **)v30;
  if (*(void *)v30)
  {
    double v33 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
    void *v29 = v31;
    v29[1] = v33;
    v29[2] = v32;
    id v34 = v31;
    id v35 = v33;
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    v29[2] = *(void *)(v30 + 16);
  }
  uint64_t v36 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  uint64_t v37 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v37) = *(void *)(a2 + v37);
  uint64_t v38 = a3[15];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (uint64_t *)(a2 + v38);
  unsigned int v41 = *((unsigned __int8 *)v40 + 40);
  if (v41 <= 0xFD)
  {
    uint64_t v43 = *v40;
    uint64_t v44 = v40[1];
    uint64_t v45 = v40[2];
    uint64_t v46 = v40[3];
    uint64_t v47 = v40[4];
    outlined copy of ConversationControlsRecipe.Actions(*v40, v44, v45, v46, v47, *((unsigned __int8 *)v40 + 40));
    *(void *)uint64_t v39 = v43;
    *(void *)(v39 + 8) = v44;
    *(void *)(v39 + 16) = v45;
    *(void *)(v39 + 24) = v46;
    *(void *)(v39 + 32) = v47;
    *(unsigned char *)(v39 + 40) = v41;
  }
  else
  {
    long long v42 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(_OWORD *)(v39 + 16) = v42;
    *(_OWORD *)(v39 + 25) = *(_OWORD *)((char *)v40 + 25);
  }
  uint64_t v48 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (uint64_t *)(a2 + v48);
  int v51 = *(unsigned __int8 *)(a2 + v48 + 16);
  if (v51 == 255)
  {
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *(unsigned char *)(v49 + 16) = *((unsigned char *)v50 + 16);
  }
  else
  {
    char v52 = v51 & 1;
    uint64_t v53 = *v50;
    uint64_t v54 = v50[1];
    outlined copy of PreCallControlsContext((id)*v50);
    *(void *)uint64_t v49 = v53;
    *(void *)(v49 + 8) = v54;
    *(unsigned char *)(v49 + 16) = v52;
  }
  uint64_t v55 = a3[18];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = a2 + v55;
  uint64_t v58 = *(void **)(a2 + v55);
  if (v58 == (void *)1)
  {
    memcpy(v56, (const void *)v57, 0x49uLL);
  }
  else
  {
    uint64_t v59 = *(void *)(v57 + 8);
    *uint64_t v56 = v58;
    v56[1] = v59;
    long long v65 = *(_OWORD *)(v57 + 16);
    long long v66 = *(_OWORD *)(v57 + 32);
    *((_OWORD *)v56 + 1) = v65;
    *((_OWORD *)v56 + 2) = v66;
    long long v67 = *(_OWORD *)(v57 + 48);
    *((_OWORD *)v56 + 3) = v67;
    v56[8] = *(void *)(v57 + 64);
    *((unsigned char *)v56 + 72) = *(unsigned char *)(v57 + 72);
    id v60 = v58;
    id v61 = (id)v65;
    id v62 = (id)v66;
    id v63 = (id)v67;
  }
  return a1;
}

uint64_t assignWithCopy for ConversationControlsRecipe(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    switch(*((unsigned char *)a2 + 40))
    {
      case 0:
        uint64_t v6 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        break;
      case 1:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v7 = 1;
        goto LABEL_7;
      case 2:
        char v8 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 2;
        id v9 = v8;
        break;
      case 3:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v7 = 3;
LABEL_7:
        *(unsigned char *)(a1 + 40) = v7;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v10 = *a2;
        long long v11 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v10;
        *(_OWORD *)(a1 + 16) = v11;
        break;
    }
  }
  long long v12 = *(void **)(a1 + 48);
  uint64_t v13 = (void *)*((void *)a2 + 6);
  *(void *)(a1 + 48) = v13;
  id v14 = v13;

  id v15 = (_OWORD *)(a1 + 56);
  uint64_t v16 = *(void **)(a1 + 56);
  id v18 = (long long *)((char *)a2 + 56);
  uint64_t v17 = (void *)*((void *)a2 + 7);
  if (v16)
  {
    if (v17)
    {
      *(void *)(a1 + 56) = v17;
      id v19 = v17;

      uint64_t v20 = *(void **)(a1 + 64);
      double v21 = (void *)*((void *)a2 + 8);
      *(void *)(a1 + 64) = v21;
      id v22 = v21;

      *(void *)(a1 + 72) = *((void *)a2 + 9);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.View(a1 + 56);
      uint64_t v26 = *((void *)a2 + 9);
      *id v15 = *v18;
      *(void *)(a1 + 72) = v26;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 56) = v17;
    long long v23 = (void *)*((void *)a2 + 8);
    *(void *)(a1 + 64) = v23;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    id v24 = v17;
    id v25 = v23;
  }
  else
  {
    long long v27 = *v18;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *id v15 = v27;
  }
  uint64_t v28 = (void *)*((void *)a2 + 10);
  uint64_t v29 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v28;
  id v30 = v28;

  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)(a1 + v31);
  double v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for AttributedString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34);
  int v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34);
  if (EnumTagSinglePayload)
  {
    if (!v36)
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  uint64_t v37 = *(void *)(v34 - 8);
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v32, v34);
LABEL_22:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, char *, uint64_t))(v37 + 24))(v32, v33, v34);
LABEL_23:
  uint64_t v39 = a3[10];
  uint64_t v40 = (void *)(a1 + v39);
  unsigned int v41 = (long long *)((char *)a2 + v39);
  long long v42 = *(void **)(a1 + v39);
  uint64_t v43 = *(void **)((char *)a2 + v39);
  if (v42)
  {
    if (v43)
    {
      *uint64_t v40 = v43;
      id v44 = v43;

      uint64_t v45 = (void *)v40[1];
      uint64_t v46 = (void *)*((void *)v41 + 1);
      v40[1] = v46;
      id v47 = v46;

      uint64_t v48 = *((void *)v41 + 2);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.View((uint64_t)v40);
      uint64_t v48 = *((void *)v41 + 2);
      *(_OWORD *)uint64_t v40 = *v41;
    }
    void v40[2] = v48;
  }
  else if (v43)
  {
    *uint64_t v40 = v43;
    uint64_t v49 = (void *)*((void *)v41 + 1);
    v40[1] = v49;
    void v40[2] = *((void *)v41 + 2);
    id v50 = v43;
    id v51 = v49;
  }
  else
  {
    long long v115 = *v41;
    void v40[2] = *((void *)v41 + 2);
    *(_OWORD *)uint64_t v40 = v115;
  }
  *(unsigned char *)(a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  uint64_t v52 = a3[15];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = (uint64_t *)((char *)a2 + v52);
  uint64_t v55 = *((unsigned __int8 *)a2 + v52 + 40);
  if (*(unsigned __int8 *)(a1 + v52 + 40) <= 0xFDu)
  {
    if (v55 <= 0xFD)
    {
      uint64_t v65 = *v54;
      uint64_t v66 = v54[1];
      uint64_t v67 = v54[2];
      uint64_t v68 = v54[3];
      uint64_t v69 = v54[4];
      outlined copy of ConversationControlsRecipe.Actions(v65, v66, v67, v68, v69, v55);
      uint64_t v70 = *(void *)v53;
      uint64_t v71 = *(void *)(v53 + 8);
      uint64_t v72 = *(void *)(v53 + 16);
      uint64_t v73 = *(void *)(v53 + 24);
      uint64_t v74 = *(void *)(v53 + 32);
      *(void *)uint64_t v53 = v65;
      *(void *)(v53 + 8) = v66;
      *(void *)(v53 + 16) = v67;
      *(void *)(v53 + 24) = v68;
      *(void *)(v53 + 32) = v69;
      uint64_t v75 = *(unsigned __int8 *)(v53 + 40);
      *(unsigned char *)(v53 + 40) = v55;
      outlined consume of ConversationControlsRecipe.Actions(v70, v71, v72, v73, v74, v75);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.Actions(v53);
      long long v58 = *(_OWORD *)((char *)v54 + 25);
      long long v59 = *((_OWORD *)v54 + 1);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 16) = v59;
      *(_OWORD *)(v53 + 25) = v58;
    }
  }
  else if (v55 <= 0xFD)
  {
    uint64_t v60 = *v54;
    uint64_t v61 = v54[1];
    uint64_t v62 = v54[2];
    uint64_t v63 = v54[3];
    uint64_t v64 = v54[4];
    outlined copy of ConversationControlsRecipe.Actions(v60, v61, v62, v63, v64, v55);
    *(void *)uint64_t v53 = v60;
    *(void *)(v53 + 8) = v61;
    *(void *)(v53 + 16) = v62;
    *(void *)(v53 + 24) = v63;
    *(void *)(v53 + 32) = v64;
    *(unsigned char *)(v53 + 40) = v55;
  }
  else
  {
    long long v56 = *(_OWORD *)v54;
    long long v57 = *((_OWORD *)v54 + 1);
    *(_OWORD *)(v53 + 25) = *(_OWORD *)((char *)v54 + 25);
    *(_OWORD *)uint64_t v53 = v56;
    *(_OWORD *)(v53 + 16) = v57;
  }
  *(unsigned char *)(a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  uint64_t v76 = a3[17];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = (long long *)((char *)a2 + v76);
  int v79 = *(unsigned __int8 *)(a1 + v76 + 16);
  int v80 = *((unsigned __int8 *)a2 + v76 + 16);
  if (v79 == 255)
  {
    if (v80 == 255)
    {
      long long v82 = *v78;
      *(unsigned char *)(v77 + 16) = *((unsigned char *)v78 + 16);
      *(_OWORD *)uint64_t v77 = v82;
    }
    else
    {
      char v87 = v80 & 1;
      unint64_t v88 = *(void **)v78;
      uint64_t v89 = *((void *)v78 + 1);
      outlined copy of PreCallControlsContext(v88);
      *(void *)uint64_t v77 = v88;
      *(void *)(v77 + 8) = v89;
      *(unsigned char *)(v77 + 16) = v87;
    }
  }
  else if (v80 == 255)
  {
    outlined destroy of LeadingViewType(v77);
    char v81 = *((unsigned char *)v78 + 16);
    *(_OWORD *)uint64_t v77 = *v78;
    *(unsigned char *)(v77 + 16) = v81;
  }
  else
  {
    char v83 = v80 & 1;
    uint64_t v84 = *(void **)v78;
    uint64_t v85 = *((void *)v78 + 1);
    outlined copy of PreCallControlsContext(v84);
    id v86 = *(void **)v77;
    *(void *)uint64_t v77 = v84;
    *(void *)(v77 + 8) = v85;
    *(unsigned char *)(v77 + 16) = v83;
    outlined consume of PreCallControlsContext(v86);
  }
  uint64_t v90 = a3[18];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = (uint64_t)a2 + v90;
  unint64_t v93 = *(void **)(a1 + v90);
  uint64_t v94 = *(void **)v92;
  if (v93 != (void *)1)
  {
    if (v94 != (void *)1)
    {
      uint64_t v100 = *(void *)(v92 + 8);
      *(void *)uint64_t v91 = v94;
      id v101 = v94;

      *(void *)(v91 + 8) = v100;
      uint64_t v102 = *(void **)(v92 + 16);
      uint64_t v103 = *(void *)(v92 + 24);
      uint64_t v104 = *(void **)(v91 + 16);
      *(void *)(v91 + 16) = v102;
      id v105 = v102;

      *(void *)(v91 + 24) = v103;
      uint64_t v106 = *(void **)(v92 + 32);
      uint64_t v107 = *(void *)(v92 + 40);
      uint64_t v108 = *(void **)(v91 + 32);
      *(void *)(v91 + 32) = v106;
      id v109 = v106;

      *(void *)(v91 + 40) = v107;
      uint64_t v110 = *(void **)(v92 + 48);
      uint64_t v111 = *(void *)(v92 + 56);
      id v112 = *(void **)(v91 + 48);
      *(void *)(v91 + 48) = v110;
      id v113 = v110;

      *(void *)(v91 + 56) = v111;
      *(void *)(v91 + 64) = *(void *)(v92 + 64);
      *(unsigned char *)(v91 + 72) = *(unsigned char *)(v92 + 72);
      return a1;
    }
    outlined destroy of SystemApertureElement(v91);
    goto LABEL_49;
  }
  if (v94 == (void *)1)
  {
LABEL_49:
    memcpy((void *)v91, (const void *)v92, 0x49uLL);
    return a1;
  }
  uint64_t v95 = *(void *)(v92 + 8);
  *(void *)uint64_t v91 = v94;
  *(void *)(v91 + 8) = v95;
  long long v116 = *(_OWORD *)(v92 + 16);
  *(_OWORD *)(v91 + 16) = v116;
  long long v117 = *(_OWORD *)(v92 + 32);
  *(_OWORD *)(v91 + 32) = v117;
  long long v118 = *(_OWORD *)(v92 + 48);
  *(_OWORD *)(v91 + 48) = v118;
  *(void *)(v91 + 64) = *(void *)(v92 + 64);
  *(unsigned char *)(v91 + 72) = *(unsigned char *)(v92 + 72);
  id v96 = v94;
  id v97 = (id)v116;
  id v98 = (id)v117;
  id v99 = (id)v118;
  return a1;
}

uint64_t initializeWithTake for ConversationControlsRecipe(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v8 = a3[9];
  id v9 = (void *)(a1 + v8);
  long long v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = v7;
  uint64_t v11 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v17 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  id v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  long long v21 = v20[1];
  _OWORD *v19 = *v20;
  v19[1] = v21;
  long long v22 = *(_OWORD *)((char *)v20 + 25);
  uint64_t v23 = a3[16];
  uint64_t v24 = a3[17];
  char v25 = *(unsigned char *)(a2 + v23);
  *(_OWORD *)((char *)v19 + 25) = v22;
  *(unsigned char *)(a1 + v23) = v25;
  uint64_t v26 = a1 + v24;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)(a2 + v24);
  LOBYTE(v23) = *(unsigned char *)(a2 + v24 + 16);
  uint64_t v27 = a3[18];
  *(unsigned char *)(v26 + 16) = v23;
  memcpy((void *)(a1 + v27), (const void *)(a2 + v27), 0x49uLL);
  return a1;
}

uint64_t assignWithTake for ConversationControlsRecipe(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  long long v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v8 = *(void **)(a1 + 56);
  uint64_t v9 = *(void *)(a2 + 56);
  if (v8)
  {
    if (v9)
    {
      *(void *)(a1 + 56) = v9;

      long long v10 = *(void **)(a1 + 64);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);

      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      goto LABEL_8;
    }
    outlined destroy of ConversationControlsRecipe.View(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
LABEL_8:
  uint64_t v11 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for AttributedString();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_13:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_14:
  uint64_t v20 = a3[10];
  long long v21 = (void *)(a1 + v20);
  long long v22 = (void *)(a2 + v20);
  uint64_t v23 = *(void **)(a1 + v20);
  if (v23)
  {
    if (*v22)
    {
      *long long v21 = *v22;

      uint64_t v24 = (void *)v21[1];
      v21[1] = v22[1];

      goto LABEL_19;
    }
    outlined destroy of ConversationControlsRecipe.View((uint64_t)v21);
  }
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
LABEL_19:
  void v21[2] = v22[2];
  uint64_t v25 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  uint64_t v27 = a3[15];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(unsigned __int8 *)(a1 + v27 + 40);
  if (v30 > 0xFD)
  {
LABEL_22:
    long long v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 25) = *(_OWORD *)(v29 + 25);
    goto LABEL_24;
  }
  unsigned int v31 = *(unsigned __int8 *)(v29 + 40);
  if (v31 > 0xFD)
  {
    outlined destroy of ConversationControlsRecipe.Actions(v28);
    goto LABEL_22;
  }
  uint64_t v33 = *(void *)(v29 + 32);
  uint64_t v34 = *(void *)v28;
  uint64_t v35 = *(void *)(v28 + 8);
  uint64_t v36 = *(void *)(v28 + 16);
  uint64_t v37 = *(void *)(v28 + 24);
  uint64_t v38 = *(void *)(v28 + 32);
  long long v39 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v39;
  *(void *)(v28 + 32) = v33;
  *(unsigned char *)(v28 + 40) = v31;
  outlined consume of ConversationControlsRecipe.Actions(v34, v35, v36, v37, v38, v30);
LABEL_24:
  uint64_t v40 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  if (*(unsigned __int8 *)(a1 + v40 + 16) == 255)
  {
LABEL_27:
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
    goto LABEL_29;
  }
  int v43 = *(unsigned __int8 *)(v42 + 16);
  if (v43 == 255)
  {
    outlined destroy of LeadingViewType(v41);
    goto LABEL_27;
  }
  id v44 = *(void **)v41;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(unsigned char *)(v41 + 16) = v43 & 1;
  outlined consume of PreCallControlsContext(v44);
LABEL_29:
  uint64_t v45 = a3[18];
  uint64_t v46 = (void *)(a1 + v45);
  id v47 = (void *)(a2 + v45);
  uint64_t v48 = *(void **)(a1 + v45);
  if (v48 != (void *)1)
  {
    if (*v47 != 1)
    {
      uint64_t v49 = v47[1];
      *uint64_t v46 = *v47;

      uint64_t v50 = v47[2];
      uint64_t v51 = v47[3];
      uint64_t v52 = (void *)v46[2];
      v46[1] = v49;
      v46[2] = v50;

      uint64_t v53 = v47[4];
      uint64_t v54 = v47[5];
      uint64_t v55 = (void *)v46[4];
      v46[3] = v51;
      v46[4] = v53;

      uint64_t v56 = v47[6];
      uint64_t v57 = v47[7];
      long long v58 = (void *)v46[6];
      v46[5] = v54;
      v46[6] = v56;

      uint64_t v59 = v47[8];
      v46[7] = v57;
      v46[8] = v59;
      *((unsigned char *)v46 + 72) = *((unsigned char *)v47 + 72);
      return a1;
    }
    outlined destroy of SystemApertureElement((uint64_t)v46);
  }
  memcpy(v46, v47, 0x49uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationControlsRecipe(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C35AD9AC);
}

uint64_t sub_1C35AD9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ConversationControlsRecipe(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C35ADA4C);
}

uint64_t sub_1C35ADA4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 80) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for ConversationControlsRecipe()
{
  type metadata accessor for AttributedString?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for AttributedString?()
{
  if (!lazy cache variable for type metadata for AttributedString?)
  {
    type metadata accessor for AttributedString();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for AttributedString?);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ConversationControlsRecipe.View(void *a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for ConversationControlsRecipe.View(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ConversationControlsRecipe.View(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

void type metadata accessor for ConversationControlsRecipe.View()
{
}

void type metadata accessor for ConversationControlsRecipe.LabelConfiguration()
{
}

uint64_t destroy for ConversationControlsRecipe.Actions(uint64_t a1)
{
  return outlined consume of ConversationControlsRecipe.Actions(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t initializeWithCopy for ConversationControlsRecipe.Actions(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = *((unsigned __int8 *)a2 + 40);
  outlined copy of ConversationControlsRecipe.Actions(*a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t *assignWithCopy for ConversationControlsRecipe.Actions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = *((unsigned __int8 *)a2 + 40);
  outlined copy of ConversationControlsRecipe.Actions(*a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  uint64_t v14 = *((unsigned __int8 *)a1 + 40);
  *((unsigned char *)a1 + 40) = v8;
  outlined consume of ConversationControlsRecipe.Actions(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for ConversationControlsRecipe.Actions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v10;
  a1[4] = v3;
  uint64_t v11 = *((unsigned __int8 *)a1 + 40);
  *((unsigned char *)a1 + 40) = v4;
  outlined consume of ConversationControlsRecipe.Actions(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationControlsRecipe.Actions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 41))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 40) & 0x7E | (*(unsigned __int8 *)(a1 + 40) >> 7)) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ConversationControlsRecipe.Actions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 40) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t getEnumTag for ConversationControlsRecipe.Actions(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40) >> 7;
}

uint64_t destructiveProjectEnumData for ConversationControlsRecipe.Actions(uint64_t result)
{
  *(unsigned char *)(result + 40) &= ~0x80u;
  return result;
}

uint64_t destructiveInjectEnumTag for ConversationControlsRecipe.Actions(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = *(unsigned char *)(result + 40) & 1 | (a2 << 7);
  return result;
}

void type metadata accessor for ConversationControlsRecipe.Actions()
{
}

uint64_t initializeBufferWithCopyOfBuffer for EphemeralAlert(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for EphemeralAlert(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for EphemeralAlert(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EphemeralAlert(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EphemeralAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EphemeralAlert()
{
}

double CallRecordingViewModel.ScreenSize.insets(for:)()
{
  return 10.0;
}

void *CallRecordingViewModel.ScreenSize.interComponentSpacing(for:)(unsigned char *a1)
{
  if (*a1) {
    uint64_t v2 = &outlined read-only object #1 of CallRecordingViewModel.ScreenSize.interComponentSpacing(for:);
  }
  else {
    uint64_t v2 = &outlined read-only object #0 of CallRecordingViewModel.ScreenSize.interComponentSpacing(for:);
  }
  uint64_t v3 = &outlined read-only object #2 of CallRecordingViewModel.ScreenSize.interComponentSpacing(for:);
  if (*a1) {
    uint64_t v3 = &outlined read-only object #3 of CallRecordingViewModel.ScreenSize.interComponentSpacing(for:);
  }
  if (*v1) {
    return v3;
  }
  else {
    return v2;
  }
}

id CallRecordingViewModel.ScreenSize.maxAXContentSize.getter()
{
  return (id)*MEMORY[0x1E4FB2790];
}

BOOL static CallRecordingViewModel.ViewType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void CallRecordingViewModel.ViewType.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int CallRecordingViewModel.ViewType.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type CallRecordingViewModel.ViewType and conformance CallRecordingViewModel.ViewType()
{
  unint64_t result = lazy protocol witness table cache variable for type CallRecordingViewModel.ViewType and conformance CallRecordingViewModel.ViewType;
  if (!lazy protocol witness table cache variable for type CallRecordingViewModel.ViewType and conformance CallRecordingViewModel.ViewType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingViewModel.ViewType and conformance CallRecordingViewModel.ViewType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallRecordingViewModel.ScreenSize and conformance CallRecordingViewModel.ScreenSize()
{
  unint64_t result = lazy protocol witness table cache variable for type CallRecordingViewModel.ScreenSize and conformance CallRecordingViewModel.ScreenSize;
  if (!lazy protocol witness table cache variable for type CallRecordingViewModel.ScreenSize and conformance CallRecordingViewModel.ScreenSize)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingViewModel.ScreenSize and conformance CallRecordingViewModel.ScreenSize);
  }
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingViewModel.ViewType()
{
  return &type metadata for CallRecordingViewModel.ViewType;
}

unsigned char *storeEnumTagSinglePayload for CallRecordingViewModel.ViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C35AE3A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingViewModel.ScreenSize()
{
  return &type metadata for CallRecordingViewModel.ScreenSize;
}

id DeviceWaveformView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t key path getter for DeviceWaveformView.barColor : DeviceWaveformView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x70))();
  *a2 = result;
  return result;
}

uint64_t key path setter for DeviceWaveformView.barColor : DeviceWaveformView(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x78))(*a1);
}

id DeviceWaveformView.barColor.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  return v1;
}

void DeviceWaveformView.barColor.setter(void *a1)
{
}

{
  void *v1;
  void **v2;
  void *v4;
  id v5;

  OUTLINED_FUNCTION_4_10();
  unsigned int v4 = *v2;
  *uint64_t v2 = a1;
  uint64_t v5 = a1;

  objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t (*DeviceWaveformView.barColor.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return DeviceWaveformView.barColor.modify;
}

uint64_t key path getter for DeviceWaveformView.filterType : DeviceWaveformView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t key path setter for DeviceWaveformView.filterType : DeviceWaveformView(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x90))(*a1);
}

id DeviceWaveformView.filterType.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  return v1;
}

void DeviceWaveformView.filterType.setter(void *a1)
{
}

uint64_t (*DeviceWaveformView.filterType.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return DeviceWaveformView.barColor.modify;
}

uint64_t key path getter for DeviceWaveformView.power : DeviceWaveformView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for DeviceWaveformView.power : DeviceWaveformView(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA8);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t DeviceWaveformView.power.getter()
{
  return swift_bridgeObjectRetain();
}

id DeviceWaveformView.power.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_10();
  *uint64_t v2 = a1;
  swift_bridgeObjectRelease();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t (*DeviceWaveformView.power.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return DeviceWaveformView.barColor.modify;
}

id DeviceWaveformView.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_barColor;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_systemGreenColor);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_filterType;
  type metadata accessor for NSString();
  *(void *)&v3[v4] = NSString.init(stringLiteral:)();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_power] = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews] = v5;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DeviceWaveformView();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  DeviceWaveformView.configureViews()();

  return v6;
}

unint64_t type metadata accessor for NSString()
{
  unint64_t result = lazy cache variable for type metadata for NSString;
  if (!lazy cache variable for type metadata for NSString)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSString);
  }
  return result;
}

uint64_t type metadata accessor for DeviceWaveformView()
{
  return self;
}

id DeviceWaveformView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DeviceWaveformView.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_barColor;
  *(void *)&v1[v2] = objc_msgSend(self, sel_systemGreenColor);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_filterType;
  type metadata accessor for NSString();
  *(void *)&v1[v3] = NSString.init(stringLiteral:)();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_power] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews] = v4;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall DeviceWaveformView.layoutSubviews()()
{
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for DeviceWaveformView();
  objc_msgSendSuper2(&v26, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v27);
  objc_msgSend(v0, sel_bounds);
  double Height = CGRectGetHeight(v28);
  uint64_t v3 = (void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews);
  swift_beginAccess();
  unint64_t v4 = *v3;
  if (v4 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  id v6 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0);
  if (v5 >= 1)
  {
    unint64_t v7 = 0;
    double Width = (Width + -18.75) / 14.0;
    double v8 = Height - (Width + Width) - Width;
    uint64_t v24 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70);
    unint64_t v25 = v4 & 0xC000000000000001;
    double Height = Width * 0.5;
    unint64_t v9 = v4;
    while (1)
    {
      if (v25) {
        id v10 = (id)MEMORY[0x1C87744F0](v7, v4);
      }
      else {
        id v10 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v11 = v10;
      unint64_t v4 = *(void *)(v6() + 16);
      uint64_t v12 = swift_bridgeObjectRelease();
      double v13 = 0.0;
      if (v7 < v4)
      {
        uint64_t v14 = ((uint64_t (*)(uint64_t, double))v6)(v12, 0.0);
        if (v7 >= *(void *)(v14 + 16))
        {
          __break(1u);
          goto LABEL_15;
        }
        float v15 = *(float *)(v14 + 4 * v7 + 32);
        swift_bridgeObjectRelease();
        double v13 = v15;
      }
      unint64_t v16 = v7 + 1;
      double v17 = Width + v8 * v13;
      double v18 = (Width + 1.25) * (double)(uint64_t)v7 + 1.25;
      objc_msgSend(v0, sel_bounds);
      CGFloat v19 = CGRectGetHeight(v29) * 0.5;
      uint64_t v20 = (void *)v24();
      objc_msgSend(v11, sel_setBackgroundColor_, v20);

      objc_msgSend(v11, sel_setBounds_, 0.0, 0.0, Width, v17);
      id v21 = objc_msgSend(v11, sel_layer);
      objc_msgSend(v21, sel_setPosition_, v18, v19);

      id v22 = objc_msgSend(v11, sel_layer);
      objc_msgSend(v22, sel_setCornerRadius_, Width * 0.5);

      unint64_t v7 = v16;
      BOOL v23 = v5 == v16;
      unint64_t v4 = v9;
      if (v23) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
}

void DeviceWaveformView.configureViews()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_layer);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  unint64_t v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
  objc_msgSend(v2, sel_setCompositingFilter_, v4);

  uint64_t v5 = *(uint64_t (**)(void))((*v3 & *v1) + 0x70);
  id v6 = (void *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews);
  uint64_t v7 = 14;
  uint64_t v8 = *MEMORY[0x1E4F39EA8];
  do
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v10 = objc_msgSend(v9, sel_layer);
    objc_msgSend(v10, sel_setAnchorPoint_, 0.0, 0.5);

    uint64_t v11 = (void *)v5();
    objc_msgSend(v9, sel_setBackgroundColor_, v11);

    id v12 = objc_msgSend(v9, sel_layer);
    objc_msgSend(v12, sel_setAllowsEdgeAntialiasing_, 1);

    id v13 = objc_msgSend(v9, sel_layer);
    objc_msgSend(v13, sel_setCornerCurve_, v8);

    objc_msgSend(v1, sel_addSubview_, v9);
    swift_beginAccess();
    id v14 = v9;
    MEMORY[0x1C87733A0]();
    if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    --v7;
  }
  while (v7);
}

id DeviceWaveformView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void DeviceWaveformView.init(frame:)()
{
}

id DeviceWaveformView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceWaveformView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DeviceWaveformView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeviceWaveformView);
}

uint64_t dispatch thunk of DeviceWaveformView.barColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DeviceWaveformView.barColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DeviceWaveformView.barColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DeviceWaveformView.filterType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DeviceWaveformView.filterType.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DeviceWaveformView.filterType.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DeviceWaveformView.power.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DeviceWaveformView.power.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DeviceWaveformView.power.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t ThoughtBubble.init(anchorPoint:cornerRadius:growsRightwards:isPad:scale:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a7;
  *(double *)(a3 + 24) = a6;
  *(unsigned char *)(a3 + 32) = result;
  *(unsigned char *)(a3 + 33) = a2;
  return result;
}

double CGRect.scaledBy(_:anchor:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a2 * a6 + a4 - a1 * a6 * a2;
}

double ThoughtBubble.anchorPoint.getter()
{
  return *(double *)v0;
}

void ThoughtBubble.anchorPoint.setter(double a1, double a2)
{
  *objc_super v2 = a1;
  v2[1] = a2;
}

uint64_t (*ThoughtBubble.anchorPoint.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ThoughtBubble.scale.getter()
{
  return *(double *)(v0 + 16);
}

void ThoughtBubble.scale.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*ThoughtBubble.scale.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ThoughtBubble.cornerRadius.getter()
{
  return *(double *)(v0 + 24);
}

void ThoughtBubble.cornerRadius.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*ThoughtBubble.cornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ThoughtBubble.growsRightwards.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ThoughtBubble.growsRightwards.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*ThoughtBubble.growsRightwards.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ThoughtBubble.isPad.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t ThoughtBubble.isPad.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*ThoughtBubble.isPad.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ThoughtBubble.animatableData.getter()
{
  return *(double *)(v0 + 16);
}

void ThoughtBubble.animatableData.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

double (*ThoughtBubble.animatableData.modify(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return ThoughtBubble.animatableData.modify;
}

double ThoughtBubble.animatableData.modify(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + 16) = *(void *)a1;
  return result;
}

double ThoughtBubble.intermediateBubbleScale.getter()
{
  double v1 = *(double *)(v0 + 16);
  double result = 0.0;
  if (v1 >= 0.1)
  {
    double result = 1.0;
    if (v1 < 0.3) {
      return (v1 + -0.1) / 0.2;
    }
  }
  return result;
}

double ThoughtBubble.thoughtBubbleScale.getter()
{
  double v1 = *(double *)(v0 + 16);
  double result = 0.0;
  if (v1 > 0.2)
  {
    if (v1 < 0.5) {
      return (v1 + -0.2) / 1.8;
    }
    else {
      return (v1 + -0.4) / 0.6;
    }
  }
  return result;
}

double ThoughtBubble.anchorBubbleRect(in:)(double a1)
{
  double v2 = -8.0;
  if ((*(unsigned char *)(v1 + 33) & 1) == 0) {
    double v2 = -6.0;
  }
  double v3 = *(double *)v1 + a1;
  if ((*(unsigned char *)(v1 + 32) & 1) == 0) {
    double v2 = -(v2 + 8.0);
  }
  return v3 + v2;
}

double ThoughtBubble.intermediateBubbleRect(in:)(double a1)
{
  double v2 = -3.0;
  if ((*(unsigned char *)(v1 + 33) & 1) == 0) {
    double v2 = 0.0;
  }
  double v3 = *(double *)v1 + a1;
  if ((*(unsigned char *)(v1 + 32) & 1) == 0) {
    double v2 = -(v2 + 14.0);
  }
  return v3 + v2;
}

double ThoughtBubble.path(in:)@<D0>(uint64_t a1@<X8>)
{
  Path.init(_:)();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t closure #1 in ThoughtBubble.path(in:)(double a1, CGFloat a2, CGFloat a3, double a4, uint64_t a5, uint64_t a6)
{
  double v42 = a4;
  uint64_t v10 = type metadata accessor for RoundedCornerStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v46 = a2;
  double v14 = ThoughtBubble.intermediateBubbleRect(in:)(a1);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v21 = ThoughtBubble.intermediateBubbleScale.getter();
  static UnitPoint.center.getter();
  double v51 = v20 * v21;
  double v44 = v14 + v18 * v22 - v18 * v21 * v22;
  double v45 = v18 * v21;
  double v43 = v16 + v20 * v23 - v20 * v21 * v23;
  CGFloat v24 = v42;
  double v25 = ThoughtBubble.anchorBubbleRect(in:)(a1);
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  double v32 = *(double *)(a6 + 16);
  if (v32 >= 0.2) {
    double v33 = 1.0;
  }
  else {
    double v33 = v32 / 0.2;
  }
  static UnitPoint.center.getter();
  double v49 = v31 * v33;
  double v50 = v29 * v33;
  double v47 = v27 + v31 * v35 - v35 * (v31 * v33);
  double v48 = v25 + v29 * v34 - v34 * (v29 * v33);
  v41[1] = ThoughtBubble.thoughtBubbleScale.getter();
  v41[0] = v36;
  CGFloat v38 = v43;
  CGFloat v37 = v44;
  v53.origin.CGFloat x = v44;
  v53.origin.CGFloat y = v43;
  CGFloat v39 = v45;
  v53.size.CGFloat width = v45;
  v53.size.CGFloat height = v51;
  CGRectGetMidX(v53);
  v54.origin.CGFloat x = a1;
  v54.origin.CGFloat y = v46;
  v54.size.CGFloat width = a3;
  v54.size.CGFloat height = v24;
  CGRectGetWidth(v54);
  transform.a = 1.0;
  transform.b = 0.0;
  transform.c = 0.0;
  transform.d = 1.0;
  transform.tCGFloat x = 0.0;
  transform.tCGFloat y = 0.0;
  v55.origin.CGFloat x = v37;
  v55.origin.CGFloat y = v38;
  v55.size.CGFloat width = v39;
  v55.size.CGFloat height = v51;
  Path.addEllipse(in:transform:)(v55, &transform);
  v56.origin.CGFloat y = v47;
  v56.origin.CGFloat x = v48;
  v56.size.CGFloat height = v49;
  v56.size.CGFloat width = v50;
  Path.addEllipse(in:transform:)(v56, &transform);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F3D4A0], v10);
  Path.addRoundedRect(in:cornerSize:style:transform:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t partial apply for closure #1 in ThoughtBubble.path(in:)(uint64_t a1)
{
  return closure #1 in ThoughtBubble.path(in:)(*(double *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(double *)(v1 + 48), a1, *(void *)(v1 + 16));
}

double protocol witness for Shape.path(in:) in conformance ThoughtBubble@<D0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  long long v8 = *v1;
  long long v9 = v3;
  __int16 v10 = *((_WORD *)v1 + 16);
  ThoughtBubble.path(in:)((uint64_t)v6);
  double result = *(double *)v6;
  long long v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v7;
  return result;
}

uint64_t protocol witness for static Shape.role.getter in conformance ThoughtBubble()
{
  return MEMORY[0x1F40FC6C8]();
}

uint64_t protocol witness for Shape.layoutDirectionBehavior.getter in conformance ThoughtBubble()
{
  return MEMORY[0x1F40FC6A0]();
}

void protocol witness for Animatable.animatableData.getter in conformance ThoughtBubble(double *a1@<X8>)
{
  *a1 = ThoughtBubble.animatableData.getter();
}

void protocol witness for Animatable.animatableData.setter in conformance ThoughtBubble(double *a1)
{
}

uint64_t (*protocol witness for Animatable.animatableData.modify in conformance ThoughtBubble(void *a1))()
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return protocol witness for Animatable.animatableData.modify in conformance ThoughtBubble;
}

uint64_t protocol witness for static Animatable._makeAnimatable(value:inputs:) in conformance ThoughtBubble()
{
  return MEMORY[0x1F40F7DA8]();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ThoughtBubble(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble();
  return MEMORY[0x1F40FC6D8](a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ThoughtBubble(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble();
  return MEMORY[0x1F40FC690](a1, a2, a3, v6);
}

uint64_t protocol witness for View.body.getter in conformance ThoughtBubble(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble();
  return MEMORY[0x1F40FC6B0](a1, v2);
}

__n128 ThoughtBubble.inset(by:)@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v1 + 32);
  return result;
}

unint64_t lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble()
{
  unint64_t result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>;
  if (!lazy protocol witness table cache variable for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ShapeView<ThoughtBubble, ForegroundStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for InsettableShape.InsetShape : InsettableShape in ThoughtBubble()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C35AFE58(double *a1@<X8>)
{
  *a1 = ThoughtBubble.animatableData.getter();
}

void sub_1C35AFE84(double *a1)
{
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ThoughtBubble(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 34))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThoughtBubble(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThoughtBubble()
{
  return &type metadata for ThoughtBubble;
}

uint64_t EffectsViewConstraintManager.__allocating_init(containingGuide:localParticipantView:effectsView:)(void *a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(a1, a2, a3);
  return v6;
}

uint64_t EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(void *a1, void *a2, id a3)
{
  uint64_t v4 = v3;
  objc_msgSend(a3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C3769580;
  if (a2)
  {
    id v9 = a2;
    id v10 = objc_msgSend(a3, sel_topAnchor);
    id v11 = objc_msgSend(v9, sel_topAnchor);
    id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(void *)(v8 + 32) = v12;
    id v13 = objc_msgSend(a3, sel_leadingAnchor);
    id v14 = OUTLINED_FUNCTION_1_143((uint64_t)objc_msgSend(v9, sel_leadingAnchor));

    *(void *)(v8 + 40) = v14;
    id v15 = objc_msgSend(a3, sel_trailingAnchor);
    id v16 = OUTLINED_FUNCTION_1_143((uint64_t)objc_msgSend(v9, sel_trailingAnchor));

    *(void *)(v8 + 48) = v16;
    id v17 = objc_msgSend(a3, sel_bottomAnchor);
    id v18 = OUTLINED_FUNCTION_1_143((uint64_t)objc_msgSend(v9, sel_bottomAnchor));

    *(void *)(v8 + 56) = v18;
    specialized Array._endMutation()();
  }
  else
  {
    id v19 = objc_msgSend(a3, sel_topAnchor);
    id v20 = objc_msgSend(a1, sel_topAnchor);
    id v21 = OUTLINED_FUNCTION_1_10();

    *(void *)(v8 + 32) = v21;
    id v22 = objc_msgSend(a3, sel_leadingAnchor);
    id v23 = objc_msgSend(a1, sel_leadingAnchor);
    id v24 = OUTLINED_FUNCTION_1_10();

    *(void *)(v8 + 40) = v24;
    id v25 = objc_msgSend(a3, sel_trailingAnchor);
    id v26 = objc_msgSend(a1, sel_trailingAnchor);
    id v27 = OUTLINED_FUNCTION_1_10();

    *(void *)(v8 + 48) = v27;
    id v28 = objc_msgSend(a3, sel_bottomAnchor);
    id v29 = objc_msgSend(a1, sel_bottomAnchor);
    id v30 = OUTLINED_FUNCTION_1_10();

    *(void *)(v8 + 56) = v30;
    specialized Array._endMutation()();
  }
  *(void *)(v4 + 16) = v8;
  return v4;
}

uint64_t EffectsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t EffectsViewConstraintManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EffectsViewConstraintManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance EffectsViewConstraintManager()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t type metadata accessor for EffectsViewConstraintManager()
{
  return self;
}

uint64_t method lookup function for EffectsViewConstraintManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EffectsViewConstraintManager);
}

uint64_t dispatch thunk of EffectsViewConstraintManager.__allocating_init(containingGuide:localParticipantView:effectsView:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EffectsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t ParticipantAlertView.ViewModel.text.getter(uint64_t a1)
{
  return a1;
}

id ParticipantAlertView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *ParticipantAlertView.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1F00]);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  *(void *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  v59.receiver = v4;
  v59.super_class = ObjectType;
  uint64_t v6 = (char *)objc_msgSendSuper2(&v59, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel];
  uint64_t v9 = one-time initialization token for alertTitle;
  id v10 = v6;
  id v11 = v8;
  if (v9 != -1) {
    swift_once();
  }
  objc_msgSend(v11, sel_setFont_, static Fonts.ParticipantViews.alertTitle);

  uint64_t v12 = one-time initialization token for alertText;
  id v13 = *(id *)&v6[v7];
  if (v12 != -1) {
    swift_once();
  }
  objc_msgSend(v13, sel_setTextColor_, static Colors.ParticipantViews.alertText);

  id v14 = *(void **)&v6[v7];
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setTextAlignment_, 1);
  uint64_t v15 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  id v16 = *(id *)&v10[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView];
  UIVisualEffectView.applyEffect(_:)(ConversationKit_PlatformEffectViewStyle_light);

  id v17 = *(void **)&v10[v15];
  objc_msgSend(v17, sel__setContinuousCornerRadius_, 10.0);
  objc_msgSend(v10, sel_addSubview_, v17);
  id v18 = *(void **)&v6[v7];
  objc_msgSend(v10, sel_addSubview_, v18);
  id v19 = v17;
  id v20 = v18;
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v21 = *(void **)&v10[v15];
  LODWORD(v22) = 1148846080;
  objc_msgSend(v21, sel_setContentHuggingPriority_forAxis_, 1, v22);
  id v23 = objc_msgSend(v21, sel_widthAnchor);
  id v24 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToConstant_, 240.0);

  id v25 = objc_msgSend(*(id *)&v10[v15], sel_heightAnchor);
  uint64_t v55 = v7;
  id v26 = objc_msgSend(v25, sel_constraintGreaterThanOrEqualToConstant_, 47.0);

  id v58 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C37711D0;
  *(void *)(v27 + 32) = v24;
  *(void *)(v27 + 40) = v26;
  id v28 = *(void **)&v10[v15];
  id v57 = v24;
  id v56 = v26;
  id v29 = objc_msgSend(v28, sel_leadingAnchor);
  id v30 = objc_msgSend(v10, sel_leadingAnchor);
  id v31 = OUTLINED_FUNCTION_1_144((uint64_t)v30, sel_constraintGreaterThanOrEqualToAnchor_constant_);

  *(void *)(v27 + 48) = v31;
  id v32 = objc_msgSend(*(id *)&v10[v15], sel_trailingAnchor);
  id v33 = objc_msgSend(v10, sel_trailingAnchor);
  id v34 = OUTLINED_FUNCTION_1_144((uint64_t)v33, sel_constraintLessThanOrEqualToAnchor_constant_);

  *(void *)(v27 + 56) = v34;
  id v35 = objc_msgSend(*(id *)&v10[v15], sel_centerXAnchor);
  id v36 = objc_msgSend(v10, sel_centerXAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  *(void *)(v27 + 64) = v37;
  id v38 = objc_msgSend(*(id *)&v10[v15], sel_centerYAnchor);
  id v39 = objc_msgSend(v10, sel_centerYAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(void *)(v27 + 72) = v40;
  id v41 = objc_msgSend(*(id *)&v6[v55], sel_leadingAnchor);
  id v42 = objc_msgSend(*(id *)&v10[v15], sel_leadingAnchor);
  id v43 = OUTLINED_FUNCTION_1_144((uint64_t)v42, sel_constraintEqualToAnchor_constant_);

  *(void *)(v27 + 80) = v43;
  id v44 = objc_msgSend(*(id *)&v6[v55], sel_trailingAnchor);
  id v45 = objc_msgSend(*(id *)&v10[v15], sel_trailingAnchor);
  id v46 = OUTLINED_FUNCTION_1_144((uint64_t)v45, sel_constraintEqualToAnchor_constant_);

  *(void *)(v27 + 88) = v46;
  id v47 = objc_msgSend(*(id *)&v6[v55], sel_topAnchor);
  id v48 = objc_msgSend(*(id *)&v10[v15], sel_topAnchor);
  id v49 = OUTLINED_FUNCTION_1_144((uint64_t)v48, sel_constraintEqualToAnchor_constant_);

  *(void *)(v27 + 96) = v49;
  id v50 = objc_msgSend(*(id *)&v6[v55], sel_bottomAnchor);
  id v51 = objc_msgSend(*(id *)&v10[v15], sel_bottomAnchor);
  id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v51, -16.0);

  *(void *)(v27 + 104) = v52;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, isa);

  return v10;
}

id ParticipantAlertView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantAlertView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_init);
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  OUTLINED_FUNCTION_23_26();
  __break(1u);
}

id ParticipantAlertView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantAlertView.init(frame:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_init);
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  OUTLINED_FUNCTION_23_26();
  __break(1u);
}

Swift::Void __swiftcall ParticipantAlertView.configure(with:)(ConversationKit::ParticipantAlertView::ViewModel with)
{
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(with.text._countAndFlagsBits, (uint64_t)with.text._object, *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel));
}

double ParticipantAlertView.intrinsicContentSize.getter()
{
  return 240.0;
}

id ParticipantAlertView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ParticipantAlertView()
{
  return self;
}

ValueMetadata *type metadata accessor for ParticipantAlertView.ViewModel()
{
  return &type metadata for ParticipantAlertView.ViewModel;
}

void *SystemApertureNoticeLayoutSharedConstants.systemApertureLeadingViewDiameter.unsafeMutableAddressor()
{
  return &static SystemApertureNoticeLayoutSharedConstants.systemApertureLeadingViewDiameter;
}

long long *SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for systemApertureButtonContentInsets != -1) {
    swift_once();
  }
  return &static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets;
}

double static SystemApertureNoticeLayoutSharedConstants.systemApertureLeadingViewDiameter.getter()
{
  return 35.33;
}

double one-time initialization function for systemApertureButtonContentInsets()
{
  double result = 8.0;
  static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets = xmmword_1C3789C40;
  *(_OWORD *)&qword_1EA37E850 = xmmword_1C3789C40;
  return result;
}

double static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets.getter()
{
  if (one-time initialization token for systemApertureButtonContentInsets != -1) {
    swift_once();
  }
  return *(double *)&static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets;
}

void one-time initialization function for titleViewHorizontalPadding()
{
  static SystemApertureNoticeView.Constants.titleViewHorizontalPadding = 0x4020000000000000;
}

double one-time initialization function for systemAperturePadding()
{
  double result = 15.67;
  static SystemApertureNoticeView.Constants.systemAperturePadding = xmmword_1C3789C50;
  *(_OWORD *)&qword_1EA3544E8 = xmmword_1C3789C50;
  return result;
}

uint64_t key path getter for SystemApertureNoticeView.fullSentence : SystemApertureNoticeView(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x70))();
}

uint64_t key path setter for SystemApertureNoticeView.fullSentence : SystemApertureNoticeView(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AttributedString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x78))(v6);
}

id SystemApertureNoticeView.fullSentence.didset(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_fullSentence;
  swift_beginAccess();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (AttributedString?, AttributedString?));
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 56)];
  outlined init with copy of AttributedString?(a1, (uint64_t)v6);
  outlined init with copy of AttributedString?(v3, v8);
  uint64_t v9 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v9) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1) {
      return (id)outlined destroy of Conversation?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    }
    goto LABEL_6;
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AttributedString?((uint64_t)v6, (uint64_t)v13);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v9);
  uint64_t v15 = *(void *)(v9 - 8);
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v13, v9);
LABEL_6:
    id result = (id)outlined destroy of Conversation?((uint64_t)v6, &demangling cache variable for type metadata for (AttributedString?, AttributedString?));
    uint64_t v15 = *(void *)(v9 - 8);
    goto LABEL_9;
  }
  uint64_t v31 = v1;
  id v33 = &v30;
  __n128 v16 = MEMORY[0x1F4188790](EnumTagSinglePayload);
  id v32 = &v30;
  id v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 32))(v18, v8, v9, v16);
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes and conformance AttributeScopes.UIKitAttributes((unint64_t *)&lazy protocol witness table cache variable for type AttributedString and conformance AttributedString, MEMORY[0x1F418B348]);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v20 = *(void (**)(char *, uint64_t))(v15 + 8);
  v20(v18, v9);
  v20(v13, v9);
  id result = (id)outlined destroy of Conversation?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  if (v19) {
    return result;
  }
  uint64_t v1 = v31;
LABEL_9:
  uint64_t v21 = v15;
  unint64_t v22 = (*(void *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](result);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v23 - 8);
  id v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AttributedString?(v3, (uint64_t)v25);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v9) == 1)
  {
    outlined destroy of Conversation?((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView), sel_setAttributedText_, 0);
  }
  else
  {
    id v33 = &v30;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)&v30 - v22, v25, v9);
    id v26 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView);
    uint64_t v27 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    __n128 v28 = MEMORY[0x1F4188790](v27);
    (*(void (**)(char *, char *, uint64_t, __n128))(v21 + 16))((char *)&v30 - v22, (char *)&v30 - v22, v9, v28);
    type metadata accessor for AttributeScopes.UIKitAttributes();
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes and conformance AttributeScopes.UIKitAttributes(&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes and conformance AttributeScopes.UIKitAttributes, MEMORY[0x1E4FB0D88]);
    id v29 = NSAttributedString.init<A>(_:including:)();
    objc_msgSend(v26, sel_setAttributedText_, v29);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v21 + 8))((char *)&v30 - v22, v9);
  }
}

uint64_t SystemApertureNoticeView.fullSentence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_fullSentence;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of AttributedString?(v3, a1);
}

uint64_t outlined init with copy of AttributedString?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SystemApertureNoticeView.fullSentence.setter(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_62();
  uint64_t v5 = v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_fullSentence;
  OUTLINED_FUNCTION_2();
  outlined init with copy of AttributedString?(v5, v2);
  swift_beginAccess();
  outlined assign with copy of AttributedString?(a1, v5);
  swift_endAccess();
  SystemApertureNoticeView.fullSentence.didset(v2);
  outlined destroy of Conversation?(a1, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  return outlined destroy of Conversation?(v2, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
}

void (*SystemApertureNoticeView.fullSentence.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  _OWORD v3[3] = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?)
                             - 8)
                 + 64);
  void v3[4] = v4;
  uint64_t v5 = malloc(v4);
  v3[5] = v5;
  uint64_t v6 = v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_fullSentence;
  OUTLINED_FUNCTION_2();
  outlined init with copy of AttributedString?(v6, (uint64_t)v5);
  return SystemApertureNoticeView.fullSentence.modify;
}

void SystemApertureNoticeView.fullSentence.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  size_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    MEMORY[0x1F4188790](a1);
    OUTLINED_FUNCTION_62();
    outlined init with copy of AttributedString?((uint64_t)v4, v2);
    SystemApertureNoticeView.fullSentence.setter(v2);
    outlined destroy of Conversation?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  }
  else
  {
    SystemApertureNoticeView.fullSentence.setter(*(void *)(*(void *)a1 + 40));
  }
  free(v4);
  free(v3);
}

uint64_t key path getter for SystemApertureNoticeView.leadingView : SystemApertureNoticeView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t key path setter for SystemApertureNoticeView.leadingView : SystemApertureNoticeView(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x90);
  id v4 = *a1;
  return v3(v2);
}

void *SystemApertureNoticeView.leadingView.getter()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView)
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  id v2 = v1;
  return v1;
}

void SystemApertureNoticeView.leadingView.setter(void *a1)
{
}

void (*SystemApertureNoticeView.leadingView.modify(void **a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = SystemApertureNoticeView.leadingView.getter();
  return SystemApertureNoticeView.leadingView.modify;
}

void SystemApertureNoticeView.leadingView.modify(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    LeadingContainerView.wrappedView.setter(v2);
  }
  else
  {
    LeadingContainerView.wrappedView.setter(*a1);
  }
}

uint64_t key path getter for SystemApertureNoticeView.trailingButton : SystemApertureNoticeView@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for SystemApertureNoticeView.trailingButton : SystemApertureNoticeView(id *a1, void **a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA8);
  id v4 = *a1;
  return v3(v2);
}

id SystemApertureNoticeView.trailingButton.didset(void *a1)
{
  if (a1) {
    objc_msgSend(a1, sel_removeFromSuperview);
  }
  id v2 = &v1[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton];
  id result = (id)swift_beginAccess();
  if (*(void *)v2) {
    return objc_msgSend(v1, sel_addSubview_);
  }
  return result;
}

void *SystemApertureNoticeView.trailingButton.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton);
  OUTLINED_FUNCTION_2();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void SystemApertureNoticeView.trailingButton.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;
  SystemApertureNoticeView.trailingButton.didset(v4);
}

void (*SystemApertureNoticeView.trailingButton.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = v1;
  id v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton);
  OUTLINED_FUNCTION_2();
  id v5 = *v4;
  _OWORD v3[3] = *v4;
  id v6 = v5;
  return SystemApertureNoticeView.trailingButton.modify;
}

void SystemApertureNoticeView.trailingButton.modify(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  id v4 = (id *)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    SystemApertureNoticeView.trailingButton.setter(v3);
  }
  else
  {
    SystemApertureNoticeView.trailingButton.setter(*(void **)(*(void *)a1 + 24));
  }
  free(v2);
}

uint64_t SystemApertureNoticeView.systemAperturePreferredContentSize.getter()
{
  double v0 = SystemApertureNoticeView.calculateWidthForMicroNotice()();
  SystemApertureNoticeView.calculateHeightForMicroNotice()();
  return *(void *)&v0;
}

double SystemApertureNoticeView.calculateHeightForMicroNotice()()
{
  if (one-time initialization token for systemAperturePadding != -1) {
    swift_once();
  }
  return *(double *)&static SystemApertureNoticeView.Constants.systemAperturePadding
       + *(double *)&qword_1EA3544E8
       + 0.0
       + 35.33;
}

double SystemApertureNoticeView.calculateWidthForMicroNotice()()
{
  double v1 = SystemApertureNoticeView.minimumWidthForMicroNotice()();
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView);
  id v3 = objc_msgSend(v2, sel_text);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      SystemApertureNoticeView.maximumWidthForMicroNotice()();
      double v10 = v9;
      if (one-time initialization token for systemAperturePadding != -1) {
        swift_once();
      }
      double v11 = *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1) + 0.0 + 35.33;
      if (one-time initialization token for titleViewHorizontalPadding != -1) {
        swift_once();
      }
      double v12 = v11 + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
      objc_msgSend(v2, sel_sizeThatFits_, v10, 1.79769313e308);
      double v14 = v12 + v13;
      OUTLINED_FUNCTION_0_20();
      __n128 v16 = (void *)(*(uint64_t (**)(void))(v15 + 160))();

      if (v16)
      {
        double v17 = v14 + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
        double v14 = v17 + SystemApertureNoticeView.trailingButtonWidth.getter();
      }
      double v18 = v14 + *(double *)&qword_1EA3544F0;
      if (v1 > v14 + *(double *)&qword_1EA3544F0) {
        double v18 = v1;
      }
      if (v18 >= v10) {
        return v10;
      }
      else {
        return v18;
      }
    }
  }
  return v1;
}

void SystemApertureNoticeView.maximumWidthForMicroNotice()()
{
  id v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v3);
  }
}

double SystemApertureNoticeView.minimumWidthForMicroNotice()()
{
  double v1 = SystemApertureNoticeView.minimumWidthFromSensorToEdge()();
  double v2 = v1 + v1;
  objc_msgSend(objc_msgSend(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide), sel_layoutFrame);
  OUTLINED_FUNCTION_28_39();
  v4.origin.CGFloat x = OUTLINED_FUNCTION_41();
  return v2 + CGRectGetWidth(v4);
}

double SystemApertureNoticeView.minimumWidthFromSensorToEdge()()
{
  double v1 = v0;
  if (one-time initialization token for systemAperturePadding != -1) {
    swift_once();
  }
  double v2 = *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1) + 0.0;
  OUTLINED_FUNCTION_4_124();
  CGRect v4 = (void *)(*(uint64_t (**)(void))(v3 + 160))();

  if (v4) {
    double v5 = SystemApertureNoticeView.trailingButtonWidth.getter() + -17.665;
  }
  else {
    double v5 = 17.665;
  }
  double v6 = v2 + v5 + SystemApertureNoticeView.distanceFromLeadingViewEndcapMinXToObstructredAreaMinX.getter();
  OUTLINED_FUNCTION_4_124();
  if ((*(uint64_t (**)(void))(v7 + 232))())
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
    double v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      double v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v11 = 0;
      _os_log_impl(&dword_1C2F90000, v9, v10, "minimumWidthFromSensorToEdge is using standard large phone size", v11, 2u);
      OUTLINED_FUNCTION_3();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.conversationControls);
    double v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1C2F90000, v13, v14, "minimumWidthFromSensorToEdge is using offset for non-large phone", v15, 2u);
      OUTLINED_FUNCTION_3();
    }

    objc_msgSend(v1, sel_displayScale);
    return v6 + 2.0 / v16;
  }
  return v6;
}

BOOL SystemApertureNoticeView.isDeviceNativeScreenSizeLargePhone.getter()
{
  id v0 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v0, sel_scale);
  double v2 = v1;
  objc_msgSend(v0, sel_nativeBounds);
  OUTLINED_FUNCTION_17_3();
  CGFloat v3 = CGRectGetWidth(v17) / v2;
  v18.origin.CGFloat x = OUTLINED_FUNCTION_4_0();
  CGFloat v4 = CGRectGetHeight(v18) / v2;
  BOOL v5 = fabs(v3 + -430.0) < 2.22044605e-16;
  BOOL v6 = fabs(v4 + -932.0) < 2.22044605e-16 && v5;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationControls);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109634;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 2080;
    type metadata accessor for CGSize(0);
    uint64_t v11 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 18) = 2080;
    uint64_t v13 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v8, v9, "isDeviceNativeScreenSizeLargePhone is %{BOOL}d from comparing %s to %s", (uint8_t *)v10, 0x1Cu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  return v6;
}

double SystemApertureNoticeView.availableWidthForTrailingButton.getter()
{
  SystemApertureNoticeView.maximumWidthForMicroNotice()();
  double v2 = v1;
  id v3 = objc_msgSend(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
  objc_msgSend(v3, sel_layoutFrame);
  OUTLINED_FUNCTION_17_3();

  v7.origin.CGFloat x = OUTLINED_FUNCTION_4_0();
  double Width = CGRectGetWidth(v7);
  if (one-time initialization token for systemAperturePadding != -1) {
    swift_once();
  }
  double v5 = (v2
      - Width
      - (*((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1)
       + *(double *)&qword_1EA3544F0))
     * 0.5;
  return 17.665 - SystemApertureNoticeView.distanceFromLeadingViewEndcapMinXToObstructredAreaMinX.getter() + v5;
}

double SystemApertureNoticeView.trailingButtonWidth.getter()
{
  OUTLINED_FUNCTION_0_20();
  double v1 = (void *)(*(uint64_t (**)(void))(v0 + 160))();
  if (!v1) {
    return 0.0;
  }
  double v2 = v1;
  objc_msgSend(v1, sel_sizeThatFits_, SystemApertureNoticeView.availableWidthForTrailingButton.getter(), 35.33);
  double v4 = v3;

  return v4;
}

double SystemApertureNoticeView.distanceFromLeadingViewEndcapMinXToObstructredAreaMinX.getter()
{
  objc_msgSend(objc_msgSend(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide), sel_layoutFrame);
  OUTLINED_FUNCTION_28_39();
  v3.origin.CGFloat x = OUTLINED_FUNCTION_41();
  double Height = CGRectGetHeight(v3);
  if (one-time initialization token for systemAperturePadding != -1) {
    swift_once();
  }
  return sqrt((Height * 0.5 + 17.665) * (Height * 0.5 + 17.665)- (*(double *)&qword_1EA3544E8 + 17.665 - Height * 0.5) * (*(double *)&qword_1EA3544E8 + 17.665 - Height * 0.5))- Height * 0.5;
}

id SystemApertureNoticeView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

id SystemApertureNoticeView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t v1 = type metadata accessor for AttributedString();
  OUTLINED_FUNCTION_0_53(v1);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton] = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView;
  type metadata accessor for LeadingContainerView();
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView;
  *(void *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  uint64_t v11 = type metadata accessor for SystemApertureNoticeView();
  double v6 = OUTLINED_FUNCTION_6_2();
  id v9 = objc_msgSendSuper2(v7, v8, v6, v4, v11);
  SystemApertureNoticeView.setupSubviews()();

  return v9;
}

id SystemApertureNoticeView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureNoticeView.init(coder:)()
{
  uint64_t v1 = type metadata accessor for AttributedString();
  OUTLINED_FUNCTION_0_53(v1);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton] = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView;
  type metadata accessor for LeadingContainerView();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureNoticeView.setupSubviews()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView];
  objc_msgSend(v1, sel_setMarqueeEnabled_, 1);
  objc_msgSend(v1, sel_setMarqueeRunning_, 1);
  objc_msgSend(v1, sel_setNumberOfLines_, 1);
  objc_msgSend(v1, sel_setTextAlignment_, 4);
  objc_msgSend(v1, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2790]);
  objc_msgSend(v1, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView]);
  return objc_msgSend(v0, sel_addSubview_, v1);
}

Swift::Void __swiftcall SystemApertureNoticeView.layoutSubviews()()
{
  v60.receiver = v0;
  v60.super_class = (Class)type metadata accessor for SystemApertureNoticeView();
  objc_msgSendSuper2(&v60, sel_layoutSubviews);
  OUTLINED_FUNCTION_3_132();
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  if (one-time initialization token for systemAperturePadding != -1) {
    swift_once();
  }
  double v9 = *(double *)&qword_1EA3544F0;
  double v10 = UIEdgeInsetsInsetRect_1(v2, v4, v6, v8, *(double *)&static SystemApertureNoticeView.Constants.systemAperturePadding, *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1), *(double *)&qword_1EA3544E8, *(double *)&qword_1EA3544F0);
  uint64_t v12 = v11;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView], sel_sizeThatFits_);
  double v14 = v13;
  id v15 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  if (v15) {
    OUTLINED_FUNCTION_3_132();
  }
  double v16 = OUTLINED_FUNCTION_10_82();
  objc_msgSend(v17, v18, v16);
  if (!v15)
  {
    v61.origin.CGFloat x = OUTLINED_FUNCTION_10_82();
    double MaxX = CGRectGetMaxX(v61);
    if (one-time initialization token for titleViewHorizontalPadding != -1) {
      swift_once();
    }
    double v9 = MaxX + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
  }
  id v20 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView];
  objc_msgSend(v20, sel_sizeToFit, v12);
  id v21 = objc_msgSend(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
  objc_msgSend(v21, sel_layoutFrame);
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;

  v62.origin.CGFloat x = v23;
  v62.origin.CGFloat y = v25;
  v62.size.CGFloat width = v27;
  v62.size.CGFloat height = v29;
  double MaxY = CGRectGetMaxY(v62);
  objc_msgSend(v20, sel__tightBoundingRectOfFirstLine);
  double v59 = MaxY - v31;
  double v32 = SystemApertureNoticeView.trailingButtonWidth.getter();
  if (one-time initialization token for titleViewHorizontalPadding != -1) {
    swift_once();
  }
  double v33 = v10 - v14 - *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
  OUTLINED_FUNCTION_0_20();
  id v35 = *(uint64_t (**)(void))(v34 + 160);
  id v36 = (void *)v35();

  double v37 = v32 + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
  if (!v36) {
    double v37 = 0.0;
  }
  double v38 = v33 - v37;
  OUTLINED_FUNCTION_3_132();
  double Height = CGRectGetHeight(v63);
  id v40 = objc_msgSend(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
  objc_msgSend(v40, sel_layoutFrame);
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v48 = v47;

  v64.origin.CGFloat x = v42;
  v64.origin.CGFloat y = v44;
  v64.size.CGFloat width = v46;
  v64.size.CGFloat height = v48;
  double v49 = Height - CGRectGetHeight(v64);
  objc_msgSend(v20, sel_bounds);
  double Width = CGRectGetWidth(v65);
  if (v38 >= Width) {
    double v51 = Width;
  }
  else {
    double v51 = v38;
  }
  objc_msgSend(v20, sel_bounds);
  double v52 = CGRectGetHeight(v66);
  if (v49 >= v52) {
    double v53 = v52;
  }
  else {
    double v53 = v49;
  }
  uint64_t v54 = ((uint64_t (*)(id))v35)(objc_msgSend(v20, sel_setFrame_, v9, v59, v51, v53));
  if (v54)
  {
    uint64_t v55 = (void *)v54;
    if (v15)
    {
      double v56 = *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1);
    }
    else
    {
      OUTLINED_FUNCTION_3_132();
      double v56 = v57 - *(double *)&qword_1EA3544F0 - v32;
    }
    objc_msgSend(v55, sel_setFrame_, v56, *(double *)&static SystemApertureNoticeView.Constants.systemAperturePadding, v32, v58);
  }
}

id SystemApertureNoticeView.__deallocating_deinit()
{
  return SystemApertureNoticeView.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for SystemApertureNoticeView);
}

void LeadingContainerView.wrappedView.willset(void *a1)
{
  double v3 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  if (!v3) {
    return;
  }
  id v8 = *(id *)(v1
             + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  if (a1)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    id v4 = v8;
    id v5 = a1;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
    id v7 = v3;
  }
  objc_msgSend(v8, sel_removeFromSuperview);
LABEL_8:
}

void LeadingContainerView.wrappedView.didset(void *a1)
{
  double v2 = v1;
  double v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView];
  if (!v3) {
    return;
  }
  if (a1)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    Class isa = v3;
    id v5 = a1;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      goto LABEL_8;
    }
  }
  else
  {
    id v7 = v3;
  }
  objc_msgSend(v2, sel_addSubview_, v3, isa);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3769F40;
  id v10 = objc_msgSend(v3, sel_centerXAnchor);
  id v11 = objc_msgSend(v2, sel_centerXAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v9 + 32) = v12;
  id v13 = objc_msgSend(v3, sel_centerYAnchor);
  id v14 = objc_msgSend(v2, sel_centerYAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v9 + 40) = v15;
  id v16 = objc_msgSend(v3, sel_widthAnchor);
  id v17 = objc_msgSend(v2, sel_widthAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v9 + 48) = v18;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_activateConstraints_, isa);

LABEL_8:
}

void LeadingContainerView.wrappedView.setter(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView;
  id v4 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  id v5 = v4;
  LeadingContainerView.wrappedView.willset(a1);
  char v6 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = a1;
  id v7 = a1;

  LeadingContainerView.wrappedView.didset(v4);
}

char *LeadingContainerView.forLastBaselineLayout.getter()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView];
  if (v1)
  {
    double v2 = *(char **)&v0[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView];
  }
  else
  {
    double v2 = v0;
    uint64_t v1 = 0;
  }
  id v3 = v1;
  return v2;
}

double LeadingContainerView.sizeThatFits(_:)(double a1, double a2, double a3, double a4)
{
  id v5 = *(void **)(v4
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  if (!v5) {
    return 0.0;
  }
  LODWORD(a3) = 1148846080;
  LODWORD(a4) = 1148846080;
  objc_msgSend(v5, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a1, a2, a3, a4);
  return result;
}

id LeadingContainerView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for LeadingContainerView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id LeadingContainerView.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LeadingContainerView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id LeadingContainerView.__deallocating_deinit()
{
  return SystemApertureNoticeView.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for LeadingContainerView);
}

id SystemApertureNoticeView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for LeadingContainerView()
{
  return self;
}

uint64_t type metadata accessor for SystemApertureNoticeView()
{
  uint64_t result = type metadata singleton initialization cache for SystemApertureNoticeView;
  if (!type metadata singleton initialization cache for SystemApertureNoticeView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureNoticeLayoutSharedConstants()
{
  return &type metadata for SystemApertureNoticeLayoutSharedConstants;
}

uint64_t ObjC metadata update function for SystemApertureNoticeView()
{
  return type metadata accessor for SystemApertureNoticeView();
}

void type metadata completion function for SystemApertureNoticeView()
{
  type metadata accessor for AttributedString?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SystemApertureNoticeView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SystemApertureNoticeView);
}

uint64_t dispatch thunk of SystemApertureNoticeView.fullSentence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.fullSentence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.fullSentence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.leadingView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.leadingView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.leadingView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.trailingButton.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.trailingButton.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.trailingButton.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.systemAperturePreferredContentSize.getter()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.isDeviceNativeScreenSizeLargePhone.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes and conformance AttributeScopes.UIKitAttributes(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void specialized MomentsBackedViewControllerProtocol.bringMomentsAndFlashViewsToFrontIfNecessary()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews];
  swift_beginAccess();
  if (*v1 == 1)
  {
    id v2 = MultiwayViewController.insulatingView.getter();
    if (v2)
    {
      objc_super v3 = v2;
      id v4 = objc_msgSend(v2, sel_superview);

      if (v4)
      {
        id v5 = MultiwayViewController.flashView.getter();
        id v6 = objc_msgSend(v5, sel_superview);

        if (v6)
        {
          uint64_t v7 = MultiwayViewController.localLivePhotoAlertView.getter();
          if (v7)
          {
            id v8 = (void *)v7;
            id v9 = objc_msgSend(v0, sel_view);
            objc_msgSend(v9, sel_insertSubview_belowSubview_, v3, v8);
          }
          else
          {
            id v9 = objc_msgSend(v0, sel_view);
            objc_msgSend(v9, sel_bringSubviewToFront_, v3);
          }

          id v10 = objc_msgSend(v0, sel_view);
          if (v10)
          {
            id v11 = v10;
            id v12 = MultiwayViewController.flashView.getter();
            objc_msgSend(v11, sel_bringSubviewToFront_, v12);
          }
        }
      }
    }
  }
}

uint64_t specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  uint64_t v0 = MostActiveParticipantViewController.flashView.getter();
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v2 = *(void (**)(void (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50);
  swift_retain();
  v2(partial apply for specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto(), v1);

  return swift_release_n();
}

void specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  id v2 = MultiwayViewController.flashView.getter();
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = *(void (**)(void (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x50);
  swift_retain();
  v1(partial apply for specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto(), v0);
  swift_release_n();
}

void specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v5 = a1 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = a2();
    if (v9)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v9;
      uint64_t v12 = a3();
      if (v12)
      {
        id v13 = (void *)v12;
        id v14 = (void *)MEMORY[0x1E4FBC8C8];
        OUTLINED_FUNCTION_19_6();
        id v16 = (void *)(*(uint64_t (**)(void))(v15 + 104))();

        (*(void (**)(uint64_t, uint64_t, uint64_t))((*v14 & *v16) + 0x98))(2, v10, v11);
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
}

Swift::Void __swiftcall MultiwayViewController.didTapOneToOneShutterButton()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_61();
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_4();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v29 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v29 - v11;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  ConversationController.remoteOneToOneParticipant.getter();
  OUTLINED_FUNCTION_33_0(v2, 1, v5);
  if (v14)
  {
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant(v2, (uint64_t)v12);
    if (!MultiwayViewController.participantGridState.getter() && (Participant.isActiveWithVideo.getter() & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      uint64_t v15 = MultiwayViewController.flashView.getter();
      (*(void (**)(void, void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x50))(0, 0);

      uint64_t v16 = *(int *)(v5 + 24);
      LODWORD(v15) = v12[v16];
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v12, (uint64_t)v10);
      if (v15 == 1)
      {
        char v17 = Participant.hasReducedQualityVideo.getter();
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
        if ((v17 & 1) == 0)
        {
          id v18 = objc_msgSend(self, sel_conversationKit);
          OUTLINED_FUNCTION_13_22();
          unint64_t v19 = OUTLINED_FUNCTION_226();
LABEL_18:
          OUTLINED_FUNCTION_0_23(v19, v20);

          v26._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_228_0();
          MultiwayViewController.showOneToOneLivePhotosAlert(_:)(v26);
          swift_bridgeObjectRelease();
          int v27 = v12[v16];
          _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v12, v1);
          if (v27 == 1)
          {
            char v28 = Participant.hasReducedQualityVideo.getter();
            _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
            if ((v28 & 1) == 0) {
              ConversationController.captureMoment(for:)();
            }
          }
          else
          {
            _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
          }
          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
          goto LABEL_15;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
      }
      id v18 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_13_22();
      OUTLINED_FUNCTION_47();
      goto LABEL_18;
    }
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v21 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v21 + 16) = xmmword_1C3769620;
  double v22 = (void *)(v13 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  v29[0] = *v22;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  uint64_t v23 = String.init<A>(reflecting:)();
  uint64_t v25 = v24;
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v25;
  OUTLINED_FUNCTION_13_51();
  swift_bridgeObjectRelease();
LABEL_15:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall MultiwayViewController.updateShouldShowReactionPickerTipView()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = type metadata accessor for VideoReactionPickerTip();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_16_0();
  if ((MultiwayViewController.canShowReactionsView()() & 1) != 0
    && (v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] & 1) == 0)
  {
    MultiwayViewController.inCallControlsVisible.getter();
  }
  static VideoReactionPickerTip.shouldShow.setter();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
  uint64_t v4 = v0;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109376;
    static VideoReactionPickerTip.shouldShow.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 1024;
    BOOL v15 = MultiwayViewController.inCallControlsVisible.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1C2F90000, v5, v6, "updateShouldShowReactionPickerTipView - VideoReactionPickerTip.shouldShow: %{BOOL}d, inCallControlsVisible: %{BOOL}d", (uint8_t *)v7, 0xEu);
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v8 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  OUTLINED_FUNCTION_2();
  BOOL v13 = 0;
  if (!__swift_getEnumTagSinglePayload(v8, 1, v1))
  {
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_2_1();
    v9();
    lazy protocol witness table accessor for type VideoReactionPickerTip and conformance VideoReactionPickerTip();
    char v10 = Tip.shouldDisplay.getter();
    uint64_t v11 = OUTLINED_FUNCTION_30_15();
    v12(v11);
    if (v10) {
      BOOL v13 = 1;
    }
  }
  BOOL v14 = v13;
  MultiwayViewController.reactionsState.setter(&v14, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState, (uint64_t (*)(char *))MultiwayViewController.reactionPickerTipState.didset);
  OUTLINED_FUNCTION_28();
}

void specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  swift_beginAccess();
  if (*v3 != 1
    || (MultiwayViewController.isScreenSharing.getter() & 1) != 0
    || ((uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState),
         swift_beginAccess(),
         (unint64_t)(*v4 - 1) > 1)
      ? (BOOL v5 = a1 == 0)
      : (BOOL v5 = 1),
        v5))
  {
    os_log_type_t v6 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
    swift_beginAccess();
    if (*v6 == 4)
    {
      MultiwayViewController.captionsLayoutState.getter((char *)&v13);
      if (v13 == 3 || !v13)
      {
        unsigned __int8 v7 = 1;
      }
      else
      {
        MultiwayViewController.captionsLayoutState.getter((char *)&v13);
        unsigned __int8 v7 = v13;
      }
      LOBYTE(v8) = 0;
      char v9 = 0;
      *os_log_type_t v6 = v7;
      goto LABEL_36;
    }
LABEL_35:
    LOBYTE(v8) = 0;
    char v9 = 0;
    goto LABEL_36;
  }
  if (a1 != 1)
  {
    uint64_t v11 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
    swift_beginAccess();
    if (*v11 == 4)
    {
      if (MultiwayViewController.isCaptioningEnabled.getter())
      {
        MultiwayViewController.captionsLayoutState.getter((char *)&v13);
        if (v13 == 3 || !v13)
        {
          unsigned int v8 = 1;
        }
        else
        {
          MultiwayViewController.captionsLayoutState.getter((char *)&v13);
          if (v13 == 3) {
            unsigned int v8 = 1;
          }
          else {
            unsigned int v8 = v13;
          }
        }
      }
      else
      {
        unsigned int v8 = 0;
      }
      char v9 = MultiwayViewController.isCaptioningEnabled.getter();
LABEL_41:
      if (v8 != 1) {
        goto LABEL_36;
      }
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  char v10 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
  swift_beginAccess();
  unsigned int v8 = *v10;
  if (v8 == 4)
  {
    char v9 = MultiwayViewController.isCaptioningEnabled.getter();
    if ((MultiwayViewController.isCaptioningEnabled.getter() & 1) == 0)
    {
      LOBYTE(v8) = 0;
      goto LABEL_36;
    }
    MultiwayViewController.captionsLayoutState.getter((char *)&v13);
    if (v13 == 3) {
      goto LABEL_42;
    }
    if (!v13) {
      goto LABEL_42;
    }
    MultiwayViewController.captionsLayoutState.getter((char *)&v13);
    unsigned int v8 = v13;
    if (v13 == 3) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  *char v10 = 4;
  if ((MultiwayViewController.isCaptioningEnabled.getter() & 1) == 0) {
    goto LABEL_35;
  }
  char v9 = 1;
  if (v8 <= 3 && v8 != 2)
  {
LABEL_42:
    if (MultiwayViewController.captionsBubbleModeIsAllowed.getter()) {
      LOBYTE(v8) = 1;
    }
    else {
      LOBYTE(v8) = 2;
    }
  }
LABEL_36:
  unsigned __int8 v13 = v8;
  MultiwayViewController.implementNewCaptionsState(newLayoutState:newRecognizerState:)((ConversationKit::CaptionsLayoutState)&v13, v9 & 1);
}

Swift::Int __swiftcall MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(Swift::Bool portraitAspect, Swift::Bool mediaPipIsVisible, ConversationKit::CaptionsLayoutState_optional captionsLayoutState)
{
  OUTLINED_FUNCTION_14();
  char v5 = v4;
  char v7 = v6;
  int v9 = *v8;
  char v10 = *v3;
  static Layout.MediaPip.padding.getter();
  if (v10)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v11 + 384))();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v12 + 488))();
    id v13 = objc_msgSend(self, sel_currentDevice);
    id v14 = objc_msgSend(v13, sel_userInterfaceIdiom);

    if (v14 == (id)5 || v14 == (id)1)
    {
      if ((v5 & 1) != 0 || v9 && v9 != 3)
      {
        static Layout.MediaPip.padding.getter();
        if (v7)
        {
          if (one-time initialization token for shared != -1) {
            swift_once();
          }
        }
        else if (one-time initialization token for shared != -1)
        {
          swift_once();
        }
        goto LABEL_24;
      }
    }
    else if (!v14)
    {
      static Layout.MediaPip.padding.getter();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
LABEL_24:
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v20 + 384))();
      static Platform.current.getter();
      OUTLINED_FUNCTION_3_2();
      (*(void (**)(void))(v21 + 488))();
    }
  }
  else
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v16 + 384))();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v17 + 488))();
    id v18 = objc_msgSend(self, sel_currentDevice);
    id v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

    if (v19)
    {
      if (v5) {
        goto LABEL_35;
      }
    }
    else
    {
      static Layout.MediaPip.padding.getter();
      id v19 = (id)static Defaults.shared;
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v22 + 384))();
      static Platform.current.getter();
      OUTLINED_FUNCTION_3_2();
      (*(void (**)(void))(v23 + 488))();
      if (v5) {
        goto LABEL_35;
      }
    }
    id v24 = OUTLINED_FUNCTION_216_2();
    id v25 = OUTLINED_FUNCTION_254_1(v24);

    if (!v25
      || (id v26 = OUTLINED_FUNCTION_216_2(),
          id v27 = OUTLINED_FUNCTION_254_1(v26),
          v19,
          v27 == (id)1)
      || (id v28 = OUTLINED_FUNCTION_216_2(),
          id v29 = OUTLINED_FUNCTION_254_1(v28),
          v19,
          v29 == (id)5))
    {
      if (v9 && v9 != 3)
      {
        id v30 = OUTLINED_FUNCTION_216_2();
        OUTLINED_FUNCTION_254_1(v30);
      }
    }
  }
LABEL_35:
  OUTLINED_FUNCTION_15_0();
  return result;
}

uint64_t specialized MostActiveParticipantsController.markParticipantAsReacting(_:)(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + *(void *)(*(void *)v1 + 152));
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_495;
  char v10 = _Block_copy(aBlock);
  v20[0] = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v20[0] - 8);
  MEMORY[0x1F4188790](v20[0]);
  id v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = v3;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v13, v18, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  (*(void (**)(char *, void))(v11 + 8))(v13, v20[0]);
  return swift_release();
}

void specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)(uint64_t a1, uint64_t a2)
{
}

void specialized EffectsHandler.wipeEffectsState()()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_167_0();
  if (v1)
  {
    uint64_t v2 = MultiwayViewController.effectsViewController.getter();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      self;
      uint64_t v4 = (void *)swift_dynamicCastObjCClass();
      if (v4) {
        objc_msgSend(v4, sel_removeAllEffects);
      }
    }
    uint64_t v5 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
    OUTLINED_FUNCTION_2();
    if (*v5) {
      objc_msgSend(*v5, sel_setMode_, 0);
    }
  }
}

void specialized EffectsHandler.handleAVCServerTimeout()()
{
  OUTLINED_FUNCTION_31();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  os_log(_:dso:log:type:_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v14 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = OUTLINED_FUNCTION_20();
  *(void *)(v4 + 16) = v0;
  v15[4] = partial apply for specialized closure #1 in EffectsHandler.handleAVCServerTimeout();
  v15[5] = v4;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  long long v15[2] = thunk for @escaping @callee_guaranteed () -> ();
  v15[3] = &block_descriptor_288;
  uint64_t v5 = _Block_copy(v15);
  id v6 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = (uint64_t)&v13;
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_61();
  v15[0] = v3;
  _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v9 = (void *)v14;
  MEMORY[0x1C8773BA0](0, v1, v2, v5);
  _Block_release(v5);

  uint64_t v10 = OUTLINED_FUNCTION_228_0();
  v11(v10);
  OUTLINED_FUNCTION_139();
  v12();
  OUTLINED_FUNCTION_28();
}

void specialized closure #1 in EffectsHandler.handleAVCServerTimeout()(void *a1)
{
  uint64_t v2 = MultiwayViewController.constraintController.getter();
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    MultiwayViewController.effectsAvailabilityDidChange(_:)(0);
    uint64_t v4 = &v3[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
    swift_beginAccess();
    if (*(void *)v4 <= 6uLL && ((1 << *(void *)v4) & 0x6C) != 0) {
      objc_msgSend(a1, sel_setControlsState_animated_, 1, 1);
    }
    MultiwayViewController.removeAllEffectsObjects()();
  }
}

uint64_t MultiwayViewController.constraintController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48[0]);
  OUTLINED_FUNCTION_47_20(v48);
  if (!v14) {
    id v15 = *(id *)(v1 + 48);
  }
  return OUTLINED_FUNCTION_90_5();
}

BOOL static MultiwayViewController.LayoutIdiom.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MultiwayViewController.layoutIdiom.getter@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = static Platform.current.getter();
  BOOL v5 = 0;
  if ((result - 1) >= 3u)
  {
    uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v1
                                                                        + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features))
                                  + 0xC8))();
    if ((result & 1) == 0
      || (uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations),
          uint64_t result = OUTLINED_FUNCTION_2(),
          *v4 != 1))
    {
      BOOL v5 = 1;
    }
  }
  *a1 = v5;
  return result;
}

Swift::Void __swiftcall MultiwayViewController.handleToggleLayoutAction()()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible) = 2;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_167_0();
  if (v1) {
    char v2 = 0;
  }
  else {
    char v2 = 1;
  }
  MultiwayViewController.layoutStyle.setter(&v2);
  MultiwayViewController.updateCurrentLayout()();
}

uint64_t MultiwayViewController.activeRemoteParticipants(in:)()
{
  type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  Date.init()();
  swift_bridgeObjectRetain();
  specialized _ArrayProtocol.filter(_:)();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_189_2();
  OUTLINED_FUNCTION_1_19();
  v3();
  return v2;
}

uint64_t MultiwayViewController.isOneToOneModeEnabled.getter()
{
  return ConversationController.isOneToOneModeEnabled.getter() & 1;
}

BOOL CNKPiPState.isPipped.getter(uint64_t a1)
{
  return a1 == 2;
}

uint64_t CNKPiPState.debugDescription.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      return OUTLINED_FUNCTION_30_15();
    default:
      if (one-time initialization token for default != -1) {
        swift_once();
      }
      uint64_t v1 = type metadata accessor for Logger();
      uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Log.default);
      os_log_type_t v3 = static os_log_type_t.fault.getter();
      if (OUTLINED_FUNCTION_105(v3))
      {
        uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_180(v4);
        OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v5, v6, "Unknown enum case");
        OUTLINED_FUNCTION_3();
      }

      break;
  }
  return OUTLINED_FUNCTION_30_15();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CNKPiPState()
{
  return CNKPiPState.debugDescription.getter(*v0);
}

void VideoMessagingError.hash(into:)()
{
  Swift::UInt v0 = OUTLINED_FUNCTION_89();
  Hasher._combine(_:)(v0);
}

Swift::Int VideoMessagingError.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t one-time initialization function for showAddPeople()
{
  uint64_t result = MEMORY[0x1C87730B0](0x50646441776F6873, 0xED0000656C706F65);
  static NSNotificationName.showAddPeople = result;
  return result;
}

id static NSNotificationName.showAddPeople.getter()
{
  if (one-time initialization token for showAddPeople != -1) {
    swift_once();
  }
  Swift::UInt v0 = (void *)static NSNotificationName.showAddPeople;
  return v0;
}

uint64_t one-time initialization function for ICSIsOnScreenNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000060, 0x80000001C37B7710);
  static MultiwayViewController.ICSIsOnScreenNotification = result;
  return result;
}

uint64_t *MultiwayViewController.ICSIsOnScreenNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for ICSIsOnScreenNotification != -1) {
    swift_once();
  }
  return &static MultiwayViewController.ICSIsOnScreenNotification;
}

id static MultiwayViewController.ICSIsOnScreenNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for ICSIsOnScreenNotification, (void **)&static MultiwayViewController.ICSIsOnScreenNotification);
}

uint64_t one-time initialization function for ICSIsOffScreenNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000061, 0x80000001C37B76A0);
  static MultiwayViewController.ICSIsOffScreenNotification = result;
  return result;
}

uint64_t *MultiwayViewController.ICSIsOffScreenNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for ICSIsOffScreenNotification != -1) {
    swift_once();
  }
  return &static MultiwayViewController.ICSIsOffScreenNotification;
}

id static MultiwayViewController.ICSIsOffScreenNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for ICSIsOffScreenNotification, (void **)&static MultiwayViewController.ICSIsOffScreenNotification);
}

uint64_t one-time initialization function for LivePhotoAvailabilityChangeNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000027, 0x80000001C37B7670);
  static MultiwayViewController.LivePhotoAvailabilityChangeNotification = result;
  return result;
}

uint64_t *MultiwayViewController.LivePhotoAvailabilityChangeNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for LivePhotoAvailabilityChangeNotification != -1) {
    swift_once();
  }
  return &static MultiwayViewController.LivePhotoAvailabilityChangeNotification;
}

id static MultiwayViewController.LivePhotoAvailabilityChangeNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for LivePhotoAvailabilityChangeNotification, (void **)&static MultiwayViewController.LivePhotoAvailabilityChangeNotification);
}

uint64_t MultiwayViewController.queryForSuggestedBannerStartTime.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v0, v1, v2);
}

uint64_t MultiwayViewController.queryForSuggestedBannerStartTime.setter()
{
  OUTLINED_FUNCTION_6_1();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  outlined assign with take of Participant?(v0, v1, v2);
  return swift_endAccess();
}

uint64_t (*MultiwayViewController.queryForSuggestedBannerStartTime.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void *MultiwayViewController.remoteControlAccessoryEventsAgent.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MultiwayViewController.remoteControlAccessoryEventsAgent.setter(void *a1)
{
}

uint64_t (*MultiwayViewController.remoteControlAccessoryEventsAgent.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.isInCallEndedBlockAndReportFlow.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(char a1)
{
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow, (uint64_t (*)(uint64_t))MultiwayViewController.isInCallEndedBlockAndReportFlow.didset);
}

uint64_t key path getter for MultiwayViewController.isInCallEndedBlockAndReportFlow : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.didset(char a1)
{
  uint64_t v2 = v1;
  int v3 = a1 & 1;
  uint64_t v4 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow);
  swift_beginAccess();
  if (*v4 != v3)
  {
    uint64_t v5 = MultiwayViewController.localParticipantView.getter();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      type metadata accessor for LocalParticipantView();
      if (swift_dynamicCastClass())
      {
        LocalParticipantView.shouldAddOverlayBlur.setter();
        MultiwayViewController.updateLocalParticipantState()();
        MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      }
    }
  }
}

uint64_t MultiwayViewController.localParticipantView.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48[0]);
  OUTLINED_FUNCTION_47_20(v48);
  if (!v14) {
    id v15 = *(id *)(v1 + 56);
  }
  return OUTLINED_FUNCTION_90_5();
}

void *MultiwayViewController.updateLocalParticipantState()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)logger);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v7, "updateLocalParticipantState", v8, 2u);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }

  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBE8], v9);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v15 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v15, (uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v47, (uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v48);
    if (result != 1)
    {
      uint64_t v36 = v4;
      uint64_t v16 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v47);
      int v43 = ConversationController.isOneToOneModeEnabled.getter();
      ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
      int v42 = v17;
      uint64_t v18 = (uint64_t *)&v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
      swift_beginAccess();
      uint64_t v19 = *v18;
      swift_bridgeObjectRetain();
      BOOL v41 = ConversationController.hasRingingCalls.getter();
      int active = ConversationController.isTrackingActiveConversation.getter();
      uint64_t v20 = (uint64_t *)&v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
      swift_beginAccess();
      uint64_t v39 = *v20;
      ConversationController.isWaitingOnFirstRemoteFrame.getter();
      int v38 = v21;
      int v37 = ConversationController.isLocallyCreated.getter();
      uint64_t v22 = &v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      swift_beginAccess();
      uint64_t v23 = *((void *)v22 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v25 = v1;
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 208);
      swift_unknownObjectRetain();
      char v27 = v26(ObjectType, v23);
      swift_unknownObjectRelease();
      ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
      LOBYTE(v22) = v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff];

      v50[0] = v43 & 1;
      v50[1] = v42 & 1;
      uint64_t v51 = v19;
      BOOL v52 = v41;
      char v53 = active & 1;
      uint64_t v54 = v39;
      char v55 = v38 & 1;
      char v56 = v37 & 1;
      char v57 = v27 & 1;
      char v58 = (char)v22;
      uint64_t v28 = MultiwayViewController.localParticipantState(for:)((uint64_t)v50);
      swift_bridgeObjectRelease();
      if (v28 > 0x3Fu) {
        goto LABEL_10;
      }
      uint64_t v29 = (unsigned __int8 *)(v49 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      if (*v29 != 128
        || (uint64_t v30 = (uint64_t)&v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant],
            swift_beginAccess(),
            uint64_t v31 = (uint64_t)v36,
            _s15ConversationKit11ParticipantVWOcTm_18(v30, (uint64_t)v36),
            LOBYTE(v30) = Participant.isActiveWithVideo.getter(),
            _s15ConversationKit11ParticipantVWOhTm_12(v31, (void (*)(void))type metadata accessor for Participant), (v30 & 1) == 0))
      {
LABEL_10:
        uint64_t v32 = (unsigned __int8 *)(v49 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if (*v32 >= 0x81u && (v28 & 0x80) == 0)
        {
          ConversationController.lookupActiveConversation()();
          if (v45)
          {
            outlined init with take of Notice(&v44, (uint64_t)v46);
            uint64_t v33 = *(void **)(v25 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);
            uint64_t v34 = *(void (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & *v33) + 0xD8);
            uint64_t v35 = v33;
            v34(v46);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
          }
          else
          {
            outlined destroy of SystemUpdateNotice?((uint64_t)&v44, &demangling cache variable for type metadata for Conversation?);
          }
        }
        MultiwayViewController.setLocalParticipantState(_:animated:)(v28, 1);
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v47);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(int a1)
{
  void (*v48)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  long long v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned char *v63;
  void *v64;
  char v65;
  char *v66;
  id v67;
  void *v68;
  void *v69;
  uint64_t (*v70)(void);
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t);
  char v75;
  char v76;
  char v77;
  char v78;
  uint64_t v79;
  char *v80;
  id v81;
  void *v82;
  char **v83;
  uint64_t v84;
  unsigned char *v85;
  char *v86;
  void *v87;
  unsigned int v88;
  void *v89;
  unsigned int v90;
  void *v91;
  unsigned int v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  void *v101;
  unsigned __int8 v102;
  id v103;
  id v104;
  uint64_t v105;
  id *v106;
  void (*v107)(void, uint64_t *, id);
  id v108;
  uint64_t v109;
  void *v110;
  void *v111;
  BOOL v112;
  void (*v113)(void);
  void *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  id v120;
  char *v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  long long v125;
  long long v126;
  char v127;
  long long v128;
  uint64_t v129;
  void v130[3];
  uint64_t v131;
  uint64_t v132;
  unsigned char v133[240];
  unsigned char v134[216];
  uint64_t v135[2];
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  id v141;
  id v142;

  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBE8], v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_86;
  }
  uint64_t v14 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v14, (uint64_t)v134, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v134, (uint64_t)v135, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v135);
  if (result == 1) {
    return result;
  }
  outlined init with take of CATransform3D?((uint64_t)v134, (uint64_t)v133, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v133);
  if (MultiwayViewController.wantsStandardControls.getter())
  {
    uint64_t v16 = (unsigned __int8 *)(v138 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    unsigned int v17 = *v16;
    uint64_t v18 = &unk_1EBBAE000;
    long long v122 = a1;
    if (v17 < 0x81)
    {
      int v19 = 0;
      v119 = 1;
      goto LABEL_22;
    }
    uint64_t v20 = *(void *)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
    if (ConversationController.isTrackingActiveConversation.getter())
    {
      int v21 = 0;
    }
    else
    {
      uint64_t v22 = *(void *)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 600);
      uint64_t v25 = v22;
      uint64_t v18 = &unk_1EBBAE000;
      int v21 = v24(ObjectType, v25) ^ 1;
    }
    uint64_t v26 = v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs;
    swift_beginAccess();
    if (*(void *)(*(void *)v26 + 16)) {
      goto LABEL_10;
    }
    uint64_t v27 = v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    long long v123 = v27;
    uint64_t v28 = *(void *)(v27 + 8);
    uint64_t v29 = swift_getObjectType();
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 208);
    swift_unknownObjectRetain();
    int v31 = v30(v29, v28);
    swift_unknownObjectRelease();
    if ((v31 | v21))
    {
      v119 = 0;
      int v19 = 1;
    }
    else
    {
      uint64_t v18 = (void *)&unk_1EBBAE000;
      if (ConversationController.hasRingingCalls.getter()
        && (MultiwayViewController.didExpandActiveVideoCallFromBanner.getter() & 1) == 0
        || (uint64_t v32 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow],
            swift_beginAccess(),
            (*v32 & 1) != 0))
      {
LABEL_10:
        v119 = 0;
        int v19 = 1;
        goto LABEL_22;
      }
      uint64_t v33 = v123;
      uint64_t v34 = *(void *)(v123 + 8);
      uint64_t v35 = swift_getObjectType();
      uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 184);
      swift_unknownObjectRetain();
      LODWORD(v34) = v36(v35, v34);
      swift_unknownObjectRelease();
      if (v34 == 5
        || (uint64_t v37 = *(void *)(v33 + 8),
            uint64_t v38 = swift_getObjectType(),
            uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 184),
            swift_unknownObjectRetain(),
            LODWORD(v37) = v39(v38, v37),
            swift_unknownObjectRelease(),
            v37 == 6))
      {
        uint64_t v40 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen];
        swift_beginAccess();
        int v19 = 0;
        int v41 = *v40;
      }
      else
      {
        int v19 = 0;
        int v41 = 1;
      }
      v119 = v41;
    }
    uint64_t v18 = &unk_1EBBAE000;
LABEL_22:
    long long v121 = v8;
    id v42 = v142;
    if (v142) {
      objc_msgSend(v142, sel_setHidden_, v19 ^ 1u);
    }
    uint64_t v120 = v42;
    LODWORD(v123) = v19;
    uint64_t v43 = *(void *)&v4[v18[356]];
    uint64_t v44 = v43 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of IDSLookupManager(v44, (uint64_t)v130);
    uint64_t v45 = v131;
    uint64_t v46 = v132;
    __swift_project_boxed_opaque_existential_1(v130, v131);
    long long v118 = v43;
    uint64_t v2 = v43 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v47 = *(void *)(v2 + 8);
    CGFloat v48 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 104);
    uint64_t v49 = swift_unknownObjectRetain();
    v48(&v128, v49, v47, v45, v46);
    swift_unknownObjectRelease();
    if (!v129)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v128, &demangling cache variable for type metadata for Conversation?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
      CGRect v65 = v122;
      goto LABEL_41;
    }
    outlined init with take of Notice(&v128, (uint64_t)&v124);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
    id v50 = v126;
    __swift_project_boxed_opaque_existential_1(&v124, v126);
    uint64_t v51 = (*(uint64_t (**)(void, void))(*((void *)&v50 + 1) + 280))(v50, *((void *)&v50 + 1));
    BOOL v52 = v123 ^ 1;
    if (v51 == 2) {
      BOOL v52 = 1;
    }
    if (v52) {
      goto LABEL_30;
    }
    char v53 = *(void *)(v2 + 8);
    uint64_t v54 = swift_getObjectType();
    char v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 184);
    swift_unknownObjectRetain();
    LODWORD(v53) = v55(v54, v53);
    swift_unknownObjectRelease();
    if (v53 != 4
      || (char v56 = *(void *)(v2 + 8),
          char v57 = swift_getObjectType(),
          char v58 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 304),
          swift_unknownObjectRetain(),
          LOBYTE(v56) = v58(v57, v56),
          swift_unknownObjectRelease(),
          (v56 & 1) != 0))
    {
LABEL_30:
      char v3 = 0;
    }
    else
    {
      long long v116 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo];
      swift_beginAccess();
      char v3 = *v116 ^ 1;
    }
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_32:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      double v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_1C3769620;
      LOBYTE(v130[0]) = v3 & 1;
      objc_super v60 = String.init<A>(reflecting:)();
      CGRect v62 = v61;
      *(void *)(v59 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v59 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v59 + 32) = v60;
      *(void *)(v59 + 40) = v62;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      CGRect v63 = (unsigned char *)(v139 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
      swift_beginAccess();
      *CGRect v63 = v3 & 1;
      LocalParticipantView.updateHiding()();
      uint64_t result = objc_msgSend(v4, sel_view);
      if (!result) {
        goto LABEL_88;
      }
      CGRect v64 = result;
      CGRect v65 = v122;
      if ((v3 & 1) != 0
        || (CGRect v66 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner],
            swift_beginAccess(),
            *v66 == 1))
      {
        uint64_t v67 = objc_msgSend(self, sel_clearColor);
      }
      else
      {
        if (one-time initialization token for background != -1) {
          swift_once();
        }
        uint64_t v67 = (id)static Colors.MultiwayViewController.background;
      }
      uint64_t v68 = v67;
      objc_msgSend(v64, sel_setBackgroundColor_, v67);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
LABEL_41:
      if (v65 == 10)
      {
        uint64_t v69 = *(void **)(v118 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
        uint64_t v70 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v69) + 0xF0);
        uint64_t v71 = v69;
        CGRect v65 = v70();
      }
      uint64_t v72 = *(void *)(v2 + 8);
      uint64_t v73 = swift_getObjectType();
      uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t))(v72 + 184);
      swift_unknownObjectRetain();
      LODWORD(v72) = v74(v73, v72);
      swift_unknownObjectRelease();
      uint64_t v75 = v123;
      if (v72 == 6) {
        uint64_t v76 = 1;
      }
      else {
        uint64_t v76 = v123;
      }
      uint64_t v77 = v65;
      if ((v65 - 2) < 7u) {
        uint64_t v78 = 1;
      }
      else {
        uint64_t v78 = v76;
      }
      int v79 = v137;
      int v80 = (char *)(v137 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden);
      swift_beginAccess();
      uint64_t *v80 = v78;
      InCallBannerHostViewController.hideOrShowRootView()();
      char v81 = v136;
      uint64_t result = objc_msgSend(v136, sel_view);
      if (result)
      {
        long long v82 = result;
        char v83 = &selRef_ringButton;
        objc_msgSend(result, sel_setHidden_, 1);

        uint64_t v84 = v139;
        uint64_t v85 = (unsigned char *)(v139 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden);
        swift_beginAccess();
        void *v85 = v75;
        LocalParticipantView.requiresControlsHidden.didset();
        if (static Platform.current.getter() != 3)
        {
          id v86 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen];
          swift_beginAccess();
          if (*v86 != 1) {
            goto LABEL_63;
          }
        }
        char v87 = (void *)MultiwayViewController.call.getter();
        unint64_t v88 = objc_msgSend(v87, sel_isOutgoing);

        if (!v88) {
          goto LABEL_63;
        }
        uint64_t v89 = (void *)MultiwayViewController.call.getter();
        uint64_t v90 = objc_msgSend(v89, sel_status);

        if (v90 != 5)
        {
          uint64_t v91 = (void *)MultiwayViewController.call.getter();
          uint64_t v92 = objc_msgSend(v91, sel_status);

          if (v92 != 6) {
            goto LABEL_63;
          }
        }
        if (VideoMessageController.State.rawValue.getter(v77) != 0xD000000000000014 || v93 != 0x80000001C3790E10)
        {
          uint64_t v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v94) {
            goto LABEL_76;
          }
          if (VideoMessageController.State.rawValue.getter(v77) != 0x616C696176616E75 || v95 != 0xEB00000000656C62)
          {
            id v97 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            char v83 = &selRef_ringButton;
            if ((v97 & 1) == 0)
            {
LABEL_63:
              id v98 = type metadata accessor for ConversationControlsRecipe();
              id v99 = (uint64_t)v121;
              __swift_storeEnumTagSinglePayload((uint64_t)v121, 1, 1, v98);
              LocalParticipantView.hudRecipe.setter(v99);
              uint64_t v100 = v123;
              id v101 = v120;
LABEL_64:
              if (v141) {
                objc_msgSend(v141, v83[190], v119);
              }
              if ((v100 & 1) == 0)
              {
                uint64_t v102 = MultiwayViewController.controlsMode.getter();
                InCallControlsViewController.mode.setter(v102);
              }
              if (v101)
              {
                uint64_t v103 = v101;
                if ((objc_msgSend(v103, sel_isHidden) & 1) == 0) {
                  objc_msgSend(v103, sel_layoutIfNeeded);
                }
              }
              uint64_t v104 = objc_msgSend(v81, sel_view);
              MultiwayViewController.bringSubviewToFront(_:)(v104);

              MultiwayViewController.updateVideoMessagingAvailableForCurrentState()();
              return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v134);
            }
LABEL_76:
            (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v84
                                                                                 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView))
                                           + 0x248))(0);
            if (one-time initialization token for shared != -1) {
              swift_once();
            }
            id v105 = static ConversationControlsRecipeGenerator.shared;
            long long v124 = 10;
            uint64_t v125 = 0u;
            uint64_t v126 = 0u;
            uint64_t v127 = 6;
            uint64_t v106 = (id *)(v79 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
            swift_beginAccess();
            uint64_t v107 = *(void (**)(void, uint64_t *, id))(*(void *)v105 + 96);
            uint64_t v108 = *v106;
            id v109 = (uint64_t)v121;
            v107(0, &v124, v108);

            outlined destroy of ConversationControlsType((uint64_t)&v124);
            LocalParticipantView.hudRecipe.setter(v109);
            uint64_t v110 = MultiwayViewController.bannerPresentationManager.getter();
            if (v110)
            {
              uint64_t v111 = v110;
              long long v124 = 10;
              uint64_t v125 = 0u;
              uint64_t v126 = 0u;
              uint64_t v127 = 6;
              BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)();

              outlined destroy of ConversationControlsType((uint64_t)&v124);
            }
            id v112 = MultiwayViewController.isPresentingEffectsBrowser.getter();
            uint64_t v100 = v123;
            id v101 = v120;
            char v83 = &selRef_ringButton;
            if (v112)
            {
              if (v140)
              {
                id v113 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v140) + 0xB0);
                v114 = v140;
                v113(0);
                char v83 = &selRef_ringButton;
              }
              long long v115 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled];
              swift_beginAccess();
              *long long v115 = 0;
              MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
            }
            goto LABEL_64;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
      __break(1u);
LABEL_88:
      __break(1u);
      return result;
    }
LABEL_86:
    swift_once();
    goto LABEL_32;
  }
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v134);
}

void (*MultiwayViewController.isInCallEndedBlockAndReportFlow.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.modify;
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.modify(uint64_t a1, uint64_t a2)
{
}

void MultiwayViewController.LayoutIdiom.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

id MultiwayViewController.conversationController.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
}

void MultiwayViewController.ConversationSnapshot.init(of:)(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  char v20 = ConversationController.isOneToOneModeEnabled.getter();
  ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
  char v19 = v4;
  uint64_t v5 = (uint64_t *)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain();
  BOOL v18 = ConversationController.hasRingingCalls.getter();
  char active = ConversationController.isTrackingActiveConversation.getter();
  uint64_t v7 = (uint64_t *)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  OUTLINED_FUNCTION_2();
  uint64_t v16 = *v7;
  ConversationController.isWaitingOnFirstRemoteFrame.getter();
  char v15 = v8;
  char v9 = ConversationController.isLocallyCreated.getter();
  uint64_t v10 = &a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  OUTLINED_FUNCTION_2();
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t ObjectType = swift_getObjectType();
  char v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 208);
  swift_unknownObjectRetain();
  char v14 = v13(ObjectType, v11);
  swift_unknownObjectRelease();
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  LOBYTE(v10) = a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff];

  *(unsigned char *)a2 = v20 & 1;
  *(unsigned char *)(a2 + 1) = v19 & 1;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 17) = active & 1;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v15 & 1;
  *(unsigned char *)(a2 + 33) = v9 & 1;
  *(unsigned char *)(a2 + 34) = v14 & 1;
  *(unsigned char *)(a2 + 35) = (_BYTE)v10;
}

void *MultiwayViewController.bannerPresentationManager.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  swift_beginAccess();
  if (!*v1) {
    return 0;
  }
  uint64_t v2 = (void **)(*v1 + OBJC_IVAR___CNKBannerPresentationManager_value);
  swift_beginAccess();
  char v3 = *v2;
  id v4 = v3;
  return v3;
}

void *MultiwayViewController.bannerPresentationManagerBox.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MultiwayViewController.bannerPresentationManagerBox.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  OUTLINED_FUNCTION_11_0();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  MultiwayViewController.bannerPresentationManagerBox.didset();
}

id key path getter for MultiwayViewController.bannerPresentationManagerBox : MultiwayViewController@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for MultiwayViewController.bannerPresentationManagerBox : MultiwayViewController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  MultiwayViewController.bannerPresentationManagerBox.setter(v1);
}

void MultiwayViewController.bannerPresentationManagerBox.didset()
{
  id v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox];
  swift_beginAccess();
  if (*(void *)v1)
  {
    id v2 = (void **)(*(void *)v1 + OBJC_IVAR___CNKBannerPresentationManager_value);
    swift_beginAccess();
    id v3 = *v2;
    if (MultiwayViewController.isFrontmostMultiway.getter())
    {
      id v4 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x120);
      id v5 = v3;
      uint64_t v6 = v0;
      v4(v0, &protocol witness table for MultiwayViewController);
    }
  }
}

uint64_t MultiwayViewController.isFrontmostMultiway.getter()
{
  id v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient);
  swift_beginAccess();
  if (*v1)
  {
    char v2 = 1;
  }
  else
  {
    swift_beginAccess();
    char v2 = static AmbientState.isPresented ^ 1;
  }
  return v2 & 1;
}

uint64_t (*MultiwayViewController.bannerPresentationManagerBox.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return MultiwayViewController.bannerPresentationManagerBox.modify;
}

uint64_t MultiwayViewController.bannerPresentationManagerBox.modify(uint64_t a1, char a2)
{
  return MultiwayViewController.bannerPresentationManagerBox.modify(a1, a2, (uint64_t (*)(uint64_t))MultiwayViewController.bannerPresentationManagerBox.didset);
}

void *MultiwayViewController.conversationControlsManager.getter()
{
  uint64_t v0 = MultiwayViewController.bannerPresentationManager.getter();
  if (v0
    && (uint64_t v1 = v0,
        char v2 = (void *)MEMORY[0x1E4FBC8C8],
        OUTLINED_FUNCTION_19_6(),
        id v4 = (void *)(*(uint64_t (**)(void))(v3 + 384))(),
        v1,
        v4))
  {
    if (MultiwayViewController.isFrontmostMultiway.getter())
    {
      id v5 = *(void (**)(uint64_t, _UNKNOWN **))((*v2 & *v4) + 0x438);
      uint64_t v6 = swift_unknownObjectRetain();
      v5(v6, &protocol witness table for MultiwayViewController);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    char v8 = OUTLINED_FUNCTION_30(v7, (uint64_t)static Logger.conversationControls);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_8_0();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1C2F90000, v8, v9, "Unable to acquire ConversationControlsManager", v10, 2u);
      OUTLINED_FUNCTION_3();
    }

    return 0;
  }
  return v4;
}

uint64_t MultiwayViewController.mostActiveParticipants.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  MEMORY[0x1F4188790](v1 - 8);
  v101[0] = (uint64_t)v101 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v103 = (char *)v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v102 = (uint64_t)v101 - v7;
  MEMORY[0x1F4188790](v6);
  os_log_type_t v9 = (char *)v101 - v8;
  id v112 = (uint64_t *)type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v112);
  uint64_t v11 = (char *)v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Participant(0);
  uint64_t v107 = *(void *)(v12 - 8);
  uint64_t v108 = (uint64_t *)v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v104 = (char *)v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v110 = (uint64_t *)((char *)v101 - v16);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  char v19 = (char *)v101 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  id v109 = (uint64_t *)((char *)v101 - v21);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v101 - v22;
  specialized MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter();
  swift_bridgeObjectRetain();
  specialized Set.init<A>(_:)();
  uint64_t v25 = v24;
  uint64_t v105 = v0;
  uint64_t v26 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v111 = (uint64_t *)specialized Sequence.compactMap<A>(_:)(v27, v25);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v28 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v28, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v29 = v26;
  specialized Sequence.compactMap<A>(_:)();
  uint64_t v31 = v30;
  v101[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v114 = v31;
  specialized Array.append<A>(contentsOf:)();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v32 = *(void *)(v114 + 16);
  uint64_t v106 = v9;
  if (v32)
  {
    unint64_t v33 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    uint64_t v34 = v114 + v33;
    uint64_t v35 = *(void *)(v107 + 72);
    v101[2] = v114;
    swift_bridgeObjectRetain();
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v111 = (uint64_t *)MEMORY[0x1E4FBC860];
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_18(v34, (uint64_t)v23);
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v23, (uint64_t)v11);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v44 = (uint64_t)&v11[*(int *)(v43 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(void *)&v11[*(int *)(v43 + 64)], *(void *)&v11[*(int *)(v43 + 64) + 8]);
          outlined destroy of Participant.MediaInfo(v44);
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v11, v45);
          _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v23, (uint64_t)v109);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v46 = (uint64_t)v111;
          }
          else {
            uint64_t v46 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v111[2] + 1, 1, (uint64_t)v111);
          }
          unint64_t v39 = *(void *)(v46 + 16);
          unint64_t v47 = *(void *)(v46 + 24);
          unint64_t v40 = v39 + 1;
          if (v39 >= v47 >> 1)
          {
            uint64_t v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v39 + 1, 1, v46);
            uint64_t v42 = (uint64_t)v109;
            uint64_t v111 = (uint64_t *)v41;
          }
          else
          {
            uint64_t v111 = (uint64_t *)v46;
            uint64_t v41 = v46;
            uint64_t v42 = (uint64_t)v109;
          }
          break;
        case 6u:
          goto LABEL_5;
        default:
          uint64_t v37 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v11, v37);
LABEL_5:
          _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v23, (uint64_t)v19);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v36 + 16) + 1, 1, v36);
          }
          unint64_t v39 = *(void *)(v36 + 16);
          unint64_t v38 = *(void *)(v36 + 24);
          unint64_t v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            uint64_t v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1, v36);
            uint64_t v42 = (uint64_t)v19;
            uint64_t v36 = v41;
          }
          else
          {
            uint64_t v41 = v36;
            uint64_t v42 = (uint64_t)v19;
          }
          break;
      }
      *(void *)(v41 + 16) = v40;
      outlined init with take of Participant(v42, v41 + v33 + v39 * v35);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
      v34 += v35;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease_n();
    os_log_type_t v9 = v106;
    uint64_t v48 = (uint64_t)v111;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x1E4FBC860];
  }
  uint64_t v114 = v48;
  uint64_t v49 = *(void *)(v105 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 112))(ObjectType, v49);
  uint64_t v54 = v107;
  uint64_t v53 = (uint64_t)v108;
  uint64_t v55 = (uint64_t)v110;
  if (v52)
  {
    uint64_t v56 = v51;
    uint64_t v57 = v52;
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, (uint64_t)v108);
    uint64_t v58 = *(void *)(v48 + 16);
    if (v58)
    {
      uint64_t v59 = v48;
      uint64_t v60 = v48 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      uint64_t v61 = *(void *)(v54 + 72);
      uint64_t v111 = (uint64_t *)v59;
      swift_bridgeObjectRetain();
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_18(v60, v55);
        CGRect v62 = *(void **)(v55 + *(int *)(v53 + 28));
        if (v62)
        {
          id v63 = objc_msgSend(v62, sel_value);
          uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v66 = v65;

          if (v64 == v56 && v57 == v66)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v53 = (uint64_t)v108;
            goto LABEL_33;
          }
          char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t v53 = (uint64_t)v108;
          if (v68) {
            break;
          }
        }
        uint64_t v55 = (uint64_t)v110;
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v110, (void (*)(void))type metadata accessor for Participant);
        v60 += v61;
        if (!--v58)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          os_log_type_t v9 = v106;
          goto LABEL_34;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      os_log_type_t v9 = v106;
      outlined destroy of SystemUpdateNotice?((uint64_t)v106, &demangling cache variable for type metadata for Participant?);
      outlined init with take of Participant((uint64_t)v110, (uint64_t)v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v53);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_34:
    uint64_t v69 = (uint64_t)v103;
    uint64_t v70 = (uint64_t)v104;
    uint64_t v71 = v102;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v9, v102, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v71, 1, v53) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
      outlined destroy of SystemUpdateNotice?(v71, &demangling cache variable for type metadata for Participant?);
      goto LABEL_50;
    }
    outlined init with take of Participant(v71, v70);
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    id v112 = v101;
    uint64_t v73 = *(void *)(*(void *)(v72 - 8) + 64);
    MEMORY[0x1F4188790](v72 - 8);
    uint64_t v74 = (char *)v101 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
    specialized Collection.first.getter(v114, v69);
    if (__swift_getEnumTagSinglePayload(v69, 1, v53) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v69, &demangling cache variable for type metadata for Participant?);
      uint64_t v75 = type metadata accessor for UUID();
      uint64_t v76 = (char *)v101 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v77 = 1;
    }
    else
    {
      uint64_t v78 = v69 + *(int *)(v53 + 20);
      uint64_t v75 = type metadata accessor for UUID();
      uint64_t v79 = v78;
      uint64_t v53 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16))((char *)v101 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0), v79, v75);
      _s15ConversationKit11ParticipantVWOhTm_12(v69, (void (*)(void))type metadata accessor for Participant);
      uint64_t v76 = (char *)v101 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v77 = 0;
    }
    uint64_t v80 = __swift_storeEnumTagSinglePayload((uint64_t)v76, v77, 1, v75);
    uint64_t v111 = v101;
    MEMORY[0x1F4188790](v80);
    unint64_t v81 = (v73 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v82 = v70 + *(int *)(v53 + 20);
    type metadata accessor for UUID();
    uint64_t v83 = *(void *)(v75 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))((char *)v101 - v81, v82, v75);
    __swift_storeEnumTagSinglePayload((uint64_t)v101 - v81, 0, 1, v75);
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v110 = v101;
    uint64_t v85 = MEMORY[0x1F4188790](v84 - 8);
    char v87 = (char *)v101 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v88 = (uint64_t)&v87[*(int *)(v85 + 56)];
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v101 - v81, (uint64_t)v87, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v101 - v81, v88, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v87, 1, v75);
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v101 - v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v88, 1, v75) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v87, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v90 = (uint64_t)v106;
LABEL_48:
        outlined destroy of SystemUpdateNotice?(v90, &demangling cache variable for type metadata for Participant?);
        uint64_t v95 = (uint64_t)v104;
LABEL_49:
        _s15ConversationKit11ParticipantVWOhTm_12(v95, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_50;
      }
    }
    else
    {
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v87, (uint64_t)v101 - v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v91 = __swift_getEnumTagSinglePayload(v88, 1, v75);
      if (v91 != 1)
      {
        id v109 = v101;
        MEMORY[0x1F4188790](v91);
        uint64_t v108 = v101;
        id v97 = (char *)v101 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v97, v88, v75);
        _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        char v98 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v99 = *(void (**)(char *, uint64_t))(v83 + 8);
        v99(v97, v75);
        outlined destroy of SystemUpdateNotice?((uint64_t)v101 - v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v99((char *)v101 - v81, v75);
        uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v87, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v90 = (uint64_t)v106;
        if (v98) {
          goto LABEL_48;
        }
LABEL_45:
        MEMORY[0x1F4188790](updated);
        uint64_t v93 = (uint64_t)v104;
        v101[-2] = (uint64_t)v104;
        uint64_t v94 = specialized MutableCollection._halfStablePartition(isSuffixElement:)(partial apply for closure #4 in MultiwayViewController.mostActiveParticipants.getter);
        if (*(void *)(v114 + 16) < v94)
        {
          __break(1u);
          JUMPOUT(0x1C35B99D0);
        }
        specialized Array.replaceSubrange<A>(_:with:)();
        _s15ConversationKit11ParticipantVWOcTm_18(v93, v101[0]);
        specialized Array.replaceSubrange<A>(_:with:)();
        outlined destroy of SystemUpdateNotice?(v90, &demangling cache variable for type metadata for Participant?);
        uint64_t v95 = v93;
        goto LABEL_49;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v101 - v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v83 + 8))((char *)v101 - v81, v75);
    }
    uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v87, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v90 = (uint64_t)v106;
    goto LABEL_45;
  }
LABEL_50:
  uint64_t v113 = v114;
  specialized Array.append<A>(contentsOf:)();
  return v113;
}

uint64_t closure #4 in MultiwayViewController.mostActiveParticipants.getter()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t MultiwayViewController.layoutStyle.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  uint64_t result = OUTLINED_FUNCTION_2();
  *a1 = *v3;
  return result;
}

uint64_t key path getter for MultiwayViewController.layoutStyle : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id key path setter for MultiwayViewController.layoutStyle : MultiwayViewController(char *a1)
{
  char v2 = *a1;
  return MultiwayViewController.layoutStyle.setter(&v2);
}

id MultiwayViewController.layoutStyle.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  return MultiwayViewController.layoutStyle.didset();
}

id MultiwayViewController.layoutStyle.didset()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  char v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 256))(v3, ObjectType, v1);
  LOBYTE(v8[0]) = *v2;
  ConversationController.updateLayoutStyle(_:)((ConversationKit::MultiwayViewController::LayoutStyle)v8);
  MultiwayViewController.updateChangeLayoutButtonAppearanceState()();
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v5, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  id result = (id)getEnumTag for TapInteraction.EventType(v8);
  if (result != 1)
  {
    id result = *(id *)(v5 + 168);
    if (result) {
      return objc_msgSend(result, sel_setNeedsUpdateConfiguration);
    }
  }
  return result;
}

uint64_t (*MultiwayViewController.layoutStyle.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return MultiwayViewController.layoutStyle.modify;
}

uint64_t MultiwayViewController.layoutStyle.modify(uint64_t a1, char a2)
{
  return MultiwayViewController.bannerPresentationManagerBox.modify(a1, a2, (uint64_t (*)(uint64_t))MultiwayViewController.layoutStyle.didset);
}

uint64_t MultiwayViewController.isSplitViewActive.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isSplitViewActive.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.isSplitViewActive.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void MultiwayViewController.updateLayoutStyleForReactionView()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) == 1)
  {
    uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
    swift_beginAccess();
    if (*v1 == 1)
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible) = 1;
      char v4 = 0;
      MultiwayViewController.layoutStyle.setter(&v4);
      MultiwayViewController.updateCurrentLayout()();
    }
  }
  else
  {
    uint64_t v2 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible;
    int v3 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible);
    if (v3 != 2)
    {
      v5[0] = v3 & 1;
      MultiwayViewController.layoutStyle.setter(v5);
      *(unsigned char *)(v0 + v2) = 2;
      MultiwayViewController.updateCurrentLayout()();
    }
  }
}

void MultiwayViewController.updateCurrentLayout()()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v2, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v22, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v23) != 1)
  {
    outlined init with take of CATransform3D?((uint64_t)v22, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    int v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
    swift_beginAccess();
    void v20[2] = *v3;
    char v4 = (void *)v23[1];
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v21);
    id v5 = objc_msgSend(v4, sel_view);
    if (v5)
    {
      uint64_t v6 = v5;
      objc_msgSend(v5, sel_frame);
      double v8 = v7;
      double v10 = v9;

      unsigned __int8 v11 = ParticipantGridViewController.mediaPipIsVisible.getter();
      uint64_t v12 = MultiwayViewController.constraintController.getter();
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        uint64_t v14 = (unsigned __int8 *)(v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
        swift_beginAccess();
        unsigned __int8 v15 = *v14;
      }
      else
      {
        unsigned __int8 v15 = 3;
      }
      v20[0] = v15;
      Swift::Int v16 = MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(v8 < v10, v11 & 1, (ConversationKit::CaptionsLayoutState_optional)v20);
      uint64_t v17 = (Swift::Int *)(*(void *)(v1
                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController)
                         + *(void *)(**(void **)(v1
                                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController)
                                     + 120));
      swift_beginAccess();
      *uint64_t v17 = v16;
      v20[0] = *v3;
      v20[1] = 1;
      MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v20);
      uint64_t v18 = MultiwayViewController.conversationControlsManager.getter();
      if (v18)
      {
        char v19 = v18;
        (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0x9C0))();
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v22);
      }
      else
      {
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v22);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t MultiwayViewController.isShowingReactions.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState);
}

void MultiwayViewController.reactionsState.didset(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.Event<Tips.EmptyDonation>);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState;
  int v10 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState);
  if (*a1 != v10)
  {
    uint64_t v25 = v6;
    uint64_t v26 = v5;
    if (v10)
    {
      unsigned __int8 v11 = MultiwayViewController.reactionsViewController.getter();
      if (v11)
      {
        uint64_t v12 = v11;
        (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x98))();
      }
    }
    uint64_t v13 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v13, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v31) != 1)
    {
      uint64_t v14 = *(void **)(v13 + 48);
      LOBYTE(v27[0]) = *(unsigned char *)(v2 + v9);
      id v15 = v14;
      MultiwayViewConstraintsController.reactionsState.setter((char *)v27);
    }
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 320);
    char v19 = v18(ObjectType, v16);
    MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v19 & 1, 0, 0, 0, 0);
    if (*(unsigned char *)(v2 + v9) == 1)
    {
      MultiwayViewController.updateFloatingLocalParticpantView()();
      MultiwayViewController.updateLocalParticipantState()();
      static VideoReactionPickerTip.hasOpenedReactionPicker.getter();
      Tips.Event.sendDonation<>(_:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
      char v20 = v18(ObjectType, v16);
      MultiwayViewController.controlStateAnimationTiming(for:)(v20 & 1, v27);
      uint64_t v21 = v28;
      uint64_t v22 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      double v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      MultiwayViewController.showReactionPicker(after:)(v23);
    }
    else
    {
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateFloatingLocalParticpantView()();
      MultiwayViewController.hideReactionPicker()();
    }
    MultiwayViewController.updateShouldShowReactionPickerTipView()();
    MultiwayViewController.updateLayoutStyleForReactionView()();
  }
}

void *MultiwayViewController.reactionsViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    uint64_t v2 = *(void **)(v1 + 200);
    id v3 = v2;
  }
  return v2;
}

id MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(int a1, char a2, void (*a3)(id), uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  LODWORD(v33) = a1;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v13);
  char v17 = _dispatchPreconditionTest(_:)();
  id result = (id)(*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    id result = objc_msgSend(v7, sel_viewIfLoaded);
    if (result)
    {
      char v19 = result;
      uint64_t v32 = a6;
      objc_msgSend(result, sel_setNeedsLayout);
      char v20 = (void *)swift_allocObject();
      void v20[2] = v7;
      v20[3] = a3;
      v20[4] = a4;
      uint64_t v37 = partial apply for closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:);
      unint64_t v38 = v20;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = 0;
      uint64_t v22 = (uint64_t *)(v21 + 16);
      *(void *)(v21 + 24) = 0;
      v7;
      id v23 = (id)_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a3);
      if (a2)
      {
        id v23 = objc_msgSend(v19, sel_snapshotViewAfterScreenUpdates_, 0);
        if (v23)
        {
          uint64_t v24 = v23;
          MultiwayViewController.setupReducedMotionAnimation(forSnapshot:animations:completion:)(v23, (uint64_t)&v37, v22);
        }
      }
      if (v33)
      {
        MultiwayViewController.restartAutoHideInCallControlsTimer()();
        uint64_t v33 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
        MultiwayViewController.controlStateAnimationTiming(for:)(a2 & 1, v34);
        uint64_t v25 = (uint64_t)v38;
        uint64_t v31 = v37;
        uint64_t v26 = (void *)swift_allocObject();
        v26[2] = v21;
        uint64_t v26[3] = a5;
        v26[4] = v32;
        uint64_t v28 = v35;
        uint64_t v27 = v36;
        uint64_t v29 = __swift_project_boxed_opaque_existential_1(v34, v35);
        swift_retain();
        swift_retain();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a5);
        specialized static UIView.animate(with:delay:animations:completion:)((uint64_t)v29, 0, 0, (uint64_t (*)())v31, v25, (uint64_t)partial apply for closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:), (uint64_t)v26, v33, v28, v27);
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      }
      else
      {
        if (a3) {
          a3(v23);
        }
        uint64_t v30 = (void (*)(uint64_t))*v22;
        if (v30)
        {
          swift_retain();
          v30(1);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v30);
        }
        if (a5) {
          a5(1);
        }
      }
      MultiwayViewController.updateStatusBarHidden()();

      swift_release();
      return (id)swift_release();
    }
    else if (a5)
    {
      return (id)((uint64_t (*)(void))a5)(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.updateFloatingLocalParticpantView()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v11 = (uint64_t *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *unsigned __int8 v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  char v12 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v14 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v14, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v34, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = getEnumTag for TapInteraction.EventType(v35);
    if (result != 1)
    {
      uint64_t v15 = (unsigned __int8 *)(v35[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      unsigned int v16 = *v15;
      uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
      if (v16 > 0x80) {
        char v18 = 1;
      }
      else {
        char v18 = *(unsigned char *)(v17
      }
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter);
      uint64_t v19 = v17 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_18(v19, (uint64_t)v4);
      uint64_t v20 = 1;
      if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) & 1) == 0) {
        uint64_t v20 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
      }
      outlined init with take of CATransform3D?((uint64_t)v34, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v29);
      char v21 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
      BYTE1(v26) = 1;
      LOBYTE(v26) = v18;
      LOBYTE(v25) = 1;
      ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v4, 2, 0, 0, 0, v20, 0, v21 & 1, v25, 0, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4], v28[5], v29[0],
        v29[1],
        v30,
        v31,
        v32,
        v33);
      uint64_t v22 = v35[7];
      LocalParticipantView.configure(with:)((uint64_t)v7);
      LocalParticipantView.configureControls(_:)(v16);
      LocalParticipantView.updateControlsAlpha(animated:)(0);
      LocalParticipantView.updateHiding()();
      char v23 = 0;
      if (ConversationController.isCameraBlurEnabled.getter()) {
        char v23 = MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
      }
      uint64_t v24 = (unsigned char *)(v22 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled);
      swift_beginAccess();
      *uint64_t v24 = v23 & 1;
      LocalParticipantView.blurEnabled.didset();
      MultiwayViewController.updateCameraFlipButtonAvailability()();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);
      return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v7, (void (*)(void))type metadata accessor for ParticipantViewModel);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.controlStateAnimationTiming(for:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    a2[3] = (uint64_t)&type metadata for CubicAnimationParameters;
    a2[4] = (uint64_t)&protocol witness table for CubicAnimationParameters;
    uint64_t result = swift_allocObject();
    *a2 = result;
    *(_OWORD *)(result + 16) = xmmword_1C3775800;
    *(_OWORD *)(result + 32) = xmmword_1C3775810;
    *(void *)(result + 48) = 0x3FEFD70A3D70A3D7;
  }
  else
  {
    if (one-time initialization token for springParameters != -1) {
      swift_once();
    }
    long long v5 = xmmword_1EA37ECE0;
    long long v6 = static Animation.ConversationControls.springParameters;
    long long v4 = xmmword_1EA37ECF0;
    a2[3] = (uint64_t)&type metadata for SpringAnimationParameters;
    a2[4] = (uint64_t)&protocol witness table for SpringAnimationParameters;
    uint64_t result = swift_allocObject();
    *a2 = result;
    *(_OWORD *)(result + 16) = v6;
    *(_OWORD *)(result + 32) = v5;
    *(_OWORD *)(result + 48) = v4;
  }
  return result;
}

void MultiwayViewController.showReactionPicker(after:)(double a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer;
  long long v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer);
  if (v4) {
    objc_msgSend(v4, sel_invalidate);
  }
  long long v5 = self;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v10[4] = partial apply for closure #1 in MultiwayViewController.showReactionPicker(after:);
  v10[5] = v6;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  v10[3] = &block_descriptor_336;
  uint64_t v7 = _Block_copy(v10);
  swift_release();
  id v8 = objc_msgSend(v5, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v7, a1);
  _Block_release(v7);
  uint64_t v9 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = v8;
}

void MultiwayViewController.hideReactionPicker()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer);
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  uint64_t v2 = MultiwayViewController.reactionsViewController.getter();
  if (v2)
  {
    id v3 = v2;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0xA8))();
  }
}

void closure #1 in MultiwayViewController.showReactionPicker(after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    long long v4 = (void *)v3;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) != 1) {
      goto LABEL_8;
    }
    uint64_t v5 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v5, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v15) == 1
      || (uint64_t v6 = *(void **)(v5 + 56),
          outlined init with take of CATransform3D?(v5, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), getEnumTag for TapInteraction.EventType(v13) == 1)|| (v7 = (unsigned __int8 *)(*(void *)(v5 + 48)+ OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState), swift_beginAccess(), *v7 >> 6 > 1u)|| (id v8 = MultiwayViewController.reactionsViewController.getter()) == 0)
    {
LABEL_8:
    }
    else
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v8) + 0xA0);
      id v11 = v6;
      v10();
    }
  }
}

uint64_t MultiwayViewController.isLocalReactionActive.didset(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive;
  int v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
  if (v4 != (result & 1))
  {
    uint64_t v5 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v5, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v18) != 1)
    {
      id v6 = *(id *)(v5 + 48);
      MultiwayViewConstraintsController.isLocalReactionActive.setter(v4);
    }
    if (*(unsigned char *)(v2 + v3) == 1)
    {
      outlined init with take of CATransform3D?(v5, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      uint64_t result = getEnumTag for TapInteraction.EventType(v16);
      if (result != 1)
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)(v5 + 48)
                               + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        uint64_t result = swift_beginAccess();
        unsigned int v8 = *v7;
        if (v8 < 0x40 || (v8 & 0xC0) == 0x40)
        {
          uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
          uint64_t ObjectType = swift_getObjectType();
          char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 320))(ObjectType, v9);
          MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v11 & 1, 0, 0, 0, 0);
          MultiwayViewController.updateFloatingLocalParticpantView()();
          return (uint64_t)MultiwayViewController.updateLocalParticipantState()();
        }
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
      uint64_t v13 = swift_getObjectType();
      char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 320))(v13, v12);
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v14 & 1, 0, 0, 0, 0);
      MultiwayViewController.updateLocalParticipantState()();
      return MultiwayViewController.updateFloatingLocalParticpantView()();
    }
  }
  return result;
}

uint64_t MultiwayViewController.isLocalReactionActive.setter(char a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive) = a1;
  return MultiwayViewController.isLocalReactionActive.didset(v2);
}

void MultiwayViewController.reactionPickerTipState.didset(unsigned __int8 *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState;
  if (*a1 != v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState])
  {
    uint64_t v3 = v1;
    int v4 = MultiwayViewController.reactionPickerTipView.getter();
    if (v4)
    {
      uint64_t v5 = v4;
      MultiwayViewController.layoutIdiom.getter((BOOL *)v42);
      int v6 = LOBYTE(v42[0]);
      int v7 = v1[v2];
      if (v7 == 1)
      {
        objc_msgSend(v5, sel_removeFromSuperview);
        id v8 = objc_msgSend(v1, sel_view);
        if (!v8)
        {
          __break(1u);
          return;
        }
        uint64_t v9 = v8;
        objc_msgSend(v8, sel_addSubview_, v5);

        id v10 = v5;
        MultiwayViewController.bringSubviewToFront(_:)(v5);
      }
      uint64_t v11 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
      swift_beginAccess();
      outlined init with take of CATransform3D?(v11, (uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v41, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v42) != 1)
      {
        uint64_t v12 = *(void **)(v11 + 48);
        LOBYTE(aBlock) = v3[v2];
        id v13 = v12;
        MultiwayViewConstraintsController.reactionPickerTipState.setter((char *)&aBlock);
      }
      uint64_t v14 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      uint64_t ObjectType = swift_getObjectType();
      char v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 320))(ObjectType, v14);
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(v6, v16 & 1, 0, 0, 0, 0);
      double v17 = 1.0;
      if (v7) {
        double v17 = 0.0;
      }
      objc_msgSend(v5, sel_setAlpha_, v17);
      char v18 = self;
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      double v19 = (*(double (**)(void))(*(void *)static Defaults.shared + 1016))();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v5;
      *(unsigned char *)(v20 + 24) = v7;
      unint64_t v39 = partial apply for closure #1 in MultiwayViewController.reactionPickerTipState.didset;
      uint64_t v40 = v20;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      uint64_t v37 = thunk for @escaping @callee_guaranteed () -> ();
      unint64_t v38 = &block_descriptor_643;
      char v21 = _Block_copy(&aBlock);
      id v22 = v5;
      swift_release();
      uint64_t v23 = swift_allocObject();
      *(unsigned char *)(v23 + 16) = v7;
      *(void *)(v23 + 24) = v22;
      unint64_t v39 = partial apply for closure #2 in MultiwayViewController.reactionPickerTipState.didset;
      uint64_t v40 = v23;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      uint64_t v37 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      unint64_t v38 = &block_descriptor_649;
      uint64_t v24 = _Block_copy(&aBlock);
      id v25 = v22;
      swift_release();
      objc_msgSend(v18, sel_animateWithDuration_animations_completion_, v21, v24, v19);
      _Block_release(v24);
      _Block_release(v21);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      __swift_project_value_buffer(v26, (uint64_t)static Logger.conversationKit);
      uint64_t v27 = v3;
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        unsigned __int8 v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)unsigned __int8 v30 = 136315138;
        int v32 = v3[v2];
        uint64_t aBlock = v31;
        if (v32) {
          uint64_t v33 = 0x656C6269736976;
        }
        else {
          uint64_t v33 = 0x6E6564646968;
        }
        if (v32) {
          unint64_t v34 = 0xE700000000000000;
        }
        else {
          unint64_t v34 = 0xE600000000000000;
        }
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2F90000, v28, v29, "reactionPickerTipState updated to %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v31, -1, -1);
        MEMORY[0x1C87760E0](v30, -1, -1);
      }
      else
      {
      }
    }
  }
}

void *MultiwayViewController.reactionPickerTipView.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    uint64_t v2 = *(void **)(v1 + 208);
    id v3 = v2;
  }
  return v2;
}

void MultiwayViewController.bringSubviewToFront(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v4, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v55, (uint64_t)v56, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v56) != 1 && a1)
  {
    id v5 = a1;
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
    id v6 = objc_msgSend(v2, sel_view);
    if (v6)
    {
      int v7 = v6;
      objc_msgSend(v6, sel_bringSubviewToFront_, v5);

      if (v58)
      {
        id v8 = v58;
        id v9 = objc_msgSend(v2, sel_view);
        if (!v9)
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        id v10 = v9;
        id v11 = objc_msgSend(v8, sel_view);
        if (!v11)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        uint64_t v12 = v11;
        objc_msgSend(v10, sel_bringSubviewToFront_, v11);
      }
      if (v60)
      {
        id v13 = v60;
        id v14 = objc_msgSend(v13, sel_superview);

        if (v14)
        {
          id v15 = objc_msgSend(v2, sel_view);
          if (!v15)
          {
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          id v16 = v15;
          objc_msgSend(v15, sel_bringSubviewToFront_, v13);

          id v13 = v16;
        }
      }
      if (v61)
      {
        id v17 = v61;
        id v18 = objc_msgSend(v17, sel_superview);

        if (v18)
        {
          id v19 = objc_msgSend(v2, sel_view);
          if (!v19)
          {
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          id v20 = v19;
          objc_msgSend(v19, sel_bringSubviewToFront_, v17);

          id v17 = v20;
        }
      }
      specialized MomentsBackedViewControllerProtocol.bringMomentsAndFlashViewsToFrontIfNecessary()();
      id v21 = objc_msgSend(v2, sel_view);
      if (v21)
      {
        id v22 = v21;
        id v23 = objc_msgSend(v62, sel_view);
        if (v23)
        {
          uint64_t v24 = v23;
          uint64_t v25 = v57;
          objc_msgSend(v22, sel_insertSubview_belowSubview_, v23, v57);

          if (v63)
          {
            id v26 = objc_msgSend(v63, sel_view);
            if (v26)
            {
              uint64_t v27 = v26;
              id v28 = objc_msgSend(v2, sel_view);
              if (!v28)
              {
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              os_log_type_t v29 = v28;
              objc_msgSend(v28, sel_insertSubview_belowSubview_, v27, v25);
            }
          }
          unsigned __int8 v30 = MultiwayViewController.reactionPickerTipView.getter();
          if (v30)
          {
            uint64_t v31 = v30;
            if (*((unsigned char *)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState) == 1)
            {
              id v32 = objc_msgSend(v2, sel_view);
              if (!v32)
              {
LABEL_62:
                __break(1u);
                goto LABEL_63;
              }
              id v33 = v32;
              objc_msgSend(v32, sel_insertSubview_belowSubview_, v31, v25);

              uint64_t v31 = v33;
            }
          }
          if (!v59 || (id v34 = objc_msgSend(v59, sel_view)) == 0)
          {
LABEL_46:
            id v52 = objc_msgSend(v2, sel_view);
            if (v52)
            {
              id v49 = v52;
              id v53 = objc_msgSend((id)v56[2], sel_view);
              if (v53)
              {
                uint64_t v54 = v53;
                objc_msgSend(v49, sel_bringSubviewToFront_, v53);

                _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
                goto LABEL_49;
              }
              goto LABEL_56;
            }
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          uint64_t v35 = v34;
          id v36 = objc_msgSend(v34, sel_superview);
          id v37 = objc_msgSend(v2, sel_view);
          unint64_t v38 = v37;
          if (v36)
          {
            if (v37)
            {
              type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
              id v39 = v36;
              char v40 = static NSObject.== infix(_:_:)();

              if ((v40 & 1) == 0) {
                goto LABEL_45;
              }
LABEL_36:
              id v41 = objc_msgSend(v2, sel_view);
              if (v41)
              {
                uint64_t v42 = v41;
                objc_msgSend(v41, sel_bringSubviewToFront_, v35);

                id v43 = objc_msgSend(v2, sel_view);
                if (v43)
                {
                  uint64_t v44 = v43;
                  id v45 = objc_msgSend((id)v56[3], sel_view);
                  if (v45)
                  {
                    uint64_t v46 = v45;
                    objc_msgSend(v44, sel_bringSubviewToFront_, v45);

                    id v47 = objc_msgSend(v2, sel_view);
                    if (v47)
                    {
                      uint64_t v48 = v47;
                      id v49 = objc_msgSend(v47, sel_subviewForEffectsBrowserViewController);

                      if (!v49)
                      {

                        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
                        return;
                      }
                      id v50 = objc_msgSend(v2, sel_view);
                      if (v50)
                      {
                        uint64_t v51 = v50;
                        objc_msgSend(v50, sel_insertSubview_aboveSubview_, v49, v35);

                        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
LABEL_49:

                        return;
                      }
LABEL_67:
                      __break(1u);
                      return;
                    }
LABEL_66:
                    __break(1u);
                    goto LABEL_67;
                  }
LABEL_65:
                  __break(1u);
                  goto LABEL_66;
                }
LABEL_64:
                __break(1u);
                goto LABEL_65;
              }
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            unint64_t v38 = v36;
          }
          else if (!v37)
          {
            goto LABEL_36;
          }

          uint64_t v35 = v38;
LABEL_45:

          goto LABEL_46;
        }
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
}

uint64_t MultiwayViewController.reactionsState.setter(unsigned char *a1, void *a2, uint64_t (*a3)(char *))
{
  char v4 = *(unsigned char *)(v3 + *a2);
  *(unsigned char *)(v3 + *a2) = *a1;
  char v6 = v4;
  return a3(&v6);
}

uint64_t MultiwayViewController.needsTips.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.needsTips.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.needsTips.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.startTipStateObserver()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v47 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VideoReactionPickerTip();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v49 = (char *)&v39 - v11;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v39 - v13;
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v39 - v16;
  uint64_t v18 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v18, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  }
  id v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v17, v6, v7);
  uint64_t v43 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask;
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask);
  id v22 = *(void (**)(char *))(v8 + 16);
  uint64_t v46 = v17;
  v22(v14);
  id v41 = (void (*)(unint64_t, char *, uint64_t))v20;
  uint64_t v42 = v8 + 32;
  id v45 = (void (*)(char *, char *, uint64_t))v22;
  if (v21)
  {
    uint64_t v23 = v8;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    swift_retain();
    uint64_t v44 = v24;
    v24(v14, v7);
  }
  else
  {
    uint64_t v25 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v47, 1, 1, v25);
    uint64_t v44 = (void (*)(char *, uint64_t))swift_allocObject();
    swift_unknownObjectWeakInit();
    ((void (*)(char *, char *, uint64_t))v22)(v49, v14, v7);
    uint64_t v40 = type metadata accessor for MainActor();
    swift_retain();
    uint64_t v26 = static MainActor.shared.getter();
    unint64_t v27 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v39 = (v9 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = v26;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v40;
    *(void *)(v28 + 24) = MEMORY[0x1E4FBCFD8];
    v20((char *)(v28 + v27), v49, v7);
    *(void *)(v28 + v39) = v44;
    swift_release();
    uint64_t v21 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    uint64_t v23 = v8;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v8 + 8);
    v44(v14, v7);
  }
  *(void *)(v1 + v43) = v21;
  swift_release();
  uint64_t v29 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask;
  uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask);
  uint64_t v31 = v48;
  v45(v48, v46, v7);
  if (v30)
  {
    swift_retain();
    id v32 = v31;
  }
  else
  {
    uint64_t v33 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v47, 1, 1, v33);
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45(v49, v31, v7);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v35 = static MainActor.shared.getter();
    unint64_t v36 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v35;
    *(void *)(v37 + 24) = MEMORY[0x1E4FBCFD8];
    v41(v37 + v36, v49, v7);
    *(void *)(v37 + ((v9 + v36 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
    swift_release();
    uint64_t v30 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    id v32 = v48;
  }
  unint64_t v38 = v44;
  v44(v32, v7);
  v38(v46, v7);
  *(void *)(v1 + v29) = v30;
  return swift_release();
}

uint64_t closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Tips.Status();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[19] = swift_task_alloc();
  v5[20] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[21] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>);
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  char v5[24] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>.Iterator);
  v5[25] = v8;
  v5[26] = *(void *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = type metadata accessor for MainActor();
  v5[30] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[31] = v10;
  v5[32] = v9;
  return MEMORY[0x1F4188298](closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver(), v10, v9);
}

uint64_t closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()()
{
  uint64_t v1 = v0[22];
  type metadata accessor for VideoReactionPickerTip();
  lazy protocol witness table accessor for type VideoReactionPickerTip and conformance VideoReactionPickerTip();
  Tip.shouldDisplayUpdates.getter();
  MEMORY[0x1C8774690](v1);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type AsyncStream<Tips.Status> and conformance AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  OUTLINED_FUNCTION_50_1();
  v2();
  AsyncMapSequence.Iterator.init(_:transform:)();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  uint64_t v3 = static MainActor.shared.getter();
  v0[33] = v3;
  if (v3)
  {
    swift_getObjectType();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v0[34] = v4;
  v0[35] = v6;
  return MEMORY[0x1F4188298](closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver(), v4, v6);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_28_0();
  v0[36] = AsyncMapSequence.Iterator.baseIterator.modify();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type AsyncStream<Tips.Status>.Iterator and conformance AsyncStream<A>.Iterator);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[37] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver();
  uint64_t v2 = v0[14];
  return MEMORY[0x1F4187C80](v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v10;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(void *)(v3 + 272);
    uint64_t v7 = *(void *)(v3 + 280);
    uint64_t v8 = closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver();
  }
  else
  {
    (*(void (**)(void))(v3 + 288))();
    uint64_t v6 = *(void *)(v3 + 272);
    uint64_t v7 = *(void *)(v3 + 280);
    uint64_t v8 = closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver();
  }
  return MEMORY[0x1F4188298](v8, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(void);
  uint64_t v9;
  void (*v10)(void);
  void *v11;
  uint64_t v13;

  OUTLINED_FUNCTION_86_0();
  uint64_t v1 = v0[14];
  OUTLINED_FUNCTION_33_0(v1, 1, v0[15]);
  if (!v2)
  {
    OUTLINED_FUNCTION_63_0();
    v7();
    OUTLINED_FUNCTION_2_1();
    v8();
    AsyncMapSequence.Iterator.transform.getter();
    OUTLINED_FUNCTION_47_6();
    v0[38] = v9;
    OUTLINED_FUNCTION_12_1();
    v10();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[39] = v11;
    *uint64_t v11 = v0;
    v11[1] = closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver();
    OUTLINED_FUNCTION_85_4();
    __asm { BRAA            X2, X16 }
  }
  outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Tips.Status?);
  swift_release();
  OUTLINED_FUNCTION_85_4();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v2 + 321) = *(unsigned char *)(v2 + 320);
  OUTLINED_FUNCTION_162();
  OUTLINED_FUNCTION_12_1();
  v4();
  OUTLINED_FUNCTION_85_4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 256);
  return MEMORY[0x1F4188298](closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver(), v1, v2);
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_28_0();
  uint64_t v12 = v0;
  uint64_t v1 = *(unsigned char *)(v0 + 321);
  uint64_t v2 = MEMORY[0x1C8776240](*(void *)(v0 + 104) + 16);
  uint64_t v3 = (void *)v2;
  if (v1)
  {
    if (!v2) {
      goto LABEL_7;
    }
    uint64_t v11 = 1;
    uint64_t v4 = &v11;
  }
  else
  {
    if (!v2) {
      goto LABEL_7;
    }
    uint64_t v10 = 0;
    uint64_t v4 = &v10;
  }
  MultiwayViewController.reactionsState.setter(v4, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState, (uint64_t (*)(char *))MultiwayViewController.reactionPickerTipState.didset);

LABEL_7:
  uint64_t v5 = static MainActor.shared.getter();
  *(void *)(v0 + 264) = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *(void *)(v0 + 272) = v6;
  *(void *)(v0 + 280) = v8;
  return MEMORY[0x1F4188298](closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver(), v6, v8);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_86_0();
  uint64_t v0 = OUTLINED_FUNCTION_14_26();
  v1(v0);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v2();
}

uint64_t closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = type metadata accessor for Tips.Status();
  v5[7] = v6;
  unsigned char v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[11] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[12] = v7;
  v5[13] = *(void *)(v7 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[15] = v8;
  v5[16] = *(void *)(v8 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[20] = v10;
  v5[21] = v9;
  return MEMORY[0x1F4188298](closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver(), v10, v9);
}

uint64_t closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()()
{
  OUTLINED_FUNCTION_86_0();
  type metadata accessor for VideoReactionPickerTip();
  lazy protocol witness table accessor for type VideoReactionPickerTip and conformance VideoReactionPickerTip();
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  uint64_t v1 = OUTLINED_FUNCTION_162();
  v2(v1);
  OUTLINED_FUNCTION_2();
  int v3 = *MEMORY[0x1E4F42310];
  *(_DWORD *)(v0 + 192) = *MEMORY[0x1E4F422A0];
  *(_DWORD *)(v0 + 196) = v3;
  *(void *)(v0 + 176) = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver();
  uint64_t v5 = *(void *)(v0 + 88);
  return MEMORY[0x1F4187D58](v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_2_2();
  *int v3 = v2;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver(), v5, v4);
}

{
  uint64_t v0;
  char v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  void (*v9)(void);
  char v10;
  void (*v11)(void);
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_86_0();
  id v19 = v0;
  OUTLINED_FUNCTION_33_0(*(void *)(v0 + 88), 1, *(void *)(v0 + 56));
  if (v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_85_4();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v4 = *(unsigned int *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 64);
  OUTLINED_FUNCTION_63_0();
  v7();
  type metadata accessor for Tips.InvalidationReason();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 104))(v5, v4);
  OUTLINED_FUNCTION_19();
  v9();
  uint64_t v10 = static Tips.Status.== infix(_:_:)();
  uint64_t v11 = *(void (**)(void))(v6 + 8);
  OUTLINED_FUNCTION_205_0();
  OUTLINED_FUNCTION_12_1();
  v11();
  if (v10)
  {
    uint64_t v12 = MEMORY[0x1C8776240](*(void *)(v0 + 48) + 16);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      uint64_t v18 = 0;
      MultiwayViewController.reactionsState.setter(&v18, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState, (uint64_t (*)(char *))MultiwayViewController.reactionPickerTipState.didset);
    }
  }
  OUTLINED_FUNCTION_12_1();
  v11();
  *(void *)(v0 + 176) = static MainActor.shared.getter();
  id v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v14;
  char *v14 = v0;
  v14[1] = closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver();
  OUTLINED_FUNCTION_85_4();
  return MEMORY[0x1F4187D58](v15);
}

uint64_t MultiwayViewController.stopTipStateObserver()()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask;
  uint64_t v2 = MEMORY[0x1E4FBC848];
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask))
  {
    uint64_t v3 = swift_retain();
    MEMORY[0x1C8773690](v3, v2 + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    swift_release();
  }
  *(void *)(v0 + v1) = 0;
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask;
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask))
  {
    uint64_t v5 = swift_retain();
    MEMORY[0x1C8773690](v5, v2 + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    swift_release();
  }
  *(void *)(v0 + v4) = 0;
  return swift_release();
}

void *MultiwayViewController.avcEffects.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MultiwayViewController.avcEffects.setter(void *a1)
{
}

void MultiwayViewController.remoteControlAccessoryEventsAgent.setter(void *a1, void *a2)
{
  uint64_t v4 = (void **)(v2 + *a2);
  OUTLINED_FUNCTION_1_21();
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
}

uint64_t (*MultiwayViewController.avcEffects.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.didExpandIncomingCallBanner.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.didExpandIncomingCallBanner.setter(char a1)
{
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner, (uint64_t (*)(uint64_t))MultiwayViewController.didExpandIncomingCallBanner.didset);
}

uint64_t key path getter for MultiwayViewController.didExpandIncomingCallBanner : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void *MultiwayViewController.didExpandIncomingCallBanner.didset(char a1)
{
  int v2 = a1 & 1;
  id v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
  uint64_t result = (void *)swift_beginAccess();
  if (*v3 != v2) {
    return MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  }
  return result;
}

void (*MultiwayViewController.didExpandIncomingCallBanner.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewController.didExpandIncomingCallBanner.modify;
}

void MultiwayViewController.didExpandIncomingCallBanner.modify(uint64_t a1, uint64_t a2)
{
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.modify(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(void *)a1 + 32));
  free(v3);
}

uint64_t MultiwayViewController.didExpandActiveVideoCallFromBanner.getter()
{
  void (*v10)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned char *v16;
  long long v18;
  uint64_t v19;
  void v20[3];
  uint64_t v21;
  uint64_t v22;
  void v23[3];
  uint64_t v24;
  uint64_t v25;

  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner);
  if (v2 != 2) {
    return v2 & 1;
  }
  uint64_t v3 = v0;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  uint64_t v5 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  swift_beginAccess();
  outlined init with copy of IDSLookupManager(v5, (uint64_t)v20);
  uint64_t v6 = v21;
  uint64_t v7 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v8 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 104);
  uint64_t v11 = swift_unknownObjectRetain();
  v10(&v18, v11, v9, v6, v7);
  swift_unknownObjectRelease();
  if (v19)
  {
    outlined init with take of Notice(&v18, (uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    uint64_t v12 = v24;
    uint64_t v13 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 280))(v12, v13) == 2)
    {
      id v14 = (unsigned __int8 *)(v3
                              + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
      swift_beginAccess();
      uint64_t v15 = *v14;
    }
    else
    {
      uint64_t v15 = 0;
    }
    uint64_t v16 = (unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
    swift_beginAccess();
    if (*v16 == 1) {
      *(unsigned char *)(v3 + v1) = v15;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v18, &demangling cache variable for type metadata for Conversation?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return 0;
  }
  return v15;
}

Swift::Void __swiftcall MultiwayViewController.resetDidExpandIncomingCallBanner()()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner) = 2;
  MultiwayViewController.didExpandIncomingCallBanner.setter(0);
}

id MultiwayViewController.ViewContent.listViewController.getter()
{
  return *v0;
}

void MultiwayViewController.ViewContent.listViewController.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*MultiwayViewController.ViewContent.listViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.gridViewController.getter()
{
  return *(id *)(v0 + 8);
}

void MultiwayViewController.ViewContent.gridViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.gridViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.controlsViewController.getter()
{
  return *(id *)(v0 + 16);
}

void MultiwayViewController.ViewContent.controlsViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.controlsViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.inCallBannerHostViewController.getter()
{
  return *(id *)(v0 + 24);
}

void MultiwayViewController.ViewContent.inCallBannerHostViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.inCallBannerHostViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ViewContent.callControlsViewController.getter()
{
  id v1 = *(id *)(v0 + 32);
  return OUTLINED_FUNCTION_35();
}

void MultiwayViewController.ViewContent.callControlsViewController.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
}

uint64_t (*MultiwayViewController.ViewContent.callControlsViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.constraintController.getter()
{
  return *(id *)(v0 + 48);
}

void MultiwayViewController.ViewContent.constraintController.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.constraintController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.floatingLocalParticipantView.getter()
{
  return *(id *)(v0 + 56);
}

void MultiwayViewController.ViewContent.floatingLocalParticipantView.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.floatingLocalParticipantView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.effectsViewController.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.effectsViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.effectsViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.effectsControlsViewController.getter()
{
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.effectsControlsViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.effectsControlsViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.effectsBrowserViewController.getter()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.effectsBrowserViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.effectsBrowserViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.floatingControlsView.getter()
{
  uint64_t v1 = *(void **)(v0 + 88);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.floatingControlsView.setter(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.floatingControlsView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.mostActiveParticipantViewController.getter()
{
  return *(id *)(v0 + 96);
}

void MultiwayViewController.ViewContent.mostActiveParticipantViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.mostActiveParticipantViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.participantLabelsView.getter()
{
  uint64_t v1 = *(void **)(v0 + 104);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.participantLabelsView.setter(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.participantLabelsView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.bottomControlsView.getter()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.bottomControlsView.setter(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.bottomControlsView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.oneToOneShutterButton.getter()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.oneToOneShutterButton.setter(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.oneToOneShutterButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.oneToOneLivePhotoAlertView.getter()
{
  uint64_t v1 = *(void **)(v0 + 128);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.oneToOneLivePhotoAlertView.setter(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.oneToOneLivePhotoAlertView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.captionsViewController.getter()
{
  return *(id *)(v0 + 136);
}

void MultiwayViewController.ViewContent.captionsViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.captionsViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ViewContent.localParticipantDragController.getter()
{
  return swift_retain();
}

uint64_t MultiwayViewController.ViewContent.localParticipantDragController.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 144) = a1;
  return result;
}

uint64_t (*MultiwayViewController.ViewContent.localParticipantDragController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ViewContent.captionsViewDragController.getter()
{
  return swift_retain();
}

uint64_t MultiwayViewController.ViewContent.captionsViewDragController.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 152) = a1;
  return result;
}

uint64_t (*MultiwayViewController.ViewContent.captionsViewDragController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.screenSharingSnapshotView.getter()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.screenSharingSnapshotView.setter(uint64_t a1)
{
  *(void *)(v1 + 160) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.screenSharingSnapshotView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.changeLayoutButton.getter()
{
  uint64_t v1 = *(void **)(v0 + 168);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.changeLayoutButton.setter(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.changeLayoutButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.changeLayoutButtonBackgroundView.getter()
{
  uint64_t v1 = *(void **)(v0 + 176);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.changeLayoutButtonBackgroundView.setter(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.changeLayoutButtonBackgroundView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.deskViewButton.getter()
{
  uint64_t v1 = *(void **)(v0 + 184);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.deskViewButton.setter(uint64_t a1)
{
  *(void *)(v1 + 184) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.deskViewButton.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.topCornerButtonsStackView.getter()
{
  uint64_t v1 = *(void **)(v0 + 192);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.topCornerButtonsStackView.setter(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.topCornerButtonsStackView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.reactionsViewController.getter()
{
  uint64_t v1 = *(void **)(v0 + 200);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.reactionsViewController.setter(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.reactionsViewController.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *MultiwayViewController.ViewContent.reactionPickerTipView.getter()
{
  uint64_t v1 = *(void **)(v0 + 208);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.ViewContent.reactionPickerTipView.setter(uint64_t a1)
{
  *(void *)(v1 + 208) = a1;
}

uint64_t (*MultiwayViewController.ViewContent.reactionPickerTipView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ViewContent.participantsViewControllers.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantsViewController>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C376BA00;
  id v2 = *(void **)(v0 + 8);
  *(void *)(v1 + 56) = type metadata accessor for ParticipantGridViewController();
  *(void *)(v1 + 64) = &protocol witness table for ParticipantGridViewController;
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = *(void **)v0;
  *(void *)(v1 + 96) = type metadata accessor for ParticipantListViewController();
  *(void *)(v1 + 104) = &protocol witness table for ParticipantListViewController;
  *(void *)(v1 + 72) = v3;
  uint64_t v4 = *(void **)(v0 + 24);
  *(void *)(v1 + 136) = type metadata accessor for InCallBannerHostViewController();
  *(void *)(v1 + 144) = &protocol witness table for InCallBannerHostViewController;
  *(void *)(v1 + 112) = v4;
  uint64_t v5 = *(void **)(v0 + 96);
  *(void *)(v1 + 176) = type metadata accessor for MostActiveParticipantViewController();
  *(void *)(v1 + 184) = &protocol witness table for MostActiveParticipantViewController;
  *(void *)(v1 + 152) = v5;
  uint64_t v6 = *(void **)(v0 + 136);
  *(void *)(v1 + 216) = type metadata accessor for CaptionsViewController();
  *(void *)(v1 + 224) = &protocol witness table for CaptionsViewController;
  *(void *)(v1 + 192) = v6;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  id v11 = v6;
  return v1;
}

uint64_t MultiwayViewController.ViewContent.allViews.getter()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769830;
  uint64_t v3 = *(void **)(v0 + 56);
  *(void *)(v2 + 32) = v3;
  v36[0] = v2;
  specialized Array._endMutation()();
  uint64_t v37 = v36[0];
  uint64_t v4 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = &selRef_ringButton;
  if (v5)
  {
    uint64_t v7 = v4 + 32;
    id v8 = v3;
    uint64_t v3 = &demangling cache variable for type metadata for ParticipantsViewController;
    do
    {
      outlined init with copy of IDSLookupManager(v7, (uint64_t)v36);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
      uint64_t v9 = OUTLINED_FUNCTION_89();
      type metadata accessor for NSObject(v9, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
      if (swift_dynamicCast())
      {
        id v10 = v54[0];
        id v11 = [v54[0] v6[178]];
        if (v11)
        {
          uint64_t v12 = v6;
          id v13 = v11;
          MEMORY[0x1C87733A0]();
          if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            OUTLINED_FUNCTION_34_37();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          uint64_t v6 = v12;
        }
        else
        {
        }
      }
      v7 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = v3;
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIViewController?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C376A6F0;
  uint64_t v16 = &demangling cache variable for type metadata for UIViewController?;
  outlined init with take of CATransform3D?(v1 + 64, (uint64_t)&v50, &demangling cache variable for type metadata for UIViewController?);
  outlined init with take of CATransform3D?((uint64_t)&v50, inited + 32, &demangling cache variable for type metadata for UIViewController?);
  outlined init with take of CATransform3D?(v1 + 72, (uint64_t)&v49, &demangling cache variable for type metadata for EffectsControlsViewController?);
  outlined init with take of CATransform3D?((uint64_t)&v49, (uint64_t)&v51, &demangling cache variable for type metadata for EffectsControlsViewController?);
  *(void *)(inited + 40) = v51;
  outlined init with take of CATransform3D?(v1 + 80, (uint64_t)&v48, &demangling cache variable for type metadata for UIViewController?);
  outlined init with take of CATransform3D?((uint64_t)&v48, inited + 48, &demangling cache variable for type metadata for UIViewController?);
  outlined init with take of CATransform3D?(v1 + 200, (uint64_t)&v47, &demangling cache variable for type metadata for VideoReactionPickerViewController?);
  outlined init with take of CATransform3D?((uint64_t)&v47, (uint64_t)&v52, &demangling cache variable for type metadata for VideoReactionPickerViewController?);
  *(void *)(inited + 56) = v52;
  v36[0] = inited;
  specialized Array._endMutation()();
  id v17 = (uint64_t *)v36[0];
  if (*(void *)(v36[0] + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v18 = *(void **)(v36[0] + 32);
  if (!v18)
  {
    outlined retain of UIColor?(&v50);
    outlined retain of UIColor?(&v49);
    outlined retain of UIColor?(&v48);
    outlined retain of UIColor?(&v47);
    goto LABEL_19;
  }
  outlined retain of UIColor?(&v50);
  outlined retain of UIColor?(&v49);
  outlined retain of UIColor?(&v48);
  outlined retain of UIColor?(&v47);
  id v19 = OUTLINED_FUNCTION_243_0(v18);
  if (!v19) {
    goto LABEL_17;
  }
  id v20 = v19;
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_67_11();
  if (v21) {
    goto LABEL_49;
  }
  while (1)
  {
    OUTLINED_FUNCTION_101_6();
    specialized Array._endMutation()();

LABEL_17:
LABEL_19:
    id v22 = (void *)v17[5];
    if (v22)
    {
      id v23 = OUTLINED_FUNCTION_243_0(v22);
      if (v23)
      {
        id v24 = v23;
        OUTLINED_FUNCTION_234_0();
        OUTLINED_FUNCTION_67_11();
        if (v21) {
          OUTLINED_FUNCTION_34_37();
        }
        OUTLINED_FUNCTION_101_6();
        specialized Array._endMutation()();
      }
    }
    uint64_t v25 = (void *)v17[6];
    if (v25)
    {
      id v26 = OUTLINED_FUNCTION_243_0(v25);
      if (v26)
      {
        id v27 = v26;
        OUTLINED_FUNCTION_234_0();
        OUTLINED_FUNCTION_67_11();
        if (v21) {
          OUTLINED_FUNCTION_34_37();
        }
        OUTLINED_FUNCTION_101_6();
        specialized Array._endMutation()();
      }
    }
    uint64_t v28 = (void *)v17[7];
    if (v28)
    {
      id v29 = OUTLINED_FUNCTION_243_0(v28);
      if (v29)
      {
        id v30 = v29;
        OUTLINED_FUNCTION_234_0();
        OUTLINED_FUNCTION_67_11();
        if (v21) {
          OUTLINED_FUNCTION_34_37();
        }
        OUTLINED_FUNCTION_101_6();
        specialized Array._endMutation()();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
    uint64_t v31 = swift_initStackObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C3771450;
    id v17 = &demangling cache variable for type metadata for UIView?;
    outlined init with take of CATransform3D?(v1 + 88, (uint64_t)&v46, &demangling cache variable for type metadata for UIView?);
    OUTLINED_FUNCTION_186_3((uint64_t)&v46);
    outlined init with take of CATransform3D?(v1 + 104, (uint64_t)&v45, &demangling cache variable for type metadata for UIView?);
    OUTLINED_FUNCTION_186_3((uint64_t)&v45);
    outlined init with take of CATransform3D?(v1 + 112, (uint64_t)&v44, &demangling cache variable for type metadata for UIView?);
    OUTLINED_FUNCTION_186_3((uint64_t)&v44);
    outlined init with take of CATransform3D?(v1 + 120, (uint64_t)&v43, &demangling cache variable for type metadata for UIButton?);
    outlined init with take of CATransform3D?((uint64_t)&v43, (uint64_t)&v53, &demangling cache variable for type metadata for UIButton?);
    *(void *)(v31 + 56) = v53;
    outlined init with take of CATransform3D?(v1 + 128, (uint64_t)&v42, &demangling cache variable for type metadata for ParticipantAlertView?);
    outlined init with take of CATransform3D?((uint64_t)&v42, (uint64_t)v54, &demangling cache variable for type metadata for ParticipantAlertView?);
    *(id *)(v31 + 64) = v54[0];
    uint64_t v3 = (void *)(v31 + 72);
    outlined init with take of CATransform3D?(v1 + 160, (uint64_t)&v41, &demangling cache variable for type metadata for UIView?);
    outlined init with take of CATransform3D?((uint64_t)&v41, v31 + 72, &demangling cache variable for type metadata for UIView?);
    outlined init with take of CATransform3D?(v1 + 168, (uint64_t)&v40, &demangling cache variable for type metadata for UIButton?);
    outlined init with take of CATransform3D?((uint64_t)&v40, (uint64_t)v36, &demangling cache variable for type metadata for UIButton?);
    *(void *)(v31 + 80) = v36[0];
    outlined init with take of CATransform3D?(v1 + 176, (uint64_t)&v39, &demangling cache variable for type metadata for UIView?);
    OUTLINED_FUNCTION_186_3((uint64_t)&v39);
    uint64_t v16 = (uint64_t *)(v31 + 96);
    outlined init with take of CATransform3D?(v1 + 208, (uint64_t)&v38, &demangling cache variable for type metadata for UIView?);
    OUTLINED_FUNCTION_186_3((uint64_t)&v38);
    specialized Array._endMutation()();
    if (*(void *)(v31 + 16) >= 9uLL) {
      break;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    OUTLINED_FUNCTION_34_37();
  }
  outlined retain of UIColor?(&v46);
  outlined retain of UIColor?(&v45);
  outlined retain of UIColor?(&v44);
  outlined retain of UIColor?(&v43);
  outlined retain of UIColor?(&v42);
  outlined retain of UIColor?(&v41);
  outlined retain of UIColor?(&v40);
  outlined retain of UIColor?(&v39);
  outlined retain of UIColor?(&v38);
  for (uint64_t i = 32; i != 104; i += 8)
  {
    uint64_t v33 = *(void **)(v31 + i);
    if (v33)
    {
      id v34 = v33;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        OUTLINED_FUNCTION_34_37();
      }
      OUTLINED_FUNCTION_39();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  return v37;
}

__n128 MultiwayViewController.ViewContent.init(listViewController:gridViewController:controlsViewController:inCallBannerHostViewController:callControlsViewController:constraintController:floatingLocalParticipantView:effectsViewController:effectsControlsViewController:effectsBrowserViewController:floatingControlsView:mostActiveParticipantViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:oneToOneLivePhotoAlertView:captionsViewController:localParticipantDragController:captionsViewDragController:screenSharingSnapshotView:changeLayoutButton:changeLayoutButtonBackgroundView:deskViewButton:topCornerButtonsStackView:reactionsViewController:reactionPickerTipView:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, __n128 a18, uint64_t a19)
{
  __n128 result = a18;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(__n128 *)(a9 + 192) = a18;
  *(void *)(a9 + 208) = a19;
  return result;
}

uint64_t MultiwayViewController.controlsMode.getter()
{
  uint64_t v1 = (void *)MultiwayViewController.call.getter();
  unsigned int v2 = objc_msgSend(v1, sel_isConversation);

  if (v2)
  {
    id v3 = objc_msgSend(self, sel_sharedInstance);
    uint64_t v4 = (void *)MultiwayViewController.call.getter();
    id v5 = objc_msgSend(v3, sel_activeConversationForCall_, v4);

    id v6 = objc_msgSend(v5, sel_link);
    if (v6)
    {
      uint64_t v7 = (void *)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
      swift_beginAccess();
      if ((unint64_t)(*v7 - 1) <= 1) {
        return (*v7 == 2) | 0x40u;
      }
    }
  }
  uint64_t v9 = (void *)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  swift_beginAccess();
  if ((unint64_t)(*v9 - 1) > 1) {
    return 0;
  }
  id v10 = (void *)MultiwayViewController.call.getter();
  unsigned int v11 = objc_msgSend(v10, sel_isConversation);

  if (v11) {
    BOOL v12 = *v9 == 1;
  }
  else {
    BOOL v12 = 0;
  }
  return v12 | 0x20u;
}

uint64_t MultiwayViewController.call.getter()
{
  OUTLINED_FUNCTION_2();
  self;
  swift_dynamicCastObjCClassUnconditional();
  OUTLINED_FUNCTION_8_11();
  swift_unknownObjectRetain();
  return v0;
}

uint64_t MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter()
{
  ConversationController.lookupActiveConversation()();
  char v0 = v3;
  if (v3)
  {
    __swift_project_boxed_opaque_existential_1(v2, v3);
    char v0 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v2, &demangling cache variable for type metadata for Conversation?);
  }
  return v0 & 1;
}

uint64_t MultiwayViewController.ConversationSnapshot.oneToOneModeEnabled.getter()
{
  return *v0;
}

uint64_t MultiwayViewController.ConversationSnapshot.oneToOneModeEnabled.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.oneToOneModeEnabled.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t MultiwayViewController.ConversationSnapshot.activeCallHasPreviouslyReceivedFirstRemoteFrame.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.activeCallHasPreviouslyReceivedFirstRemoteFrame.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.remoteParticipants.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiwayViewController.ConversationSnapshot.remoteParticipants.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.remoteParticipants.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.hasRingingCalls.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MultiwayViewController.ConversationSnapshot.hasRingingCalls.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.hasRingingCalls.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.isTrackingActiveConversation.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MultiwayViewController.ConversationSnapshot.isTrackingActiveConversation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.isTrackingActiveConversation.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.activeConversationState.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t MultiwayViewController.ConversationSnapshot.activeConversationState.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.activeConversationState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.isWaitingOnFirstRemoteFrame.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t MultiwayViewController.ConversationSnapshot.isWaitingOnFirstRemoteFrame.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.isWaitingOnFirstRemoteFrame.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.isLocallyCreated.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t MultiwayViewController.ConversationSnapshot.isLocallyCreated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.isLocallyCreated.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.wantsHoldMusic.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t MultiwayViewController.ConversationSnapshot.wantsHoldMusic.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 34) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.wantsHoldMusic.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.shouldShowLastFrameUI.getter()
{
  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t MultiwayViewController.ConversationSnapshot.shouldShowLastFrameUI.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 35) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.shouldShowLastFrameUI.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.viewContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v2, (uint64_t)v4);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
  return outlined init with take of CATransform3D?((uint64_t)v4, a1, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
}

void *MultiwayViewController.viewContent.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_21();
  OUTLINED_FUNCTION_31_39(v0, (uint64_t)v4);
  uint64_t v1 = OUTLINED_FUNCTION_35();
  outlined init with take of CATransform3D?(v1, v2, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
}

uint64_t (*MultiwayViewController.viewContent.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.isModallyPresentingCallDetails.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  uint64_t v3 = v1;
  LOBYTE(v2) = v2();

  return v2 & 1;
}

void *MultiwayViewController.inCallControlsDismissTimer.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer);
  id v2 = v1;
  return v1;
}

void MultiwayViewController.inCallControlsDismissTimer.setter(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer) = a1;
}

id MultiwayViewController.pipZoomControl.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  OUTLINED_FUNCTION_2();
  id v2 = *v1;
  return v2;
}

void MultiwayViewController.pipZoomControl.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  OUTLINED_FUNCTION_1_21();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*MultiwayViewController.pipZoomControl.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void MultiwayViewController.shouldShowZoomControls.didset(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls) != (a1 & 1)) {
    MultiwayViewController.updateZoomControls(for:)(0xFCu);
  }
}

void MultiwayViewController.updateZoomControls(for:)(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v4, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v18) != 1)
  {
    unsigned int v9 = a1;
    if (a1 >= 0xFCu)
    {
      id v10 = (unsigned __int8 *)(v18[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      unsigned int v9 = *v10;
    }
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls) == 1
      && v9 >> 6 >= 2
      && v9 == 128)
    {
      unsigned int v11 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
      swift_beginAccess();
      BOOL v12 = *v11;
      id v13 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x1B8);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
      id v14 = v12;
      char v15 = v13();

      if (v15)
      {
        MultiwayViewController.showZoomControl()();
LABEL_16:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
        return;
      }
    }
    else
    {
      outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v16);
    }
    MultiwayViewController.hideZoomControl()();
    goto LABEL_16;
  }
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Log.default);
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v7, "PipZoomControl: Not able to update because of missing view content", v8, 2u);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }
}

void MultiwayViewController.shouldShowZoomControls.setter(char a1)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls) = a1;
  MultiwayViewController.shouldShowZoomControls.didset(v2);
}

uint64_t MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter()
{
  if (MultiwayViewController.isCaptioningEnabled.getter()) {
    return (uint64_t)objc_msgSend(self, sel_allowsPortraitBlurWhenCaptionsEnabled);
  }
  else {
    return 1;
  }
}

uint64_t MultiwayViewController.isCaptioningEnabled.getter()
{
  swift_retain();
  char v0 = CaptioningStateManager.isCaptioningEnabled.getter();
  swift_release();
  return v0 & 1;
}

uint64_t MultiwayViewController.captionsPausedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
  uint64_t result = OUTLINED_FUNCTION_2();
  *a1 = *v3;
  return result;
}

uint64_t MultiwayViewController.captionsPausedState.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*MultiwayViewController.captionsPausedState.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.isScreenSharing.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_45_18(v2, (uint64_t)v12);
  OUTLINED_FUNCTION_76_9(v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_6_112(v13);
  if (v9) {
    return 0;
  }
  id v10 = (unsigned __int8 *)(*(void *)(v1 + 16)
                          + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing);
  OUTLINED_FUNCTION_2();
  return *v10;
}

id MultiwayViewController.features.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features);
}

uint64_t MultiwayViewController.deviceOrientation.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t MultiwayViewController.deviceOrientation.setter(uint64_t a1)
{
  return MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation, (uint64_t (*)(uint64_t))MultiwayViewController.deviceOrientation.didset);
}

uint64_t key path getter for MultiwayViewController.deviceOrientation : MultiwayViewController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void *MultiwayViewController.deviceOrientation.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (one-time initialization token for default == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Log.default);
  id v10 = v2;
  unsigned int v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  id v13 = &unk_1EBBAE000;
  if (os_log_type_enabled(v11, v12))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v23[0] = v15;
    *(_DWORD *)id v14 = 136315138;
    uint64_t v16 = (uint64_t *)&v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation];
    swift_beginAccess();
    uint64_t v22 = *v16;
    type metadata accessor for CNKDeviceOrientation(0);
    uint64_t v17 = String.init<A>(reflecting:)();
    uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v13 = (void *)&unk_1EBBAE000;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v11, v12, "Device Orientation has changed: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v15, -1, -1);
    MEMORY[0x1C87760E0](v14, -1, -1);
  }
  else
  {
  }
  id v19 = (uint64_t *)&v10[v13[401]];
  swift_beginAccess();
  ConversationController.deviceOrientation.setter(*v19);
  MultiwayViewController.updateViewConstraints()();
  uint64_t result = MultiwayViewController.didUpdateLocalParticipantOrientation(_:)(*v19);
  if (*v19 != a1 && v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] == 1) {
    return (void *)MultiwayViewController.toggleReactionsView()();
  }
  return result;
}

Swift::Void __swiftcall MultiwayViewController.updateViewConstraints()()
{
  uint64_t v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, sel_updateViewConstraints);
  uint64_t v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v2, (uint64_t)v19);
  outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v20);
  if (!v3)
  {
    outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v17);
    id v4 = objc_msgSend(v0, sel_view);
    if (v4)
    {
      uint64_t v5 = v20[6];
      objc_msgSend(v4, sel_safeAreaInsetFrame);
      OUTLINED_FUNCTION_126();
      OUTLINED_FUNCTION_2();
      double v6 = OUTLINED_FUNCTION_41();
      MultiwayViewConstraintsController.update(for:deviceOrientation:)(v7, v6, v8, v9, v10);
      unsigned int v11 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner];
      OUTLINED_FUNCTION_2();
      uint64_t v12 = *v11;
      id v13 = objc_msgSend(v1, sel_view);
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
        uint64_t v16 = *(void *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
        __swift_project_boxed_opaque_existential_1((void *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v15);
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 40))(v12, v14, v15, v16);

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void *MultiwayViewController.didUpdateLocalParticipantOrientation(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for Participant(0);
  uint64_t v47 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v54 = (uint64_t)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (void *)((char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v11 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v11, (uint64_t)v56, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v56, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v57);
  if (result == 1) {
    return result;
  }
  uint64_t v12 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
  swift_beginAccess();
  if (!*v12 && !MultiwayViewController.isPipped.getter())
  {
    outlined init with take of CATransform3D?((uint64_t)v56, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v55);
    uint64_t result = (void *)ConversationController.visibleParticipants.getter();
    uint64_t v45 = result[2];
    if (!v45)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    v36[1] = v2;
    unint64_t v13 = 0;
    id v43 = (char *)result + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    uint64_t v41 = v57[0];
    uint64_t v42 = v57[1];
    id v39 = v58;
    uint64_t v40 = v57[3];
    id v38 = v59;
    long long v37 = xmmword_1C376BA00;
    id v44 = result;
    id v14 = (void *)v57[0];
    uint64_t v15 = v58;
    while (v13 < result[2])
    {
      unint64_t v53 = v13 + 1;
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)&v43[*(void *)(v47 + 72) * v13], v54);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantsViewController>);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v37;
      uint64_t v17 = type metadata accessor for ParticipantGridViewController();
      *(void *)(v16 + 56) = v17;
      uint64_t v49 = v17;
      *(void *)(v16 + 64) = &protocol witness table for ParticipantGridViewController;
      objc_super v18 = (void *)v42;
      *(void *)(v16 + 32) = v42;
      *(void *)(v16 + 96) = type metadata accessor for ParticipantListViewController();
      *(void *)(v16 + 104) = &protocol witness table for ParticipantListViewController;
      *(void *)(v16 + 72) = v14;
      *(void *)(v16 + 136) = type metadata accessor for InCallBannerHostViewController();
      *(void *)(v16 + 144) = &protocol witness table for InCallBannerHostViewController;
      id v19 = (void *)v40;
      *(void *)(v16 + 112) = v40;
      id v50 = (void *)(v16 + 112);
      *(void *)(v16 + 176) = type metadata accessor for MostActiveParticipantViewController();
      *(void *)(v16 + 184) = &protocol witness table for MostActiveParticipantViewController;
      *(void *)(v16 + 152) = v15;
      uint64_t v51 = (void *)(v16 + 152);
      *(void *)(v16 + 216) = type metadata accessor for CaptionsViewController();
      *(void *)(v16 + 224) = &protocol witness table for CaptionsViewController;
      id v20 = v38;
      *(void *)(v16 + 192) = v38;
      uint64_t v52 = (void *)(v16 + 192);
      __swift_project_boxed_opaque_existential_1((void *)(v16 + 32), v17);
      id v48 = off_1F1EA4C20[0];
      id v21 = v18;
      id v22 = v14;
      id v23 = v19;
      id v24 = v15;
      id v25 = v20;
      uint64_t v26 = v54;
      uint64_t v27 = v46;
      ((void (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v48)(v54, v46, v49, &protocol witness table for ParticipantGridViewController);
      uint64_t v28 = *(void *)(v16 + 96);
      uint64_t v29 = *(void *)(v16 + 104);
      __swift_project_boxed_opaque_existential_1((void *)(v16 + 72), v28);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v26, v27, v28, v29);
      uint64_t v30 = *(void *)(v16 + 136);
      uint64_t v31 = *(void *)(v16 + 144);
      __swift_project_boxed_opaque_existential_1(v50, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v26, v27, v30, v31);
      uint64_t v32 = *(void *)(v16 + 176);
      uint64_t v33 = *(void *)(v16 + 184);
      __swift_project_boxed_opaque_existential_1(v51, v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v27, v32, v33);
      uint64_t v34 = *(void *)(v16 + 216);
      uint64_t v35 = *(void *)(v16 + 224);
      __swift_project_boxed_opaque_existential_1(v52, v34);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v26, v27, v34, v35);
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
      _s15ConversationKit11ParticipantVWOhTm_12(v26, (void (*)(void))type metadata accessor for Participant);
      uint64_t result = v44;
      unint64_t v13 = v53;
      if (v45 == v53) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  outlined init with take of CATransform3D?((uint64_t)v56, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v55);
LABEL_6:
  MultiwayViewController.updatePresentationSize()();
  MultiwayViewController.needsUpdatePresentationContexts.setter(1);
  MultiwayViewController.notifyLocalParticipantAspectRatioChanged()();
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v56);
}

uint64_t MultiwayViewController.toggleReactionsView()()
{
  char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState);
  if (v1 & 1) != 0 || (uint64_t result = MultiwayViewController.canShowReactionsView()(), (result))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C3769620;
    v7[1] = v1 ^ 1;
    uint64_t v4 = String.init<A>(reflecting:)();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v7[0] = v1 ^ 1;
    return MultiwayViewController.reactionsState.setter(v7, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState, (uint64_t (*)(char *))MultiwayViewController.reactionsState.didset);
  }
  return result;
}

void (*MultiwayViewController.deviceOrientation.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_37_0();
  void *v0 = v2;
  void v2[4] = v1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  OUTLINED_FUNCTION_2();
  void v2[3] = *v3;
  return MultiwayViewController.deviceOrientation.modify;
}

void MultiwayViewController.deviceOrientation.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t MultiwayViewController.frontBoardInterfaceOrientation.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t MultiwayViewController.frontBoardInterfaceOrientation.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return MultiwayViewController.frontBoardInterfaceOrientation.didset();
}

uint64_t key path getter for MultiwayViewController.frontBoardInterfaceOrientation : MultiwayViewController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewController.frontBoardInterfaceOrientation.didset()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = getEnumTag for TapInteraction.EventType(v8);
  if (result != 1)
  {
    uint64_t v3 = *(void *)(v1 + 96);
    uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation);
    swift_beginAccess();
    uint64_t v5 = *v4;
    uint64_t v6 = (void *)(v3
                  + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation);
    uint64_t result = swift_beginAccess();
    *uint64_t v6 = v5;
  }
  return result;
}

uint64_t (*MultiwayViewController.frontBoardInterfaceOrientation.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return MultiwayViewController.frontBoardInterfaceOrientation.modify;
}

uint64_t MultiwayViewController.frontBoardInterfaceOrientation.modify(uint64_t a1, char a2)
{
  return MultiwayViewController.bannerPresentationManagerBox.modify(a1, a2, (uint64_t (*)(uint64_t))MultiwayViewController.frontBoardInterfaceOrientation.didset);
}

uint64_t MultiwayViewController.bannerPresentationManagerBox.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

BOOL MultiwayViewController.wantsPIPRotationForLocalPreview.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16_0();
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
  OUTLINED_FUNCTION_2();
  if (*v4) {
    return 0;
  }
  if (!MultiwayViewController.isPipped.getter()) {
    return 0;
  }
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v5, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v15);
  if (v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v5 + 96) + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v8 = OUTLINED_FUNCTION_41_0();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v8, v9, v10);
  type metadata accessor for Participant(0);
  uint64_t v11 = OUTLINED_FUNCTION_375();
  OUTLINED_FUNCTION_33_0(v11, 1, v7);
  if (v6)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
    return 0;
  }
  BOOL v13 = *(void *)(v1 + *(int *)(v7 + 28)) == 0;
  _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
  return v13;
}

BOOL MultiwayViewController.isPipped.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  OUTLINED_FUNCTION_2();
  return *v1 == 2;
}

uint64_t MultiwayViewController.supportedDeviceOrientations.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t MultiwayViewController.supportedDeviceOrientations.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.supportedDeviceOrientations.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.isOnScreen.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_23_0();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void MultiwayViewController.isOnScreen.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_45_4();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  MultiwayViewController.isOnScreen.didset(v2);
}

uint64_t key path getter for MultiwayViewController.isOnScreen : MultiwayViewController@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MultiwayViewController.isOnScreen.getter();
  *a1 = result & 1;
  return result;
}

void key path setter for MultiwayViewController.isOnScreen : MultiwayViewController()
{
}

void MultiwayViewController.isOnScreen.didset(char a1)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
  id v4 = v1;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 1024;
    MultiwayViewController.isOnScreen.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1C2F90000, v5, v6, "isOnScreen oldvalue: %{BOOL}d, newValue: %{BOOL}d", (uint8_t *)v7, 0xEu);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }
  else
  {
  }
  if ((MultiwayViewController.isOnScreen.getter() & 1) != (a1 & 1))
  {
    if (MultiwayViewController.isOnScreen.getter())
    {
      uint64_t v8 = CFNotificationCenterGetDarwinNotifyCenter();
      if (one-time initialization token for ICSIsOnScreenNotification != -1) {
        swift_once();
      }
      CFNotificationCenterPostNotification(v8, (CFNotificationName)static MultiwayViewController.ICSIsOnScreenNotification, 0, 0, 1u);

      MultiwayViewController.resumeUserInterface()();
    }
    else if (MultiwayViewController.isFrontmostMultiway.getter())
    {
      uint64_t v9 = CFNotificationCenterGetDarwinNotifyCenter();
      if (one-time initialization token for ICSIsOffScreenNotification != -1) {
        swift_once();
      }
      CFNotificationCenterPostNotification(v9, (CFNotificationName)static MultiwayViewController.ICSIsOffScreenNotification, 0, 0, 1u);

      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v10 = (*(uint64_t (**)(void))(*(void *)static ConversationHUDMenuController.shared + 88))();
      if (v10)
      {
        (*(void (**)(unint64_t, unint64_t))(*(void *)v10 + 528))(0xD00000000000001DLL, 0x80000001C37B7650);
        swift_release();
      }
      MultiwayViewController.pauseUserInterface()();
    }
    MultiwayViewController.updateScreenSharingBlurIfNeeded()();
    MultiwayViewController.showCallDetailsIfNecessary()();
  }
}

uint64_t MultiwayViewController.resumeUserInterface()()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  MultiwayViewController.updateStatusBarHidden()();
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  swift_beginAccess();
  ConversationController.deviceOrientation.setter(*v9);
  MultiwayViewController.updateFloatingLocalParticpantView()();
  uint64_t v10 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v10, (uint64_t)v52, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v52, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v53) != 1)
  {
    id v11 = *(id *)(v10 + 56);
    LocalParticipantView.updateControlsAlpha(animated:)(0);
  }
  MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
  uint64_t v12 = MultiwayViewController.conversationControlsManager.getter();
  BOOL v13 = (void *)MEMORY[0x1E4FBC8C8];
  if (v12)
  {
    id v14 = v12;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x978))();
  }
  MultiwayViewController.restartAutoHideInCallControlsTimer()();
  if (MultiwayViewController.isOnScreen.getter())
  {
    MultiwayViewController.setForegroundOrPiPRemoteVideoPresentationState()();
    if (!MultiwayViewController.isPipped.getter())
    {
      uint64_t v15 = MultiwayViewController.conversationControlsManager.getter();
      if (v15)
      {
        uint64_t v16 = v15;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))((*v13 & *v16) + 0x7E0))(v7);
      }
    }
    uint64_t v17 = MultiwayViewController.conversationControlsManager.getter();
    if (v17)
    {
      objc_super v18 = v17;
      ConversationControlsManager.showInCallHUD()();
    }
    ConversationController.lookupActiveConversation()();
    if (v46)
    {
      outlined init with take of Notice(&v44, (uint64_t)v49);
      uint64_t v19 = v50;
      uint64_t v20 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 200))(v19, v20) & 1) != 0
        && (MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter() & 1) != 0)
      {
        id v21 = (void *)MultiwayViewController.call.getter();
        unsigned __int8 v22 = objc_msgSend(v21, sel_wantsHoldMusic);

        if ((v22 & 1) == 0)
        {
          id v23 = (void *)MultiwayViewController.call.getter();
          objc_msgSend(v23, sel_setIsSendingVideo_, 1);

          MultiwayViewController.stoppedSendingVideoDueToOffscreen.setter(0);
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v44, &demangling cache variable for type metadata for Conversation?);
    }
    uint64_t v25 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    uint64_t result = swift_beginAccess();
    if (*(char *)(v25 + 16) < 0)
    {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 1);
      uint64_t result = ConversationController.isCarPlayConnected.getter();
      if ((result & 1) == 0)
      {
        if (ConversationController.shouldDeferStartCameraAction.getter())
        {
          ConversationController.didDeferStartCameraAction.setter(1);
        }
        else
        {
          MultiwayViewController.localVideoProvider.getter();
          uint64_t v28 = v50;
          uint64_t v27 = v51;
          __swift_project_boxed_opaque_existential_1(v49, v50);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, *v9, 1, v28, v27);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
        }
        outlined init with take of CATransform3D?(v10, (uint64_t)&v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)&v44, (uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        uint64_t result = getEnumTag for TapInteraction.EventType(v49);
        if (result != 1)
        {
          uint64_t v29 = *(void **)(v10 + 56);
          uint64_t result = MultiwayViewController.isPipped.getter();
          if ((result & 1) == 0)
          {
            uint64_t v30 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
            swift_beginAccess();
            uint64_t v31 = v39;
            _s15ConversationKit11ParticipantVWOcTm_18(v30, v39);
            id v32 = v29;
            char v33 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
            LOWORD(v36) = 257;
            LOBYTE(v35) = 1;
            uint64_t v34 = v40;
            ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v31, 2, 0, 0, 0, 0, 0, v33 & 1, v35, 0, v36, v37, v38, v39, v40, v41, v42, v43, v44,
              *((uint64_t *)&v44 + 1),
              v45,
              v46,
              v47,
              v48);
            ParticipantView.registerVideoLayers(with:)(v34);

            return _s15ConversationKit11ParticipantVWOhTm_12(v34, (void (*)(void))type metadata accessor for ParticipantViewModel);
          }
        }
      }
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
  return result;
}

void MultiwayViewController.pauseUserInterface()()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v1 = objc_msgSend(v0, sel_navigationController);
  id v2 = objc_msgSend(v1, sel_topViewController);

  if (v2)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
    uint64_t v3 = v0;
    id v4 = v2;
    char v5 = static NSObject.== infix(_:_:)();

    if (v5)
    {
      if (MultiwayViewController.isPipped.getter()
        && (MultiwayViewController.isOnScreen.getter() & 1) != 0
        && !MultiwayViewController.shouldPauseForRingingCall.getter())
      {
        id v23 = (id)MultiwayViewController.call.getter();
        objc_msgSend(v23, sel_setRemoteVideoPresentationState_, 1);
      }
      else if (MultiwayViewController.isFrontmostMultiway.getter())
      {
        uint64_t v6 = (void *)MultiwayViewController.call.getter();
        objc_msgSend(v6, sel_setRemoteVideoPresentationState_, 2);

        uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
        ConversationController.lookupActiveConversation()();
        if (v28)
        {
          outlined init with take of Notice(&v27, (uint64_t)v24);
          uint64_t v8 = v25;
          uint64_t v9 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 200))(v8, v9))
          {
            uint64_t v10 = (void *)MultiwayViewController.call.getter();
            unsigned __int8 v11 = objc_msgSend(v10, sel_isSendingVideo);

            if (v11) {
              char v12 = 1;
            }
            else {
              char v12 = MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter();
            }
            MultiwayViewController.stoppedSendingVideoDueToOffscreen.setter(v12 & 1);
            BOOL v13 = (void *)MultiwayViewController.call.getter();
            objc_msgSend(v13, sel_setIsSendingVideo_, 0);
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        }
        else
        {
          outlined destroy of SystemUpdateNotice?((uint64_t)&v27, &demangling cache variable for type metadata for Conversation?);
        }
        uint64_t v14 = v7 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
        swift_beginAccess();
        uint64_t v15 = *(void *)(v14 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 184);
        swift_unknownObjectRetain();
        LODWORD(v14) = v17(ObjectType, v15);
        swift_unknownObjectRelease();
        MultiwayViewController.localVideoProvider.getter();
        uint64_t v18 = v25;
        uint64_t v19 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        if (v14 == 1) {
          (*(void (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19);
        }
        else {
          (*(void (**)(uint64_t, uint64_t))(v19 + 56))(v18, v19);
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        uint64_t v20 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
        if (v20)
        {
          id v21 = *(void (**)(unint64_t, unint64_t))((*MEMORY[0x1E4FBC8C8] & *v20) + 0xB8);
          unsigned __int8 v22 = v20;
          v21(0xD000000000000016, 0x80000001C37B6F00);
        }
      }
    }
  }
}

void MultiwayViewController.updateScreenSharingBlurIfNeeded()()
{
  uint64_t v0 = (void *)MultiwayViewController.call.getter();
  unsigned int v1 = objc_msgSend(v0, sel_isSharingScreen);

  if (v1)
  {
    id v2 = (void *)MultiwayViewController.call.getter();
    id v3 = objc_msgSend(v2, sel_isSharingScreen);

    MultiwayViewController.updateScreenSharingSnapshotView(_:)(v3);
  }
}

Swift::Void __swiftcall MultiwayViewController.showCallDetailsIfNecessary()()
{
  if (MultiwayViewController.conversationControlsManager.getter())
  {
    OUTLINED_FUNCTION_19_6();
    id v9 = v2;
    char v3 = (*(uint64_t (**)(void))(v1 + 808))();
    id v4 = v9;
    if (v3)
    {
      if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator))
      {
        OUTLINED_FUNCTION_217_1();
        uint64_t v6 = *(void (**)(unint64_t))(v5 + 176);
        id v8 = v7;
        OUTLINED_FUNCTION_47();
        v6(0xD00000000000003DLL);

        id v4 = v8;
      }
      else
      {
        id v4 = v9;
      }
    }
  }
}

void (*MultiwayViewController.isOnScreen.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = MultiwayViewController.isOnScreen.getter() & 1;
  return MultiwayViewController.isOnScreen.modify;
}

void MultiwayViewController.isOnScreen.modify()
{
}

uint64_t MultiwayViewController.$isOnScreen.getter()
{
  return swift_endAccess();
}

uint64_t key path setter for MultiwayViewController.$isOnScreen : MultiwayViewController(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return MultiwayViewController.$isOnScreen.setter();
}

uint64_t MultiwayViewController.$isOnScreen.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_2_1();
  v1();
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_1_19();
  return v2();
}

void (*MultiwayViewController.$isOnScreen.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = malloc(0x40uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v0[4] = v2;
  OUTLINED_FUNCTION_1(v2);
  v0[5] = v3;
  size_t v5 = *(void *)(v4 + 64);
  v0[6] = malloc(v5);
  v0[7] = malloc(v5);
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MultiwayViewController.$isOnScreen.modify;
}

void MultiwayViewController.$isOnScreen.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_2_1();
    v5();
    MultiwayViewController.$isOnScreen.setter();
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_50_1();
    v6();
  }
  else
  {
    MultiwayViewController.$isOnScreen.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t MultiwayViewController.isOnScreenPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher);
  uint64_t v1 = Publisher.eraseToAnyPublisher()();
  OUTLINED_FUNCTION_1_19();
  v2();
  return v1;
}

uint64_t MultiwayViewController.isVisibleForStartingCamera.getter()
{
  if ((MultiwayViewController.isOnScreen.getter() & 1) != 0
    && (uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner),
        swift_beginAccess(),
        (*v1 & 1) == 0))
  {
    char v2 = ConversationController.isCarPlayConnected.getter() ^ 1;
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter()
{
  uint64_t v0 = qword_1EA354568;
  if (!qword_1EA354568) {
    return 0;
  }
  uint64_t v1 = static MultiwayViewController._stoppedSendingVideoDueToOffscreen;
  uint64_t v2 = byte_1EA354570 & 1;
  uint64_t v3 = (void *)MultiwayViewController.call.getter();
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v3, sel_uniqueProxyIdentifier);

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  if (v5 == v1 && v0 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v2;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0) {
    return 0;
  }
  return v2;
}

uint64_t MultiwayViewController.stoppedSendingVideoDueToOffscreen.setter(char a1)
{
  uint64_t v2 = (void *)MultiwayViewController.call.getter();
  id v3 = objc_msgSend(v2, sel_uniqueProxyIdentifier);

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  static MultiwayViewController._stoppedSendingVideoDueToOffscreen = v4;
  qword_1EA354568 = v6;
  byte_1EA354570 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t MultiwayViewController.hasParticipantVideo.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewController.hasParticipantVideo : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void *MultiwayViewController.hasParticipantVideo.didset(char a1)
{
  int v2 = a1 & 1;
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo);
  uint64_t result = (void *)swift_beginAccess();
  if (*v3 != v2)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C3769620;
    LOBYTE(v10) = *v3;
    uint64_t v6 = String.init<A>(reflecting:)();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v9 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
    swift_beginAccess();
    uint64_t result = (void *)MEMORY[0x1C8776240](v9);
    if (result)
    {
      objc_msgSend(result, sel_updateBackgroundStartPipAuthorizationState, v10);
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t MultiwayViewController.isDisplayedInBanner.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isDisplayedInBanner.setter(char a1)
{
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner, (uint64_t (*)(uint64_t))MultiwayViewController.isDisplayedInBanner.didset);
}

uint64_t key path getter for MultiwayViewController.isDisplayedInBanner : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isDisplayedInBanner.didset(char a1)
{
  int v2 = v1;
  int v3 = a1 & 1;
  uint64_t v4 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner];
  swift_beginAccess();
  if (*v4 == v3) {
    return;
  }
  uint64_t v5 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v5, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v24) == 1) {
    return;
  }
  uint64_t v6 = *(void **)(v5 + 48);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  unsigned __int8 v11 = v6;
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v12)
  {
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
  v22[8] = *v4;
  uint64_t v14 = String.init<A>(reflecting:)();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v2, sel_view);
  if (v17)
  {
    uint64_t v18 = v17;
    if (*v4 == 1)
    {
      id v19 = objc_msgSend(self, sel_clearColor);
    }
    else
    {
      if (one-time initialization token for background != -1) {
        swift_once();
      }
      id v19 = (id)static Colors.MultiwayViewController.background;
    }
    uint64_t v20 = v19;
    objc_msgSend(v18, sel_setBackgroundColor_, v19);

    MultiwayViewController.updateViewConstraints()();
    id v21 = &v11[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
    swift_beginAccess();
    MultiwayViewController.updateViewVisibility(localParticipantState:)(*v21);
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.updateViewVisibility(localParticipantState:)(char a1)
{
  LOBYTE(v2) = a1;
  uint64_t v62 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v62);
  uint64_t v64 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v61 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Participant(0);
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v63 = (uint64_t)&v58 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v58 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v59 = (uint64_t)&v58 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v19 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v19, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v71, (uint64_t)v72, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType((uint64_t *)v72) == 1) {
    return;
  }
  uint64_t v20 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner;
  swift_beginAccess();
  double v21 = 0.0;
  if ((*(unsigned char *)v20 & 1) == 0)
  {
    unsigned __int8 v22 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
    swift_beginAccess();
    if (*v22) {
      double v21 = 0.0;
    }
    else {
      double v21 = 1.0;
    }
  }
  outlined init with take of CATransform3D?((uint64_t)v71, (uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v70);
  if (one-time initialization token for conversationKit != -1) {
LABEL_44:
  }
    swift_once();
  id v58 = v9;
  uint64_t v60 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C3769620;
  *(double *)uint64_t v69 = v21;
  uint64_t v24 = String.init<A>(reflecting:)();
  uint64_t v26 = v25;
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v23 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v23 + 32) = v24;
  *(void *)(v23 + 40) = v26;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  objc_msgSend(v72[7], sel_setAlpha_, v21);
  objc_msgSend(v72[14], sel_setAlpha_, v21);
  id v27 = objc_msgSend(v72[2], sel_view);
  if (!v27)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v28 = v27;
  objc_msgSend(v27, sel_setAlpha_, v21);

  char v29 = *(unsigned char *)v20;
  BOOL v30 = v2 > 0x80u;
  id v31 = objc_msgSend(v72[1], sel_view);
  if (!v31)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    return;
  }
  id v32 = v31;
  char v33 = v29 | v30;
  double v34 = 1.0;
  double v21 = 0.0;
  if (v33) {
    double v34 = 0.0;
  }
  objc_msgSend(v31, sel_setAlpha_, v34);

  id v35 = objc_msgSend(v72[0], sel_view);
  if (!v35) {
    goto LABEL_47;
  }
  uint64_t v36 = v35;
  uint64_t v37 = v60;
  if ((v33 & 1) == 0)
  {
    if (ConversationController.isOneToOneModeEnabled.getter()) {
      double v21 = 0.0;
    }
    else {
      double v21 = 1.0;
    }
  }
  objc_msgSend(v36, sel_setAlpha_, v21);

  uint64_t active = MultiwayViewController.mostActiveParticipants.getter();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v68 = MEMORY[0x1E4FBC860];
  uint64_t v65 = *(void *)(active + 16);
  if (v65)
  {
    unint64_t v2 = 0;
    uint64_t v9 = (char *)v62;
    while (1)
    {
      if (v2 >= *(void *)(active + 16))
      {
        __break(1u);
        goto LABEL_44;
      }
      unint64_t v39 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      uint64_t v20 = *(void *)(v66 + 72);
      uint64_t v1 = (uint64_t)type metadata accessor for Participant;
      _s15ConversationKit11ParticipantVWOcTm_18(active + v39 + v20 * v2, (uint64_t)v18);
      uint64_t v40 = *(void *)&v18[*(int *)(v67 + 28)];
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v18, (uint64_t)v14);
      if (!v40) {
        goto LABEL_28;
      }
      uint64_t v41 = v64;
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v14, v64);
      if (swift_getEnumCaseMultiPayload() != 4) {
        break;
      }
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v43 = (const void *)(v41 + *(int *)(v42 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v41 + *(int *)(v42 + 64)), *(void *)(v41 + *(int *)(v42 + 64) + 8));
      memcpy(v69, v43, sizeof(v69));
      uint64_t v44 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v41, v44);
      uint64_t v1 = LOBYTE(v69[0]);
      outlined destroy of Participant.MediaInfo((uint64_t)v69);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
      if ((v1 & 1) == 0)
      {
        outlined init with take of Participant((uint64_t)v18, v63);
        uint64_t v1 = v68;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v1 + 16) + 1, 1);
          uint64_t v1 = v68;
        }
        unint64_t v46 = *(void *)(v1 + 16);
        unint64_t v45 = *(void *)(v1 + 24);
        if (v46 >= v45 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
          uint64_t v1 = v68;
        }
        *(void *)(v1 + 16) = v46 + 1;
        outlined init with take of Participant(v63, v1 + v39 + v46 * v20);
        uint64_t v9 = (char *)v62;
        goto LABEL_30;
      }
LABEL_29:
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
LABEL_30:
      if (v65 == ++v2)
      {
        uint64_t v1 = v68;
        uint64_t v37 = v60;
        goto LABEL_32;
      }
    }
    _s15ConversationKit11ParticipantVWOhTm_12(v41, (void (*)(void))type metadata accessor for Participant.State);
LABEL_28:
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_29;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t v47 = v61;
  specialized Collection.first.getter(v1, v61);
  swift_release();
  if (__swift_getEnumTagSinglePayload(v47, 1, v67) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v47, &demangling cache variable for type metadata for Participant?);
    uint64_t v48 = *(void *)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
        + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    uint64_t v49 = v48;
    uint64_t v50 = (uint64_t)v58;
    _s15ConversationKit11ParticipantVWOcTm_18(v49, (uint64_t)v58);
  }
  else
  {
    uint64_t v51 = v47;
    uint64_t v50 = v59;
    outlined init with take of Participant(v51, v59);
  }
  MostActiveParticipantViewController.focus(on:)();
  _s15ConversationKit11ParticipantVWOhTm_12(v50, (void (*)(void))type metadata accessor for Participant);
  uint64_t v52 = *(void *)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
      + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  swift_beginAccess();
  if (*(void *)(*(void *)v52 + 16) >= 2uLL) {
    MostActiveParticipantViewController.toggleRingButtonIfNecessary(isPipped:)(1);
  }
  unint64_t v53 = (void *)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  if ((*v53 == 1
     || (uint64_t v54 = (unsigned char *)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen),
         swift_beginAccess(),
         (*v54 & 1) == 0))
    && (uint64_t v55 = *(void **)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator)) != 0)
  {
    uint64_t v56 = *(void (**)(unint64_t, unint64_t))((*MEMORY[0x1E4FBC8C8] & *v55) + 0xB8);
    uint64_t v57 = v55;
    v56(0xD000000000000018, 0x80000001C37B7490);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v71);
  }
  else
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v71);
  }
}

void (*MultiwayViewController.isDisplayedInBanner.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewController.isDisplayedInBanner.modify;
}

void MultiwayViewController.isDisplayedInBanner.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t MultiwayViewController.isInVideoMessageFlow.getter()
{
  OUTLINED_FUNCTION_43_24();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 408);
  id v3 = v2;
  LOBYTE(v1) = v1();

  return v1 & 1;
}

uint64_t key path getter for MultiwayViewController.deskViewTapHandler : MultiwayViewController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  id v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.deskViewTapHandler : MultiwayViewController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.deskViewTapHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
  return OUTLINED_FUNCTION_23_0();
}

uint64_t MultiwayViewController.deskViewTapHandler.setter(uint64_t a1, uint64_t a2)
{
  return MultiwayViewController.deskViewTapHandler.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
}

uint64_t (*MultiwayViewController.deskViewTapHandler.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.mostRecentFullScreenFocusedAspectRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t MultiwayViewController.mostRecentFullScreenFocusedAspectRatio.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio;
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(unsigned char *)(v7 + 16) = a3 & 1;
  return result;
}

uint64_t (*MultiwayViewController.mostRecentFullScreenFocusedAspectRatio.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.mostRecentGridIsFullScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.mostRecentGridIsFullScreen.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.mostRecentGridIsFullScreen.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

BOOL MultiwayViewController.localParticipantIsFullScreen.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_45_18(v2, (uint64_t)v12);
  OUTLINED_FUNCTION_76_9(v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_6_112(v13);
  if (v9) {
    return 0;
  }
  uint64_t v10 = (unsigned __int8 *)(*(void *)(v1 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_2();
  return *v10 > 0x80u;
}

uint64_t key path getter for MultiwayViewController.windowAspectRatioHandler : MultiwayViewController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.windowAspectRatioHandler : MultiwayViewController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.windowAspectRatioHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

uint64_t MultiwayViewController.windowAspectRatioHandler.setter(uint64_t a1, uint64_t a2)
{
  return MultiwayViewController.deskViewTapHandler.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
}

uint64_t (*MultiwayViewController.windowAspectRatioHandler.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for MultiwayViewController.captionsLayoutChangeHandler : MultiwayViewController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.captionsLayoutChangeHandler : MultiwayViewController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.captionsLayoutChangeHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

uint64_t MultiwayViewController.captionsLayoutChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  return MultiwayViewController.deskViewTapHandler.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler);
}

uint64_t (*MultiwayViewController.captionsLayoutChangeHandler.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for MultiwayViewController.unansweredCallDismissalHandler : MultiwayViewController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.unansweredCallDismissalHandler : MultiwayViewController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.unansweredCallDismissalHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

uint64_t MultiwayViewController.unansweredCallDismissalHandler.setter(uint64_t a1, uint64_t a2)
{
  return MultiwayViewController.deskViewTapHandler.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
}

uint64_t MultiwayViewController.deskViewTapHandler.setter(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (uint64_t *)(v3 + *a3);
  OUTLINED_FUNCTION_1_21();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  v6[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
}

uint64_t (*MultiwayViewController.unansweredCallDismissalHandler.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

BOOL MultiwayViewController.isShowingHUD.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_197_1(v2, (uint64_t)v13);
  outlined init with take of CATransform3D?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v14);
  if (v3) {
    return 0;
  }
  uint64_t v4 = *(char **)(v1 + 48);
  uint64_t v5 = &v4[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState];
  OUTLINED_FUNCTION_2();
  if (!*v5) {
    return 0;
  }
  uint64_t v6 = v4;
  ConversationController.lookupActiveConversation()();
  if (v12)
  {
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v7 = OUTLINED_FUNCTION_48_1();
    uint64_t v9 = v8(v7);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return v9 != 0;
  }
  else
  {

    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Conversation?);
    return 1;
  }
}

uint64_t MultiwayViewController.isFullScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isFullScreen.setter(char a1)
{
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen, (uint64_t (*)(uint64_t))MultiwayViewController.isFullScreen.didset);
}

uint64_t key path getter for MultiwayViewController.isFullScreen : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isFullScreen.didset(char a1)
{
  uint64_t v2 = v1;
  int v3 = a1 & 1;
  uint64_t v4 = (char *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  swift_beginAccess();
  if (*v4 != v3)
  {
    uint64_t v5 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v5, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v20) != 1)
    {
      uint64_t v6 = *(void **)(v5 + 48);
      uint64_t v7 = type metadata accessor for DispatchPredicate();
      uint64_t v8 = *(void *)(v7 - 8);
      MEMORY[0x1F4188790](v7);
      uint64_t v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      uint64_t v11 = v6;
      *uint64_t v10 = static OS_dispatch_queue.main.getter();
      (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
      char v12 = _dispatchPreconditionTest(_:)();
      (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
      if (v12)
      {
        if (one-time initialization token for conversationKit == -1)
        {
LABEL_5:
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
          v18[8] = *v4;
          uint64_t v14 = String.init<A>(reflecting:)();
          uint64_t v16 = v15;
          *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v13 + 32) = v14;
          *(void *)(v13 + 40) = v16;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
          uint64_t v17 = &v11[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
          swift_beginAccess();
          MultiwayViewController.updateViewVisibility(localParticipantState:)(*v17);
          specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(*v4);
          MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()();

          return;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
      goto LABEL_5;
    }
  }
}

void MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()()
{
  uint64_t v1 = v0;
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0
                                                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features))
                             + 0xD0))() & 1) != 0)
  {
    uint64_t v2 = (void *)MultiwayViewController.call.getter();
    unsigned int v3 = objc_msgSend(v2, sel_isConnected);

    if (v3)
    {
      uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
      swift_beginAccess();
      if (*v4 == 1)
      {
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        uint64_t v5 = static NameAndPhotoUtilities.shared + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
        swift_beginAccess();
        *(void *)(v5 + 8) = &protocol witness table for MultiwayViewController;
        swift_unknownObjectWeakAssign();
        swift_unknownObjectWeakInit();
        specialized MultiwayViewController.getSuggestedBannerType(completion:)(v1, (uint64_t)v6);
        swift_unknownObjectWeakDestroy();
      }
      else
      {
        MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
      }
    }
    else
    {
      MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(0);
    }
  }
}

void (*MultiwayViewController.isFullScreen.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewController.isFullScreen.modify;
}

void MultiwayViewController.isFullScreen.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t MultiwayViewController.isAmbient.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isAmbient.setter(char a1)
{
  unsigned int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *unsigned int v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.isAmbient.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id MultiwayViewController.isShownAboveCoverSheet.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (!v2) {
    return 0;
  }
  id v3 = objc_msgSend(v2, sel_isShownAboveCoverSheet);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t MultiwayViewController.isPipStashed.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isPipStashed.setter(char a1)
{
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed, (uint64_t (*)(uint64_t))MultiwayViewController.isPipStashed.didset);
}

uint64_t MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(char a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (unsigned char *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t key path getter for MultiwayViewController.isPipStashed : MultiwayViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isPipStashed.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  swift_beginAccess();
  if (*v3 != v2) {
    MultiwayViewController.updateCanPostReactionNotice()();
  }
}

void MultiwayViewController.updateCanPostReactionNotice()()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C37696D0;
  MultiwayViewController.isPipped.getter();
  uint64_t v2 = String.init<A>(reflecting:)();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v1 + 64) = v6;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  uint64_t v7 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  swift_beginAccess();
  uint64_t v8 = String.init<A>(reflecting:)();
  *(void *)(v1 + 96) = v5;
  *(void *)(v1 + 104) = v6;
  *(void *)(v1 + 72) = v8;
  *(void *)(v1 + 80) = v9;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = MultiwayViewController.conversationControlsManager.getter();
  uint64_t v11 = (void *)MEMORY[0x1E4FBC8C8];
  if (v10)
  {
    char v12 = v10;
    BOOL v13 = MultiwayViewController.isPipped.getter();
    (*(void (**)(BOOL))((*v11 & *v12) + 0x390))(v13);
  }
  uint64_t v14 = MultiwayViewController.conversationControlsManager.getter();
  if (v14)
  {
    uint64_t v15 = v14;
    if (*v7) {
      uint64_t v16 = 1;
    }
    else {
      uint64_t v16 = 2;
    }
    (*(void (**)(uint64_t))((*v11 & *v15) + 0x378))(v16);
  }
}

void (*MultiwayViewController.isPipStashed.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewController.isPipStashed.modify;
}

void MultiwayViewController.isPipStashed.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t MultiwayViewController.pipState.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t MultiwayViewController.pipState.setter(uint64_t a1)
{
  return MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState, (uint64_t (*)(uint64_t))MultiwayViewController.pipState.didset);
}

uint64_t MultiwayViewController.deviceOrientation.setter(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t v6 = (uint64_t *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *unint64_t v6 = a1;
  return a3(v7);
}

uint64_t key path getter for MultiwayViewController.pipState : MultiwayViewController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.pipState.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  if (*v4 == a1) {
    return;
  }
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (one-time initialization token for conversationKit != -1) {
LABEL_21:
  }
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C37696D0;
  uint64_t v23 = *v4;
  type metadata accessor for CNKPiPState(0);
  uint64_t v11 = String.init<A>(reflecting:)();
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v15 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v10 + 64) = v15;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  LOBYTE(v23) = MultiwayViewController.isPipped.getter();
  uint64_t v16 = String.init<A>(reflecting:)();
  *(void *)(v10 + 96) = v14;
  *(void *)(v10 + 104) = v15;
  *(void *)(v10 + 72) = v16;
  *(void *)(v10 + 80) = v17;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (*v4 == 1)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v18 = (*(uint64_t (**)(void))(*(void *)static ConversationHUDMenuController.shared + 88))();
    if (v18)
    {
      (*(void (**)(unint64_t, unint64_t))(*(void *)v18 + 528))(0xD000000000000016, 0x80000001C37B74E0);
      swift_release();
    }
  }
  MultiwayViewController.updateTileVisibilityForPiPState()();
  switch(*v4)
  {
    case 0:
    case 2:
      if (!MultiwayViewController.shouldPauseForRingingCall.getter()) {
        MultiwayViewController.setForegroundOrPiPRemoteVideoPresentationState()();
      }
      break;
    case 1:
    case 3:
      MultiwayViewController.updateViewsForPiPStateChange()();
      specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(*v4 != 1);
      break;
    default:
      if (one-time initialization token for default != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      __swift_project_value_buffer(v19, (uint64_t)static Log.default);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v20, v21))
      {
        unsigned __int8 v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned __int8 v22 = 0;
        _os_log_impl(&dword_1C2F90000, v20, v21, "Unknown enum case", v22, 2u);
        MEMORY[0x1C87760E0](v22, -1, -1);
      }

      break;
  }
  MultiwayViewController.showCallDetailsIfNecessary()();
  MultiwayViewController.updateCanPostReactionNotice()();
}

void MultiwayViewController.updateTileVisibilityForPiPState()()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  double v2 = 0.0;
  uint64_t v3 = 0;
  double v4 = 1.0;
  int v5 = 1;
  switch(*v1)
  {
    case 0:
    case 2:
      goto LABEL_13;
    case 1:
      goto LABEL_12;
    case 3:
      if (ConversationController.isOneToOneModeEnabled.getter())
      {
        double v2 = 0.0;
      }
      else
      {
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        double v2 = (*(double (**)(void))(*(void *)static Defaults.shared + 384))();
      }
LABEL_12:
      int v5 = 0;
      double v4 = 0.0;
      uint64_t v3 = *(void *)&v2;
LABEL_13:
      MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(v3, v5, v4);
      break;
    default:
      if (one-time initialization token for default != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)static Log.default);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v7, v8))
      {
        char v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v9 = 0;
        _os_log_impl(&dword_1C2F90000, v7, v8, "Unknown enum case", v9, 2u);
        MEMORY[0x1C87760E0](v9, -1, -1);
      }

      break;
  }
}

Swift::Void __swiftcall MultiwayViewController.updateViewsForPiPStateChange()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = type metadata accessor for ParticipantViewModel(0);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_62();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_55_0();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v57 - v11;
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v75, (uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v76);
  if (!v17)
  {
    uint64_t v60 = v15;
    uint64_t v18 = (void *)v16[6];
    LOWORD(v74[0]) = 513;
    uint64_t v19 = v18;
    uint64_t v62 = v0;
    uint64_t v20 = v19;
    MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)v74);
    id v61 = v20;
    os_log_type_t v21 = &v20[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
    uint64_t v22 = v62;
    OUTLINED_FUNCTION_2();
    MultiwayViewController.updateViewVisibility(localParticipantState:)(*v21);
    outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v73, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v73, (uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    OUTLINED_FUNCTION_6_112(v74);
    if (!v17)
    {
      uint64_t v59 = v1;
      uint64_t v23 = (char *)v16[12];
      uint64_t v24 = (uint64_t)&v23[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant];
      OUTLINED_FUNCTION_2();
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v24, v2, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_33_0(v2, 1, v8);
      if (v17)
      {
        outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v25 = v22;
        outlined init with take of Participant(v2, (uint64_t)v60);
        uint64_t v26 = (uint64_t *)(v22 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
        OUTLINED_FUNCTION_2();
        BOOL v27 = (unint64_t)(*v26 - 1) < 2;
        uint64_t v28 = (BOOL *)&v23[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP];
        OUTLINED_FUNCTION_1_21();
        BOOL *v28 = v27;
        uint64_t v58 = *(void *)(v25 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
        uint64_t v29 = v58 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
        OUTLINED_FUNCTION_2();
        _s15ConversationKit11ParticipantVWOcTm_18(v29, (uint64_t)v12);
        BOOL v30 = v23;
        char v31 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
        LOWORD(v55) = 257;
        LOBYTE(v54) = 1;
        ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v12, 2, 0, 0, 0, 0, 0, v31 & 1, v54, 0, v55, v56, v57, v58, v59, (uint64_t)v60, (uint64_t)v61, v62, v63,
          v64,
          v65,
          v66,
          v67,
          v68);
        uint64_t v32 = *v26;
        _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v60, v3);
        if (v32 == 1)
        {
          uint64_t v33 = *(void *)(v3 + *(int *)(v8 + 28));
          _s15ConversationKit11ParticipantVWOhTm_12(v3, (void (*)(void))type metadata accessor for Participant);
          double v34 = v30;
          if (!v33)
          {
            id v35 = MostActiveParticipantViewController.localParticipantView.getter();
            ParticipantView.registerVideoLayers(with:)(v59);

            uint64_t v36 = v58 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
            OUTLINED_FUNCTION_2();
            if (*(char *)(v36 + 16) < 0)
            {
              char v37 = *(unsigned char *)(v36 + 1);
              uint64_t v38 = MostActiveParticipantViewController.localParticipantView.getter();
              unint64_t v39 = (uint64_t *)(v62 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
              OUTLINED_FUNCTION_2();
              ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(v37, *v39, 1, 0);
            }
          }
        }
        else
        {
          _s15ConversationKit11ParticipantVWOhTm_12(v3, (void (*)(void))type metadata accessor for Participant);
          double v34 = v30;
        }
        if (*v26 == 3)
        {
          uint64_t v40 = (unsigned char *)(v62 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
          OUTLINED_FUNCTION_2();
          if (*v40)
          {
            if (one-time initialization token for conversationKit != -1) {
              swift_once();
            }
            uint64_t v41 = type metadata accessor for Logger();
            uint64_t v42 = OUTLINED_FUNCTION_30(v41, (uint64_t)static Logger.conversationKit);
            os_log_type_t v43 = static os_log_type_t.default.getter();
            if (OUTLINED_FUNCTION_107(v43))
            {
              uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_8_0();
              *(_WORD *)uint64_t v44 = 0;
              _os_log_impl(&dword_1C2F90000, v42, (os_log_type_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState, "Not registering fullScreenMultiwayViewController local layers as splitViewMultiwayViewController is active", v44, 2u);
              OUTLINED_FUNCTION_3();
            }
          }
          else
          {
            outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
            outlined init with take of CATransform3D?((uint64_t)v71, (uint64_t)v72, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
            if (getEnumTag for TapInteraction.EventType(v72) != 1)
            {
              id v45 = *(id *)(v16[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
              ParticipantView.registerVideoLayers(with:)(v59);
            }
            unint64_t v46 = (unint64_t *)(v58 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
            OUTLINED_FUNCTION_2();
            if ((char)v46[2] < 0)
            {
              unint64_t v47 = *v46;
              swift_beginAccess();
              outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v69, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
              outlined init with take of CATransform3D?((uint64_t)v69, (uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
              OUTLINED_FUNCTION_6_112(v70);
              if (v17)
              {
                _s15ConversationKit11ParticipantVWOhTm_12(v59, (void (*)(void))type metadata accessor for ParticipantViewModel);
                _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v60, (void (*)(void))type metadata accessor for Participant);
                swift_endAccess();
              }
              else
              {
                unint64_t v48 = v47 >> 8;
                uint64_t v49 = v16[7];
                swift_endAccess();
                uint64_t v50 = *(void **)(v49 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
                uint64_t v51 = (uint64_t *)(v62 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
                OUTLINED_FUNCTION_2();
                uint64_t v52 = *v51;
                id v53 = v50;
                ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(v48, v52, 1, 0);

                _s15ConversationKit11ParticipantVWOhTm_12(v59, (void (*)(void))type metadata accessor for ParticipantViewModel);
                _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v60, (void (*)(void))type metadata accessor for Participant);
              }
              goto LABEL_22;
            }
          }
        }

        _s15ConversationKit11ParticipantVWOhTm_12(v59, (void (*)(void))type metadata accessor for ParticipantViewModel);
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v60, (void (*)(void))type metadata accessor for Participant);
      }
    }
LABEL_22:
    MultiwayViewController.updateScreenSharingBlurIfNeeded()();
  }
  OUTLINED_FUNCTION_28();
}

BOOL MultiwayViewController.shouldPauseForRingingCall.getter()
{
  return (ConversationController.isOneToOneModeEnabled.getter() & 1) == 0
      && ConversationController.hasRingingCalls.getter();
}

void MultiwayViewController.setForegroundOrPiPRemoteVideoPresentationState()()
{
  if (MultiwayViewController.isPipped.getter())
  {
    id v0 = (id)MultiwayViewController.call.getter();
    objc_msgSend(v0, sel_setRemoteVideoPresentationState_, 1);
  }
  else
  {
    if ((MultiwayViewController.isOnScreen.getter() & 1) == 0) {
      return;
    }
    id v0 = (id)MultiwayViewController.call.getter();
    objc_msgSend(v0, sel_setRemoteVideoPresentationState_, 0);
  }
}

void (*MultiwayViewController.pipState.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_37_0();
  void *v0 = v2;
  void v2[4] = v1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  OUTLINED_FUNCTION_2();
  void v2[3] = *v3;
  return MultiwayViewController.pipState.modify;
}

void MultiwayViewController.pipState.modify(uint64_t a1, uint64_t a2)
{
}

void MultiwayViewController.deviceOrientation.modify(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void **)a1;
  a3(*(void *)(*(void *)a1 + 24));
  free(v3);
}

uint64_t MultiwayViewController.isCaptioningEnabled.setter(Swift::Bool a1)
{
  swift_retain();
  CaptioningStateManager.setCaptioningEnabled(_:)(a1);
  return swift_release();
}

uint64_t (*MultiwayViewController.isCaptioningEnabled.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = MultiwayViewController.isCaptioningEnabled.getter() & 1;
  return MultiwayViewController.isCaptioningEnabled.modify;
}

uint64_t MultiwayViewController.isCaptioningEnabled.modify(uint64_t a1)
{
  return MultiwayViewController.isCaptioningEnabled.setter(*(unsigned char *)(a1 + 8));
}

void *MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  int v3 = *a1;
  int v4 = a1[1];
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (void *)((char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v11 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v11, (uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v41, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v42);
    if (result != 1)
    {
      memcpy(v40, v42, sizeof(v40));
      outlined init with take of CATransform3D?((uint64_t)v41, (uint64_t)v39, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      unint64_t v38 = MEMORY[0x1E4FBC860];
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v39);
      MultiwayViewController.mostActiveParticipants.getter();
      uint64_t v12 = (void *)MultiwayViewController.activeRemoteParticipants(in:)();
      swift_bridgeObjectRelease();
      uint64_t v13 = v3 | (v4 << 8);
      id v14 = (id)v42[1];
      specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v14, v12, &v38, v13);

      id v15 = (id)v42[12];
      specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((uint64_t)v15, (uint64_t)v12, &v38, v13, (uint64_t)type metadata accessor for MostActiveParticipantViewController, (uint64_t)&protocol witness table for MostActiveParticipantViewController, (void (*)(uint64_t, id *))MostActiveParticipantViewController.update(with:updateReason:));

      MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(2, ConversationKit_ParticipantGridView_AnimationStyle_fast);
      uint64_t v16 = (void *)v42[0];
      swift_beginAccess();
      id v17 = v16;
      swift_bridgeObjectRetain();
      Array<A>.participants(notIn:)();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((uint64_t)v17, v19, &v38, v13, (uint64_t)type metadata accessor for ParticipantListViewController, (uint64_t)&protocol witness table for ParticipantListViewController, (void (*)(uint64_t, id *))ParticipantListViewController.update(with:updateReason:));
      swift_bridgeObjectRelease();

      char v20 = ParticipantListViewController.participantCount.getter() > 0;
      MultiwayViewController.setParticipantListState(_:animated:)(v20, 1);
      os_log_type_t v21 = (void *)v42[4];
      if (v42[4])
      {
        uint64_t v22 = v42[5];
        uint64_t ObjectType = swift_getObjectType();
        id v24 = v21;
        uint64_t v25 = ParticipantListViewController.participantCount.getter();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 72))(v25, ObjectType, v22);
      }
      uint64_t v26 = (uint64_t *)(*(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      swift_beginAccess();
      uint64_t v27 = *v26;
      swift_beginAccess();
      v35[0] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      uint64_t v28 = v35[0];
      uint64_t v29 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v31 = v29 + 32;
        do
        {
          outlined init with copy of IDSLookupManager(v31, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v33 = v37;
          double v34 = __swift_project_boxed_opaque_existential_1(v35, v36);
          specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((uint64_t)v34, v28, &v38, v13, v32, v33);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
          v31 += 40;
          --v30;
        }
        while (v30);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      MultiwayViewController.updatePresentationSize()();
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v41);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.effectsViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48[0]);
  OUTLINED_FUNCTION_47_20(v48);
  if (!v14) {
    id v15 = *(id *)(v1 + 64);
  }
  return OUTLINED_FUNCTION_90_5();
}

void key path setter for MultiwayViewController.effectsViewController : MultiwayViewController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  MultiwayViewController.effectsViewController.setter(v1);
}

void MultiwayViewController.effectsViewController.setter(id a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v4 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_31_39(v4, (uint64_t)v7);
  outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v8);
  if (!v5)
  {
    uint64_t v6 = *(void **)(v3 + 64);
    *(void *)(v3 + 64) = a1;
    a1 = a1;
  }
  swift_endAccess();
}

void (*MultiwayViewController.effectsViewController.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MultiwayViewController.effectsViewController.getter();
  return MultiwayViewController.effectsViewController.modify;
}

void MultiwayViewController.effectsViewController.modify(void **a1, char a2)
{
}

uint64_t MultiwayViewController.effectsBrowserViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51[0]);
  OUTLINED_FUNCTION_47_20(v51);
  if (!v14 && *(void *)(v1 + 72))
  {
    OUTLINED_FUNCTION_43_24();
    uint64_t v16 = *(void (**)(void))(v15 + 144);
    id v18 = v17;
    v16();
  }
  return OUTLINED_FUNCTION_90_5();
}

void key path setter for MultiwayViewController.effectsBrowserViewController : MultiwayViewController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  MultiwayViewController.effectsBrowserViewController.setter(v1);
}

void MultiwayViewController.effectsBrowserViewController.setter(void *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  uint64_t v4 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_31_39(v4, (uint64_t)v16);
  outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v17);
  if (!v5)
  {
    uint64_t v6 = (void *)v3[10];
    v3[10] = a1;
    id v7 = a1;
  }
  uint64_t v8 = swift_endAccess();
  OUTLINED_FUNCTION_31_39(v8, (uint64_t)v14);
  outlined init with take of CATransform3D?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v15);
  if (!v5 && v3[9])
  {
    OUTLINED_FUNCTION_43_24();
    uint64_t v10 = *(void (**)(uint64_t))(v9 + 152);
    id v12 = v11;
    uint64_t v13 = OUTLINED_FUNCTION_205_2();
    v10(v13);
    a1 = v3;
  }
}

void (*MultiwayViewController.effectsBrowserViewController.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MultiwayViewController.effectsBrowserViewController.getter();
  return MultiwayViewController.effectsBrowserViewController.modify;
}

void MultiwayViewController.effectsBrowserViewController.modify(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    MultiwayViewController.effectsBrowserViewController.setter(v2);
  }
  else
  {
    MultiwayViewController.effectsBrowserViewController.setter(*a1);
  }
}

uint64_t MultiwayViewController.effectsControlsViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49[0]);
  OUTLINED_FUNCTION_47_20(v49);
  if (!v14)
  {
    uint64_t v15 = *(void **)(v1 + 72);
    if (v15) {
      id v16 = v15;
    }
  }
  return OUTLINED_FUNCTION_90_5();
}

void *MultiwayViewController.captionsViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    uint64_t v2 = *(void **)(v1 + 136);
    id v3 = v2;
  }
  return v2;
}

uint64_t MultiwayViewController.inCallControlsViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48[0]);
  OUTLINED_FUNCTION_47_20(v48);
  if (!v14) {
    id v15 = *(id *)(v1 + 16);
  }
  return OUTLINED_FUNCTION_90_5();
}

uint64_t MultiwayViewController.delegate.getter()
{
  return BannerPresentationManager.presentationDelegate.getter(&OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate);
}

uint64_t MultiwayViewController.delegate.setter()
{
  return MultiwayViewController.delegate.setter();
}

{
  OUTLINED_FUNCTION_1_21();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*MultiwayViewController.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  void v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  OUTLINED_FUNCTION_6_1();
  _OWORD v3[3] = MEMORY[0x1C8776240](v5);
  return SystemBannerHostViewController.delegate.modify;
}

uint64_t MultiwayViewController.iOSDelegate.getter()
{
  return BannerPresentationManager.presentationDelegate.getter(&OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate);
}

uint64_t MultiwayViewController.iOSDelegate.setter()
{
  return MultiwayViewController.delegate.setter();
}

uint64_t key path getter for MultiwayViewController.delegate : MultiwayViewController@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v4);
  *a3 = result;
  return result;
}

uint64_t key path setter for MultiwayViewController.delegate : MultiwayViewController()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t (*MultiwayViewController.iOSDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  void v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  OUTLINED_FUNCTION_6_1();
  _OWORD v3[3] = MEMORY[0x1C8776240](v5);
  return SystemBannerHostViewController.delegate.modify;
}

uint64_t MultiwayViewController.effectsEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.effectsEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.effectsEnabled.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

double MultiwayViewController.preferredPIPContentAspectRatio.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_60();
  uint64_t v6 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v6, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v24, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v25);
  if (v8)
  {
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
LABEL_6:
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v6 + 8)
     + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  OUTLINED_FUNCTION_2();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v7, v1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v1, 1, v4);
  if (v8) {
    goto LABEL_6;
  }
  uint64_t v11 = OUTLINED_FUNCTION_189_2();
  outlined init with take of Participant(v11, v12);
  Participant.videoInfo.getter();
  outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v19, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v19[0])
  {
    memcpy(v20, v19, 0x4AuLL);
    outlined release of LinearGradient((uint64_t)v16);
    outlined init with take of AspectRatio((uint64_t)&v20[40], (uint64_t)v21);
    outlined init with take of AspectRatio((uint64_t)v21, (uint64_t)v22);
    if (v23)
    {
      _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
      return 100.0;
    }
    double v14 = *(double *)v22;
    double v10 = *(double *)&v22[2];
    Participant.videoInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v18, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v18[0])
    {
      uint64_t v15 = v18[3];
      outlined release of LinearGradient((uint64_t)v17);
      if (v15 == 1)
      {
        return v14;
      }
      else if (v15 == 3)
      {
        return v14;
      }
    }
    return v10;
  }
  _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
LABEL_7:
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0) {
    return 100.0;
  }
  MultiwayViewController.pipContentAspectRatioForOneToOneLocalPreview.getter();
  return v9;
}

void MultiwayViewController.pipContentAspectRatioForOneToOneLocalPreview.getter()
{
  uint64_t v1 = v0;
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    id v2 = objc_msgSend(v0, sel_view);
    if (v2)
    {
      uint64_t v3 = v2;
      objc_msgSend(v2, sel_frame);
      double v5 = v4;

      id v6 = objc_msgSend(v1, sel_view);
      if (v6)
      {
        uint64_t v7 = v6;
        objc_msgSend(v6, sel_frame);
        double v9 = v8;

        double v10 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation];
        swift_beginAccess();
        BOOL IsPortrait = UIInterfaceOrientationIsPortrait(*v10);
        id v12 = objc_msgSend(v1, sel_view);
        uint64_t v13 = v12;
        if (v9 >= v5 == IsPortrait)
        {
          if (v12)
          {
            objc_msgSend(v12, sel_frame);

            id v14 = objc_msgSend(v1, sel_view);
            if (v14)
            {
              uint64_t v15 = v14;
              objc_msgSend(v14, sel_frame);

              return;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          return;
        }
        if (v12)
        {
          objc_msgSend(v12, sel_frame);

          return;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

void MultiwayViewController.fullScreenFocusedParticipantOrientation.getter()
{
  OUTLINED_FUNCTION_212_2();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_0();
  uint64_t v6 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_249_1(v6, (uint64_t)v15);
  outlined init with take of CATransform3D?((uint64_t)v15, (uint64_t)&v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(&v16);
  if (!v7)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v8 = OUTLINED_FUNCTION_200_1();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v8, v9, v10);
    OUTLINED_FUNCTION_33_0(v1, 1, v4);
    if (v7)
    {
      outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      uint64_t v11 = OUTLINED_FUNCTION_43();
      outlined init with take of Participant(v11, v12);
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of CATransform3D?((uint64_t)v13, (uint64_t)v14, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v14[0]) {
        outlined release of LinearGradient((uint64_t)v13);
      }
    }
  }
  OUTLINED_FUNCTION_215_0();
}

uint64_t MultiwayViewController.shouldShowLastFrameUI.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  return *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff);
}

BOOL MultiwayViewController.shouldDisconnectOnDismissal.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_197_1(v0, (uint64_t)v6);
  OUTLINED_FUNCTION_225_0((uint64_t)v6);
  OUTLINED_FUNCTION_6_112(v7);
  if (v1) {
    return 0;
  }
  outlined init with take of CATransform3D?((uint64_t)v6, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v5);
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v6);
    return 0;
  }
  uint64_t v2 = (unsigned __int8 *)(v7[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode);
  OUTLINED_FUNCTION_2();
  unsigned int v3 = *v2;
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v6);
  switch(v3 >> 5)
  {
    case 1u:
      if ((v3 & 1) == 0) {
        return 0;
      }
      goto LABEL_11;
    case 2u:
      return (v3 & 1) == 0;
    case 3u:
      if (v3 != 96) {
        return 0;
      }
LABEL_11:
      BOOL result = 1;
      break;
    default:
      return 0;
  }
  return result;
}

void *MultiwayViewController.effectsBrowserIsOpaque.getter()
{
  BOOL result = (void *)MultiwayViewController.effectsBrowserViewController.getter();
  if (result)
  {
    char v1 = result;
    id v2 = objc_msgSend(result, sel_viewIfLoaded);

    if (v2)
    {
      objc_msgSend(v2, sel_alpha);
      double v4 = v3;

      return (void *)(v4 > 0.5);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t MultiwayViewController.needsUpdatePresentationContexts.didset(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (void *)((char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts) == 1
      && (a1 & 1) == 0)
    {
      uint64_t v21 = static OS_dispatch_queue.main.getter();
      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = partial apply for closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset;
      aBlock[5] = v9;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_314;
      double v10 = _Block_copy(aBlock);
      swift_release();
      uint64_t v11 = type metadata accessor for DispatchQoS();
      void v20[2] = v20;
      uint64_t v12 = *(void *)(v11 - 8);
      MEMORY[0x1F4188790](v11);
      id v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      static DispatchQoS.unspecified.getter();
      uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
      v20[1] = v20;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      aBlock[0] = MEMORY[0x1E4FBC860];
      _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v19 = (void *)v21;
      MEMORY[0x1C8773BA0](0, v14, v18, v10);
      _Block_release(v10);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    MultiwayViewController.needsUpdatePresentationContexts.setter(0);
    MultiwayViewController.updateAllParticipantPresentationContexts(forceUpdate:)(0);
    uint64_t v4 = &v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
    swift_beginAccess();
    uint64_t v5 = (void *)MEMORY[0x1C8776240](v4);
    if (v5)
    {
      uint64_t v6 = v5;
      if (objc_msgSend(v5, sel_respondsToSelector_, sel_participantsDidChangeLocationIn_)) {
        objc_msgSend(v6, sel_participantsDidChangeLocationIn_, v3);
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t MultiwayViewController.needsUpdatePresentationContexts.setter(char a1)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts) = a1;
  return MultiwayViewController.needsUpdatePresentationContexts.didset(v2);
}

uint64_t MultiwayViewController.updateAllParticipantPresentationContexts(forceUpdate:)(Swift::Bool a1)
{
  swift_beginAccess();
  id v3 = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = specialized Sequence.compactMap<A>(_:)(v4, v3);
  swift_bridgeObjectRelease();
  ConversationController.update(presentationContexts:forceUpdate:)((Swift::OpaquePointer)v5, a1);
  return swift_bridgeObjectRelease();
}

id MultiwayViewController.flashView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView;
  char v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView);
  }
  else
  {
    uint64_t v4 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews);
    OUTLINED_FUNCTION_11_0();
    *uint64_t v4 = 1;
    type metadata accessor for FlashView();
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    char v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void key path setter for MultiwayViewController.flashView : MultiwayViewController(id *a1)
{
}

void MultiwayViewController.flashView.setter(uint64_t a1)
{
  char v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView) = a1;
}

void (*MultiwayViewController.flashView.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MultiwayViewController.flashView.getter();
  return MultiwayViewController.flashView.modify;
}

void MultiwayViewController.flashView.modify(void **a1, char a2)
{
  char v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    MultiwayViewController.flashView.setter((uint64_t)v3);
  }
  else
  {
    MultiwayViewController.flashView.setter((uint64_t)v2);
  }
}

id MultiwayViewController.insulatingView.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView];
  id v4 = v3;
  if (v3 != (void *)1) {
    goto LABEL_5;
  }
  id v5 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews];
  OUTLINED_FUNCTION_1_21();
  *id v5 = 1;
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    OUTLINED_FUNCTION_18_2();
    id v7 = objc_allocWithZone((Class)type metadata accessor for MomentsIndicatorView());
    double v8 = OUTLINED_FUNCTION_41();
    uint64_t v11 = objc_msgSend(v9, v10, v8);
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x68))(1);
    id result = objc_msgSend(v1, sel_view);
    if (result)
    {
      objc_msgSend(result, sel_bounds);
      OUTLINED_FUNCTION_222_1();
      id v12 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InsulatingView<MomentsIndicatorView>));
      double v13 = OUTLINED_FUNCTION_41();
      id v4 = specialized InsulatingView.init(frame:content:forwardHits:)(v11, 0, v13, v14, v15, v16);
      uint64_t v17 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v4;
      id v18 = v4;
      outlined consume of UIView??(v17);
LABEL_5:
      outlined copy of UIView??(v3);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void key path setter for MultiwayViewController.insulatingView : MultiwayViewController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  MultiwayViewController.insulatingView.setter((uint64_t)v1);
}

void MultiwayViewController.insulatingView.setter(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView) = a1;
  outlined consume of UIView??(v2);
}

void (*MultiwayViewController.insulatingView.modify(uint64_t a1))(void **a1, char a2)
{
  OUTLINED_FUNCTION_3_7(a1);
  *uint64_t v1 = MultiwayViewController.insulatingView.getter();
  return MultiwayViewController.insulatingView.modify;
}

void MultiwayViewController.insulatingView.modify(void **a1, char a2)
{
}

void MultiwayViewController.effectsViewController.modify(void **a1, char a2, void (*a3)(void *))
{
  id v4 = *a1;
  if (a2)
  {
    id v5 = v4;
    a3(v4);
  }
  else
  {
    a3(*a1);
  }
}

uint64_t MultiwayViewController.hasInitializedMomentsViews.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.hasInitializedMomentsViews.setter(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *id v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.hasInitializedMomentsViews.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.localLivePhotoAlertView.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49[0]);
  OUTLINED_FUNCTION_47_20(v49);
  if (!v14)
  {
    double v15 = *(void **)(v1 + 128);
    if (v15) {
      id v16 = v15;
    }
  }
  return OUTLINED_FUNCTION_90_5();
}

uint64_t MultiwayViewController.cachedMediaPipSafeAreaFrame.didset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    id v16 = (double *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame);
    v20.origin.CGFloat x = a1;
    v20.origin.CGFloat y = a2;
    v20.size.CGFloat width = a3;
    v20.size.CGFloat height = a4;
    uint64_t result = CGRectEqualToRect(*(CGRect *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame), v20);
    if ((result & 1) == 0)
    {
      uint64_t v17 = v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      uint64_t result = MEMORY[0x1C8776240](v17);
      if (result)
      {
        uint64_t v18 = (void *)result;
        if (objc_msgSend((id)result, sel_respondsToSelector_, sel_viewController_mediaPipSafeAreaFrameChanged_))objc_msgSend(v18, sel_viewController_mediaPipSafeAreaFrameChanged_, v5, *v16, v16[1], v16[2], v16[3]); {
        return swift_unknownObjectRelease();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.cachedMediaPipSafeAreaFrame.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = (double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame);
  CGFloat v6 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame);
  CGFloat v7 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame + 8);
  CGFloat v8 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame + 16);
  CGFloat v9 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame + 24);
  *uint64_t v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  long long v5[3] = a4;
  return MultiwayViewController.cachedMediaPipSafeAreaFrame.didset(v6, v7, v8, v9);
}

double MultiwayViewController.mediaPipFrameInWindowScene.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene;
  OUTLINED_FUNCTION_2();
  return *(double *)v1;
}

uint64_t MultiwayViewController.mediaPipFrameInWindowScene.setter()
{
  OUTLINED_FUNCTION_7();
  uint64_t v5 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene);
  OUTLINED_FUNCTION_11_0();
  CGFloat v6 = *v5;
  CGFloat v7 = v5[1];
  CGFloat v8 = v5[2];
  CGFloat v9 = v5[3];
  *(void *)uint64_t v5 = v4;
  *((void *)v5 + 1) = v3;
  *((void *)v5 + 2) = v2;
  *((void *)v5 + 3) = v1;
  return MultiwayViewController.mediaPipFrameInWindowScene.didset(v6, v7, v8, v9);
}

__n128 key path getter for MultiwayViewController.mediaPipFrameInWindowScene : MultiwayViewController@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene;
  swift_beginAccess();
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for MultiwayViewController.mediaPipFrameInWindowScene : MultiwayViewController()
{
  return MultiwayViewController.mediaPipFrameInWindowScene.setter();
}

uint64_t MultiwayViewController.mediaPipFrameInWindowScene.didset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    id v16 = (CGRect *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene);
    swift_beginAccess();
    v20.origin.CGFloat x = a1;
    v20.origin.CGFloat y = a2;
    v20.size.CGFloat width = a3;
    v20.size.CGFloat height = a4;
    uint64_t result = CGRectEqualToRect(*v16, v20);
    if ((result & 1) == 0)
    {
      MultiwayViewController.updateMediaPipInfo()();
      if (CGRectIsEmpty(*v16))
      {
        IsEmptCGFloat y = 1;
      }
      else
      {
        v19.origin.CGFloat x = a1;
        v19.origin.CGFloat y = a2;
        v19.size.CGFloat width = a3;
        v19.size.CGFloat height = a4;
        IsEmptCGFloat y = CGRectIsEmpty(v19);
      }
      return (uint64_t)MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(IsEmpty);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.updateMediaPipInfo()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    MultiwayViewController.mediaPipFrame.getter();
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    id v16 = objc_msgSend(v1, sel_viewIfLoaded);
    if (v16)
    {
      uint64_t v17 = v16;
      v23.origin.CGFloat x = v9;
      v23.origin.CGFloat y = v11;
      v23.size.CGFloat width = v13;
      v23.size.CGFloat height = v15;
      if (!CGRectIsEmpty(v23))
      {
        uint64_t v18 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations];
        swift_beginAccess();
        if (*(void *)v18 == 2
          && (CGRect v19 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation],
              swift_beginAccess(),
              LODWORD(v19) = (*(void *)v19 & 0xFFFFFFFFFFFFFFFDLL) == 1,
              objc_msgSend(v17, sel_bounds),
              v19 == v20 >= v21))
        {
          v28.origin.CGFloat x = v9;
          v28.origin.CGFloat y = v11;
          v28.size.CGFloat width = v13;
          v28.size.CGFloat height = v15;
          CGRectGetHeight(v28);
          v29.origin.CGFloat x = v9;
          v29.origin.CGFloat y = v11;
          v29.size.CGFloat width = v13;
          v29.size.CGFloat height = v15;
          CGRectGetWidth(v29);
          swift_beginAccess();
        }
        else
        {
          swift_beginAccess();
          MultiwayViewController.mediaPipInfo.setter();
          v24.origin.CGFloat x = v9;
          v24.origin.CGFloat y = v11;
          v24.size.CGFloat width = v13;
          v24.size.CGFloat height = v15;
          CGRectGetMidX(v24);
          v25.origin.CGFloat x = MultiwayViewController.mediaPipSafeAreaFrame.getter();
          CGRectGetMidX(v25);
          v26.origin.CGFloat x = v9;
          v26.origin.CGFloat y = v11;
          v26.size.CGFloat width = v13;
          v26.size.CGFloat height = v15;
          CGRectGetMidY(v26);
          v27.origin.CGFloat x = MultiwayViewController.mediaPipSafeAreaFrame.getter();
          CGRectGetMidY(v27);
        }
        MultiwayViewController.mediaPipInfo.setter();

        return MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(0);
      }
    }
    swift_beginAccess();
    MultiwayViewController.mediaPipInfo.setter();
    return MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(0);
  }
  __break(1u);
  return result;
}

void *MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  CGFloat v7 = (uint64_t *)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v10 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v10, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v17);
    if (result != 1)
    {
      CGFloat v11 = (unsigned char *)(v17[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      uint64_t result = (void *)swift_beginAccess();
      if ((*v11 & 0xFE) != 0x80)
      {
        outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v15);
        if (a1)
        {
          MultiwayViewController.mostActiveParticipants.getter();
          CGFloat v13 = (void *)MultiwayViewController.activeRemoteParticipants(in:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          CGFloat v13 = 0;
        }
        v12.value._rawValue = v13;
        ParticipantGridViewController.dodgeMediaPip(with:)(v12);
        swift_bridgeObjectRelease();
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*MultiwayViewController.mediaPipFrameInWindowScene.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  uint64_t v4 = (_OWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene);
  OUTLINED_FUNCTION_2();
  long long v5 = v4[1];
  *(_OWORD *)uint64_t v3 = *v4;
  *((_OWORD *)v3 + 1) = v5;
  return MultiwayViewController.mediaPipFrameInWindowScene.modify;
}

void MultiwayViewController.mediaPipFrameInWindowScene.modify(void **a1)
{
  uint64_t v1 = *a1;
  MultiwayViewController.mediaPipFrameInWindowScene.setter();
  free(v1);
}

uint64_t MultiwayViewController.isScreenSharingFullScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewController.isScreenSharingFullScreen.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen);
  uint64_t result = OUTLINED_FUNCTION_1_21();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewController.isScreenSharingFullScreen.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t MultiwayViewController.mediaPipInfo.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo);
  OUTLINED_FUNCTION_2();
  return *v1;
}

__n128 key path getter for MultiwayViewController.mediaPipInfo : MultiwayViewController@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
  swift_beginAccess();
  *(unsigned char *)a2 = *(unsigned char *)v3;
  __n128 result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void key path setter for MultiwayViewController.mediaPipInfo : MultiwayViewController()
{
}

void MultiwayViewController.mediaPipInfo.setter()
{
  OUTLINED_FUNCTION_19_0();
  char v4 = v3;
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
  OUTLINED_FUNCTION_11_0();
  double v6 = *(double *)(v5 + 8);
  double v7 = *(double *)(v5 + 16);
  char v8 = *(unsigned char *)v5;
  *(unsigned char *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = v2;
  *(void *)(v5 + 16) = v1;
  MultiwayViewController.mediaPipInfo.didset(v8, v6, v7);
}

void MultiwayViewController.mediaPipInfo.didset(char a1, double a2, double a3)
{
  char v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  CGFloat v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *CGFloat v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    CGFloat v13 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
    swift_beginAccess();
    if (!static ParticipantGridView.MediaPipInfo.== infix(_:_:)(*v13, a1, *((double *)v13 + 1), *((double *)v13 + 2), a2, a3))
    {
      id v14 = objc_msgSend(v4, sel_viewIfLoaded);
      objc_msgSend(v14, sel_setNeedsLayout);
    }
  }
  else
  {
    __break(1u);
  }
}

char *MultiwayViewController.__allocating_init(activeCall:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for BannerPresentationManager());
  OUTLINED_FUNCTION_89();
  char v3 = BannerPresentationManager.init(delegate:)();
  return MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)(a1, v3);
}

char *MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)(void *a1, void *a2)
{
  char v3 = v2;
  double v6 = self;
  id v7 = a1;
  id v8 = objc_msgSend(v6, sel_sharedInstance);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)static PlaceholderCallCenter.shared;
  id v10 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
  CGFloat v11 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v8, v9, 1, 1);
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)v28, (uint64_t)v30);
  v28[1] = 0;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v28, (uint64_t)v29);
  id v12 = objc_msgSend(self, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  CGFloat v13 = (void *)swift_allocObject();
  uint64_t v28[3] = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v28[4] = &protocol witness table for TUIDSLookupManager;
  v28[0] = v12;
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  OUTLINED_FUNCTION_48_3();
  v13[2] = Dictionary.init(dictionaryLiteral:)();
  v13[3] = Dictionary.init(dictionaryLiteral:)();
  v13[5] = 0;
  swift_unknownObjectWeakInit();
  v13[6] = v14;
  outlined init with copy of IDSLookupManager((uint64_t)v28, (uint64_t)(v13 + 7));
  id v15 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v15, sel_addObserver_selector_name_object_, v13, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v28[0]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v16 = static Defaults.shared;
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v30, (uint64_t)v27);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v29, (uint64_t)v28);
  swift_retain();
  uint64_t v17 = v11;
  specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)((uint64_t)v7, (uint64_t)v17, (uint64_t)v27, (uint64_t)v28, 0, (uint64_t)v31, 1, (uint64_t)v13, v16);
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v29);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v30);

  uint64_t v18 = static Defaults.shared;
  uint64_t v19 = one-time initialization token for shared;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  double v20 = static Features.shared;
  double v21 = objc_allocWithZone(v3);
  id v22 = v20;
  CGRect v23 = (void *)OUTLINED_FUNCTION_189_2();
  return specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v23, v24, a2, v18, v25, v21);
}

char *MultiwayViewController.__allocating_init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_1_113();
  objc_allocWithZone(v0);
  swift_getObjectType();
  OUTLINED_FUNCTION_86_10();
  OUTLINED_FUNCTION_15_0();
  return specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

char *MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_1_113();
  swift_getObjectType();
  OUTLINED_FUNCTION_86_10();
  OUTLINED_FUNCTION_15_0();
  return specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *MultiwayViewController.conversationControllerDidAddParticipant(_:)(uint64_t a1)
{
  MultiwayViewController.scheduleUpdate(for:)(a1);
  uint64_t v1 = MultiwayViewController.captionsViewController.getter();
  if (v1)
  {
    id v2 = v1;
    ConversationController.conversationDisplayName.getter();
    CaptionsViewController.callName.setter();
  }
  __int16 v4 = 514;
  return MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v4);
}

void closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      CGFloat v11 = (void *)v10;
      HIWORD(v12) = 514;
      MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)(a1, (unsigned __int8 *)&v12 + 6);
    }
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v85 = (uint64_t)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v87 = (uint64_t)v83 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v89 = (uint64_t)v83 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)v83 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v83 - v16;
  uint64_t v90 = type metadata accessor for Participant(0);
  uint64_t v96 = *(void *)(v90 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v86 = (uint64_t)v83 - v21;
  MEMORY[0x1F4188790](v20);
  CGRect v23 = (char *)v83 - v22;
  LODWORD(v91) = *a2;
  LODWORD(v92) = a2[1];
  uint64_t v24 = type metadata accessor for DispatchPredicate();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  CGRect v27 = (void *)((char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *CGRect v27 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x1E4FBCBE8], v24);
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  __n128 result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v25 + 8))(v27, v24);
  if ((a2 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v29 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v29, (uint64_t)v108, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v108, (uint64_t)v109, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  __n128 result = (void *)getEnumTag for TapInteraction.EventType(v109);
  if (result != 1)
  {
    uint64_t v30 = v3;
    memcpy(v107, v109, sizeof(v107));
    uint64_t v31 = v90;
    uint64_t v84 = *(int *)(v90 + 28);
    if (*(void *)(a1 + v84))
    {
      uint64_t v95 = 0;
      unsigned int v94 = 0;
      uint64_t v93 = 0x7FFFFFCFELL;
    }
    else
    {
      uint64_t v32 = *(void *)(v30 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
          + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
      swift_beginAccess();
      uint64_t v93 = *(void *)v32;
      uint64_t v95 = *(void *)(v32 + 8);
      unsigned int v94 = *(unsigned __int8 *)(v32 + 16);
    }
    outlined init with take of CATransform3D?((uint64_t)v108, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v102);
    if ((Participant.isActive.getter() & 1) == 0) {
      specialized MostActiveParticipantsController.markParticipantAsOffline(_:)();
    }
    uint64_t v33 = v109[12];
    uint64_t v34 = v109[12] + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v34, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v31) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v17, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined init with take of Participant((uint64_t)v17, (uint64_t)v23);
      Participant.videoInfo.getter();
      outlined init with take of CATransform3D?((uint64_t)v103, (uint64_t)v106, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v106[0])
      {
        uint64_t v35 = v31;
        uint64_t v36 = v30;
        uint64_t v37 = v106[3];
        outlined release of LinearGradient((uint64_t)v103);
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v34, (uint64_t)v15, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v35) == 1)
        {
          outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          Participant.videoInfo.getter();
          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
          outlined init with take of CATransform3D?((uint64_t)v104, (uint64_t)v105, &demangling cache variable for type metadata for Participant.VideoInfo?);
          if (v105[0])
          {
            uint64_t v38 = v105[3];
            outlined release of LinearGradient((uint64_t)v104);
            uint64_t v39 = v33;
            if ((static UUID.== infix(_:_:)() & 1) != 0 && v37 != v38)
            {
              uint64_t v30 = v36;
              if (MultiwayViewController.isPipped.getter())
              {
                char v81 = ConversationController.isOneToOneModeEnabled.getter();
                _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
                char v40 = (char)v91;
                char v41 = v92;
                uint64_t v42 = v84;
                if (v81)
                {
                  uint64_t v82 = (unsigned char *)(v39
                                + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates);
                  swift_beginAccess();
                  unsigned char *v82 = 1;
                }
                goto LABEL_22;
              }
              _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
            }
            else
            {
              _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
              uint64_t v30 = v36;
            }
            char v40 = (char)v91;
            char v41 = v92;
LABEL_21:
            uint64_t v42 = v84;
LABEL_22:
            if (*(void *)(a1 + v42)) {
              MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(2, ConversationKit_ParticipantGridView_AnimationStyle_fast);
            }
            MultiwayViewController.mostActiveParticipants.getter();
            uint64_t v43 = (void *)MultiwayViewController.activeRemoteParticipants(in:)();
            swift_bridgeObjectRelease();
            uint64_t v44 = v109[1];
            LOBYTE(v99[0]) = v40;
            BYTE1(v99[0]) = v41;
            v45._rawValue = v43;
            ParticipantGridViewController.update(with:updateReason:)(v45, (char *)v99);
            v46._rawValue = v43;
            MostActiveParticipantViewController.update(with:updateReason:)(v46);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            Array<A>.participants(notIn:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            ParticipantListViewController.update(with:updateReason:)();
            swift_bridgeObjectRelease();
            char v47 = ParticipantListViewController.participantCount.getter() > 0;
            uint64_t v48 = v30;
            MultiwayViewController.setParticipantListState(_:animated:)(v47, 1);
            uint64_t v49 = (void *)v109[4];
            if (v109[4])
            {
              uint64_t v50 = v109[5];
              uint64_t ObjectType = swift_getObjectType();
              id v52 = v49;
              uint64_t v53 = ParticipantListViewController.participantCount.getter();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 72))(v53, ObjectType, v50);
            }
            uint64_t v54 = v44 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
            swift_beginAccess();
            outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v54, v89, &demangling cache variable for type metadata for Participant?);
            uint64_t v55 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
            uint64_t v56 = *(void *)(v55 + 16);
            if (v56)
            {
              v83[1] = v55;
              uint64_t v84 = v54;
              uint64_t v57 = v55 + 32;
              uint64_t v91 = (void *)(v48 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
              swift_beginAccess();
              long long v92 = xmmword_1C3769620;
              do
              {
                outlined init with copy of IDSLookupManager(v57, (uint64_t)v99);
                uint64_t v59 = v100;
                uint64_t v58 = v101;
                __swift_project_boxed_opaque_existential_1(v99, v100);
                (*(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v58 + 48))(a1, v93, v95, v94, v59, v58);
                outlined init with copy of IDSLookupManager((uint64_t)v99, (uint64_t)&v98);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
                type metadata accessor for MostActiveParticipantViewController();
                if (!swift_dynamicCast()
                  || (v97, !MultiwayViewController.isPipped.getter()))
                {
                  uint64_t v60 = v100;
                  uint64_t v61 = v101;
                  __swift_project_boxed_opaque_existential_1(v99, v100);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(a1, *v91, v60, v61);
                }
                uint64_t v62 = v100;
                uint64_t v63 = v101;
                __swift_project_boxed_opaque_existential_1(v99, v100);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
                unint64_t v64 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
                uint64_t v65 = swift_allocObject();
                *(_OWORD *)(v65 + 16) = v92;
                _s15ConversationKit11ParticipantVWOcTm_18(a1, v65 + v64);
                char v66 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 96))(v65, v66 & 1, v62, v63);
                swift_bridgeObjectRelease();
                uint64_t v67 = v100;
                uint64_t v68 = v101;
                __swift_project_boxed_opaque_existential_1(v99, v100);
                Participant.isKickingAvailable.getter();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 64))(a1, v69 & 1, v67, v68);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
                v57 += 40;
                --v56;
              }
              while (v56);
              swift_bridgeObjectRelease();
              uint64_t v54 = v84;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v70 = v87;
            outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v54, v87, &demangling cache variable for type metadata for Participant?);
            uint64_t v71 = v90;
            int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v70, 1, v90);
            uint64_t v73 = (uint64_t)v88;
            if (EnumTagSinglePayload == 1)
            {
              outlined destroy of SystemUpdateNotice?(v70, &demangling cache variable for type metadata for Participant?);
            }
            else
            {
              uint64_t v74 = v86;
              outlined init with take of Participant(v70, v86);
              if (static UUID.== infix(_:_:)())
              {
                uint64_t v75 = v85;
                _s15ConversationKit11ParticipantVWOcTm_18(a1, v85);
                __swift_storeEnumTagSinglePayload(v75, 0, 1, v71);
                MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(v89, v75);
                outlined destroy of SystemUpdateNotice?(v75, &demangling cache variable for type metadata for Participant?);
              }
              _s15ConversationKit11ParticipantVWOhTm_12(v74, (void (*)(void))type metadata accessor for Participant);
            }
            MultiwayViewController.updateLocalParticipantState()();
            int v76 = *(unsigned __int8 *)(a1 + *(int *)(v71 + 24));
            _s15ConversationKit11ParticipantVWOcTm_18(a1, v73);
            if (v76 == 1) {
              char v77 = Participant.hasReducedQualityVideo.getter() ^ 1;
            }
            else {
              char v77 = 0;
            }
            uint64_t v78 = a1 + *(int *)(v90 + 20);
            _s15ConversationKit11ParticipantVWOhTm_12(v73, (void (*)(void))type metadata accessor for Participant);
            MultiwayViewController.updateOneToOneShutterButtonTapability(for:isMomentsAvailable:)(v78, v77 & 1);
            MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
            MultiwayViewController.updateHasParticipantVideo()();
            MultiwayViewController.scheduleUpdate(for:)(a1);
            specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(2);
            uint64_t v79 = MultiwayViewController.captionsViewController.getter();
            if (v79)
            {
              uint64_t v80 = v79;
              ConversationController.conversationDisplayName.getter();
              CaptionsViewController.callName.setter();

              _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v108);
              return (void *)outlined destroy of SystemUpdateNotice?(v89, &demangling cache variable for type metadata for Participant?);
            }
            else
            {
              outlined destroy of SystemUpdateNotice?(v89, &demangling cache variable for type metadata for Participant?);
              return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v108);
            }
          }
        }
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
        uint64_t v30 = v36;
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
      }
    }
    char v40 = (char)v91;
    char v41 = v92;
    goto LABEL_21;
  }
  return result;
}

void closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_64();
  char v6 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v0 = static OS_dispatch_queue.main.getter();
  uint64_t v7 = OUTLINED_FUNCTION_19_3();
  v8(v7);
  _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_21_2();
  v10(v9);
  if (v6)
  {
    OUTLINED_FUNCTION_2();
    if (MEMORY[0x1C8776240](v4 + 16))
    {
      uint64_t v11 = OUTLINED_FUNCTION_375();
      v2(v11);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerDidRemoveRemoteParticipant(_:)()
{
  uint64_t v0 = MultiwayViewController.captionsViewController.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    ConversationController.conversationDisplayName.getter();
    CaptionsViewController.callName.setter();
  }
  __int16 v3 = 513;
  return MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v3);
}

void closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    if (*(void *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28)))
    {
      swift_beginAccess();
      uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        HIWORD(v12) = 513;
        MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)(a1, (unsigned __int8 *)&v12 + 6);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCBE8], v15);
  char v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    return;
  }
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x1C8776240](a5 + 16);
  if (v20)
  {
    uint64_t v21 = (char *)v20;
    uint64_t v22 = v20 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v22, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v43, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v44) == 1)
    {

      return;
    }
    uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
    id v24 = *(id *)(v22 + 56);
    if (ConversationController.supportsCameraBlur.getter()) {
      MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
    }
    LocalParticipantView.supportsCameraBlur.setter();
    MultiwayViewController.updateCameraFlipButtonAvailability()();
    ConversationController.supportsReactionGestures.getter();
    LocalParticipantView.supportsReactionGestures.setter();
    ConversationController.supportsStudioLight.getter();
    LocalParticipantView.supportsStudioLight.setter();
    uint64_t v25 = v23 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_18(v25, (uint64_t)v11);
    char v26 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
    LOWORD(v34) = 257;
    LOBYTE(v33) = 1;
    ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v11, 2, 0, 0, 0, 0, 0, v26 & 1, v33, 0, v34, v35, v36[0], v36[1], v36[2], v36[3], v37[0], v37[1], v37[2],
      v37[3],
      v38,
      v39,
      v40,
      v41);
    if (MultiwayViewController.isPipped.getter())
    {
      outlined init with take of CATransform3D?(v22, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v37, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v42) != 1)
      {
        CGRect v27 = *(void **)(v22 + 96);
        uint64_t v28 = (uint64_t)v27 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
        swift_beginAccess();
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v28, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
        {
          id v29 = v27;
          outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          uint64_t v30 = *(void *)&v8[*(int *)(v9 + 28)];
          id v31 = v27;
          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
          if (v30)
          {
          }
          else
          {
            uint64_t v32 = MostActiveParticipantViewController.localParticipantView.getter();
            ParticipantView.registerVideoLayers(with:)((uint64_t)v14);
          }
        }
        goto LABEL_13;
      }
    }
    else
    {
      ParticipantView.registerVideoLayers(with:)((uint64_t)v14);
    }

LABEL_13:
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v14, (void (*)(void))type metadata accessor for ParticipantViewModel);
  }
}

void MultiwayViewController.updateCameraFlipButtonAvailability()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 624))(ObjectType, v2))
  {
    uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v4, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v9) != 1)
    {
      uint64_t v5 = *(void **)(v4 + 56);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
         + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera;
      swift_beginAccess();
      LOBYTE(v6) = *(unsigned char *)v6;
      id v7 = v5;
      LocalParticipantView.cameraFlipButtonIsAvailable.setter((v6 & 1) == 0);
    }
  }
}

void closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)&v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x1C8776240](a2 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)v15;
      if ((a1 & 1) == 0)
      {
        uint64_t v17 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController;
        id v18 = *(id *)(v15 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
        char v19 = ConversationController.isOneToOneModeEnabled.getter();

        if (v19)
        {
          uint64_t v20 = *(void *)&v16[v17] + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
          swift_beginAccess();
          if (*(void *)(*(void *)v20 + 16) == 1)
          {
            ConversationController.remoteOneToOneParticipant.getter();
            if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) != 1)
            {
              outlined init with take of Participant((uint64_t)v6, (uint64_t)v9);
              v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = Participant.isReceivingVideoFrames.getter() & 1;
              __int16 v22 = 513;
              MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)((uint64_t)v9, (unsigned __int8 *)&v22);

              _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
              return;
            }
            outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
          }
        }
        MultiwayViewController.updateLocalParticipantState()();
        MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)&v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (char *)v10;
      MultiwayViewController.updateLocalParticipantState()();
      uint64_t v12 = &v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
      swift_beginAccess();
      uint64_t v13 = (void *)MEMORY[0x1C8776240](v12);
      if (v13)
      {
        char v14 = v13;
        if (objc_msgSend(v13, sel_respondsToSelector_, sel_updateCallParticipantLabelsViewForViewController_))objc_msgSend(v14, sel_updateCallParticipantLabelsViewForViewController_, v11); {
        swift_unknownObjectRelease();
        }
      }
      MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()();
      uint64_t ObjectType = swift_getObjectType();
      int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2);
      MultiwayViewController.testing_callStatusDidChange(_:)(v16);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x1C8776240](a5 + 16);
    if (v15)
    {
      int v16 = (void *)v15;
      MultiwayViewController.conversationControllerDidUpdateLocalParticipant(_:broadcastingState:)(a1, a2, a3, a4);
    }
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerDidUpdateLocalParticipant(_:broadcastingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  __n128 result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v16 = v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v16, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v29, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    __n128 result = (void *)getEnumTag for TapInteraction.EventType(v30);
    if (result != 1)
    {
      memcpy(v28, v30, sizeof(v28));
      if ((a2 & 1) == 0) {
        *(unsigned char *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller) = 0;
      }
      outlined init with take of CATransform3D?((uint64_t)v29, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v27);
      MultiwayViewController.updateMutedTalkerUI(mutedTalker:)(a2 & 1);
      uint64_t v17 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        v23[1] = v17;
        void v23[2] = v5;
        uint64_t v19 = v17 + 32;
        do
        {
          outlined init with copy of IDSLookupManager(v19, (uint64_t)v24);
          uint64_t v21 = v25;
          uint64_t v20 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 48))(a1, a2, a3, a4, v21, v20);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
          v19 += 40;
          --v18;
        }
        while (v18);
      }
      swift_bridgeObjectRelease();
      char v22 = Participant.isActiveWithVideo.getter();
      specialized EffectsHandler.updateEffectsViews(localVideoEnabled:)(v22 & 1);
      MultiwayViewController.updateFloatingLocalParticpantView()();
      MultiwayViewController.updateLocalParticipantAspectRatio()();
      MultiwayViewController.updateHasParticipantVideo()();
      MultiwayViewController.updateLocalParticipantState()();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v29);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)(v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C8776240](a2 + 16);
    if (v9)
    {
      uint64_t v10 = (char *)v9;
      uint64_t v11 = v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v11, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v18) != 1)
      {
        uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
        id v13 = v12;
        char v14 = ConversationController.isOneToOneModeEnabled.getter();

        if (v14)
        {
          uint64_t v15 = (uint64_t *)&v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation];
          swift_beginAccess();
          ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, *v15, 1, 1);
        }
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C8776240](a2 + 16);
    if (v12)
    {
      id v13 = (void *)v12;
      uint64_t v14 = v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v14, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v20) != 1)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 312);
        outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v18);
        if (v16(ObjectType, a4)) {
          LocalParticipantView.configureWithRecordingLocalVideo(_:)(a1 & 1);
        }
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.conversationControllerDidUpdateLocalParticipantScreenSharing(_:)(void *a1)
{
  char v1 = (char)a1;
  MultiwayViewController.updateScreenSharingSnapshotView(_:)(a1);
  specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)((v1 & 1) == 0);
  MultiwayViewController.updateVideoState()();
}

uint64_t closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = a3 + 16;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1C8776240](v10);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    *(_WORD *)CGRect v27 = 514;
    MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v27);
  }
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C8776240](v10);
  if (!v13)
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
  }
  uint64_t v14 = (void *)v13;
  id v15 = *(id *)(v13 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

  ConversationController.lookupActiveConversation()();
  if (!*((void *)&v25 + 1)) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
  }
  outlined init with take of Notice(&v24, (uint64_t)v27);
  uint64_t v16 = v28;
  uint64_t v17 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v16, v17);
  uint64_t v19 = specialized Set.count.getter(v18);
  swift_bridgeObjectRelease();
  if (v19 != 1)
  {
    swift_beginAccess();
    uint64_t v20 = MEMORY[0x1C8776240](v10);
    if (v20)
    {
      uint64_t v21 = (void *)v20;
      char v22 = *(id *)(v20 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v22) + 0xE0))();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

void closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)&v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = a2 + 16;
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C8776240](v12);
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    id v15 = *(id *)(v13 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    LOBYTE(v14) = ConversationController.shouldPlayToneForAVModeChange(for:)(a1);
    if ((v14 & 1) == 0)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_11:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1C3769620;
        _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v6);
        uint64_t v22 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v22);
        uint64_t v23 = specialized >> prefix<A>(_:)();
        uint64_t v25 = v24;
        outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
        *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v21 + 32) = v23;
        *(void *)(v21 + 40) = v25;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_14:
      swift_once();
      goto LABEL_11;
    }
  }
  if (Participant.isActiveWithAV.getter())
  {
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x1C8776240](v12);
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      uint64_t v18 = *(id *)(v16 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0xE0))();
LABEL_9:
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v19 = MEMORY[0x1C8776240](v12);
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      uint64_t v18 = *(id *)(v19 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0xE8))();
      goto LABEL_9;
    }
  }
}

uint64_t closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = a3 + 16;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1C8776240](v10);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    *(_WORD *)CGRect v27 = 514;
    MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v27);
  }
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C8776240](v10);
  if (!v13)
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
  }
  uint64_t v14 = (void *)v13;
  id v15 = *(id *)(v13 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

  ConversationController.lookupActiveConversation()();
  if (!*((void *)&v25 + 1)) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
  }
  outlined init with take of Notice(&v24, (uint64_t)v27);
  uint64_t v16 = v28;
  uint64_t v17 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v16, v17);
  uint64_t v19 = specialized Set.count.getter(v18);
  swift_bridgeObjectRelease();
  if (v19 != 1)
  {
    swift_beginAccess();
    uint64_t v20 = MEMORY[0x1C8776240](v10);
    if (v20)
    {
      uint64_t v21 = (void *)v20;
      uint64_t v22 = *(id *)(v20 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v22) + 0xE8))();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

void *MultiwayViewController.conversationControllerDidUpdateRemoteParticipantKickableStatus(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (uint64_t)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void *)((char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v12 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v12, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v58);
    if (result != 1)
    {
      memcpy(v56, v58, sizeof(v56));
      uint64_t v13 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        v40[1] = v13;
        uint64_t v15 = v13 + 32;
        outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v55);
        uint64_t v41 = a1 + 3;
        uint64_t v46 = a1;
        while (1)
        {
          outlined init with copy of IDSLookupManager(v15, (uint64_t)v52);
          uint64_t v16 = v53;
          uint64_t v51 = v54;
          uint64_t v50 = __swift_project_boxed_opaque_existential_1(v52, v53);
          uint64_t v17 = type metadata accessor for Date();
          uint64_t v49 = v40;
          uint64_t v18 = a1;
          uint64_t v19 = *(void *)(v17 - 8);
          uint64_t v20 = *(void *)(v19 + 64);
          MEMORY[0x1F4188790](v18);
          unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v22 = (char *)v40 - v21;
          uint64_t v23 = v47;
          _s15ConversationKit11ParticipantVWOcTm_18(v24, v47);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            uint64_t v45 = v16;
            uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            uint64_t v26 = v23 + *(int *)(v25 + 48);
            outlined consume of Participant.CopresenceInfo?(*(void *)(v23 + *(int *)(v25 + 64)), *(void *)(v23 + *(int *)(v25 + 64) + 8));
            (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)v40 - v21, v23, v17);
            outlined destroy of Participant.MediaInfo(v26);
            uint64_t v27 = Date.timeIntervalSinceNow.getter();
            double v29 = v28;
            uint64_t v44 = v40;
            __n128 v30 = MEMORY[0x1F4188790](v27);
            id v31 = (char *)v40 - v21;
            (*(void (**)(char *, char *, uint64_t, __n128))(v19 + 16))((char *)v40 - v21, (char *)v40 - v21, v17, v30);
            if (v29 <= 0.0)
            {
              Date.timeIntervalSinceNow.getter();
              double v34 = v33;
              if (one-time initialization token for shared != -1) {
                swift_once();
              }
              BOOL v32 = -v34 <= (double)(*(uint64_t (**)(void))(*(void *)static Defaults.shared + 696))();
            }
            else
            {
              BOOL v32 = 0;
            }
            uint64_t v16 = v45;
            uint64_t v35 = *(void (**)(char *, uint64_t))(v19 + 8);
            v35(v31, v17);
            v35(v22, v17);
            uint64_t v37 = v42;
            uint64_t v36 = v43;
            int v38 = *(unsigned __int8 *)(v41 + *(int *)(v43 + 24));
            a1 = v46;
            _s15ConversationKit11ParticipantVWOcTm_18(v46, v42);
            if (v38 != 1)
            {
              _s15ConversationKit11ParticipantVWOhTm_12(v37, (void (*)(void))type metadata accessor for Participant);
LABEL_16:
              BOOL v32 = 0;
              goto LABEL_17;
            }
            uint64_t v39 = *(void *)(v37 + *(int *)(v36 + 28));
            _s15ConversationKit11ParticipantVWOhTm_12(v37, (void (*)(void))type metadata accessor for Participant);
            if (!v39) {
              goto LABEL_16;
            }
          }
          else
          {
            _s15ConversationKit11ParticipantVWOhTm_12(v23, (void (*)(void))type metadata accessor for Participant.State);
            BOOL v32 = 0;
            a1 = v46;
          }
LABEL_17:
          (*(void (**)(uint64_t, BOOL, uint64_t))(v51 + 64))(a1, v32, v16);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
          v15 += 40;
          if (!--v14) {
            goto LABEL_20;
          }
        }
      }
      outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v55);
LABEL_20:
      swift_bridgeObjectRelease();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v57);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      MultiwayViewController.conversationControllerConversationStateDidChange(_:)(a2);
    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.conversationControllerConversationStateDidChange(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (a1 == 2)
  {
    char v22 = 1;
LABEL_11:
    specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(v22);
    goto LABEL_17;
  }
  if (a1 != 3)
  {
    if (a1 != 4) {
      goto LABEL_17;
    }
    MultiwayViewController.removeAllEffectsObjects()();
    uint64_t v8 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v8, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v36, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    int Enum = getEnumTag for TapInteraction.EventType(v37);
    uint64_t v10 = (void *)MEMORY[0x1E4FBC8C8];
    if (Enum != 1)
    {
      uint64_t v11 = *(char **)(v8 + 56);
      uint64_t v12 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)&v11[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                + 0x228);
      uint64_t v13 = v11;
      uint64_t v14 = v12();
      LocalParticipantView.configureWithEffectsAvailable(_:effectsSelected:)(v14 & 0x10000, 0);
    }
    outlined init with take of CATransform3D?(v8, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v34, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v35) != 1)
    {
      uint64_t v15 = *(void **)(v8 + 72);
      if (v15)
      {
        uint64_t v16 = *(void (**)(void))((*v10 & *v15) + 0xB0);
        uint64_t v17 = v15;
        v16(0);
      }
    }
    uint64_t v18 = (unsigned char *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
    swift_beginAccess();
    unsigned char *v18 = 0;
    MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
    uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);
    uint64_t v20 = *(void (**)(void))((*v10 & *v19) + 0xF0);
    unint64_t v21 = v19;
    v20();

    char v22 = 0;
    goto LABEL_11;
  }
  specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()();
  specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()();
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  uint64_t v24 = v23 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  swift_beginAccess();
  uint64_t v25 = *(void *)(*(void *)v24 + 16);
  if (v25)
  {
    uint64_t v26 = *(void *)v24 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v27 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_18(v26, (uint64_t)v7);
      MultiwayViewController.scheduleUpdate(for:)((uint64_t)v7);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
      v26 += v27;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  double v28 = (void *)MultiwayViewController.call.getter();
  uint64_t v29 = v23 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  swift_beginAccess();
  outlined init with copy of IDSLookupManager(v29, (uint64_t)v37);
  __n128 v30 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  swift_beginAccess();
  specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v28, v37, *v30, 1);
  ConversationController.broadcastingState.setter();
  MultiwayViewController.scheduleLinkEducationFirstTimeAlert()();
  MultiwayViewController.resetDidExpandIncomingCallBanner()();
LABEL_17:
  MultiwayViewController.updateLocalParticipantState()();
  MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  MultiwayViewController.updateShouldShowReactionPickerTipView()();
  MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
  MultiwayViewController.updateDeskViewButtonVisibility()();
  MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
  id v31 = MultiwayViewController.captionsViewController.getter();
  if (v31)
  {
    BOOL v32 = v31;
    ConversationController.conversationDisplayName.getter();
    CaptionsViewController.callName.setter();
  }
  if (a1 == 1)
  {
    LOBYTE(v37[0]) = 1;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)v37, 252, 1);
  }
}

void *MultiwayViewController.participantsMediaPrioritiesDidChange(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v56 = a1;
  uint64_t v3 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v53 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v59 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v50 - v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v16, (uint64_t)v65, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v65, (uint64_t)v66, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v66);
  if (result != 1)
  {
    uint64_t v17 = v66[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v17, (uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3) != 1) {
      return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    }
    outlined init with take of CATransform3D?((uint64_t)v65, (uint64_t)v62, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v62);
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    HIDWORD(v55) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 288))(ObjectType, v18);
    LODWORD(v55) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 296))(ObjectType, v18);
    uint64_t v20 = *(void *)(v56 + 16);
    if (v20)
    {
      uint64_t v51 = v3;
      uint64_t v52 = v2;
      *(void *)&v63[0] = MEMORY[0x1E4FBC860];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v21 = 0;
      uint64_t v22 = *(void *)&v63[0];
      unint64_t v23 = *(void *)(*(void *)&v63[0] + 16);
      uint64_t v54 = 48 * v23;
      do
      {
        unint64_t v24 = v23;
        uint64_t v25 = *(void **)(v56 + v21 + 32);
        uint64_t v58 = *(void *)(v56 + v21 + 40);
        HIDWORD(v57) = *(unsigned __int8 *)(v56 + v21 + 48);
        uint64_t v27 = *(void *)(v56 + v21 + 56);
        uint64_t v26 = *(void *)(v56 + v21 + 64);
        if ((v55 & 0x100000000) != 0) {
          float v28 = *(float *)(v56 + v21 + 72);
        }
        else {
          float v28 = 0.0;
        }
        if (v55) {
          float v29 = *(float *)(v56 + v21 + 76);
        }
        else {
          float v29 = 0.0;
        }
        *(void *)&v63[0] = v22;
        unint64_t v30 = *(void *)(v22 + 24);
        ++v23;
        uint64_t v31 = v22;
        id v32 = v25;
        swift_bridgeObjectRetain();
        uint64_t v22 = v31;
        if (v24 >= v30 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v22 = *(void *)&v63[0];
        }
        *(void *)(v22 + 16) = v23;
        uint64_t v33 = v22 + v54 + v21;
        uint64_t v34 = v58;
        *(void *)(v33 + 32) = v32;
        *(void *)(v33 + 40) = v34;
        *(unsigned char *)(v33 + 48) = BYTE4(v57);
        *(void *)(v33 + 56) = v27;
        *(void *)(v33 + 64) = v26;
        v21 += 48;
        *(float *)(v33 + 72) = v28;
        *(float *)(v33 + 76) = v29;
        --v20;
      }
      while (v20);
      uint64_t v3 = v51;
    }
    else
    {
      uint64_t v22 = MEMORY[0x1E4FBC860];
      unint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v23)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v65);
      }
    }
    uint64_t v35 = 32;
    uint64_t v36 = v53;
    do
    {
      uint64_t v37 = v22;
      long long v38 = *(_OWORD *)(v22 + v35);
      long long v39 = *(_OWORD *)(v22 + v35 + 32);
      v63[1] = *(_OWORD *)(v22 + v35 + 16);
      v63[2] = v39;
      v63[0] = v38;
      long long v40 = *(_OWORD *)(v22 + v35);
      long long v41 = *(_OWORD *)(v22 + v35 + 16);
      uint64_t v64 = *(void *)(v22 + v35 + 32);
      v63[3] = v40;
      v63[4] = v41;
      v60[0] = v40;
      v60[1] = v41;
      uint64_t v61 = v64;
      outlined retain of ParticipantMediaPriorities((void **)v63);
      ConversationController.participant(with:)((uint64_t)v60, v42, v43, v44, v45, v46, v47, v48, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, *(uint64_t *)&v60[0],
        *((uint64_t *)&v60[0] + 1));
      uint64_t v49 = v59;
      if (__swift_getEnumTagSinglePayload(v59, 1, v3) == 1)
      {
        outlined release of ParticipantMediaPriorities((id *)v63);
        outlined destroy of SystemUpdateNotice?(v49, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant(v49, v36);
        specialized MostActiveParticipantsController.update(_:mediaPriorities:)();
        _s15ConversationKit11ParticipantVWOhTm_12(v36, (void (*)(void))type metadata accessor for Participant);
        outlined release of ParticipantMediaPriorities((id *)v63);
      }
      v35 += 48;
      --v23;
      uint64_t v22 = v37;
    }
    while (v23);
    goto LABEL_23;
  }
  return result;
}

void closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x1C8776240](a4 + 16);
    if (v13)
    {
      char v14 = (void *)v13;
      MultiwayViewController.participant(_:didReact:)(a1, a2, a3);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t MultiwayViewController.participant(_:didReact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v45 - v15;
  if (*(void *)(a1 + *(int *)(v17 + 28)))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationKit);
    _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v13);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      LODWORD(v47) = v21;
      uint64_t v23 = v22;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v51 = v46;
      *(_DWORD *)uint64_t v23 = 136315394;
      v45[1] = v23 + 4;
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v13, (uint64_t)v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
      uint64_t v24 = specialized >> prefix<A>(_:)();
      uint64_t v48 = v4;
      uint64_t v25 = v24;
      uint64_t v26 = a2;
      uint64_t v27 = a3;
      unint64_t v29 = v28;
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v49 = v26;
      uint64_t v50 = v27;
      swift_bridgeObjectRetain();
      uint64_t v30 = String.init<A>(reflecting:)();
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v19, (os_log_type_t)v47, "Remote Participant %s didReact with %s", (uint8_t *)v23, 0x16u);
      uint64_t v32 = v46;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v32, -1, -1);
      MEMORY[0x1C87760E0](v23, -1, -1);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
    }

    return specialized MostActiveParticipantsController.markParticipantAsReacting(_:)(a1 + *(int *)(v11 + 20));
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.conversationKit);
    _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v16);
    swift_bridgeObjectRetain_n();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = v4;
      uint64_t v51 = v47;
      *(_DWORD *)uint64_t v36 = 136315394;
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v16, (uint64_t)v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
      uint64_t v37 = specialized >> prefix<A>(_:)();
      uint64_t v38 = a2;
      unint64_t v40 = v39;
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v40, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v49 = v38;
      uint64_t v50 = a3;
      swift_bridgeObjectRetain();
      uint64_t v41 = String.init<A>(reflecting:)();
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v34, v35, "Local Participant %s didReact with %s", (uint8_t *)v36, 0x16u);
      uint64_t v43 = v47;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v43, -1, -1);
      MEMORY[0x1C87760E0](v36, -1, -1);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
    }

    return MultiwayViewController.isLocalReactionActive.setter(1);
  }
}

void closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_219_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_64();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_19_3();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_21_2();
  v8(v7);
  if (v4)
  {
    OUTLINED_FUNCTION_2();
    if (MEMORY[0x1C8776240](v1 + 16))
    {
      uint64_t v9 = OUTLINED_FUNCTION_375();
      v0(v9);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.participantDidStopReacting(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + *(int *)(v10 + 28)))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationKit);
    _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v9);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v19[1] = v2;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v9, (uint64_t)v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      uint64_t v16 = specialized >> prefix<A>(_:)();
      unint64_t v18 = v17;
      outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      long long v19[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      _os_log_impl(&dword_1C2F90000, v12, v13, "Local Participant %s didStopReacting", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v15, -1, -1);
      MEMORY[0x1C87760E0](v14, -1, -1);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
    }

    MultiwayViewController.isLocalReactionActive.setter(0);
  }
}

void closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  char v6 = v5;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  char v8 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v0 = static OS_dispatch_queue.main.getter();
  uint64_t v9 = OUTLINED_FUNCTION_19_3();
  v10(v9);
  _dispatchPreconditionTest(_:)();
  uint64_t v11 = OUTLINED_FUNCTION_21_2();
  v12(v11);
  if (v8)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v13 = MEMORY[0x1C8776240](v4 + 16);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      v2(v6 & 1);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)(v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t v11 = MEMORY[0x1C8776240](a3 + 16);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v13 = (id *)(v11 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
      swift_beginAccess();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)*v13) + 0x1C0);
      id v15 = *v13;
      char v16 = v14(a1, a2);

      MultiwayViewController.updateCameraFlipButtonAvailability()();
      uint64_t v17 = (uint64_t)v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v17, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v21) != 1)
      {
        id v18 = *(id *)(v17 + 56);
        if (ConversationController.supportsCameraBlur.getter()) {
          MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
        }
        LocalParticipantView.supportsCameraBlur.setter();
      }
      if (v16) {
        MultiwayViewController.updateZoomControls(for:)(0xFCu);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    uint64_t v6 = (char *)MultiwayViewController.inCallControlsViewController.getter();

    if (v6)
    {
      uint64_t v7 = &v6[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsAvailable];
      swift_beginAccess();
      char *v7 = a1 & 1;
      InCallControlsViewController.cinematicFramingIsAvailable.didset();
    }
  }
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](v3);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = v8 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v10, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v13) == 1)
    {
    }
    else
    {
      id v11 = *(id *)(v10 + 56);

      LocalParticipantView.cinematicFramingIsAvailable.setter(a1 & 1);
    }
  }
}

void closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    uint64_t v6 = (char *)MultiwayViewController.inCallControlsViewController.getter();

    if (v6)
    {
      uint64_t v7 = &v6[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled];
      swift_beginAccess();
      char *v7 = a1 & 1;
      InCallControlsViewController.cinematicFramingIsEnabled.didset();
    }
  }
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](v3);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = v8 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v10, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v13) == 1)
    {
    }
    else
    {
      id v11 = (char *)*(id *)(v10 + 56);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)&v11[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                     + 0x2A8))(a1 & 1);
    }
  }
}

void closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    uint64_t v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v6, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v9) == 1)
    {
    }
    else
    {
      uint64_t v7 = (char *)*(id *)(v6 + 56);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)&v7[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                     + 0x2C0))(a1 & 1);
    }
  }
}

void closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    uint64_t v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v6, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v9) == 1)
    {
    }
    else
    {
      uint64_t v7 = (char *)*(id *)(v6 + 56);

      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)&v7[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                     + 0x2D8))(a1 & 1);
    }
  }
}

uint64_t closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  if (result)
  {
    char v5 = (void *)result;
    if (a1) {
      char v6 = MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
    }
    else {
      char v6 = 0;
    }
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C3769620;
    char v8 = v6 & 1;
    uint64_t v9 = String.init<A>(reflecting:)();
    uint64_t v11 = v10;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v11;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v28 = static OS_dispatch_queue.main.getter();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(unsigned char *)(v13 + 24) = v8;
    aBlock[4] = partial apply for closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_489;
    uint64_t v14 = _Block_copy(aBlock);
    swift_release();
    uint64_t v15 = type metadata accessor for DispatchQoS();
    uint64_t v27 = &v24;
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15);
    id v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v19 = type metadata accessor for DispatchWorkItemFlags();
    id v25 = v5;
    uint64_t v26 = &v24;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = MEMORY[0x1E4FBC860];
    _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v23 = (void *)v28;
    MEMORY[0x1C8773BA0](0, v18, v22, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

void closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    uint64_t v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v6, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v11) == 1)
    {
    }
    else
    {
      uint64_t v7 = *(char **)(v6 + 56);
      char v8 = &v7[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled];
      swift_beginAccess();
      char *v8 = a2 & 1;
      uint64_t v9 = v7;
      LocalParticipantView.blurEnabled.didset();
    }
  }
}

void closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    MultiwayViewController.updateCameraFlipButtonAvailability()();
  }
}

void closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, Swift::Float a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v11 = a2 + 16;
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C8776240](a2 + 16);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      uint64_t v14 = v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v14, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);

      outlined init with take of CATransform3D?((uint64_t)v34, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v35) != 1)
      {
        memcpy(v36, v35, sizeof(v36));
        swift_beginAccess();
        uint64_t v15 = MEMORY[0x1C8776240](v11);
        if (v15)
        {
          uint64_t v16 = (void *)v15;
          uint64_t v17 = (char *)objc_retain(*(id *)(v15
                                          + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController));

          uint64_t v18 = type metadata accessor for Participant(0);
          uint64_t v19 = &v17[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
          swift_beginAccess();
          uint64_t v20 = &v19[*(int *)(v18 + 20)];
          uint64_t v21 = type metadata accessor for UUID();
          uint64_t v22 = *(void *)(v21 - 8);
          MEMORY[0x1F4188790](v21);
          uint64_t v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v20, v21);
          LOBYTE(v20) = static UUID.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
          if (v20)
          {
            id v25 = *(id *)(v35[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
            ParticipantMonogramView.updateAudioVisualization(with:)(a3);
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);
          }
          else
          {
            uint64_t v26 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
            uint64_t v27 = *(void *)(v26 + 16);
            if (v27)
            {
              uint64_t v28 = v26 + 32;
              do
              {
                outlined init with copy of IDSLookupManager(v28, (uint64_t)v31);
                uint64_t v29 = v32;
                uint64_t v30 = v33;
                __swift_project_boxed_opaque_existential_1(v31, v32);
                (*(void (**)(uint64_t, uint64_t, uint64_t, Swift::Float))(v30 + 80))(a1, v29, v30, a3);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
                v28 += 40;
                --v27;
              }
              while (v27);
            }
            swift_bridgeObjectRelease();
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);
          }
        }
        else
        {
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (a1)
    {
      swift_beginAccess();
      uint64_t v9 = MEMORY[0x1C8776240](a2 + 16);
      if (v9)
      {
        char v10 = (void *)v9;
        MultiwayViewController.showMutedTalkerBanner()();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.showMutedTalkerBanner()()
{
  if (MultiwayViewController.isPipped.getter())
  {
    BOOL v1 = 0;
  }
  else
  {
    uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v2, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v29, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v30) == 1)
    {
      BOOL v1 = 1;
    }
    else
    {
      uint64_t v3 = (unsigned char *)(*(void *)(v2 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      BOOL v1 = *v3 != 0;
    }
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationControls);
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  p_flags = (_DWORD *)(&value witness table for ParticipantGridView.AnimationInfo + 80);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = v10;
    *(_DWORD *)uint64_t v9 = 136315650;
    LOBYTE(v30[0]) = MultiwayViewController.isPipped.getter();
    uint64_t v11 = String.init<A>(reflecting:)();
    v30[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    swift_beginAccess();
    outlined init with take of CATransform3D?(v13, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v29, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v30) == 1)
    {
      unint64_t v14 = 0xE300000000000000;
      uint64_t v15 = 7104878;
    }
    else
    {
      swift_beginAccess();
      uint64_t v15 = String.init<A>(reflecting:)();
      unint64_t v14 = v16;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v14, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 22) = 2080;
    uint64_t v17 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v28);
    p_flags = &value witness table for ParticipantGridView.AnimationInfo.flags;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v6, v7, "MutedTalker: isPipped:%s, inCallConversationBannerState:%s, didNotifyMutedCaller:%s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v10, -1, -1);
    MEMORY[0x1C87760E0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v19 = *((void *)p_flags + 66);
  if (((v5[v19] | v1) & 1) == 0)
  {
    uint64_t v20 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
    uint64_t v21 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController];
    uint64_t v22 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v23 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v21) + 0x170);
    uint64_t v24 = v21;
    v23();

    v5[v19] = 1;
    id v25 = *(void **)&v5[v20];
    uint64_t v26 = *(void (**)(void))((*v22 & *v25) + 0x168);
    uint64_t v27 = v25;
    v26();
  }
}

void closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_219_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_64();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_19_3();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_21_2();
  v8(v7);
  if (v4)
  {
    OUTLINED_FUNCTION_2();
    if (MEMORY[0x1C8776240](v1 + 16))
    {
      uint64_t v9 = OUTLINED_FUNCTION_375();
      v0(v9);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.updateAudioRouteButton(for:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)(v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v7, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v11) != 1)
    {
      id v8 = *(id *)(v7 + 16);
      InCallControlsViewController.updateAudioRouteButton(for:)();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)&v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](a1 + 16);
  if (!v7) {
    return;
  }
  id v8 = (char *)v7;
  if (static Platform.current.getter() == 3)
  {
    uint64_t v9 = (uint64_t)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    swift_beginAccess();
    outlined init with take of CATransform3D?(v9, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v27) != 1)
    {
      id v10 = objc_msgSend(*(id *)(v9 + 8), sel_view);
      if (v10)
      {
        uint64_t v11 = v10;
        objc_msgSend(v10, sel_bounds);
        double v13 = v12;
        double v15 = v14;

        unint64_t v16 = (double *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
        double v18 = *(double *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
        double v17 = *(double *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize + 8];
        if (v18 == v13 && v17 == v15) {
          goto LABEL_29;
        }
        if (v18 < v17 || v13 >= v15)
        {
          if (v17 >= v18)
          {
            if ((v17 != 0.0 || v18 != 0.0) && v15 >= v13) {
              goto LABEL_28;
            }
          }
          else if (v18 != 0.0 || v17 != 0.0)
          {
            goto LABEL_28;
          }
        }
        outlined init with take of CATransform3D?(v9, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v24, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v25) != 1)
        {
          id v23 = *(id *)(v9 + 48);
          MultiwayViewConstraintsController.updateLocalPreviewConstraintWhenExpanded()();
        }
LABEL_28:
        *unint64_t v16 = v13;
        v16[1] = v15;
        goto LABEL_29;
      }
LABEL_32:
      __break(1u);
      return;
    }
  }
LABEL_29:
  MultiwayViewController.updatePresentationSize()();
  MultiwayViewController.needsUpdatePresentationContexts.setter(1);
}

id MultiwayViewController.updatePresentationSize()()
{
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_bounds);
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;

    uint64_t v11 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations];
    swift_beginAccess();
    if (!*(void *)v11)
    {
      double v12 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation];
      swift_beginAccess();
      MultiwayViewController.rotate(portraitRect:for:)(*v12, v4, v6, v8, v10);
      double v8 = v13;
      double v10 = v14;
    }
    double v15 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
    *double v15 = v8;
    v15[1] = v10;
    unint64_t v16 = (void *)MultiwayViewController.call.getter();
    objc_msgSend(v16, sel_setRemoteVideoPresentationSize_, v8, v10);

    return (id)MultiwayViewController.updateMediaPipInfo()();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *double v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      double v9 = (void *)v8;
      MultiwayViewController.updateVideoState()();
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.updateVideoState()()
{
  uint64_t v1 = OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_31_39(v1, (uint64_t)v21);
  OUTLINED_FUNCTION_163_2(v2, v3, v4, v5, v6, v7, v8, v9, v16, v17, v18, v19, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6],
    v20[7],
    v20[8],
    v20[9],
    v20[10],
    v20[11],
    v20[12],
    v20[13],
    v20[14],
    v20[15],
    v20[16],
    v20[17],
    v20[18],
    v20[19],
    v20[20],
    v20[21],
    v20[22],
    v20[23],
    v20[24],
    v20[25],
    v20[26],
    v20[27],
    v20[28],
    v20[29],
    v21[0],
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41);
  OUTLINED_FUNCTION_6_112(&v42);
  if (!v10)
  {
    outlined init with take of CATransform3D?((uint64_t)v21, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v20);
    char v11 = ConversationController.isCarPlayConnected.getter();
    uint64_t v12 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
    OUTLINED_FUNCTION_2();
    double v13 = (void *)MEMORY[0x1C8776240](v12);
    if (v13)
    {
      unsigned __int8 v14 = objc_msgSend(v13, sel_isMultiwayViewControllerShowingInMiniWindow);
      swift_unknownObjectRelease();
    }
    else
    {
      unsigned __int8 v14 = 0;
    }
    ConversationController.updateVideoStateForExternalFactors(isShowingInMiniWindow:)(v14);
    if (v11) {
      char v15 = 0;
    }
    else {
      char v15 = objc_msgSend(self, sel_supportsDisplayingFaceTimeAudioCalls);
    }
    InCallControlsViewController.videoButtonIsEnabled.setter(v15);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v21);
  }
}

void closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t v11 = MEMORY[0x1C8776240](a3 + 16);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      MultiwayViewController.conversationControllerOneToOneModeDidChange(_:_:)(a1 & 1, a2 & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerOneToOneModeDidChange(_:_:)(char a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)(v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v11 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v11, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  id result = (void *)getEnumTag for TapInteraction.EventType(v24);
  if (result == 1) {
    return result;
  }
  a2 &= 1u;
  if ((a1 & 1) == 0 || a2)
  {
    outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v22);
    goto LABEL_9;
  }
  outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v22);
  if ((MultiwayViewController.isOnScreen.getter() & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      MultiwayViewController.pauseUserInterface()();
      goto LABEL_9;
    }
LABEL_20:
    swift_once();
    goto LABEL_7;
  }
LABEL_9:
  if (a2) {
    ConversationKit::ParticipantGridView::AnimationStyle v13 = ConversationKit_ParticipantGridView_AnimationStyle_fast;
  }
  else {
    ConversationKit::ParticipantGridView::AnimationStyle v13 = ConversationKit_ParticipantGridView_AnimationStyle_spring;
  }
  MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(a2, v13);
  if (static Platform.current.getter() == 3)
  {
    uint64_t v14 = v24[7];
    ConversationController.isOneToOneModeEnabled.getter();
    uint64_t v15 = LocalParticipantView.supportsRotation.setter();
    if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(v14
                                                                                   + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView))
                                             + 0x228))(v15) & 0x100000000) != 0)
    {
      uint64_t v16 = v14 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
      swift_beginAccess();
      *(void *)(v16 + 8) = &protocol witness table for MultiwayViewController;
      swift_unknownObjectWeakAssign();
    }
  }
  uint64_t v17 = MultiwayViewController.captionsViewController.getter();
  if (v17)
  {
    uint64_t v18 = v17;
    char v19 = ConversationController.isOneToOneModeEnabled.getter();
    CaptionsViewController.isGroupCall.setter((v19 & 1) == 0);
  }
  MultiwayViewController.updateFloatingLocalParticpantView()();
  MultiwayViewController.updateLocalParticipantAspectRatio()();
  MultiwayViewController.updateLocalParticipantState()();
  uint64_t v20 = (char *)(v24[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  MultiwayViewController.updateViewVisibility(localParticipantState:)(*v20);
  MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
  MultiwayViewController.updateDeskViewButtonVisibility()();
  MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
  MultiwayViewController.resetCaptionsViewDragState()();
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v23);
}

void MultiwayViewController.conversationControllerIsTrackingActiveConversationDidChange(_:)(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (a1)
    {
      ConversationController.lookupActiveConversation()();
      uint64_t v7 = v14;
      if (v14)
      {
        uint64_t v8 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        if (v9 == 1)
        {
          char v10 = MultiwayViewController.conversationControlsManager.getter();
          if (v10)
          {
            uint64_t v11 = v10;
            ConversationControlsManager.showInCallHUD()();
          }
        }
      }
      else
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for Conversation?);
      }
      MultiwayViewController.playOutgoingGFTRingtoneIfNeeded()();
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
    }
    else
    {
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      MultiwayViewController.testing_transitionedToInactiveState()();
    }
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerDidUpdateHasRingingCalls(_:)(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  id result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
    {
      if (a1) {
        MultiwayViewController.pauseUserInterface()();
      }
      else {
        MultiwayViewController.resumeUserInterface()();
      }
    }
    MultiwayViewController.updateLocalParticipantState()();
    return MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.conversationControllerDidUpdateWantsHoldMusic(_:)(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  uint64_t v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  uint64_t result = ConversationController.isOneToOneModeEnabled.getter();
  if ((result & 1) == 0) {
    return result;
  }
  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
      uint64_t v11 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
      swift_beginAccess();
      char v12 = *(unsigned char *)(v11 + 16);
      long long v16 = *(_OWORD *)v11;
      char v17 = v12;
      uint64_t v13 = String.init<A>(reflecting:)();
      uint64_t v15 = v14;
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v10 + 32) = v13;
      *(void *)(v10 + 40) = v15;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
LABEL_6:
  MultiwayViewController.updateLocalParticipantState()();
  return (uint64_t)MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
}

void closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    uint64_t v7 = MEMORY[0x1C8776240](a1 + 16);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      MultiwayViewController.conversationControllerDidRemoveAllVisibleParticipants()();
    }
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerDidRemoveAllVisibleParticipants()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v8 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v8, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v20);
    if (result != 1)
    {
      memcpy(v18, v20, sizeof(v18));
      uint64_t v9 = MultiwayViewController.ViewContent.participantsViewControllers.getter();
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        uint64_t v11 = v9 + 32;
        outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v14);
        do
        {
          outlined init with copy of IDSLookupManager(v11, (uint64_t)v15);
          uint64_t v12 = v16;
          uint64_t v13 = v17;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          (*(void (**)(uint64_t, uint64_t))(v13 + 104))(v12, v13);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
          v11 += 40;
          --v10;
        }
        while (v10);
      }
      else
      {
        outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v14);
      }
      swift_bridgeObjectRelease();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](a1 + 16);
  if (!result) {
    return result;
  }
  uint64_t v8 = (char *)result;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController;
  uint64_t v11 = *(void **)(*(void *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  uint64_t v12 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v13 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0xF0);
  uint64_t v14 = v8;
  uint64_t v15 = v11;
  LOBYTE(v13) = v13();

  if (VideoMessageController.State.rawValue.getter((char)v13) == 0x7964616552746F6ELL && v16 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_15;
    }
    MultiwayViewController.cancelVideoRecording(completion:)();
    char v19 = *(void **)(*(void *)&v8[v10]
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    uint64_t v20 = *(uint64_t (**)(void))((*v12 & *v19) + 0xF0);
    uint64_t v21 = v19;
    LOBYTE(v20) = v20();

    if (VideoMessageController.State.rawValue.getter((char)v20) == 0x6F4364726F636572 && v22 == 0xEE006574656C706DLL)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_15;
      }
    }
    id v30 = objc_msgSend(v14, sel_navigationController);
    if (v30)
    {
      uint64_t v31 = v30;
      id v32 = objc_msgSend(v30, sel_popViewControllerAnimated_, 1);
    }
  }
LABEL_15:
  uint64_t v25 = self;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = partial apply for closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  *(void *)(v26 + 24) = v9;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(void *)(v27 + 24) = v26;
  aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_482;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_performWithoutAnimation_, v28);
  swift_release();

  _Block_release(v28);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_21:
  }
    __break(1u);
  return result;
}

void *closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  __int16 v1 = 513;
  return MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v1);
}

void MultiwayViewController.cancelVideoRecording(completion:)()
{
  OUTLINED_FUNCTION_212_2();
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v2, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v13);
  if (!v3)
  {
    id v4 = *(id *)(v2 + 56);
    LocalParticipantView.endCountdown()();
  }
  if (MultiwayViewController.isPresentingEffectsBrowser.getter())
  {
    outlined init with take of CATransform3D?(v2, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    OUTLINED_FUNCTION_6_112(v11);
    if (!v3 && *(void *)(v2 + 72))
    {
      OUTLINED_FUNCTION_43_24();
      char v6 = *(void (**)(void))(v5 + 176);
      id v8 = v7;
      v6(0);
    }
    uint64_t v9 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
    OUTLINED_FUNCTION_1_21();
    *uint64_t v9 = 0;
    MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
  }
  OUTLINED_FUNCTION_30_15();
  ConversationController.resetRecordingVideoMessage(completion:)();
  OUTLINED_FUNCTION_215_0();
}

void closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t v11 = MEMORY[0x1C8776240](a3 + 16);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      MultiwayViewController.conversationControllerDidUpdateParticipantCameraPosition(_:cameraPosition:)(a1, a2);
    }
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.conversationControllerDidUpdateParticipantCameraPosition(_:cameraPosition:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)&v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v12 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v12, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v17);
    if (result != 1)
    {
      outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v15);
      if (ConversationController.isOneToOneModeEnabled.getter())
      {
        id v13 = ParticipantGridViewController.gridView.getter();
        if (v13)
        {
          uint64_t v14 = v13;
          ParticipantGridView.updateVisibleCameraPosition(for:visibleCameraPosition:animated:)(a1, a2, 0);
        }
        MostActiveParticipantViewController.update(participant:visibleCameraPosition:)();
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a1 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      char ShouldPauseOnFirstLocalVideo = MultiwayViewController.conversationControllerShouldPauseOnFirstLocalVideoFrame()();
    }
    else
    {
      char ShouldPauseOnFirstLocalVideo = 0;
    }
    return ShouldPauseOnFirstLocalVideo & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.conversationControllerShouldPauseOnFirstLocalVideoFrame()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationKit);
  id v8 = v1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v12;
    *(_DWORD *)uint64_t v11 = 136315906;
    uint64_t v19 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x80000001C37B7230, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 1024;
    uint64_t v13 = MultiwayViewController.call.getter();
    unsigned int v14 = objc_msgSend((id)v13, sel_isConversation);

    LODWORD(v19) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v11 + 18) = 1024;
    LOBYTE(v13) = MultiwayViewController.isVisibleForStartingCamera.getter();

    LODWORD(v19) = (v13 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v11 + 24) = 1024;
    LOBYTE(v13) = MultiwayViewController.isFrontmostMultiway.getter();

    LODWORD(v19) = v13 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1C2F90000, v9, v10, "%s,\ncall.isConversation : %{BOOL}d,\n!isVisibleForStartingCamera: %{BOOL}d,\nisFrontmostMultiway: %{BOOL}d", (uint8_t *)v11, 0x1Eu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v12, -1, -1);
    MEMORY[0x1C87760E0](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (void *)MultiwayViewController.call.getter();
  unsigned int v16 = objc_msgSend(v15, sel_isConversation);

  if (v16 && (MultiwayViewController.isVisibleForStartingCamera.getter() & 1) == 0) {
    char v17 = MultiwayViewController.isFrontmostMultiway.getter();
  }
  else {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t MultiwayViewController.conversationControllerLetMeInRequestStateDidChange(_:)()
{
  void (*v17)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  long long v27;
  uint64_t v28;
  void v29[3];
  uint64_t v30;
  uint64_t v31;
  void v32[3];
  uint64_t v33;
  uint64_t v34;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
    uint64_t v9 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 112);
    swift_unknownObjectRetain();
    LOBYTE(v10) = v12(ObjectType, v10);
    uint64_t result = swift_unknownObjectRelease();
    if (v10)
    {
      uint64_t v13 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
      swift_beginAccess();
      outlined init with copy of IDSLookupManager(v13, (uint64_t)v29);
      uint64_t v14 = v30;
      uint64_t v15 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      uint64_t v16 = *(void *)(v9 + 8);
      char v17 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 104);
      char v18 = swift_unknownObjectRetain();
      v17(&v27, v18, v16, v14, v15);
      swift_unknownObjectRelease();
      if (v28)
      {
        outlined init with take of Notice(&v27, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        uint64_t v19 = v33;
        uint64_t v20 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 216))(v19, v20);

        if (v21)
        {
          uint64_t v22 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
          swift_beginAccess();
          uint64_t v23 = (void *)MEMORY[0x1C8776240](v22);
          if (v23)
          {
            char v24 = v23;
            if (objc_msgSend(v23, sel_respondsToSelector_, sel_updateCallParticipantLabelsViewForViewController_))objc_msgSend(v24, sel_updateCallParticipantLabelsViewForViewController_, v1); {
            swift_unknownObjectRelease();
            }
          }
          MultiwayViewController.updateViewConstraints()();
          MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
        }
        uint64_t v25 = v32;
      }
      else
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)&v27, &demangling cache variable for type metadata for Conversation?);
        uint64_t v25 = v29;
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      HIWORD(v10) = 514;
      MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v10 + 6);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 216))(v9, v10);

    if (v11)
    {
      swift_beginAccess();
      uint64_t v12 = MEMORY[0x1C8776240](a2 + 16);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        MultiwayViewController.scheduleLinkEducationFirstTimeAlert()();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t MultiwayViewController.scheduleLinkEducationFirstTimeAlert()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 424))(ObjectType, v1);
  if (result)
  {
    ConversationController.lookupActiveConversation()();
    if (v37)
    {
      outlined init with take of Notice(&aBlock, (uint64_t)v41);
      uint64_t v4 = v42;
      uint64_t v5 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 216))(v4, v5);

      if (v6)
      {
        uint64_t v7 = v42;
        uint64_t v8 = v43;
        __swift_project_boxed_opaque_existential_1(v41, v42);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8) == 3)
        {
          (*(void (**)(void, uint64_t, uint64_t))(v1 + 432))(0, ObjectType, v1);
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
          uint64_t v33 = static OS_dispatch_queue.main.getter();
          uint64_t v9 = type metadata accessor for DispatchTime();
          uint64_t v34 = v28;
          uint64_t v31 = v9;
          uint64_t v10 = *(void *)(v9 - 8);
          uint64_t v11 = MEMORY[0x1F4188790](v9);
          uint64_t v29 = v28;
          MEMORY[0x1F4188790](v11);
          uint64_t v13 = (char *)v28 - v12;
          static DispatchTime.now()();
          MEMORY[0x1C8772E20](v13, 1.0);
          uint64_t v14 = *(void (**)(void *, uint64_t))(v10 + 8);
          uint64_t v30 = v10 + 8;
          id v32 = v14;
          v14(v13, v9);
          uint64_t v15 = swift_allocObject();
          swift_unknownObjectWeakInit();
          outlined init with copy of IDSLookupManager((uint64_t)v41, (uint64_t)v40);
          uint64_t v16 = swift_allocObject();
          *(void *)(v16 + 16) = v15;
          outlined init with take of Notice(v40, v16 + 24);
          uint64_t v38 = partial apply for closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert();
          uint64_t v39 = v16;
          *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
          *((void *)&aBlock + 1) = 1107296256;
          uint64_t v36 = thunk for @escaping @callee_guaranteed () -> ();
          uint64_t v37 = &block_descriptor_469;
          char v17 = _Block_copy(&aBlock);
          swift_release();
          uint64_t v18 = type metadata accessor for DispatchQoS();
          v28[2] = v28;
          uint64_t v19 = *(void *)(v18 - 8);
          MEMORY[0x1F4188790](v18);
          uint64_t v21 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
          static DispatchQoS.unspecified.getter();
          uint64_t v22 = type metadata accessor for DispatchWorkItemFlags();
          v28[1] = v28;
          uint64_t v23 = *(void *)(v22 - 8);
          MEMORY[0x1F4188790](v22);
          uint64_t v25 = (char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
          *(void *)&long long aBlock = MEMORY[0x1E4FBC860];
          _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
          lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v26 = v29;
          uint64_t v27 = (void *)v33;
          MEMORY[0x1C8773B10](v29, v21, v25, v17);
          _Block_release(v17);

          (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
          v32(v26, v31);
        }
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }
    else
    {
      return outlined destroy of SystemUpdateNotice?((uint64_t)&aBlock, &demangling cache variable for type metadata for Conversation?);
    }
  }
  return result;
}

void closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
    swift_beginAccess();
    uint64_t v5 = *v4;

    if (v5 == 2)
    {
      swift_beginAccess();
      uint64_t v6 = MEMORY[0x1C8776240](v1);
      if (!v6) {
        return;
      }
      uint64_t v7 = (void *)v6;
      uint64_t v8 = v6 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v8, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v20) == 1)
      {

        return;
      }
      id v18 = *(id *)(v8 + 96);

      specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
      goto LABEL_14;
    }
  }
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C8776240](v1);
  if (!v9
    || (uint64_t v10 = (void *)v9,
        uint64_t v11 = (uint64_t *)(v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState),
        swift_beginAccess(),
        uint64_t v12 = *v11,
        v10,
        v12))
  {
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x1C8776240](v1);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      uint64_t v15 = v13 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v15, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v20) == 1)
      {
      }
      else
      {
        id v16 = *(id *)(v15 + 96);

        specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
      }
    }
  }
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C8776240](v1);
  if (v17)
  {
    id v18 = (id)v17;
    specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
LABEL_14:
  }
}

void closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C8776240](a2 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = MultiwayViewController.captionsViewController.getter();
      if (v11)
      {
        uint64_t v12 = v11;
        CaptionsViewController.updateCaptions(for:)(a1);

        uint64_t v10 = v12;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v11 = a4 + 16;
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C8776240](v11);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      uint64_t v14 = MultiwayViewController.captionsViewController.getter();

      if (v14)
      {
        swift_beginAccess();
        uint64_t v15 = MEMORY[0x1C8776240](v11);
        id v16 = (void *)v15;
        if (v15)
        {
          id v17 = objc_retain(*(id *)(v15
                                  + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController));

          ConversationController.conversationDisplayName.getter();
        }
        CaptionsViewController.callName.setter();
      }
    }
    swift_beginAccess();
    uint64_t v18 = MEMORY[0x1C8776240](v11);
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      uint64_t v20 = MultiwayViewController.captionsViewController.getter();

      if (v20)
      {
        uint64_t v21 = a1[3];
        uint64_t v22 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v21);
        uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
        CaptionsViewController.groupImage.setter(v23);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    MultiwayViewController.conversationControllerDidUpdateVideoMessagingAvailable()();
  }
}

void MultiwayViewController.conversationControllerDidUpdateVideoMessagingAvailable()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 600))(ObjectType, v1))
  {
    MultiwayViewController.updateVideoMessagingAvailableForCurrentState()();
  }
}

void closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.videoMessaging);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v13[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v5, v6, "Encountered an error performing a video message action: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v8, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }

  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1C8776240](v3);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    MultiwayViewController.showUnrecoverableAlertFromError(_:)(a1);
  }
}

void MultiwayViewController.showUnrecoverableAlertFromError(_:)(char a1)
{
  uint64_t v2 = v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_conversationKit);
  v20._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001C37B7130;
  v6._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v7.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v20);

  id v18 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v9._countAndFlagsBits, (uint64_t)v9._object, 0, 0xE000000000000000, 1);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIAlertAction);
  id v10 = objc_msgSend(v4, sel_conversationKit);
  v11._uint64_t countAndFlagsBits = 0xD000000000000030;
  v21._object = (void *)0xE000000000000000;
  v11._object = (void *)0x80000001C37B7160;
  v12.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v21);

  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = v15;
  id v17 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v14._countAndFlagsBits, (uint64_t)v14._object, 0, (uint64_t)partial apply for closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:), v16);
  objc_msgSend(v18, sel_addAction_, v17);

  objc_msgSend(v2, sel_presentViewController_animated_completion_, v18, 1, 0);
}

void closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  Swift::String_optional v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C8776240](a2 + 16);
    if (v9)
    {
      id v10 = (void *)v9;
      HIWORD(v11) = a1 & 1;
      MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v11 + 6);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(float a1, float a2, float a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v12);
  Swift::String v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (uint64_t *)&v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCBE8], v15);
  char v19 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8776240](a5 + 16);
    if (result)
    {
      Swift::String v21 = (void *)result;
      id v22 = *(id *)(result + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
      ConversationController.participant(with:)();

      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
      {

        return outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant((uint64_t)v11, (uint64_t)v14);
        uint64_t v23 = (uint64_t)v21 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
        swift_beginAccess();
        outlined init with take of CATransform3D?(v23, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v27) != 1)
        {
          id v24 = *(id *)(v23 + 8);
          ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)(a1, a2, a3);
        }
        return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    specialized EffectsHandler.automation_setEffectsMode(enabled:)(a2 & 1);
  }
}

id MultiwayViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void MultiwayViewController.init(coder:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime];
  uint64_t v8 = type metadata accessor for Date();
  OUTLINED_FUNCTION_25_1(v7, v9, v10, v8);
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow] = 0;
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags;
  *(void *)&v2[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_spamAlertBuilder;
  type metadata accessor for SpamAlertBuilder();
  *(void *)&v2[v12] = swift_allocObject();
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox] = 0;
  uint64_t v13 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captioningStateManager;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  Swift::String v14 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(void *)&v2[v13] = CaptioningStateManager.init(capabilities:)(v14);
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible] = 2;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask] = 0;
  uint64_t v15 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  uint64_t v16 = type metadata accessor for VideoReactionPickerTip();
  OUTLINED_FUNCTION_25_1(v15, v17, v18, v16);
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips] = 1;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects] = 0;
  char v19 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *(_OWORD *)char v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((_OWORD *)v19 + 2) = 0u;
  *((_OWORD *)v19 + 3) = 0u;
  *((void *)v19 + 8) = 0;
  Swift::String v20 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator];
  *((void *)v20 + 4) = 0;
  *(_OWORD *)Swift::String v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner] = 2;
  uint64_t v21 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(v34);
  outlined init with take of CATransform3D?((uint64_t)v34, v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller] = 0;
  id v22 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
  void *v22 = 0;
  v22[1] = 0;
  uint64_t v23 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
  *uint64_t v23 = 0;
  v23[1] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState] = 4;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation] = 1;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations] = 2;
  id v24 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__isOnScreen];
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v24, v1, v3);
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner] = 0;
  uint64_t v25 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler];
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  v26[16] = 1;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen] = 2;
  uint64_t v27 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
  void *v28 = 0;
  v28[1] = 0;
  uint64_t v29 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler];
  void *v29 = 0;
  v29[1] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled] = 0;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView] = 1;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews] = 0;
  uint64_t v30 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
  *uint64_t v30 = 0u;
  v30[1] = 0u;
  uint64_t v31 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
  *uint64_t v31 = 0u;
  v31[1] = 0u;
  v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen] = 0;
  id v32 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  *id v32 = 4;
  *((void *)v32 + 1) = 0;
  *((void *)v32 + 2) = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill] = MEMORY[0x1E4FBC860];
  uint64_t v33 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer;
  *(void *)&v2[v33] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TonePlayer()), sel_init);
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions] = MEMORY[0x1E4FBC870];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id MultiwayViewController.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer];
  if (v3) {
    objc_msgSend(v3, sel_invalidate);
  }
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer];
  if (v4) {
    objc_msgSend(v4, sel_invalidate);
  }
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer];
  if (v5) {
    objc_msgSend(v5, sel_invalidate);
  }
  OUTLINED_FUNCTION_217_1();
  uint64_t v7 = *(void (**)(void))(v6 + 240);
  id v9 = v8;
  v7();

  OUTLINED_FUNCTION_14_2();
  uint64_t v11 = *(void (**)(void))(v10 + 376);
  id v13 = v12;
  v11();

  MultiwayViewController.deregisterForSystemEventsIfNecessary()();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v14 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
  uint64_t v21 = v1;
  id v15 = v1;
  uint64_t v16 = String.init<A>(reflecting:)();
  uint64_t v18 = v17;
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v20.receiver = v15;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_dealloc);
}

Swift::Void __swiftcall MultiwayViewController.viewDidLoad()()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  OUTLINED_FUNCTION_4();
  v324[2] = v3;
  v324[3] = v2;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2_3();
  v324[1] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>);
  OUTLINED_FUNCTION_4();
  v324[5] = v6;
  uint64_t v325 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_54_6(v7, v324[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Map<Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>, (VideoMessageController.State, VideoMessageController.State)>);
  OUTLINED_FUNCTION_4();
  uint64_t v327 = v9;
  uint64_t v328 = v8;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2_3();
  uint64_t v326 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (UIView *)((char *)v324 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v368 = (char *)type metadata accessor for VideoReactionPickerTip();
  OUTLINED_FUNCTION_4();
  id v360 = v15;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_2_3();
  v357 = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  uint64_t v19 = OUTLINED_FUNCTION_8(v18);
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_10_5();
  v363 = (UIView *)v20;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v21);
  v362 = (char *)v324 - v22;
  id v352 = (id)type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_10_5();
  *(void *)&long long v348 = v24;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v25);
  v351 = (UIView *)((char *)v324 - v26);
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v27);
  v371 = (char *)v324 - v28;
  OUTLINED_FUNCTION_8_1();
  *(void *)&double v30 = MEMORY[0x1F4188790](v29).n128_u64[0];
  id v32 = (char **)((char *)v324 - v31);
  v386.receiver = v0;
  v386.super_class = ObjectType;
  objc_msgSendSuper2(&v386, sel_viewDidLoad, v30);
  MultiwayViewController.updateAdditionalSafeAreaInsets()();
  if (one-time initialization token for conversationKit != -1) {
LABEL_138:
  }
    swift_once();
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)static Logger.conversationKit);
  uint64_t v35 = v0;
  uint64_t v0 = (char *)Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  uint64_t v37 = v36;
  BOOL v38 = os_log_type_enabled((os_log_t)v0, v36);
  v358 = v14;
  v359 = v32;
  if (v38)
  {
    uint64_t v34 = OUTLINED_FUNCTION_37();
    v370 = (UIView *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 138412290;
    v392[0] = (uint64_t)v35;
    uint64_t v39 = v35;
    id v32 = v359;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v40 = v370;
    v370->super.super.Class isa = (Class)v35;

    _os_log_impl(&dword_1C2F90000, (os_log_t)v0, (os_log_type_t)v37, "%@ viewDidLoad", (uint8_t *)v34, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    uint64_t v14 = v40;
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    uint64_t v0 = v35;
  }

  id v41 = objc_msgSend(v35, sel_view);
  if (!v41)
  {
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:

    __break(1u);
LABEL_146:

    __break(1u);
LABEL_147:

    __break(1u);
    goto LABEL_148;
  }
  uint64_t v42 = v41;
  uint64_t v43 = &v35[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner];
  OUTLINED_FUNCTION_2();
  if (*v43 == 1)
  {
    id v44 = objc_msgSend(self, sel_clearColor);
  }
  else
  {
    if (one-time initialization token for background != -1) {
      swift_once();
    }
    id v44 = (id)static Colors.MultiwayViewController.background;
  }
  uint64_t v45 = v44;
  v340 = ObjectType;
  objc_msgSend(v42, sel_setBackgroundColor_, v44);

  uint64_t v46 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  MultiwayViewController.mostActiveParticipants.getter();
  uint64_t v47 = &v35[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle];
  OUTLINED_FUNCTION_2();
  v385[1] = *v47;
  MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
  MultiwayViewController.captionsLayoutState.getter(v385);
  char v48 = v385[0];
  if (v385[0] == 3) {
    char v48 = 0;
  }
  LOBYTE(v392[0]) = v48;
  id v49 = objc_allocWithZone((Class)type metadata accessor for ParticipantGridViewController());
  ParticipantGridViewController.init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)();
  uint64_t v51 = v50;
  uint64_t v52 = *(uint64_t **)&v35[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
  uint64_t v53 = (uint64_t)v52 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVWOcTm_18(v53, (uint64_t)v32);
  v366 = v52;
  uint64_t v54 = (uint64_t *)((char *)v52 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  v356 = v54;
  v367 = v51;
  OUTLINED_FUNCTION_2();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Array<A>.participants(notIn:)();
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v57 = objc_allocWithZone((Class)type metadata accessor for ParticipantListViewController());
  swift_retain();
  uint64_t v346 = v46;
  v365 = ParticipantListViewController.init(localParticipant:remoteParticipants:participantIsShownInGrid:)((uint64_t)v32, v56, (uint64_t)partial apply for closure #1 in MultiwayViewController.viewDidLoad(), v46);
  uint64_t v58 = (uint64_t)&v35[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_11_0();
  outlined init with take of CATransform3D?(v58, (uint64_t)v383, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v383, (uint64_t)v384, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  id v59 = 0;
  if (getEnumTag for TapInteraction.EventType(v384) != 1)
  {
    uint64_t v60 = (id *)(*(void *)(v58 + 24)
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
    OUTLINED_FUNCTION_2();
    id v59 = *v60;
    id v61 = *v60;
  }
  uint64_t v347 = v58;
  v370 = (UIView *)type metadata accessor for Participant;
  _s15ConversationKit11ParticipantVWOcTm_18(v53, (uint64_t)v371);
  uint64_t v62 = v356;
  uint64_t v63 = *v356;
  swift_bridgeObjectRetain();
  LODWORD(v369) = MultiwayViewController.controlsMode.getter();
  LOBYTE(v392[0]) = *v47;
  char v64 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
  char v65 = ConversationController.isLinkSharingSupported.getter();
  if (v59) {
    char v66 = &protocol witness table for ConversationHUDViewController;
  }
  else {
    char v66 = 0;
  }
  objc_allocWithZone((Class)type metadata accessor for InCallControlsViewController());
  id v345 = v59;
  v323 = v59;
  uint64_t v67 = v62;
  v369 = (char *)InCallControlsViewController.init(localParticipant:remoteParticipants:mode:gridLayoutStyle:representedLegacyCallIdentifier:isLocalMemberAuthorizedToChangeGroupMembership:isLinkSharingSupported:menuHostViewController:)((uint64_t)v371, v63, (char)v369, (char *)v392, 0, 0, v64 & 1, v65 & 1, v323, (uint64_t)v66);
  uint64_t v34 = *v62;
  uint64_t v350 = v53;
  uint64_t v14 = (UIView *)v359;
  _s15ConversationKit11ParticipantVWOcTm_18(v53, (uint64_t)v359);
  uint64_t v68 = *(void *)&v35[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults];
  uint64_t v37 = *(void *)&v35[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  BOOL v69 = MultiwayViewController.shouldShowActionTypePhotoCapture.getter();
  char v70 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
  id v71 = objc_allocWithZone((Class)type metadata accessor for MostActiveParticipantViewController());
  v354 = (uint64_t *)v68;
  uint64_t v355 = v37;
  MostActiveParticipantViewController.init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(v34, (uint64_t)v14, v68, v37, v69, v70 & 1);
  OUTLINED_FUNCTION_235_1();
  uint64_t v0 = (char *)objc_allocWithZone((Class)type metadata accessor for EffectsControlsViewController());
  uint64_t v72 = v35;
  v364 = specialized EffectsControlsViewController.init(delegate:)(v72, v0);
  id v73 = objc_msgSend(v364, sel_view);
  if (!v73) {
    goto LABEL_144;
  }
  uint64_t v74 = v73;
  objc_msgSend(v73, sel_setAlpha_, 0.0);

  uint64_t v34 = *v67;
  swift_bridgeObjectRetain();
  uint64_t v75 = ConversationController.conversationDisplayName.getter();
  uint64_t v77 = v76;
  ConversationController.lookupActiveConversation()();
  uint64_t v78 = (void *)v392[3];
  v353 = (uint64_t *)v14;
  if (v392[3])
  {
    uint64_t v79 = v392[4];
    __swift_project_boxed_opaque_existential_1(v392, v392[3]);
    uint64_t v78 = (void *)(*(uint64_t (**)(void *, uint64_t))(v79 + 48))(v78, v79);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v392);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v392, &demangling cache variable for type metadata for Conversation?);
  }
  char v80 = ConversationController.isOneToOneModeEnabled.getter();
  char v81 = static Platform.current.getter() != 3;
  MultiwayViewController.layoutIdiom.getter((BOOL *)v392);
  LOBYTE(v381[0]) = v392[0];
  id v82 = objc_allocWithZone((Class)type metadata accessor for CaptionsViewController());
  uint64_t v37 = (uint64_t)v354;
  swift_unknownObjectRetain();
  v361 = (char *)CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(v34, v75, v77, v78, (v80 & 1) == 0, v81, (unsigned __int8 *)v381, v37, v355);
  uint64_t v14 = 0;
  uint64_t v83 = 0;
  if (objc_msgSend(*(id *)&v72[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags], sel_reactionsEnabled))
  {
    id v84 = (id)TUPreferredFaceTimeBundleIdentifier();
    if (!v84)
    {
      uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v84 = (id)MEMORY[0x1C87730B0](v85);
      swift_bridgeObjectRelease();
    }
    int IsEffectSupportedForBundleID = AVControlCenterVideoEffectsModuleIsEffectSupportedForBundleID();

    if (IsEffectSupportedForBundleID)
    {
      uint64_t v87 = OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_7_101();
      id v88 = objc_allocWithZone((Class)type metadata accessor for VideoReactionPickerViewController(0));
      uint64_t v83 = (char *)VideoReactionPickerViewController.init(onReaction:)((uint64_t)partial apply for closure #2 in MultiwayViewController.viewDidLoad(), v87);
      OUTLINED_FUNCTION_19_6();
      uint64_t v90 = *(void (**)(void))(v89 + 128);
      uint64_t v91 = v83;
      v90(0);

      VideoReactionPickerTip.init()();
      OUTLINED_FUNCTION_31_13();
      uint64_t v37 = (uint64_t)v368;
      __swift_storeEnumTagSinglePayload(v92, v93, v94, (uint64_t)v368);
      uint64_t v95 = &v72[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
      OUTLINED_FUNCTION_6_1();
      uint64_t v96 = OUTLINED_FUNCTION_205_0();
      outlined assign with take of Participant?(v96, v97, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
      swift_endAccess();
      uint64_t v98 = (uint64_t)v95;
      uint64_t v99 = (uint64_t)v363;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v98, (uint64_t)v363, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
      OUTLINED_FUNCTION_33_0(v99, 1, v37);
      if (v100)
      {
        outlined destroy of SystemUpdateNotice?(v99, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
        uint64_t v14 = 0;
      }
      else
      {
        uint64_t v101 = (void (**)(id, uint64_t))v360;
        uint64_t v102 = v357;
        OUTLINED_FUNCTION_63_0();
        v103();
        v392[3] = v37;
        v392[4] = lazy protocol witness table accessor for type VideoReactionPickerTip and conformance VideoReactionPickerTip();
        __swift_allocate_boxed_opaque_existential_1(v392);
        OUTLINED_FUNCTION_2_1();
        v104();
        id v105 = objc_allocWithZone((Class)type metadata accessor for TipUIView());
        uint64_t v14 = (UIView *)TipUIView.init(_:arrowEdge:actionHandler:)();
        v101[1](v102, v37);
      }
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v83 = 0;
    }
  }
  uint64_t v0 = v72;
  uint64_t v106 = MultiwayViewController.conversationControlsManager.getter();
  if (!v106) {
    goto LABEL_145;
  }
  uint64_t v107 = v106;
  v368 = v83;
  v363 = v14;
  id v108 = objc_allocWithZone((Class)type metadata accessor for InCallBannerHostViewController());
  id v109 = InCallBannerHostViewController.init(controlsManager:)(v107);
  uint64_t v0 = v72;
  if (!MultiwayViewController.conversationControlsManager.getter()) {
    goto LABEL_146;
  }
  OUTLINED_FUNCTION_89();
  uint64_t v110 = objc_allocWithZone((Class)type metadata accessor for CallDetailsCoordinator());
  uint64_t v111 = v72;
  id v112 = specialized CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(v111, v72, v111, v110);
  uint64_t v113 = *(void **)&v111[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
  *(void *)&v111[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = v112;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIViewController?>);
  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = xmmword_1C3771450;
  long long v115 = v364;
  long long v116 = v365;
  long long v117 = v367;
  *(void *)(v114 + 32) = v365;
  *(void *)(v114 + 40) = v117;
  id v118 = v369;
  *(void *)(v114 + 48) = v369;
  *(void *)(v114 + 56) = v115;
  *(void *)(v114 + 64) = MultiwayViewController.effectsViewController.getter();
  *(void *)(v114 + 72) = v109;
  id v360 = v109;
  v119 = v361;
  *(void *)(v114 + 80) = 0;
  *(void *)(v114 + 88) = v119;
  uint64_t v120 = v368;
  *(void *)(v114 + 96) = v368;
  v392[0] = v114;
  specialized Array._endMutation()();
  uint64_t v0 = v119;
  uint64_t v121 = v392[0];
  long long v122 = v120;
  uint64_t ObjectType = (objc_class *)v111;
  v344 = v122;
  v371 = v116;
  v370 = v117;
  v357 = (char *)v118;
  v362 = v364;
  v369 = (char *)v360;
  v367 = v0;
  uint64_t v123 = 4;
  id v32 = &selRef_ringButton;
  uint64_t v34 = (uint64_t)&selRef_ringButton;
  uint64_t v14 = (UIView *)0x1E4FB1EC0;
  do
  {
    if ((unint64_t)(v123 - 4) >= *(void *)(v121 + 16))
    {
      __break(1u);
      goto LABEL_138;
    }
    long long v124 = *(void **)(v121 + 8 * v123);
    if (v124)
    {
      uint64_t v37 = v124;
      [(objc_class *)ObjectType addChildViewController:v37];
      uint64_t v125 = (char *)objc_msgSend((id)v37, sel_view);
      if (!v125)
      {

        __break(1u);
LABEL_140:

        __break(1u);
LABEL_141:

        __break(1u);
LABEL_142:

        __break(1u);
        goto LABEL_143;
      }
      uint64_t v0 = v125;
      objc_msgSend(v125, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      uint64_t v126 = (char *)OUTLINED_FUNCTION_55_17();
      if (!v126) {
        goto LABEL_140;
      }
      uint64_t v0 = v126;
      id v127 = objc_msgSend((id)v37, sel_view);
      if (!v127) {
        goto LABEL_141;
      }
      uint64_t v128 = v127;
      objc_msgSend(v0, sel_addSubview_, v127);

      objc_msgSend((id)v37, sel_didMoveToParentViewController_, ObjectType);
      uint64_t v0 = (char *)ObjectType;
      if ((MultiwayViewController.wantsStandardControls.getter() & 1) == 0)
      {
        uint64_t v0 = (char *)type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
        if ((static NSObject.== infix(_:_:)() & 1) == 0
          && (static NSObject.== infix(_:_:)() & 1) == 0
          && (static NSObject.== infix(_:_:)() & 1) == 0)
        {
          uint64_t v129 = (char *)objc_msgSend((id)v37, sel_view);
          if (!v129) {
            goto LABEL_142;
          }
          uint64_t v0 = v129;
          objc_msgSend(v129, sel_setHidden_, 1);
        }
      }
    }
    ++v123;
  }
  while (v123 != 13);
  swift_bridgeObjectRelease();
  char v130 = MultiwayViewController.wantsStandardControls.getter();
  uint64_t v131 = (BOOL *)&v369[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden];
  BOOL v132 = (v130 & 1) == 0;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v131 = v132;
  InCallBannerHostViewController.hideOrShowRootView()();
  uint64_t v133 = v371;
  uint64_t v134 = &v371[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate];
  OUTLINED_FUNCTION_11_0();
  *((void *)v134 + 1) = &protocol witness table for MultiwayViewController;
  swift_unknownObjectWeakAssign();
  uint64_t v135 = &v133[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate];
  OUTLINED_FUNCTION_11_0();
  *((void *)v135 + 1) = &protocol witness table for MultiwayViewController;
  swift_unknownObjectWeakAssign();
  uint64_t v136 = (char *)v370
       + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_11_0();
  *((void *)v136 + 1) = &protocol witness table for MultiwayViewController;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_176_3((uint64_t)&protocol witness table for MultiwayViewController);
  uint64_t v137 = v357;
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_176_3((uint64_t)&protocol witness table for MultiwayViewController);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_176_3((uint64_t)&protocol witness table for MultiwayViewController);
  OUTLINED_FUNCTION_1_21();
  OUTLINED_FUNCTION_174_4((uint64_t)&protocol witness table for MultiwayViewController);
  OUTLINED_FUNCTION_1_21();
  OUTLINED_FUNCTION_174_4((uint64_t)&protocol witness table for MultiwayViewController);
  MultiwayViewController.localVideoProvider.getter();
  uint64_t v138 = OUTLINED_FUNCTION_77_7();
  char v140 = v139(v138);
  uint64_t v141 = &v137[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled];
  OUTLINED_FUNCTION_11_0();
  *uint64_t v141 = v140 & 1;
  InCallControlsViewController.cinematicFramingIsEnabled.didset();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v392);
  BOOL v142 = MultiwayViewController.participantGridState.getter();
  uint64_t v143 = (uint64_t)v358;
  int v144 = v366;
  ConversationController.remoteOneToOneParticipant.getter();
  OUTLINED_FUNCTION_33_0(v143, 1, (uint64_t)v352);
  LODWORD(v343) = v142;
  if (v100)
  {
    outlined destroy of SystemUpdateNotice?(v143, &demangling cache variable for type metadata for Participant?);
    int v145 = v368;
  }
  else
  {
    uint64_t v146 = v143;
    uint64_t v147 = (uint64_t)v351;
    outlined init with take of Participant(v146, (uint64_t)v351);
    int v145 = v368;
    if (!v142) {
      ParticipantGridViewController.fullScreenFocus(on:)();
    }
    _s15ConversationKit11ParticipantVWOhTm_12(v147, (void (*)(void))type metadata accessor for Participant);
  }
  unsigned __int8 v148 = static Platform.current.getter();
  uint64_t v149 = ParticipantListViewController.participantCount.getter();
  if (ConversationController.supportsCameraBlur.getter()) {
    char v150 = MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
  }
  else {
    char v150 = 0;
  }
  char v151 = ConversationController.supportsReactionGestures.getter();
  char v152 = ConversationController.supportsStudioLight.getter();
  id v153 = objc_allocWithZone((Class)type metadata accessor for LocalParticipantView());
  uint64_t v154 = LocalParticipantView.init(isInRoster:supportsRotation:supportsCameraBlur:supportsReactions:supportsReactionGestures:supportsStudioLight:supportsCameraFlip:)(v149 > 0, 0, v150 & 1, v145 != 0, v151 & 1, v152 & 1, v148 < 2u);
  MultiwayViewController.updateVideoMessagingAvailableForCurrentState()();
  MultiwayViewController.localVideoProvider.getter();
  uint64_t v155 = OUTLINED_FUNCTION_77_7();
  v156(v155);
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v157 + 680))(v158 & 1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v392);
  MultiwayViewController.localVideoProvider.getter();
  __swift_project_boxed_opaque_existential_1(v392, v392[3]);
  uint64_t v159 = OUTLINED_FUNCTION_166();
  v160(v159);
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v161 + 704))(v162 & 1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v392);
  MultiwayViewController.localVideoProvider.getter();
  __swift_project_boxed_opaque_existential_1(v392, v392[3]);
  uint64_t v163 = OUTLINED_FUNCTION_166();
  v164(v163);
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v165 + 728))(v166 & 1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v392);
  v358 = v154;
  OUTLINED_FUNCTION_1_21();
  OUTLINED_FUNCTION_174_4((uint64_t)&protocol witness table for MultiwayViewController);
  v167 = (char *)objc_msgSend(v362, sel_view);
  uint64_t v168 = (char *)OUTLINED_FUNCTION_55_17();
  uint64_t v0 = v168;
  if (v167)
  {
    v169 = v167;
    id v170 = v168;
    if (v168) {
      goto LABEL_60;
    }

    __break(1u);
  }
  if (!v0) {
    goto LABEL_161;
  }
  v167 = (char *)objc_msgSend(v357, sel_view);
  v169 = v0;
  id v170 = v167;
  if (!v167)
  {
LABEL_162:

    __break(1u);
LABEL_163:

    __break(1u);
LABEL_164:

    __break(1u);
LABEL_165:

    __break(1u);
LABEL_166:

    __break(1u);
    goto LABEL_167;
  }
LABEL_60:
  objc_msgSend(v0, sel_insertSubview_belowSubview_, v358, v167);

  if ((MultiwayViewController.wantsStandardControls.getter() & 1) == 0)
  {
    v171 = (char *)v358 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden;
    OUTLINED_FUNCTION_11_0();
    char *v171 = 1;
    LocalParticipantView.requiresControlsHidden.didset();
  }
  uint64_t v172 = (char *)ObjectType + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  OUTLINED_FUNCTION_2();
  v173 = (char *)MEMORY[0x1C8776240](v172);
  if (v173)
  {
    uint64_t v0 = v173;
    uint64_t v34 = (uint64_t)objc_msgSend(v173, sel_callParticipantLabelsViewForViewController_, ObjectType);
    swift_unknownObjectRelease();
    if (v34)
    {
      id v174 = OUTLINED_FUNCTION_55_17();
      if (!v174) {
        goto LABEL_159;
      }
      v175 = v174;
      objc_msgSend(v174, sel_addSubview_, v34);
    }
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v176 = (char *)MEMORY[0x1C8776240](v172);
  if (v176)
  {
    uint64_t v0 = v176;
    uint64_t v37 = (uint64_t)objc_msgSend(v176, sel_bottomControlsViewForViewController_, ObjectType);
    swift_unknownObjectRelease();
    if (v37)
    {
      objc_msgSend((id)v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      id v177 = OUTLINED_FUNCTION_55_17();
      if (!v177) {
        goto LABEL_160;
      }
      id v178 = v177;
      objc_msgSend(v177, sel_addSubview_, v37);
    }
  }
  else
  {
    uint64_t v37 = 0;
  }
  uint64_t v179 = ParticipantListViewController.participantCount.getter();
  uint64_t v0 = (char *)ObjectType;
  id v349 = MultiwayViewController.createCornerButtonsViews(listViewControllerParticipantCount:)(v179);
  v342 = v182;
  v351 = (UIView *)v37;
  id v352 = (id)v34;
  v365 = v180;
  v361 = v181;
  if (v181)
  {
    uint64_t v34 = v181;
    id v183 = OUTLINED_FUNCTION_55_17();
    if (!v183) {
      goto LABEL_152;
    }
    v184 = v183;
    objc_msgSend(v183, sel_addSubview_, v34);
    goto LABEL_85;
  }
  long long v185 = v172;
  if (!v180)
  {
LABEL_79:
    id v190 = OUTLINED_FUNCTION_55_17();
    if (!v190) {
      goto LABEL_163;
    }
    v184 = v190;
    uint64_t v34 = (uint64_t)v365;
    if (v365)
    {
      v191 = v365;
    }
    else
    {
      id v192 = objc_msgSend(v133, sel_view);
      if (!v192) {
        goto LABEL_168;
      }
      uint64_t v34 = (uint64_t)v192;
      v191 = 0;
    }
    v193 = v191;
    objc_msgSend(v184, sel_insertSubview_aboveSubview_, v349, v34);
    uint64_t v172 = v185;
LABEL_85:

    v382 = 0;
    specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()();
    specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()();
    v341 = v172;
    v194 = (void *)MEMORY[0x1C8776240](v172);
    if (v194)
    {
      uint64_t v34 = (uint64_t)v194;
      v195 = &selRef_lagunaPullBackEnabled;
      if (objc_msgSend(v194, sel_respondsToSelector_, sel_customOverrideOneToOneShutterButtonForViewController_))
      {
        id v196 = objc_msgSend((id)v34, sel_customOverrideOneToOneShutterButtonForViewController_, ObjectType);
        OUTLINED_FUNCTION_375();
        swift_unknownObjectRelease();
        if (&selRef_lagunaPullBackEnabled) {
          goto LABEL_92;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    uint64_t v0 = (char *)ObjectType;
    if ((MultiwayViewController.wantsStandardControls.getter() & 1) == 0) {
      goto LABEL_96;
    }
    v195 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_init);
    v197 = (void *)specialized static UIImage.image(named:)(0);
    objc_msgSend(v195, sel_setImage_forState_, v197, 0);

LABEL_92:
    v382 = v195;
    uint64_t v0 = v195;
    objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    if (one-time initialization token for shutterButtonEnabled != -1) {
      swift_once();
    }
    objc_msgSend(v0, sel_setTintColor_, static Colors.ParticipantViews.shutterButtonEnabled);
    objc_msgSend(v0, sel_setContentVerticalAlignment_, 3);
    objc_msgSend(v0, sel_setContentHorizontalAlignment_, 3);
    v392[3] = (uint64_t)v340;
    v392[0] = (uint64_t)ObjectType;
    uint64_t v34 = (uint64_t)sel_didTapOneToOneShutterButton;
    v198 = ObjectType;
    UIButton.add(target:action:)((uint64_t)v392, (uint64_t)sel_didTapOneToOneShutterButton);
    outlined destroy of SystemUpdateNotice?((uint64_t)v392, &demangling cache variable for type metadata for Any?);
    id v199 = [(objc_class *)v198 view];
    if (!v199)
    {
LABEL_158:

      __break(1u);
LABEL_159:

      __break(1u);
LABEL_160:

      __break(1u);
LABEL_161:

      __break(1u);
      goto LABEL_162;
    }
    uint64_t v34 = (uint64_t)v199;
    objc_msgSend(v199, sel_addSubview_, v0);

LABEL_96:
    id v360 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantAlertView()), sel_init);
    if (v360)
    {
      uint64_t v37 = (uint64_t)v360;
      objc_msgSend((id)v37, sel_setHidden_, 1);
      objc_msgSend((id)v37, sel_setAlpha_, 0.0);
      id v200 = OUTLINED_FUNCTION_55_17();
      if (!v200) {
        goto LABEL_153;
      }
      v201 = v200;
      objc_msgSend(v200, sel_addSubview_, v37);

      LODWORD(v202) = 1148846080;
      objc_msgSend((id)v37, sel_setContentHuggingPriority_forAxis_, 0, v202);
      LODWORD(v203) = 1148846080;
      objc_msgSend((id)v37, sel_setContentCompressionResistancePriority_forAxis_, 0, v203);
      objc_msgSend((id)v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v0 = (char *)swift_allocObject();
      *((_OWORD *)v0 + 1) = xmmword_1C3769580;
      id v204 = objc_msgSend((id)v37, sel_topAnchor);
      id v205 = OUTLINED_FUNCTION_168_4();
      if (!v205)
      {
LABEL_154:

        __break(1u);
LABEL_155:

        __break(1u);
        goto LABEL_156;
      }
      v206 = v205;
      id v207 = objc_msgSend(v205, sel_topAnchor);

      id v208 = objc_msgSend((id)v34, sel_constraintEqualToAnchor_, v207);
      *((void *)v0 + 4) = v208;
      id v209 = objc_msgSend((id)v37, sel_bottomAnchor);
      id v210 = OUTLINED_FUNCTION_168_4();
      if (!v210) {
        goto LABEL_155;
      }
      v211 = v210;
      id v212 = objc_msgSend(v210, sel_bottomAnchor);

      id v213 = objc_msgSend((id)v34, sel_constraintEqualToAnchor_, v212);
      *((void *)v0 + 5) = v213;
      id v214 = objc_msgSend((id)v37, sel_widthAnchor);
      id v215 = OUTLINED_FUNCTION_168_4();
      if (!v215)
      {
LABEL_156:

        __break(1u);
LABEL_157:

        __break(1u);
        goto LABEL_158;
      }
      v216 = v215;
      id v217 = objc_msgSend(v215, sel_widthAnchor);

      id v218 = objc_msgSend((id)v34, sel_constraintLessThanOrEqualToAnchor_multiplier_, v217, 0.8);
      *((void *)v0 + 6) = v218;
      id v219 = objc_msgSend((id)v37, sel_centerXAnchor);
      id v220 = objc_msgSend(ObjectType, (SEL)&selRef_setDateFormat_);
      if (!v220) {
        goto LABEL_157;
      }
      v221 = v220;
      v222 = self;
      id v223 = objc_msgSend(v221, sel_centerXAnchor);

      id v224 = objc_msgSend(v219, sel_constraintEqualToAnchor_, v223);
      *((void *)v0 + 7) = v224;
      v392[0] = (uint64_t)v0;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v222, sel_activateConstraints_, isa);
    }
    uint64_t v14 = v363;
    if (v363
      && *((unsigned char *)ObjectType + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState) == 1)
    {
      uint64_t v0 = v363;
      objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      id v226 = OUTLINED_FUNCTION_55_17();
      if (!v226) {
        goto LABEL_164;
      }
      v227 = v226;
      objc_msgSend(v226, sel_addSubview_, v0);

      id v228 = OUTLINED_FUNCTION_55_17();
      if (!v228) {
        goto LABEL_165;
      }
      v229 = v228;
      objc_msgSend(v228, sel_bringSubviewToFront_, v0);
    }
    uint64_t v37 = ParticipantListViewController.participantCount.getter() > 0;
    v230 = &v369[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed];
    OUTLINED_FUNCTION_2();
    uint64_t v34 = *v230;
    uint64_t v0 = (char *)ObjectType;
    MultiwayViewController.layoutIdiom.getter((BOOL *)v392);
    LOBYTE(v381[0]) = v392[0];
    v231 = (char *)OUTLINED_FUNCTION_55_17();
    if (!v231) {
      goto LABEL_147;
    }
    v339 = v231;
    LODWORD(v340) = v37;
    id v338 = [(UIView *)v370 view];
    if (v338)
    {
      v380[0] = (v34 & 1) == 0;
      v232 = v144;
      LODWORD(v337) = ConversationController.isOneToOneModeEnabled.getter();
      ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
      LODWORD(v336) = v233;
      uint64_t v234 = *v356;
      swift_bridgeObjectRetain();
      LODWORD(v356) = ConversationController.hasRingingCalls.getter();
      LODWORD(v335) = ConversationController.isTrackingActiveConversation.getter();
      v235 = (id *)((char *)v232 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      OUTLINED_FUNCTION_2();
      v334 = (char *)*v235;
      ConversationController.isWaitingOnFirstRemoteFrame.getter();
      LODWORD(v333) = v236;
      LODWORD(v332) = ConversationController.isLocallyCreated.getter();
      v237 = (char *)v232 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      OUTLINED_FUNCTION_2();
      uint64_t v238 = *((void *)v237 + 1);
      uint64_t v239 = swift_getObjectType();
      v240 = *(uint64_t (**)(void, void))(v238 + 208);
      swift_unknownObjectRetain();
      LOBYTE(v239) = v240(v239, v238);
      swift_unknownObjectRelease();
      ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
      LOBYTE(v237) = *((unsigned char *)v232
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff);
      v366 = v232;

      v395[0] = v337 & 1;
      v395[1] = v336 & 1;
      uint64_t v396 = v234;
      char v397 = v356 & 1;
      char v398 = v335 & 1;
      v399 = v334;
      char v400 = v333 & 1;
      char v401 = v332 & 1;
      char v402 = v239 & 1;
      char v403 = (char)v237;
      LODWORD(v356) = MultiwayViewController.localParticipantState(for:)((uint64_t)v395);
      swift_bridgeObjectRelease();
      uint64_t v241 = v348;
      _s15ConversationKit11ParticipantVWOcTm_18(v350, v348);
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12(v241, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of CATransform3D?((uint64_t)v387, (uint64_t)&v388, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v388)
      {
        long long v348 = v389;
        long long v337 = v390;
        char v242 = v391;
        outlined release of LinearGradient((uint64_t)v387);
        long long v243 = v337;
        long long v244 = v348;
        char v245 = v242 & 1;
      }
      else
      {
        long long v244 = 0uLL;
        char v245 = 1;
        long long v243 = 0uLL;
      }
      v246 = v367;
      uint64_t v0 = v371;
      v393[0] = v244;
      v393[1] = v243;
      char v394 = v245;
      *(void *)&long long v337 = objc_msgSend(v362, sel_view);
      uint64_t v37 = ParticipantListViewController.participantCount.getter();
      v247 = v382;
      uint64_t v248 = OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_7_101();
      uint64_t v249 = OUTLINED_FUNCTION_26();
      *(void *)(v249 + 16) = v248;
      *(void *)(v249 + 24) = v247;
      uint64_t v336 = v249;
      uint64_t v34 = (uint64_t)ObjectType + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation;
      OUTLINED_FUNCTION_2();
      unint64_t v335 = *(void *)v34;
      v334 = v361;
      *(void *)&long long v348 = v248;
      swift_retain();
      v371 = (char *)v349;
      id v349 = v247;
      v250 = v247;
      v333 = v365;
      id v251 = objc_msgSend(v246, sel_view);
      if (v251)
      {
        v252 = v251;
        v379[0] = 0;
        BOOL v330 = v37 > 0;
        LOBYTE(v378[0]) = 0;
        LOBYTE(v377[0]) = 0;
        id v331 = objc_allocWithZone((Class)type metadata accessor for MultiwayViewConstraintsController());
        id v253 = v352;
        id v332 = v352;
        v254 = v0;
        v255 = v357;
        v256 = v369;
        v329 = v344;
        v257 = v363;
        v344 = v363;
        v258 = v358;
        v259 = v351;
        v357 = v351;
        v322 = v259;
        v321 = v253;
        v358 = (UIView *)v256;
        v260 = v254;
        v261 = v255;
        v262 = MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)((char *)v381, v339, v254, (char)v340, v338, (char)v343, v255, 0, 0, 0, v256, v380, v258, v356, (char *)v393, (void *)v337, 0, 0, 0,
                 v330,
                 v321,
                 v322,
                 v349,
                 (uint64_t)partial apply for specialized closure #3 in MultiwayViewController.viewDidLoad(),
                 v336,
                 v335,
                 v371,
                 v365,
                 v361,
                 v252,
                 v379,
                 v368,
                 (unsigned __int8 *)v378,
                 v257,
                 (unsigned __int8 *)v377,
                 0);
        swift_release();
        type metadata accessor for ParticipantViewDragController();
        uint64_t v263 = swift_allocObject();
        uint64_t v34 = v258;
        uint64_t v37 = specialized ParticipantViewDragController.init(participantView:constraintIdentifier:)((void *)v34, 0xD00000000000002ELL, 0x80000001C37B5B10, v263);
        uint64_t v0 = (char *)(v37 + 24);
        OUTLINED_FUNCTION_1_21();
        *(void *)(v37 + 32) = &protocol witness table for MultiwayViewController;
        swift_unknownObjectWeakAssign();
        if (!objc_msgSend(v367, sel_view)) {
          goto LABEL_150;
        }
        OUTLINED_FUNCTION_89();
        type metadata accessor for CaptionsViewDragController();
        swift_allocObject();
        v264 = (char *)CaptionsViewDragController.init(captionsView:)(v0);
        OUTLINED_FUNCTION_1_21();
        *((void *)v264 + 4) = &protocol witness table for MultiwayViewController;
        swift_unknownObjectWeakAssign();
        OUTLINED_FUNCTION_2();
        v356 = (uint64_t *)v382;
        v378[0] = v260;
        v265 = v370;
        v378[1] = v370;
        v378[2] = v261;
        v378[3] = v358;
        v378[5] = 0;
        v378[4] = 0;
        v378[6] = v262;
        id v349 = (id)v34;
        v378[7] = v34;
        v378[8] = 0;
        v378[9] = v364;
        v378[11] = 0;
        v378[10] = 0;
        v378[12] = v353;
        v378[13] = v352;
        v378[14] = v351;
        v378[15] = v382;
        v378[16] = v360;
        v266 = v367;
        v378[17] = v367;
        v378[18] = v37;
        v378[19] = v264;
        v378[20] = 0;
        v378[21] = v371;
        v378[22] = v365;
        id v352 = v262;
        v267 = v342;
        v378[23] = v342;
        v378[24] = v361;
        v378[25] = v368;
        v378[26] = v363;
        TPNumberPadCharacter.rawValue.getter(v378);
        v369 = (char *)v37;
        uint64_t v34 = v347;
        uint64_t v37 = (uint64_t)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?;
        outlined init with take of CATransform3D?(v347, (uint64_t)v379, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v378, v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        v343 = v267;
        v361 = v260;
        v351 = v265;
        v268 = v261;
        v362 = v362;
        *(void *)&long long v348 = v358;
        v342 = v266;
        v358 = v329;
        v340 = v334;
        v367 = v344;
        v344 = v371;
        v339 = v333;
        v371 = (char *)v349;
        v365 = v357;
        v364 = (char *)v332;
        swift_retain();
        v363 = (UIView *)v264;
        swift_retain();
        v370 = (UIView *)v352;
        v269 = v353;
        v270 = v356;
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v379);
        outlined init with take of CATransform3D?(v34, (uint64_t)v380, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v380, (uint64_t)v381, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        uint64_t v271 = OUTLINED_FUNCTION_6_112(v381);
        uint64_t v272 = (uint64_t)v359;
        if (!v100)
        {
          id v273 = *(id *)(v34 + 48);
          if (static Platform.current.getter()) {
            uint64_t v274 = 0x405C800000000000;
          }
          else {
            uint64_t v274 = 0x4055400000000000;
          }
          MultiwayViewConstraintsController.configure(rosterCellWidth:)((id)v274, 0);
        }
        uint64_t v0 = (char *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?;
        OUTLINED_FUNCTION_116_4(v271, (uint64_t)v376);
        outlined init with take of CATransform3D?((uint64_t)v376, (uint64_t)v377, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        OUTLINED_FUNCTION_6_112(v377);
        if (!v100)
        {
          v357 = (char *)v269;
          memcpy(v392, v377, sizeof(v392));
          v275 = (uint64_t *)MultiwayViewController.ViewContent.participantsViewControllers.getter();
          uint64_t v276 = v275[2];
          v368 = v268;
          if (v276)
          {
            uint64_t v34 = (uint64_t)v366 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
            v356 = v275;
            uint64_t v277 = (uint64_t)(v275 + 4);
            OUTLINED_FUNCTION_2();
            uint64_t v278 = v350;
            do
            {
              outlined init with copy of IDSLookupManager(v277, (uint64_t)v373);
              uint64_t v279 = v374;
              uint64_t v280 = v375;
              __swift_project_boxed_opaque_existential_1(v373, v374);
              _s15ConversationKit11ParticipantVWOcTm_18(v278, v272);
              (*(void (**)(uint64_t, void, void, void, uint64_t, uint64_t))(v280 + 48))(v272, *(void *)v34, *(void *)(v34 + 8), *(unsigned __int8 *)(v34 + 16), v279, v280);
              _s15ConversationKit11ParticipantVWOhTm_12(v272, (void (*)(void))type metadata accessor for Participant);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v373);
              v277 += 40;
              --v276;
            }
            while (v276);
            swift_bridgeObjectRelease();
            v268 = v368;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v281 = v366;
          ConversationController.messagesGroupName.getter();
          OUTLINED_FUNCTION_47_6();
          v282 = (uint64_t **)&v268[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_groupName];
          OUTLINED_FUNCTION_11_0();
          *v282 = v281;
          v282[1] = (uint64_t *)v34;
          swift_bridgeObjectRelease();
          v283 = (void *)ConversationController.audioRoute.getter();
          InCallControlsViewController.updateAudioRouteButton(for:)();

          MultiwayViewController.updateVideoState()();
          v284 = (void *)ConversationController.audioRoute.getter();
          MultiwayViewController.updateAudioRouteButton(for:)();

          MultiwayViewController.updateFloatingLocalParticpantView()();
          MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
          v285 = (char *)v370 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState;
          OUTLINED_FUNCTION_2();
          MultiwayViewController.updateViewVisibility(localParticipantState:)(*v285);
          LocalParticipantView.updateControlsAlpha(animated:)(0);
          v286 = (void *)MEMORY[0x1C8776240](v341);
          if (v286)
          {
            v287 = v286;
            if (objc_msgSend(v286, sel_respondsToSelector_, sel_viewController_pipSourceProviderNeedsUpdate_))objc_msgSend(v287, sel_viewController_pipSourceProviderNeedsUpdate_, ObjectType, ObjectType); {
            swift_unknownObjectRelease();
            }
          }
          if (MultiwayViewController.isOnScreen.getter())
          {
            v288 = CFNotificationCenterGetDarwinNotifyCenter();
            if (one-time initialization token for ICSIsOnScreenNotification != -1) {
              swift_once();
            }
            CFNotificationCenterPostNotification(v288, (CFNotificationName)static MultiwayViewController.ICSIsOnScreenNotification, 0, 0, 1u);
          }
          MultiwayViewController.updateChangeLayoutButtonAppearanceState()();
          MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
          MultiwayViewController.updateDeskViewButtonVisibility()();
          MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
          MultiwayViewController.updateScreenSharingBlurIfNeeded()();
          MultiwayViewController.registerCaptioningStateObservers()();
          MultiwayViewController.playOutgoingGFTRingtoneIfNeeded()();
          uint64_t v289 = swift_getObjectType();
          if ((*(uint64_t (**)(uint64_t))(v355 + 600))(v289))
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Map<Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>, (VideoMessageController.State, VideoMessageController.State)>, NSRunLoop>);
            v354 = v324;
            OUTLINED_FUNCTION_4();
            id v352 = v290;
            v353 = v291;
            MEMORY[0x1F4188790](v290);
            OUTLINED_FUNCTION_2_3();
            uint64_t v350 = v292;
            uint64_t v355 = OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController;
            OUTLINED_FUNCTION_14_2();
            v294 = *(void (**)(void))(v293 + 264);
            id v296 = v295;
            v294();

            v359 = (char **)MEMORY[0x1E4F1AC68];
            lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher);
            lazy protocol witness table accessor for type VideoMessageController.State and conformance VideoMessageController.State();
            OUTLINED_FUNCTION_4_18();
            Publisher<>.removeDuplicates()();
            OUTLINED_FUNCTION_43();
            OUTLINED_FUNCTION_26_2();
            v297();
            OUTLINED_FUNCTION_20();
            OUTLINED_FUNCTION_7_101();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (VideoMessageController.State, VideoMessageController.State));
            v356 = (uint64_t *)MEMORY[0x1E4F1A910];
            lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher> and conformance Publishers.RemoveDuplicates<A>);
            uint64_t v298 = v325;
            Publisher.map<A>(_:)();
            swift_release();
            OUTLINED_FUNCTION_48_3();
            OUTLINED_FUNCTION_26_2();
            v299();
            id v372 = objc_msgSend(self, sel_mainRunLoop);
            uint64_t v300 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
            uint64_t v301 = OUTLINED_FUNCTION_8(v300);
            MEMORY[0x1F4188790](v301);
            OUTLINED_FUNCTION_21_1();
            uint64_t v302 = type metadata accessor for NSRunLoop.SchedulerOptions();
            OUTLINED_FUNCTION_25_1(v298, v303, v304, v302);
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
            lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Publishers.Map<Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>, (VideoMessageController.State, VideoMessageController.State)> and conformance Publishers.Map<A, B>);
            _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWlTm_1((uint64_t)&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop);
            uint64_t v305 = v350;
            Publisher.receive<A>(on:options:)();
            outlined destroy of SystemUpdateNotice?(v298, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

            OUTLINED_FUNCTION_26_2();
            v306();
            uint64_t v307 = OUTLINED_FUNCTION_20();
            OUTLINED_FUNCTION_7_101();
            uint64_t v308 = OUTLINED_FUNCTION_26();
            *(void *)(v308 + 16) = partial apply for closure #5 in MultiwayViewController.viewDidLoad();
            *(void *)(v308 + 24) = v307;
            lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.Map<Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>, (VideoMessageController.State, VideoMessageController.State)>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>);
            Publisher<>.sink(receiveValue:)();
            swift_release();
            OUTLINED_FUNCTION_26_2();
            v309();
            v354 = (uint64_t *)((char *)ObjectType
                             + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions);
            OUTLINED_FUNCTION_6_1();
            AnyCancellable.store(in:)();
            swift_endAccess();
            swift_release();
            id v352 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<URL?>.Publisher>);
            v353 = v324;
            OUTLINED_FUNCTION_4();
            uint64_t v311 = v310;
            MEMORY[0x1F4188790](v312);
            OUTLINED_FUNCTION_5_1();
            v313 = *(void **)((char *)v366 + v355);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<URL?>.Publisher);
            v366 = v324;
            OUTLINED_FUNCTION_4();
            MEMORY[0x1F4188790](v314);
            OUTLINED_FUNCTION_36_4();
            OUTLINED_FUNCTION_0_3();
            v316 = *(void (**)(void))(v315 + 552);
            id v317 = v313;
            v316();

            lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Published<URL?>.Publisher and conformance Published<A>.Publisher);
            lazy protocol witness table accessor for type URL? and conformance <A> A?();
            OUTLINED_FUNCTION_4_18();
            Publisher<>.removeDuplicates()();
            OUTLINED_FUNCTION_12_1();
            v318();
            v268 = v368;
            OUTLINED_FUNCTION_20();
            OUTLINED_FUNCTION_7_101();
            lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<URL?>.Publisher> and conformance Publishers.RemoveDuplicates<A>);
            id v319 = v352;
            Publisher<>.sink(receiveValue:)();
            swift_release();
            (*(void (**)(uint64_t, id))(v311 + 8))(v305, v319);
            OUTLINED_FUNCTION_6_1();
            AnyCancellable.store(in:)();
            swift_endAccess();
            swift_release();
          }

          swift_release();
          swift_release();

          swift_release();
          v320 = v382;

          OUTLINED_FUNCTION_33_2();
          return;
        }
        goto LABEL_151;
      }
LABEL_149:

      __break(1u);
LABEL_150:

      __break(1u);
LABEL_151:

      __break(1u);
LABEL_152:

      __break(1u);
LABEL_153:

      __break(1u);
      goto LABEL_154;
    }
LABEL_148:

    __break(1u);
    goto LABEL_149;
  }
  uint64_t v0 = v365;
  id v186 = OUTLINED_FUNCTION_55_17();
  if (!v186) {
    goto LABEL_166;
  }
  v187 = v186;
  id v188 = objc_msgSend(v133, sel_view);
  if (v188)
  {
    v189 = v188;
    objc_msgSend(v187, sel_insertSubview_aboveSubview_, v0, v188);

    goto LABEL_79;
  }
LABEL_167:

  __break(1u);
LABEL_168:

  __break(1u);
}

void MultiwayViewController.updateAdditionalSafeAreaInsets()()
{
  uint64_t v1 = v0;
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v2 = static Defaults.shared;
  (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
  uint64_t v3 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v2 + 488))(v3);
  int v4 = SBUIIsSystemApertureEnabled();
  id v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  if (v4) {
    double v7 = 0.0;
  }
  else {
    double v7 = 10.0;
  }
  objc_msgSend(v5, sel_safeAreaInsets);
  double v9 = v8;

  v10.n128_f64[0] = static Layout.MediaPip.padding.getter();
  uint64_t v11 = static Defaults.shared;
  (*(void (**)(__n128))(*(void *)static Defaults.shared + 384))(v10);
  uint64_t v12 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v11 + 488))(v12);
  id v13 = objc_msgSend(v1, sel_view);
  if (!v13) {
    goto LABEL_14;
  }
  uint64_t v14 = v13;
  double v15 = v7 - v9;
  objc_msgSend(v13, sel_safeAreaInsets);
  double v17 = v16;

  double v18 = 16.0 - v17;
  if (v15 > 0.0 || v18 > 0.0)
  {
    objc_msgSend(v1, sel_additionalSafeAreaInsets);
    double v20 = v15 + v19;
    objc_msgSend(v1, sel_setAdditionalSafeAreaInsets_, v20);
  }
}

uint64_t closure #1 in MultiwayViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    int v4 = (void *)v3;
    char v5 = MultiwayViewController.participantIsShownInGrid(_:)();
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t MultiwayViewController.participantIsShownInGrid(_:)()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v11) == 1)
  {
    char v2 = 0;
  }
  else
  {
    id v3 = *(id *)(v1 + 8);
    ParticipantGridViewController.participantIdentifiers.getter();
    uint64_t v5 = v4;
    uint64_t v6 = type metadata accessor for Participant(0);
    MEMORY[0x1F4188790](v6);
    _OWORD v9[2] = v7;
    char v2 = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)v9, v5);

    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

void MultiwayViewController.captionsLayoutState.getter(char *a1@<X8>)
{
  uint64_t v2 = MultiwayViewController.constraintController.getter();
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
    OUTLINED_FUNCTION_2();
    char v5 = *v4;
  }
  else
  {
    char v5 = 3;
  }
  *a1 = v5;
}

BOOL MultiwayViewController.shouldShowActionTypePhotoCapture.getter()
{
  uint64_t v0 = (void *)MultiwayViewController.call.getter();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADC18]), sel_initWithCall_, v0);

  id v2 = ConversationController.momentsController.getter();
  id v3 = objc_msgSend(v2, sel_capabilitiesForProvider_, v1);

  LODWORD(v2) = objc_msgSend(v3, sel_availability);
  return v2 != 2;
}

void closure #2 in MultiwayViewController.viewDidLoad()(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (void *)v4;
    MultiwayViewController.react(_:)(a1);
  }
}

void MultiwayViewController.react(_:)(char a1)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769620;
  uint64_t v3 = String.init<A>(reflecting:)();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_videoDeviceController);

  id v8 = objc_msgSend(v7, sel_currentInputDevice);
  if (v8)
  {
    id v9 = VideoReaction.rawValue.getter(a1);
    id v10 = (id)TUPreferredFaceTimeBundleIdentifier();
    if (!v10)
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v10 = (id)MEMORY[0x1C87730B0](v11);
      swift_bridgeObjectRelease();
    }
    AVControlCenterVideoEffectsModulePerformReactionEffect();
  }
}

uint64_t MultiwayViewController.wantsStandardControls.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (!v2) {
    return 1;
  }
  id v3 = objc_msgSend(v2, sel_wantsStandardControls);
  swift_unknownObjectRelease();
  return (uint64_t)v3;
}

uint64_t MultiwayViewController.localVideoProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  swift_beginAccess();
  outlined init with copy of IDSLookupManager(v1, (uint64_t)v5);
  uint64_t v2 = v6;
  uint64_t v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

BOOL MultiwayViewController.participantGridState.getter()
{
  BOOL result = 1;
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    if (static Platform.current.getter() == 3) {
      return 0;
    }
    uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v4, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v5) == 1) {
      return 0;
    }
    uint64_t v2 = (unsigned char *)(*(void *)(v1 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
    swift_beginAccess();
    if (*v2 != 2) {
      return 0;
    }
  }
  return result;
}

void MultiwayViewController.updateVideoMessagingAvailableForCurrentState()()
{
  char v1 = MultiwayViewController.shouldEnableVideoMessagingForCurrentState()();
  uint64_t v2 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  uint64_t v3 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x1A8);
  uint64_t v4 = v2;
  v3(v1 & 1);
}

uint64_t MultiwayViewController.localParticipantState(for:)(uint64_t a1)
{
  uint64_t v134 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v134);
  uint64_t v135 = (uint64_t)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v138 = (uint64_t)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for Participant(0);
  uint64_t v6 = MEMORY[0x1F4188790](v137);
  uint64_t v136 = (uint64_t)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v134 - v8;
  unsigned int v139 = MultiwayViewController.localParticipantCornerToUse.getter();
  uint64_t v141 = v1;
  uint64_t v142 = a1;
  char v10 = *(unsigned char *)(a1 + 16);
  uint64_t v140 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  uint64_t v11 = v140 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 184);
  swift_unknownObjectRetain();
  LODWORD(v12) = v14(ObjectType, v12);
  swift_unknownObjectRelease();
  if (v12 == 5
    || (uint64_t v15 = *(void *)(v11 + 8),
        uint64_t v16 = swift_getObjectType(),
        double v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v15) = v17(v16, v15),
        swift_unknownObjectRelease(),
        v15 == 6))
  {
    uint64_t v18 = *(void *)(v11 + 8);
    uint64_t v19 = swift_getObjectType();
    double v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 520);
    swift_unknownObjectRetain();
    unsigned __int8 v21 = v20(v19, v18);
    swift_unknownObjectRelease();
    uint64_t v22 = v142;
    if ((v10 & 1) != 0 || (((*(unsigned char *)(v142 + 34) & 1) == 0) & v21) == 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v22 = v142;
    if (v10 & 1) != 0 || (*(unsigned char *)(v142 + 34))
    {
LABEL_15:
      if (one-time initialization token for logger != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      __swift_project_value_buffer(v35, (uint64_t)logger);
      outlined retain of String(v22);
      outlined retain of String(v22);
      os_log_type_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        BOOL v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        v148[0] = v39;
        *(_DWORD *)BOOL v38 = 136315138;
        long long v40 = *(_OWORD *)(v22 + 16);
        long long v149 = *(_OWORD *)v22;
        long long v150 = v40;
        int v151 = *(_DWORD *)(v22 + 32);
        outlined retain of String(v22);
        uint64_t v41 = String.init<A>(reflecting:)();
        *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v148);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined release of String(v22);
        outlined release of String(v22);
        uint64_t v43 = "localParticipantState for %s is .fullScreen for disconnecting or disconnected not answered calls, ringing or hold music";
LABEL_19:
        _os_log_impl(&dword_1C2F90000, v36, v37, v43, v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v39, -1, -1);
        MEMORY[0x1C87760E0](v38, -1, -1);
LABEL_73:

        return 129;
      }
      goto LABEL_72;
    }
  }
  uint64_t v23 = v141;
  uint64_t v24 = v141 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v24, (uint64_t)v147, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v147, (uint64_t)v148, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v148) != 1)
  {
    uint64_t v25 = (unsigned __int8 *)(v148[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    if (*v25 == 128)
    {
      uint64_t v26 = v140 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_18(v26, (uint64_t)v9);
      outlined init with take of CATransform3D?((uint64_t)v147, (uint64_t)&v149, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)&v149);
      LOBYTE(v26) = Participant.isActiveWithVideo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      if (v26)
      {
        if (one-time initialization token for logger != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        __swift_project_value_buffer(v27, (uint64_t)logger);
        outlined retain of String(v22);
        outlined retain of String(v22);
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          double v30 = (uint8_t *)swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          v144[0] = v31;
          *(_DWORD *)double v30 = 136315138;
          long long v32 = *(_OWORD *)(v22 + 16);
          v145[0] = *(_OWORD *)v22;
          v145[1] = v32;
          int v146 = *(_DWORD *)(v22 + 32);
          outlined retain of String(v22);
          uint64_t v33 = String.init<A>(reflecting:)();
          *(void *)&v145[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v144);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(v22);
          outlined release of String(v22);
          _os_log_impl(&dword_1C2F90000, v28, v29, "localParticipantState for %s is .expanded", v30, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v31, -1, -1);
          MEMORY[0x1C87760E0](v30, -1, -1);

          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v147);
        }
        else
        {
          outlined release of String(v22);
          outlined release of String(v22);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v147);
        }
        return 128;
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v147);
    }
  }
  char v44 = *(unsigned char *)v22;
  if (*(unsigned char *)v22)
  {
    uint64_t v45 = *(void *)(v22 + 8);
    if (*(void *)(v45 + 16) == 1)
    {
      uint64_t v46 = v138;
      specialized Collection.first.getter(v45, v138);
      if (__swift_getEnumTagSinglePayload(v46, 1, v137) == 1)
      {
        outlined destroy of SystemUpdateNotice?(v46, &demangling cache variable for type metadata for Participant?);
        goto LABEL_68;
      }
      uint64_t v84 = v136;
      outlined init with take of Participant(v46, v136);
      uint64_t v85 = v135;
      _s15ConversationKit11ParticipantVWOcTm_18(v84, v135);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        _s15ConversationKit11ParticipantVWOhTm_12(v84, (void (*)(void))type metadata accessor for Participant);
        uint64_t v89 = type metadata accessor for Participant.State;
        uint64_t v90 = v85;
        goto LABEL_67;
      }
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v87 = v85 + *(int *)(v86 + 48);
      outlined consume of Participant.CopresenceInfo?(*(void *)(v85 + *(int *)(v86 + 64)), *(void *)(v85 + *(int *)(v86 + 64) + 8));
      outlined destroy of Participant.MediaInfo(v87);
      uint64_t v88 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v85, v88);
      if ((*(unsigned char *)(v22 + 17) & 1) == 0)
      {
        uint64_t v89 = type metadata accessor for Participant;
        uint64_t v90 = v84;
LABEL_67:
        _s15ConversationKit11ParticipantVWOhTm_12(v90, (void (*)(void))v89);
LABEL_68:
        if (one-time initialization token for logger != -1) {
          swift_once();
        }
        uint64_t v92 = type metadata accessor for Logger();
        __swift_project_value_buffer(v92, (uint64_t)logger);
        outlined retain of String(v22);
        outlined retain of String(v22);
        os_log_type_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v36, v37))
        {
          BOOL v38 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          *(void *)&v145[0] = v39;
          *(_DWORD *)BOOL v38 = 136315138;
          long long v93 = *(_OWORD *)(v22 + 16);
          long long v149 = *(_OWORD *)v22;
          long long v150 = v93;
          int v151 = *(_DWORD *)(v22 + 32);
          outlined retain of String(v22);
          uint64_t v94 = String.init<A>(reflecting:)();
          *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v95, (uint64_t *)v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(v22);
          outlined release of String(v22);
          uint64_t v43 = "localParticipantState for %s is .fullScreen for oneToOne without isTrackingActiveConversation";
          goto LABEL_19;
        }
        goto LABEL_72;
      }
      if objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled, v134)&& (*(unsigned char *)(v22 + 1))
      {
        if (one-time initialization token for logger != -1) {
          swift_once();
        }
        uint64_t v124 = type metadata accessor for Logger();
        __swift_project_value_buffer(v124, (uint64_t)logger);
        outlined retain of String(v22);
        outlined retain of String(v22);
        id v108 = Logger.logObject.getter();
        os_log_type_t v125 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v108, v125))
        {
          uint64_t v110 = swift_slowAlloc();
          uint64_t v126 = swift_slowAlloc();
          uint64_t v138 = v24;
          uint64_t v112 = v126;
          *(void *)&v145[0] = v126;
          *(_DWORD *)uint64_t v110 = 136315650;
          long long v127 = *(_OWORD *)(v22 + 16);
          long long v149 = *(_OWORD *)v22;
          long long v150 = v127;
          int v151 = *(_DWORD *)(v22 + 32);
          outlined retain of String(v22);
          uint64_t v128 = String.init<A>(reflecting:)();
          *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v128, v129, (uint64_t *)v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(v22);
          outlined release of String(v22);
          *(_WORD *)(v110 + 12) = 2080;
          uint64_t v116 = v139;
          LOBYTE(v149) = v139;
          uint64_t v130 = String.init<A>(reflecting:)();
          *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v110 + 22) = 1024;
          LODWORD(v149) = 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v119 = "localParticipantState for %s is localParticipantCornerSize for cornerToUse %s in oneToOne with shouldIg"
                 "noreWaitingOnFirstFrame: %{BOOL}d";
          uint64_t v120 = v108;
          os_log_type_t v121 = v125;
          long long v122 = (uint8_t *)v110;
          uint32_t v123 = 28;
          goto LABEL_95;
        }
LABEL_96:
        outlined release of String(v22);
        outlined release of String(v22);

        uint64_t v116 = v139;
        goto LABEL_97;
      }
      outlined init with take of CATransform3D?(v24, (uint64_t)v144, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v144, (uint64_t)v145, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType((uint64_t *)v145) == 1)
      {
        if ((*(unsigned char *)(v22 + 32) & 1) == 0) {
          goto LABEL_87;
        }
      }
      else
      {
        uint64_t v97 = (unsigned __int8 *)(*(void *)(v24 + 48)
                                + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if ((*(unsigned char *)(v22 + 32) & 1) == 0 || *v97 != 129)
        {
LABEL_87:
          if (one-time initialization token for logger != -1) {
            swift_once();
          }
          uint64_t v107 = type metadata accessor for Logger();
          __swift_project_value_buffer(v107, (uint64_t)logger);
          outlined retain of String(v22);
          outlined retain of String(v22);
          id v108 = Logger.logObject.getter();
          os_log_type_t v109 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v108, v109))
          {
            uint64_t v110 = swift_slowAlloc();
            uint64_t v111 = swift_slowAlloc();
            uint64_t v138 = v24;
            uint64_t v112 = v111;
            v143[0] = v111;
            *(_DWORD *)uint64_t v110 = 136315394;
            long long v113 = *(_OWORD *)(v22 + 16);
            long long v149 = *(_OWORD *)v22;
            long long v150 = v113;
            int v151 = *(_DWORD *)(v22 + 32);
            outlined retain of String(v22);
            uint64_t v114 = String.init<A>(reflecting:)();
            *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v114, v115, v143);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined release of String(v22);
            outlined release of String(v22);
            *(_WORD *)(v110 + 12) = 2080;
            uint64_t v116 = v139;
            LOBYTE(v149) = v139;
            uint64_t v117 = String.init<A>(reflecting:)();
            *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v117, v118, v143);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v119 = "localParticipantState for %s is localParticipantCornerSize for cornerToUse %s in oneToOne";
            uint64_t v120 = v108;
            os_log_type_t v121 = v109;
            long long v122 = (uint8_t *)v110;
            uint32_t v123 = 22;
LABEL_95:
            _os_log_impl(&dword_1C2F90000, v120, v121, v119, v122, v123);
            swift_arrayDestroy();
            uint64_t v132 = v112;
            uint64_t v24 = v138;
            MEMORY[0x1C87760E0](v132, -1, -1);
            uint64_t v133 = v110;
            uint64_t v84 = v136;
            MEMORY[0x1C87760E0](v133, -1, -1);

LABEL_97:
            outlined init with take of CATransform3D?(v24, (uint64_t)&v149, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v149);
            uint64_t v91 = MultiwayViewController.localParticipantCornerSize(for:viewContent:)(v116, (uint64_t)&v149);
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v149);
            _s15ConversationKit11ParticipantVWOhTm_12(v84, (void (*)(void))type metadata accessor for Participant);
            return v91;
          }
          goto LABEL_96;
        }
      }
      if (one-time initialization token for logger != -1) {
        swift_once();
      }
      uint64_t v98 = type metadata accessor for Logger();
      __swift_project_value_buffer(v98, (uint64_t)logger);
      outlined retain of String(v22);
      outlined retain of String(v22);
      uint64_t v99 = Logger.logObject.getter();
      os_log_type_t v100 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        uint64_t v102 = swift_slowAlloc();
        v143[0] = v102;
        *(_DWORD *)uint64_t v101 = 136315138;
        long long v103 = *(_OWORD *)(v22 + 16);
        long long v149 = *(_OWORD *)v22;
        long long v150 = v103;
        int v151 = *(_DWORD *)(v22 + 32);
        outlined retain of String(v22);
        uint64_t v104 = String.init<A>(reflecting:)();
        *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v104, v105, v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined release of String(v22);
        outlined release of String(v22);
        _os_log_impl(&dword_1C2F90000, v99, v100, "localParticipantState for %s is .fullScreen for oneToOne waitingOnFirstRemoteFrame and isCurrentlyFullScreen", v101, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v102, -1, -1);
        MEMORY[0x1C87760E0](v101, -1, -1);

        uint64_t v106 = v136;
      }
      else
      {

        outlined release of String(v22);
        outlined release of String(v22);
        uint64_t v106 = v84;
      }
      _s15ConversationKit11ParticipantVWOhTm_12(v106, (void (*)(void))type metadata accessor for Participant);
      return 129;
    }
  }
  uint64_t v138 = v24;
  unsigned __int8 v47 = *(unsigned char *)(v22 + 32);
  if (v47)
  {
    uint64_t v48 = *(void *)(v22 + 24);
    if (v48 != 3)
    {
      uint64_t v49 = *(void *)(v11 + 8);
      uint64_t v50 = swift_getObjectType();
      uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 184);
      swift_unknownObjectRetain();
      int v52 = v51(v50, v49);
      uint64_t v23 = v141;
      uint64_t v22 = v142;
      LODWORD(v49) = v52;
      swift_unknownObjectRelease();
      if (v49 != 3) {
        goto LABEL_36;
      }
      uint64_t v53 = (void *)MultiwayViewController.call.getter();
      unsigned __int8 v54 = objc_msgSend(v53, sel_isIncoming, v134);

      if ((v54 & 1) == 0 && (v48 | 2) != 2) {
        goto LABEL_36;
      }
      uint64_t v55 = *(void *)(v11 + 8);
      uint64_t v56 = swift_getObjectType();
      id v57 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 184);
      swift_unknownObjectRetain();
      int v58 = v57(v56, v55);
      uint64_t v22 = v142;
      LODWORD(v55) = v58;
      swift_unknownObjectRelease();
      BOOL v59 = v55 == 3 && (v48 | 2) == 2;
      if (v59 && ConversationController.conversationHasActiveRemoteParticipants.getter())
      {
LABEL_36:
        if (one-time initialization token for logger != -1) {
          swift_once();
        }
        uint64_t v60 = type metadata accessor for Logger();
        __swift_project_value_buffer(v60, (uint64_t)logger);
        outlined retain of String(v22);
        outlined retain of String(v22);
        os_log_type_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v36, v37))
        {
          BOOL v38 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          *(void *)&v145[0] = v39;
          *(_DWORD *)BOOL v38 = 136315138;
          long long v61 = *(_OWORD *)(v22 + 16);
          long long v149 = *(_OWORD *)v22;
          long long v150 = v61;
          int v151 = *(_DWORD *)(v22 + 32);
          outlined retain of String(v22);
          uint64_t v62 = String.init<A>(reflecting:)();
          *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, (uint64_t *)v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(v22);
          outlined release of String(v22);
          uint64_t v43 = "localParticipantState for %s is .fullScreen for unjoined isWaitingOnFirstRemoteFrame with conversationHa"
                "sActiveRemoteParticipants";
          goto LABEL_19;
        }
LABEL_72:
        outlined release of String(v22);
        outlined release of String(v22);
        goto LABEL_73;
      }
    }
  }
  uint64_t v64 = *(void *)(v22 + 24);
  switch(v64)
  {
    case 2:
      goto LABEL_43;
    case 1:
      goto LABEL_44;
    case 0:
LABEL_43:
      if ((*(unsigned char *)(v22 + 33) & 1) == 0)
      {
LABEL_44:
        if (one-time initialization token for logger != -1) {
          swift_once();
        }
        uint64_t v65 = type metadata accessor for Logger();
        __swift_project_value_buffer(v65, (uint64_t)logger);
        outlined retain of String(v22);
        outlined retain of String(v22);
        os_log_type_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v36, v37))
        {
          BOOL v38 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          *(void *)&v145[0] = v39;
          *(_DWORD *)BOOL v38 = 136315138;
          long long v66 = *(_OWORD *)(v22 + 16);
          long long v149 = *(_OWORD *)v22;
          long long v150 = v66;
          int v151 = *(_DWORD *)(v22 + 32);
          outlined retain of String(v22);
          uint64_t v67 = String.init<A>(reflecting:)();
          *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, (uint64_t *)v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(v22);
          outlined release of String(v22);
          uint64_t v43 = "localParticipantState for %s is .fullscreen since we are in staging";
          goto LABEL_19;
        }
        goto LABEL_72;
      }
      break;
  }
  if (objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled, v134)&& (v44 & 1 & v47) != 0&& v64 == 3)
  {
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    __swift_project_value_buffer(v69, (uint64_t)logger);
    outlined retain of String(v22);
    outlined retain of String(v22);
    os_log_type_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      BOOL v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(void *)&v145[0] = v39;
      *(_DWORD *)BOOL v38 = 136315138;
      long long v70 = *(_OWORD *)(v22 + 16);
      long long v149 = *(_OWORD *)v22;
      long long v150 = v70;
      int v151 = *(_DWORD *)(v22 + 32);
      outlined retain of String(v22);
      uint64_t v71 = String.init<A>(reflecting:)();
      *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, (uint64_t *)v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of String(v22);
      outlined release of String(v22);
      uint64_t v43 = "localParticipantState for %s is .fullscreen while waiting for remote frame";
      goto LABEL_19;
    }
    goto LABEL_72;
  }
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v73 = type metadata accessor for Logger();
  __swift_project_value_buffer(v73, (uint64_t)logger);
  outlined retain of String(v22);
  outlined retain of String(v22);
  uint64_t v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    *(void *)&v145[0] = v77;
    *(_DWORD *)uint64_t v76 = 136315394;
    long long v78 = *(_OWORD *)(v22 + 16);
    long long v149 = *(_OWORD *)v22;
    long long v150 = v78;
    int v151 = *(_DWORD *)(v22 + 32);
    outlined retain of String(v22);
    uint64_t v79 = String.init<A>(reflecting:)();
    *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, (uint64_t *)v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined release of String(v22);
    outlined release of String(v22);
    *(_WORD *)(v76 + 12) = 2080;
    uint64_t v81 = v139;
    LOBYTE(v149) = v139;
    uint64_t v82 = String.init<A>(reflecting:)();
    *(void *)&long long v149 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v83, (uint64_t *)v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v74, v75, "localParticipantState for %s is localParticipantCornerSize for cornerToUse: %s", (uint8_t *)v76, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v77, -1, -1);
    MEMORY[0x1C87760E0](v76, -1, -1);
  }
  else
  {
    outlined release of String(v22);
    outlined release of String(v22);

    uint64_t v81 = v139;
  }
  outlined init with take of CATransform3D?(v138, (uint64_t)&v149, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v149);
  uint64_t v91 = MultiwayViewController.localParticipantCornerSize(for:viewContent:)(v81, (uint64_t)&v149);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v149);
  return v91;
}

void specialized closure #3 in MultiwayViewController.viewDidLoad()(char a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = v6 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v8, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    char v9 = getEnumTag for TapInteraction.EventType(v11) == 0;
    outlined init with take of CATransform3D?((uint64_t)v11, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v12) == 1) {
      char v10 = a3;
    }
    else {
      char v10 = 0;
    }
    MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(a1 & 1, v9, v10);
  }
}

void MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(char a1, char a2, void *a3)
{
  uint64_t v7 = a3;
  if (!a3)
  {
    uint64_t v8 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v8, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v28, (uint64_t)&aBlock, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t v7 = 0;
    if (getEnumTag for TapInteraction.EventType(&aBlock) != 1)
    {
      uint64_t v7 = *(void **)(v8 + 120);
      id v9 = v7;
    }
  }
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(unsigned char *)(v11 + 24) = a1 & 1;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = a1 & 1;
  if (a2)
  {
    uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = v13;
    uint64_t v16 = v11;
    double v17 = v7;
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 320);
    id v19 = a3;
    swift_retain();
    swift_retain();
    char v20 = v18(ObjectType, v14);
    uint64_t v7 = v17;
    if ((v20 & 1) == 0)
    {
      swift_release();
      swift_release();
      unsigned __int8 v21 = self;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = partial apply for closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
      *(void *)(v22 + 24) = v16;
      uint64_t v33 = partial apply for closure #3 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
      uint64_t v34 = v22;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v30 = 1107296256;
      uint64_t v31 = thunk for @escaping @callee_guaranteed () -> ();
      long long v32 = &block_descriptor_255;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = partial apply for closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
      *(void *)(v24 + 24) = v27;
      uint64_t v33 = partial apply for closure #3 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
      uint64_t v34 = v24;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v30 = 1107296256;
      uint64_t v31 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      long long v32 = &block_descriptor_261;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v21, sel_animateWithDuration_delay_options_animations_completion_, 6, v23, v25, 0.25, 0.0);

      swift_release();
      swift_release();
      _Block_release(v25);
      _Block_release(v23);
      return;
    }
  }
  else
  {
    id v26 = a3;
    swift_retain();
    swift_retain();
  }
  closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(v10, a1 & 1);
  swift_release();
  closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(v12, a1 & 1);

  swift_release();
  swift_release();
  swift_release();
}

uint64_t MultiwayViewController.registerCaptioningStateObservers()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<CaptioningStateManager.CaptioningState, Never>, OS_dispatch_queue>);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v4 = CaptioningStateManager.captioningStatePublisher.getter();
  swift_release();
  v10[0] = v4;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v11 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<CaptioningStateManager.CaptioningState, Never>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type AnyPublisher<CaptioningStateManager.CaptioningState, Never> and conformance AnyPublisher<A, B>);
  _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWlTm_1((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<CaptioningStateManager.CaptioningState, Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t MultiwayViewController.playOutgoingGFTRingtoneIfNeeded()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    ConversationController.lookupActiveConversation()();
    if (v12)
    {
      outlined init with take of Notice(&v11, (uint64_t)v13);
      uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);
      id v9 = *(void (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & *v8) + 0xC8);
      uint64_t v10 = v8;
      v9(v13);

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    else
    {
      return outlined destroy of SystemUpdateNotice?((uint64_t)&v11, &demangling cache variable for type metadata for Conversation?);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #4 in MultiwayViewController.viewDidLoad()(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  char v4 = *a1;
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = (char *)objc_retain(*(id *)(v6
                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController));

    id v9 = *(id *)&v8[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController];
    char v10 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0xF0))();
  }
  else
  {
    char v10 = 1;
  }
  *a3 = v10;
  a3[1] = v4;
}

void closure #5 in MultiwayViewController.viewDidLoad()(char a1, int a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = (char *)v6;
    uint64_t v8 = v6 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v8, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v13) != 1)
    {
      uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      uint64_t ObjectType = swift_getObjectType();
      long long v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 600);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v12);
      swift_unknownObjectRetain();
      LOBYTE(v9) = v11(ObjectType, v9);
      swift_unknownObjectRelease();
      if (v9)
      {
        MultiwayViewController.updateDelegateUsingState(oldVideoMessageState:newVideoMessageState:)(a1, a2);
        MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(a2);
        LocalParticipantView.videoMessagingState.setter();
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v12);
    }
  }
}

void MultiwayViewController.updateDelegateUsingState(oldVideoMessageState:newVideoMessageState:)(char a1, char a2)
{
  uint64_t v3 = v2;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v3;
    uint64_t v10 = swift_slowAlloc();
    v33[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v7, v8, "Updating delegate message flow using oldVideoMessageState %s to newVideoMessageState %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    uint64_t v15 = v10;
    uint64_t v3 = v32;
    MEMORY[0x1C87760E0](v15, -1, -1);
    MEMORY[0x1C87760E0](v9, -1, -1);
  }

  if (a2 == 2)
  {
    if (VideoMessageController.State.rawValue.getter(a1) == 0x7964616552746F6ELL && v16 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_27;
      }
    }
  }
  if (a1 == 2)
  {
    if (VideoMessageController.State.rawValue.getter(a2) == 0x7964616552746F6ELL && v19 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        uint64_t v22 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
        swift_beginAccess();
        uint64_t v23 = MEMORY[0x1C8776240](v22);
        if (!v23) {
          return;
        }
        uint64_t v24 = (void *)v23;
        uint64_t v25 = &selRef_didEnterVideoMessagingFlow;
        goto LABEL_31;
      }
    }
  }
  switch(a2)
  {
    case 1:
LABEL_27:
      uint64_t v28 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      uint64_t v29 = MEMORY[0x1C8776240](v28);
      if (!v29) {
        return;
      }
      uint64_t v24 = (void *)v29;
      uint64_t v25 = &selRef_didExitVideoMessagingFlow;
      break;
    case 7:
      uint64_t v30 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      uint64_t v31 = MEMORY[0x1C8776240](v30);
      if (!v31) {
        return;
      }
      uint64_t v24 = (void *)v31;
      uint64_t v25 = &selRef_endedRecordingVideoMessage;
      break;
    case 5:
      uint64_t v26 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      uint64_t v27 = MEMORY[0x1C8776240](v26);
      if (!v27) {
        return;
      }
      uint64_t v24 = (void *)v27;
      uint64_t v25 = &selRef_beganRecordingVideoMessage;
      break;
    default:
      return;
  }
LABEL_31:
  if (objc_msgSend(v24, sel_respondsToSelector_, *v25)) {
    [v24 *v25];
  }
  swift_unknownObjectRelease();
}

uint64_t closure #6 in MultiwayViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  if (result)
  {
    uint64_t v5 = (char *)result;
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = *(void *)(v6 - 8);
    MEMORY[0x1F4188790](v6);
    uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    MEMORY[0x1F4188790](v10 - 8);
    unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v12, &demangling cache variable for type metadata for URL?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1)
    {

      return outlined destroy of SystemUpdateNotice?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
      uint64_t v13 = *(void **)(*(void *)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
      unint64_t v14 = self;
      uint64_t v15 = v13;
      if (objc_msgSend(v14, sel_isCommunicationSafetyEnabled)
        && ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x168))() & 1) != 0)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for SCUIInterventionViewController);
        id v16 = @nonobjc SCUIInterventionViewController.__allocating_init(workflow:contextDictionary:)(1, 0);
        objc_msgSend(v16, sel_setInterventionDelegate_, v5);
        objc_msgSend(v16, sel_setModalInPresentation_, 1);
        objc_msgSend(v5, sel_presentModalViewController_withTransition_, v16, 8);

        uint64_t v15 = v16;
      }
      else
      {
        MultiwayViewController.showLocalVideoMessagePreview(usingURL:)();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return result;
}

void MultiwayViewController.showLocalVideoMessagePreview(usingURL:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController;
  id v13 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)();
  uint64_t v5 = v4;
  id v6 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewController());
  id v7 = v5;
  id v8 = VideoMessagePlayerViewController.init(viewModel:)(v7);
  objc_msgSend(v1, sel_showViewController_sender_, v8, 0);

  uint64_t v9 = *(void **)(v2 + v3);
  uint64_t v10 = *(void (**)(id))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x158);
  id v11 = v7;
  unint64_t v12 = v9;
  v10(v7);
}

Swift::Void __swiftcall MultiwayViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1);
  MultiwayViewController.updateShouldShowReactionPickerTipView()();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_167_0();
  if (v3)
  {
    MultiwayViewController.startTipStateObserver()();
    MultiwayViewController.tipKitStartObservation()();
  }
}

Swift::Void __swiftcall MultiwayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewDidAppear_, a1);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v3 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v3 + 16) = xmmword_1C3769620;
  unint64_t v4 = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = 0x6D696E6120746F6ELL;
  if (a1) {
    uint64_t v5 = 0x646574616D696E61;
  }
  unint64_t v6 = 0xEC00000064657461;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = v4;
  if (a1) {
    unint64_t v6 = 0xE800000000000000;
  }
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_209_2();
  swift_bridgeObjectRelease();
  MultiwayViewController.updateStatusBarHidden()();
  MultiwayViewController.resumeUserInterface()();
  MultiwayViewController.updateViewConstraints()();
  __int16 v7 = 513;
  MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v7);
  MultiwayViewController.updateHasParticipantVideo()();
}

void *MultiwayViewController.updateStatusBarHidden()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1C8776240](v1);
  if (result)
  {
    objc_msgSend(result, sel_viewController_setStatusBarHidden_, v0, MultiwayViewController.shouldHideStatusBar.getter());
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MultiwayViewController.updateHasParticipantVideo()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v33 - v10;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  id v13 = (void *)(v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  swift_beginAccess();
  if ((*v13 & 0xFFFFFFFFFFFFFFFELL) != 2) {
    goto LABEL_21;
  }
  uint64_t v14 = v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  swift_beginAccess();
  if (!*(void *)(*(void *)v14 + 16)) {
    goto LABEL_21;
  }
  uint64_t v36 = v6;
  uint64_t v37 = v1;
  uint64_t v15 = v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 8);
  swift_unknownObjectRetain();
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0
    || (uint64_t ObjectType = swift_getObjectType(),
        char v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 128),
        uint64_t v35 = ObjectType,
        (v18(ObjectType, v16) & 1) == 0))
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 184);
  if (v34(v35, v16) == 1)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    int v32 = v34(v35, v16);
    swift_unknownObjectRelease();
    if (v32 != 3) {
      goto LABEL_8;
    }
  }
  if (MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter()) {
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v19 = v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_18(v19, (uint64_t)v11);
  LOBYTE(v19) = Participant.isActiveWithVideo.getter();
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
  if ((v19 & 1) == 0)
  {
    uint64_t v21 = ConversationController.visibleParticipants.getter();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = *(unsigned __int8 *)(v36 + 80);
      uint64_t v35 = v21;
      uint64_t v24 = v21 + ((v23 + 32) & ~v23);
      uint64_t v25 = *(void *)(v36 + 72);
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_18(v24, (uint64_t)v9);
        _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v9, (uint64_t)v4);
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v27 = &v4[*(int *)(v26 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(void *)&v4[*(int *)(v26 + 64)], *(void *)&v4[*(int *)(v26 + 64) + 8]);
          memcpy(v38, v27, sizeof(v38));
          uint64_t v28 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v4, v28);
          uint64_t v30 = v38[2];
          char v29 = v38[3];
          swift_bridgeObjectRetain();
          outlined destroy of Participant.MediaInfo((uint64_t)v38);
          if (v30)
          {
            swift_bridgeObjectRelease();
            _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
            if (v29)
            {
              swift_bridgeObjectRelease();
              char v20 = 1;
              return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v20, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (uint64_t (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
            }
            goto LABEL_18;
          }
        }
        else
        {
          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v4, (void (*)(void))type metadata accessor for Participant.State);
        }
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
LABEL_18:
        v24 += v25;
        if (!--v22)
        {
          swift_bridgeObjectRelease();
          char v20 = 0;
          return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v20, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (uint64_t (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    char v20 = 0;
    return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v20, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (uint64_t (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
  }
LABEL_9:
  char v20 = 1;
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v20, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (uint64_t (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
}

Swift::Void __swiftcall MultiwayViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidDisappear_, a1);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationKit);
  uint64_t v5 = v1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    uint64_t v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v5;

    _os_log_impl(&dword_1C2F90000, v6, v2, "%@ viewDidDisappear", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    uint64_t v6 = v5;
  }

  MultiwayViewController.pauseUserInterface()();
  MultiwayViewController.stopTipStateObserver()();
  MultiwayViewController.tipKitStopObservation()();
}

Swift::Void __swiftcall MultiwayViewController.viewSafeAreaInsetsDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewSafeAreaInsetsDidChange);
  MultiwayViewController.updateAdditionalSafeAreaInsets()();
}

Swift::Void __swiftcall MultiwayViewController.viewDidLayoutSubviews()()
{
  v30.receiver = v0;
  v30.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v30, sel_viewDidLayoutSubviews);
  uint64_t v5 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((void *)v5 + 8) = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;

  id v7 = MultiwayViewController.flashView.getter();
  id v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v8, sel_bounds);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_107_8();

  id v9 = MultiwayViewController.insulatingView.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v0, sel_view);
    if (v11)
    {
      objc_msgSend(v11, sel_bounds);
      OUTLINED_FUNCTION_126();
      OUTLINED_FUNCTION_107_8();

      goto LABEL_5;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_5:
  double v12 = MultiwayViewController.mediaPipSafeAreaFrame.getter();
  MultiwayViewController.cachedMediaPipSafeAreaFrame.setter(v12, v13, v14, v15);
  uint64_t v16 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v16, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v28, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v29);
  if (!v17)
  {
    char v18 = *(void **)(v16 + 176);
    if (v18)
    {
      type metadata accessor for ButtonGradientBackgroundView();
      if (swift_dynamicCastClass())
      {
        outlined init with take of CATransform3D?(v16, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        OUTLINED_FUNCTION_6_112(v27);
        if (!v17)
        {
          uint64_t v19 = *(void **)(v16 + 168);
          if (v19)
          {
            id v20 = v18;
            id v21 = v19;
            objc_msgSend(v21, sel_frame);
            OUTLINED_FUNCTION_38();
            id v22 = objc_msgSend(v0, sel_view);
            double v23 = OUTLINED_FUNCTION_41();
            objc_msgSend(v24, v25, v22, v23);
            OUTLINED_FUNCTION_18_2();
            v31[0] = v1;
            v31[1] = v2;
            _OWORD v31[2] = v3;
            void v31[3] = v4;
            char v32 = 0;
            ButtonGradientBackgroundView.buttonFrame.setter((uint64_t)v31);
          }
        }
      }
    }
  }
}

double MultiwayViewController.mediaPipSafeAreaFrame.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v7, (uint64_t)v99, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v99, (uint64_t)v100, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  double v8 = 0.0;
  if (getEnumTag for TapInteraction.EventType(v100) == 1) {
    return v8;
  }
  uint64_t v9 = v101;
  uint64_t v10 = *(void **)(v101 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerDodgingLayoutGuide);
  if (!v10) {
    return v8;
  }
  outlined init with take of CATransform3D?((uint64_t)v99, (uint64_t)v98, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v98);
  objc_msgSend(v10, sel_layoutFrame);
  double v12 = v11;
  double v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  uint64_t v19 = (double *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  swift_beginAccess();
  if (v19[1] == 0.0 && v19[2] == 0.0
    || (id v20 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner],
        swift_beginAccess(),
        (*v20 & 1) != 0))
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v99);
    return v8;
  }
  id v22 = objc_msgSend(v1, sel_view);
  if (!v22) {
    goto LABEL_37;
  }
  double v23 = v22;
  CGFloat v96 = v18;
  CGFloat v97 = v16;
  CGFloat v94 = v14;
  CGFloat v95 = v12;
  objc_msgSend(v22, sel_bounds);
  CGFloat v90 = v25;
  CGFloat v91 = v24;
  CGFloat v88 = v27;
  CGFloat v89 = v26;

  id v28 = objc_msgSend((id)v100[1], sel_view);
  if (!v28)
  {
LABEL_38:
    __break(1u);
    JUMPOUT(0x1C35DC1F0);
  }
  char v29 = v28;
  objc_msgSend(v28, sel_frame);
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;
  double v37 = v36;

  MultiwayViewController.gridViewOverlappingInsets.getter();
  double v40 = UIEdgeInsetsInsetRect(v31, v33, v35, v37, v38, v39);
  CGFloat v86 = v41;
  CGFloat v87 = v40;
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  CGFloat v85 = v43;
  CGFloat v93 = v45;
  v103.origin.CGFloat y = v94;
  v103.origin.CGFloat x = v95;
  v103.size.CGFloat height = v96;
  v103.size.CGFloat width = v97;
  double MinY = CGRectGetMinY(v103);
  CGFloat v47 = v90;
  CGFloat v48 = v91;
  v104.origin.CGFloat x = v91;
  v104.origin.CGFloat y = v90;
  CGFloat v49 = v88;
  CGFloat v50 = v89;
  v104.size.CGFloat width = v89;
  v104.size.CGFloat height = v88;
  double v51 = MinY - CGRectGetMinY(v104);
  if (v51 <= 0.0) {
    double v51 = 0.0;
  }
  double v92 = v51;
  v105.origin.CGFloat x = v40;
  v105.origin.CGFloat y = v42;
  v105.size.CGFloat width = v44;
  v105.size.CGFloat height = v93;
  double v52 = CGRectGetMinY(v105);
  v106.origin.CGFloat x = v48;
  v106.origin.CGFloat y = v47;
  v106.size.CGFloat width = v50;
  v106.size.CGFloat height = v49;
  double v53 = v52 - CGRectGetMinY(v106);
  double v54 = v53 - static Layout.MediaPip.padding.getter();
  if (v54 <= 0.0) {
    double v54 = 0.0;
  }
  if (v92 > v54) {
    double v54 = v92;
  }
  double v84 = v54;
  v107.origin.CGFloat x = v48;
  v107.origin.CGFloat y = v47;
  v107.size.CGFloat width = v50;
  v107.size.CGFloat height = v49;
  CGRectGetMaxY(v107);
  double v55 = v94;
  double v56 = v95;
  v108.origin.CGFloat x = v95;
  v108.origin.CGFloat y = v94;
  v108.size.CGFloat height = v96;
  v108.size.CGFloat width = v97;
  CGRectGetMaxY(v108);
  v109.origin.CGFloat x = v48;
  v109.origin.CGFloat y = v47;
  v109.size.CGFloat width = v50;
  v109.size.CGFloat height = v49;
  CGRectGetMaxY(v109);
  v110.origin.CGFloat y = v86;
  v110.origin.CGFloat x = v87;
  v110.size.CGFloat width = v85;
  v110.size.CGFloat height = v93;
  CGRectGetMaxY(v110);
  static Layout.MediaPip.padding.getter();
  double v57 = UIEdgeInsetsInsetRect(v56, v55, v97, v96, v84 - v92, 0.0);
  double v59 = v58;
  double v61 = v60;
  double v63 = v62;
  objc_msgSend(v102, sel_frame);
  double Height = CGRectGetHeight(v111);
  double v65 = Height + static Layout.MediaPip.padding.getter();
  long long v66 = (unsigned __int8 *)(v9 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  unsigned int v67 = *v66;
  if (v67 >> 6)
  {
    if (v67 >> 6 != 1)
    {
      if (v67 == 128)
      {
LABEL_31:
        double v73 = 0.0;
        double v69 = v57;
        double v70 = v59;
        double v71 = v61;
        double v72 = v63;
LABEL_32:
        double v57 = UIEdgeInsetsInsetRect(v69, v70, v71, v72, v73, 0.0);
        double v59 = v74;
        double v61 = v75;
        double v63 = v76;
      }
      goto LABEL_33;
    }
    v67 &= 0x3Fu;
  }
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    int v68 = *(unsigned __int8 *)v19;
    switch(v67)
    {
      case 1u:
        if (*(unsigned char *)v19) {
          goto LABEL_27;
        }
        break;
      case 2u:
        if (v68 != 3) {
          goto LABEL_31;
        }
        break;
      case 3u:
        if (v68 != 2) {
          goto LABEL_31;
        }
        break;
      default:
        if (v68 != 1)
        {
LABEL_27:
          double v69 = v57;
          double v70 = v59;
          double v71 = v61;
          double v72 = v63;
          double v73 = v65;
          goto LABEL_32;
        }
        break;
    }
  }
LABEL_33:
  double v77 = v19[2];
  double v78 = static Layout.MediaPip.padding.getter();
  double v79 = v77 + v78 + v78 + 1.0;
  v112.origin.CGFloat x = v57;
  v112.origin.CGFloat y = v59;
  v112.size.CGFloat width = v61;
  v112.size.CGFloat height = v63;
  double v80 = CGRectGetHeight(v112);
  if (v80 < v79)
  {
    v113.origin.CGFloat x = v57;
    v113.origin.CGFloat y = v59;
    v113.size.CGFloat width = v61;
    v113.size.CGFloat height = v63;
    CGRectGetHeight(v113);
    v114.origin.CGFloat x = v57;
    v114.origin.CGFloat y = v59;
    v114.size.CGFloat width = v61;
    v114.size.CGFloat height = v63;
    CGRectGetMaxY(v114);
    v115.origin.CGFloat x = v56;
    v115.origin.CGFloat y = v55;
    v115.size.CGFloat height = v96;
    v115.size.CGFloat width = v97;
    CGRectGetMaxY(v115);
    double v80 = UIEdgeInsetsInsetRect(v57, v59, v61, v63, 0.0, 0.0);
  }
  id v81 = objc_msgSend(v1, sel_view, v80);
  UIRectRoundToViewScale();
  double v8 = v82;
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v99);

  return v8;
}

Swift::Void __swiftcall MultiwayViewController.willMove(toParent:)(UIViewController_optional *toParent)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  [(UIViewController_optional *)&v6 willMoveToParentViewController:toParent];
  if (toParent)
  {
    uint64_t v3 = self;
    uint64_t v4 = toParent;
    id v5 = objc_msgSend(v3, sel_traitCollectionWithUserInterfaceStyle_, 2);
    [(UIViewController_optional *)v4 setOverrideTraitCollection:v5 forChildViewController:v1];
  }
}

uint64_t MultiwayViewController.scheduleUpdate(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Participant(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t result = MultiwayViewController.nextScheduledUpdateInterval(for:)(a1);
  if ((v6 & 1) == 0)
  {
    double v7 = *(double *)&result;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v33 = static OS_dispatch_queue.main.getter();
    uint64_t v8 = type metadata accessor for DispatchTime();
    double v34 = v28;
    uint64_t v31 = v8;
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = MEMORY[0x1F4188790](v8);
    char v29 = v28;
    MEMORY[0x1F4188790](v10);
    double v12 = (char *)v28 - v11;
    static DispatchTime.now()();
    MEMORY[0x1C8772E20](v12, v7);
    double v13 = *(uint64_t (**)(void *, uint64_t))(v9 + 8);
    uint64_t v30 = v9 + 8;
    double v32 = v13;
    v13(v12, v8);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    outlined init with take of Participant((uint64_t)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    aBlock[4] = partial apply for closure #1 in MultiwayViewController.scheduleUpdate(for:);
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_502;
    double v17 = _Block_copy(aBlock);
    swift_release();
    uint64_t v18 = type metadata accessor for DispatchQoS();
    v28[1] = v28;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v18);
    id v21 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v22 = type metadata accessor for DispatchWorkItemFlags();
    v28[0] = v28;
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22);
    double v25 = (char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = MEMORY[0x1E4FBC860];
    _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    double v26 = v29;
    double v27 = (void *)v33;
    MEMORY[0x1C8773B10](v29, v21, v25, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return v32(v26, v31);
  }
  return result;
}

uint64_t MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(char a1, ConversationKit::ParticipantGridView::AnimationStyle a2)
{
  uint64_t v3 = v2;
  uint64_t v107 = type metadata accessor for Participant(0);
  uint64_t v6 = MEMORY[0x1F4188790](v107);
  uint64_t v106 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v88 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v104 = (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v105 = (uint64_t)&v88 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  double v17 = (char *)&v88 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v88 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v23 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v23, (uint64_t)v111, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v111, (uint64_t)&v112, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = getEnumTag for TapInteraction.EventType(&v112);
  if (result != 1)
  {
    uint64_t v101 = v9;
    outlined init with take of CATransform3D?((uint64_t)v111, (uint64_t)v110, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t v102 = v113;
    uint64_t v25 = v113 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v25, (uint64_t)v22, &demangling cache variable for type metadata for Participant?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v110);
    BOOL v26 = MultiwayViewController.participantGridState.getter();
    int v103 = v26;
    MultiwayViewConstraintsController.participantGridState.setter(v26);
    uint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 320))(ObjectType, v27);
    MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v29 & 1, 0, 0, 0, 0);
    if (v26)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v107) == 1)
      {
LABEL_32:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v111);
        return outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for Participant?);
      }
      MultiwayViewController.mostActiveParticipants.getter();
      uint64_t v30 = MultiwayViewController.activeRemoteParticipants(in:)();
      swift_bridgeObjectRelease();
      ParticipantGridViewController.fullScreenDefocus(to:animationStyle:)((Swift::OpaquePointer)v30, a2);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      Array<A>.participants(notIn:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ParticipantListViewController.update(with:updateReason:)();
      swift_bridgeObjectRelease();
LABEL_31:
      MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(v103, 1, 0);
      goto LABEL_32;
    }
    if (MultiwayViewController.isPipped.getter() && a1 != 2 && (a1 & 1) != 0) {
      goto LABEL_32;
    }
    ConversationController.remoteOneToOneParticipant.getter();
    uint64_t v31 = v107;
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v107) == 1)
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v111);
      outlined destroy of SystemUpdateNotice?((uint64_t)v20, &demangling cache variable for type metadata for Participant?);
      return outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for Participant?);
    }
    uint64_t v32 = (uint64_t)v101;
    outlined init with take of Participant((uint64_t)v20, (uint64_t)v101);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    os_log_t v98 = (os_log_t)&v88;
    uint64_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
    MEMORY[0x1F4188790](v33 - 8);
    CGFloat v95 = (char *)((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    double v35 = (char *)((char *)&v88 - v95);
    uint64_t v36 = v32 + *(int *)(v31 + 20);
    uint64_t v37 = type metadata accessor for UUID();
    uint64_t v94 = *(void *)(v37 - 8);
    double v38 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
    uint64_t v39 = v36;
    uint64_t v40 = v94 + 16;
    v38(v35, v39, v37);
    CGFloat v96 = v35;
    uint64_t v100 = v37;
    uint64_t v41 = __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
    CGFloat v97 = &v88;
    uint64_t v99 = v34;
    MEMORY[0x1F4188790](v41);
    CGFloat v42 = (char *)((char *)&v88 - v95);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v22, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v31);
    double v92 = v38;
    uint64_t v93 = v40;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v17, &demangling cache variable for type metadata for Participant?);
      uint64_t v44 = 1;
    }
    else
    {
      v38(v42, (uint64_t)&v17[*(int *)(v31 + 20)], v100);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v17, (void (*)(void))type metadata accessor for Participant);
      uint64_t v44 = 0;
    }
    uint64_t v45 = v100;
    __swift_storeEnumTagSinglePayload((uint64_t)v42, v44, 1, v100);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    CGFloat v95 = (char *)&v88;
    uint64_t v47 = MEMORY[0x1F4188790](v46 - 8);
    CGFloat v49 = (char *)&v88 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = (uint64_t)&v49[*(int *)(v47 + 56)];
    uint64_t v51 = (uint64_t)v96;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v96, (uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v42, v50, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v52 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v45);
    if (v52 == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?(v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v50, 1, v100) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v111);
        uint64_t v53 = (uint64_t)v101;
LABEL_27:
        _s15ConversationKit11ParticipantVWOhTm_12(v53, (void (*)(void))type metadata accessor for Participant);
        return outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for Participant?);
      }
    }
    else
    {
      MEMORY[0x1F4188790](v52);
      double v55 = (char *)&v88 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v49, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v56 = __swift_getEnumTagSinglePayload(v50, 1, v100);
      if (v56 != 1)
      {
        CGFloat v91 = &v88;
        CGFloat v88 = v55;
        uint64_t v69 = v94;
        MEMORY[0x1F4188790](v56);
        CGFloat v90 = &v88;
        double v71 = (char *)&v88 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v72 = v50;
        uint64_t v73 = v100;
        (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v71, v72, v100);
        _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        int v89 = dispatch thunk of static Equatable.== infix(_:_:)();
        double v74 = *(void (**)(char *, uint64_t))(v69 + 8);
        v74(v71, v73);
        outlined destroy of SystemUpdateNotice?((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?(v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v74(v88, v73);
        outlined destroy of SystemUpdateNotice?((uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v53 = (uint64_t)v101;
        if (v89)
        {
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v111);
          goto LABEL_27;
        }
LABEL_19:
        if (one-time initialization token for default != -1) {
          swift_once();
        }
        uint64_t v57 = type metadata accessor for Logger();
        __swift_project_value_buffer(v57, (uint64_t)static Log.default);
        uint64_t v58 = v105;
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v22, v105, &demangling cache variable for type metadata for Participant?);
        uint64_t v59 = v106;
        _s15ConversationKit11ParticipantVWOcTm_18(v53, v106);
        double v60 = Logger.logObject.getter();
        int v61 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v60, (os_log_type_t)v61))
        {
          LODWORD(v97) = v61;
          os_log_t v98 = v60;
          uint64_t v62 = swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          CGFloat v95 = (char *)&v88;
          CGFloat v96 = (char *)v63;
          v109[0] = v63;
          *(_DWORD *)uint64_t v62 = 136315394;
          MEMORY[0x1F4188790](v63);
          double v65 = (char *)&v88 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v66 = v104;
          outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v58, v104, &demangling cache variable for type metadata for Participant?);
          uint64_t v67 = v107;
          if (__swift_getEnumTagSinglePayload(v66, 1, v107) == 1)
          {
            outlined destroy of SystemUpdateNotice?(v66, &demangling cache variable for type metadata for Participant?);
            uint64_t v68 = 1;
          }
          else
          {
            v92(v65, v66 + *(int *)(v67 + 20), v100);
            _s15ConversationKit11ParticipantVWOhTm_12(v66, (void (*)(void))type metadata accessor for Participant);
            uint64_t v68 = 0;
          }
          uint64_t v75 = v100;
          __swift_storeEnumTagSinglePayload((uint64_t)v65, v68, 1, v100);
          uint64_t v76 = specialized >> prefix<A>(_:)((uint64_t)v65);
          unint64_t v78 = v77;
          outlined destroy of SystemUpdateNotice?((uint64_t)v65, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v78, v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t updated = outlined destroy of SystemUpdateNotice?(v105, &demangling cache variable for type metadata for Participant?);
          *(_WORD *)(v62 + 12) = 2080;
          uint64_t v105 = v62 + 14;
          MEMORY[0x1F4188790](updated);
          id v81 = (char *)&v88 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v82 = v106;
          v92(v81, v106 + *(int *)(v107 + 20), v75);
          __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v75);
          uint64_t v83 = specialized >> prefix<A>(_:)((uint64_t)v81);
          unint64_t v85 = v84;
          outlined destroy of SystemUpdateNotice?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v85, v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit11ParticipantVWOhTm_12(v82, (void (*)(void))type metadata accessor for Participant);
          os_log_t v86 = v98;
          _os_log_impl(&dword_1C2F90000, v98, (os_log_type_t)v97, "Grid fullscreen focused on %s, should be %s", (uint8_t *)v62, 0x16u);
          uint64_t v87 = (uint64_t)v96;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v87, -1, -1);
          MEMORY[0x1C87760E0](v62, -1, -1);

          uint64_t v53 = (uint64_t)v101;
        }
        else
        {
          outlined destroy of SystemUpdateNotice?(v58, &demangling cache variable for type metadata for Participant?);
          _s15ConversationKit11ParticipantVWOhTm_12(v59, (void (*)(void))type metadata accessor for Participant);
        }
        ParticipantGridViewController.fullScreenFocus(on:)();
        _s15ConversationKit11ParticipantVWOhTm_12(v53, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_31;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?(v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v55, v100);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v53 = (uint64_t)v101;
    goto LABEL_19;
  }
  return result;
}

void *MultiwayViewController.setParticipantListState(_:animated:)(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void *)((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v12 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v12, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v21, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v22);
    if (result != 1)
    {
      int v13 = a1 & 1;
      memcpy(v20, v22, sizeof(v20));
      uint64_t v14 = (unsigned __int8 *)(v22[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
      uint64_t result = (void *)swift_beginAccess();
      if ((((v13 == 0) ^ *v14) & 1) == 0)
      {
        outlined init with take of CATransform3D?((uint64_t)v21, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v19);
        MultiwayViewConstraintsController.participantListState.setter(v13);
        if (a2)
        {
          uint64_t v15 = self;
          uint64_t v16 = swift_allocObject();
          memcpy((void *)(v16 + 16), v20, 0xD8uLL);
          void v18[4] = partial apply for closure #1 in MultiwayViewController.setParticipantListState(_:animated:);
          v18[5] = v16;
          v18[0] = MEMORY[0x1E4F143A8];
          v18[1] = 1107296256;
          _OWORD v18[2] = thunk for @escaping @callee_guaranteed () -> ();
          v18[3] = &block_descriptor_294;
          double v17 = _Block_copy(v18);
          outlined retain of MultiwayViewController.ViewContent((uint64_t)v19);
          swift_release();
          objc_msgSend(v15, sel_animateWithDuration_delay_options_animations_completion_, 0, v17, 0, 0.3, 0.0);
          _Block_release(v17);
        }
        MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v21);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v62 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)&v62 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v62 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a1;
  if (__swift_getEnumTagSinglePayload(a1, 1, v19) == 1) {
    goto LABEL_4;
  }
  if (__swift_getEnumTagSinglePayload(a2, 1, v19) != 1) {
    goto LABEL_4;
  }
  uint64_t v22 = v8;
  uint64_t v23 = v11;
  uint64_t v24 = v19;
  uint64_t v25 = v22;
  char v26 = ConversationController.isOneToOneModeEnabled.getter();
  uint64_t v27 = v25;
  uint64_t v19 = v24;
  uint64_t v11 = v23;
  uint64_t v8 = v27;
  if (v26)
  {
LABEL_4:
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a2, (uint64_t)v18, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1) {
      return outlined destroy of SystemUpdateNotice?((uint64_t)v18, &demangling cache variable for type metadata for Participant?);
    }
    uint64_t v68 = v2;
    outlined init with take of Participant((uint64_t)v18, (uint64_t)v21);
    Participant.videoInfo.getter();
    outlined init with take of CATransform3D?((uint64_t)v71, (uint64_t)v89, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v89[0]) {
      return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
    }
    uint64_t v29 = v89[3];
    outlined release of LinearGradient((uint64_t)v71);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v70, (uint64_t)v16, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v19) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
      uint64_t v30 = (uint64_t)v69;
    }
    else
    {
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of CATransform3D?((uint64_t)v72, (uint64_t)v88, &demangling cache variable for type metadata for Participant.VideoInfo?);
      uint64_t v30 = (uint64_t)v69;
      if (v88[0])
      {
        uint64_t v31 = v88[3];
        outlined release of LinearGradient((uint64_t)v72);
        if (v31 == v29) {
          goto LABEL_13;
        }
      }
    }
    uint64_t v32 = v68 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
    swift_beginAccess();
    uint64_t v33 = (void *)MEMORY[0x1C8776240](v32);
    if (v33)
    {
      objc_msgSend(v33, sel_viewController_fullScreenFocusedParticipantOrientationChanged_, v68, v29);
      swift_unknownObjectRelease();
    }
LABEL_13:
    int v67 = Participant.isReceivingVideoFrames.getter();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v70, v30, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v30, 1, v19) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v30, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12(v30, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of CATransform3D?((uint64_t)v73, (uint64_t)v86, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v86[0])
      {
        uint64_t v34 = v86[5];
        uint64_t v35 = v86[6];
        uint64_t v36 = v86[7];
        uint64_t v37 = v86[8];
        char v38 = v87;
        outlined release of LinearGradient((uint64_t)v73);
        LODWORD(v69) = 0;
        int v66 = v38 & 1;
        goto LABEL_18;
      }
    }
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    int v66 = 0;
    LODWORD(v69) = 1;
LABEL_18:
    Participant.videoInfo.getter();
    outlined init with take of CATransform3D?((uint64_t)v74, (uint64_t)v84, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v84[0])
    {
      uint64_t v62 = v37;
      uint64_t v63 = v36;
      uint64_t v64 = v35;
      double v65 = v11;
      uint64_t v39 = v34;
      uint64_t v40 = v84[5];
      uint64_t v41 = v84[6];
      uint64_t v42 = v84[7];
      uint64_t v43 = v84[8];
      char v44 = v85;
      outlined release of LinearGradient((uint64_t)v74);
      if (v69)
      {
        LODWORD(v69) = 0;
      }
      else
      {
        v93[0] = v40;
        v93[1] = v41;
        v93[2] = v42;
        v93[3] = v43;
        char v94 = v44 & 1;
        v91[0] = v39;
        v91[1] = v64;
        v91[2] = v63;
        v91[3] = v62;
        char v92 = v66;
        LODWORD(v69) = static AspectRatio.== infix(_:_:)((uint64_t)v91, (uint64_t)v93);
      }
      uint64_t v11 = v65;
    }
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v70, (uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v19) == 1)
    {
      uint64_t v45 = (uint64_t)v11;
      uint64_t v46 = (uint64_t)v8;
      outlined destroy of SystemUpdateNotice?(v45, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      uint64_t v47 = (uint64_t)v11;
      uint64_t v46 = (uint64_t)v8;
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12(v47, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of CATransform3D?((uint64_t)v75, (uint64_t)v83, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v83[0])
      {
        uint64_t v48 = v83[3];
        outlined release of LinearGradient((uint64_t)v75);
        char v49 = 0;
        goto LABEL_31;
      }
    }
    uint64_t v48 = 0;
    char v49 = 1;
LABEL_31:
    Participant.videoInfo.getter();
    outlined init with take of CATransform3D?((uint64_t)v76, (uint64_t)v82, &demangling cache variable for type metadata for Participant.VideoInfo?);
    uint64_t v50 = v82[0];
    BOOL v51 = v82[0] == 0;
    if (v82[0])
    {
      uint64_t v52 = v82[3];
      outlined release of LinearGradient((uint64_t)v76);
      if (v49) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v52 = 0;
      if (v49) {
        goto LABEL_39;
      }
    }
    if (v50) {
      BOOL v53 = v48 == v52;
    }
    else {
      BOOL v53 = 0;
    }
    BOOL v51 = v53;
LABEL_39:
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v70, v46, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v46, 1, v19) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v46, &demangling cache variable for type metadata for Participant?);
      int v54 = 2;
    }
    else
    {
      char v55 = Participant.isReceivingVideoFrames.getter();
      _s15ConversationKit11ParticipantVWOhTm_12(v46, (void (*)(void))type metadata accessor for Participant);
      int v54 = v55 & 1;
    }
    int v56 = Participant.isReceivingVideoFrames.getter();
    if (v54 == 2 || (v69 & v51 & 1) == 0) {
      int v57 = 1;
    }
    else {
      int v57 = v56 ^ (v54 != 0);
    }
    Participant.videoInfo.getter();
    outlined init with take of CATransform3D?((uint64_t)v77, (uint64_t)v80, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v80[0]
      && (memcpy(v81, v80, 0x4AuLL),
          outlined release of LinearGradient((uint64_t)v77),
          outlined init with take of AspectRatio((uint64_t)&v81[40], (uint64_t)v90),
          (v67 & v57 & 1) != 0))
    {
      Participant.videoInfo.getter();
      outlined init with take of CATransform3D?((uint64_t)v78, (uint64_t)v79, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v79[0] && (uint64_t v58 = v79[3], outlined release of LinearGradient((uint64_t)v78), (v58 | 2) != 3))
      {
        outlined init with take of AspectRatio((uint64_t)v90, (uint64_t)v95);
        double v59 = 1.0;
        double v60 = 1.0;
        uint64_t v61 = v68;
        if ((v96 & 1) == 0)
        {
          double v59 = *(double *)&v95[2];
          double v60 = *(double *)&v95[3];
        }
      }
      else
      {
        outlined init with take of AspectRatio((uint64_t)v90, (uint64_t)v95);
        double v59 = 1.0;
        double v60 = 1.0;
        uint64_t v61 = v68;
        if ((v96 & 1) == 0)
        {
          double v59 = *(double *)v95;
          double v60 = *(double *)&v95[1];
        }
      }
    }
    else
    {
      if (__swift_getEnumTagSinglePayload(v70, 1, v19) != 1) {
        return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
      }
      Participant.videoInfo.getter();
      outlined release of LinearGradient((uint64_t)v78);
      outlined init with take of CATransform3D?((uint64_t)v78, (uint64_t)v79, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v79[0]) {
        return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
      }
      double v59 = 1.0;
      double v60 = 1.0;
      uint64_t v61 = v68;
    }
    notifyDelegates #1 (fullScreenFocusedParticipantAspectRatio:) in MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(v61, v59, v60);
    return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
  }
  return notifyDelegates #1 (fullScreenFocusedParticipantAspectRatio:) in MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(v2, 1.0, 1.0);
}

void MultiwayViewController.updateOneToOneShutterButtonTapability(for:isMomentsAvailable:)(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v10, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v17) != 1)
  {
    uint64_t v11 = *(void **)(v10 + 120);
    if (v11)
    {
      id v12 = v11;
      ConversationController.remoteOneToOneParticipant.getter();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
      {

        outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant((uint64_t)v6, (uint64_t)v9);
        if (static UUID.== infix(_:_:)())
        {
          if (a2)
          {
            if (one-time initialization token for shutterButtonEnabled != -1) {
              swift_once();
            }
            uint64_t v13 = &static Colors.ParticipantViews.shutterButtonEnabled;
          }
          else
          {
            if (one-time initialization token for shutterButtonDisabled != -1) {
              swift_once();
            }
            uint64_t v13 = &static Colors.ParticipantViews.shutterButtonDisabled;
          }
          id v14 = (id)*v13;
          objc_msgSend(v12, sel_setTintColor_, v14);

          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
        }
        else
        {
          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
        }
      }
    }
  }
}

uint64_t MultiwayViewController.notifyLocalParticipantAspectRatioChanged()()
{
  uint64_t v1 = v0;
  uint64_t result = ConversationController.isOneToOneModeEnabled.getter();
  if (result)
  {
    uint64_t result = MultiwayViewController.isPipped.getter();
    if (result)
    {
      uint64_t v3 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      uint64_t result = MEMORY[0x1C8776240](v3);
      if (result)
      {
        uint64_t v4 = (void *)result;
        if (objc_msgSend((id)result, sel_respondsToSelector_, sel_viewController_localParticipantAspectRatioChanged_))
        {
          MultiwayViewController.pipContentAspectRatioForOneToOneLocalPreview.getter();
          objc_msgSend(v4, sel_viewController_localParticipantAspectRatioChanged_, v1);
        }
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t notifyDelegates #1 (fullScreenFocusedParticipantAspectRatio:) in MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(uint64_t a1, double a2, double a3)
{
  BOOL v6 = MultiwayViewController.participantGridState.getter();
  uint64_t v7 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio;
  swift_beginAccess();
  *(double *)uint64_t v7 = a2;
  *(double *)(v7 + 8) = a3;
  *(unsigned char *)(v7 + 16) = 0;
  uint64_t v8 = (BOOL *)(a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen);
  swift_beginAccess();
  BOOL *v8 = !v6;
  uint64_t v9 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  swift_beginAccess();
  uint64_t v10 = (void *)MEMORY[0x1C8776240](v9);
  if (v10)
  {
    objc_msgSend(v10, sel_viewController_fullScreenFocusedParticipantAspectRatioChanged_participantGridIsFullScreen_, a1, !v6, a2, a3);
    swift_unknownObjectRelease();
  }
  uint64_t v11 = (void (**)(uint64_t))(a1
                                      + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *v11;
  if (*v11)
  {
    uint64_t v14 = swift_retain();
    v13(v14);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v13);
  }
  return result;
}

void MultiwayViewController.updateMutedTalkerUI(mutedTalker:)(char a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController);
    uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
    BOOL v6 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x128);
    uint64_t v7 = v4;
    LOBYTE(v6) = v6();

    if ((v6 & 1) == 0 || !MultiwayViewController.isPipped.getter()) {
      return;
    }
    uint64_t v8 = *(void **)(v2 + v3);
    uint64_t v9 = *(void (**)(uint64_t))((*v5 & *v8) + 0x160);
    uint64_t v10 = v8;
    uint64_t v11 = 1;
  }
  else
  {
    BOOL v12 = MultiwayViewController.isPipped.getter();
    uint64_t v13 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
    uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController);
    uint64_t v15 = (void *)MEMORY[0x1E4FBC8C8];
    if (!v12)
    {
      uint64_t v20 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v14) + 0x178);
      uint64_t v21 = v14;
      v20();
      goto LABEL_11;
    }
    uint64_t v16 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v14) + 0x128);
    uint64_t v17 = v14;
    char v18 = v16();

    if ((v18 & 1) == 0) {
      return;
    }
    uint64_t v19 = *(void **)(v2 + v13);
    uint64_t v9 = *(void (**)(uint64_t))((*v15 & *v19) + 0x160);
    uint64_t v10 = v19;
    uint64_t v11 = 0;
  }
  uint64_t v21 = v10;
  v9(v11);
LABEL_11:
}

void *MultiwayViewController.updateLocalParticipantAspectRatio()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v11 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v11, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v33, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v34);
    if (result != 1)
    {
      outlined init with take of CATransform3D?((uint64_t)v33, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
          + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_18(v12, (uint64_t)v4);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v24);
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v4, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of CATransform3D?((uint64_t)v25, (uint64_t)v26, &demangling cache variable for type metadata for Participant.VideoInfo?);
      long long v13 = 0uLL;
      if (v26[0])
      {
        long long v22 = v27;
        long long v23 = v28;
        char v14 = v29;
        char v15 = ConversationController.isOneToOneModeEnabled.getter();
        outlined release of LinearGradient((uint64_t)v25);
        if (v15)
        {
          char v16 = v14 & 1;
          long long v13 = v22;
          long long v17 = v23;
        }
        else
        {
          char v16 = 1;
          long long v17 = 0uLL;
          long long v13 = 0uLL;
        }
      }
      else
      {
        char v16 = 1;
        long long v17 = 0uLL;
      }
      v30[0] = v13;
      v30[1] = v17;
      char v31 = v16;
      uint64_t v18 = v34[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
      swift_beginAccess();
      outlined init with take of AspectRatio(v18, (uint64_t)v32);
      if (!static AspectRatio.== infix(_:_:)((uint64_t)v30, (uint64_t)v32))
      {
        MultiwayViewConstraintsController.localParticipantAspectRatio.setter((uint64_t)v30);
        uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
        uint64_t ObjectType = swift_getObjectType();
        char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 320))(ObjectType, v19);
        MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v21 & 1, 0, 0, 0, 0);
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *MultiwayViewController.setLocalParticipantState(_:animated:)(int a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v72 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v71 = (uint64_t)&v66 - v9;
  uint64_t v73 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v73);
  uint64_t v70 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  int v74 = a1;
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)logger);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v78[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    LOBYTE(v77[0]) = v74;
    uint64_t v16 = String.init<A>(reflecting:)();
    v77[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 1024;
    LODWORD(v77[0]) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v12, v13, "setLocalParticipantState %s animated: %{BOOL}d", (uint8_t *)v14, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v15, -1, -1);
    MEMORY[0x1C87760E0](v14, -1, -1);
  }

  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  char v21 = (uint64_t *)((char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v21 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E4FBCBE8], v18);
  char v22 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v24 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v24, (uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v76, (uint64_t)v77, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType((uint64_t *)v77);
  unsigned __int8 v25 = v74;
  if (result != 1)
  {
    memcpy(v78, v77, 0xD8uLL);
    uint64_t v26 = (uint64_t)v77[6];
    long long v27 = (unsigned __int8 *)v77[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState;
    swift_beginAccess();
    unsigned int v28 = *v27;
    if ((static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(*v27, v25) & 1) == 0
      || (char v29 = (unsigned char *)(v26
                        + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate),
          uint64_t result = (void *)swift_beginAccess(),
          *v29 == 1))
    {
      uint64_t v30 = (ConversationKit::MultiwayViewConstraintsController::ShutterButtonState *)(v26
                                                                                     + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
      swift_beginAccess();
      ConversationKit::MultiwayViewConstraintsController::ShutterButtonState v31 = *v30;
      if (v28 < 0x81 || v25 == 129)
      {
        outlined init with take of CATransform3D?((uint64_t)v76, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v75);
        BOOL v69 = 0;
      }
      else
      {
        BOOL v69 = v25 < 0x81u;
        outlined init with take of CATransform3D?((uint64_t)v76, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v75);
        MultiwayViewController.testing_requestingLocalPreviewMinimize()();
      }
      uint64_t v68 = (char *)v27;
      BOOL v32 = ParticipantListViewController.participantCount.getter() > 0;
      if (MultiwayViewConstraintsController.LocalParticipantState.collides(with:)(v31)) {
        MultiwayViewConstraintsController.shutterButtonState.setter(v31 ^ 1);
      }
      if (static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(v25, v28))
      {
LABEL_29:
        if (v28 == 128)
        {
          if (v25 == 128) {
            goto LABEL_37;
          }
          uint64_t v40 = (uint64_t)v77[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
          swift_beginAccess();
          uint64_t v41 = v71;
          outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v40, v71, &demangling cache variable for type metadata for Participant?);
          uint64_t v42 = v73;
          if (__swift_getEnumTagSinglePayload(v41, 1, v73) == 1)
          {
            outlined destroy of SystemUpdateNotice?(v41, &demangling cache variable for type metadata for Participant?);
          }
          else
          {
            uint64_t v43 = v41;
            uint64_t v44 = v70;
            outlined init with take of Participant(v43, v70);
            if (!*(void *)(v44 + *(int *)(v42 + 28)))
            {
              uint64_t active = MultiwayViewController.mostActiveParticipants.getter();
              ParticipantGridViewController.defocus(to:)((Swift::OpaquePointer)active);
              swift_bridgeObjectRelease();
            }
            _s15ConversationKit11ParticipantVWOhTm_12(v44, (void (*)(void))type metadata accessor for Participant);
          }
        }
        if ((v25 & 0xC0) == 0x40)
        {
LABEL_38:
          MultiwayViewConstraintsController.localParticipantState.setter(v25);
          LocalParticipantView.configureControls(_:)(v25);
          MultiwayViewController.updateLocalParticipantControls()();
          uint64_t v46 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
          uint64_t ObjectType = swift_getObjectType();
          char v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 320))(ObjectType, v46);
          char v49 = (unsigned char *)swift_allocObject();
          memcpy(v49 + 16, v78, 0xD8uLL);
          v49[232] = v32;
          v49[233] = v25;
          uint64_t v50 = swift_allocObject();
          swift_unknownObjectWeakInit();
          BOOL v51 = v3;
          uint64_t v52 = swift_allocObject();
          *(void *)(v52 + 16) = v50;
          *(unsigned char *)(v52 + 24) = v25;
          *(unsigned char *)(v52 + 25) = v69;
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v76);
          swift_retain();
          uint64_t v53 = v48 & 1;
          int v54 = v51;
          MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v53, partial apply for closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:), v49, partial apply for closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:), v52);
          swift_release();
          swift_release();
          swift_release();
          if ((v25 & 0x80) != 0)
          {
            if (v25 == 128)
            {
              char v61 = 0;
            }
            else
            {
              uint64_t v62 = (void *)(v26 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
              swift_beginAccess();
              if (!*v62)
              {
                if (MultiwayViewController.effectsBrowserIsOpaque.getter()) {
                  uint64_t v63 = 2;
                }
                else {
                  uint64_t v63 = 1;
                }
                objc_msgSend(v54, sel_setControlsState_animated_, v63, 1);
              }
              char v61 = 0;
            }
          }
          else
          {
            id v55 = objc_msgSend(self, sel_currentDevice);
            id v56 = objc_msgSend(v55, sel_userInterfaceIdiom);

            if (v56 == (id)1)
            {
              uint64_t v57 = MultiwayViewController.constraintController.getter();
              if (v57)
              {
                uint64_t v58 = (void *)v57;
                double v59 = (unsigned __int8 *)(v57 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
                swift_beginAccess();
                int v60 = *v59;

                char v61 = v60 != 2;
              }
              else
              {
                char v61 = 1;
              }
            }
            else
            {
              char v61 = 1;
            }
            if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
            {
              uint64_t v64 = (uint64_t)v77[1]
                  + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
              swift_beginAccess();
              uint64_t v65 = v72;
              outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v64, v72, &demangling cache variable for type metadata for Participant?);
              LODWORD(v64) = __swift_getEnumTagSinglePayload(v65, 1, v73);
              outlined destroy of SystemUpdateNotice?(v65, &demangling cache variable for type metadata for Participant?);
              if (v64 == 1) {
                char v61 = 0;
              }
            }
          }
          ParticipantViewDragController.dragEnabled.setter(v61);
          MultiwayViewController.updateIsCaptionsViewDragEnabled()();
          if (v28 > 0x80 || v25 >= 0x81u) {
            MultiwayViewController.updateViewVisibility(localParticipantState:)(*v68);
          }
          MultiwayViewController.updateShouldShowReactionPickerTipView()();
          MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
          return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v76);
        }
LABEL_37:
        v75[0] = 0;
        MultiwayViewController.reactionsState.setter(v75, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState, (uint64_t (*)(char *))MultiwayViewController.reactionsState.didset);
        goto LABEL_38;
      }
      if ((v28 & 0xC0) == 0x80)
      {
        if (v28 == 129)
        {
          uint64_t v33 = &v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
          swift_beginAccess();
          uint64_t v34 = *(void (**)(uint64_t))v33;
          if (*(void *)v33)
          {
            uint64_t v35 = swift_retain();
            v34(v35);
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v34);
          }
        }
        else if (v28 != 128)
        {
          goto LABEL_23;
        }
        MultiwayViewController.hideEffectsBrowser()();
      }
LABEL_23:
      MultiwayViewController.hideZoomControlIfNeeded()();
      if (v25 == 128)
      {
        uint64_t v36 = (char *)v77[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled;
        swift_beginAccess();
        if ((*v36 & 1) == 0)
        {
          if (v77[9])
          {
            int v67 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v77[9]) + 0xA8);
            uint64_t v37 = v3;
            id v38 = v77[9];
            char v39 = v67();

            uint64_t v3 = v37;
            unsigned __int8 v25 = v74;
          }
          else
          {
            char v39 = 0;
          }
          unsigned char *v36 = v39 & 1;
          InCallControlsViewController.updateEffectsButton()();
        }
      }
      goto LABEL_29;
    }
  }
  return result;
}

double MultiwayViewController.rotate(portraitRect:for:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v10 = a2;
  switch(a1)
  {
    case 0:
      id v11 = objc_msgSend(v5, sel_view);
      if (!v11)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x1C35DF7BCLL);
      }
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_bounds);

      double v10 = a3;
      break;
    case 1:
      return v10;
    case 2:
      id v13 = objc_msgSend(v5, sel_view);
      if (!v13) {
        goto LABEL_16;
      }
      uint64_t v14 = v13;
      objc_msgSend(v13, sel_bounds);
      double v16 = v15;

      return v16 - a5 - a3;
    case 3:
      id v17 = objc_msgSend(v5, sel_view);
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = v17;
      objc_msgSend(v17, sel_bounds);
      double v20 = v19;

      id v21 = objc_msgSend(v5, sel_view);
      if (!v21) {
        goto LABEL_18;
      }
      char v22 = v21;
      double v10 = v20 - a4 - a2;
      objc_msgSend(v21, sel_bounds);

      break;
    default:
      if (one-time initialization token for default != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      __swift_project_value_buffer(v23, (uint64_t)static Log.default);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_1C2F90000, v24, v25, "Unknown enum case", v26, 2u);
        MEMORY[0x1C87760E0](v26, -1, -1);
      }

      return 0.0;
  }
  return v10;
}

Swift::Void __swiftcall MultiwayViewController.removeAllEffectsObjects()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  char v5 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_50_1();
  v6();
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  specialized EffectsHandler.wipeEffectsState()();
  uint64_t v7 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
  OUTLINED_FUNCTION_1_21();
  uint64_t v8 = *v7;
  void *v7 = 0;

  uint64_t v9 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  uint64_t v10 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_116_4(v10, (uint64_t)v39);
  outlined init with take of CATransform3D?((uint64_t)v39, (uint64_t)v40, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t Enum = getEnumTag for TapInteraction.EventType(v40);
  if (Enum != 1)
  {
    uint64_t v12 = (void *)v9[8];
    if (v12)
    {
      id v13 = v12;
      objc_msgSend(v13, sel_willMoveToParentViewController_, 0);
      objc_msgSend(v13, sel_removeFromParentViewController);
      if (!objc_msgSend(v13, sel_isViewLoaded))
      {
LABEL_7:
        objc_msgSend(v13, sel_didMoveToParentViewController_, 0);

        goto LABEL_8;
      }
      id v14 = objc_msgSend(v13, (SEL)&selRef_setDateFormat_);
      if (v14)
      {
        double v15 = v14;
        [v14 (SEL)0x1F6DF7398];

        goto LABEL_7;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
  }
LABEL_8:
  OUTLINED_FUNCTION_116_4(Enum, (uint64_t)v37);
  outlined init with take of CATransform3D?((uint64_t)v37, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v38);
  if (v16) {
    goto LABEL_14;
  }
  id v17 = (void *)v9[10];
  if (!v17) {
    goto LABEL_14;
  }
  id v18 = v17;
  MultiwayViewController.hideEffectsBrowser()();
  objc_msgSend(v18, sel_willMoveToParentViewController_, 0);
  objc_msgSend(v18, sel_removeFromParentViewController);
  if (objc_msgSend(v18, sel_isViewLoaded))
  {
    id v19 = objc_msgSend(v18, sel_view);
    if (v19)
    {
      double v20 = v19;
      objc_msgSend(v19, sel_removeFromSuperview);

      goto LABEL_13;
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_13:
  objc_msgSend(v18, sel_didMoveToParentViewController_, 0);

LABEL_14:
  uint64_t v21 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_116_4(v21, (uint64_t)v35);
  outlined init with take of CATransform3D?((uint64_t)v35, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v22 = OUTLINED_FUNCTION_6_112(v36);
  if (!v16)
  {
    uint64_t v23 = (void *)v9[8];
    void v9[8] = 0;
  }
  OUTLINED_FUNCTION_116_4(v22, (uint64_t)v33);
  outlined init with take of CATransform3D?((uint64_t)v33, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v34);
  if (!v16)
  {
    uint64_t v24 = (void *)v9[10];
    v9[10] = 0;
  }
  uint64_t v25 = swift_endAccess();
  OUTLINED_FUNCTION_116_4(v25, (uint64_t)v31);
  outlined init with take of CATransform3D?((uint64_t)v31, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v32);
  if (!v16)
  {
    uint64_t v26 = (char *)v9[6];
    uint64_t v27 = *(void *)&v26[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32];
    __swift_project_boxed_opaque_existential_1(&v26[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout], *(void *)&v26[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24]);
    unsigned int v28 = *(void (**)(uint64_t))(v27 + 120);
    char v29 = v26;
    uint64_t v30 = OUTLINED_FUNCTION_24_2();
    v28(v30);
  }
  OUTLINED_FUNCTION_28();
}

void MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(char a1, char a2)
{
  uint64_t v5 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)&v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled];
  swift_beginAccess();
  char *v8 = 1;
  if (a1) {
    specialized EffectsHandler.setUpEffectsObjectsIfNecessary()();
  }
  uint64_t v9 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v9, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v31, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v10 = 0;
  if (getEnumTag for TapInteraction.EventType(v32) != 1)
  {
    id v11 = *(void **)(v9 + 80);
    if (v11)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (v10) {
        id v12 = v11;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  outlined init with take of CATransform3D?(v9, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v29, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v30) == 1 || (id v13 = *(void **)(v9 + 64)) == 0)
  {
    id v14 = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else
  {
    self;
    id v14 = (void *)swift_dynamicCastObjCClass();
    if (v14) {
      id v15 = v13;
    }
    if ((a2 & 1) == 0)
    {
LABEL_19:
      int v16 = 0;
      if (a1) {
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v17 = 1;
      goto LABEL_21;
    }
  }
  outlined init with take of CATransform3D?(v9, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v27, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v28) == 1 || !*(void *)(v9 + 80)) {
    goto LABEL_19;
  }
  int v16 = 1;
  if ((a1 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v17 = 2;
LABEL_21:
  objc_msgSend(v2, sel_setControlsState_animated_, v17, 1);
  if ((a1 & 1) == 0)
  {
    if (v16) {
      MultiwayViewController.unfocusFocusedParticipant()();
    }
    if (v10)
    {
      id v24 = objc_msgSend(v10, sel_view);
      if (!v24) {
        goto LABEL_46;
      }
      uint64_t v25 = v24;
      objc_msgSend(v24, sel_setAlpha_, 0.0);
    }
    if (!v14)
    {
LABEL_40:

      return;
    }
    if (!objc_msgSend(v14, sel_effectsState)
      && (uint64_t v26 = (id *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects],
          swift_beginAccess(),
          *v26)
      && objc_msgSend(*v26, sel_mode)
      && *v26)
    {
      id v23 = *v26;
      objc_msgSend(v23, sel_setMode_, 0);
    }
    else
    {
      id v23 = v14;
    }
    id v14 = v10;
LABEL_39:

    uint64_t v10 = v14;
    goto LABEL_40;
  }
  if (v16)
  {
    uint64_t v18 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
        + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_18(v18, (uint64_t)v7);
    MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(v7, 1);
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
  }
  if (!v10) {
    goto LABEL_27;
  }
  id v19 = objc_msgSend(v10, sel_view);
  if (v19)
  {
    double v20 = v19;
    objc_msgSend(v19, sel_setAlpha_, 1.0);

LABEL_27:
    uint64_t v21 = (id *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects];
    swift_beginAccess();
    if (*v21)
    {
      id v22 = *v21;
      objc_msgSend(v22, sel_setMode_, 1);
    }
    id v23 = v10;
    goto LABEL_39;
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

uint64_t MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(unsigned __int8 *a1, int a2, int a3)
{
  int v117 = a3;
  int v119 = a2;
  uint64_t v115 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v115);
  uint64_t v116 = (uint64_t)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v112 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v113 = (uint64_t)&v106 - v9;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v14 = *a1;
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v120 = v3;
  __swift_project_value_buffer(v10, (uint64_t)logger);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  LODWORD(v118) = v14;
  if (v17)
  {
    CGRect v114 = v13;
    uint64_t v18 = v11;
    uint64_t v19 = v10;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v128[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    LOBYTE(v127[0]) = v14;
    uint64_t v22 = String.init<A>(reflecting:)();
    v127[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    if (v119 <= 0xFBu)
    {
      LOBYTE(v127[0]) = v119;
      uint64_t v25 = String.init<A>(reflecting:)();
      unint64_t v24 = v26;
    }
    else
    {
      unint64_t v24 = 0xE300000000000000;
      uint64_t v25 = 7104878;
    }
    v127[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v24, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v15, v16, "setConversationBannerState %s localParticipantState %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v21, -1, -1);
    MEMORY[0x1C87760E0](v20, -1, -1);

    uint64_t v10 = v19;
    uint64_t v11 = v18;
    id v13 = v114;
  }
  else
  {
  }
  uint64_t v27 = type metadata accessor for DispatchPredicate();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t *)((char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v30 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E4FBCBE8], v27);
  char v31 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v28 + 8))(v30, v27);
  if ((v31 & 1) == 0)
  {
    __break(1u);
LABEL_81:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v32 = v120 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v32, (uint64_t)v126, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v126, (uint64_t)v127, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = getEnumTag for TapInteraction.EventType(v127);
  if (result == 1) {
    return result;
  }
  memcpy(v128, v127, 0xD8uLL);
  outlined init with take of CATransform3D?((uint64_t)v126, (uint64_t)v125, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v125);
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_81;
  }
LABEL_12:
  uint64_t v34 = __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v34, v10);
  uint64_t v35 = v127[3];
  uint64_t v36 = (id *)(v127[3] + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  swift_beginAccess();
  uint64_t v37 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)*v36) + 0x840);
  id v38 = *v36;
  unsigned __int8 v39 = v37();

  if (v118)
  {
LABEL_13:
    uint64_t v109 = v35;
    char v40 = v118;
    uint64_t v111 = v10;
    uint64_t v41 = v127[6];
    uint64_t v42 = (unsigned __int8 *)(v127[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    swift_beginAccess();
    LODWORD(v114) = *v42;
    uint64_t v43 = (void *)v127[4];
    uint64_t v44 = v127[5];
    uint64_t v45 = swift_allocObject();
    *(unsigned char *)(v45 + 16) = v40;
    uint64_t v46 = (char *)(v45 + 16);
    uint64_t v118 = v41;
    uint64_t v47 = v41 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
    swift_beginAccess();
    if (*(unsigned char *)(v47 + 16) == 1 && !v43) {
      *uint64_t v46 = 0;
    }
    uint64_t v48 = v120;
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    char v49 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 656))();
    uint64_t v110 = v11;
    if (v49)
    {
      char v50 = 1;
      *uint64_t v46 = 1;
    }
    else
    {
      char v50 = *v46;
    }
    LOBYTE(v122[0]) = v50;
    MultiwayViewConstraintsController.inCallConversationBannerState.setter((uint64_t)v122);
    if ((MultiwayViewController.isOnScreen.getter() & 1) == 0 || MultiwayViewController.isPipped.getter())
    {
LABEL_57:
      if (v43)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v84 = v48;
        id v85 = v43;
        char v86 = ConversationController.isOneToOneModeEnabled.getter();
        (*(void (**)(void, uint64_t, uint64_t))(v44 + 24))(v86 & 1, ObjectType, v44);

        swift_beginAccess();
        LOBYTE(v121[0]) = *v46;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 48))(v121, ObjectType, v44);
      }
      else
      {
        swift_beginAccess();
        InCallBannerHostViewController.beginHUDTransition(isDismissed:)(*v46 == 0);
        uint64_t v84 = v48;
      }
      BOOL v87 = v43 != 0;
      MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
      MultiwayViewController.updateDeskViewButtonVisibility()();
      MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
      uint64_t v88 = *(void *)(v84 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
      uint64_t v89 = swift_getObjectType();
      char v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 320))(v89, v88);
      uint64_t v91 = swift_allocObject();
      *(unsigned char *)(v91 + 16) = v87;
      memcpy((void *)(v91 + 24), v128, 0xD8uLL);
      *(void *)(v91 + 240) = v45;
      swift_unknownObjectWeakInit();
      uint64_t v92 = swift_allocObject();
      *(unsigned char *)(v92 + 16) = v87;
      memcpy((void *)(v92 + 24), v128, 0xD8uLL);
      *(void *)(v92 + 240) = v45;
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v127);
      swift_retain();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v126);
      swift_retain();
      char v93 = v117 & 1;
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(v117 & 1, v90 & 1, partial apply for closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:), v91, partial apply for closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:), v92);
      swift_release();
      swift_release();
      swift_unknownObjectWeakDestroy();
      uint64_t v94 = v84;
      if (v119 <= 0xFBu) {
        MultiwayViewController.setLocalParticipantState(_:animated:)(v119, v93);
      }
      int v95 = MultiwayViewController.localParticipantState()();
      MultiwayViewController.setLocalParticipantState(_:animated:)(v95, v93);
      int v96 = (int)v114;
      if (v114)
      {
        swift_beginAccess();
        uint64_t v97 = v111;
        if (!*v46)
        {
          MultiwayViewController.hideEffectsBrowser()();
          uint64_t v98 = v127[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
          swift_beginAccess();
          uint64_t v99 = v113;
          outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v98, v113, &demangling cache variable for type metadata for Participant?);
          LODWORD(v98) = __swift_getEnumTagSinglePayload(v99, 1, v115);
          uint64_t v94 = v120;
          outlined destroy of SystemUpdateNotice?(v99, &demangling cache variable for type metadata for Participant?);
          if (v98 == 1)
          {
            uint64_t v100 = (unsigned char *)(v118 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
            swift_beginAccess();
            if ((*v100 & 0xFE) != 0x80)
            {
              uint64_t v101 = v112;
              __swift_storeEnumTagSinglePayload(v112, 1, 1, v115);
              ParticipantGridViewController.select(_:forFocusing:)();
              outlined destroy of SystemUpdateNotice?(v101, &demangling cache variable for type metadata for Participant?);
            }
          }
        }
        swift_beginAccess();
        int v102 = *v46;
        if (v96 == 2)
        {
          int v103 = &unk_1EBBAE000;
          if (v102 == 2) {
            goto LABEL_78;
          }
          if (*v46) {
            goto LABEL_77;
          }
        }
        else
        {
          int v103 = (void *)&unk_1EBBAE000;
          if (*v46)
          {
            if (v102 != 1) {
              goto LABEL_77;
            }
            goto LABEL_78;
          }
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v97 = v111;
        int v103 = (void *)&unk_1EBBAE000;
        if (!*v46) {
          goto LABEL_78;
        }
      }
      uint64_t v104 = *(void *)(v94 + v103[356]) + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      uint64_t v105 = v116;
      _s15ConversationKit11ParticipantVWOcTm_18(v104, v116);
      LOBYTE(v104) = Participant.isActiveWithVideo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12(v105, (void (*)(void))type metadata accessor for Participant);
      if ((v104 & 1) == 0) {
LABEL_77:
      }
        MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
LABEL_78:
      MultiwayViewController.updateShouldShowReactionPickerTipView()();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v126);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v13, v97);
      return swift_release();
    }
    if (*v46)
    {
      if (*v46 == 1)
      {
        if (v114 == 1) {
          goto LABEL_48;
        }
      }
      else if (v114 == 2)
      {
        goto LABEL_48;
      }
    }
    else if (!v114)
    {
      goto LABEL_48;
    }
    swift_retain_n();
    uint64_t v58 = Logger.logObject.getter();
    int v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, (os_log_type_t)v59))
    {
      int v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      v122[0] = v106;
      *(_DWORD *)int v60 = 136315138;
      swift_beginAccess();
      int v61 = *v46;
      os_log_t v108 = v58;
      int v107 = v59;
      if (v61)
      {
        if (v61 == 1)
        {
          unint64_t v62 = 0xE700000000000000;
          uint64_t v63 = 0x656C6269736976;
        }
        else
        {
          unint64_t v62 = 0xEE00756E654D676ELL;
          uint64_t v63 = 0x69746E6573657270;
        }
      }
      else
      {
        unint64_t v62 = 0xE600000000000000;
        uint64_t v63 = 0x6E6564646968;
      }
      v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v62, v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      os_log_t v64 = v108;
      _os_log_impl(&dword_1C2F90000, v108, (os_log_type_t)v107, "InCallBannerState:%s", v60, 0xCu);
      uint64_t v65 = v106;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v65, -1, -1);
      MEMORY[0x1C87760E0](v60, -1, -1);
    }
    else
    {

      swift_release_n();
    }
LABEL_48:
    uint64_t v66 = swift_beginAccess();
    if (*v46 - 1 <= 1)
    {
      if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(v48
                                                                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features))
                                               + 0x58))(v66) & 1) == 0)
      {
        int v67 = MultiwayViewController.bannerPresentationManager.getter();
        if (v67)
        {
          uint64_t v68 = v67;
          BOOL v69 = (void *)MEMORY[0x1C87730B0](0xD00000000000003ELL, 0x80000001C37B6C70);
          objc_msgSend(v68, sel_dismissPresentedBannerForReason_animated_, v69, 1);
        }
      }
      uint64_t v70 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
      uint64_t v71 = *(void **)(v48 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController);
      uint64_t v72 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v71) + 0x128);
      uint64_t v73 = v71;
      char v74 = v72();
      uint64_t v48 = v120;
      LOBYTE(v72) = v74;

      if ((v72 & 1) != 0 && !MultiwayViewController.isPipped.getter())
      {
        uint64_t v75 = Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v75, v76))
        {
          unint64_t v77 = (uint8_t *)swift_slowAlloc();
          os_log_t v108 = v75;
          unint64_t v78 = v77;
          *(_WORD *)unint64_t v77 = 0;
          _os_log_impl(&dword_1C2F90000, v108, v76, "MutedTalker: hiding banner for InCall control presentation", v77, 2u);
          double v79 = v78;
          uint64_t v75 = v108;
          MEMORY[0x1C87760E0](v79, -1, -1);
        }

        *(unsigned char *)(v48 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller) = 0;
        uint64_t v80 = *(void **)(v48 + v70);
        id v81 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v80) + 0x178);
        uint64_t v82 = v80;
        v81();
      }
    }
    goto LABEL_57;
  }
  switch(v39 >> 5)
  {
    case 1:
    case 2:
      break;
    case 3:
      if ((v39 & 0xFE) != 0x60) {
        goto LABEL_13;
      }
      break;
    case 4:
      if (v39 != 128) {
        goto LABEL_13;
      }
      break;
    case 5:
      if (v39 != 160) {
        goto LABEL_13;
      }
      break;
    default:
      goto LABEL_13;
  }
  BOOL v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    CGRect v114 = v13;
    int v54 = (uint8_t *)v53;
    uint64_t v55 = swift_slowAlloc();
    v124[0] = v55;
    *(_DWORD *)int v54 = 136315138;
    LOBYTE(v123) = v39;
    uint64_t v56 = String.init<A>(reflecting:)();
    uint64_t v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v51, v52, "Ignoring request to hide in-call controls in mode %s", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v55, -1, -1);
    MEMORY[0x1C87760E0](v54, -1, -1);

    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v126);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v114, v10);
  }
  else
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v126);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void MultiwayViewController.updateScreenSharingSnapshotView(_:)(id a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v5, (uint64_t)v105, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v105, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(__src) != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v6 = (unsigned char *)(__src[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing);
    swift_beginAccess();
    *uint64_t v6 = a1 & 1;
    outlined init with take of CATransform3D?((uint64_t)v105, (uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v103);
    InCallControlsViewController.updateScreenShareButton()();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static ScreenSharingInteractionController.shared)
                              + 0x128))();
    uint64_t v96 = v7;
    LODWORD(v100) = a1;
    if ((a1 & 1) != 0
      && v7 != 2
      && (MultiwayViewController.isOnScreen.getter() & 1) != 0
      && !MultiwayViewController.isPipped.getter())
    {
      unsigned int v98 = 1;
      uint64_t v8 = 16;
    }
    else
    {
      uint64_t v8 = 0;
      unsigned int v98 = 0;
    }
    unint64_t v9 = MultiwayViewController.ViewContent.allViews.getter();
    unint64_t v10 = v9;
    if (v9 >> 62)
    {
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v11) {
        goto LABEL_27;
      }
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_54;
    }
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1C87744F0](i, v10);
      }
      else {
        id v13 = *(id *)(v10 + 8 * i + 32);
      }
      int v14 = v13;
      id v15 = MultiwayViewController.captionsViewController.getter();
      if (!v15) {
        goto LABEL_19;
      }
      os_log_type_t v16 = v15;
      id v17 = v14;
      id v18 = objc_msgSend(v16, sel_view);

      if (!v18
        || (v18, v17 != v18)
        || (uint64_t v19 = MultiwayViewController.captionsViewController.getter()) != 0
        && (char v20 = v19[direct field offset for CaptionsViewController.allowsScreenshots],
            v19,
            (v20 & 1) != 0))
      {
LABEL_19:
        id v17 = objc_msgSend(v14, sel_layer, v96);
        objc_msgSend(v17, sel_setDisableUpdateMask_, v8);
      }
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
    if (v21)
    {
      uint64_t v22 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v21) + 0x98);
      unint64_t v23 = v21;
      v22(v98);
    }
    if (__src[20])
    {
      id v24 = (id)__src[20];
      id v25 = objc_msgSend(v24, sel_superview);

      if (!v25)
      {

        if ((v100 & 1) == 0) {
          goto LABEL_50;
        }
LABEL_34:
        id v27 = objc_msgSend(v3, sel_view, v96);
        if (v27)
        {
          uint64_t v28 = v27;
          id v2 = objc_msgSend(v27, sel_snapshotViewAfterScreenUpdates_, 0);

          if (v2)
          {
            a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
            objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
            id v29 = objc_msgSend(v3, sel_view);
            if (v29)
            {
              uint64_t v30 = v29;
              uint64_t v8 = (uint64_t)&selRef_ringButton;
              objc_msgSend(v29, sel_addSubview_, a1);

              id v31 = objc_msgSend(v3, sel_view);
              if (v31)
              {
                uint64_t v32 = v31;
                objc_msgSend(v31, sel_sendSubviewToBack_, a1);

                objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                objc_msgSend(a1, sel_addSubview_, v2);
                id v33 = objc_msgSend(self, sel_effectWithStyle_, 1);
                id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v33);

                objc_msgSend(v34, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                id v100 = v34;
                objc_msgSend(a1, sel_addSubview_, v34);
                unint64_t v10 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
                objc_msgSend((id)v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                if (one-time initialization token for background == -1)
                {
LABEL_39:
                  objc_msgSend((id)v10, sel_setBackgroundColor_, static Colors.MultiwayViewController.background, v96);
                  if (v97 != 2
                    && (MultiwayViewController.isOnScreen.getter() & 1) != 0
                    && !MultiwayViewController.isPipped.getter())
                  {
                    id v35 = objc_msgSend((id)v10, sel_layer);
                    objc_msgSend(v35, sel_setDisableUpdateMask_, 16);
                  }
                  objc_msgSend(a1, *(SEL *)(v8 + 1432), v10);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
                  uint64_t v36 = swift_allocObject();
                  *(_OWORD *)(v36 + 16) = xmmword_1C3789D20;
                  id v37 = objc_msgSend(v2, sel_topAnchor);
                  id v38 = objc_msgSend(a1, (SEL)&selRef_insertAttributedString_atIndex_ + 3);
                  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

                  *(void *)(v36 + 32) = v39;
                  id v40 = objc_msgSend(v2, sel_leadingAnchor);
                  id v41 = objc_msgSend(a1, (SEL)&selRef_shouldShowCallDetailsWhenReady + 2);
                  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

                  *(void *)(v36 + 40) = v42;
                  id v43 = objc_msgSend(v2, sel_bottomAnchor);
                  id v44 = objc_msgSend(a1, (SEL)&selRef_canOpenURL_ + 5);
                  id v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

                  *(void *)(v36 + 48) = v45;
                  uint64_t v99 = v2;
                  id v46 = objc_msgSend(v2, sel_trailingAnchor);
                  id v47 = objc_msgSend(a1, sel_trailingAnchor);
                  id v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

                  *(void *)(v36 + 56) = v48;
                  id v49 = objc_msgSend(v100, sel_topAnchor);
                  id v50 = objc_msgSend(a1, sel_topAnchor);
                  id v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

                  *(void *)(v36 + 64) = v51;
                  id v52 = objc_msgSend(v100, sel_leadingAnchor);
                  id v53 = objc_msgSend(a1, sel_leadingAnchor);
                  id v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v53);

                  *(void *)(v36 + 72) = v54;
                  id v55 = objc_msgSend(v100, sel_bottomAnchor);
                  id v56 = objc_msgSend(a1, sel_bottomAnchor);
                  id v57 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v56);

                  *(void *)(v36 + 80) = v57;
                  id v58 = objc_msgSend(v100, sel_trailingAnchor);
                  id v59 = objc_msgSend(a1, sel_trailingAnchor);
                  id v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

                  *(void *)(v36 + 88) = v60;
                  id v61 = objc_msgSend((id)v10, sel_topAnchor);
                  id v62 = objc_msgSend(a1, sel_topAnchor);
                  id v63 = objc_msgSend(v61, sel_constraintEqualToAnchor_, v62);

                  *(void *)(v36 + 96) = v63;
                  id v64 = objc_msgSend((id)v10, sel_leadingAnchor);
                  id v65 = objc_msgSend(a1, sel_leadingAnchor);
                  id v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v65);

                  *(void *)(v36 + 104) = v66;
                  id v67 = objc_msgSend((id)v10, sel_bottomAnchor);
                  id v68 = objc_msgSend(a1, sel_bottomAnchor);
                  id v69 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v68);

                  *(void *)(v36 + 112) = v69;
                  id v70 = objc_msgSend((id)v10, sel_trailingAnchor);
                  id v71 = objc_msgSend(a1, sel_trailingAnchor);
                  id v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v71);

                  *(void *)(v36 + 120) = v72;
                  id v73 = objc_msgSend(a1, sel_topAnchor);
                  id v74 = objc_msgSend(v3, sel_view);
                  if (v74)
                  {
                    uint64_t v75 = v74;
                    id v76 = objc_msgSend(v74, (SEL)&selRef_insertAttributedString_atIndex_ + 3);

                    id v77 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v76);
                    *(void *)(v36 + 128) = v77;
                    id v78 = objc_msgSend(a1, sel_leadingAnchor);
                    id v79 = objc_msgSend(v3, sel_view);
                    if (v79)
                    {
                      uint64_t v80 = v79;
                      id v81 = objc_msgSend(v79, sel_leadingAnchor);

                      id v82 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v81);
                      *(void *)(v36 + 136) = v82;
                      id v83 = objc_msgSend(a1, sel_bottomAnchor);
                      id v84 = objc_msgSend(v3, sel_view);
                      if (v84)
                      {
                        id v85 = v84;
                        id v86 = objc_msgSend(v84, sel_bottomAnchor);

                        id v87 = objc_msgSend(v83, sel_constraintEqualToAnchor_, v86);
                        *(void *)(v36 + 144) = v87;
                        id v88 = objc_msgSend(a1, sel_trailingAnchor);
                        id v89 = objc_msgSend(v3, sel_view);
                        if (v89)
                        {
                          char v90 = v89;
                          uint64_t v91 = self;
                          id v92 = objc_msgSend(v90, sel_trailingAnchor);

                          id v93 = objc_msgSend(v88, sel_constraintEqualToAnchor_, v92);
                          *(void *)(v36 + 152) = v93;
                          specialized Array._endMutation()();
                          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                          Class isa = Array._bridgeToObjectiveC()().super.isa;
                          swift_bridgeObjectRelease();
                          objc_msgSend(v91, sel_activateConstraints_, isa);

                          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v105);
                          outlined init with take of CATransform3D?(v5, (uint64_t)v101, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
                          outlined init with take of CATransform3D?((uint64_t)v101, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
                          if (getEnumTag for TapInteraction.EventType(v102) == 1)
                          {
                          }
                          else
                          {
                            int v95 = *(void **)(v5 + 160);
                            *(void *)(v5 + 160) = a1;
                          }
                          return;
                        }
LABEL_60:
                        __break(1u);
                        return;
                      }
LABEL_59:
                      __break(1u);
                      goto LABEL_60;
                    }
LABEL_58:
                    __break(1u);
                    goto LABEL_59;
                  }
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
LABEL_54:
                swift_once();
                goto LABEL_39;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_57;
          }
        }
LABEL_50:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v105);
        return;
      }
      objc_msgSend(v24, sel_removeFromSuperview);

      outlined init with take of CATransform3D?(v5, (uint64_t)v101, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v101, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v102) != 1)
      {
        unint64_t v26 = *(void **)(v5 + 160);
        *(void *)(v5 + 160) = 0;
      }
    }
    if ((v100 & 1) == 0) {
      goto LABEL_50;
    }
    goto LABEL_34;
  }
}

Swift::Void __swiftcall MultiwayViewController.showOneToOneLivePhotosAlert(_:)(Swift::String a1)
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v6, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v35, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v36);
  if (!v7 && v37)
  {
    uint64_t v8 = (char *)v37;
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v35);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v9 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v9 + 16) = xmmword_1C3769620;
    uint64_t v29 = v5;
    uint64_t v30 = v3;
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    uint64_t v11 = String.init<A>(reflecting:)();
    uint64_t v13 = v12;
    *(void *)(v9 + 56) = v10;
    *(void *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v13;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v14 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer;
    id v15 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer);
    if (v15) {
      objc_msgSend(v15, sel_invalidate, v29, v30);
    }
    objc_msgSend(v8, sel_setAlpha_, 0.0, v29, v30);
    objc_msgSend(v8, sel_setHidden_, 0);
    objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
    os_log_type_t v16 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel];
    swift_bridgeObjectRetain();
    uint64_t v17 = OUTLINED_FUNCTION_39();
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(v17, v18, v16);
    swift_bridgeObjectRelease();
    uint64_t v19 = OUTLINED_FUNCTION_20();
    *(void *)(v19 + 16) = v8;
    char v20 = self;
    uint64_t v21 = OUTLINED_FUNCTION_26();
    *(void *)(v21 + 16) = partial apply for closure #2 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout();
    *(void *)(v21 + 24) = v19;
    id v33 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v34 = v21;
    uint64_t v29 = MEMORY[0x1E4F143A8];
    uint64_t v30 = 1107296256;
    id v31 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v32 = &block_descriptor_102;
    uint64_t v22 = _Block_copy(&v29);
    unint64_t v23 = v8;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_animateWithDuration_animations_completion_, v22, 0, 0.25);
    _Block_release(v22);
    id v24 = self;
    uint64_t v25 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    id v33 = partial apply for closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:);
    uint64_t v34 = v25;
    uint64_t v29 = MEMORY[0x1E4F143A8];
    uint64_t v30 = 1107296256;
    id v31 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    uint64_t v32 = &block_descriptor_54;
    unint64_t v26 = _Block_copy(&v29);
    swift_release();
    id v27 = objc_msgSend(v24, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v26, 3.0);
    swift_release();

    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v35);
    _Block_release(v26);
    uint64_t v28 = *(void **)(v1 + v14);
    *(void *)(v1 + v14) = v27;
  }
  OUTLINED_FUNCTION_33_2();
}

void closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    MultiwayViewController.hideAlert()();
  }
}

void MultiwayViewController.hideAlert()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v20) != 1)
  {
    uint64_t v2 = v21;
    if (v21)
    {
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = v2;
      uint64_t v4 = self;
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = partial apply for closure #1 in MultiwayViewController.hideAlert();
      *(void *)(v5 + 24) = v3;
      uint64_t v17 = (id (*)())thunk for @escaping @callee_guaranteed () -> ()partial apply;
      uint64_t v18 = v5;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v14 = 1107296256;
      id v15 = thunk for @escaping @callee_guaranteed () -> ();
      os_log_type_t v16 = &block_descriptor_372;
      uint64_t v6 = _Block_copy(&aBlock);
      id v7 = v2;
      swift_retain();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
      swift_release();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      uint64_t v17 = partial apply for closure #3 in MultiwayViewController.hideAlert();
      uint64_t v18 = v8;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v14 = 1107296256;
      id v15 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      os_log_type_t v16 = &block_descriptor_378;
      uint64_t v9 = _Block_copy(&aBlock);
      id v10 = v7;
      swift_release();
      objc_msgSend(v4, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v6, v9, 0.15, 0.0);
      _Block_release(v9);
      _Block_release(v6);
      uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer);
      if (v11)
      {
        id v12 = v11;
        objc_msgSend(v12, sel_invalidate);
        swift_release();

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
      }
      else
      {
        swift_release();

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
      }
    }
  }
}

void MultiwayViewController.resetCaptionsViewDragState()()
{
  MultiwayViewController.updateIsCaptionsViewDragEnabled()();
  uint64_t v0 = MultiwayViewController.constraintController.getter();
  if (v0)
  {
    id v4 = (id)v0;
    uint64_t v1 = (void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
    uint64_t v2 = v1[3];
    uint64_t v3 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 112))(v2, v3);
  }
}

void MultiwayViewController.showZoomControl()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v11, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v12) != 1)
  {
    uint64_t v2 = *(id *)(v1 + 56);
    id v3 = [v2 superview];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
      swift_beginAccess();
      uint64_t v6 = *(void (**)(void *, NSObject *))((*MEMORY[0x1E4FBC8C8] & *(void *)*v5) + 0x1C8);
      id v7 = *v5;
      v6(v4, v2);

      goto LABEL_9;
    }
  }
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Log.default);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_1C2F90000, v2, v9, "PipZoomControl: Not able to add because of missing local participant view", v10, 2u);
    MEMORY[0x1C87760E0](v10, -1, -1);
  }
LABEL_9:
}

void MultiwayViewController.hideZoomControl()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v11) == 1
    || (uint64_t v2 = objc_msgSend(*(id *)(v1 + 56), sel_superview)) == 0)
  {
    if (one-time initialization token for default != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Log.default);
    id v3 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v9 = 0;
      _os_log_impl(&dword_1C2F90000, v3, v8, "PipZoomControl: Not able to remove because of missing local participant view", v9, 2u);
      MEMORY[0x1C87760E0](v9, -1, -1);
    }
  }
  else
  {
    id v3 = v2;
    id v4 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
    swift_beginAccess();
    uint64_t v5 = *(void (**))((*MEMORY[0x1E4FBC8C8] & *(void *)*v4) + 0x1D0);
    id v6 = *v4;
    v5(v3);
  }
}

void MultiwayViewController.hideZoomControlIfNeeded()()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  swift_beginAccess();
  uint64_t v2 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)*v1) + 0x180);
  id v3 = *v1;
  char v4 = v2();

  if (v4) {
    MultiwayViewController.hideZoomControl()();
  }
}

uint64_t MultiwayViewController.nextScheduledUpdateInterval(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v2);
  char v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28))) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v4);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  double v9 = 0.1;
  switch((int)EnumCaseMultiPayload)
  {
    case 2:
    case 3:
      goto LABEL_6;
    case 4:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v15 = (uint64_t)&v4[*(int *)(v14 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(void *)&v4[*(int *)(v14 + 64)], *(void *)&v4[*(int *)(v14 + 64) + 8]);
      outlined destroy of Participant.MediaInfo(v15);
LABEL_6:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
      goto LABEL_10;
    case 5:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      unint64_t v16 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))((char *)&v20 - v16, v4, v5);
      MEMORY[0x1F4188790](v17);
      Date.addingTimeInterval(_:)();
      Date.timeIntervalSinceNow.getter();
      double v9 = v18;
      uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
      v19((char *)&v20 - v16, v5);
      v19((char *)&v20 - v16, v5);
      goto LABEL_8;
    case 6:
      goto LABEL_9;
    default:
      uint64_t v10 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
      MEMORY[0x1F4188790](v10);
      Date.addingTimeInterval(_:)();
      uint64_t v11 = *(void (**)(char *, uint64_t))(v6 + 8);
      v11((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      Date.timeIntervalSinceNow.getter();
      double v9 = v12;
      v11((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
LABEL_8:
      if (v9 <= 0.0) {
LABEL_10:
      }
        uint64_t result = 0;
      else {
LABEL_9:
      }
        uint64_t result = *(void *)&v9;
      break;
  }
  return result;
}

uint64_t closure #1 in MultiwayViewController.scheduleUpdate(for:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C8776240](v8);
  if (!v9)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
    return outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
  }
  uint64_t v10 = (void *)v9;
  id v11 = *(id *)(v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

  ConversationController.participant(with:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
  }
  outlined init with take of Participant((uint64_t)v4, (uint64_t)v7);
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1C8776240](v8);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    __int16 v16 = 513;
    MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)((uint64_t)v7, (unsigned __int8 *)&v16);
  }
  return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
}

BOOL MultiwayViewController.inCallConversationBannerHidable()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  char v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v13, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v37, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v38) == 1) {
    return 0;
  }
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 304);
  outlined init with take of CATransform3D?((uint64_t)v37, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v36);
  if ((v16(ObjectType, v14) & 1) == 0)
  {
    uint64_t v17 = v38[3];
    if ((InCallBannerHostViewController.menuPresented.getter() & 1) == 0)
    {
      double v18 = (void **)(v17
                      + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
      swift_beginAccess();
      uint64_t v19 = *v18;
      if (*v18)
      {
        uint64_t v20 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v19) + 0x378);
        uint64_t v21 = v19;
        v20();
      }
      else
      {
        uint64_t v22 = type metadata accessor for ConversationControlsRecipe();
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v22);
      }
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v12, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      uint64_t v23 = type metadata accessor for ConversationControlsRecipe();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v23) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v12, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      }
      else
      {
        outlined init with copy of ConversationControlsType((uint64_t)v10, (uint64_t)&v32);
        int v24 = v35;
        outlined destroy of ConversationControlsType((uint64_t)&v32);
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v10, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v12, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        if (!v24)
        {
          outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          outlined destroy of SystemUpdateNotice?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          goto LABEL_29;
        }
      }
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v7, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v23) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        goto LABEL_21;
      }
      outlined init with copy of ConversationControlsType((uint64_t)v4, (uint64_t)&v32);
      if (v35 == 1)
      {
        outlined destroy of ConversationControlsType((uint64_t)&v32);
      }
      else if (v35 != 6 {
             || (v32 != 5 ? (BOOL v25 = v32 == 2) : (BOOL v25 = 1),
      }
                 !v25
              || (int8x16_t v26 = vorrq_s8(v33, v34),
                  *(void *)&vorr_s8(*(int8x8_t *)v26.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL)))))
      {
        outlined destroy of ConversationControlsType((uint64_t)&v32);
        outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v4, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
LABEL_21:
        uint64_t v27 = v39;
        uint64_t v28 = (unsigned char *)(v39 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if ((*v28 & 0xFE) != 0x80)
        {
          uint64_t v30 = (unsigned __int8 *)(v27 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
          swift_beginAccess();
          LODWORD(v30) = *v30;
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v37);
          return v30 == 1;
        }
        goto LABEL_22;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v4, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
LABEL_29:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v37);
      return 1;
    }
  }
LABEL_22:
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v37);
  return 0;
}

void MultiwayViewController.restartAutoHideInCallControlsTimer()()
{
  uint64_t v1 = v0;
  if (MultiwayViewController.wantsStandardControls.getter())
  {
    uint64_t v2 = type metadata accessor for DispatchPredicate();
    uint64_t v3 = *(void *)(v2 - 8);
    MEMORY[0x1F4188790](v2);
    uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    *uint64_t v5 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
    char v6 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    if (v6)
    {
      uint64_t v7 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer;
      uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer);
      if (v8) {
        objc_msgSend(v8, sel_invalidate);
      }
      if (MultiwayViewController.inCallConversationBannerHidable()())
      {
        uint64_t v9 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
        swift_beginAccess();
        outlined init with take of CATransform3D?(v9, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v24) == 1)
        {
          double v10 = 10.0;
        }
        else
        {
          uint64_t v11 = *(void *)(v9 + 24) + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
          swift_beginAccess();
          outlined init with copy of ConversationControlsType(v11, (uint64_t)v22);
          outlined init with take of ConversationControlsType(v22, &v17);
          double v10 = ConversationControlsType.dismissTimerDuration(inCallControls:)(1);
          outlined destroy of ConversationControlsType((uint64_t)&v17);
        }
        uint64_t v12 = self;
        uint64_t v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v20 = partial apply for closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer();
        uint64_t v21 = v13;
        *(void *)&long long v17 = MEMORY[0x1E4F143A8];
        *((void *)&v17 + 1) = 1107296256;
        double v18 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
        uint64_t v19 = &block_descriptor_349;
        uint64_t v14 = _Block_copy(&v17);
        swift_release();
        id v15 = objc_msgSend(v12, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v14, v10);
        _Block_release(v14);
        __int16 v16 = *(void **)(v1 + v7);
        *(void *)(v1 + v7) = v15;
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](a2 + 16);
  if (!v7) {
    return;
  }
  uint64_t v8 = v7;
  if (!MultiwayViewController.inCallConversationBannerHidable()())
  {
LABEL_5:

    return;
  }
  uint64_t v9 = (uint64_t)v8 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v9, (uint64_t)v63, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v63, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v64) == 1)
  {
    LOBYTE(v59) = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)&v59, 252, 1);
    goto LABEL_5;
  }
  double v10 = *(void **)(v9 + 24);
  uint64_t v11 = one-time initialization token for conversationControls;
  uint64_t v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  uint64_t v14 = (uint64_t)v12 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
  swift_beginAccess();
  outlined init with copy of ConversationControlsType(v14, (uint64_t)&v59);
  switch(v62)
  {
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 2:

      goto LABEL_25;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 4:
      goto LABEL_21;
    case 5:
      swift_unknownObjectRelease();
      goto LABEL_21;
    case 6:
      uint64_t v46 = v60 | *((void *)&v60 + 1) | v61;
      if (!(v46 | (unint64_t)v59 | *((void *)&v59 + 1))) {
        goto LABEL_25;
      }
      uint64_t v47 = v46 | *((void *)&v59 + 1);
      if ((void)v59 == 1 && !v47) {
        goto LABEL_25;
      }
      if ((void)v59 == 2 && !v47)
      {
LABEL_11:
        id v15 = MultiwayViewController.conversationControlsManager.getter();
        if (!v15) {
          goto LABEL_45;
        }
        __int16 v16 = v15;
        char v17 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x9F8))();

        if ((v17 & 1) == 0) {
          goto LABEL_45;
        }
        uint64_t v18 = type metadata accessor for UUID();
        uint64_t v55 = *(void *)(v18 - 8);
        MEMORY[0x1F4188790](v18);
        id v54 = (uint8_t *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        os_log_t v56 = (os_log_t)&v53;
        MEMORY[0x1F4188790](v20 - 8);
        uint64_t v22 = v12;
        uint64_t v23 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        id v57 = v22;
        uint64_t v24 = (uint64_t)v22 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice;
        swift_beginAccess();
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v24, (uint64_t)&v59, &demangling cache variable for type metadata for Notice?);
        uint64_t v25 = *((void *)&v60 + 1);
        if (*((void *)&v60 + 1))
        {
          id v53 = (uint8_t *)v18;
          uint64_t v26 = v61;
          __swift_project_boxed_opaque_existential_1(&v59, *((uint64_t *)&v60 + 1));
          uint64_t v27 = (uint64_t)v53;
          (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v27);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
          if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v27) != 1)
          {
            uint64_t v28 = v54;
            (*(void (**)(void))(v55 + 32))();
            uint64_t v29 = MultiwayViewController.conversationControlsManager.getter();
            if (v29)
            {
              uint64_t v30 = v29;
              id v31 = objc_retain(*(id *)((char *)v29
                                      + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator));

              ConversationControlsNoticeCoordinator.noticeDismissed(noticeUUID:dismissContext:)();
            }
            (*(void (**)(uint8_t *, uint64_t))(v55 + 8))(v28, v27);
            goto LABEL_44;
          }
        }
        else
        {
          outlined destroy of SystemUpdateNotice?((uint64_t)&v59, &demangling cache variable for type metadata for Notice?);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v18);
        }
        outlined destroy of SystemUpdateNotice?((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_44:
        uint64_t v12 = v57;
LABEL_45:
        uint64_t v61 = 0;
        long long v59 = 0u;
        long long v60 = 0u;
        char v62 = 6;
        InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)((uint64_t)&v59, 0);

        outlined destroy of ConversationControlsType((uint64_t)&v59);
        goto LABEL_46;
      }
      if ((void)v59 != 3 || v47)
      {
        if (((void)v59 != 4 || v47) && ((void)v59 != 5 || v47))
        {
          BOOL v52 = (v59 & 0xFFFFFFFFFFFFFFFELL) == 8 || (v59 & 0xFFFFFFFFFFFFFFFELL) == 6;
          if (v52 && !v47
            || ((void)v59 != 10 || v47)
            && ((void)v59 != 11 || v47)
            && ((void)v59 != 12 || v47)
            && ((void)v59 != 13 || v47)
            && ((void)v59 != 14 || v47)
            && ((unint64_t)(v59 - 15) <= 4 && !v47
             || ((void)v59 != 20 || v47) && (unint64_t)(v59 - 21) <= 2 && !v47))
          {
LABEL_21:
            uint64_t v32 = v12;
            int8x16_t v33 = Logger.logObject.getter();
            os_log_type_t v34 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v33, v34))
            {
              os_log_t v56 = v33;
              unsigned __int8 v35 = (uint8_t *)swift_slowAlloc();
              uint64_t v55 = swift_slowAlloc();
              id v57 = v12;
              v58[0] = v55;
              *(_DWORD *)unsigned __int8 v35 = 136315138;
              id v53 = v35 + 4;
              id v54 = v35;
              outlined init with copy of ConversationControlsType(v14, (uint64_t)&v59);
              uint64_t v36 = specialized >> prefix<A>(_:)((uint64_t)&v59);
              unint64_t v38 = v37;
              outlined destroy of SystemUpdateNotice?((uint64_t)&v59, &demangling cache variable for type metadata for ConversationControlsType?);
              *(void *)&long long v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, v58);
              uint64_t v12 = v57;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();

              int8x16_t v33 = v56;
              os_log_type_t v39 = v34;
              id v40 = v54;
              _os_log_impl(&dword_1C2F90000, v56, v39, "presentedBannerDismissalTimer %s", v54, 0xCu);
              uint64_t v41 = v55;
              swift_arrayDestroy();
              MEMORY[0x1C87760E0](v41, -1, -1);
              MEMORY[0x1C87760E0](v40, -1, -1);
            }
            else
            {
            }
          }
        }
LABEL_25:
        if ([v8 axShouldDisableAutoHidingControls])
        {
          id v42 = Logger.logObject.getter();
          os_log_type_t v43 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v42, v43))
          {
            id v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v44 = 0;
            _os_log_impl(&dword_1C2F90000, v42, v43, "AX settings enabled, preventing dismissal of controls", v44, 2u);
            MEMORY[0x1C87760E0](v44, -1, -1);
            id v45 = v42;
          }
          else
          {
            id v45 = v8;
            uint64_t v8 = v12;
            uint64_t v12 = v42;
          }
        }
        else
        {
          LOBYTE(v59) = 0;
          MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)&v59, 252, 1);
        }
      }
      else
      {
        if ([v8 axShouldDisableAutoHidingControls])
        {
          id v48 = Logger.logObject.getter();
          os_log_type_t v49 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v48, v49))
          {
            id v50 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v50 = 0;
            _os_log_impl(&dword_1C2F90000, v48, v49, "AX settings enabled, preventing dismissal of controls", v50, 2u);
            MEMORY[0x1C87760E0](v50, -1, -1);
            id v51 = v48;
            id v48 = v12;
          }
          else
          {
            id v51 = v8;
            uint64_t v8 = v12;
          }
        }
        else
        {
          LOBYTE(v58[0]) = 0;
          MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)v58, 252, 1);
        }
      }
LABEL_46:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    default:
      outlined destroy of ConversationControlsType((uint64_t)&v59);
      goto LABEL_11;
  }
}

uint64_t closure #1 in MultiwayViewController.activeRemoteParticipants(in:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28)))
  {
    uint64_t v5 = type metadata accessor for Date();
    v17[1] = v17;
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    MEMORY[0x1F4188790](v5);
    _s15ConversationKit11ParticipantVWOcTm_18(a1, (uint64_t)v4);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch((int)EnumCaseMultiPayload)
    {
      case 2:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
        char v11 = 0;
        break;
      case 3:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
        goto LABEL_7;
      case 4:
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v13 = (uint64_t)&v4[*(int *)(v12 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(void *)&v4[*(int *)(v12 + 64)], *(void *)&v4[*(int *)(v12 + 64) + 8]);
        char v11 = Participant.isActiveWithAV.getter();
        outlined destroy of Participant.MediaInfo(v13);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
        break;
      case 5:
        MEMORY[0x1F4188790](EnumCaseMultiPayload);
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
        Date.timeIntervalSince(_:)();
        double v15 = v14;
        (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
        char v11 = v15 < 7.0;
        break;
      case 6:
LABEL_7:
        char v11 = 1;
        break;
      default:
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
        Date.timeIntervalSince(_:)();
        double v10 = v9;
        (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
        char v11 = v10 < 45.0;
        break;
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

BOOL VideoMessageController.State.requiresControlsHidden.getter(unsigned __int8 a1)
{
  return a1 - 2 < 7;
}

BOOL MultiwayViewController.isPresentingEffectsBrowser.getter()
{
  uint64_t v0 = (void *)MultiwayViewController.effectsBrowserViewController.getter();
  id v1 = objc_msgSend(v0, sel_parentViewController);

  if (v1) {
  return v1 != 0;
  }
}

uint64_t MultiwayViewController.shouldEnableVideoMessagingForCurrentState()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 600))(ObjectType, v2) & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v4, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v14) == 1) {
    goto LABEL_7;
  }
  uint64_t v5 = (unsigned __int8 *)(*(void *)(v4 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  unsigned int v6 = *v5;
  if (v6 >> 6 < 2) {
    goto LABEL_7;
  }
  if (v6 == 128) {
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = swift_getObjectType();
  double v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 496);
  swift_unknownObjectRetain();
  LOBYTE(v7) = v10(v9, v8);
  swift_unknownObjectRelease();
  if ((v7 & 1) == 0) {
LABEL_7:
  }
    char v11 = 0;
  else {
    char v11 = ConversationController.isRemoteParticipantEligibleForVideoMessaging.getter();
  }
  return v11 & 1;
}

void MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(uint64_t a1, int a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v14, (uint64_t)v66, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v66, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v67) == 1) {
    goto LABEL_4;
  }
  memcpy(v65, v67, sizeof(v65));
  uint64_t v15 = v67[12] + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v15, (uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
LABEL_4:
    uint64_t v16 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP;
    char v17 = *(void **)(v4
                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP);
    id v18 = v17;
    MultiwayViewController.resetParticipantViewForPiP(_:)(v17);

    uint64_t v19 = *(void **)(v4 + v16);
    *(void *)(v4 + v16) = 0;

    return;
  }
  uint64_t v56 = a1;
  outlined init with take of Participant((uint64_t)v10, (uint64_t)v13);
  outlined init with take of CATransform3D?((uint64_t)v66, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v64);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v20 = swift_allocObject();
  long long v54 = xmmword_1C3769620;
  *(_OWORD *)(v20 + 16) = xmmword_1C3769620;
  double v58 = a3;
  uint64_t v21 = String.init<A>(reflecting:)();
  uint64_t v23 = v22;
  *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v53 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v20 + 64) = v53;
  *(void *)(v20 + 32) = v21;
  *(void *)(v20 + 40) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(int *)(v11 + 28);
  uint64_t v25 = *(void *)&v13[v24];
  int v57 = a2;
  if (v25)
  {
    unint64_t v26 = ParticipantGridViewController.participantViews.getter();
    MEMORY[0x1F4188790](v26);
    *(&v52 - 2) = (uint64_t)v13;
    uint64_t v27 = specialized Sequence.first(where:)((uint64_t (*)(id *))partial apply for closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:), (uint64_t)(&v52 - 4), v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void **)(v67[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
    id v28 = v27;
  }
  uint64_t v29 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP;
  uint64_t v30 = *(void **)(v4
                 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP);
  if (!v30)
  {
    if (!v27) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (!v27
    || (type metadata accessor for ParticipantView(),
        id v31 = v27,
        id v32 = v30,
        char v33 = static NSObject.== infix(_:_:)(),
        v31,
        v32,
        uint64_t v30 = *(void **)(v4 + v29),
        (v33 & 1) == 0))
  {
LABEL_15:
    id v34 = v30;
    MultiwayViewController.resetParticipantViewForPiP(_:)(v30);

    uint64_t v30 = *(void **)(v4 + v29);
  }
LABEL_16:
  *(void *)(v4 + v29) = v27;
  id v35 = v27;

  if (v27) {
    objc_msgSend(v35, sel_setAlpha_, a3);
  }
  char v36 = v57;
  if (*(void *)&v13[v24])
  {
    unint64_t v37 = (unsigned char *)(v67[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
    swift_beginAccess();
    *unint64_t v37 = 0;
  }
  else
  {
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v54;
    LOBYTE(v58) = a3 < 1.0;
    uint64_t v39 = String.init<A>(reflecting:)();
    unint64_t v40 = v53;
    *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v38 + 64) = v40;
    *(void *)(v38 + 32) = v39;
    *(void *)(v38 + 40) = v41;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    id v42 = (BOOL *)(v67[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
    swift_beginAccess();
    BOOL *v42 = a3 < 1.0;
  }
  LocalParticipantView.updateHiding()();
  os_log_type_t v43 = (void *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  if (!*v43)
  {
    if (v27)
    {
      id v47 = v35;
      ParticipantView.shouldOverrideShadowHidden.setter(1);
    }
    id v48 = self;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v27;
    char v62 = partial apply for closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:);
    uint64_t v63 = v49;
    double v58 = MEMORY[0x1E4F143A8];
    uint64_t v59 = 1107296256;
    long long v60 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v61 = &block_descriptor_637;
    id v50 = _Block_copy(&v58);
    id v51 = v35;
    swift_release();
    objc_msgSend(v48, sel_animateWithDuration_delay_options_animations_completion_, 0, v50, 0, 0.15, 0.0);
    _Block_release(v50);
    if ((v36 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_27:

    goto LABEL_28;
  }
  if (v36) {
    goto LABEL_27;
  }
LABEL_23:
  id v44 = self;
  uint64_t v45 = swift_allocObject();
  memcpy((void *)(v45 + 16), v65, 0xD8uLL);
  *(void *)(v45 + 232) = v56;
  char v62 = partial apply for closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:);
  uint64_t v63 = v45;
  double v58 = MEMORY[0x1E4F143A8];
  uint64_t v59 = 1107296256;
  long long v60 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v61 = &block_descriptor_631;
  uint64_t v46 = _Block_copy(&v58);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v64);
  swift_release();
  objc_msgSend(v44, sel__animateUsingDefaultTimingWithOptions_animations_completion_, 0, v46, 0);

  _Block_release(v46);
LABEL_28:
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v66);
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
}

uint64_t closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
  swift_beginAccess();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)v29 - v6;
  uint64_t v8 = outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v3, (uint64_t)v29 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = (char *)v29 - v6;
  uint64_t v10 = a2 + *(int *)(type metadata accessor for Participant(0) + 20);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v29 - v6, v10, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v29 - v6, 0, 1, v11);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v15[*(int *)(v16 + 56)];
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v29 - v6, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v29 - v6, v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v29 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v29 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    int v19 = __swift_getEnumTagSinglePayload(v17, 1, v11);
    if (v19 == 1) {
      uint64_t v20 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    }
    else {
      uint64_t v20 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    if (v19 == 1) {
      char v21 = -1;
    }
    else {
      char v21 = 0;
    }
  }
  else
  {
    uint64_t v29[2] = v29;
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    uint64_t v22 = (char *)v29 - v6;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v15, (uint64_t)v29 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v23 = __swift_getEnumTagSinglePayload(v17, 1, v11);
    if (v23 == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v29 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v29 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v12 + 8))((char *)v29 - v6, v11);
      uint64_t v20 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      char v21 = 0;
    }
    else
    {
      v29[1] = v29;
      __n128 v24 = MEMORY[0x1F4188790](v23);
      unint64_t v26 = (char *)v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 32))(v26, v17, v11, v24);
      _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
      v27(v26, v11);
      uint64_t v20 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of SystemUpdateNotice?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v27(v22, v11);
    }
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v15, v20);
  return v21 & 1;
}

void *MultiwayViewController.resetParticipantViewForPiP(_:)(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    objc_msgSend(result, sel_setAlpha_, 1.0);
    char v2 = ConversationController.isOneToOneModeEnabled.getter();
    double v3 = 0.0;
    if ((v2 & 1) == 0)
    {
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
    }
    objc_msgSend(v1, sel__setCornerRadius_, v3);
    return (void *)ParticipantView.shouldOverrideShadowHidden.setter(0);
  }
  return result;
}

uint64_t closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(uint64_t result)
{
  if (result) {
    return ParticipantView.shouldOverrideShadowHidden.setter(0);
  }
  return result;
}

void closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(double a1)
{
  char v2 = MostActiveParticipantViewController.currentParticipantView.getter();
  double v3 = (double *)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius];
  swift_beginAccess();
  *double v3 = a1;
  ParticipantView.customCornerRadius.didset();
}

Swift::Void __swiftcall MultiwayViewController.toggleAudioMute()()
{
}

Swift::Void __swiftcall MultiwayViewController.toggleVideoMute(shouldPauseIfStopped:)(Swift::Bool shouldPauseIfStopped)
{
  uint64_t v3 = v1;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  char v6 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_5_12();
  v9(v8);
  if (v6)
  {
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
        + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    OUTLINED_FUNCTION_2();
    if (*(char *)(v10 + 16) < 0) {
      specialized EffectsHandler.wipeEffectsState()();
    }
    ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(shouldPauseIfStopped);
    MultiwayViewController.updateShouldShowReactionPickerTipView()();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.toggleCameraBlur()()
{
}

uint64_t MultiwayViewController.toggleAudioMute()(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v5();
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_5_12();
  uint64_t result = v7(v6);
  if (v4) {
    return a1(result);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MultiwayViewController.toggleCinematicFraming()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v3();
  _dispatchPreconditionTest(_:)();
  uint64_t v4 = OUTLINED_FUNCTION_1_18();
  v5(v4);
  if (v2)
  {
    uint64_t v6 = MultiwayViewController.effectsViewController.getter();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      type metadata accessor for CameraViewController();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        MultiwayViewController.localVideoProvider.getter();
        __swift_project_boxed_opaque_existential_1(v20, v21);
        uint64_t v10 = OUTLINED_FUNCTION_162();
        char v12 = v11(v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        if ((v12 & 1) == 0 && objc_msgSend(v9, sel_effectsState) == (id)2) {
          MultiwayViewController.resetEffectsState()();
        }
      }
    }
    ConversationController.toggleCinematicFraming()();
    uint64_t v13 = MultiwayViewController.inCallControlsViewController.getter();
    if (v13)
    {
      uint64_t v14 = (char *)v13;
      MultiwayViewController.localVideoProvider.getter();
      uint64_t v15 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      uint64_t v16 = OUTLINED_FUNCTION_8_11();
      char v18 = v17(v16, v15);
      int v19 = &v14[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled];
      OUTLINED_FUNCTION_1_21();
      char *v19 = v18 & 1;
      InCallControlsViewController.cinematicFramingIsEnabled.didset();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.resetEffectsState()()
{
  uint64_t v0 = MultiwayViewController.inCallControlsViewController.getter();
  if (v0)
  {
    uint64_t v1 = (void *)v0;
    char v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
    OUTLINED_FUNCTION_2();
    LODWORD(v2) = *v2;

    if (v2 == 1)
    {
      uint64_t v3 = MultiwayViewController.inCallControlsViewController.getter();
      if (v3)
      {
        uint64_t v4 = (void *)v3;
        uint64_t v5 = (unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
        OUTLINED_FUNCTION_11_0();
        *uint64_t v5 = 0;
        InCallControlsViewController.updateEffectsButton()();
      }
      MultiwayViewController.updateLocalParticipantControls()();
    }
  }
  uint64_t v6 = (void *)MultiwayViewController.effectsViewController.getter();

  if (v6) {
    MultiwayViewController.removeAllEffectsObjects()();
  }
}

Swift::Void __swiftcall MultiwayViewController.muteVideo()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v3();
  _dispatchPreconditionTest(_:)();
  uint64_t v4 = OUTLINED_FUNCTION_1_18();
  v5(v4);
  if (v2)
  {
    specialized EffectsHandler.wipeEffectsState()();
    ConversationController.stopLocalVideoForMiniWindow()();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.openMessagesConversation()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v3();
  _dispatchPreconditionTest(_:)();
  uint64_t v4 = OUTLINED_FUNCTION_1_18();
  v5(v4);
  if (v2) {
    ConversationController.openMessagesConversation(completion:)();
  }
  else {
    __break(1u);
  }
}

uint64_t MultiwayViewController.viewWillTransition(to:with:)(void *a1)
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v21 = v1;
  uint64_t ObjectType = swift_getObjectType();
  double v3 = OUTLINED_FUNCTION_112();
  objc_msgSendSuper2(v4, v5, a1, v3);
  uint64_t result = MultiwayViewController.layoutIdiom.getter((BOOL *)&aBlock);
  if ((aBlock & 1) == 0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    int v19 = partial apply for closure #1 in MultiwayViewController.viewWillTransition(to:with:);
    uint64_t v20 = v7;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v16 = 1107296256;
    uint64_t v17 = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
    char v18 = &block_descriptor_58;
    uint64_t v8 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v9 = OUTLINED_FUNCTION_20();
    *(void *)(v9 + 16) = v1;
    int v19 = partial apply for closure #2 in MultiwayViewController.viewWillTransition(to:with:);
    uint64_t v20 = v9;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v16 = 1107296256;
    uint64_t v17 = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
    char v18 = &block_descriptor_64;
    uint64_t v10 = _Block_copy(&aBlock);
    id v11 = v1;
    swift_release();
    objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v8, v10);
    _Block_release(v10);
    _Block_release(v8);
    uint64_t v12 = (uint64_t)v11 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator;
    uint64_t result = OUTLINED_FUNCTION_2();
    if (*(void *)(v12 + 24))
    {
      outlined init with copy of IDSLookupManager(v12, (uint64_t)&aBlock);
      __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v18);
      uint64_t v13 = OUTLINED_FUNCTION_92_0();
      v14(v13);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    }
  }
  return result;
}

void closure #1 in MultiwayViewController.viewWillTransition(to:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    swift_beginAccess();

    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      v14[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v6, v7, "viewWillTransition to device orientation value: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v9, -1, -1);
      MEMORY[0x1C87760E0](v8, -1, -1);
    }

    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C8776240](v2);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      MultiwayViewController.updateViewConstraints()();
    }
  }
}

uint64_t closure #2 in MultiwayViewController.viewWillTransition(to:with:)()
{
  return MultiwayViewController.updateAllParticipantPresentationContexts(forceUpdate:)(1);
}

void *MultiwayViewController.toggleLocalParticipantEffectsButton()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)(v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v5, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v18);
  if (result != 1)
  {
    os_log_type_t v7 = (unsigned __int8 *)(v20 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    uint64_t result = (void *)swift_beginAccess();
    int v8 = *v7 >> 6;
    if (v8)
    {
      if (v8 == 1)
      {
        uint64_t v9 = (unsigned char *)(v19 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
        swift_beginAccess();
        *uint64_t v9 = 1;
        outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v16);
        InCallControlsViewController.updateEffectsButton()();
        uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
            + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
        swift_beginAccess();
        _s15ConversationKit11ParticipantVWOcTm_18(v10, (uint64_t)v4);
        MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(v4, 1);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
        return (void *)_s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v4, (void (*)(void))type metadata accessor for Participant);
      }
      else
      {
        unint64_t v11 = v21;
        if (v21)
        {
          uint64_t v12 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v21) + 0xA8);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
          id v13 = v11;
          LOBYTE(v12) = v12();

          if (v12) {
            specialized EffectsHandler.wipeEffectsState()();
          }
        }
        else
        {
          outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
          outlined retain of MultiwayViewController.ViewContent((uint64_t)v16);
        }
        uint64_t v14 = (BOOL *)(v19 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
        swift_beginAccess();
        BOOL *v14 = !*v14;
        InCallControlsViewController.updateEffectsButton()();
        MultiwayViewController.updateLocalParticipantControls()();
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
      }
    }
  }
  return result;
}

void *MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(uint64_t *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = &v54[-v10];
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)&v54[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBE8], v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v17 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v17, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v68, (uint64_t)&v69, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(&v69);
  if (result == 1) {
    return result;
  }
  long long v60 = v9;
  int v61 = a2;
  uint64_t v62 = v3;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  id v66 = v54;
  uint64_t v20 = a1;
  uint64_t v21 = *(void *)(*(void *)(v19 - 8) + 64);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v22 = &v54[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for Participant(0);
  uint64_t v24 = *(int *)(v23 + 20);
  id v64 = v20;
  uint64_t v25 = (uint64_t)v20 + v24;
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v63 = *(void *)(v26 - 8);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v63 + 16);
  v27(v22, v25, v26);
  uint64_t v28 = __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v26);
  id v65 = v54;
  MEMORY[0x1F4188790](v28);
  uint64_t v58 = v70;
  uint64_t v29 = v70 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v29, (uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v23);
  uint64_t v59 = v23;
  if (EnumTagSinglePayload == 1)
  {
    outlined init with take of CATransform3D?((uint64_t)v68, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v67);
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    id v31 = &v54[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v32 = 1;
  }
  else
  {
    v27(v22, (uint64_t)&v11[*(int *)(v23 + 20)], v26);
    outlined init with take of CATransform3D?((uint64_t)v68, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v67);
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
    id v31 = &v54[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v32 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v31, v32, 1, v26);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  char v36 = &v54[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = (uint64_t)&v36[*(int *)(v34 + 56)];
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v22, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v22, v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v38 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v26);
  if (v38 == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v37, 1, v26) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v68);
    }
  }
  else
  {
    MEMORY[0x1F4188790](v38);
    uint64_t v39 = &v54[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v36, (uint64_t)v39, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v40 = __swift_getEnumTagSinglePayload(v37, 1, v26);
    if (v40 != 1)
    {
      uint64_t v56 = v54;
      int v57 = v54;
      uint64_t v41 = v63;
      MEMORY[0x1F4188790](v40);
      os_log_type_t v43 = &v54[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v41 + 32))(v43, v37, v26);
      _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      int v55 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v44 = *(void (**)(unsigned char *, uint64_t))(v41 + 8);
      v44(v43, v26);
      outlined destroy of SystemUpdateNotice?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v44(v39, v26);
      outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (v55) {
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v68);
      }
      goto LABEL_13;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v39, v26);
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_13:
  uint64_t v15 = v64;
  if (Participant.isActive.getter())
  {
    MultiwayViewController.unfocusFocusedParticipant()();
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_1C3769620;
      uint64_t v46 = (uint64_t)v60;
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v15, (uint64_t)v60);
      uint64_t v47 = v59;
      __swift_storeEnumTagSinglePayload(v46, 0, 1, v59);
      uint64_t v48 = specialized >> prefix<A>(_:)();
      uint64_t v50 = v49;
      outlined destroy of SystemUpdateNotice?(v46, &demangling cache variable for type metadata for Participant?);
      *(void *)(v45 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v45 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v45 + 32) = v48;
      *(void *)(v45 + 40) = v50;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ParticipantGridViewController.focus(on:)();
      if (v61)
      {
        id v51 = v71;
        id v52 = v71;
        MultiwayViewController.bringSubviewToFront(_:)(v51);
      }
      v67[0] = 0;
      if (*(uint64_t *)((char *)v15 + *(int *)(v47 + 28))) {
        uint64_t v53 = 4294967292;
      }
      else {
        uint64_t v53 = 4294967168;
      }
      MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v67, v53, 1);
      MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v68);
    }
LABEL_24:
    swift_once();
    goto LABEL_15;
  }
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v68);
}

void *MultiwayViewController.updateLocalParticipantControls()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v11 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v11, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v32, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v33);
    if (result != 1)
    {
      memcpy(v31, v33, sizeof(v31));
      uint64_t v12 = (char *)(v33[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
          + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      char v14 = *v12;
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_18(v13, (uint64_t)v4);
      outlined init with take of CATransform3D?((uint64_t)v32, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v30);
      LOBYTE(v12) = Participant.isActiveWithVideo.getter();
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v4, (void (*)(void))type metadata accessor for Participant);
      uint64_t v15 = v33[2];
      char v16 = (unsigned char *)(v33[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable);
      swift_beginAccess();
      char v17 = *v16 & v12;
      char v18 = closure #1 in MultiwayViewController.updateLocalParticipantControls()(v1, v14, (uint64_t)v31);
      uint64_t v19 = (void *)v33[9];
      uint64_t v20 = (void *)MEMORY[0x1E4FBC8C8];
      char v21 = v18;
      if (v33[9])
      {
        uint64_t v22 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v33[9]) + 0xA8);
        uint64_t v29 = v15;
        id v23 = (id)v33[9];
        char v24 = v22();
        uint64_t v15 = v29;
        LOBYTE(v22) = v24;

        char v21 = v22 | v18;
        uint64_t v20 = (void *)MEMORY[0x1E4FBC8C8];
      }
      *(unsigned char *)(v13 + *(int *)(v2 + 40)) = v18 & 1;
      LocalParticipantView.configureWithEffectsAvailable(_:effectsSelected:)(v17 & 1, v21 & 1);
      MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(v18 & 1, 0);
      uint64_t v25 = (unsigned char *)(v15 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
      swift_beginAccess();
      *uint64_t v25 = v18 & 1;
      InCallControlsViewController.updateEffectsButton()();
      if ((v18 & 1) == 0)
      {
        if (v19)
        {
          uint64_t v26 = *(void (**)(double))((*v20 & *v19) + 0xC8);
          uint64_t v27 = v19;
          v26(58.0);
        }
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v32);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in MultiwayViewController.updateLocalParticipantControls()(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  uint64_t v6 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v5) + 0xF0);
  uint64_t v7 = v5;
  LOBYTE(v6) = v6();

  if (VideoMessageController.State.rawValue.getter((char)v6) == 0xD000000000000014 && v8 == 0x80000001C3790E10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v10 & 1) == 0)
  {
    BOOL v11 = ConversationController.hasRingingCalls.getter();
    uint64_t result = 0;
    if (!v11 && a2 < 0)
    {
      uint64_t v12 = *(void *)(a3 + 16);
      uint64_t v13 = (unsigned char *)(v12 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable);
      swift_beginAccess();
      if (*v13 != 1) {
        return 0;
      }
      char v14 = (unsigned __int8 *)(v12 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
      swift_beginAccess();
      return *v14;
    }
  }
  return result;
}

void *MultiwayViewController.unfocusFocusedParticipant()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v28[-v6];
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(void *)BOOL v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v13 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v13, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v31, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v32);
  if (result == 1) {
    return result;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v15 - 8);
  char v17 = &v28[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = v32[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v18, (uint64_t)v7, &demangling cache variable for type metadata for Participant?);
  BOOL v11 = (unsigned char *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v11) == 1)
  {
    outlined init with take of CATransform3D?((uint64_t)v31, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v30);
    outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    uint64_t v19 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v19);
LABEL_6:
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v31);
    return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  uint64_t v20 = &v7[*((int *)v11 + 5)];
  uint64_t v21 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v17, v20, v21);
  outlined init with take of CATransform3D?((uint64_t)v31, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v30);
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v21);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21) == 1) {
    goto LABEL_6;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_14;
  }
LABEL_8:
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t active = MultiwayViewController.mostActiveParticipants.getter();
  ParticipantGridViewController.defocus(to:)((Swift::OpaquePointer)active);
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, (uint64_t)v11);
  ParticipantGridViewController.select(_:forFocusing:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
  id v23 = v33;
  id v24 = v33;
  MultiwayViewController.bringSubviewToFront(_:)(v23);

  unsigned int v25 = MultiwayViewController.localParticipantCornerToUse.getter();
  uint64_t v26 = (unsigned char *)(v32[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  swift_beginAccess();
  if (*v26) {
    uint64_t v27 = v25 | 0x40;
  }
  else {
    uint64_t v27 = v25;
  }
  v29[0] = 0;
  MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v29, v27, 1);
  MultiwayViewController.needsUpdatePresentationContexts.setter(1);
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v31);
}

Swift::Void __swiftcall MultiwayViewController.effectsAvailabilityDidChange(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_212_2();
  uint64_t v2 = v1;
  char v4 = v3;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v5 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v5 + 16) = xmmword_1C3769620;
  char v6 = v4 & 1;
  LOBYTE(v17[0]) = v4 & 1;
  uint64_t v7 = String.init<A>(reflecting:)();
  uint64_t v9 = v8;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_209_2();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v11 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v11, (uint64_t)v16);
  outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v17);
  if (!v12)
  {
    uint64_t v13 = *(char **)(v10 + 16);
    char v14 = &v13[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable];
    OUTLINED_FUNCTION_1_21();
    char *v14 = v6;
    uint64_t v15 = v13;
    InCallControlsViewController.updateEffectsButton()();
    MultiwayViewController.updateLocalParticipantControls()();
  }
  OUTLINED_FUNCTION_215_0();
}

Swift::Void __swiftcall MultiwayViewController.hideEffectsBrowser()()
{
  uint64_t v0 = MultiwayViewController.effectsBrowserViewController.getter();
  if (v0)
  {
    id v6 = (id)v0;
    self;
    uint64_t v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      uint64_t v2 = (void *)v1;
      uint64_t v3 = MultiwayViewController.effectsViewController.getter();
      if (v3)
      {
        char v4 = (void *)v3;
        self;
        uint64_t v5 = (void *)swift_dynamicCastObjCClass();
        if (v5) {
          objc_msgSend(v5, sel_resign);
        }
      }
      objc_msgSend(v2, sel_hideBrowserAnimated_completion_, 0, 0);
    }
  }
}

uint64_t MultiwayViewController.localParticipantState()()
{
  uint64_t v1 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  char v19 = ConversationController.isOneToOneModeEnabled.getter();
  ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
  char v18 = v2;
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  BOOL v17 = ConversationController.hasRingingCalls.getter();
  char active = ConversationController.isTrackingActiveConversation.getter();
  uint64_t v5 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  swift_beginAccess();
  uint64_t v15 = *v5;
  ConversationController.isWaitingOnFirstRemoteFrame.getter();
  char v7 = v6;
  char v8 = ConversationController.isLocallyCreated.getter();
  uint64_t v9 = &v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v10 = *((void *)v9 + 1);
  uint64_t ObjectType = swift_getObjectType();
  char v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 208);
  swift_unknownObjectRetain();
  LOBYTE(ObjectType) = v12(ObjectType, v10);
  swift_unknownObjectRelease();
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  LOBYTE(v9) = v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff];

  v20[0] = v19 & 1;
  v20[1] = v18 & 1;
  uint64_t v21 = v4;
  BOOL v22 = v17;
  char v23 = active & 1;
  uint64_t v24 = v15;
  char v25 = v7 & 1;
  char v26 = v8 & 1;
  char v27 = ObjectType & 1;
  char v28 = (char)v9;
  uint64_t v13 = MultiwayViewController.localParticipantState(for:)((uint64_t)v20);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t MultiwayViewController.localParticipantCornerToUse.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 80;
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
  {
    uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of CATransform3D?(v5, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v16) == 1)
    {
      uint64_t v6 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v6);
LABEL_5:
      outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
      goto LABEL_8;
    }
    uint64_t v7 = *(void *)(v5 + 8)
       + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v7, (uint64_t)v4, &demangling cache variable for type metadata for Participant?);
    uint64_t v8 = type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1) {
      goto LABEL_5;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
  }
  if (static Platform.current.getter() == 2)
  {
LABEL_8:
    type metadata accessor for AppUtilities();
    if (static AppUtilities.isRTL.getter()) {
      return 2;
    }
    else {
      return 3;
    }
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v10, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v16) == 1
    || (uint64_t v11 = (unsigned __int8 *)(*(void *)(v10 + 48)
                                + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner),
        swift_beginAccess(),
        uint64_t result = *v11,
        result == 4))
  {
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 576))(ObjectType, v12);
  }
  return result;
}

uint64_t MultiwayViewController.localParticipantCornerSize(for:viewContent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_18(v9, (uint64_t)v8);
  LOBYTE(v9) = Participant.isActiveWithVideo.getter();
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
  if ((v9 & 1) == 0)
  {
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)logger);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_23;
    }
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v35[0] = v15;
    *(_DWORD *)char v14 = 136315138;
    LOBYTE(v32) = a1;
    uint64_t v16 = String.init<A>(reflecting:)();
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    char v18 = "localParticipantCornerSize: localParticipant is not active with video, using .regular(corner: %s";
    goto LABEL_22;
  }
  if ((MultiwayViewController.wantsStandardControls.getter() & 1) != 0
    && (outlined init with take of CATransform3D?(a2, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), getEnumTag for TapInteraction.EventType(v35) != 1))
  {
    char v19 = (unsigned char *)(v35[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    swift_beginAccess();
    unsigned int v10 = (6u >> (*v19 & 7)) & 1;
  }
  else
  {
    unsigned int v10 = 0;
  }
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) & 1) == 0)
  {
    int v20 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
    if ((v10 | v20) == 1) {
      goto LABEL_13;
    }
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)logger);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v13))
    {
LABEL_23:

      return a1;
    }
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v34[0] = v15;
    *(_DWORD *)char v14 = 136315138;
    LOBYTE(v33) = a1;
    uint64_t v29 = String.init<A>(reflecting:)();
    uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    char v18 = "localParticipantCornerSize: using .regular(corner: %s) since isShowingControls=false and isPreviewingLocalReaction=false";
LABEL_22:
    _os_log_impl(&dword_1C2F90000, v12, v13, v18, v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v15, -1, -1);
    MEMORY[0x1C87760E0](v14, -1, -1);
    goto LABEL_23;
  }
  int v20 = 1;
LABEL_13:
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)logger);
  BOOL v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v34[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315650;
    LOBYTE(v33) = a1;
    uint64_t v26 = String.init<A>(reflecting:)();
    uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 1024;
    LODWORD(v33) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 18) = 1024;
    LODWORD(v33) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v22, v23, "localParticipantCornerSize: using .info(corner: %s) since isShowingControls=%{BOOL}d and isPreviewingLocalReaction=%{BOOL}d", (uint8_t *)v24, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v25, -1, -1);
    MEMORY[0x1C87760E0](v24, -1, -1);
  }

  return a1 | 0x40;
}

Swift::Void __swiftcall MultiwayViewController.handleUserDidToggleCaptions()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v3();
  _dispatchPreconditionTest(_:)();
  uint64_t v4 = OUTLINED_FUNCTION_1_18();
  v5(v4);
  if (v2)
  {
    uint64_t v6 = (char *)MultiwayViewController.captionsViewController.getter();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = &v6[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked];
      OUTLINED_FUNCTION_11_0();
      char *v8 = 0;
    }
    char v9 = MultiwayViewController.isCaptioningEnabled.getter();
    swift_retain();
    CaptioningStateManager.setCaptioningEnabled(_:)((v9 & 1) == 0);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in MultiwayViewController.registerCaptioningStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C8776240](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = v2;
    char v8 = v3;
    MultiwayViewController.onCaptioningStateDidChange(_:)(&v7);
  }
}

void MultiwayViewController.onCaptioningStateDidChange(_:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  int v4 = *((unsigned __int8 *)a1 + 8);
  swift_retain();
  CaptioningStateManager.isCaptioningEnabled.getter();
  swift_release();
  if (v4 == 1)
  {
    if (v3 == 1)
    {
      MultiwayViewController.promptForCaptionsSpeechModelFetch()();
    }
    else
    {
      uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
      if (v6)
      {
        uint64_t v7 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v6) + 0x88);
        char v8 = v6;
        v7();
      }
      uint64_t v9 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v9, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v17) != 1)
      {
        unsigned int v10 = *(void **)(v9 + 32);
        if (v10)
        {
          uint64_t v11 = *(void *)(v9 + 40);
          uint64_t ObjectType = swift_getObjectType();
          os_log_type_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 88);
          id v14 = v10;
          v13(ObjectType, v11);
        }
      }
      specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(2);
    }
  }
  else
  {
    uint64_t v5 = MultiwayViewController.captionsViewController.getter();
    if (v5)
    {
      id v15 = v5;
      CaptionsViewController.languageModelDownloadingProgress.setter();
    }
  }
}

void MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  uint64_t v1 = v0;
  type metadata accessor for PlatformAlert();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_conversationKit);
  v4._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v33._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001C37B6FB0;
  v5.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v33);

  id v8 = objc_msgSend(v2, sel_conversationKit);
  v9._uint64_t countAndFlagsBits = 0xD000000000000023;
  v34._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001C37B6FD0;
  v10.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v34);

  uint64_t v13 = static PlatformAlert.create(with:message:)((void *)v7._countAndFlagsBits, (uint64_t)v7._object, v12._countAndFlagsBits, (uint64_t)v12._object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v14 = objc_msgSend(v2, sel_conversationKit);
    v35._object = (void *)0xE000000000000000;
    v15._object = (void *)0x80000001C37B7000;
    v15._uint64_t countAndFlagsBits = 0xD000000000000016;
    v16.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v16.value._object = (void *)0xEF74694B6E6F6974;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v35._uint64_t countAndFlagsBits = 0;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v35);

    v31[0] = 0;
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    int v20 = *(void (**)(uint64_t, void *, unsigned char *, uint64_t (*)(), uint64_t))(*(void *)v13 + 328);
    swift_retain();
    v20(v18._countAndFlagsBits, v18._object, v31, partial apply for closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch(), v19);
    swift_bridgeObjectRelease();
    swift_release_n();
    id v21 = objc_msgSend(v2, sel_conversationKit);
    v36._object = (void *)0xE000000000000000;
    v22._uint64_t countAndFlagsBits = 0x4C45434E4143;
    v22._object = (void *)0xE600000000000000;
    v23.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v23.value._object = (void *)0xEF74694B6E6F6974;
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v36._uint64_t countAndFlagsBits = 0;
    Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v36);

    v31[0] = 2;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v1;
    id v27 = v1;
    v20(v25._countAndFlagsBits, v25._object, v31, partial apply for closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch(), v26);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(void))(*(void *)v13 + 336))(0);
    swift_release();
  }
  else
  {
    swift_retain();
    CaptioningStateManager.setCaptioningEnabled(_:)(0);
    swift_release();
    uint64_t v28 = (char *)MultiwayViewController.captionsViewController.getter();
    if (v28)
    {
      uint64_t v29 = v28;
      unint64_t v30 = &v28[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked];
      swift_beginAccess();
      *unint64_t v30 = 0;
    }
  }
}

uint64_t closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    Swift::String v4 = MultiwayViewController.captionsViewController.getter();

    if (v4)
    {
      CaptionsViewController.languageModelDownloadingProgress.setter();
    }
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v1);
  if (result)
  {
    Swift::String v6 = (void *)result;
    swift_retain();

    CaptioningStateManager.fetchSpeechModel()();
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v0 = (char *)MultiwayViewController.captionsViewController.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = &v0[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked];
    swift_beginAccess();
    *uint64_t v2 = 0;
  }
  swift_retain();
  CaptioningStateManager.setCaptioningEnabled(_:)(0);
  return swift_release();
}

Swift::Void __swiftcall MultiwayViewController.implementNewCaptionsState(newLayoutState:newRecognizerState:)(ConversationKit::CaptionsLayoutState newLayoutState, Swift::Bool newRecognizerState)
{
  char v4 = *(unsigned char *)newLayoutState;
  Swift::String_optional v5 = *(char **)((char *)&v2->isa + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning;
  OUTLINED_FUNCTION_2();
  int v6 = *v5;
  ConversationController.captionsRecognizerShouldBeRunning.setter();
  LOBYTE(v16) = v4;
  MultiwayViewController.updateCaptionsLayoutState(_:)((unsigned __int8 *)&v16);
  int v7 = *v5;
  if (v6 == v7)
  {
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    Swift::String v12 = OUTLINED_FUNCTION_30(v13, (uint64_t)logger);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 67109376;
      BOOL v16 = newRecognizerState;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 8) = 1024;
      BOOL v16 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v12, v14, "[MultiwayViewController] Could not update captions recognizer state to %{BOOL}d. State remains at %{BOOL}d.", (uint8_t *)v15, 0xEu);
      OUTLINED_FUNCTION_3();
    }
  }
  else
  {
    id v8 = (void **)MEMORY[0x1E4FADDB0];
    if (*v5) {
      id v8 = (void **)MEMORY[0x1E4FADDA8];
    }
    Swift::String v9 = *v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_47_6();
    id v10 = v9;
    uint64_t v11 = OUTLINED_FUNCTION_41_0();
    MEMORY[0x1C87730B0](v11);
    OUTLINED_FUNCTION_375();
    swift_bridgeObjectRelease();
    Swift::String v12 = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification((CFNotificationCenterRef)v12, v2, 0, 0, 1u);
  }
}

void MultiwayViewController.updateCaptionsLayoutState(_:)(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = MultiwayViewController.constraintController.getter();
  if (!v3
    || (char v4 = (void *)v3,
        Swift::String_optional v5 = (unsigned __int8 *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState),
        swift_beginAccess(),
        LODWORD(v5) = *v5,
        v4,
        v2 != v5))
  {
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)logger);
    id v7 = v1;
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = v11;
      *(_DWORD *)uint64_t v10 = 136315394;
      uint64_t v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      uint64_t v14 = MultiwayViewController.constraintController.getter();
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        swift_beginAccess();

        uint64_t v16 = String.init<A>(reflecting:)();
        unint64_t v18 = v17;
      }
      else
      {
        unint64_t v18 = 0xE300000000000000;
        uint64_t v16 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2F90000, v8, v9, "updateCaptionsLayoutState to %s from %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v11, -1, -1);
      MEMORY[0x1C87760E0](v10, -1, -1);
    }
    else
    {
    }
    swift_unknownObjectWeakInit();
    specialized closure #1 in MultiwayViewController.updateCaptionsLayoutState(_:)((uint64_t)&v19, v2);
    swift_unknownObjectWeakDestroy();
  }
}

void specialized closure #1 in MultiwayViewController.updateCaptionsLayoutState(_:)(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7);
  os_log_type_t v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C8776240](a1);
  if (!v10) {
    return;
  }
  uint64_t v11 = (char *)v10;
  int v12 = a2;
  uint64_t v13 = MultiwayViewController.constraintController.getter();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    uint64_t v15 = (unsigned __int8 *)(v13 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
    swift_beginAccess();
    int v16 = *v15;

    if (v16)
    {
      if (v16 == 1)
      {
        if (v12 != 2) {
          goto LABEL_15;
        }
        goto LABEL_9;
      }
      if (v12 != 1) {
        goto LABEL_15;
      }
    }
    else
    {
      if (!v12) {
        goto LABEL_15;
      }
      if (v12 != 1)
      {
LABEL_9:
        unint64_t v17 = MultiwayViewController.captionsViewController.getter();
        if (v17)
        {
          unint64_t v18 = v17;
          CaptionsViewController.minimize(_:)(0);
        }
        LOBYTE(v60[0]) = 0;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)v60, 252, 1);
        goto LABEL_15;
      }
    }
    uint64_t v19 = MultiwayViewController.captionsViewController.getter();
    if (v19)
    {
      int v20 = v19;
      CaptionsViewController.minimize(_:)(1);
    }
  }
LABEL_15:
  uint64_t v21 = MultiwayViewController.constraintController.getter();
  if (v21)
  {
    Swift::String v22 = (void *)v21;
    Swift::String_optional v23 = (unsigned __int8 *)(v21 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
    swift_beginAccess();
    int v24 = *v23;
  }
  else
  {
    int v24 = 3;
  }
  uint64_t v25 = MultiwayViewController.constraintController.getter();
  if (v25)
  {
    uint64_t v26 = (void *)v25;
    LOBYTE(v60[0]) = v12;
    MultiwayViewConstraintsController.captionsState.setter((uint64_t)v60);
  }
  uint64_t v27 = *(void *)&v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
  uint64_t ObjectType = swift_getObjectType();
  char v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 320))(ObjectType, v27);
  MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v29 & 1, 0, 0, 0, 0);
  if (v24 == 3 || v24 != v12)
  {
    id v31 = &v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
    swift_beginAccess();
    uint64_t v32 = (void *)MEMORY[0x1C8776240](v31);
    if (v32)
    {
      Swift::String v33 = v32;
      if (objc_msgSend(v32, sel_respondsToSelector_, sel_didChangeCaptionsLayout)) {
        objc_msgSend(v33, sel_didChangeCaptionsLayout);
      }
      swift_unknownObjectRelease();
    }
    Swift::String v34 = &v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
    swift_beginAccess();
    Swift::String v35 = *(void (**)(uint64_t))v34;
    if (*(void *)v34)
    {
      uint64_t v36 = swift_retain();
      v35(v36);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v35);
    }
  }
  char v37 = MultiwayViewController.isCaptioningEnabled.getter();
  MultiwayViewController.updateCameraBlurState(captionEnabled:)(v37 & 1);
  MultiwayViewController.updateCurrentLayout()();
  MultiwayViewController.oneOnOneParticipant.getter((uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {

    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    return;
  }
  outlined init with take of Participant((uint64_t)v6, (uint64_t)v9);
  uint64_t v38 = (uint64_t)&v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v38, (uint64_t)v59, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v59, (uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v60) != 1)
  {
    id v39 = *(id *)(v38 + 8);
    ParticipantGridViewController.update(participant:broadcastingState:)();
  }
  id v40 = objc_msgSend(self, sel_currentDevice);
  id v41 = objc_msgSend(v40, sel_userInterfaceIdiom);

  if (v41 != (id)1) {
    goto LABEL_42;
  }
  uint64_t v42 = MultiwayViewController.constraintController.getter();
  if (v42
    && (os_log_type_t v43 = (void *)v42,
        id v44 = (unsigned __int8 *)(v42 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState),
        swift_beginAccess(),
        LODWORD(v44) = *v44,
        v43,
        v44 == 2))
  {
    MultiwayViewController.setLocalParticipantState(_:animated:)(3, 1);
    outlined init with take of CATransform3D?(v38, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v58) != 1)
    {
      swift_retain();
      char v45 = 0;
LABEL_41:
      ParticipantViewDragController.dragEnabled.setter(v45);
      swift_release();
    }
  }
  else
  {
    outlined init with take of CATransform3D?(v38, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v58) != 1)
    {
      swift_retain();
      char v45 = 1;
      goto LABEL_41;
    }
  }
LABEL_42:
  outlined init with take of CATransform3D?(v38, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v58) == 1)
  {
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
LABEL_47:

    return;
  }
  outlined init with take of CATransform3D?((uint64_t)v57, (uint64_t)v56, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v46 = (void *)v58[17];
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v56);
  id v47 = objc_msgSend(v46, sel_view);
  if (v47)
  {
    uint64_t v48 = v47;
    objc_msgSend(v47, sel_frame);
    double v50 = v49;
    double v52 = v51;

    int v53 = MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(v50, v52);
    if (v53 > 0xFBu)
    {
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v57);
      goto LABEL_47;
    }
    unsigned __int8 v55 = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v55, v53, 1);
    MultiwayViewController.updateIsCaptionsViewDragEnabled()();
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v57);

    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
  }
  else
  {
    __break(1u);
  }
}

void *MultiwayViewController.updateCameraBlurState(captionEnabled:)(char a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v3, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v14);
  if (result != 1)
  {
    outlined init with take of CATransform3D?((uint64_t)v13, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v12);
    if (ConversationController.supportsCameraBlur.getter()) {
      MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
    }
    LocalParticipantView.supportsCameraBlur.setter();
    if ((a1 & 1) != 0
      && (objc_msgSend(self, sel_allowsPortraitBlurWhenCaptionsEnabled) & 1) == 0)
    {
      MultiwayViewController.localVideoProvider.getter();
      uint64_t v5 = v10;
      uint64_t v6 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      (*(void (**)(void, uint64_t, uint64_t))(v6 + 96))(0, v5, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      MultiwayViewController.localVideoProvider.getter();
      uint64_t v7 = v10;
      uint64_t v8 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(1, v7, v8);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v13);
      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    }
    else
    {
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v13);
    }
  }
  return result;
}

uint64_t MultiwayViewController.oneOnOneParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  ConversationController.remoteOneToOneParticipant.getter();
  OUTLINED_FUNCTION_33_0(v1, 1, v6);
  if (v8)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
LABEL_7:
    uint64_t v10 = 1;
    return __swift_storeEnumTagSinglePayload(a1, v10, 1, v6);
  }
  outlined init with take of Participant(v1, v2);
  char v9 = Participant.isActiveWithVideo.getter();
  if ((v9 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOhTm_12(v2, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_7;
  }
  outlined init with take of Participant(v2, a1);
  uint64_t v10 = 0;
  return __swift_storeEnumTagSinglePayload(a1, v10, 1, v6);
}

uint64_t MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(double a1, double a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v5, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v44, (uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v45) == 1) {
    goto LABEL_10;
  }
  uint64_t v6 = v45[18];
  swift_beginAccess();
  if (*(unsigned char *)(v6 + 16) != 1) {
    goto LABEL_10;
  }
  outlined init with take of CATransform3D?((uint64_t)v44, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v43);
  MultiwayViewController.captionsLayoutState.getter((char *)v41);
  if (LOBYTE(v41[0]) != 1)
  {
LABEL_9:
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
LABEL_10:
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)logger);
    int v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1C2F90000, v24, v25, "nextLocalParticipantState is nil due to viewContent state", v26, 2u);
      MEMORY[0x1C87760E0](v26, -1, -1);
    }
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)objc_msgSend((id)v45[17], sel_view);
  if (result)
  {
    char v8 = (void *)result;
    objc_msgSend((id)result, sel_frame);
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;

    objc_msgSend((id)v45[7], sel_frame);
    v47.origin.CGFloat x = v17;
    v47.origin.CGFloat y = v18;
    v47.size.CGFloat width = v19;
    v47.size.CGFloat height = v20;
    v46.origin.CGFloat x = v10;
    v46.origin.CGFloat y = v12;
    v46.size.CGFloat width = v14;
    v46.size.CGFloat height = v16;
    if (CGRectIntersectsRect(v46, v47))
    {
      unsigned __int8 v21 = MultiwayViewController.localParticipantState()();
      if (!(v21 >> 6))
      {
        unsigned int v22 = 16777986;
        goto LABEL_18;
      }
      if (v21 >> 6 == 1)
      {
        v21 &= 0x3Fu;
        unsigned int v22 = 1094730562;
LABEL_18:
        char v28 = 8 * v21;
        if (one-time initialization token for logger != -1) {
          swift_once();
        }
        uint64_t v27 = v22 >> v28;
        uint64_t v29 = type metadata accessor for Logger();
        __swift_project_value_buffer(v29, (uint64_t)logger);
        unint64_t v30 = Logger.logObject.getter();
        os_log_type_t v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          uint64_t v42 = v33;
          *(_DWORD *)uint64_t v32 = 136315394;
          *(double *)id v41 = a1;
          *(double *)&v41[1] = a2;
          type metadata accessor for CGPoint(0);
          uint64_t v34 = String.init<A>(reflecting:)();
          v41[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v32 + 12) = 2080;
          LOBYTE(v41[0]) = v27;
          uint64_t v36 = String.init<A>(reflecting:)();
          v41[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v30, v31, "nextLocalParticipantState forNewCaptionsViewPosition %s is %s", (uint8_t *)v32, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v33, -1, -1);
          MEMORY[0x1C87760E0](v32, -1, -1);

          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
        }
        else
        {
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
        }
        return v27;
      }
      if (one-time initialization token for logger != -1) {
        swift_once();
      }
      uint64_t v38 = type metadata accessor for Logger();
      __swift_project_value_buffer(v38, (uint64_t)logger);
      int v24 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v39))
      {
        id v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v40 = 0;
        _os_log_impl(&dword_1C2F90000, v24, v39, "nextLocalParticipantState is nil, unhandled localParticipantState", v40, 2u);
        MEMORY[0x1C87760E0](v40, -1, -1);

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
        return 252;
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
LABEL_14:

      return 252;
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void *MultiwayViewController.updateIsCaptionsViewDragEnabled()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v8);
  if (result != 1)
  {
    outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v6);
    if ((MultiwayViewController.localParticipantState()() & 0x80) != 0)
    {
      char v4 = 0;
    }
    else
    {
      unsigned int v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags), sel_captionDraggingEnabled);
      if (v3)
      {
        if (static Platform.current.getter()
          || (MultiwayViewController.captionsLayoutState.getter(&v5), v5 != 1))
        {
          LOBYTE(v3) = 0;
        }
        else
        {
          LOBYTE(v3) = ConversationController.isOneToOneModeEnabled.getter();
        }
      }
      char v4 = v3 & 1;
    }
    CaptionsViewDragController.dragEnabled.setter(v4);
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  return result;
}

uint64_t MultiwayViewController.handleShareLinkAction(_:)(void *a1)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v2 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E4FBCB30], v2, v4);
  uint64_t v22 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  aBlock[4] = partial apply for closure #1 in MultiwayViewController.handleShareLinkAction(_:);
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_301;
  double v9 = _Block_copy(aBlock);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  CGFloat v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v13 = a1;
  static DispatchQoS.unspecified.getter();
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  CGFloat v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  CGFloat v18 = (void *)v22;
  MEMORY[0x1C8773BA0](0, v12, v17, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  swift_release();
  return swift_release();
}

void closure #1 in MultiwayViewController.handleShareLinkAction(_:)(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C8776240](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = *(id *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    swift_retain();
    id v9 = a2;
    ConversationController.shareableLink(completionHandler:)((void (*)(uint64_t, void))partial apply for closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:), v8);
    swift_release();
  }
}

uint64_t closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(void *a1, void *a2, uint64_t a3, uint64_t *a4)
{
  if (a1)
  {
    id v7 = a1;
    id v8 = objc_msgSend(v7, sel_URL);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    MEMORY[0x1F4188790](v9 - 8);
    uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v8)
    {
      os_log_type_t v39 = a4;
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v12 - 8);
      MEMORY[0x1F4188790](v12);
      uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v15, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) != 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for URL?);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v38 = static OS_dispatch_queue.main.getter();
        uint64_t v16 = (void *)swift_allocObject();
        v16[2] = a3;
        v16[3] = v7;
        CGFloat v17 = v39;
        void v16[4] = v39;
        aBlock[4] = partial apply for closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:);
        aBlock[5] = v16;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        aBlock[3] = &block_descriptor_310;
        CGFloat v18 = _Block_copy(aBlock);
        id v37 = v7;
        swift_retain();
        CGFloat v19 = v17;
        swift_release();
        uint64_t v20 = type metadata accessor for DispatchQoS();
        os_log_type_t v39 = &v36;
        uint64_t v21 = *(void *)(v20 - 8);
        MEMORY[0x1F4188790](v20);
        uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        static DispatchQoS.unspecified.getter();
        uint64_t v24 = type metadata accessor for DispatchWorkItemFlags();
        uint64_t v36 = (uint64_t)&v36;
        uint64_t v25 = *(void *)(v24 - 8);
        MEMORY[0x1F4188790](v24);
        uint64_t v27 = (char *)&v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        aBlock[0] = MEMORY[0x1E4FBC860];
        _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        char v28 = (void *)v38;
        MEMORY[0x1C8773BA0](0, v23, v27, v18);
        _Block_release(v18);

        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
        return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      }
    }
    else
    {
      uint64_t v30 = type metadata accessor for URL();
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v30);
    }

    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for URL?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C3769620;
  if (a2)
  {
    aBlock[0] = a2;
    id v32 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v33 = String.init<A>(reflecting:)();
    unint64_t v35 = v34;
  }
  else
  {
    unint64_t v35 = 0xE300000000000000;
    uint64_t v33 = 7104878;
  }
  *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v31 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v31 + 32) = v33;
  *(void *)(v31 + 40) = v35;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

void closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    char v16 = 0;
    id v8 = (objc_class *)type metadata accessor for LinkShareCoordinator();
    objc_allocWithZone(v8);
    id v9 = a2;
    id v10 = v7;
    id v11 = a3;
    CGFloat v17 = v8;
    CGFloat v18 = &protocol witness table for LinkShareCoordinator;
    id v15 = LinkShareCoordinator.init(type:hostViewController:originatingView:)();
    uint64_t v12 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator;
    swift_beginAccess();
    outlined assign with take of Participant?((uint64_t)&v15, v12, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
    swift_endAccess();
    if (*(void *)(v12 + 24))
    {
      outlined init with copy of IDSLookupManager(v12, (uint64_t)&v15);
      uint64_t v13 = (uint64_t)v17;
      uint64_t v14 = v18;
      __swift_project_boxed_opaque_existential_1(&v15, (uint64_t)v17);
      ((void (*)(double (*)(void), void, uint64_t, _UNKNOWN **))v14[2])(TPNumberPadCharacter.rawValue.getter, 0, v13, v14);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    }
    else
    {
    }
  }
}

void closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert()(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    MultiwayViewController.showLinkEducationFirstTimeAlert(for:)(a2);
  }
}

uint64_t MultiwayViewController.showLinkEducationFirstTimeAlert(for:)(void *a1)
{
  uint64_t v1 = MultiwayViewController.localParticipantHandleFormattedString(for:)(a1);
  if (v2)
  {
    uint64_t countAndFlagsBits = (void *)v1;
    object = v2;
  }
  else
  {
    id v5 = objc_msgSend(self, sel_conversationKit);
    v6._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v25._object = (void *)0xE000000000000000;
    v6._object = (void *)0x80000001C37B71A0;
    v7.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v7.value._object = (void *)0xEF74694B6E6F6974;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v25._uint64_t countAndFlagsBits = 0;
    Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v25);
    uint64_t countAndFlagsBits = (void *)v9._countAndFlagsBits;
    object = v9._object;
  }
  type metadata accessor for PlatformAlert();
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_conversationKit);
  v26._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001C37B71D0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000023;
  v13.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v13.value._object = (void *)0xEF74694B6E6F6974;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v26);

  uint64_t v16 = static PlatformAlert.create(with:message:)(countAndFlagsBits, (uint64_t)object, v15._countAndFlagsBits, (uint64_t)v15._object);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v16)
  {
    id v18 = objc_msgSend(v10, sel_conversationKit);
    v19._uint64_t countAndFlagsBits = 0xD000000000000025;
    v27._object = (void *)0xE000000000000000;
    v19._object = (void *)0x80000001C37B7200;
    v20.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v20.value._object = (void *)0xEF74694B6E6F6974;
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v27._uint64_t countAndFlagsBits = 0;
    Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v27);

    char v23 = 0;
    (*(void (**)(uint64_t, void *, char *, uint64_t (*)(void), void))(*(void *)v16 + 328))(v22._countAndFlagsBits, v22._object, &v23, TPNumberPadCharacter.rawValue.getter, 0);
    swift_bridgeObjectRelease();
    (*(void (**)(void))(*(void *)v16 + 336))(0);
    return swift_release();
  }
  return result;
}

uint64_t MultiwayViewController.localParticipantHandleFormattedString(for:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v1 = OUTLINED_FUNCTION_92_0();
  uint64_t v3 = (void *)v2(v1);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_association);
    if (v5)
    {
      Swift::String v6 = v5;
      if (objc_msgSend(v5, sel_type) == (id)2 && (objc_msgSend(v6, sel_isPrimary) & 1) == 0)
      {
        id v7 = objc_msgSend(v6, sel_handle);

LABEL_7:
        TUHandle.formattedPhoneNumber.getter();
        if (v8)
        {
        }
        else
        {
          id v9 = objc_msgSend(v7, sel_value);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        return OUTLINED_FUNCTION_24_2();
      }
    }
    id v7 = objc_msgSend(v4, sel_handle);
    goto LABEL_7;
  }
  return OUTLINED_FUNCTION_24_2();
}

void *MultiwayViewController.accessibilityConstraintController()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    uint64_t v2 = *(void **)(v1 + 48);
    id v3 = v2;
  }
  return v2;
}

Swift::Void __swiftcall MultiwayViewController.embedEffectsBrowserViewController(_:)(UIViewController *a1)
{
  objc_msgSend(v1, sel_loadViewIfNeeded);
  id v3 = a1;
  MultiwayViewController.effectsBrowserViewController.setter(a1);
}

id MultiwayViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    Swift::String v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::String v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MultiwayViewController.init(nibName:bundle:)()
{
}

void (*protocol witness for EffectsHandler.effectsViewController.modify in conformance MultiwayViewController(uint64_t *a1))(id *a1, char a2)
{
  a1[1] = v1;
  *a1 = MultiwayViewController.effectsViewController.getter();
  return protocol witness for EffectsHandler.effectsViewController.modify in conformance MultiwayViewController;
}

void protocol witness for EffectsHandler.effectsViewController.modify in conformance MultiwayViewController(id *a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    MultiwayViewController.effectsViewController.setter(v2);
  }
  else
  {
    MultiwayViewController.effectsViewController.setter(*a1);
  }
}

void (*protocol witness for EffectsHandler.effectsBrowserViewController.modify in conformance MultiwayViewController(uint64_t *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = MultiwayViewController.effectsBrowserViewController.getter();
  return MultiwayViewController.effectsBrowserViewController.modify;
}

uint64_t (*protocol witness for EffectsHandler.avcEffects.modify in conformance MultiwayViewController())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id protocol witness for EffectsHandler.setControlsState(_:animated:) in conformance MultiwayViewController(uint64_t a1, char a2)
{
  return objc_msgSend(v2, sel_setControlsState_animated_, a1, a2 & 1);
}

Swift::Void __swiftcall MultiwayViewController.didSelectApp(_:)(Swift::String a1)
{
  OUTLINED_FUNCTION_14();
  uint64_t v4 = v1;
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_80();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  char v8 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *id v3 = static OS_dispatch_queue.main.getter();
  uint64_t v9 = OUTLINED_FUNCTION_19_3();
  v10(v9);
  _dispatchPreconditionTest(_:)();
  uint64_t v11 = OUTLINED_FUNCTION_21_2();
  v12(v11);
  if (v8)
  {
    uint64_t v13 = (uint64_t)v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    OUTLINED_FUNCTION_2();
    outlined init with take of CATransform3D?(v13, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v24, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    OUTLINED_FUNCTION_6_112(v25);
    if (!v14)
    {
      uint64_t v15 = v26;
      uint64_t v16 = (void *)(v26 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      OUTLINED_FUNCTION_2();
      if ((unint64_t)(*v16 - 4) >= 3)
      {
        outlined init with take of CATransform3D?((uint64_t)v24, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v23);
      }
      else
      {
        CGFloat v17 = self;
        outlined init with take of CATransform3D?((uint64_t)v24, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v23);
        id v18 = objc_msgSend(v17, sel_currentDevice);
        id v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

        if (!v19) {
          objc_msgSend(v4, sel_setControlsState_animated_, 2, 1);
        }
      }
      Swift::String_optional v20 = (unsigned __int8 *)(v15 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      OUTLINED_FUNCTION_2();
      if (*v20 > 0x3Fu)
      {
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v24);
      }
      else
      {
        OUTLINED_FUNCTION_2();
        uint64_t v21 = OUTLINED_FUNCTION_45_4();
        _s15ConversationKit11ParticipantVWOcTm_18(v21, v22);
        MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(v2, 0);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v24);
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v2, (void (*)(void))type metadata accessor for Participant);
      }
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.didSelectEffect(_:)()
{
  if (CFXEffect.isAnimoji()())
  {
    MultiwayViewController.localVideoProvider.getter();
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    uint64_t v0 = OUTLINED_FUNCTION_48_1();
    char v2 = v1(v0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    if (v2)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
      id v3 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      MultiwayViewController.toggleCinematicFraming()();
    }
  }
}

uint64_t protocol witness for CaptionsStateController.captionsPausedState.setter in conformance MultiwayViewController(char *a1)
{
  char v2 = *a1;
  return MultiwayViewController.captionsPausedState.setter(&v2);
}

uint64_t (*protocol witness for CaptionsStateController.captionsPausedState.modify in conformance MultiwayViewController())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MultiwayViewController.captionsBubbleModeIsAllowed.getter()
{
  if (static Platform.current.getter())
  {
    char v1 = 1;
  }
  else
  {
    id v2 = objc_msgSend(v0, sel_traitCollection);
    id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

    LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter();
    char v1 = v2 ^ 1;
  }
  return v1 & 1;
}

BOOL MultiwayViewController.isReadyToShowCallDetails.getter()
{
  if ((MultiwayViewController.isOnScreen.getter() & 1) == 0) {
    return 0;
  }
  char v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  OUTLINED_FUNCTION_2();
  return *v1 == 0;
}

void MultiwayViewController.gridViewOverlappingInsets.getter()
{
  id v3 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t v9 = v5 + 8;
  OUTLINED_FUNCTION_50_1();
  v10();
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v11 = (double *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  OUTLINED_FUNCTION_2();
  if (v11[1] == 0.0 && v11[2] == 0.0) {
    return;
  }
  MultiwayViewController.layoutIdiom.getter((BOOL *)v45);
  if (LOBYTE(v45[0]) != 1) {
    return;
  }
  if (MultiwayViewController.isModallyPresentingCallDetails.getter()) {
    return;
  }
  uint64_t v9 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v9, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v44, (uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v45);
  if (v12) {
    return;
  }
  uint64_t v13 = *(char **)(v9 + 48);
  char v14 = (double *)&v13[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio];
  OUTLINED_FUNCTION_2();
  if (((_BYTE)v14[4] & 1) == 0 && (*v14 != 1.0 || v14[1] != 1.0 || v14[2] != 1.0 || v14[3] != 1.0)) {
    return;
  }
  id v2 = &v13[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
  OUTLINED_FUNCTION_2();
  if ((*v2 & 0xFE) == 0x80) {
    return;
  }
  uint64_t v15 = &v13[OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState];
  OUTLINED_FUNCTION_2();
  if (*v15 != 1) {
    return;
  }
  id v40 = v13;
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v46);
  static Platform.current.getter();
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    goto LABEL_35;
  }
LABEL_11:
  uint64_t v16 = (void *)static Defaults.shared;
  CGFloat v17 = (void (**)(double))(*(void *)static Defaults.shared + 384);
  os_log_type_t v39 = *v17;
  ((void (*)(void))*v17)();
  uint64_t v18 = static Platform.current.getter();
  id v19 = (void (**)(uint64_t))(*v16 + 488);
  Swift::String_optional v20 = *v19;
  (*v19)(v18);
  double v21 = static Layout.MediaPip.padding.getter();
  v39(v21);
  uint64_t v22 = static Platform.current.getter();
  v20(v22);
  uint64_t v23 = *(void *)&v40[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24];
  uint64_t v24 = *(void *)&v40[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32];
  __swift_project_boxed_opaque_existential_1(&v40[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout], v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 176))(v23, v24);
  if (*v2 >= 0x40u)
  {
    double v25 = static Layout.MediaPip.padding.getter();
    v39(v25);
    uint64_t v26 = static Platform.current.getter();
    v20(v26);
  }
  Swift::String v27 = &v40[OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState];
  OUTLINED_FUNCTION_2();
  char v28 = *v27;
  uint64_t v29 = &v40[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState];
  OUTLINED_FUNCTION_2();
  if ((v28 & 1) == 0)
  {
    int v30 = *v29;
    if ((v30 - 1) > 1) {
      goto LABEL_24;
    }
    if (one-time initialization token for bottomInsetAfterPadding != -1) {
      swift_once();
    }
  }
  int v30 = *v29;
LABEL_24:
  if (v30
    || (outlined init with take of CATransform3D?(v9, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), outlined init with take of CATransform3D?((uint64_t)v42, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), OUTLINED_FUNCTION_6_112(v43), v12))
  {

    return;
  }
  uint64_t v31 = *(char **)(v9 + 8);
  id v32 = &v31[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
  OUTLINED_FUNCTION_2();
  if (*(void *)(*(void *)v32 + 16) == 1)
  {
    uint64_t v33 = v31;
  }
  else
  {
    uint64_t v38 = v31;
    ParticipantGridViewController.effectiveLayoutStyle.getter(v41);
    if (v41[0] == 2 || (v41[0] & 1) == 0)
    {

      return;
    }
  }
  id v34 = objc_msgSend(v3, sel_view);
  if (v34)
  {
    unint64_t v35 = v34;
    objc_msgSend(v34, sel_safeAreaInsetFrame);

    static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v36 + 384))();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v37 + 488))();
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.mediaPipFrame.getter()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v7 = objc_msgSend(v1, sel_viewIfLoaded);
    if (v7)
    {
      char v8 = v7;
      id v9 = objc_msgSend(v7, sel_window);
      if (v9
        && (id v10 = v9, v11 = objc_msgSend(v9, sel_windowScene),
                      v10,
                      v11))
      {
        char v12 = (double *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
        swift_beginAccess();
        objc_msgSend(v8, sel_convertRect_fromCoordinateSpace_, objc_msgSend(v11, sel_coordinateSpace), *v12, v12[1], v12[2], v12[3]);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    int v8 = a1 & 1;
    if (v8) {
      double v9 = 2.0;
    }
    else {
      double v9 = 1.0;
    }
    uint64_t v34 = static OS_dispatch_queue.main.getter();
    uint64_t v10 = type metadata accessor for DispatchTime();
    uint64_t v32 = v10;
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = MEMORY[0x1F4188790](v10);
    int v30 = v29;
    MEMORY[0x1F4188790](v12);
    char v14 = (char *)v29 - v13;
    static DispatchTime.now()();
    MEMORY[0x1C8772E20](v14, v9);
    uint64_t v15 = *(uint64_t (**)(void *, uint64_t))(v11 + 8);
    uint64_t v31 = v11 + 8;
    uint64_t v33 = v15;
    v15(v14, v10);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(unsigned char *)(v17 + 24) = v8;
    aBlock[4] = partial apply for closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:);
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_363;
    uint64_t v18 = _Block_copy(aBlock);
    swift_release();
    uint64_t v19 = type metadata accessor for DispatchQoS();
    uint64_t v29[2] = v29;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v23 = type metadata accessor for DispatchWorkItemFlags();
    v29[1] = v29;
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x1F4188790](v23);
    uint64_t v26 = (char *)v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = MEMORY[0x1E4FBC860];
    _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    Swift::String v27 = v30;
    char v28 = (void *)v34;
    MEMORY[0x1C8773B10](v30, v22, v26, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    return v33(v27, v32);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    uint64_t v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
    swift_beginAccess();
    if (*(double *)(v6 + 8) != 0.0 || *(double *)(v6 + 16) != 0.0)
    {
      id v7 = (CGFloat *)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
      if (!CGRectIsEmpty(*(CGRect *)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame]))
      {
        CGFloat v8 = *v7;
        CGFloat v9 = v7[1];
        CGFloat v10 = v7[2];
        CGFloat v11 = v7[3];
        MultiwayViewController.mediaPipFrame.getter();
        v18.origin.CGFloat x = v12;
        v18.origin.CGFloat y = v13;
        v18.size.CGFloat width = v14;
        v18.size.CGFloat height = v15;
        v17.origin.CGFloat x = v8;
        v17.origin.CGFloat y = v9;
        v17.size.CGFloat width = v10;
        v17.size.CGFloat height = v11;
        if (!CGRectContainsRect(v17, v18))
        {
          MultiwayViewController.cachedMediaPipSafeAreaFrame.setter(0.0, 0.0, 0.0, 0.0);
          id v16 = objc_msgSend(v5, sel_viewIfLoaded);
          objc_msgSend(v16, sel_setNeedsLayout);

          if ((a2 & 1) == 0) {
            MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(1);
          }
        }
      }
    }
  }
}

void MultiwayViewController.nameForPhotoIndicator.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_64();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MultiwayViewController.oneOnOneParticipant.getter((uint64_t)v6);
  OUTLINED_FUNCTION_33_0((uint64_t)v6, 1, v1);
  if (v7)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    goto LABEL_13;
  }
  CGFloat v8 = *(void **)&v6[*(int *)(v1 + 28)];
  if (!v8)
  {
LABEL_12:
    _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v6, v0);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)();
    id v19 = (id)v22[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
    uint64_t v20 = OUTLINED_FUNCTION_35();
    _s15ConversationKit11ParticipantVWOhTm_12(v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  id v9 = v8;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v9);
  if (!v10)
  {

    goto LABEL_12;
  }
  if ((objc_msgSend(v9, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  type metadata accessor for PersonNameComponents();
  v22[0] = v22;
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_60();
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  id v12 = (id)static NSPersonNameComponentsFormatter.initials;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v14 = objc_msgSend(v12, sel_stringFromPersonNameComponents_, isa);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  OUTLINED_FUNCTION_248();
  OUTLINED_FUNCTION_139();
  v18();
  v22[1] = v15;
  void v22[2] = v17;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.localizedUppercase.getter();

  swift_bridgeObjectRelease();
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_13:
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_28();
}

void MultiwayViewController.screenSharingInteractionController(_:didUpdateRemoteControlStatus:)(uint64_t a1, char a2)
{
  if (a2) {
    ConversationController.addScreenSharingType(_:)();
  }
}

void MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(int a1)
{
  int v50 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  CGFloat v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v14 = (char *)&v42 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v17, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v53, (uint64_t)v54, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v54) != 1)
  {
    double v49 = v8;
    uint64_t v45 = v1;
    CGRect v18 = (void **)(*(void *)(v17 + 24)
                    + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
    swift_beginAccess();
    uint64_t v19 = (*MEMORY[0x1E4FBC8C8] & **v18) + 2352;
    uint64_t v20 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **v18) + 0x930);
    CGRect v46 = *v18;
    uint64_t v21 = v46;
    CGRect v47 = v20;
    uint64_t v48 = v19;
    v20();
    _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v16, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() - 9 >= 3)
    {
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v14, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v16, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
LABEL_21:

      return;
    }
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v16, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.conversationKit);
    id v44 = v21;
    uint64_t v23 = v21;
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    int v26 = v25;
    BOOL v27 = os_log_type_enabled(v24, v25);
    char v28 = v49;
    if (v27)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v52[0] = v30;
      uint64_t v31 = v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v42 = v29 + 4;
      int v43 = v26;
      ((void (*)(uint64_t))v47)(v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
      uint64_t v32 = specialized >> prefix<A>(_:)();
      unint64_t v34 = v33;
      outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      uint64_t v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      char v35 = v50;
      LOBYTE(v51) = v50 & 1;
      uint64_t v36 = String.init<A>(reflecting:)();
      uint64_t v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v24, (os_log_type_t)v43, "Hiding Name+Photo banner %s dueToExplicitUserAction: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      uint64_t v38 = v31;
      char v28 = v49;
      MEMORY[0x1C87760E0](v38, -1, -1);
      MEMORY[0x1C87760E0](v29, -1, -1);

      if ((v35 & 1) == 0) {
        goto LABEL_20;
      }
    }
    else
    {

      if ((v50 & 1) == 0) {
        goto LABEL_20;
      }
    }
    v47();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 9) >= 2)
    {
      if (EnumCaseMultiPayload != 11)
      {
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v11, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
        goto LABEL_20;
      }
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      id v41 = (void *)MultiwayViewController.call.getter();
      specialized NameAndPhotoUtilities.denyIncomingName(from:)(v41);
    }
    else
    {
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v40 = static NameAndPhotoUtilities.shared;
      id v41 = (void *)MultiwayViewController.call.getter();
      specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)(v41, v40);
    }

LABEL_20:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v23) + 0x938))(v28);
    uint64_t v21 = v44;
    goto LABEL_21;
  }
}

void MultiwayViewController.showSNAPHudIfNeeded(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v4, (uint64_t)v52, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v52, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v53) == 1)
  {
    MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(0);
  }
  else
  {
    uint64_t v5 = (void **)(*(void *)(v4 + 24)
                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
    swift_beginAccess();
    uint64_t v6 = *v5;
    uint64_t v7 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime;
    swift_beginAccess();
    uint64_t v8 = type metadata accessor for Date();
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v8);
    if (EnumTagSinglePayload)
    {
      id v10 = v6;
      double v11 = 0.0;
    }
    else
    {
      uint64_t v48 = &v40;
      double v49 = (uint64_t *)a1;
      uint64_t v12 = *(void *)(v8 - 8);
      uint64_t v13 = *(void *)(v12 + 64);
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v40 - v14, v7, v8);
      MEMORY[0x1F4188790](v15);
      id v16 = v6;
      static Date.now.getter();
      Date.timeIntervalSince(_:)();
      double v11 = v17;
      CGRect v18 = *(void (**)(char *, uint64_t))(v12 + 8);
      a1 = (uint64_t)v49;
      v18((char *)&v40 - v14, v8);
      v18((char *)&v40 - v14, v8);
    }
    if (one-time initialization token for secondsDelayBeforeShowingNameAndPhotoBanner != -1) {
      swift_once();
    }
    double v19 = *(double *)&static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner;
    double v20 = v11 - *(double *)&static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner;
    uint64_t v21 = type metadata accessor for DispatchTime();
    double v49 = &v40;
    uint64_t v47 = v21;
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = MEMORY[0x1F4188790](v21);
    uint64_t v45 = &v40;
    MEMORY[0x1F4188790](v23);
    os_log_type_t v25 = (char *)&v40 - v24;
    static DispatchTime.now()();
    v26.n128_f64[0] = vabdd_f64(v11, v19);
    if (v20 > 0.0) {
      v26.n128_f64[0] = 0.0;
    }
    MEMORY[0x1C8772E20](v25, v26);
    BOOL v27 = *(uint64_t **)(v22 + 8);
    uint64_t v46 = v22 + 8;
    uint64_t v48 = v27;
    ((void (*)(char *, uint64_t))v27)(v25, v21);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v44 = static OS_dispatch_queue.main.getter();
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v51);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v6;
    *(void *)(v28 + 24) = v2;
    outlined init with take of ConversationControlsType(v51, (_OWORD *)(v28 + 32));
    void v50[4] = partial apply for closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:);
    v50[5] = v28;
    v50[0] = MEMORY[0x1E4F143A8];
    v50[1] = 1107296256;
    v50[2] = thunk for @escaping @callee_guaranteed () -> ();
    v50[3] = &block_descriptor_355;
    uint64_t v29 = _Block_copy(v50);
    id v42 = v6;
    id v30 = v2;
    swift_release();
    uint64_t v41 = type metadata accessor for DispatchQoS();
    int v43 = &v40;
    uint64_t v31 = *(void *)(v41 - 8);
    MEMORY[0x1F4188790](v41);
    unint64_t v33 = (char *)&v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
    uint64_t v40 = (uint64_t)&v40;
    uint64_t v35 = *(void *)(v34 - 8);
    MEMORY[0x1F4188790](v34);
    unint64_t v37 = (char *)&v40 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    v50[0] = MEMORY[0x1E4FBC860];
    _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v38 = (void *)v44;
    os_log_type_t v39 = v45;
    MEMORY[0x1C8773B10](v45, v33, v37, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v41);
    ((void (*)(uint64_t *, uint64_t))v48)(v39, v47);
  }
}

uint64_t specialized MultiwayViewController.getSuggestedBannerType(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  uint64_t v7 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  uint64_t v8 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v8, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_endAccess();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)MultiwayViewController.call.getter();
  unint64_t v10 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  NameAndPhotoUtilities.suggestedBannerType(for:)((uint64_t)v9, v10, v16);

  if (v17 == 255) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for ConversationControlsType?);
  }
  outlined init with take of ConversationControlsType(v16, v18);
  double v11 = (void *)MultiwayViewController.call.getter();
  unsigned int v12 = objc_msgSend(v11, sel_status);

  if (v12 == 1)
  {
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x1C8776240](a2);
    if (v13)
    {
      unint64_t v14 = (void *)v13;
      MultiwayViewController.showSNAPHudIfNeeded(for:)((uint64_t)v18);
    }
  }
  else
  {
    MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(0);
  }
  return outlined destroy of ConversationControlsType((uint64_t)v18);
}

void closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:)(void *a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v60 - v14;
  uint64_t v16 = (*MEMORY[0x1E4FBC8C8] & *a1) + 2352;
  id v68 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x930);
  ((void (*)(uint64_t))v68)(v13);
  swift_storeEnumTagMultiPayload();
  char v17 = static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v15, (uint64_t)v12);
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v12, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v15, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  if (v17)
  {
    v60[1] = v16;
    int v61 = v8;
    uint64_t v65 = a3;
    id v66 = v15;
    id v67 = a1;
    uint64_t v62 = v9;
    CGRect v18 = (uint64_t *)&a2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill];
    swift_beginAccess();
    double v19 = a2;
    uint64_t v20 = *v18;
    id v64 = v19;
    uint64_t v21 = (void *)MultiwayViewController.call.getter();
    swift_bridgeObjectRetain();
    id v22 = objc_msgSend(v21, sel_uniqueProxyIdentifierUUID);

    uint64_t v23 = type metadata accessor for UUID();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void *)(v24 + 64);
    MEMORY[0x1F4188790](v23);
    unint64_t v63 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
    __n128 v26 = (char *)v60 - v63;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    MEMORY[0x1F4188790](v27);
    v60[-2] = v26;
    LOBYTE(v22) = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)&v60[-4], v20);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      uint64_t v28 = (void *)MultiwayViewController.call.getter();
      id v29 = objc_msgSend(v28, sel_uniqueProxyIdentifierUUID);

      MEMORY[0x1F4188790](v30);
      uint64_t v31 = (char *)v60 - v63;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v32 = *(void *)(*v18 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
      uint64_t v33 = *v18;
      *(void *)(v33 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v33+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v32, v31, v23);
      swift_endAccess();
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.conversationKit);
      uint64_t v35 = v67;
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      BOOL v38 = os_log_type_enabled(v36, v37);
      os_log_type_t v39 = v66;
      if (v38)
      {
        uint64_t v40 = v66;
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v70 = v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        id v64 = v41 + 4;
        uint64_t v43 = (uint64_t)v61;
        v68();
        __swift_storeEnumTagSinglePayload(v43, 0, 1, v62);
        uint64_t v44 = specialized >> prefix<A>(_:)();
        unint64_t v46 = v45;
        outlined destroy of SystemUpdateNotice?(v43, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        uint64_t v47 = v44;
        os_log_type_t v39 = v40;
        uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v46, &v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v36, v37, "Showing Name+Photo banner %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v42, -1, -1);
        MEMORY[0x1C87760E0](v41, -1, -1);
      }
      else
      {
      }
      int v57 = (void *)MEMORY[0x1E4FBC8C8];
      outlined init with copy of ConversationControlsType(v65, (uint64_t)&v70);
      if (v73 == 6
        && ((int8x16_t v58 = vorrq_s8(v71, v72),
             int8x8_t v59 = vorr_s8(*(int8x8_t *)v58.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)),
             v70 == 13)
         && !*(void *)&v59
         || v70 == 14 && !*(void *)&v59
         || v70 == 20 && !*(void *)&v59))
      {
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))((*v57 & *v35) + 0x938))(v39);
      }
      else
      {
        outlined destroy of ConversationControlsType((uint64_t)&v70);
      }
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    __swift_project_value_buffer(v48, (uint64_t)static Logger.conversationKit);
    double v49 = a1;
    int v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      double v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v70 = v53;
      *(_DWORD *)double v52 = 136315138;
      v68();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
      uint64_t v54 = specialized >> prefix<A>(_:)();
      unint64_t v56 = v55;
      outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v56, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v50, v51, "Not showing Name+Photo banner because showing a different appLaunch button %s", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v53, -1, -1);
      MEMORY[0x1C87760E0](v52, -1, -1);
    }
    else
    {
    }
  }
}

void MultiwayViewController.nameAndPhotoUtilitiesDidUpdatePersonalNickname(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    if (a2) {
      MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()();
    }
  }
}

uint64_t MultiwayViewController.nameAndPhotoUtilitiesNameAndPhotoAvailable(forDestinations:withBannerType:)(uint64_t a1, uint64_t a2)
{
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a2, (uint64_t)v10, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v11 == 255) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for ConversationControlsType?);
  }
  outlined init with take of ConversationControlsType(v10, v12);
  *(void *)&v10[0] = a1;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)((uint64_t *)v10);
  uint64_t v3 = *(void **)&v10[0];
  uint64_t v4 = (void *)MultiwayViewController.call.getter();
  id v5 = objc_msgSend(v4, sel_remoteParticipantHandles);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWlTm_1((uint64_t)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)&v10[0] = v8;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)((uint64_t *)v10);
  swift_bridgeObjectRelease();
  LOBYTE(v8) = specialized static Array<A>.== infix(_:_:)(v3, *(void **)&v10[0]);
  swift_release();
  swift_release();
  if (v8) {
    MultiwayViewController.showSNAPHudIfNeeded(for:)((uint64_t)v12);
  }
  return outlined destroy of ConversationControlsType((uint64_t)v12);
}

void MultiwayViewController.handleTapInteraction(_:eventType:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  id v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_16_0();
  uint64_t v12 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_249_1(v12, (uint64_t)v70);
  outlined init with take of CATransform3D?((uint64_t)v70, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112((uint64_t *)v71);
  if (v33) {
    goto LABEL_18;
  }
  uint64_t v13 = v7 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  OUTLINED_FUNCTION_2();
  uint64_t v14 = (void *)MEMORY[0x1C8776240](v13);
  if (v5)
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v70);
    id v15 = v5;
  }
  else
  {
    outlined init with take of CATransform3D?((uint64_t)v70, (uint64_t)v69, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v69);
    id v5 = v14;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) == 1)
  {
    MultiwayViewController.toggleReactionsView()();
LABEL_17:

    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v70);
LABEL_18:
    OUTLINED_FUNCTION_28();
    return;
  }
  if (!v5 || (uint64_t v16 = type metadata accessor for ParticipantView(), (v17 = swift_dynamicCastClass()) == 0))
  {
    uint64_t v27 = *(void **)(v7 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
    if (objc_msgSend(v27, sel_numberOfTapsRequired) == (id)1)
    {
      MultiwayViewController.didSingleTapBackground()();
      MultiwayViewController.restartAutoHideInCallControlsTimer()();
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v28 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v28 + 16) = xmmword_1C3769620;
      v69[0] = objc_msgSend(v27, sel_numberOfTapsRequired);
      uint64_t v29 = String.init<A>(reflecting:)();
      uint64_t v31 = v30;
      *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v28 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v28 + 32) = v29;
      *(void *)(v28 + 40) = v31;
      OUTLINED_FUNCTION_227_1();
      swift_bridgeObjectRelease();
    }
    goto LABEL_17;
  }
  CGRect v18 = (void *)v17;
  uint64_t v64 = v16;
  uint64_t v62 = (uint64_t *)v1;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v65 = v61;
  OUTLINED_FUNCTION_4();
  uint64_t v63 = v20;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_54_6(v22, v61[0]);
  id v67 = v18;
  uint64_t v23 = (uint64_t)v18 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
  OUTLINED_FUNCTION_2();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  id v66 = v61;
  uint64_t v25 = OUTLINED_FUNCTION_8(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_60();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v23, v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_33_0(v16, 1, v19);
  if (v33)
  {
    id v26 = v5;
    outlined destroy of SystemUpdateNotice?(v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_22:
    uint64_t v35 = v67;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v36 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v36 + 16) = xmmword_1C3769620;
    id v68 = v35;
    id v37 = v5;
    OUTLINED_FUNCTION_173_3();
    OUTLINED_FUNCTION_281();
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v36 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v36 + 32) = v19;
    *(void *)(v36 + 40) = v7;
    OUTLINED_FUNCTION_13_51();
    swift_bridgeObjectRelease();

    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v70);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_4_18();
  OUTLINED_FUNCTION_63_0();
  v32();
  id v66 = v5;
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_33_0(v2, 1, v10);
  if (v33)
  {
    OUTLINED_FUNCTION_26_2();
    v34();
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
    goto LABEL_22;
  }
  BOOL v38 = v66;
  v61[1] = v19;
  os_log_type_t v39 = v62;
  outlined init with take of Participant(v2, (uint64_t)v62);
  id v40 = objc_msgSend(v71[1], sel_view);
  if (v40)
  {
    uint64_t v41 = v40;
    unsigned __int8 v42 = objc_msgSend(v67, sel_isDescendantOfView_, v40);

    if (v42)
    {
      id v43 = OUTLINED_FUNCTION_95_6(OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
      if (v43 == (id)2)
      {
        MultiwayViewController.didDoubleTapGridParticipantView(_:participant:)((uint64_t)v67, v39);
        goto LABEL_46;
      }
      if (v43 == (id)1)
      {
        MultiwayViewController.didSingleTapGridParticipantView(_:participant:)(v67, (uint64_t)v39);
LABEL_46:
        MultiwayViewController.restartAutoHideInCallControlsTimer()();
LABEL_50:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v70);

        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v39, (void (*)(void))type metadata accessor for Participant);
        OUTLINED_FUNCTION_139();
        v60();
        goto LABEL_18;
      }
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      int v50 = (__n128 *)OUTLINED_FUNCTION_11_7();
      id v68 = OUTLINED_FUNCTION_175_3(v50, (__n128)xmmword_1C37696D0);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_281();
      unint64_t v51 = MEMORY[0x1E4FBB1A0];
      v50[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v52 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_75_8(v52);
      uint64_t v53 = OUTLINED_FUNCTION_173_3();
      v50[6].n128_u64[0] = v51;
      v50[6].n128_u64[1] = (unint64_t)&selRef_lagunaPullBackEnabled;
      v50[4].n128_u64[1] = v53;
      v50[5].n128_u64[0] = v54;
LABEL_49:
      OUTLINED_FUNCTION_227_1();
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    id v44 = objc_msgSend(v71[0], sel_view);
    if (v44)
    {
      unint64_t v45 = v44;
      unint64_t v46 = v67;
      unsigned __int8 v47 = objc_msgSend(v67, sel_isDescendantOfView_, v44);

      if (v47)
      {
        if (OUTLINED_FUNCTION_95_6(OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer) == (id)1)
        {
          MultiwayViewController.didSingleTapRosterParticipantView(_:participant:)((uint64_t)v46, (uint64_t)v39);
          goto LABEL_46;
        }
        if (one-time initialization token for conversationKit == -1) {
          goto LABEL_48;
        }
      }
      else
      {
        if (*(uint64_t *)((char *)v39 + *(int *)(v10 + 28)))
        {
          if (one-time initialization token for conversationKit != -1) {
            swift_once();
          }
          static os_log_type_t.error.getter();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v48 = OUTLINED_FUNCTION_25_15();
          *(_OWORD *)(v48 + 16) = xmmword_1C3769620;
          id v68 = v46;
          double v49 = v38;
          OUTLINED_FUNCTION_173_3();
          OUTLINED_FUNCTION_281();
          *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v48 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v48 + 32) = &selRef_ringButton;
          *(void *)(v48 + 40) = v7;
          goto LABEL_49;
        }
        if (OUTLINED_FUNCTION_95_6(OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer) == (id)1)
        {
          MultiwayViewController.didTapLocalParticipantView(_:)();
          goto LABEL_46;
        }
        if (one-time initialization token for conversationKit == -1) {
          goto LABEL_48;
        }
      }
      swift_once();
LABEL_48:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      unint64_t v55 = (__n128 *)OUTLINED_FUNCTION_11_7();
      id v68 = OUTLINED_FUNCTION_175_3(v55, (__n128)xmmword_1C37696D0);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_281();
      unint64_t v56 = MEMORY[0x1E4FBB1A0];
      v55[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v57 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_75_8(v57);
      uint64_t v58 = OUTLINED_FUNCTION_173_3();
      v55[6].n128_u64[0] = v56;
      v55[6].n128_u64[1] = (unint64_t)v46;
      v55[4].n128_u64[1] = v58;
      v55[5].n128_u64[0] = v59;
      goto LABEL_49;
    }
  }
  else
  {

    __break(1u);
  }

  __break(1u);
}

void *MultiwayViewController.didSingleTapGridParticipantView(_:participant:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_18(a2, (uint64_t)v11);
  uint64_t v100 = v6;
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
  uint64_t v13 = specialized >> prefix<A>(_:)();
  uint64_t v15 = v14;
  outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v16, (uint64_t)v106, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v106, (uint64_t)v107, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v107);
  if (result != 1)
  {
    uint64_t v97 = a1;
    unsigned int v98 = v8;
    outlined init with take of CATransform3D?((uint64_t)v106, (uint64_t)v104, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v104);
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
    outlined init with take of CATransform3D?((uint64_t)v106, (uint64_t)v105, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v105);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v104);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v99 = a2;
      uint64_t v96 = v3;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v103[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v23 = v108;
      uint64_t v24 = (uint64_t *)(v108 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      swift_beginAccess();
      v102[0] = *v24;
      uint64_t v25 = String.init<A>(describing:)();
      v102[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v27 = (unsigned char *)(v23 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      if (*v27)
      {
        if (*v27 == 1)
        {
          unint64_t v28 = 0xE700000000000000;
          uint64_t v29 = 0x656C6269736976;
        }
        else
        {
          unint64_t v28 = 0xEE00756E654D676ELL;
          uint64_t v29 = 0x69746E6573657270;
        }
      }
      else
      {
        unint64_t v28 = 0xE600000000000000;
        uint64_t v29 = 0x6E6564646968;
      }
      uint64_t v3 = v96;
      v102[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
      _os_log_impl(&dword_1C2F90000, v19, v20, "didSingleTapGridParticipantView: inCallControlsState:%s inCallConversationBannerState:%s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v22, -1, -1);
      MEMORY[0x1C87760E0](v21, -1, -1);

      a2 = v99;
    }
    else
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
      outlined init with take of CATransform3D?((uint64_t)v106, (uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined release of MultiwayViewController.ViewContent((uint64_t)v103);
      outlined release of MultiwayViewController.ViewContent((uint64_t)v107);
    }
    uint64_t v30 = v108;
    uint64_t v31 = (unsigned char *)(v108 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
    swift_beginAccess();
    if ((*v31 & 1) == 0) {
      MultiwayViewController.didSingleTapBackground()();
    }
    if ((Participant.isActive.getter() & 1) == 0)
    {
      MultiwayViewController.didSingleTapBackground()();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
    }
    uint64_t v32 = v107[1];
    if ((*v31 & 1) == 0)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v100);
      ParticipantGridViewController.select(_:forFocusing:)();
      outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
LABEL_24:
      id v47 = v109;
      id v48 = v109;
      double v49 = v47;
LABEL_25:
      MultiwayViewController.bringSubviewToFront(_:)(v49);
      goto LABEL_26;
    }
    uint64_t v33 = a2;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v34 - 8);
    uint64_t v95 = v35;
    uint64_t v36 = (char *)v93 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = v100;
    uint64_t v38 = *(int *)(v100 + 20);
    uint64_t v99 = v33;
    os_log_type_t v39 = (char *)(v33 + v38);
    uint64_t v40 = type metadata accessor for UUID();
    uint64_t v41 = *(void *)(v40 - 8);
    unsigned __int8 v42 = *(void (**)(char *, char *, uint64_t, __n128))(v41 + 16);
    uint64_t v96 = v39;
    v93[1] = v41 + 16;
    uint64_t v94 = v42;
    ((void (*)(char *, char *, uint64_t))v42)(v36, v39, v40);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v40);
    id v43 = (void *)v32;
    ParticipantGridViewController.isSelected(_:)();
    char v45 = v44;
    outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v45)
    {
      unint64_t v46 = (unsigned char *)(v30 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      if (*v46)
      {
        if (*v46 == 1)
        {
          unsigned __int8 v101 = 0;
          MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v101, 252, 1);
          MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
        }
      }
      else
      {
        unsigned __int8 v101 = 1;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v101, 252, 1);
      }
      goto LABEL_24;
    }
    MultiwayViewController.markParticipantWithIdentifierAsUserSelected(_:)();
    v54._rawValue = (void *)MultiwayViewController.mostActiveParticipants.getter();
    LOWORD(v102[0]) = 512;
    ParticipantGridViewController.update(with:updateReason:)(v54, (char *)v102);
    swift_bridgeObjectRelease();
    uint64_t v55 = v99;
    _s15ConversationKit11ParticipantVWOcTm_18(v99, (uint64_t)v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v37);
    ParticipantGridViewController.select(_:forFocusing:)();
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    unint64_t v56 = (unsigned char *)(v30 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    uint64_t v57 = swift_beginAccess();
    if (*v56)
    {
      __n128 v58 = MEMORY[0x1F4188790](v57);
      long long v60 = (char *)v93 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
      v94(v60, v96, v40, v58);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v40);
      int v61 = v43;
      ParticipantGridViewController.isSelected(_:)();
      char v63 = v62;
      outlined destroy of SystemUpdateNotice?((uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v64 = v97;
      uint64_t v65 = (uint64_t)v98;
      if ((v63 & 1) == 0)
      {
        unsigned __int8 v101 = 0;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v101, 252, 1);
        MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
      }
    }
    else
    {
      int v61 = v43;
      unsigned __int8 v101 = 1;
      MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v101, 252, 1);
      uint64_t v64 = v97;
      uint64_t v65 = (uint64_t)v98;
    }
    uint64_t result = objc_msgSend(v3, sel_view);
    if (result)
    {
      id v66 = result;
      objc_msgSend(v64, sel_frame);
      double v68 = v67;
      double v70 = v69;
      double v72 = v71;
      double v74 = v73;
      id v75 = objc_msgSend(v61, sel_view);
      objc_msgSend(v66, sel_convertRect_fromView_, v75, v68, v70, v72, v74);
      CGFloat v77 = v76;
      CGFloat v79 = v78;
      CGFloat v81 = v80;
      CGFloat v83 = v82;

      id v84 = v109;
      objc_msgSend(v109, sel_frame);
      v112.origin.CGFloat x = v85;
      v112.origin.CGFloat y = v86;
      v112.size.CGFloat width = v87;
      v112.size.CGFloat height = v88;
      v111.origin.CGFloat x = v77;
      v111.origin.CGFloat y = v79;
      v111.size.CGFloat width = v81;
      v111.size.CGFloat height = v83;
      LODWORD(v66) = CGRectIntersectsRect(v111, v112);
      _s15ConversationKit11ParticipantVWOcTm_18(v55, v65);
      if (v66)
      {
        char v89 = Participant.isActiveWithVideo.getter();
        _s15ConversationKit11ParticipantVWOhTm_12(v65, (void (*)(void))type metadata accessor for Participant);
        if (v89)
        {
          id v90 = objc_msgSend(v61, sel_view);
          MultiwayViewController.bringSubviewToFront(_:)(v90);

          if (!v110) {
            goto LABEL_27;
          }
          id v48 = v110;
          id v91 = objc_msgSend(v48, sel_superview);

          if (!v91)
          {
LABEL_26:

LABEL_27:
            int v50 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
            if (v50)
            {
              unint64_t v51 = (void *)MEMORY[0x1E4FBC8C8];
              unint64_t v52 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v50) + 0x78);
              uint64_t v53 = v50;
              if (v52()) {
                (*(void (**)(unint64_t, unint64_t))((*v51 & *v53) + 0xB8))(0xD000000000000026, 0x80000001C37B6DA0);
              }
            }
            MultiwayViewController.needsUpdatePresentationContexts.setter(1);
            return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
          }
          uint64_t result = objc_msgSend(v3, sel_view);
          if (result)
          {
            id v92 = result;
            objc_msgSend(result, sel_bringSubviewToFront_, v48);

            id v48 = v92;
            goto LABEL_26;
          }
LABEL_49:
          __break(1u);
          return result;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_12(v65, (void (*)(void))type metadata accessor for Participant);
      }
      id v48 = v84;
      double v49 = v84;
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_49;
  }
  return result;
}

void *MultiwayViewController.didDoubleTapGridParticipantView(_:participant:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)a2, (uint64_t)v6);
  uint64_t v8 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  uint64_t v9 = specialized >> prefix<A>(_:)();
  uint64_t v11 = v10;
  outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v12, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v17);
  if (result != 1)
  {
    uint64_t v14 = (unsigned char *)(v17[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
    uint64_t result = (void *)swift_beginAccess();
    if (*v14 == 1)
    {
      outlined init with take of CATransform3D?((uint64_t)v16, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v15);
      MultiwayViewController.toggleFocusedParticipant(_:)(a2);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
    }
  }
  return result;
}

void *MultiwayViewController.didSingleTapRosterParticipantView(_:participant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21[-4] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21[-4] - v8;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_18(a2, (uint64_t)v9);
  uint64_t v11 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  uint64_t v12 = specialized >> prefix<A>(_:)();
  uint64_t v14 = v13;
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v15, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v24);
  if (result != 1)
  {
    outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v22);
    if ((MultiwayViewController.participantIsShownInGrid(_:)() & 1) == 0)
    {
      MultiwayViewController.markParticipantWithIdentifierAsUserSelected(_:)();
      uint64_t v17 = v24[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
      swift_beginAccess();
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v17, (uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v11);
      outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      v19._rawValue = (void *)MultiwayViewController.mostActiveParticipants.getter();
      if (EnumTagSinglePayload == 1)
      {
        v21[0] = 512;
        ParticipantGridViewController.update(with:updateReason:)(v19, (char *)v21);
      }
      else
      {
        ParticipantGridViewController.defocus(to:)(v19);
      }
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOcTm_18(a2, (uint64_t)v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      ParticipantGridViewController.select(_:forFocusing:)();
      outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
      MultiwayViewController.mostActiveParticipants.getter();
      MultiwayViewController.activeRemoteParticipants(in:)();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      Array<A>.participants(notIn:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ParticipantListViewController.update(with:updateReason:)();
      swift_bridgeObjectRelease();
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v23);
  }
  return result;
}

uint64_t MultiwayViewController.didTapLocalParticipantView(_:)()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v4, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = getEnumTag for TapInteraction.EventType(v5);
  if (result != 1)
  {
    uint64_t v3 = (unsigned __int8 *)(v5[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    uint64_t result = specialized Sequence<>.contains(_:)(*v3, (uint64_t)&outlined read-only object #0 of MultiwayViewController.didTapLocalParticipantView(_:));
    if ((result & 1) == 0)
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
      MultiwayViewController.focusLocalParticipant()();
      return (uint64_t)_s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
    }
  }
  return result;
}

void *MultiwayViewController.didSingleTapBackground()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v4, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v13);
  if (result != 1)
  {
    uint64_t v6 = v13[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v6, (uint64_t)v3, &demangling cache variable for type metadata for Participant?);
    uint64_t v7 = type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v7) == 1)
    {
      outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v11);
      outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Participant?);
      uint64_t v8 = (unsigned char *)(v13[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      if (*v8)
      {
        if (*v8 == 1)
        {
          v10[0] = 0;
          MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v10, 252, 1);
          MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
        }
      }
      else
      {
        v10[0] = 1;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v10, 252, 1);
      }
    }
    else
    {
      outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v11);
      outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Participant?);
      MultiwayViewController.unfocusFocusedParticipant()();
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v12);
  }
  return result;
}

void MultiwayViewController.markParticipantWithIdentifierAsUserSelected(_:)()
{
}

uint64_t MultiwayViewController.toggleFocusedParticipant(_:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBE8], v12);
  char v16 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v18 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v18, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v68, (uint64_t)v69, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = getEnumTag for TapInteraction.EventType(v69);
  if (result != 1)
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    char v63 = &v51;
    uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 64);
    MEMORY[0x1F4188790](v19 - 8);
    uint64_t v21 = v69[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    swift_beginAccess();
    uint64_t v64 = v21;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v21, (uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v3) == 1)
    {
      outlined init with take of CATransform3D?((uint64_t)v68, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v67);
      outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
      uint64_t v22 = type metadata accessor for UUID();
      __swift_storeEnumTagSinglePayload((uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v22);
      BOOL v23 = 0;
    }
    else
    {
      uint64_t v24 = &v11[*(int *)(v3 + 20)];
      uint64_t v25 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v25);
      outlined init with take of CATransform3D?((uint64_t)v68, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v67);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload((uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v25);
      BOOL v23 = __swift_getEnumTagSinglePayload((uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v25) != 1;
    }
    unint64_t v26 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v65, (uint64_t)v5);
    char v62 = &v51;
    MEMORY[0x1F4188790](v27);
    unint64_t v28 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v29 = (char *)&v51 - v28;
    uint64_t v30 = outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v26, (uint64_t)&v51 - v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v23)
    {
      int v61 = v2;
      __n128 v58 = &v51;
      uint64_t v59 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v30);
      uint64_t v31 = v3;
      uint64_t v32 = (char *)&v51 - v28;
      uint64_t v60 = v31;
      uint64_t v33 = &v5[*(int *)(v31 + 20)];
      uint64_t v34 = type metadata accessor for UUID();
      uint64_t v56 = *(void *)(v34 - 8);
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)&v51 - v28, v33, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)&v51 - v28, 0, 1, v34);
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      uint64_t v57 = &v51;
      MEMORY[0x1F4188790](v35 - 8);
      uint64_t v37 = (char *)&v51 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v39 = (uint64_t)&v37[*(int *)(v38 + 56)];
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v51 - v28, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v29, v39, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v34);
      if (EnumTagSinglePayload == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
        if (__swift_getEnumTagSinglePayload(v39, 1, v34) == 1)
        {
          outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          unint64_t v26 = v59;
          uint64_t v3 = v60;
          uint64_t v2 = v61;
          goto LABEL_11;
        }
      }
      else
      {
        MEMORY[0x1F4188790](EnumTagSinglePayload);
        unsigned __int8 v42 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v37, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v43 = __swift_getEnumTagSinglePayload(v39, 1, v34);
        if (v43 != 1)
        {
          uint64_t v55 = &v51;
          __n128 v47 = MEMORY[0x1F4188790](v43);
          Swift::OpaquePointer v54 = &v51;
          double v49 = (char *)&v51 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t, uint64_t, __n128))(v56 + 32))(v49, v39, v34, v47);
          _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
          unint64_t v52 = v42;
          int v53 = dispatch thunk of static Equatable.== infix(_:_:)();
          int v50 = *(void (**)(char *, uint64_t))(v56 + 8);
          v50(v49, v34);
          outlined destroy of SystemUpdateNotice?((uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
          v50(v52, v34);
          outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          unint64_t v26 = v59;
          uint64_t v3 = v60;
          uint64_t v2 = v61;
          if ((v53 & 1) == 0) {
            goto LABEL_16;
          }
          goto LABEL_11;
        }
        outlined destroy of SystemUpdateNotice?((uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v34);
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      unint64_t v26 = v59;
      uint64_t v3 = v60;
      uint64_t v2 = v61;
      goto LABEL_16;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v51 - v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
LABEL_11:
    uint64_t v41 = type metadata accessor for UUID();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v41) != 1)
    {
      MultiwayViewController.unfocusFocusedParticipant()();
LABEL_17:
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v64, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v3) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v44 = *(void *)&v8[*(int *)(v3 + 28)];
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
        if (!v44)
        {
          char v45 = (void *)(v69[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
          swift_beginAccess();
          if (!*v45)
          {
            if (MultiwayViewController.effectsBrowserIsOpaque.getter()) {
              uint64_t v46 = 2;
            }
            else {
              uint64_t v46 = 1;
            }
            objc_msgSend(v2, sel_setControlsState_animated_, v46, 1);
            unsigned __int8 v66 = 1;
            MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v66, 252, 1);
          }
        }
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v68);
      return outlined destroy of SystemUpdateNotice?((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    }
LABEL_16:
    MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(v65, 1);
    goto LABEL_17;
  }
  return result;
}

uint64_t MultiwayViewController.focusLocalParticipant()()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3769620;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_18(v8, (uint64_t)v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v1);
  uint64_t v9 = specialized >> prefix<A>(_:)();
  uint64_t v11 = v10;
  outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  MultiwayViewController.unfocusFocusedParticipant()();
  _s15ConversationKit11ParticipantVWOcTm_18(v8, (uint64_t)v3);
  MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(v3, 1);
  return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v3, (void (*)(void))type metadata accessor for Participant);
}

void *MultiwayViewController.collapseLocalParticipantView()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)logger);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C2F90000, v3, v4, "collapseLocalParticipantView", v5, 2u);
    MEMORY[0x1C87760E0](v5, -1, -1);
  }

  uint64_t v6 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v6, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v11, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v12);
  if (result != 1)
  {
    uint64_t v8 = (unsigned char *)(v12[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    if ((*v8 & 0xFE) == 0x80)
    {
      outlined init with take of CATransform3D?((uint64_t)v11, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v10);
      int v9 = MultiwayViewController.localParticipantCornerToUse.getter() | 0x40;
    }
    else
    {
      outlined init with take of CATransform3D?((uint64_t)v11, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v10);
      int v9 = 128;
    }
    v10[0] = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v10, v9, 1);
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v11);
  }
  return result;
}

uint64_t protocol witness for TapInteractionHandler.handleTapInteractionEnabled(_:) in conformance MultiwayViewController()
{
  return MultiwayViewController.handleTapInteractionEnabled(_:)() & 1;
}

void protocol witness for TapInteractionHandler.handleTapInteraction(_:eventType:) in conformance MultiwayViewController()
{
}

void *MultiwayViewController.localParticipantViewDidLongPress(_:localParticipantView:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_233_0(v0, (uint64_t)v6);
  outlined init with take of CATransform3D?((uint64_t)v6, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)OUTLINED_FUNCTION_6_112(v7);
  if (!v2)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    uint64_t v3 = (void *)v7[7];
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v6);
    id v4 = v3;
    OUTLINED_FUNCTION_45_4();
    char v5 = static NSObject.== infix(_:_:)();

    if (v5) {
      MultiwayViewController.toggleReactionsView()();
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v6);
  }
  return result;
}

void MultiwayViewController.localParticipantViewDidTap(_:localParticipantView:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v4, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v21);
  if (!v5)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    uint64_t v6 = (void *)v21[7];
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v20);
    id v7 = v6;
    OUTLINED_FUNCTION_200_1();
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      uint64_t v10 = OUTLINED_FUNCTION_30(v9, (uint64_t)static Logger.conversationKit);
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_107(v11))
      {
        uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        uint64_t v13 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v10, (os_log_type_t)v7, "localParticipantViewDidTap action: %s", v12, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }

      switch(v3)
      {
        case 1:
          MultiwayViewController.pauseVideoMessageRecording()();
          goto LABEL_25;
        case 2:
          MultiwayViewController.cancelVideoRecording(completion:)();
          goto LABEL_25;
        case 3:
          ConversationController.stopRecordingVideoMessage()();
          goto LABEL_25;
        case 4:
          MultiwayViewController.collapseLocalParticipantView()();
          goto LABEL_25;
        case 5:
          MultiwayViewController.toggleRecordingLocalVideo()();
          goto LABEL_25;
        case 6:
          MultiwayViewController.toggleLocalOrientation()();
          goto LABEL_25;
        case 7:
          MultiwayViewController.toggleLocalParticipantEffectsButton()();
          goto LABEL_25;
        case 8:
          MultiwayViewController.toggleCameraBlur()();
          goto LABEL_25;
        case 9:
          ConversationController.swapLocalParticipantCamera()();
          MultiwayViewController.updateShouldShowReactionPickerTipView()();
          goto LABEL_25;
        case 10:
          MultiwayViewController.toggleCinematicFraming()();
          goto LABEL_25;
        case 11:
          ConversationController.callBack()();
          goto LABEL_25;
        case 12:
          if (!*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator)) {
            goto LABEL_25;
          }
          OUTLINED_FUNCTION_43_24();
          char v16 = *(void (**)(unint64_t))(v15 + 176);
          id v18 = v17;
          OUTLINED_FUNCTION_47();
          v16(0xD00000000000001ALL);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v20);

          break;
        case 13:
          MultiwayViewController.closeVideoMessageCallBack()();
          goto LABEL_25;
        case 14:
          ConversationController.toggleReactionEffectGesture()();
          goto LABEL_25;
        case 15:
          ConversationController.toggleStudioLight()();
          goto LABEL_25;
        default:
          MultiwayViewController.startRecordingVideoMessage()();
          goto LABEL_25;
      }
    }
    else
    {
LABEL_25:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v20);
    }
  }
  OUTLINED_FUNCTION_28();
}

void MultiwayViewController.toggleRecordingLocalVideo()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 312))(ObjectType, v1))
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID;
    swift_beginAccess();
    if (*(void *)(v3 + 8)) {
      ConversationController.stopRecordingLocalVideo()();
    }
    else {
      ConversationController.startRecordingLocalVideo()();
    }
  }
}

Swift::Void __swiftcall MultiwayViewController.toggleLocalOrientation()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_30(v2, (uint64_t)logger);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_105(v4))
    {
      char v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_180(v5);
      OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v6, v7, "toggleLocalOrientation");
      OUTLINED_FUNCTION_3();
    }

    char v8 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_2();
    if ((*v8 & 0xFFFFFFFFFFFFFFFDLL) == 1) {
      uint64_t v9 = 2;
    }
    else {
      uint64_t v9 = 1;
    }
    ConversationController.deviceOrientation.setter(v9);
    uint64_t v10 = MultiwayViewController.constraintController.getter();
    if (!v10
      || (os_log_type_t v11 = (void *)v10,
          uint64_t v12 = (unsigned __int8 *)(v10 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState),
          OUTLINED_FUNCTION_2(),
          LODWORD(v12) = *v12,
          v11,
          v12 != 128))
    {
      int v13 = MultiwayViewController.localParticipantCornerToUse.getter();
      MultiwayViewController.setLocalParticipantState(_:animated:)(v13 | 0x40, 1);
    }
  }
}

void *MultiwayViewController.pauseVideoMessageRecording()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v9, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(v10);
  if (result != 1)
  {
    uint64_t v3 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    os_log_type_t v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0xF0);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
    char v5 = v3;
    LOBYTE(v4) = v4();

    if (VideoMessageController.State.rawValue.getter((char)v4) == 0x676E696D726177 && v6 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
      }
    }
    ConversationController.pauseRecordingVideoMessage()();
    LocalParticipantView.endCountdown()();
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
  }
  return result;
}

void *MultiwayViewController.startRecordingVideoMessage()()
{
  uint64_t v1 = v0;
  MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(1, 0, 0);
  MultiwayViewController.removeAllEffectsObjects()();
  MultiwayViewController.localVideoProvider.getter();
  uint64_t v2 = __src[3];
  uint64_t v3 = __src[4];
  __swift_project_boxed_opaque_existential_1(__src, __src[3]);
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 96))(0, v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__src);
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v4, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v27, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)getEnumTag for TapInteraction.EventType(__src);
  if (result != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 656);
    outlined init with take of CATransform3D?((uint64_t)v27, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v25);
    if ((v8(ObjectType, v6) & 1) != 0
      && (uint64_t v9 = (void *)MultiwayViewController.call.getter(),
          unsigned __int8 v10 = objc_msgSend(v9, sel_isSendingVideo),
          v9,
          (v10 & 1) == 0))
    {
      MultiwayViewController.showCameraAlert()();
    }
    else
    {
      BOOL v11 = MultiwayViewController.isPresentingEffectsBrowser.getter();
      uint64_t v12 = (void *)MEMORY[0x1E4FBC8C8];
      if (v11)
      {
        if (__src[9])
        {
          int v13 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)__src[9]) + 0xB0);
          id v14 = (id)__src[9];
          v13(0);
        }
        uint64_t v15 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
        swift_beginAccess();
        *uint64_t v15 = 0;
        MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
      }
      char v16 = *(void **)(*(void *)(v1
                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
      id v17 = *(uint64_t (**)(void))((*v12 & *v16) + 0xF0);
      id v18 = v16;
      LOBYTE(v17) = v17();

      if (VideoMessageController.State.rawValue.getter((char)v17) == 0x7964616572 && v19 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
          objc_msgSend((id)__src[7], sel_updateCountdownWith_, 5);
          uint64_t v22 = swift_allocObject();
          memcpy((void *)(v22 + 16), __dst, 0xD8uLL);
          uint64_t v23 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v24 = swift_allocObject();
          memcpy((void *)(v24 + 16), __dst, 0xD8uLL);
          *(void *)(v24 + 232) = v23;
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v27);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v27);
          swift_retain();
          ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)();
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v27);
          swift_release();
          swift_release();
          return (void *)swift_release();
        }
      }
      ConversationController.startRecordingVideoMessage()();
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v27);
  }
  return result;
}

Swift::Void __swiftcall MultiwayViewController.closeVideoMessageCallBack()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (v2)
  {
    objc_msgSend(v2, sel_unansweredCallUIDismissed);
    swift_unknownObjectRelease();
  }
  uint64_t v3 = (void (**)(uint64_t))(v0
                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    uint64_t v6 = OUTLINED_FUNCTION_4_18();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
  }
}

void __swiftcall MultiwayViewController.hostingController()(UIViewController_optional *__return_ptr retstr)
{
  id v2 = v1;
}

Swift::Void __swiftcall MultiwayViewController.pipDidRotate()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_21_1();
  uint64_t v6 = type metadata accessor for Participant(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  uint64_t v8 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v9 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_244_1(v9, (uint64_t)v19);
  outlined init with take of CATransform3D?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v20);
  if (!v10)
  {
    BOOL v11 = *(char **)(v8 + 96);
    uint64_t v12 = &v11[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates];
    OUTLINED_FUNCTION_1_21();
    int v13 = *v12;
    *uint64_t v12 = 0;
    OUTLINED_FUNCTION_2();
    uint64_t v14 = OUTLINED_FUNCTION_248();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v14, v15, v16);
    OUTLINED_FUNCTION_33_0(v2, 1, v6);
    if (v10)
    {
      id v17 = v11;
      outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined init with take of Participant(v2, v1);
      id v18 = v11;
      if (v13)
      {
        OUTLINED_FUNCTION_375();
        MostActiveParticipantViewController.focus(on:)();
        OUTLINED_FUNCTION_218_2();
        MostActiveParticipantViewController.update(participant:broadcastingState:)();
      }
      _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
    }
    MostActiveParticipantViewController.handleParticipantVideoRotationForPIP()();
  }
  OUTLINED_FUNCTION_15_0();
}

uint64_t MultiwayViewController.canShowReactionsView()()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationKit);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  uint64_t v5 = &selRef_contactStoreDidChange_;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v33[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315906;
    uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
    swift_beginAccess();
    type metadata accessor for TUConversationState(0);
    uint64_t v9 = String.init<A>(reflecting:)();
    v31[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v11 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    swift_beginAccess();
    outlined init with take of CATransform3D?(v11, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of CATransform3D?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v31) == 1)
    {
      unint64_t v12 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    else
    {
      uint64_t v14 = (unsigned char *)(*(void *)(v11 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      LOBYTE(v32) = *v14;
      uint64_t v13 = String.init<A>(reflecting:)();
      unint64_t v12 = v15;
    }
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 22) = 2080;
    uint64_t v16 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    swift_beginAccess();
    LOBYTE(v32) = *(unsigned char *)(v16 + 16) >> 7;
    uint64_t v17 = String.init<A>(reflecting:)();
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 32) = 1024;
    id v19 = objc_msgSend(self, sel_sharedInstance);
    id v20 = objc_msgSend(v19, sel_videoDeviceController);

    uint64_t v5 = &selRef_contactStoreDidChange_;
    LODWORD(v19) = objc_msgSend(v20, sel_currentInputSupportsReactionEffects);

    LODWORD(v32) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v3, v4, "canShowReactionsView - conversationState: %s, localParticipantState: %s, isVideoEnabled: %s, cameraSupportsReactions:%{BOOL}d", (uint8_t *)v6, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v7, -1, -1);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v21 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
  uint64_t v22 = (void *)(v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  swift_beginAccess();
  if (*v22 != 3) {
    return 0;
  }
  uint64_t v23 = v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  swift_beginAccess();
  if ((*(char *)(v23 + 16) & 0x80000000) == 0) {
    return 0;
  }
  id v24 = objc_msgSend(self, sel_sharedInstance);
  id v25 = objc_msgSend(v24, sel_videoDeviceController);

  LODWORD(v24) = [v25 v5[294]];
  if (!v24) {
    return 0;
  }
  uint64_t v26 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of CATransform3D?(v26, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v31) != 1
    && ((uint64_t v27 = (unsigned __int8 *)(*(void *)(v26 + 48)
                                 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState),
         swift_beginAccess(),
         unsigned int v28 = *v27,
         v28 < 0x40)
     || (v28 & 0xC0) == 0x40))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

BOOL MultiwayViewController.inCallControlsVisible.getter()
{
  BOOL result = 1;
  if ((MultiwayViewController.isModallyPresentingCallDetails.getter() & 1) == 0)
  {
    uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    uint64_t v2 = OUTLINED_FUNCTION_2();
    uint64_t v3 = OUTLINED_FUNCTION_45_18(v2, (uint64_t)v12);
    OUTLINED_FUNCTION_76_9(v3, v4, v5, v6, v7, v8);
    OUTLINED_FUNCTION_6_112(v13);
    if (v9) {
      return 0;
    }
    unint64_t v10 = (unsigned __int8 *)(*(void *)(v1 + 48)
                            + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    OUTLINED_FUNCTION_2();
    if (*v10 - 1 > 1) {
      return 0;
    }
  }
  return result;
}

uint64_t MultiwayViewController.isCameraMixedWithScreen.getter()
{
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = OUTLINED_FUNCTION_89_2();
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_2();
  uint64_t v5 = OUTLINED_FUNCTION_200_1();
  _s15ConversationKit11ParticipantVWOcTm_18(v5, v6);
  uint64_t v7 = OUTLINED_FUNCTION_43();
  _s15ConversationKit11ParticipantVWOcTm_18(v7, v8);
  OUTLINED_FUNCTION_24_2();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    unint64_t v10 = (const void *)(v0 + *(int *)(v9 + 48));
    outlined consume of Participant.CopresenceInfo?(*(void *)(v0 + *(int *)(v9 + 64)), *(void *)(v0 + *(int *)(v9 + 64) + 8));
    memcpy(v15, v10, sizeof(v15));
    type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v11();
    uint64_t v12 = v15[2];
    unsigned int v13 = LOWORD(v15[11]);
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v15);
    _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
    if (v12)
    {
      swift_bridgeObjectRelease();
      return (v13 >> 8) & 1;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant.State);
    _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
  }
  return 0;
}

void MultiwayViewController.captionsViewController(_:didRequestToBeMinimized:)(uint64_t a1, char a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v5 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_233_0(v5, (uint64_t)v10);
  outlined init with take of CATransform3D?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v11);
  if (v6
    || (uint64_t v7 = (unsigned char *)(*(void *)(v4 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState),
        OUTLINED_FUNCTION_2(),
        *v7))
  {
    if (a2) {
      unsigned __int8 v8 = 1;
    }
    else {
      unsigned __int8 v8 = 2;
    }
    unsigned __int8 v9 = v8;
    MultiwayViewController.updateCaptionsLayoutState(_:)(&v9);
  }
}

Swift::Void __swiftcall MultiwayViewController.dismissControls()()
{
  unsigned __int8 v0 = 0;
  MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v0, 252, 1);
}

uint64_t MultiwayViewController.shouldShowTranscriptDrawer.getter()
{
  if (static Platform.current.getter() != 3) {
    goto LABEL_12;
  }
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_197_1(v2, (uint64_t)v14);
  outlined init with take of CATransform3D?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v15);
  if (v10) {
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = (unsigned __int8 *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  uint64_t v5 = OUTLINED_FUNCTION_2();
  int v6 = *v4;
  OUTLINED_FUNCTION_197_1(v5, (uint64_t)v12);
  outlined init with take of CATransform3D?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v13);
  if (!v10)
  {
    uint64_t v7 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    OUTLINED_FUNCTION_2();
    int v8 = *v7;
    if (v8 < 0)
    {
      BOOL v10 = v8 != -128 || v6 == 0;
      if (!v10) {
        goto LABEL_6;
      }
LABEL_12:
      char v9 = 0;
      return v9 & 1;
    }
  }
  if (!v6) {
    goto LABEL_12;
  }
LABEL_6:
  char v9 = ConversationController.isOneToOneModeEnabled.getter();
  return v9 & 1;
}

double MultiwayViewController.captionsTranscriptWidth.getter()
{
  if (one-time initialization token for transcriptSidebarWidth != -1) {
    swift_once();
  }
  return *(double *)&static Layout.Captions.transcriptSidebarWidth;
}

void MultiwayViewController.participantsViewController(_:didTapToggleFocus:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_33_0(v0, 1, v4);
  if (v6)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Participant?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v7 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v7 + 16) = xmmword_1C3769620;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v9 = OUTLINED_FUNCTION_8(v8);
    MEMORY[0x1F4188790](v9);
    OUTLINED_FUNCTION_21_1();
    uint64_t v10 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_124();
    v11();
    OUTLINED_FUNCTION_31_13();
    __swift_storeEnumTagSinglePayload(v12, v13, v14, v10);
    uint64_t v15 = specialized >> prefix<A>(_:)(v4);
    uint64_t v17 = v16;
    outlined destroy of SystemUpdateNotice?(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v7 + 32) = v15;
    *(void *)(v7 + 40) = v17;
    OUTLINED_FUNCTION_13_51();
    swift_bridgeObjectRelease();
  }
  else
  {
    outlined init with take of Participant(v0, (uint64_t)v1);
    MultiwayViewController.toggleFocusedParticipant(_:)(v1);
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v1, (void (*)(void))type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_15_0();
}

void MultiwayViewController.participantsViewController(_:didTapShutter:)()
{
}

void MultiwayViewController.participantsViewController(_:didTapRing:)()
{
}

uint64_t MultiwayViewController.participantsViewController(_:didTapKickMember:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_62();
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_33_0(v1, 1, v4);
  if (v6) {
    return outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
  }
  outlined init with take of Participant(v1, v0);
  ConversationController.canKick(_:)();
  if (v8) {
    MultiwayViewController.showKickParticipantAlert(toKick:)();
  }
  return _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
}

void MultiwayViewController.showKickParticipantAlert(toKick:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v43 = v0;
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Participant(0);
  uint64_t v4 = OUTLINED_FUNCTION_1(v3);
  uint64_t v44 = v5;
  uint64_t v42 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v41 = (uint64_t)&v48._object - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = self;
  id v9 = objc_msgSend(v8, sel_conversationKit);
  OUTLINED_FUNCTION_13_22();
  OUTLINED_FUNCTION_0_23(v10, 0x80000001C37A25A0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
  Participant.contactDetails.getter();
  uint64_t v12 = v45;
  uint64_t v13 = v46;
  uint64_t v14 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v14;
  uint64_t v15 = String.init(format:_:)();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  id v18 = objc_msgSend(v8, (SEL)&selRef_viewIfLoaded + 1, v42);
  v48._object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_47();
  v19._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v20.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v20.value._object = (void *)0xEF74694B6E6F6974;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v48._uint64_t countAndFlagsBits = 0;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v48);

  id v23 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v22._countAndFlagsBits, (uint64_t)v22._object, v15, v17, 1);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIAlertAction);
  id v24 = objc_msgSend(v8, (SEL)&selRef_viewIfLoaded + 1);
  v48._object = (void *)0xE000000000000000;
  uint64_t v25 = OUTLINED_FUNCTION_11_1(0xD000000000000032, 0x80000001C37A25F0);
  uint64_t v27 = v26;

  uint64_t v28 = OUTLINED_FUNCTION_20();
  uint64_t v29 = v43;
  swift_unknownObjectWeakInit();
  uint64_t v30 = v2;
  uint64_t v31 = v41;
  _s15ConversationKit11ParticipantVWOcTm_18(v30, v41);
  unint64_t v32 = (*(unsigned __int8 *)(v44 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v28;
  outlined init with take of Participant(v31, v33 + v32);
  id v34 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v25, v27, 0, (uint64_t)partial apply for closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:), v33);
  id v35 = objc_msgSend(v8, sel_conversationKit);
  OUTLINED_FUNCTION_13_22();
  uint64_t v36 = OUTLINED_FUNCTION_11_1(0x4C45434E4143, 0xE600000000000000);
  uint64_t v38 = v37;

  uint64_t v39 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  id v40 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v36, v38, 0, (uint64_t)partial apply for closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:), v39);
  objc_msgSend(v23, sel_addAction_, v34);
  objc_msgSend(v23, sel_addAction_, v40);
  objc_msgSend(v29, sel_presentViewController_animated_completion_, v23, 1, 0);

  OUTLINED_FUNCTION_28();
}

uint64_t MultiwayViewController.participantsViewController(_:willDisplay:)()
{
  return MultiwayViewController.needsUpdatePresentationContexts.setter(1);
}

uint64_t MultiwayViewController.videoVisibility(for:)(uint64_t a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  swift_beginAccess();
  outlined init with take of CATransform3D?((uint64_t)v3, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v18) == 1
    || (uint64_t v4 = v3[1],
        outlined init with take of CATransform3D?((uint64_t)v3, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), outlined init with take of CATransform3D?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), getEnumTag for TapInteraction.EventType(v16) == 1))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    return *(void *)(*(void *)v5 + 16);
  }
  else
  {
    char v8 = *v3;
    id v9 = v4;
    id v10 = v8;
    ParticipantGridViewController.participantIdentifiers.getter();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v11);
    v14[2] = a1;
    char v13 = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)v14, v12);
    swift_bridgeObjectRelease();
    if (v13)
    {

      return 0;
    }
    else
    {
      uint64_t v6 = ParticipantListViewController.visibilityIndex(for:)(a1);
    }
  }
  return v6;
}

uint64_t MultiwayViewController.prominenceIndex(for:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Participant(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v37 = (uint64_t)v33 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v33 - v13;
  uint64_t active = MultiwayViewController.mostActiveParticipants.getter();
  uint64_t v16 = *(void *)(active + 16);
  if (v16)
  {
    uint64_t v34 = v1;
    uint64_t v35 = a1;
    uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
    v33[1] = active;
    uint64_t v36 = (v17 + 32) & ~v17;
    uint64_t v18 = active + v36;
    uint64_t v19 = *(void *)(v7 + 72);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v21 = (uint64_t)v10;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_18(v18, (uint64_t)v14);
      if (*(void *)&v14[*(int *)(v6 + 28)])
      {
        _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v14, (uint64_t)v5);
        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v22 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v5, v22, 1, v6);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v23 = v37;
        outlined init with take of Participant((uint64_t)v5, v37);
        outlined init with take of Participant(v23, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v20 + 16) + 1, 1, v20);
        }
        unint64_t v25 = *(void *)(v20 + 16);
        unint64_t v24 = *(void *)(v20 + 24);
        if (v25 >= v24 >> 1) {
          uint64_t v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1, v20);
        }
        *(void *)(v20 + 16) = v25 + 1;
        uint64_t v26 = v20 + v36 + v25 * v19;
        id v10 = (char *)v21;
        outlined init with take of Participant(v21, v26);
      }
      v18 += v19;
      --v16;
    }
    while (v16);
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v1 = v34;
    a1 = v35;
  }
  else
  {
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v27);
  v33[-2] = a1;
  uint64_t v28 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)&v33[-4], v20);
  char v30 = v29;
  swift_bridgeObjectRelease();
  if (v30)
  {
    uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
        + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    return *(void *)(*(void *)v31 + 16) - 1;
  }
  return v28;
}

void MultiwayViewController.spatialPosition(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  uint64_t v5 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v5, (uint64_t)v26);
  outlined init with take of CATransform3D?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t Enum = getEnumTag for TapInteraction.EventType(v27);
  if (Enum == 1
    || (uint64_t v7 = (void *)*((void *)v4 + 1),
        OUTLINED_FUNCTION_31_39(Enum, (uint64_t)&v24),
        outlined init with take of CATransform3D?((uint64_t)&v24, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), OUTLINED_FUNCTION_6_112(v25), v8))
  {
LABEL_13:
    OUTLINED_FUNCTION_170_3();
    return;
  }
  uint64_t v9 = *(void **)v4;
  id v10 = v7;
  id v11 = v9;
  ParticipantGridViewController.participantIdentifiers.getter();
  uint64_t v12 = OUTLINED_FUNCTION_89();
  uint64_t v13 = type metadata accessor for Participant(v12);
  MEMORY[0x1F4188790](v13);
  void v23[2] = v14;
  char v15 = specialized Sequence.contains(where:)((uint64_t)_sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0, (uint64_t)v23, (uint64_t)v10);
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v2, sel_view);
  if (v15)
  {
    if (v16)
    {
      ParticipantGridViewController.spatialPosition(for:relativeTo:)();
LABEL_10:
      OUTLINED_FUNCTION_126();
      uint64_t v17 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations];
      OUTLINED_FUNCTION_2();
      if (!*(void *)v17)
      {
        OUTLINED_FUNCTION_2();
        double v18 = OUTLINED_FUNCTION_41();
        MultiwayViewController.rotate(portraitRect:for:)(v19, v18, v20, v21, v22);
        OUTLINED_FUNCTION_38();
      }

      goto LABEL_13;
    }
    __break(1u);
  }
  else if (v16)
  {
    ParticipantListViewController.spatialPosition(for:relativeTo:)(a1, v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t MultiwayViewController.presentationContext(for:withVideoVisibility:withProminence:withSpatialPosition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t result = type metadata accessor for Participant(0);
  uint64_t v19 = a1 + *(int *)(result + 28);
  if (!*(void *)v19 || (*(unsigned char *)(v19 + 16) & 1) != 0)
  {
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    char v21 = 2;
  }
  else
  {
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t result = MultiwayViewController.videoQuality(for:)((void (*)(int64_t, char *, uint64_t))(a1 + *(int *)(result + 20)));
    char v21 = a3 & 1;
    *(void *)a5 = v20;
    *(void *)(a5 + 8) = result;
    *(void *)(a5 + 16) = a2;
    *(void *)(a5 + 24) = a4;
    *(double *)(a5 + 32) = a6;
    *(double *)(a5 + 40) = a7;
    *(double *)(a5 + 48) = a8;
    *(double *)(a5 + 56) = a9;
  }
  *(unsigned char *)(a5 + 64) = v21;
  return result;
}

uint64_t MultiwayViewController.videoQuality(for:)(void (*a1)(int64_t, char *, uint64_t))
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v7, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v67, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  int Enum = getEnumTag for TapInteraction.EventType(v68);
  uint64_t result = 0;
  if (Enum != 1)
  {
    id v10 = *(id *)(v7 + 8);
    ParticipantGridViewController.participantIdentifiers.getter();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v11);
    v57[-2] = a1;
    char v13 = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)&v57[-4], v12);
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {

      return 0;
    }
    char v62 = v6;
    ParticipantGridViewController.participantIdentifiers.getter();
    unsigned __int8 v66 = *(void **)(v14 + 16);
    swift_bridgeObjectRelease();
    uint64_t v65 = a1;
    uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults);
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    double v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 272);
    uint64_t v61 = ObjectType;
    uint64_t v64 = (void *)v18(ObjectType, v16);
    uint64_t v19 = type metadata accessor for UUID();
    char v63 = v57;
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void *)(v20 + 64);
    MEMORY[0x1F4188790](v19);
    double v22 = *(void **)(v20 + 16);
    ((void (*)(char *, void, uint64_t))v22)((char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v65, v19);
    if ((uint64_t)v64 >= (uint64_t)v66)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))((char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v19);

      return 2;
    }
    uint64_t v65 = (void (*)(int64_t, char *, uint64_t))v22;
    v57[1] = v21;
    v57[2] = v15;
    uint64_t v60 = (char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = v20;
    uint64_t v58 = v16;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
    MEMORY[0x1F4188790](v24 - 8);
    uint64_t v26 = (char *)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v59 = v10;
    uint64_t v27 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    swift_beginAccess();
    uint64_t v28 = (uint64_t)v62;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v27, (uint64_t)v62, &demangling cache variable for type metadata for Participant?);
    uint64_t v29 = type metadata accessor for Participant(0);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v28, 1, v29);
    unsigned __int8 v66 = v57;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of SystemUpdateNotice?(v28, &demangling cache variable for type metadata for Participant?);
      uint64_t v31 = 1;
      uint64_t v32 = v19;
      uint64_t v33 = v23;
      uint64_t v34 = v60;
      uint64_t v35 = v65;
    }
    else
    {
      uint64_t v32 = v19;
      uint64_t v35 = v65;
      v65((int64_t)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)(v28 + *(int *)(v29 + 20)), v19);
      _s15ConversationKit11ParticipantVWOhTm_12(v28, (void (*)(void))type metadata accessor for Participant);
      uint64_t v31 = 0;
      uint64_t v33 = v23;
      uint64_t v34 = v60;
    }
    uint64_t v36 = __swift_storeEnumTagSinglePayload((uint64_t)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v31, 1, v32);
    uint64_t v65 = (void (*)(int64_t, char *, uint64_t))v57;
    MEMORY[0x1F4188790](v36);
    char v62 = (char *)((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = (char *)((char *)v57 - v62);
    v35((char *)v57 - v62, v34, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v32);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v64 = v57;
    uint64_t v39 = MEMORY[0x1F4188790](v38 - 8);
    uint64_t v41 = (char *)v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v42 = (uint64_t)&v41[*(int *)(v39 + 56)];
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v37, v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v43 = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v32);
    if (v43 == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
      if (__swift_getEnumTagSinglePayload(v42, 1, v32) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_16:

        return 2;
      }
    }
    else
    {
      v57[0] = v57;
      MEMORY[0x1F4188790](v43);
      uint64_t v44 = (char *)((char *)v57 - v62);
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v41, (char *)v57 - v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v45 = __swift_getEnumTagSinglePayload(v42, 1, v32);
      if (v45 != 1)
      {
        char v62 = (char *)v57;
        MEMORY[0x1F4188790](v45);
        Swift::String v48 = (char *)v57 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v48, v42, v32);
        _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
        int v50 = *(void (**)(char *, uint64_t))(v33 + 8);
        v50(v48, v32);
        outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v50(v60, v32);
        v50(v44, v32);
        outlined destroy of SystemUpdateNotice?((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if (v49) {
          goto LABEL_16;
        }
        goto LABEL_19;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v46 = *(void (**)(char *, uint64_t))(v33 + 8);
      v46(v60, v32);
      v46(v44, v32);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_19:
    id v51 = v59;
    ParticipantGridViewController.participantIdentifiers.getter();
    uint64_t v53 = *(void *)(v52 + 16);
    swift_bridgeObjectRelease();
    uint64_t v54 = v58;
    uint64_t v55 = v61;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v58 + 280))(v61, v58) >= v53)
    {

      return 1;
    }
    else
    {
      char v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 248))(v55, v54);

      return v56 & 1;
    }
  }
  return result;
}

uint64_t MultiwayViewController.VideoVisibility.isInCanvas.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

ConversationKit::MultiwayViewController::VideoVisibility __swiftcall MultiwayViewController.VideoVisibility.init(visibility:isInCanvas:)(Swift::Int visibility, Swift::Bool isInCanvas)
{
  Swift::Bool v2 = isInCanvas;
  result.visibilitCGFloat y = visibility;
  result.isInCanvas = v2;
  return result;
}

void MultiwayViewController.inCallControlsViewController(_:didTap:from:)()
{
  OUTLINED_FUNCTION_31();
  Swift::Bool v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_12_1();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v11 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_249_1(v11, (uint64_t)v69);
  outlined init with take of CATransform3D?((uint64_t)v69, (uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v12 = OUTLINED_FUNCTION_6_112(v70);
  if (v14)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v15 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
      v68[0] = v6;
      type metadata accessor for CNKCommand(0);
      uint64_t v16 = String.init<A>(reflecting:)();
      uint64_t v18 = v17;
      *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v15 + 32) = v16;
      *(void *)(v15 + 40) = v18;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
LABEL_69:
    swift_once();
    goto LABEL_5;
  }
  switch(v6)
  {
    case 0:
    case 1:
    case 11:
    case 12:
    case 15:
    case 18:
      break;
    case 2:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      MultiwayViewController.removeAllEffectsObjects()();
      OUTLINED_FUNCTION_14_2();
      uint64_t v20 = *(void (**)(void))(v19 + 376);
      id v22 = v21;
      v20();

      ConversationController.leaveConversation(reason:)();
      goto LABEL_66;
    case 3:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      ConversationController.joinConversation()();
      goto LABEL_66;
    case 4:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      ConversationController.swapLocalParticipantCamera()();
      char v30 = (void *)(v71 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      OUTLINED_FUNCTION_2();
      switch(*v30)
      {
        case 0:
        case 1:
        case 2:
        case 3:
          goto LABEL_66;
        case 4:
          objc_msgSend(v2, sel_setControlsState_animated_, 1, 1);
          goto LABEL_66;
        case 5:
          objc_msgSend(v2, sel_setControlsState_animated_, 2, 1);
          goto LABEL_66;
        case 6:
          objc_msgSend(v2, sel_setControlsState_animated_, 3, 1);
          goto LABEL_66;
        default:
          goto LABEL_71;
      }
    case 5:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      MultiwayViewController.toggleAudioMute()();
      goto LABEL_66;
    case 6:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      MultiwayViewController.toggleVideoMute(shouldPauseIfStopped:)(0);
      goto LABEL_66;
    case 7:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      MultiwayViewController.toggleCinematicFraming()();
      goto LABEL_66;
    case 8:
      uint64_t v23 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
      OUTLINED_FUNCTION_2();
      uint64_t v24 = MEMORY[0x1C8776240](v23);
      if (!v24) {
        break;
      }
      uint64_t v26 = (void *)v24;
      OUTLINED_FUNCTION_42_26(v24, v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      objc_msgSend(v26, sel_viewControllerDidRequestAddParticipants_, v2);
      swift_unknownObjectRelease();
      goto LABEL_66;
    case 9:
      uint64_t v27 = (void *)(v71 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      OUTLINED_FUNCTION_2();
      unint64_t v28 = *v27 - 2;
      if (v28 > 4) {
        uint64_t v29 = 4;
      }
      else {
        uint64_t v29 = qword_1C378A348[v28];
      }
      objc_msgSend(v2, sel_setControlsState_animated_, v29, 1);
      break;
    case 10:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      ConversationController.openMessagesConversation(completion:)();
      goto LABEL_66;
    case 13:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      MultiwayViewController.handleToggleLayoutAction()();
      goto LABEL_66;
    case 14:
      if (v4)
      {
        outlined init with take of CATransform3D?((uint64_t)v69, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
        id v51 = v4;
      }
      else
      {
        outlined init with take of CATransform3D?((uint64_t)v69, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
        id v59 = objc_msgSend(v2, sel_view);
        if (!v59)
        {
          __break(1u);
LABEL_71:
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          JUMPOUT(0x1C35F5278);
        }
        id v51 = v59;
        uint64_t v4 = 0;
      }
      id v60 = v4;
      MultiwayViewController.handleShareLinkAction(_:)(v51);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v69);

      break;
    case 16:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_66;
    case 17:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      ConversationController.cancelJoinCountdown()();
      goto LABEL_66;
    case 19:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      MultiwayViewController.handleUserDidToggleCaptions()();
      goto LABEL_66;
    case 20:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      __swift_project_value_buffer(v31, (uint64_t)static Logger.conversationKit);
      uint64_t v32 = v2;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 67109120;
        uint64_t v36 = (void *)MultiwayViewController.call.getter();
        TUCall.isBlocked()();

        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1C2F90000, v33, v34, "call is blocked() : %{BOOL}d", v35, 8u);
        OUTLINED_FUNCTION_3();
      }
      else
      {

        uint64_t v33 = v32;
      }

      uint64_t v52 = (void *)MultiwayViewController.call.getter();
      Swift::Bool v53 = TUCall.isBlocked()();

      if (v53)
      {
        uint64_t v44 = (void *)MultiwayViewController.call.getter();
        TUCall.unblock()();
LABEL_64:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v69);

        break;
      }
      uint64_t v54 = (void *)MultiwayViewController.call.getter();
      if (one-time initialization token for faceTime != -1) {
        swift_once();
      }
      id v55 = v54;
      TUCall.isGroupFaceTimeWithAllUnknownContacts.getter();
      if (v56)
      {
        uint64_t v57 = OUTLINED_FUNCTION_9_55();
        id v58 = (id)specialized SpamAlertBuilder.buildBlockAllAlert(for:with:didDismiss:)(v57);
      }
      else if (TUCall.isGroupFaceTimeWithSomeUnknownContacts.getter())
      {
        uint64_t v61 = OUTLINED_FUNCTION_9_55();
        id v58 = (id)specialized SpamAlertBuilder.buildBlockUnknownAlert(for:with:didDismiss:)(v61);
      }
      else
      {
        char v62 = (void *)OUTLINED_FUNCTION_9_55();
        id v58 = specialized SpamAlertBuilder.buildReportAndBlock(for:with:didDismiss:)(v62, v63, v64, v65);
      }
      unsigned __int8 v66 = v58;

      id v67 = [v32 presentedViewController];
      if (v67)
      {
        uint64_t v44 = v67;
        objc_msgSend(v67, sel_presentViewController_animated_completion_, v66, 1, 0);

        goto LABEL_64;
      }

LABEL_66:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v69);
      break;
    case 21:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      uint64_t v38 = (void *)OUTLINED_FUNCTION_30(v37, (uint64_t)static Logger.conversationKit);
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_105(v39))
      {
        uint64_t v40 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_180(v40);
        OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v41, v42, "report single participant");
        OUTLINED_FUNCTION_3();
      }

      uint64_t v43 = (void *)MultiwayViewController.call.getter();
      if (one-time initialization token for faceTime != -1) {
        swift_once();
      }
      uint64_t v44 = specialized SpamAlertBuilder.buildReportAndBlock(for:with:didDismiss:)(v43, static ReportSpamManager.faceTime, 0, 0);

      id v45 = objc_msgSend(v2, sel_presentedViewController);
      if (!v45) {
        goto LABEL_39;
      }
      uint64_t v46 = v45;
      objc_msgSend(v45, sel_presentViewController_animated_completion_, v44, 1, 0);

      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v69);
      break;
    default:
      OUTLINED_FUNCTION_42_26(v12, v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
      if (one-time initialization token for default != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      uint64_t v44 = (void *)OUTLINED_FUNCTION_30(v47, (uint64_t)static Log.default);
      os_log_type_t v48 = static os_log_type_t.fault.getter();
      if (!OUTLINED_FUNCTION_2_12(v48)) {
        goto LABEL_64;
      }
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v49, v50, "Unknown enum case");
      OUTLINED_FUNCTION_3();
LABEL_39:

      goto LABEL_66;
  }
LABEL_67:
  OUTLINED_FUNCTION_28();
}

void MultiwayViewController.inCallControlsViewController(_:didAdd:)(int a1, CNContact a2)
{
}

void MultiwayViewController.didCreateCollectionViewForInCallControlsViewController(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v5 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_233_0(v5, (uint64_t)v13);
  outlined init with take of CATransform3D?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v14);
  if (!v6)
  {
    uint64_t v7 = *(void **)(v4 + 16);
    type metadata accessor for InCallControlsViewController();
    id v8 = v7;
    id v9 = a1;
    OUTLINED_FUNCTION_43();
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
      OUTLINED_FUNCTION_2();
      __int16 v12 = 513;
      uint64_t v11 = swift_bridgeObjectRetain();
      InCallControlsViewController.update(with:updateReason:)(v11, &v12);
      swift_bridgeObjectRelease();
    }
  }
}

void closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:)(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v3 = a3;
  uint64_t v4 = *(void *)(a1 + 56);
  LocalParticipantView.isInRoster.setter();
  BOOL v5 = v3 == 128;
  char v6 = (BOOL *)(*(void *)(v4 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView)
              + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  swift_beginAccess();
  *char v6 = v5;
  ParticipantView.isExpanded.didset();
  LocalParticipantView.updateControlsAlpha(animated:)(0);
}

void closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](v6);
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (id *)(v7 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
    swift_beginAccess();
    char v10 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)*v9) + 0x180);
    id v11 = *v9;
    char v12 = v10();

    if ((v12 & 1) == 0)
    {
      uint64_t v13 = (uint64_t)v8 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of CATransform3D?(v13, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of CATransform3D?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v16) != 1)
      {
        char v14 = (unsigned __int8 *)(*(void *)(v13 + 48)
                                + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if (static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(a3, *v14))
        {
          MultiwayViewController.updateZoomControls(for:)(a3);
          if (a4) {
            MultiwayViewController.testing_localPreviewDidFinishMinimize()();
          }
        }
      }
    }
  }
}

UIMenu_optional __swiftcall MultiwayViewController.audioRouteMenu()()
{
  uint64_t v0 = (objc_class *)MultiwayViewController.audioRouteMenu()((SEL *)&selRef_audioRouteMenu);
  result.value.super.super.Class isa = v0;
  result.is_nil = v1;
  return result;
}

id MultiwayViewController.audioRouteGlyph(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  if (!v4) {
    return 0;
  }
  id v5 = objc_msgSend(v4, sel_audioRouteGlyphFor_, a1);
  swift_unknownObjectRelease();
  return v5;
}

id MultiwayViewController.audioRouteGlyph(for:buttonStyle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = (void *)MEMORY[0x1C8776240](v5);
  if (!v6) {
    return 0;
  }
  id v7 = objc_msgSend(v6, sel_audioRouteGlyphFor_buttonStyle_, a1, a2);
  swift_unknownObjectRelease();
  return v7;
}

id MultiwayViewController.audioRouteGlyphForDevice.getter()
{
  return MultiwayViewController.audioRouteMenu()((SEL *)&selRef_audioRouteGlyphForDevice);
}

id MultiwayViewController.audioRouteMenu()(SEL *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  if (!v4) {
    return 0;
  }
  id v5 = [v4 *a1];
  swift_unknownObjectRelease();
  return v5;
}

uint64_t MultiwayViewController.isPresentingCallDetails.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator)) {
    return 0;
  }
  OUTLINED_FUNCTION_43_24();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 120);
  id v4 = v3;
  LOBYTE(v2) = v2();

  return v2 & 1;
}

BOOL MultiwayViewController.canDismissControls.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_197_1(v0, (uint64_t)v5);
  OUTLINED_FUNCTION_225_0((uint64_t)v5);
  OUTLINED_FUNCTION_6_112(v6);
  if (v2)
  {
    return 0;
  }
  else
  {
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_167_0();
    if (v2)
    {
      outlined init with take of CATransform3D?((uint64_t)v5, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v4);
      BOOL v1 = MultiwayViewController.inCallConversationBannerHidable()();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v5);
    }
    else
    {
      return 1;
    }
  }
  return v1;
}

uint64_t MultiwayViewController.inCallBannerDisplayName.getter()
{
  return ConversationController.conversationDisplayName.getter();
}

uint64_t MultiwayViewController.isScreenSharingVisible.getter()
{
  BOOL v1 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  OUTLINED_FUNCTION_2();
  if (v1[1] == 0.0 && v1[2] == 0.0 || (OUTLINED_FUNCTION_2(), OUTLINED_FUNCTION_167_0(), v2))
  {
    id v3 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen];
    OUTLINED_FUNCTION_2();
    uint64_t v4 = *v3;
  }
  else
  {
    uint64_t v4 = 1;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  os_log_type_t v6 = __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
  id v7 = v0;
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v9))
  {
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109888;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 14) = 1024;
    OUTLINED_FUNCTION_2();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 20) = 1024;
    OUTLINED_FUNCTION_2();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1C2F90000, v8, v6, "isScreenSharingVisible: %{BOOL}d, isMediaPipped: %{BOOL}d, isPipStashed:%{BOOL}d, isScreenSharingFullScreen:%{BOOL}d", (uint8_t *)v10, 0x1Au);
    OUTLINED_FUNCTION_3();
  }
  else
  {

    id v8 = v7;
  }

  return v4;
}

Swift::Void __swiftcall MultiwayViewController.didAcceptCall()()
{
}

void MultiwayViewController.updateState(for:preferredControlsSize:presentingMenu:)()
{
  OUTLINED_FUNCTION_35_14();
  char v4 = v3;
  OUTLINED_FUNCTION_19_0();
  os_log_type_t v6 = v5;
  swift_getObjectType();
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v7, (uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v48, (uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v49);
  if (v15) {
    goto LABEL_25;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  id v8 = (void *)v49[3];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v48);
  id v9 = v8;
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v11 = v50;
  char v12 = (unsigned char *)(v50 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  OUTLINED_FUNCTION_2();
  if (v4) {
    goto LABEL_33;
  }
  int v13 = *v12;
  uint64_t v14 = v11 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
  OUTLINED_FUNCTION_1_21();
  if ((*(unsigned char *)(v14 + 16) & 1) == 0 && *(double *)v14 == v2)
  {
    BOOL v15 = *(double *)(v14 + 8) == v1 && v13 == 1;
    if (v15) {
      goto LABEL_24;
    }
  }
  char v41 = *(unsigned char *)(v14 + 16);
  *(double *)uint64_t v14 = v2;
  *(double *)(v14 + 8) = v1;
  *(unsigned char *)(v14 + 16) = 0;
  MultiwayViewConstraintsController.bannerControlsSize.didset();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = OUTLINED_FUNCTION_30(v16, (uint64_t)static Logger.conversationControls);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v40 = v12;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v43 = v39;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v20 = _typeName(_:qualified:)();
    uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    OUTLINED_FUNCTION_112();
    uint64_t v22 = CGSize.debugDescription.getter();
    uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v17, v18, "[%{public}s] set preffered contentSize of banner to %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    char v12 = v40;
    OUTLINED_FUNCTION_3();
  }

  uint64_t v24 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType];
  OUTLINED_FUNCTION_2();
  outlined init with copy of ConversationControlsType(v24, (uint64_t)&v43);
  if (v46 == 6
    && (int8x16_t v25 = vorrq_s8(v44, v45),
        !(*(void *)&vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)) | v43)))
  {
    outlined destroy of ConversationControlsType((uint64_t)&v43);
    uint64_t v29 = &v6[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController];
    OUTLINED_FUNCTION_2();
    if (*(void *)v29)
    {
      OUTLINED_FUNCTION_43_24();
      uint64_t v31 = *(void (**)(void))(v30 + 832);
      id v33 = v32;
      v31();
      uint64_t v35 = v34;

      if (static Platform.current.getter())
      {
        MultiwayViewConstraintsController.configure(rosterCellWidth:)(v35, 0);
        uint64_t v36 = ParticipantListViewController.collectionView.getter();
        if (v36)
        {
          uint64_t v37 = v36;
          id v38 = objc_msgSend(v36, sel_collectionViewLayout);

          objc_msgSend(v38, sel_invalidateLayout);
        }
      }
    }
  }
  else
  {
    outlined destroy of ConversationControlsType((uint64_t)&v43);
  }
  if ((v41 & 1) == 0)
  {
LABEL_33:
    if (!*v12)
    {
LABEL_24:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v48);
LABEL_25:
      OUTLINED_FUNCTION_33_2();
      return;
    }
  }
  id v26 = objc_msgSend(v6, sel_view, v39);
  if (v26)
  {
    uint64_t v27 = v26;
    objc_msgSend(v26, sel_layoutIfNeeded);

    if (v4) {
      unsigned __int8 v28 = 2;
    }
    else {
      unsigned __int8 v28 = 1;
    }
    unsigned __int8 v42 = v28;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v42, 252, 1);
    goto LABEL_24;
  }
  __break(1u);
}

void MultiwayViewController.updateInCallConversationControls(type:showControlsIfHidden:forceUpdate:)()
{
  OUTLINED_FUNCTION_31();
  char v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_60();
  uint64_t v8 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v8, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v33, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v34);
  if (v9) {
    goto LABEL_36;
  }
  char v10 = (unsigned __int8 *)(v34[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  OUTLINED_FUNCTION_2();
  int v11 = *v10;
  outlined init with copy of ConversationControlsType(v6, (uint64_t)&v28);
  if (v31)
  {
    outlined init with take of CATransform3D?((uint64_t)v33, (uint64_t)&v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)&v24);
    outlined destroy of ConversationControlsType((uint64_t)&v28);
  }
  else
  {
    outlined init with take of Notice(&v28, (uint64_t)v32);
    outlined init with take of Notice(v32, (uint64_t)&v23);
    outlined init with take of CATransform3D?((uint64_t)v33, (uint64_t)&v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)&v24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    if (swift_dynamicCast())
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);
      _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for ReactionNotice);
      goto LABEL_36;
    }
  }
  outlined init with copy of ConversationControlsType(v6, (uint64_t)&v24);
  if (!v27)
  {
    outlined init with take of Notice((long long *)&v24, (uint64_t)&v28);
    uint64_t v20 = v29;
    uint64_t v21 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v21 + 64))(&v24, v20, v21);
    if (v24 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
        goto LABEL_8;
      }
    }
    if (v11 == 1)
    {
      LOBYTE(v24) = 0;
      OUTLINED_FUNCTION_213_0();
    }
    goto LABEL_24;
  }
  outlined destroy of ConversationControlsType((uint64_t)&v24);
LABEL_8:
  ConversationController.lookupActiveConversation()();
  if (v26.i64[0])
  {
    outlined init with take of Notice((long long *)&v24, (uint64_t)&v28);
    uint64_t v12 = v29;
    uint64_t v13 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    if (Conversation.isContinuitySession.getter(v12, v13))
    {
      outlined init with copy of ConversationControlsType(v6, (uint64_t)&v24);
      if (v27 == 2)
      {
        outlined destroy of ConversationControlsType((uint64_t)&v24);
      }
      else if (v27 != 6 {
             || v24 != 5
      }
             || (int8x16_t v14 = vorrq_s8(v25, v26),
                 *(void *)&vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL))))
      {
        outlined destroy of ConversationControlsType((uint64_t)&v24);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        uint64_t v16 = (void *)OUTLINED_FUNCTION_30(v15, (uint64_t)static Logger.conversationKit);
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (!OUTLINED_FUNCTION_2_12(v17))
        {
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);

          goto LABEL_25;
        }
        *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
        OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v18, v19, "Skipping update for non-laguna banner while presentationContext mode is continuitySession");
        OUTLINED_FUNCTION_3();

LABEL_24:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);
LABEL_25:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
        goto LABEL_36;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
  }
  if ((InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)(v6, v2 & 1) & 1) != 0
    && (v4 & 1) != 0
    && !v11)
  {
    LOBYTE(v24) = 1;
    OUTLINED_FUNCTION_213_0();
  }
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);
LABEL_36:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall MultiwayViewController.presentCallDetails()()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator))
  {
    OUTLINED_FUNCTION_43_24();
    char v2 = *(void (**)(unint64_t))(v1 + 176);
    id v5 = v3;
    unint64_t v4 = OUTLINED_FUNCTION_226();
    v2(v4);
  }
}

void MultiwayViewController.presentShareCardViewController(_:)()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v2, (uint64_t)v7);
  OUTLINED_FUNCTION_225_0((uint64_t)v7);
  OUTLINED_FUNCTION_6_112(v8);
  if (!v3)
  {
    unint64_t v4 = (id *)(*(void *)(v1 + 24)
              + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
    OUTLINED_FUNCTION_2();
    if (*v4)
    {
      id v5 = *v4;
      uint64_t v6 = (void *)OUTLINED_FUNCTION_8_11();
      ConversationHUDViewController.presentShareCardViewController(_:)(v6);
    }
  }
}

void closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C2F90000, v4, v5, "MultiwayViewController: did tap on kick from the kick participant alert", v6, 2u);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }

  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](v2);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = *(id *)(v7 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.kick(_:)();
  }
}

void closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C2F90000, v4, v5, "MultiwayViewController: did tap on cancel from the kick participant alert", v6, 2u);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }

  swift_beginAccess();
  uint64_t v7 = (void *)MEMORY[0x1C8776240](v2);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void protocol witness for ConversationControlsDismissalTimerDelegate.invalidateAndRescheduleTimer(reschedule:) in conformance MultiwayViewController()
{
}

void MultiwayViewController.inCallControlsViewController(_:didTapBuzz:)()
{
}

void MultiwayViewController.inCallControlsViewController(_:didApprove:)()
{
}

void MultiwayViewController.inCallControlsViewController(_:didDismiss:)()
{
}

uint64_t MultiwayViewController.inCallControlsViewController(_:didKick:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_62();
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_33_0(v1, 1, v4);
  if (v6) {
    return outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
  }
  outlined init with take of Participant(v1, v0);
  ConversationController.canKick(_:)();
  if (v8) {
    MultiwayViewController.showKickParticipantAlert(toKick:)();
  }
  return _s15ConversationKit11ParticipantVWOhTm_12(v0, (void (*)(void))type metadata accessor for Participant);
}

uint64_t MultiwayViewController.hasConnectedToCall.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *(void *)(v1 + 8);
  swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 96);
  swift_unknownObjectRetain();
  uint64_t v4 = OUTLINED_FUNCTION_30_15();
  LOBYTE(v2) = v3(v4);
  swift_unknownObjectRelease();
  return v2 & 1;
}

void MultiwayViewController.participantGridViewController(_:didUpdateVisibleParticipantsFrom:to:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_159_2(v8, v64);
  uint64_t v9 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v9, (uint64_t)v78, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v78, (uint64_t)v79, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v79);
  if (!v10)
  {
    uint64_t v65 = v0;
    uint64_t v11 = *(void *)(v4 + 16);
    if (v11)
    {
      uint64_t v12 = MEMORY[0x1E4FBC860];
      outlined init with take of CATransform3D?((uint64_t)v78, (uint64_t)v77, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v77);
      uint64_t v75 = v12;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v11, 0);
      OUTLINED_FUNCTION_22_0();
      uint64_t v14 = v4 + v13;
      type metadata accessor for UUID();
      OUTLINED_FUNCTION_4();
      uint64_t v17 = OUTLINED_FUNCTION_109_4(v16, *(void *)(v15 + 64));
      do
      {
        MEMORY[0x1F4188790](v17);
        OUTLINED_FUNCTION_193_2();
        _s15ConversationKit11ParticipantVWOcTm_18(v14, v73);
        uint64_t v18 = OUTLINED_FUNCTION_70_9();
        v19(v18);
        _s15ConversationKit11ParticipantVWOhTm_12(v73, (void (*)(void))type metadata accessor for Participant);
        uint64_t v20 = v75;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v75 + 16) + 1, 1);
          uint64_t v20 = v75;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v75;
        }
        *(void *)(v20 + 16) = v22 + 1;
        OUTLINED_FUNCTION_22_0();
        uint64_t v24 = OUTLINED_FUNCTION_69_9(v20 + v23);
        v25(v24);
        uint64_t v75 = v20;
        OUTLINED_FUNCTION_229_1();
      }
      while (!v10);
    }
    else
    {
      outlined init with take of CATransform3D?((uint64_t)v78, (uint64_t)v77, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v77);
      uint64_t v20 = MEMORY[0x1E4FBC860];
    }
    uint64_t v26 = *(void *)(v2 + 16);
    uint64_t v27 = MEMORY[0x1E4FBC860];
    if (v26)
    {
      v77[0] = MEMORY[0x1E4FBC860];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v26, 0);
      OUTLINED_FUNCTION_22_0();
      uint64_t v29 = v2 + v28;
      type metadata accessor for UUID();
      OUTLINED_FUNCTION_4();
      uint64_t v32 = OUTLINED_FUNCTION_109_4(v31, *(void *)(v30 + 64));
      do
      {
        MEMORY[0x1F4188790](v32);
        OUTLINED_FUNCTION_193_2();
        _s15ConversationKit11ParticipantVWOcTm_18(v29, v73);
        uint64_t v33 = OUTLINED_FUNCTION_70_9();
        v34(v33);
        _s15ConversationKit11ParticipantVWOhTm_12(v73, (void (*)(void))type metadata accessor for Participant);
        uint64_t v27 = v77[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v77[0];
        }
        unint64_t v36 = *(void *)(v27 + 16);
        unint64_t v35 = *(void *)(v27 + 24);
        if (v36 >= v35 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
          uint64_t v27 = v77[0];
        }
        *(void *)(v27 + 16) = v36 + 1;
        OUTLINED_FUNCTION_22_0();
        uint64_t v38 = OUTLINED_FUNCTION_69_9(v27 + v37);
        v39(v38);
        v77[0] = v27;
        OUTLINED_FUNCTION_229_1();
      }
      while (!v10);
    }
    uint64_t v40 = swift_bridgeObjectRetain();
    specialized _ArrayProtocol.filter(_:)(v40, v27);
    uint64_t v76 = v41;
    uint64_t v42 = swift_bridgeObjectRetain();
    specialized _ArrayProtocol.filter(_:)(v42, v20);
    specialized Array.append<A>(contentsOf:)();
    uint64_t v43 = *(void *)(v76 + 16);
    if (v43)
    {
      OUTLINED_FUNCTION_22_0();
      uint64_t v45 = v76 + v44;
      char v46 = (uint64_t *)(v65 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
      double v74 = (void *)v79[0];
      double v69 = (void *)v79[3];
      double v70 = (void *)v79[1];
      id v67 = (void *)v79[17];
      double v68 = (void *)v79[12];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_2();
      uint64_t v66 = *(void *)(v6 + 72);
      do
      {
        OUTLINED_FUNCTION_218_2();
        ParticipantListViewController.update(participant:broadcastingState:)(v47);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantsViewController>);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1C376BA00;
        uint64_t v49 = type metadata accessor for ParticipantGridViewController();
        *(void *)(v48 + 56) = v49;
        uint64_t v72 = v49;
        *(void *)(v48 + 64) = &protocol witness table for ParticipantGridViewController;
        *(void *)(v48 + 32) = v70;
        *(void *)(v48 + 96) = type metadata accessor for ParticipantListViewController();
        *(void *)(v48 + 104) = &protocol witness table for ParticipantListViewController;
        *(void *)(v48 + 72) = v74;
        *(void *)(v48 + 136) = type metadata accessor for InCallBannerHostViewController();
        *(void *)(v48 + 144) = &protocol witness table for InCallBannerHostViewController;
        *(void *)(v48 + 112) = v69;
        *(void *)(v48 + 176) = type metadata accessor for MostActiveParticipantViewController();
        *(void *)(v48 + 184) = &protocol witness table for MostActiveParticipantViewController;
        *(void *)(v48 + 152) = v68;
        *(void *)(v48 + 216) = type metadata accessor for CaptionsViewController();
        *(void *)(v48 + 224) = &protocol witness table for CaptionsViewController;
        *(void *)(v48 + 192) = v67;
        uint64_t v50 = (void *)OUTLINED_FUNCTION_45_4();
        __swift_project_boxed_opaque_existential_1(v50, v51);
        uint64_t v52 = *v46;
        uint64_t v71 = off_1F1EA4C20[0];
        id v53 = v70;
        id v54 = v74;
        id v55 = v69;
        id v56 = v68;
        id v57 = v67;
        ((void (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v71)(v45, v52, v72, &protocol witness table for ParticipantGridViewController);
        id v58 = (void *)OUTLINED_FUNCTION_228_0();
        OUTLINED_FUNCTION_221_1(v58, v59);
        OUTLINED_FUNCTION_230_0();
        v60();
        OUTLINED_FUNCTION_221_1((void *)(v48 + 112), *(void *)(v48 + 136));
        OUTLINED_FUNCTION_230_0();
        v61();
        OUTLINED_FUNCTION_221_1((void *)(v48 + 152), *(void *)(v48 + 176));
        OUTLINED_FUNCTION_230_0();
        v62();
        OUTLINED_FUNCTION_221_1((void *)(v48 + 192), *(void *)(v48 + 216));
        OUTLINED_FUNCTION_230_0();
        v63();
        swift_setDeallocating();
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        v45 += v66;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
    MultiwayViewController.updateDeskViewButtonVisibility()();
    MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
    MultiwayViewController.needsUpdatePresentationContexts.setter(1);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v78);
  }
  OUTLINED_FUNCTION_28();
}

void *MultiwayViewController.participantGridViewController(_:participantDidHideSash:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v0, (uint64_t)v9);
  outlined init with take of CATransform3D?((uint64_t)v9, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  UIMenu_optional result = (void *)OUTLINED_FUNCTION_6_112(v10);
  if (!v2)
  {
    uint64_t v3 = (void *)v10[7];
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
    id v4 = v3;
    MultiwayViewController.bringSubviewToFront(_:)(v3);

    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_14_2();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 384);
    id v8 = v7;
    LOBYTE(v4) = v6();

    if (v4) {
      MultiwayViewController.updateZoomControls(for:)(0xFCu);
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
  }
  return result;
}

uint64_t MultiwayViewController.participantGridViewController(_:didUpdateFullScreenFocusedParticipantFrom:newParticipant:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(a2, a3);
}

void MultiwayViewController.participantGridViewController(_:didDodgeMediaPipWithActiveParticipants:)()
{
  OUTLINED_FUNCTION_212_2();
  uint64_t v0 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_233_0(v0, (uint64_t)v8);
  outlined init with take of CATransform3D?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v9);
  if (!v1)
  {
    OUTLINED_FUNCTION_2();
    swift_bridgeObjectRetain();
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v8);
    OUTLINED_FUNCTION_189_2();
    Array<A>.participants(notIn:)();
    swift_bridgeObjectRelease();
    ParticipantListViewController.update(with:updateReason:)();
    swift_bridgeObjectRelease();
    char v2 = ParticipantListViewController.participantCount.getter() > 0;
    MultiwayViewController.setParticipantListState(_:animated:)(v2, 1);
    uint64_t v3 = v10;
    if (v10)
    {
      uint64_t v4 = v11;
      uint64_t ObjectType = swift_getObjectType();
      id v6 = v3;
      uint64_t v7 = ParticipantListViewController.participantCount.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 72))(v7, ObjectType, v4);
    }
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v8);
  }
  OUTLINED_FUNCTION_215_0();
}

void *MultiwayViewController.participantGridViewController(_:didSetOverlayHidden:)(uint64_t a1, char a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v3, (uint64_t)v7);
  OUTLINED_FUNCTION_225_0((uint64_t)v7);
  UIMenu_optional result = (void *)OUTLINED_FUNCTION_6_112(v8);
  if (!v5)
  {
    outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v6);
    ParticipantListViewController.setOverlayHidden(_:)(a2 & 1);
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  return result;
}

uint64_t MultiwayViewController.configurableRosterCellWidth.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_45_18(v2, (uint64_t)v12);
  OUTLINED_FUNCTION_76_9(v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_6_112(v13);
  if (v9) {
    return 0;
  }
  uint64_t v10 = *(void *)(v1 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
  OUTLINED_FUNCTION_2();
  return *(void *)v10;
}

uint64_t protocol witness for ParticipantListViewControllerDelegate.configurableRosterCellWidth.getter in conformance MultiwayViewController()
{
  return MultiwayViewController.configurableRosterCellWidth.getter();
}

void MultiwayViewController.cameraViewController(_:didRenderFrame:)()
{
  OUTLINED_FUNCTION_212_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v6, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v21);
  if (!v7)
  {
    uint64_t v8 = *(void **)(v6 + 64);
    if (v8)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
      id v9 = v5;
      id v10 = v8;
      OUTLINED_FUNCTION_162();
      char v11 = static NSObject.== infix(_:_:)();

      if (v11)
      {
        id v12 = objc_msgSend(v3, sel_pixelBuffer);
        objc_msgSend(v3, sel_timestamp);
        objc_allocWithZone(MEMORY[0x1E4F47990]);
        id v13 = @nonobjc AVCVideoFrame.init(pixelBuffer:time:imageData:)(v12, v17, v18, v19, 0, 0xF000000000000000);
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
          OUTLINED_FUNCTION_2();
          if (*v15)
          {
            id v16 = *v15;
            objc_msgSend(v16, sel_encodeProcessedVideoFrame_, v14);
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_215_0();
}

Swift::Void __swiftcall MultiwayViewController.cameraViewControllerPresentationRectWasDoubleTapped(_:)(CFXCameraViewController *a1)
{
  OUTLINED_FUNCTION_212_2();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_63();
  unint64_t v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_5_12();
  v6(v5);
  if ((v3 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v7, (uint64_t)v14);
  outlined init with take of CATransform3D?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v15);
  if (!v8)
  {
    id v9 = *(void **)(v15[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
    id v10 = v9;
    unint64_t v3 = UIView.tapInteractions(withTapCount:)((id)2);

    if (!(v3 >> 62))
    {
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v3 & 0xC000000000000001) == 0, v3);
        if ((v3 & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x1C87744F0](0, v3);
        }
        else {
          id v11 = *(id *)(v3 + 32);
        }
        id v12 = v11;
        swift_bridgeObjectRelease();
        TapInteraction.triggerInteraction()();

        goto LABEL_11;
      }
LABEL_10:
      swift_bridgeObjectRelease();
LABEL_11:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
      goto LABEL_12;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_12:
  OUTLINED_FUNCTION_215_0();
}

void MultiwayViewController.cameraViewController(_:presentationRectWasPinchedWith:scale:velocity:)(double a1)
{
  unint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_14_2();
  uint64_t v5 = *(void (**)(uint64_t, double))(v4 + 408);
  id v7 = v6;
  uint64_t v8 = OUTLINED_FUNCTION_8_11();
  v5(v8, a1);
}

void MultiwayViewController.cameraViewController(_:didChange:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = v0;
  v6[4] = v3;
  void v16[4] = partial apply for closure #1 in MultiwayViewController.cameraViewController(_:didChange:);
  v16[5] = v6;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  long long v16[2] = thunk for @escaping @callee_guaranteed () -> ();
  v16[3] = &block_descriptor_75;
  id v7 = _Block_copy(v16);
  id v8 = v5;
  id v9 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_63();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_1();
  v16[0] = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v5, v1, v7);
  _Block_release(v7);

  uint64_t v12 = OUTLINED_FUNCTION_48_3();
  v13(v12);
  OUTLINED_FUNCTION_139();
  v14();
  OUTLINED_FUNCTION_28();
}

void closure #1 in MultiwayViewController.cameraViewController(_:didChange:)(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = MultiwayViewController.effectsViewController.getter();
  if (v5)
  {
    id v6 = (void *)v5;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
    id v7 = a1;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      uint64_t v9 = MultiwayViewController.effectsControlsViewController.getter();
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        type metadata accessor for EffectsControlsViewController();
        uint64_t v11 = (void *)swift_dynamicCastClass();
        if (v11)
        {
          (*(void (**)(BOOL))((*MEMORY[0x1E4FBC8C8] & *v11) + 0xB0))(a3 != 0);
          MultiwayViewController.updateLocalParticipantControls()();
        }
      }
      specialized EffectsHandler.updateAVCEffects(with:)(a3);
    }
  }
}

uint64_t MultiwayViewController.shouldAlwaysPresentExpandedApps(for:)()
{
  if (!*(void *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController]) {
    return 0;
  }
  OUTLINED_FUNCTION_43_24();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 120);
  id v4 = v3;
  uint64_t v5 = OUTLINED_FUNCTION_205_2();
  char v6 = v2(v5);

  return v6 & 1;
}

void MultiwayViewController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController))
  {
    OUTLINED_FUNCTION_198_3();
    OUTLINED_FUNCTION_43_24();
    uint64_t v2 = *(void (**)(uint64_t))(v1 + 128);
    id v4 = v3;
    uint64_t v5 = OUTLINED_FUNCTION_72_8();
    v2(v5);
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_1_0();
  }
}

void MultiwayViewController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController))
  {
    OUTLINED_FUNCTION_198_3();
    OUTLINED_FUNCTION_43_24();
    uint64_t v2 = *(void (**)(uint64_t))(v1 + 136);
    id v4 = v3;
    uint64_t v5 = OUTLINED_FUNCTION_72_8();
    v2(v5);
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_1_0();
  }
}

void MultiwayViewController.expandedAppViewControllerSize(for:)()
{
  if (*(void *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController])
  {
    OUTLINED_FUNCTION_43_24();
    uint64_t v2 = *(void (**)(uint64_t))(v1 + 144);
    id v4 = v3;
    uint64_t v5 = OUTLINED_FUNCTION_205_2();
    v2(v5);
  }
  OUTLINED_FUNCTION_112();
}

void *MultiwayViewController.effectBrowserViewController(_:willChangeDockHeight:)(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OUTLINED_FUNCTION_2();
  uint64_t v5 = OUTLINED_FUNCTION_31_39(v4, (uint64_t)v25);
  OUTLINED_FUNCTION_163_2(v5, v6, v7, v8, v9, v10, v11, v12, v23, v24[0], v24[1], v24[2], v24[3], v24[4], v24[5], v24[6], v24[7], v24[8], v24[9],
    v24[10],
    v24[11],
    v24[12],
    v24[13],
    v24[14],
    v24[15],
    v24[16],
    v24[17],
    v24[18],
    v24[19],
    v24[20],
    v24[21],
    v24[22],
    v24[23],
    v24[24],
    v24[25],
    v24[26],
    v24[27],
    v24[28],
    v24[29],
    v24[30],
    v24[31],
    v24[32],
    v25[0],
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45);
  UIMenu_optional result = (void *)OUTLINED_FUNCTION_6_112(v46);
  if (!v14)
  {
    uint64_t v15 = (void *)(v46[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
    UIMenu_optional result = (void *)OUTLINED_FUNCTION_2();
    unint64_t v16 = *v15 - 2;
    if (v16 <= 4 && ((0x1Bu >> v16) & 1) != 0)
    {
      uint64_t v17 = qword_1C378A370[v16];
      uint64_t v18 = qword_1C378A398[v16];
      uint64_t v19 = v47;
      if (v47)
      {
        uint64_t v20 = *(void (**)(double))((*MEMORY[0x1E4FBC8C8] & *v47) + 0xC8);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v25);
        id v21 = v19;
        v20(a1);
      }
      else
      {
        outlined init with take of CATransform3D?((uint64_t)v25, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v24);
      }
      if (a1 <= 50.0) {
        uint64_t v22 = v18;
      }
      else {
        uint64_t v22 = v17;
      }
      objc_msgSend(v2, sel_setControlsState_animated_, v22, 1);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v25);
    }
  }
  return result;
}

id MultiwayViewController.didCapture(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  if (v5)
  {
    uint64_t v6 = 0;
  }
  else
  {
    *(void *)uint64_t v42 = 0;
    *(_OWORD *)&v42[8] = *(_OWORD *)(v4 + 8);
    *(_OWORD *)&v42[24] = *(_OWORD *)(v4 + 24);
    *(_OWORD *)&v42[40] = *(_OWORD *)(v4 + 40);
    *(_OWORD *)&v42[56] = *(_OWORD *)(v4 + 56);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v7 = static OS_dispatch_queue.main.getter();
    uint64_t v8 = OUTLINED_FUNCTION_26();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = v42;
    uint64_t v9 = OUTLINED_FUNCTION_26();
    *(void *)(v9 + 16) = partial apply for closure #1 in MultiwayViewController.didCapture(_:);
    *(void *)(v9 + 24) = v8;
    v41[4] = partial apply for thunk for @callee_guaranteed () -> ();
    v41[5] = v9;
    v41[0] = MEMORY[0x1E4F143A8];
    v41[1] = 1107296256;
    void v41[2] = thunk for @escaping @callee_guaranteed () -> ();
    void v41[3] = &block_descriptor_84_0;
    uint64_t v10 = _Block_copy(v41);
    uint64_t v11 = v2;
    swift_retain();
    swift_release();
    uint64_t v12 = OUTLINED_FUNCTION_248();
    dispatch_sync(v12, v13);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if (v7)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v15 = *(void *)&v42[64];
    unint64_t v16 = *(void **)v4;
    uint64_t v17 = *(void **)v42;
    long long v18 = *(_OWORD *)&v42[16];
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v42;
    *((_OWORD *)v4 + 1) = v18;
    long long v19 = *(_OWORD *)&v42[48];
    *((_OWORD *)v4 + 2) = *(_OWORD *)&v42[32];
    *((_OWORD *)v4 + 3) = v19;
    *((void *)v4 + 8) = v15;
    id v20 = v17;

    uint64_t v5 = *(void **)v4;
    if (!*(void *)v4)
    {
      uint64_t v40 = partial apply for closure #1 in MultiwayViewController.didCapture(_:);
      return (id)outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v40);
    }
    uint64_t v6 = partial apply for closure #1 in MultiwayViewController.didCapture(_:);
  }
  double v22 = *((double *)v4 + 7);
  double v21 = *((double *)v4 + 8);
  double v24 = *((double *)v4 + 5);
  double v23 = *((double *)v4 + 6);
  double v26 = *((double *)v4 + 3);
  double v25 = *((double *)v4 + 4);
  double v28 = *((double *)v4 + 1);
  double v27 = *((double *)v4 + 2);
  self;
  uint64_t v29 = swift_dynamicCastObjCClass();
  if (!v29)
  {
LABEL_15:
    uint64_t v40 = v6;
    return (id)outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v40);
  }
  uint64_t v30 = (void *)v29;
  uint64_t v31 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
      + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2();
  if (*(char *)(v31 + 16) < 0)
  {
    if ((unint64_t)*(unsigned __int8 *)(v31 + 1) << 8 == 256) {
      uint64_t v32 = 3;
    }
    else {
      uint64_t v32 = 4;
    }
  }
  else
  {
    uint64_t v32 = 4;
  }
  id v33 = v5;
  id result = (id)outlined bridged method (pb) of @objc CNContact.imageData.getter(a1);
  if (v34 >> 60 == 15) {
    goto LABEL_19;
  }
  uint64_t v35 = (uint64_t)result;
  unint64_t v36 = v34;
  v37.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  outlined consume of Data?(v35, v36);
  id result = objc_msgSend(a1, sel_pixelBuffer);
  if (result)
  {
    uint64_t v38 = result;
    id v39 = objc_msgSend(a1, sel_depthPixelBuffer);
    objc_msgSend(v30, sel_renderFrameWithImageDataArchive_imagePixelBuffer_depthPixelBuffer_orientation_presentationRect_contentsRect_, v37.super.isa, v38, v39, v32, v28, v27, v26, v25, v24, v23, v22, v21);

    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

__n128 closure #1 in MultiwayViewController.didCapture(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v3, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v22, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v23) != 1)
  {
    uint64_t v5 = *(void **)(v3 + 64);
    if (v5)
    {
      self;
      uint64_t v6 = swift_dynamicCastObjCClass();
      if (v6)
      {
        uint64_t v7 = v6;
        outlined init with take of CATransform3D?(v3, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of CATransform3D?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v21) != 1)
        {
          uint64_t v8 = *(void **)(v3 + 56);
          id v9 = v5;
          objc_msgSend(v8, sel_frame);
          uint64_t v10 = *(void **)a2;
          *(void *)a2 = v7;
          *(void *)(a2 + 8) = v11;
          *(void *)(a2 + 16) = v12;
          *(void *)(a2 + 24) = v13;
          *(void *)(a2 + 32) = v14;
          *(void *)(a2 + 40) = 0;
          *(void *)(a2 + 48) = 0;
          __asm { FMOV            V0.2D, #1.0 }
          *(_OWORD *)(a2 + 56) = _Q0;
        }
      }
    }
  }
  return result;
}

UIView *MultiwayViewController.setupReducedMotionAnimation(forSnapshot:animations:completion:)(void *a1, uint64_t a2, uint64_t *a3)
{
  __n128 result = (UIView *)objc_msgSend(v3, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = result;
  [(UIView *)result addSubview:a1];

  __n128 result = (UIView *)objc_msgSend(v3, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v9 = result;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*a3);
  UIView.addConstraintsToFill(_:insets:)(v9, *MEMORY[0x1E4FB12A8]);

  (*(void (**)(void))a2)();
  swift_release();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)a2 = partial apply for closure #1 in FlashView.flash(completion:);
  *(void *)(a2 + 8) = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *a3 = (uint64_t)partial apply for closure #2 in closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:);
  a3[1] = v11;
  id v12 = a1;
  return (UIView *)v12;
}

void closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(void *a1, void (*a2)(void))
{
  id v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_layoutIfNeeded);

    if (a2) {
      a2();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(char a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void (**)(void))(a2 + 16);
  if (v7)
  {
    swift_retain();
    v7(a1 & 1);
    uint64_t result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
  }
  if (a3) {
    return a3(a1 & 1);
  }
  return result;
}

BOOL MultiwayViewController.shouldHideStatusBar.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of CATransform3D?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v4, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v5) == 1) {
    return 0;
  }
  id v3 = (unsigned char *)(v5[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  return *v3 == 0;
}

void MultiwayViewController.setControlsState(_:animated:)()
{
  OUTLINED_FUNCTION_31();
  id v3 = v0;
  char v5 = v4;
  OUTLINED_FUNCTION_235_1();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_12_1();
  v9();
  if (v8)
  {
    uint64_t v10 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_249_1(v10, (uint64_t)v26);
    outlined init with take of CATransform3D?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    OUTLINED_FUNCTION_6_112(v27);
    if (!v11)
    {
      memcpy(v25, v27, sizeof(v25));
      unint64_t v12 = v1 - 4;
      unsigned int v13 = (v1 < 7) & (0x6Cu >> v1);
      uint64_t v14 = (char *)(v27[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      OUTLINED_FUNCTION_2();
      char v15 = *v14;
      outlined init with take of CATransform3D?((uint64_t)v26, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v24);
      if (MultiwayViewController.effectsBrowserIsOpaque.getter()) {
        uint64_t v16 = 2;
      }
      else {
        uint64_t v16 = 1;
      }
      if (!v1)
      {
        if (static Platform.current.getter() == 1)
        {
          if (ConversationController.isOneToOneModeEnabled.getter()) {
            unint64_t v1 = 0;
          }
          else {
            unint64_t v1 = v16;
          }
        }
        else
        {
          unint64_t v1 = 0;
        }
      }
      MultiwayViewConstraintsController.inCallControlsState.setter(v1);
      uint64_t v17 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      uint64_t ObjectType = swift_getObjectType();
      char v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 320))(ObjectType, v17) & (v12 > 2);
      uint64_t v20 = swift_allocObject();
      memcpy((void *)(v20 + 16), v25, 0xD8uLL);
      *(unsigned char *)(v20 + 232) = v12 < 3;
      *(unsigned char *)(v20 + 233) = v13;
      *(void *)(v20 + 240) = v3;
      *(unsigned char *)(v20 + 248) = v15;
      uint64_t v21 = OUTLINED_FUNCTION_20();
      *(void *)(v21 + 16) = v3;
      double v22 = v3;
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v26);
      double v23 = v22;
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(v5 & 1, v19, (void (*)(id))partial apply for closure #1 in MultiwayViewController.setControlsState(_:animated:), v20, (void (*)(uint64_t))partial apply for closure #2 in MultiwayViewController.setControlsState(_:animated:), v21);
      swift_release();
      swift_release();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v26);
    }
    OUTLINED_FUNCTION_28();
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in MultiwayViewController.setControlsState(_:animated:)(uint64_t a1, char a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v10 = (unsigned char *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded);
  swift_beginAccess();
  *uint64_t v10 = a2;
  InCallControlsViewController.isExpanded.didset();
  outlined init with take of CATransform3D?(a1 + 72, (uint64_t)v18, &demangling cache variable for type metadata for EffectsControlsViewController?);
  outlined init with take of CATransform3D?((uint64_t)v18, (uint64_t)&v19, &demangling cache variable for type metadata for EffectsControlsViewController?);
  if (v19)
  {
    id v11 = objc_msgSend(v19, sel_view);
    if (!v11)
    {
      __break(1u);
      return;
    }
    unint64_t v12 = v11;
    double v13 = 0.0;
    if (a3) {
      double v13 = 1.0;
    }
    objc_msgSend(v11, sel_setAlpha_, v13);
  }
  uint64_t v14 = (id *)(a4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  swift_beginAccess();
  char v15 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)*v14) + 0x180);
  id v16 = *v14;
  char v17 = v15();

  if (v17) {
    MultiwayViewController.updateZoomControls(for:)(a5);
  }
}

void closure #2 in MultiwayViewController.setControlsState(_:animated:)(char a1)
{
  if (a1)
  {
    id v1 = objc_msgSend(self, sel_currentDevice);
    id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

    if (!v2) {
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
    }
  }
}

uint64_t closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v9);
  id v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0) {
    InCallBannerHostViewController.hudTransition()();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a3 + 16)) {
    double v12 = 1.0;
  }
  else {
    double v12 = 0.0;
  }
  ParticipantView.updateGradientOverlayView(isHidden:alpha:)(2, *(uint64_t *)&v12, 0);
  uint64_t v13 = *(void *)(a2 + 8)
      + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v13, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  }
  outlined init with take of Participant((uint64_t)v8, (uint64_t)v11);
  ParticipantGridViewController.update(participant:gradientOverlayAlpha:)();
  return _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
}

uint64_t closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char v5 = (unsigned char *)(a4 + 16);
  if (a2 & 1) == 0 && (a1) {
    InCallBannerHostViewController.hideOrShowRootView()();
  }
  uint64_t result = swift_beginAccess();
  if (!*v5)
  {
    uint64_t v7 = *(void *)(a3 + 24) + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
    swift_beginAccess();
    outlined init with copy of ConversationControlsType(v7, (uint64_t)v14);
    outlined init with copy of ConversationControlsType((uint64_t)v14, (uint64_t)&v10);
    if (v13 == 1)
    {
      outlined destroy of ConversationControlsType((uint64_t)&v10);
    }
    else if (v13 != 6 {
           || (v10 != 5 ? (BOOL v8 = v10 == 2) : (BOOL v8 = 1),
    }
               !v8
            || (int8x16_t v9 = vorrq_s8(v11, v12),
                *(void *)&vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)))))
    {
      outlined destroy of ConversationControlsType((uint64_t)&v10);
      return outlined destroy of ConversationControlsType((uint64_t)v14);
    }
    outlined destroy of ConversationControlsType((uint64_t)v14);
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    char v16 = 6;
    InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)((uint64_t)v14, 0);
    return outlined destroy of ConversationControlsType((uint64_t)v14);
  }
  return result;
}

void closure #1 in MultiwayViewController.setParticipantListState(_:animated:)(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_view);
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_superview);

    objc_msgSend(v3, sel_layoutIfNeeded);
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.participantViewDragControllerDidStartDrag(_:)()
{
  MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(1, 1, 0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_45_18(v2, (uint64_t)v13);
  OUTLINED_FUNCTION_76_9(v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_6_112(v14);
  if (!v9)
  {
    uint64_t v10 = *(char **)(v1 + 56);
    int8x16_t v11 = &v10[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden];
    OUTLINED_FUNCTION_11_0();
    *int8x16_t v11 = 1;
    int8x16_t v12 = v10;
    LocalParticipantView.requiresControlsHidden.didset();
  }
}

void MultiwayViewController.participantViewDragController(_:didEndDragAtPosition:velocity:)()
{
  uint64_t v3 = v0;
  OUTLINED_FUNCTION_7();
  uint64_t v4 = (id *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  uint64_t v5 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_244_1(v5, (uint64_t)v41);
  outlined init with take of CATransform3D?((uint64_t)v41, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v42);
  if (v6) {
    return;
  }
  id v7 = objc_msgSend(v4[1], sel_view);
  if (!v7) {
    return;
  }
  uint64_t v8 = v7;
  MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(0, 1, 0);
  MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  objc_msgSend(v8, sel_bounds);
  double v10 = v9 * 0.5;
  objc_msgSend(v8, sel_bounds);
  double v12 = v11 * 0.5;
  uint64_t v13 = MultiwayViewController.constraintController.getter();
  uint64_t v14 = (void *)v13;
  if (v12 <= v2)
  {
    if (v10 > v1)
    {
      if (v13
        && (long long v18 = (unsigned char *)(v13 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState),
            OUTLINED_FUNCTION_2(),
            LOBYTE(v18) = *v18,
            v14,
            (v18 & 1) != 0))
      {
        int v16 = 0;
        unsigned int v17 = 65;
      }
      else
      {
        int v16 = 1;
        unsigned int v17 = 1;
      }
      goto LABEL_23;
    }
    if (v13)
    {
      uint64_t v20 = (unsigned char *)(v13 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
      OUTLINED_FUNCTION_2();
      LOBYTE(v20) = *v20;

      if (v20)
      {
        int v16 = 0;
        unsigned int v17 = 67;
        goto LABEL_23;
      }
    }
    unsigned int v17 = 3;
    goto LABEL_22;
  }
  if (v10 <= v1)
  {
    if (v13)
    {
      id v19 = (unsigned char *)(v13 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
      OUTLINED_FUNCTION_2();
      LOBYTE(v19) = *v19;

      if (v19)
      {
        int v16 = 0;
        unsigned int v17 = 66;
        goto LABEL_23;
      }
    }
    unsigned int v17 = 2;
LABEL_22:
    int v16 = 1;
    goto LABEL_23;
  }
  if (!v13
    || (uint64_t v15 = (unsigned char *)(v13 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState),
        OUTLINED_FUNCTION_2(),
        LOBYTE(v15) = *v15,
        v14,
        (v15 & 1) == 0))
  {
    unsigned int v17 = 0;
    goto LABEL_22;
  }
  int v16 = 0;
  unsigned int v17 = 64;
LABEL_23:
  OUTLINED_FUNCTION_244_1(v13, (uint64_t)v39);
  outlined init with take of CATransform3D?((uint64_t)v39, (uint64_t)v40, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t v21 = OUTLINED_FUNCTION_6_112(v40);
  if (!v6)
  {
    double v22 = (char *)v4[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate;
    uint64_t v21 = OUTLINED_FUNCTION_1_21();
    unsigned char *v22 = 1;
  }
  OUTLINED_FUNCTION_244_1(v21, (uint64_t)v37);
  outlined init with take of CATransform3D?((uint64_t)v37, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v38);
  if (!v6)
  {
    double v23 = (char *)v4[7];
    double v24 = &v23[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden];
    OUTLINED_FUNCTION_1_21();
    *double v24 = 0;
    double v25 = v23;
    LocalParticipantView.requiresControlsHidden.didset();
  }
  if (v16) {
    uint64_t v26 = v17;
  }
  else {
    uint64_t v26 = v17 & 3;
  }
  uint64_t v27 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 584))(v26, ObjectType, v27);
  LOBYTE(aBlock[0]) = 0;
  MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)aBlock, v17, 0);
  swift_getObjectType();
  OUTLINED_FUNCTION_185_2();
  if ((v29() & 1) == 0)
  {
    type metadata accessor for ParticipantViewDragController();
    double v30 = OUTLINED_FUNCTION_112();
    id v32 = static ParticipantViewDragController.boingAnimator(usingVelocity:)(v30, v31);
    uint64_t v33 = OUTLINED_FUNCTION_20();
    *(void *)(v33 + 16) = v3;
    aBlock[4] = partial apply for closure #1 in MultiwayViewController.participantViewDragController(_:didEndDragAtPosition:velocity:);
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_96;
    unint64_t v34 = _Block_copy(aBlock);
    uint64_t v35 = v3;
    swift_release();
    objc_msgSend(v32, sel_addAnimations_, v34);
    _Block_release(v34);
    objc_msgSend(v32, sel_startAnimation);
  }
  MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
}

BOOL closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  uint64_t v5 = v4;
  if (v4)
  {
    double v6 = 1.0;
    if (a2) {
      double v6 = 0.0;
    }
    objc_msgSend(v4, sel_setAlpha_, v6);
  }
  return v5 == 0;
}

BOOL closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  uint64_t v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, sel_setEnabled_, (a2 & 1) == 0);
  }
  return v5 == 0;
}

void *MultiwayViewController.captionsViewDragControllerDidStartDrag(_:atPosition:)()
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v2, (uint64_t)v7);
  outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  uint64_t result = (void *)OUTLINED_FUNCTION_6_112(v8);
  if (!v4)
  {
    outlined init with take of CATransform3D?((uint64_t)v7, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v6);
    MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)((CGPoint)__PAIR128__(v0, v1), 0);
    unsigned __int8 v5 = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v5, 252, 1);
    MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(1, 1, 0);
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  return result;
}

void *MultiwayViewController.captionsViewDragController(_:didMoveToPosition:)()
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_31_39(v2, (uint64_t)v21);
  OUTLINED_FUNCTION_163_2(v3, v4, v5, v6, v7, v8, v9, v10, v16, v17, v18, v19, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6],
    v20[7],
    v20[8],
    v20[9],
    v20[10],
    v20[11],
    v20[12],
    v20[13],
    v20[14],
    v20[15],
    v20[16],
    v20[17],
    v20[18],
    v20[19],
    v20[20],
    v20[21],
    v20[22],
    v20[23],
    v20[24],
    v20[25],
    v20[26],
    v20[27],
    v20[28],
    v20[29],
    v21[0],
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41);
  uint64_t result = (void *)OUTLINED_FUNCTION_6_112(v42);
  if (!v12)
  {
    outlined init with take of CATransform3D?((uint64_t)v21, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v20);
    int v13 = MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(v1, v0);
    if (v13 < 0xFCu)
    {
      int v14 = v13;
      uint64_t v15 = v42[18];
      OUTLINED_FUNCTION_2();
      if ((*(unsigned char *)(v15 + 88) & 1) == 0)
      {
        MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)((CGPoint)__PAIR128__(*(unint64_t *)&v0, *(unint64_t *)&v1), 0);
        MultiwayViewController.setLocalParticipantState(_:animated:)(v14, 1);
      }
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v21);
  }
  return result;
}

void MultiwayViewController.captionsViewDragController(_:didEndDragAtPosition:velocity:)(double a1, double a2, double a3, double a4)
{
  uint64_t v7 = v4;
  OUTLINED_FUNCTION_19_0();
  uint64_t v10 = (id *)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  uint64_t v11 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_31_39(v11, (uint64_t)v23);
  outlined init with take of CATransform3D?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v24);
  if (!v12)
  {
    id v13 = v10[6];
    double v14 = OUTLINED_FUNCTION_112();
    MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)((CGPoint)__PAIR128__(v15, *(unint64_t *)&v14), 1);
    LOBYTE(aBlock[0]) = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)aBlock, 252, 0);
    swift_getObjectType();
    OUTLINED_FUNCTION_185_2();
    if ((v16() & 1) == 0)
    {
      type metadata accessor for ParticipantViewDragController();
      id v17 = static ParticipantViewDragController.boingAnimator(usingVelocity:)(a3, a4);
      uint64_t v18 = OUTLINED_FUNCTION_20();
      *(void *)(v18 + 16) = v7;
      aBlock[4] = partial apply for closure #1 in MultiwayViewController.captionsViewDragController(_:didEndDragAtPosition:velocity:);
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_102_0;
      uint64_t v19 = _Block_copy(aBlock);
      id v20 = v7;
      swift_release();
      objc_msgSend(v17, sel_addAnimations_, v19);
      _Block_release(v19);
      objc_msgSend(v17, sel_startAnimation);
    }
    int v21 = MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(v6, v5);
    if (v21 <= 0xFBu) {
      MultiwayViewController.setLocalParticipantState(_:animated:)(v21, 1);
    }
  }
}

uint64_t MultiwayViewController.pipViewController.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  uint64_t v2 = OUTLINED_FUNCTION_2();
  uint64_t v6 = OUTLINED_FUNCTION_41_26(v2, v3, v4, v5);
  OUTLINED_FUNCTION_40_26(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48[0]);
  OUTLINED_FUNCTION_47_20(v48);
  if (!v14) {
    id v15 = *(id *)(v1 + 96);
  }
  return OUTLINED_FUNCTION_90_5();
}

__C::CGRect __swiftcall MultiwayViewController.frameForRestoreAnimation()()
{
  uint64_t v2 = (void *)v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_60();
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2();
  outlined init with take of CATransform3D?(v10, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of CATransform3D?((uint64_t)v44, (uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_6_112(v45);
  if (!v11)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v12 = OUTLINED_FUNCTION_205_0();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v12, v13, v14);
    OUTLINED_FUNCTION_33_0(v0, 1, v5);
    if (v11)
    {
      outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Participant?);
      goto LABEL_5;
    }
    uint64_t v28 = OUTLINED_FUNCTION_45_4();
    outlined init with take of Participant(v28, v29);
    outlined init with take of CATransform3D?((uint64_t)v44, (uint64_t)&v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)&v43);
    char v30 = ConversationController.isOneToOneModeEnabled.getter();
    _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v9, v1);
    if (v30)
    {
      uint64_t v31 = *(void *)(v1 + *(int *)(v5 + 28));
      _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
      if (!v31)
      {
        _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
        goto LABEL_5;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_12(v1, (void (*)(void))type metadata accessor for Participant);
    }
    if (*(void *)&v9[*(int *)(v5 + 28)])
    {
      id v32 = objc_msgSend(v2, sel_view);
      if (!v32)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v33 = v32;
      OUTLINED_FUNCTION_163();
      ParticipantGridViewController.spatialPosition(for:relativeTo:)();
      OUTLINED_FUNCTION_38();
    }
    else
    {
      objc_msgSend((id)v45[7], sel_frame);
      OUTLINED_FUNCTION_38();
    }
    id v34 = objc_msgSend(self, sel_mainScreen);
    id v35 = objc_msgSend(v34, sel_fixedCoordinateSpace);

    id v36 = objc_msgSend(v2, sel_view);
    if (v36)
    {
      uint64_t v37 = v36;
      id v38 = objc_msgSend(v36, sel_coordinateSpace);

      double v39 = OUTLINED_FUNCTION_41();
      objc_msgSend(v40, v41, v38, v39);
      OUTLINED_FUNCTION_171_3();
      swift_unknownObjectRelease();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
      _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_18;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_5:
  id v15 = objc_msgSend(self, sel_mainScreen);
  id v16 = objc_msgSend(v15, sel_fixedCoordinateSpace);

  id v17 = objc_msgSend(v2, sel_view);
  if (!v17)
  {
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v17, sel_frame);
  OUTLINED_FUNCTION_222_1();
  id v22 = objc_msgSend(v2, sel_view);
  if (!v22)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_coordinateSpace);

  double v25 = OUTLINED_FUNCTION_41();
  objc_msgSend(v26, v27, v24, v25);
  OUTLINED_FUNCTION_171_3();
  swift_unknownObjectRelease();
LABEL_18:
  double v18 = OUTLINED_FUNCTION_170_3();
LABEL_23:
  result.size.CGFloat height = v21;
  result.size.CGFloat width = v20;
  result.origin.CGFloat y = v19;
  result.origin.CGFloat x = v18;
  return result;
}

Swift::Bool __swiftcall MultiwayViewController.restoreViewControllerHierarchyWhenExitingPiP()()
{
  return 0;
}

id MultiwayViewController.underlyingView.getter()
{
  id v1 = objc_msgSend(v0, sel_view);
  return v1;
}

id MultiwayViewController.senderHandle(videoMessageController:)(void *a1)
{
  id result = (id)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x138))();
  if (!result)
  {
    id v2 = objc_msgSend(self, sel_facetimeService);
    id v3 = (id)IMPreferredAccountForService();

    if (v3 && (uint64_t v4 = outlined bridged method (ob) of @objc IMAccount.displayName.getter(v3), v5))
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      return TUHandle.__allocating_init(type:value:)(1, v6, v7);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_31();
  id v84 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_55_0();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v75 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t (*)())((char *)&v75 - v12);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v15 = OUTLINED_FUNCTION_8(v14);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_80();
  uint64_t v16 = type metadata accessor for URL();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_189_2();
  OUTLINED_FUNCTION_124();
  v17();
  OUTLINED_FUNCTION_31_13();
  __swift_storeEnumTagSinglePayload(v18, v19, v20, v16);
  LOBYTE(v85) = 0;
  id v21 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewModel(0));
  VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
  id v22 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  specialized Collection.first.getter(*v22, v1);
  OUTLINED_FUNCTION_33_0(v1, 1, v6);
  if (!v23)
  {
    outlined init with take of Participant(v1, (uint64_t)v13);
    id v24 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_13_22();
    OUTLINED_FUNCTION_47();
    uint64_t v81 = OUTLINED_FUNCTION_0_23(0xD000000000000016, v25);
    uint64_t v27 = v26;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v28 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v28 + 16) = xmmword_1C3769620;
    uint64_t v29 = (char *)v13 + *(int *)(v6 + 36);
    uint64_t v30 = *((void *)v29 + 1);
    uint64_t v83 = *(void *)v29;
    uint64_t v31 = OUTLINED_FUNCTION_162();
    _s15ConversationKit11ParticipantVWOcTm_18(v31, v32);
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = lazy protocol witness table accessor for type String and conformance String();
    uint64_t v82 = v27;
    if (v30)
    {
      uint64_t v33 = v30;
    }
    else
    {
      id v34 = *(void **)&v10[*(int *)(v6 + 28)];
      uint64_t v79 = 0;
      if (v34)
      {
        id v35 = v34;
        uint64_t v36 = outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v35);
        uint64_t v80 = v37;
        if (v37)
        {
          uint64_t v83 = v36;
          id v78 = v35;
          if (objc_msgSend(v35, sel_shouldHideContact))
          {
            uint64_t v38 = type metadata accessor for PersonNameComponents();
            uint64_t v77 = (uint64_t)&v77;
            uint64_t v76 = v38;
            OUTLINED_FUNCTION_4();
            uint64_t v40 = v39;
            MEMORY[0x1F4188790](v41);
            OUTLINED_FUNCTION_60();
            swift_bridgeObjectRetain();
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            PersonNameComponents.familyName.setter();
            if (one-time initialization token for initials != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_2();
            id v42 = (id)static NSPersonNameComponentsFormatter.initials;
            Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            id v44 = objc_msgSend(v42, sel_stringFromPersonNameComponents_, isa);

            uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v47 = v46;

            (*(void (**)(void, uint64_t))(v40 + 8))(0, v76);
            CGFloat v85 = (void *)v45;
            uint64_t v86 = v47;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();
            swift_bridgeObjectRelease();

            uint64_t v33 = v80;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
          swift_bridgeObjectRelease();
          id v35 = v78;
        }
      }
      _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v10, v2);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)();
      uint64_t v48 = v85;
      uint64_t v83 = v86;
      uint64_t v80 = v87;
      swift_release();
      _s15ConversationKit11ParticipantVWOhTm_12(v2, (void (*)(void))type metadata accessor for Participant);

      swift_bridgeObjectRelease();
      uint64_t v33 = v80;
      swift_bridgeObjectRelease();
    }
LABEL_15:
    *(void *)(v28 + 32) = v83;
    *(void *)(v28 + 40) = v33;
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantVWOhTm_12((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_49();
    uint64_t v49 = OUTLINED_FUNCTION_248();
    v50(v49);
    uint64_t v51 = OUTLINED_FUNCTION_43();
    _s15ConversationKit11ParticipantVWOhTm_12(v51, v52);
    goto LABEL_16;
  }
  outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
LABEL_16:
  id v53 = v84;
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_180_3();
  OUTLINED_FUNCTION_5_49();
  id v55 = *(uint64_t (**)(uint64_t))(v54 + 448);
  swift_retain();
  uint64_t v56 = OUTLINED_FUNCTION_65_12();
  id v57 = (void (*)(uint64_t))v55(v56);
  void *v58 = partial apply for closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  v58[1] = v13;
  swift_release();
  uint64_t v59 = OUTLINED_FUNCTION_33_31();
  v57(v59);
  swift_release();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_180_3();
  uint64_t v60 = OUTLINED_FUNCTION_26();
  *(void *)(v60 + 16) = v13;
  *(void *)(v60 + 24) = v53;
  swift_retain();
  id v61 = v53;
  uint64_t v62 = OUTLINED_FUNCTION_65_12();
  uint64_t v63 = (void (*)(uint64_t))v55(v62);
  *(void *)(v64 + 16) = partial apply for closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  *(void *)(v64 + 24) = v60;
  swift_release();
  uint64_t v65 = OUTLINED_FUNCTION_33_31();
  v63(v65);
  swift_release();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_180_3();
  swift_retain();
  uint64_t v66 = OUTLINED_FUNCTION_65_12();
  id v67 = (void (*)(uint64_t))v55(v66);
  *(void *)(v68 + 48) = partial apply for closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  *(void *)(v68 + 56) = v13;
  swift_release();
  uint64_t v69 = OUTLINED_FUNCTION_33_31();
  v67(v69);
  swift_release();
  uint64_t v70 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v71 = OUTLINED_FUNCTION_65_12();
  uint64_t v72 = (void (*)(uint64_t))v55(v71);
  *(void *)(v73 + 64) = partial apply for closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  *(void *)(v73 + 72) = v70;
  swift_release();
  uint64_t v74 = OUTLINED_FUNCTION_33_31();
  v72(v74);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 72) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), v6, v5);
}

uint64_t closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1 + 16);
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.resetRecordingVideoMessage(completion:)();
  }
  uint64_t v5 = *(void *)(v0 + 64) + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = (void *)MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_navigationController);

    if (v8)
    {
    }
  }
  OUTLINED_FUNCTION_6();
  return v9();
}

uint64_t closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  id v8 = a2;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = MEMORY[0x1E4FBCFD8];
  long long v10[2] = v9;
  void v10[3] = v11;
  void v10[4] = a1;
  v10[5] = v8;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  uint64_t v6 = type metadata accessor for Participant(0);
  v5[19] = v6;
  v5[20] = *(void *)(v6 - 8);
  v5[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[22] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[23] = v8;
  char v5[24] = v7;
  return MEMORY[0x1F4188298](closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), v8, v7);
}

uint64_t closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v60 = v0;
  uint64_t v1 = *(void *)(v0 + 136) + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  *(void *)(v0 + 200) = v2;
  if (!v2)
  {
    swift_release();
    goto LABEL_37;
  }
  uint64_t v3 = v2;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController;
  *(void *)(v0 + 208) = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController;
  uint64_t v5 = (uint64_t *)(*(void *)(v2 + v4) + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v5;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v57 = v4;
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v10 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v11 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      uint64_t v12 = *(void *)(v0 + 168);
      _s15ConversationKit11ParticipantVWOcTm_18(v10, v12);
      uint64_t v13 = *(void **)(v12 + *(int *)(v9 + 28));
      uint64_t v14 = *(void *)(v0 + 168);
      if (v13)
      {
        id v15 = v13;
        uint64_t v16 = _s15ConversationKit11ParticipantVWOhTm_12(v14, (void (*)(void))type metadata accessor for Participant);
        MEMORY[0x1C87733A0](v16);
        if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        OUTLINED_FUNCTION_48_3();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_12(*(void *)(v0 + 168), (void (*)(void))type metadata accessor for Participant);
      }
      v10 += v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v4 = v57;
    uint64_t v17 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = *(void **)(v0 + 144);
  swift_bridgeObjectRelease();
  id v19 = MultiwayViewController.senderHandle(videoMessageController:)(v18);
  *(void *)(v0 + 216) = v19;
  if (!v19)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (one-time initialization token for videoMessaging != -1) {
      swift_once();
    }
    uint64_t v28 = (id *)(v0 + 120);
    uint64_t v29 = type metadata accessor for Logger();
    uint64_t v30 = (void *)OUTLINED_FUNCTION_30(v29, (uint64_t)static Logger.videoMessaging);
    os_log_type_t v31 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_2_12(v31))
    {
      uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_180(v32);
      OUTLINED_FUNCTION_69_4(&dword_1C2F90000, v33, v34, "Can't sent a video message with no sender handle");
      OUTLINED_FUNCTION_3();
    }

    lazy protocol witness table accessor for type VideoMessagingError and conformance VideoMessagingError();
    id v35 = (void *)swift_allocError();
    swift_willThrow();
    id *v28 = v35;
    id v36 = v35;
    os_log_type_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    if (swift_dynamicCast())
    {
      if (one-time initialization token for videoMessaging != -1) {
        swift_once();
      }
      uint64_t v38 = OUTLINED_FUNCTION_30(v29, (uint64_t)static Logger.videoMessaging);
      os_log_type_t v39 = static os_log_type_t.error.getter();
      BOOL v40 = OUTLINED_FUNCTION_2_12(v39);
      uint64_t v41 = *(void **)(v0 + 200);
      if (v40)
      {
        id v42 = (uint8_t *)OUTLINED_FUNCTION_8_0();
        *(_WORD *)id v42 = 0;
        _os_log_impl(&dword_1C2F90000, v38, v37, "Video message send called when already sending.", v42, 2u);
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      id v54 = *v28;
    }
    else
    {

      if (one-time initialization token for videoMessaging != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v29, (uint64_t)static Logger.videoMessaging);
      id v46 = v35;
      id v47 = v35;
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v48, v49))
      {

LABEL_37:
        swift_task_dealloc();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_73();
        __asm { BRAA            X1, X16 }
      }
      id v58 = *(void **)(v0 + 200);
      uint64_t v50 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136315138;
      *(void *)(v0 + 128) = v35;
      id v51 = v35;
      uint64_t v52 = String.init<A>(reflecting:)();
      *(void *)(v0 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2F90000, v48, v49, "Unknown error on send: %s", v50, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

      id v54 = v35;
    }

    goto LABEL_37;
  }
  *(void *)(v0 + 224) = specialized Set.init<A>(_:)(v17);
  uint64_t v20 = type metadata accessor for UUID();
  *(void *)(v0 + 232) = v20;
  OUTLINED_FUNCTION_4();
  uint64_t v22 = v21;
  *(void *)(v0 + 240) = v21;
  uint64_t v23 = swift_task_alloc();
  *(void *)(v0 + 248) = v23;
  uint64_t v24 = *(void *)(v3 + v4) + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID;
  OUTLINED_FUNCTION_228_0();
  OUTLINED_FUNCTION_2();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_8(v25);
  uint64_t v26 = swift_task_alloc();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v24, v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_33_0(v26, 1, v20);
  if (v27)
  {
    UUID.init()();
    outlined destroy of SystemUpdateNotice?(v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v23, v26, v20);
  }
  swift_task_dealloc();
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v43;
  void *v43 = v0;
  v43[1] = closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  OUTLINED_FUNCTION_73();
  return VideoMessageController.complete(sendingTo:sendingFrom:in:)();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;

  OUTLINED_FUNCTION_49_0();
  uint64_t v2 = (void *)*v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  v2[33] = v0;
  swift_task_dealloc();
  uint64_t v4 = OUTLINED_FUNCTION_14_26();
  v5(v4);
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v6 = v2[23];
    uint64_t v7 = v2[24];
    uint64_t v8 = closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = v2[23];
    uint64_t v7 = v2[24];
    uint64_t v8 = closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  }
  return MEMORY[0x1F4188298](v8, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void (*v7)(void);
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void **)(v0 + 200);
  swift_release();

  uint64_t v3 = objc_msgSend(v2, sel_navigationController);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = objc_msgSend(v3, sel_popViewControllerAnimated_, 1);
  }
  OUTLINED_FUNCTION_43_24();
  uint64_t v7 = *(void (**)(void))(v6 + 784);
  uint64_t v9 = v8;
  v7();

  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_30(v10, (uint64_t)static Logger.videoMessaging);
  uint64_t v12 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v12))
  {
    uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v13);
    OUTLINED_FUNCTION_69_4(&dword_1C2F90000, v14, v15, "Video message send complete. Requesting dismissal");
    OUTLINED_FUNCTION_3();
  }
  uint64_t v16 = *(void *)(v0 + 200);

  uint64_t v17 = v16 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t v18 = (void *)MEMORY[0x1C8776240](v17);
  id v19 = *(void **)(v0 + 200);
  if (v18)
  {
    objc_msgSend(v18, sel_unansweredCallUIDismissed);
    swift_unknownObjectRelease();
  }

  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v20();
}

void closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(void **)(v0 + 264);
  *(void *)(v0 + 120) = v2;
  uint64_t v3 = (id *)(v0 + 120);
  id v4 = v2;
  os_log_type_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast())
  {
    if (one-time initialization token for videoMessaging != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = OUTLINED_FUNCTION_30(v6, (uint64_t)static Logger.videoMessaging);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = OUTLINED_FUNCTION_107(v8);
    uint64_t v10 = *(void **)(v0 + 200);
    if (v9)
    {
      uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_8_0();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1C2F90000, v7, v5, "Video message send called when already sending.", v11, 2u);
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    id v21 = *v3;
  }
  else
  {

    if (one-time initialization token for videoMessaging != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.videoMessaging);
    id v13 = (id)OUTLINED_FUNCTION_8_11();
    id v14 = v2;
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v15, v16))
    {

LABEL_14:
      swift_task_dealloc();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_73();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v24 = *(void **)(v0 + 200);
    uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    *(void *)(v0 + 128) = v2;
    id v18 = v2;
    uint64_t v19 = String.init<A>(reflecting:)();
    *(void *)(v0 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v15, v16, "Unknown error on send: %s", v17, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    id v21 = v2;
  }

  goto LABEL_14;
}

uint64_t closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  void v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), v6, v5);
}

uint64_t closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1 + 16);
  uint64_t v3 = (void *)v2;
  if (v2)
  {
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.saveRecordedVideoMessage()();
  }
  **(unsigned char **)(v0 + 40) = v3 == 0;
  OUTLINED_FUNCTION_6();
  return v5();
}

uint64_t closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void *))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_21_1();
  uint64_t v10 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_25_1(v4, v11, v12, v10);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  id v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBCFD8];
  _OWORD v14[2] = v13;
  uint64_t v14[3] = v15;
  v14[4] = a1;
  a4(v4, a3, v14);
  return swift_release();
}

uint64_t closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 72) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), v6, v5);
}

uint64_t closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.discardRecordedVideoMessage()();
  }
  uint64_t v5 = *(void *)(v0 + 64) + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = (void *)MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_navigationController);

    if (v8)
    {
    }
  }
  OUTLINED_FUNCTION_6();
  return v9();
}

Swift::Void __swiftcall MultiwayViewController.prepareForAppSwitcher()()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_217_1();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 240);
  id v3 = v2;
  LOBYTE(v1) = v1();

  if (VideoMessageController.State.rawValue.getter((char)v1) == 0x676E696D726177 && v4 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      OUTLINED_FUNCTION_217_1();
      id v8 = *(uint64_t (**)(void))(v7 + 240);
      id v10 = v9;
      LOBYTE(v8) = v8();

      if (VideoMessageController.State.rawValue.getter((char)v8) == 0x6552657669746361 && v11 == 0xEF676E6964726F63)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          goto LABEL_18;
        }
      }
      ConversationController.stopRecordingVideoMessage()();
LABEL_18:
      OUTLINED_FUNCTION_15_0();
      return;
    }
  }
  OUTLINED_FUNCTION_15_0();
  MultiwayViewController.pauseVideoMessageRecording()();
}

void MultiwayViewController.showCameraAlert()()
{
  uint64_t v1 = v0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_conversationKit);
  v23._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001C37B6CB0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000020;
  v5.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v23);

  id v21 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v7._countAndFlagsBits, (uint64_t)v7._object, 0, 0xE000000000000000, 1);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIAlertAction);
  id v8 = objc_msgSend(v2, sel_conversationKit);
  v24._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001C37B6CE0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000020;
  v10.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v24);

  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v14 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v12._countAndFlagsBits, (uint64_t)v12._object, 0, (uint64_t)partial apply for closure #1 in MultiwayViewController.showCameraAlert(), v13);
  objc_msgSend(v21, sel_addAction_, v14);

  id v15 = objc_msgSend(v2, sel_conversationKit);
  v16._uint64_t countAndFlagsBits = 0xD000000000000024;
  v25._object = (void *)0xE000000000000000;
  v16._object = (void *)0x80000001C37B6D10;
  v17.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v17.value._object = (void *)0xEF74694B6E6F6974;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v25);

  id v20 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v19._countAndFlagsBits, (uint64_t)v19._object, 0, 0, 0);
  objc_msgSend(v21, sel_addAction_, v20);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v21, 1, 0);
}

void closure #2 in MultiwayViewController.startRecordingVideoMessage()(char a1, uint64_t a2, uint64_t a3)
{
  LocalParticipantView.endCountdown()();
  if (a1)
  {
    swift_beginAccess();
    uint64_t v5 = MEMORY[0x1C8776240](a3 + 16);
    if (v5)
    {
      Swift::String v6 = (void *)v5;
      id v7 = *(id *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

      ConversationController.startRecordingVideoMessage()();
    }
  }
}

void closure #1 in MultiwayViewController.showCameraAlert()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    Swift::String v4 = (void *)v3;
    id v5 = *(id *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  }
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v2);
  if (v6)
  {
    id v7 = (void *)v6;
    MultiwayViewController.startRecordingVideoMessage()();
  }
}

void closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.videoMessaging);
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v13[0] = v8;
    *(_DWORD *)id v7 = 136315138;
    uint64_t v9 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v5, v6, "Dismissing due to error %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v8, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }

  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1C8776240](v3);
  if (v11)
  {
    Swift::String v12 = (void *)v11;
    swift_retain();
    MultiwayViewController.cancelVideoRecording(completion:)();
    swift_release();
  }
}

void closure #1 in closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
    swift_beginAccess();
    os_log_type_t v6 = (void *)MEMORY[0x1C8776240](v5);

    if (v6)
    {
      objc_msgSend(v6, sel_unansweredCallUIDismissed);
      swift_unknownObjectRelease();
    }
  }
}

void MultiwayViewController.didConfirm(forInterventionViewController:)()
{
  OUTLINED_FUNCTION_31();
  if (v2)
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClass();
    if (v3) {
      objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
  uint64_t v4 = type metadata accessor for URL();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_62();
  os_log_type_t v6 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_0_3();
  unint64_t v10 = *(void (**)(void))(v9 + 528);
  id v11 = v6;
  v10();

  OUTLINED_FUNCTION_33_0(v1, 1, v4);
  if (v12)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for URL?);
  }
  else
  {
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_63_0();
    v13();
    MultiwayViewController.showLocalVideoMessagePreview(usingURL:)();
    uint64_t v14 = OUTLINED_FUNCTION_39();
    v15(v14);
  }
  OUTLINED_FUNCTION_28();
}

void MultiwayViewController.didReject(forInterventionViewController:)(uint64_t a1)
{
  if (a1)
  {
    self;
    uint64_t v1 = (void *)swift_dynamicCastObjCClass();
    if (v1) {
      objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
  ConversationController.discardRecordedVideoMessage()();
}

void @objc MultiwayViewController.didConfirm(forInterventionViewController:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

id @nonobjc AVCVideoFrame.init(pixelBuffer:time:imageData:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a5, a6);
  }
  v16[0] = a2;
  v16[1] = a3;
  long long v16[2] = a4;
  id v14 = objc_msgSend(v6, sel_initWithPixelBuffer_time_imageData_, a1, v16, isa);

  return v14;
}

unint64_t lazy protocol witness table accessor for type VideoReactionPickerTip and conformance VideoReactionPickerTip()
{
  unint64_t result = lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip;
  if (!lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip)
  {
    type metadata accessor for VideoReactionPickerTip();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip);
  }
  return result;
}

uint64_t partial apply for closure #1 in MultiwayViewController.activeRemoteParticipants(in:)(uint64_t a1)
{
  return closure #1 in MultiwayViewController.activeRemoteParticipants(in:)(a1) & 1;
}

void *_s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_6_6(a1);
  v3(v2, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18],
    v1[19],
    v1[20],
    v1[21],
    v1[22],
    v1[23],
    v1[24],
    v1[25],
    v1[26]);
  return v1;
}

uint64_t outlined retain of MultiwayViewController.ViewContent(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  os_log_type_t v6 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a1 + 48);
  id v7 = *(void **)(a1 + 56);
  unint64_t v10 = *(void **)(a1 + 64);
  uint64_t v9 = *(void **)(a1 + 72);
  id v36 = *(void **)(a1 + 80);
  os_log_type_t v37 = *(void **)(a1 + 88);
  uint64_t v38 = *(void **)(a1 + 96);
  os_log_type_t v39 = *(void **)(a1 + 104);
  BOOL v40 = *(void **)(a1 + 112);
  uint64_t v41 = *(void **)(a1 + 120);
  id v42 = *(void **)(a1 + 128);
  uint64_t v43 = *(void **)(a1 + 136);
  uint64_t v44 = *(void **)(a1 + 160);
  uint64_t v45 = *(void **)(a1 + 168);
  id v46 = *(void **)(a1 + 176);
  id v47 = *(void **)(a1 + 184);
  uint64_t v48 = *(void **)(a1 + 192);
  os_log_type_t v49 = *(void **)(a1 + 200);
  id v11 = *(id *)(a1 + 208);
  id v12 = v2;
  id v13 = v3;
  id v14 = v4;
  id v15 = v5;
  id v16 = v6;
  id v17 = v8;
  id v18 = v7;
  id v19 = v10;
  id v20 = v9;
  id v21 = v36;
  id v22 = v37;
  id v23 = v38;
  id v24 = v39;
  id v25 = v40;
  id v26 = v41;
  id v27 = v42;
  id v28 = v43;
  swift_retain();
  swift_retain();
  id v29 = v44;
  id v30 = v45;
  id v31 = v46;
  id v32 = v47;
  id v33 = v48;
  id v34 = v49;
  return a1;
}

uint64_t sub_1C35FD54C()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = MultiwayViewController.isOnScreen.getter();
  unsigned char *v0 = result & 1;
  return result;
}

void sub_1C35FD578(unsigned __int8 *a1)
{
}

uint64_t outlined bridged method (ob) of @objc IMAccount.displayName.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_displayName);

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_47_6();
  }
  return OUTLINED_FUNCTION_41_0();
}

uint64_t specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(void *a1, void *a2, unint64_t *a3, __int16 a4)
{
  void v16[3] = type metadata accessor for ParticipantGridViewController();
  void v16[4] = &protocol witness table for ParticipantGridViewController;
  v16[0] = a1;
  outlined init with copy of IDSLookupManager((uint64_t)v16, (uint64_t)v15);
  id v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if (swift_dynamicCast())
  {
    id v9 = v14[0];
    swift_beginAccess();
    unint64_t v10 = *a3;
    swift_bridgeObjectRetain();
    char v11 = specialized Sequence<>.contains(_:)((uint64_t)v14[0], v10);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      swift_beginAccess();
      id v9 = v14[0];
      MEMORY[0x1C87733A0]();
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      LOWORD(v14[0]) = a4;
      v12._rawValue = a2;
      ParticipantGridViewController.update(with:updateReason:)(v12, (char *)v14);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, id *))
{
  uint64_t v12 = OUTLINED_FUNCTION_235_1();
  long long v22[3] = v13(v12);
  void v22[4] = a6;
  v22[0] = v7;
  outlined init with copy of IDSLookupManager((uint64_t)v22, (uint64_t)v21);
  id v14 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if (swift_dynamicCast())
  {
    id v15 = v20[0];
    OUTLINED_FUNCTION_2();
    swift_bridgeObjectRetain();
    uint64_t v16 = OUTLINED_FUNCTION_163();
    char v18 = specialized Sequence<>.contains(_:)(v16, v17);
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      OUTLINED_FUNCTION_6_1();
      id v15 = v20[0];
      MEMORY[0x1C87733A0]();
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      a7(a2, v20);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(uint64_t a1, uint64_t a2, unint64_t *a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  void v19[3] = a5;
  v19[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  outlined init with copy of IDSLookupManager((uint64_t)v19, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if (swift_dynamicCast())
  {
    id v13 = v17[0];
    swift_beginAccess();
    unint64_t v14 = *a3;
    swift_bridgeObjectRetain();
    char v15 = specialized Sequence<>.contains(_:)((uint64_t)v17[0], v14);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      swift_beginAccess();
      id v13 = v17[0];
      MEMORY[0x1C87733A0]();
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      LOWORD(v17[0]) = a4;
      (*(void (**)(uint64_t, id *, uint64_t, uint64_t))(a6 + 72))(a2, v17, a5, a6);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

void specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_handle);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_value);

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    NameAndPhotoUtilities.createIMHandle(with:)(v6, v8, v9, v10, v11, v12, v13, v14, v35, v37, v38, var58[0], var58[1], var58[2], var58[3], var58[4], var58[5], var58[6], var58[7],
      var58[8],
      var58[9],
      var58[10],
      var58[11],
      var58[12]);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)static Logger.nickname);
      id v18 = v16;
      id v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v36 = a2;
        id v21 = (uint8_t *)swift_slowAlloc();
        id v22 = (void *)swift_slowAlloc();
        *(_DWORD *)id v21 = 138412290;
        id v23 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v22 = v16;

        a2 = v36;
        _os_log_impl(&dword_1C2F90000, v19, v20, "Denying sending name and photo to handle %@", v21, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v22, -1, -1);
        MEMORY[0x1C87760E0](v21, -1, -1);
      }
      else
      {
      }
      id v31 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C3769830;
      *(void *)(v32 + 32) = v18;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for IMHandle);
      id v33 = v18;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_denyHandlesForNicknameSharing_, isa);
    }
    else
    {
      if (one-time initialization token for nickname != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      __swift_project_value_buffer(v24, (uint64_t)static Logger.nickname);
      swift_bridgeObjectRetain();
      id v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        id v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        var58[0] = v28;
        *(_DWORD *)id v27 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v29 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, var58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v25, v26, "Cant deny nickname sharing because could not create IMHandle with handle %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v28, -1, -1);
        MEMORY[0x1C87760E0](v27, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void specialized NameAndPhotoUtilities.denyIncomingName(from:)(void *a1)
{
  lazy protocol witness table accessor for type TUCall and conformance TUCall();
  if (one-time initialization token for nickname != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.nickname);
  swift_unknownObjectRetain_n();
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v13 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    id v6 = objc_msgSend(a1, sel_handle);
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_value);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = String.init<A>(reflecting:)();
      unint64_t v11 = v10;
    }
    else
    {
      unint64_t v11 = 0xE300000000000000;
      uint64_t v9 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v2, v3, "Denying incoming name from handle %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v5, -1, -1);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }
  else
  {
  }
}

void specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22)
{
  void (*v81)(long long *__return_ptr, void *, unint64_t, uint64_t, _UNKNOWN **);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char **v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  long long v100;
  char v101;
  uint64_t v102;
  int v103;
  char v104;
  uint64_t v105;
  void *v106;
  void *v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  void (*v116)(long long *, void);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _UNKNOWN **v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  char v135;
  void *v136;
  void *v137;
  id v138;
  id v139;
  uint64_t v140;
  _OWORD *v141;
  unsigned __int8 v142;
  uint64_t v143;
  uint64_t (*v144)(uint64_t);
  void *v145;
  id v146;
  _UNKNOWN **v147;
  uint64_t v148;
  void (*v149)(long long *__return_ptr, id, unint64_t, uint64_t, _UNKNOWN **);
  char *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, _UNKNOWN **);
  id v164;
  unsigned char *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  id v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  id v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  id v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t (*v298)(uint64_t);
  void *v299;
  void (*v300)(void);
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t *v307;
  uint64_t v308;
  char v309;
  uint64_t ObjectType;
  objc_class *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  void *v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unsigned __int8 v323;
  uint64_t v324;
  uint64_t v325;
  unsigned char *v326;
  unint64_t v327;
  void *v328;
  id v329;
  void v330[3];
  long long v331;
  uint64_t v332;
  char v333;
  objc_super v334;
  void v335[5];
  long long v336;
  char v337;
  uint64_t v338;
  long long v339;
  long long v340;
  _UNKNOWN **v341;
  void v342[5];
  void v343[5];
  void v344[3];
  uint64_t v345;
  _UNKNOWN **v346;

  OUTLINED_FUNCTION_31();
  v321 = v23;
  v322 = v22;
  v323 = v24;
  HIDWORD(v308) = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v328 = v32;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v34 = OUTLINED_FUNCTION_8(v33);
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_2_3();
  v329 = v35;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_159_2(v37, v302);
  uint64_t v38 = type metadata accessor for Participant(0);
  uint64_t v39 = OUTLINED_FUNCTION_1(v38);
  uint64_t v314 = v40;
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_2_3();
  id v319 = v41;
  uint64_t v327 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  id v345 = type metadata accessor for CallCenter();
  uint64_t v346 = &protocol witness table for CallCenter;
  v344[0] = v31;
  v343[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v343[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v343[0] = OUTLINED_FUNCTION_20();
  outlined init with take of DefaultParticipantMediaProviderCreator(v29, v343[0] + 16);
  v342[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v342[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v342[0] = OUTLINED_FUNCTION_26();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v27, v342[0] + 16);
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(void *)&a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  uint64_t v325 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_235_1();
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v43 = OUTLINED_FUNCTION_8(v42);
  MEMORY[0x1F4188790](v43);
  OUTLINED_FUNCTION_64();
  uint64_t v44 = a22;
  static DispatchQoS.unspecified.getter();
  uint64_t v45 = type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v46);
  OUTLINED_FUNCTION_5_1();
  *(void *)&v339 = MEMORY[0x1E4FBC860];
  unint64_t v47 = _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_60();
  (*(void (**)(uint64_t, void))(v49 + 104))(v45, *MEMORY[0x1E4FBCC50]);
  OUTLINED_FUNCTION_47();
  *(void *)&a22[v325] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  uint64_t v50 = &v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
  *(_OWORD *)uint64_t v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  *((_OWORD *)v50 + 2) = 0u;
  *((_OWORD *)v50 + 3) = 0u;
  *((_OWORD *)v50 + 4) = 0u;
  *((_OWORD *)v50 + 5) = 0u;
  v50[96] = 1;
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  uint64_t v51 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  *(void *)&v44[v51] = Dictionary.init(dictionaryLiteral:)();
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  uint64_t v53 = (uint64_t)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  OUTLINED_FUNCTION_25_1(v53, v55, v56, v54);
  uint64_t v57 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_89();
  uint64_t v58 = type metadata accessor for Date();
  _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  OUTLINED_FUNCTION_205_0();
  *(void *)&v44[v57] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  v306 = (uint64_t)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = 1;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  uint64_t v59 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(void *)&v44[v59] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  OUTLINED_FUNCTION_94_5(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID);
  OUTLINED_FUNCTION_94_5(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID);
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v52;
  uint64_t v60 = MEMORY[0x1E4FBC870];
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E4FBC870];
  *(void *)&v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v60;
  uint64_t v61 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  OUTLINED_FUNCTION_205_0();
  *(void *)&v44[v61] = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_94_5(OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio);
  OUTLINED_FUNCTION_3_133(OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  uint64_t v62 = &v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *((void *)v62 + 4) = 0;
  *(_OWORD *)uint64_t v62 = 0u;
  *((_OWORD *)v62 + 1) = 0u;
  uint64_t v304 = (uint64_t)v62;
  uint64_t v63 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v64);
  OUTLINED_FUNCTION_61();
  Date.init()();
  id v65 = objc_msgSend(v328, sel_remoteParticipantHandles);
  uint64_t v66 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v316 = _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWlTm_1((uint64_t)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
  uint64_t v67 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v68 = specialized Set.count.getter(v67);
  swift_bridgeObjectRelease();
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v68 == 1;
  uint64_t v326 = v44;
  v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = v323;
  uint64_t v312 = v63;
  v313 = v58;
  v320 = v47;
  OUTLINED_FUNCTION_2_1();
  v69();
  uint64_t v70 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1F4188790](v70);
  OUTLINED_FUNCTION_36_4();
  UUID.init()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  char v72 = (*(uint64_t (**)(void))(v71 + 568))();
  OUTLINED_FUNCTION_50();
  uint64_t v74 = (*(uint64_t (**)(void))(v73 + 168))();
  v341 = 0;
  v339 = 0u;
  v340 = 0u;
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v75 = static Colors.ParticipantGradients.default;
  uint64_t v76 = type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_25_1((uint64_t)v329, v77, v78, v76);
  uint64_t v79 = v345;
  uint64_t v80 = v346;
  __swift_project_boxed_opaque_existential_1(v344, v345);
  uint64_t v81 = (void (*)(long long *__return_ptr, void *, unint64_t, uint64_t, _UNKNOWN **))v80[13];
  swift_bridgeObjectRetain();
  v81(&v336, v328, v327, v79, v80);
  if (v338)
  {
    __swift_project_boxed_opaque_existential_1(&v336, v338);
    OUTLINED_FUNCTION_41_0();
    uint64_t v82 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v336);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v336, &demangling cache variable for type metadata for Conversation?);
    uint64_t v82 = 0;
  }
  uint64_t v83 = type metadata accessor for ParticipantContactDetailsCache();
  id v84 = v83;
  if (one-time initialization token for queue != -1) {
    uint64_t v83 = swift_once();
  }
  MEMORY[0x1F4188790](v83);
  OUTLINED_FUNCTION_194_2();
  *(void *)(v85 - 32) = v84;
  *(void *)(v85 - 24) = v328;
  *(void *)(v85 - 16) = v327;
  v318 = v84;
  uint64_t v86 = 0;
  OS_dispatch_queue.sync<A>(execute:)();
  if (v74) {
    uint64_t v87 = 0x100010100;
  }
  else {
    uint64_t v87 = 65792;
  }
  LOBYTE(v301) = v82 & 1;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v324, v66, v87 & 0xFFFFFFFFFFFFFFFELL | v72 & 1, (uint64_t)&v339, v75, 0, 0, (uint64_t)v329, v301, v336, v303, 0, v304, v306, v308, ObjectType, v312, v313, v314,
    v316,
    v66,
    v318);
  outlined init with take of Participant(v319, (uint64_t)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant]);
  CGFloat v88 = objc_msgSend(v328, sel_remoteParticipantHandles);
  char v89 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v90 = specialized Set.count.getter(v89);
  if (!v90)
  {
    uint64_t v97 = swift_bridgeObjectRelease();
    unsigned int v98 = MEMORY[0x1E4FBC860];
LABEL_28:
    MEMORY[0x1F4188790](v97);
    OUTLINED_FUNCTION_194_2();
    *(void *)(v117 - 32) = v320;
    *(void *)(v117 - 24) = v344;
    *(void *)(v117 - 16) = v328;
    *(void *)(v117 - 8) = v327;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((uint64_t)partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), v118, v98);
    uint64_t v120 = v119;
    swift_bridgeObjectRelease();
    *(void *)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants] = v120;
    os_log_type_t v121 = v345;
    long long v122 = v346;
    __swift_project_boxed_opaque_existential_1(v344, v345);
    ((void (*)(long long *__return_ptr, void *, unint64_t, uint64_t, _UNKNOWN **))v122[13])(&v339, v328, v327, v121, v122);
    if (*((void *)&v340 + 1))
    {
      __swift_project_boxed_opaque_existential_1(&v339, *((uint64_t *)&v340 + 1));
      uint64_t v123 = OUTLINED_FUNCTION_3_24();
      os_log_type_t v125 = v124(v123);
      MEMORY[0x1F4188790](v125);
      OUTLINED_FUNCTION_194_2();
      *(void *)(v126 - 32) = v320;
      *(void *)(v126 - 24) = v344;
      *(void *)(v126 - 16) = v328;
      *(void *)(v126 - 8) = v327;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), v127, v125);
      unint64_t v129 = v128;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v339);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v339, &demangling cache variable for type metadata for Conversation?);
      unint64_t v129 = MEMORY[0x1E4FBC860];
    }
    *(void *)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants] = v129;
    outlined init with copy of IDSLookupManager((uint64_t)v344, (uint64_t)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter]);
    uint64_t v130 = &v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    *uint64_t v130 = v328;
    v130[1] = v327;
    outlined init with copy of IDSLookupManager((uint64_t)v343, (uint64_t)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator]);
    outlined init with copy of IDSLookupManager((uint64_t)v342, (uint64_t)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator]);
    v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants] = v309 & 1;
    outlined init with copy of IDSLookupManager((uint64_t)v344, (uint64_t)&v339);
    OUTLINED_FUNCTION_2();
    unint64_t v131 = *v307;
    v329 = v328;
    uint64_t v132 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v329, &v339, v131, 0);
    uint64_t v133 = &v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    *(void *)uint64_t v133 = v132;
    *((void *)v133 + 1) = v134;
    v133[16] = v135;
    *(void *)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker] = v321;
    uint64_t v136 = &v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults];
    *uint64_t v136 = a21;
    v136[1] = &protocol witness table for Defaults;
    outlined init with copy of IDSLookupManager((uint64_t)v344, (uint64_t)&v339);
    uint64_t v137 = self;
    swift_retain();
    swift_retain();
    uint64_t v138 = objc_msgSend(v137, sel_defaultCenter);
    OUTLINED_FUNCTION_89();
    unsigned int v139 = objc_allocWithZone((Class)type metadata accessor for VideoMessageController());
    VideoMessageController.init(callCenter:notificationCenter:)();
    *(void *)&v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController] = v140;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v322, (uint64_t)&v336, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v338)
    {
      outlined init with take of Notice(&v336, (uint64_t)&v339);
    }
    else
    {
      *((void *)&v340 + 1) = &type metadata for SingleDisplaySharingSession;
      v341 = &protocol witness table for SingleDisplaySharingSession;
      uint64_t v141 = (_OWORD *)OUTLINED_FUNCTION_11_7();
      *(void *)&v339 = v141;
      v141[1] = 0u;
      v141[2] = 0u;
      v141[3] = 0u;
      v141[4] = 0u;
      v141[5] = 0u;
      v141[6] = 0u;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v336, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of Participant?((uint64_t)&v339, v305, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    OUTLINED_FUNCTION_2();
    uint64_t v142 = 0;
    id v317 = v137;
    if (v133[16] < 0 && v323 == 1)
    {
      __swift_project_boxed_opaque_existential_1(v344, v345);
      uint64_t v143 = OUTLINED_FUNCTION_3_24();
      int v145 = (void *)v144(v143);
      uint64_t v142 = objc_msgSend(v145, sel_isPreviewRunning);
    }
    v326[OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive] = v142;

    v334.receiver = v326;
    v334.super_class = v311;
    int v146 = objc_msgSendSuper2(&v334, sel_init);
    unsigned __int8 v148 = v345;
    uint64_t v147 = v346;
    __swift_project_boxed_opaque_existential_1(v344, v345);
    long long v149 = (void (*)(long long *__return_ptr, id, unint64_t, uint64_t, _UNKNOWN **))v147[13];
    long long v150 = (char *)v146;
    v149(&v336, v329, v327, v148, v147);
    if (v338)
    {
      outlined init with take of Notice(&v336, (uint64_t)&v339);
      ConversationController.updateIdentityClaimingAssociations(in:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v339);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v336, &demangling cache variable for type metadata for Conversation?);
    }
    int v151 = OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_7_101();
    char v152 = (uint64_t *)&v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    OUTLINED_FUNCTION_11_0();
    id v153 = *v152;
    *char v152 = (uint64_t)partial apply for closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:);
    v152[1] = v151;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v153);
    if (v323 - 1 <= 1)
    {
      uint64_t v154 = (uint64_t)&v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator];
      OUTLINED_FUNCTION_2();
      outlined init with copy of IDSLookupManager(v154, (uint64_t)&v339);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (swift_dynamicCast())
      {
        v333 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v332, (uint64_t)&v331);
        swift_unknownObjectWeakAssign();
        *((void *)&v340 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        v341 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        *(void *)&v339 = OUTLINED_FUNCTION_20();
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v331, v339 + 16);
        OUTLINED_FUNCTION_6_1();
        __swift_destroy_boxed_opaque_existential_1(v154);
        outlined init with take of Notice(&v339, v154);
        swift_endAccess();
      }
      else
      {
        id v332 = 0;
        v333 = 1;
        outlined destroy of SystemUpdateNotice?((uint64_t)&v332, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    uint64_t v155 = (uint64_t)&v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator];
    OUTLINED_FUNCTION_2();
    outlined init with copy of IDSLookupManager(v155, (uint64_t)&v339);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (swift_dynamicCast())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v331, (uint64_t)v330);
      v330[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((void *)&v340 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      v341 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      *(void *)&v339 = OUTLINED_FUNCTION_26();
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v330, v339 + 16);
      OUTLINED_FUNCTION_6_1();
      __swift_destroy_boxed_opaque_existential_1(v155);
      outlined init with take of Notice(&v339, v155);
      swift_endAccess();
    }
    else
    {
      id v331 = xmmword_1C376E330;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v331, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    OUTLINED_FUNCTION_2();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v339);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v339, &demangling cache variable for type metadata for Conversation?);
    uint64_t v156 = &v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_6_1();
    uint64_t v157 = *((void *)v156 + 3);
    char v158 = *((void *)v156 + 4);
    uint64_t v159 = OUTLINED_FUNCTION_200_1();
    __swift_mutable_project_boxed_opaque_existential_1(v159, v160);
    uint64_t v82 = *(void *)(v158 + 56);
    uint64_t v161 = v150;
    ((void (*)(char *, char **, uint64_t, uint64_t))v82)(v150, &protocol witness table for ConversationController, v157, v158);
    swift_endAccess();
    OUTLINED_FUNCTION_50();
    uint64_t v163 = *(void (**)(char *, _UNKNOWN **))(v162 + 176);
    char v89 = v161;
    swift_retain();
    v163(v150, &protocol witness table for ConversationController);
    swift_release();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    id v164 = objc_msgSend(v329, sel_screenShareAttributes);
    ConversationController.updateScreenSharingSession(with:)(v164);

    LOBYTE(v156) = ConversationController.updateIsUsingIPadExternalCamera()();
    uint64_t v165 = (unsigned char *)(v89 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
    OUTLINED_FUNCTION_11_0();
    *uint64_t v165 = v156 & 1;
    id v93 = objc_msgSend(v317, sel_defaultCenter);
    uint64_t v86 = &selRef_ringButton;
    char v166 = objc_msgSend(v93, sel_addObserver_selector_name_object_, v89, sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E4FADFD8], 0);
    v169 = OUTLINED_FUNCTION_5_113((uint64_t)v166, v167, v168, (uint64_t)sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E4FADFC8]);
    uint64_t v172 = OUTLINED_FUNCTION_5_113((uint64_t)v169, v170, v171, (uint64_t)sel_handleSendingVideoChanged_, *MEMORY[0x1E4FADE00]);
    v175 = OUTLINED_FUNCTION_5_113((uint64_t)v172, v173, v174, (uint64_t)sel_handleAudioUplinkChange_, *MEMORY[0x1E4FADE10]);
    if (v323 == 1)
    {
      id v178 = OUTLINED_FUNCTION_5_113((uint64_t)v175, v176, v177, (uint64_t)sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E4FADFF0]);
      long long v181 = OUTLINED_FUNCTION_5_113((uint64_t)v178, v179, v180, (uint64_t)sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E4FADFF8]);
      v184 = OUTLINED_FUNCTION_5_113((uint64_t)v181, v182, v183, (uint64_t)sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E4FADF80]);
      v187 = OUTLINED_FUNCTION_5_113((uint64_t)v184, v185, v186, (uint64_t)sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E4FADF60]);
      id v190 = OUTLINED_FUNCTION_5_113((uint64_t)v187, v188, v189, (uint64_t)sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E4FADF68]);
      v193 = OUTLINED_FUNCTION_5_113((uint64_t)v190, v191, v192, (uint64_t)sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E4FADFD0]);
      id v196 = OUTLINED_FUNCTION_5_113((uint64_t)v193, v194, v195, (uint64_t)sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E4FADFE0]);
      id v199 = OUTLINED_FUNCTION_5_113((uint64_t)v196, v197, v198, (uint64_t)sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E4FADF58]);
      double v202 = OUTLINED_FUNCTION_5_113((uint64_t)v199, v200, v201, (uint64_t)sel_handleCameraListDidChange_, *MEMORY[0x1E4FADFA0]);
      v175 = OUTLINED_FUNCTION_5_113((uint64_t)v202, v203, v204, (uint64_t)sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E4FADFE8]);
    }
    id v205 = OUTLINED_FUNCTION_5_113((uint64_t)v175, v176, v177, (uint64_t)sel_handleScreenSharingDidChange_, *MEMORY[0x1E4FADE08]);
    id v208 = OUTLINED_FUNCTION_5_113((uint64_t)v205, v206, v207, (uint64_t)sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E4FADDD8]);
    v211 = OUTLINED_FUNCTION_5_113((uint64_t)v208, v209, v210, (uint64_t)sel_handleCallStatusDidChange_, *MEMORY[0x1E4FADD90]);
    id v214 = OUTLINED_FUNCTION_5_113((uint64_t)v211, v212, v213, (uint64_t)sel_handleCallConnected_, *MEMORY[0x1E4FADD70]);
    id v217 = OUTLINED_FUNCTION_5_113((uint64_t)v214, v215, v216, (uint64_t)sel_handleCallStartedConnecting_, *MEMORY[0x1E4FADD80]);
    if (!v323) {
      id v217 = OUTLINED_FUNCTION_5_113((uint64_t)v217, v218, v219, (uint64_t)sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E4FADD60]);
    }
    v221 = OUTLINED_FUNCTION_10_83((uint64_t)v217, v218, v219, v220, *MEMORY[0x1E4FADF90]);
    v225 = OUTLINED_FUNCTION_10_83((uint64_t)v221, v222, v223, v224, *MEMORY[0x1E4FADF88]);
    v229 = OUTLINED_FUNCTION_10_83((uint64_t)v225, v226, v227, v228, *MEMORY[0x1E4FADF98]);
    v232 = OUTLINED_FUNCTION_5_113((uint64_t)v229, v230, v231, (uint64_t)sel_handleHoldMusicDidChange_, *MEMORY[0x1E4FADD98]);
    OUTLINED_FUNCTION_5_113((uint64_t)v232, v233, v234, (uint64_t)sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E4FADE30]);
    v235 = static Platform.current.getter();
    if (v235 != 3) {
      goto LABEL_54;
    }
    id v92 = sel_handleWindowDidFinishResize_;
    uint64_t v239 = one-time initialization token for didEndWindowLiveResizeNotification;
    uint64_t v74 = (uint64_t)(id)v89;
    if (v239 == -1)
    {
LABEL_53:
      objc_msgSend(v93, v86[142], v74, v92, static Strings.Notifications.didEndWindowLiveResizeNotification, 0);

LABEL_54:
      v240 = OUTLINED_FUNCTION_10_83(v235, v236, v237, v238, *MEMORY[0x1E4FB2EC0]);
      long long v244 = OUTLINED_FUNCTION_10_83((uint64_t)v240, v241, v242, v243, *MEMORY[0x1E4FB2EC8]);
      uint64_t v248 = OUTLINED_FUNCTION_10_83((uint64_t)v244, v245, v246, v247, *MEMORY[0x1E4FADCE8]);
      v252 = OUTLINED_FUNCTION_10_83((uint64_t)v248, v249, v250, v251, *MEMORY[0x1E4FADCE0]);
      v256 = OUTLINED_FUNCTION_10_83((uint64_t)v252, v253, v254, v255, *MEMORY[0x1E4FADCF0]);
      v260 = OUTLINED_FUNCTION_10_83((uint64_t)v256, v257, v258, v259, *MEMORY[0x1E4FADCF8]);
      v264 = OUTLINED_FUNCTION_10_83((uint64_t)v260, v261, v262, v263, *MEMORY[0x1E4FADCC0]);
      v268 = OUTLINED_FUNCTION_10_83((uint64_t)v264, v265, v266, v267, *MEMORY[0x1E4FADCC8]);
      uint64_t v272 = OUTLINED_FUNCTION_10_83((uint64_t)v268, v269, v270, v271, *MEMORY[0x1E4FADCD0]);
      OUTLINED_FUNCTION_10_83((uint64_t)v272, v273, v274, v275, *MEMORY[0x1E4FADCD8]);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v276 = swift_allocObject();
      *(_OWORD *)(v276 + 16) = xmmword_1C376A6F0;
      uint64_t v277 = v89 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
      OUTLINED_FUNCTION_2();
      uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v279 = OUTLINED_FUNCTION_8(v278);
      MEMORY[0x1F4188790](v279);
      OUTLINED_FUNCTION_61();
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v277, v82, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v280 = specialized >> prefix<A>(_:)(v82);
      v282 = v281;
      outlined destroy of SystemUpdateNotice?(v82, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v283 = MEMORY[0x1E4FBB1A0];
      *(void *)(v276 + 56) = MEMORY[0x1E4FBB1A0];
      v284 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v276 + 64) = v284;
      *(void *)(v276 + 32) = v280;
      *(void *)(v276 + 40) = v282;
      OUTLINED_FUNCTION_2();
      type metadata accessor for TUConversationState(0);
      v285 = String.init<A>(reflecting:)();
      *(void *)(v276 + 96) = v283;
      *(void *)(v276 + 104) = v284;
      *(void *)(v276 + 72) = v285;
      *(void *)(v276 + 80) = v286;
      v287 = String.init<A>(reflecting:)();
      *(void *)(v276 + 136) = v283;
      *(void *)(v276 + 144) = v284;
      *(void *)(v276 + 112) = v287;
      *(void *)(v276 + 120) = v288;
      uint64_t v289 = String.init<A>(reflecting:)();
      *(void *)(v276 + 176) = v283;
      *(void *)(v276 + 184) = v284;
      *(void *)(v276 + 152) = v289;
      *(void *)(v276 + 160) = v290;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v291 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v291 + 16) = xmmword_1C3769620;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      uint64_t v292 = (*(unsigned __int8 *)(v315 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v315 + 80);
      uint64_t v293 = swift_allocObject();
      *(_OWORD *)(v293 + 16) = xmmword_1C3769620;
      v294 = v89 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_2();
      _s15ConversationKit11ParticipantVWOcTm_18(v294, v293 + v292);
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
      BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      id v295 = String.init<A>(reflecting:)();
      *(void *)(v291 + 56) = v283;
      *(void *)(v291 + 64) = v284;
      *(void *)(v291 + 32) = v295;
      *(void *)(v291 + 40) = v296;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (*(unsigned char *)(v89 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) == 1)
      {
        __swift_project_boxed_opaque_existential_1(v344, v345);
        v297 = OUTLINED_FUNCTION_166();
        v299 = (void *)v298(v297);
        objc_msgSend(v299, sel_startPreview);
        swift_release();

        id v93 = v299;
      }
      else
      {
        swift_release();
      }

      swift_release();
      outlined destroy of SystemUpdateNotice?(v322, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v342);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v343);
      OUTLINED_FUNCTION_26_2();
      v300();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v344);
      OUTLINED_FUNCTION_28();
      return;
    }
LABEL_61:
    swift_once();
    goto LABEL_53;
  }
  id v91 = v90;
  v335[0] = MEMORY[0x1E4FBC860];
  id v92 = (char *)v335;
  specialized ContiguousArray.reserveCapacity(_:)();
  id v93 = (id)(v89 & 0xC000000000000001);
  if ((v89 & 0xC000000000000001) != 0)
  {
    uint64_t v94 = __CocoaSet.startIndex.getter();
    uint64_t v96 = 1;
  }
  else
  {
    uint64_t v94 = specialized _NativeSet.startIndex.getter(v89);
    uint64_t v96 = v99 & 1;
  }
  *(void *)&uint64_t v336 = v94;
  *((void *)&v336 + 1) = v95;
  long long v337 = v96;
  if (v91 < 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  while (1)
  {
    uint64_t v100 = v336;
    unsigned __int8 v101 = v337;
    int v102 = OUTLINED_FUNCTION_242_1();
    specialized Set.subscript.getter(v102, v103, v104, v105);
    int v107 = v106;
    uint64_t v108 = (id)TUNormalizedHandleForTUHandle();
    if (!v108) {
      break;
    }
    id v109 = v108;

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (v93)
    {
      if ((v101 & 1) == 0) {
        goto LABEL_63;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      uint64_t v116 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v116(&v339, 0);
    }
    else
    {
      id v110 = OUTLINED_FUNCTION_242_1();
      specialized _NativeSet.index(after:)(v110, v111, v112, v113);
      OUTLINED_FUNCTION_47_6();
      uint64_t v115 = v114;
      outlined consume of Set<TUHandle>.Index._Variant(v100, *((uint64_t *)&v100 + 1), v101);
      *(void *)&uint64_t v336 = v335;
      *((void *)&v336 + 1) = v109;
      long long v337 = v115 & 1;
    }
    if (!--v91)
    {
      outlined consume of Set<TUHandle>.Index._Variant(v336, *((uint64_t *)&v336 + 1), v337);
      unsigned int v98 = v335[0];
      uint64_t v97 = swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
}

unint64_t specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(void *a1, void *a2, uint64_t a3, char a4)
{
  if (!objc_msgSend(a1, sel_isSendingVideo)) {
    goto LABEL_7;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 152))())
  {
    outlined init with copy of IDSLookupManager((uint64_t)a2, (uint64_t)v28);
    if (a4)
    {
      BOOL v7 = 0;
    }
    else
    {
      uint64_t v12 = v29;
      uint64_t v13 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      id v14 = objc_msgSend((id)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13), sel_currentVideoCalls);
      swift_unknownObjectRelease();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      BOOL v7 = v16 < 2;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    unsigned int v17 = objc_msgSend(a1, sel_isUplinkMuted);
    if (v7)
    {
      unint64_t v18 = 0;
    }
    else
    {
      uint64_t v19 = a2[3];
      uint64_t v20 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v19);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 32))(v25, v19, v20);
      uint64_t v21 = v26;
      uint64_t v22 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      unsigned __int8 v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      unint64_t v18 = (unint64_t)v23 << 8;
    }
    objc_msgSend(a1, sel_isSharingScreen);

    unint64_t v11 = v18 | v17;
  }
  else
  {
LABEL_7:
    unsigned int v8 = objc_msgSend(a1, sel_isUplinkMuted);
    unsigned int v9 = objc_msgSend(a1, sel_isSharingScreen);

    uint64_t v10 = 256;
    if (!v9) {
      uint64_t v10 = 0;
    }
    unint64_t v11 = v10 | v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v11;
}

char *specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, void *a2, void *a3, uint64_t a4, void *a5, unsigned char *a6)
{
  uint64_t v253 = a4;
  id v254 = a5;
  v258 = a2;
  v259 = a3;
  v252 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v262 = type metadata accessor for Participant(0);
  uint64_t v260 = *(void *)(v262 - 8);
  MEMORY[0x1F4188790](v262);
  uint64_t v261 = (uint64_t)&v247 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v247 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime];
  uint64_t v13 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  *(void *)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent] = 0;
  a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow] = 0;
  uint64_t v14 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags;
  id v15 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  uint64_t v16 = a6;
  *(void *)&a6[v14] = objc_msgSend(v15, sel_init);
  uint64_t v17 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_spamAlertBuilder;
  type metadata accessor for SpamAlertBuilder();
  *(void *)&v16[v17] = swift_allocObject();
  unint64_t v18 = (void **)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox];
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox] = 0;
  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captioningStateManager;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v20 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(void *)&v16[v19] = CaptioningStateManager.init(capabilities:)(v20);
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible] = 2;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask] = 0;
  uint64_t v21 = (uint64_t)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  uint64_t v22 = type metadata accessor for VideoReactionPickerTip();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips] = 1;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects] = 0;
  unsigned __int8 v23 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *(_OWORD *)unsigned __int8 v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  *((void *)v23 + 8) = 0;
  unsigned __int8 v24 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator];
  *((void *)v24 + 4) = 0;
  *(_OWORD *)unsigned __int8 v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner] = 2;
  uint64_t v25 = (uint64_t)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(v266);
  outlined init with take of CATransform3D?((uint64_t)v266, v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller] = 0;
  uint64_t v26 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  uint64_t v27 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState] = 4;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation] = 1;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations] = 2;
  uint64_t v28 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__isOnScreen];
  char v265 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v28, v11, v8);
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner] = 0;
  uint64_t v29 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  uint64_t v30 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  v30[16] = 1;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen] = 2;
  uint64_t v31 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v32 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
  *(void *)uint64_t v32 = 0;
  *((void *)v32 + 1) = 0;
  uint64_t v33 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler];
  *(void *)uint64_t v33 = 0;
  *((void *)v33 + 1) = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView] = 0;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView] = 1;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews] = 0;
  uint64_t v34 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
  *(_OWORD *)uint64_t v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  uint64_t v35 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
  *(_OWORD *)uint64_t v35 = 0u;
  *((_OWORD *)v35 + 1) = 0u;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen] = 0;
  uint64_t v36 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  char *v36 = 4;
  *((void *)v36 + 1) = 0;
  *((void *)v36 + 2) = 0;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill] = MEMORY[0x1E4FBC860];
  uint64_t v38 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer;
  *(void *)&v16[v38] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TonePlayer()), sel_init);
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions] = MEMORY[0x1E4FBC870];
  uint64_t v39 = v258;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController] = v258;
  id v40 = objc_allocWithZone((Class)CNKBannerPresentationManager);
  v255 = v39;
  uint64_t v41 = (char *)objc_msgSend(v40, sel_init);
  uint64_t v42 = (void **)&v41[OBJC_IVAR___CNKBannerPresentationManager_value];
  swift_beginAccess();
  uint64_t v43 = *v42;
  uint64_t v44 = v259;
  void *v42 = v259;
  id v251 = v44;

  swift_beginAccess();
  uint64_t v45 = *v18;
  void *v18 = v41;
  v250 = v41;

  uint64_t v46 = &v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults];
  uint64_t v48 = v253;
  id v47 = v254;
  *(void *)uint64_t v46 = v253;
  *((void *)v46 + 1) = &protocol witness table for Defaults;
  *(void *)&v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features] = v47;
  swift_beginAccess();
  uint64_t v49 = v47;
  if (static AmbientState.isPresented == 1)
  {
    v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = 0;
    swift_retain();
    id v50 = v47;
  }
  else
  {
    uint64_t v51 = *(uint64_t (**)(void *))(*(void *)v48 + 504);
    swift_retain();
    v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = v51(v49) & 1;
  }
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] = 0;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState] = 0;
  uint64_t v248 = v16;
  v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  unint64_t v52 = (*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80);
  uint64_t v260 = *(void *)(v260 + 72);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1C3769620;
  uint64_t v54 = &v255[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v54, v53 + v52);
  swift_beginAccess();
  uint64_t v263 = v53;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v55 = v263;
  uint64_t v56 = *(void *)(v263 + 16);
  if (v56)
  {
    uint64_t v263 = v37;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v56, 0);
    uint64_t v247 = v55;
    uint64_t v57 = v55 + v52;
    uint64_t v58 = type metadata accessor for UUID();
    uint64_t v59 = v58;
    uint64_t v60 = *(void *)(v58 - 8);
    v258 = *(void **)(v60 + 64);
    v259 = (void *)v58;
    uint64_t v256 = v60 + 32;
    v257 = (void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    do
    {
      MEMORY[0x1F4188790](v58);
      uint64_t v62 = (char *)&v247 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v63 = v261;
      _s15ConversationKit11ParticipantVWOcTm_18(v57, v261);
      (*v257)(v62, v63 + *(int *)(v262 + 20), v59);
      _s15ConversationKit11ParticipantVWOhTm_12(v63, (void (*)(void))type metadata accessor for Participant);
      uint64_t v64 = v263;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v64 + 16) + 1, 1);
        uint64_t v64 = v263;
      }
      unint64_t v66 = *(void *)(v64 + 16);
      unint64_t v65 = *(void *)(v64 + 24);
      if (v66 >= v65 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
        uint64_t v64 = v263;
      }
      *(void *)(v64 + 16) = v66 + 1;
      unint64_t v67 = v64
          + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))
          + *(void *)(v60 + 72) * v66;
      uint64_t v59 = (uint64_t)v259;
      uint64_t v58 = (*(uint64_t (**)(unint64_t, char *, void *))(v60 + 32))(v67, v62, v259);
      uint64_t v263 = v64;
      v57 += v260;
      --v56;
    }
    while (v56);
    uint64_t v68 = swift_bridgeObjectRelease();
    uint64_t v48 = v253;
  }
  else
  {
    uint64_t v68 = swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t))(*(void *)v48 + 504))(v68);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>);
  swift_allocObject();
  specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)();
  uint64_t v69 = v248;
  *(void *)&v248[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController] = v70;
  *(void *)&v69[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PipZoomControl()), sel_init);
  *(void *)&v69[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MutedTalkerBannerViewController()), sel_init);
  *(void *)&v69[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation] = 1;

  v264.receiver = v69;
  v264.super_class = ObjectType;
  uint64_t v71 = (char *)objc_msgSendSuper2(&v264, sel_initWithNibName_bundle_, 0, 0);
  char v72 = *(void **)&v71[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController];
  uint64_t v73 = *(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v72) + 0x148);
  uint64_t v74 = v71;
  uint64_t v75 = v72;
  v73(v71);

  id v76 = objc_allocWithZone((Class)type metadata accessor for EffectsLayoutController());
  uint64_t v77 = v74;
  id v78 = EffectsLayoutController.init(containingViewController:)(v77);
  uint64_t v79 = *(void **)&v77[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController];
  *(void *)&v77[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = v78;

  uint64_t v80 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v81 = v255;
  uint64_t v82 = (uint64_t *)&v255[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant];
  swift_beginAccess();
  uint64_t v83 = *v82;
  uint64_t *v82 = (uint64_t)partial apply for closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v82[1] = v80;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v83);
  uint64_t v84 = swift_allocObject();
  swift_unknownObjectWeakInit();
  CGFloat v85 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
  swift_beginAccess();
  uint64_t v86 = *v85;
  uint64_t *v85 = (uint64_t)partial apply for closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v85[1] = v84;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v86);
  uint64_t v87 = swift_allocObject();
  swift_unknownObjectWeakInit();
  CGFloat v88 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  swift_beginAccess();
  uint64_t v89 = *v88;
  uint64_t *v88 = (uint64_t)partial apply for closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v88[1] = v87;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v89);
  uint64_t v90 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v91 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant];
  swift_beginAccess();
  uint64_t v92 = *v91;
  *id v91 = (uint64_t)partial apply for closure #5 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v91[1] = v90;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v92);
  uint64_t v93 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v94 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
  swift_beginAccess();
  uint64_t v95 = *v94;
  uint64_t *v94 = (uint64_t)partial apply for closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v94[1] = v93;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v95);
  uint64_t v96 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v97 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
  swift_beginAccess();
  uint64_t v98 = *v97;
  uint64_t *v97 = (uint64_t)partial apply for closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v97[1] = v96;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v98);
  uint64_t v99 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v100 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  swift_beginAccess();
  uint64_t v101 = *v100;
  *uint64_t v100 = (uint64_t)partial apply for closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v100[1] = v99;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v101);
  uint64_t v102 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v103 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
  swift_beginAccess();
  uint64_t v104 = *v103;
  *int v103 = (uint64_t)partial apply for closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v103[1] = v102;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v104);
  uint64_t v105 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v106 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  swift_beginAccess();
  uint64_t v107 = *v106;
  uint64_t *v106 = (uint64_t)partial apply for closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v106[1] = v105;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v107);
  uint64_t v108 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v109 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
  swift_beginAccess();
  uint64_t v110 = *v109;
  *id v109 = (uint64_t)partial apply for closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v109[1] = v108;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v110);
  uint64_t v111 = swift_allocObject();
  swift_unknownObjectWeakInit();
  CGRect v112 = (void *)swift_allocObject();
  v112[2] = v111;
  v112[3] = v48;
  v112[4] = &protocol witness table for Defaults;
  uint64_t v113 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  swift_beginAccess();
  uint64_t v114 = *v113;
  *uint64_t v113 = (uint64_t)closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  v113[1] = (uint64_t)v112;
  swift_retain();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v114);
  uint64_t v115 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v116 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
  swift_beginAccess();
  uint64_t v117 = *v116;
  *uint64_t v116 = (uint64_t)partial apply for closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v116[1] = v115;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v117);
  uint64_t v118 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v119 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
  swift_beginAccess();
  uint64_t v120 = *v119;
  uint64_t *v119 = (uint64_t)partial apply for closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v119[1] = v118;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v120);
  uint64_t v121 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v122 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
  swift_beginAccess();
  uint64_t v123 = *v122;
  *long long v122 = (uint64_t)partial apply for closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v122[1] = v121;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v123);
  uint64_t v124 = swift_allocObject();
  swift_unknownObjectWeakInit();
  os_log_type_t v125 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
  swift_beginAccess();
  uint64_t v126 = *v125;
  *os_log_type_t v125 = (uint64_t)partial apply for closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v125[1] = v124;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v126);
  uint64_t v127 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v128 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
  swift_beginAccess();
  uint64_t v129 = *v128;
  *uint64_t v128 = (uint64_t)partial apply for closure #17 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v128[1] = v127;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v129);
  uint64_t v130 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v131 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
  swift_beginAccess();
  uint64_t v132 = *v131;
  *unint64_t v131 = (uint64_t)partial apply for closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v131[1] = v130;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v132);
  uint64_t v133 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v134 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange];
  swift_beginAccess();
  uint64_t v135 = *v134;
  *uint64_t v134 = (uint64_t)partial apply for closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v134[1] = v133;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v135);
  uint64_t v136 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v137 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
  swift_beginAccess();
  uint64_t v138 = *v137;
  *uint64_t v137 = (uint64_t)partial apply for closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v137[1] = v136;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v138);
  uint64_t v139 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v140 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting];
  swift_beginAccess();
  uint64_t v141 = *v140;
  *uint64_t v140 = (uint64_t)partial apply for closure #21 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v140[1] = v139;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v141);
  uint64_t v142 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v143 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange];
  swift_beginAccess();
  uint64_t v144 = *v143;
  uint64_t *v143 = (uint64_t)partial apply for closure #22 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v143[1] = v142;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v144);
  uint64_t v145 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v146 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange];
  swift_beginAccess();
  uint64_t v147 = *v146;
  *int v146 = (uint64_t)partial apply for closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v146[1] = v145;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v147);
  uint64_t v148 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v149 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange];
  swift_beginAccess();
  uint64_t v150 = *v149;
  *long long v149 = (uint64_t)partial apply for closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v149[1] = v148;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v150);
  uint64_t v151 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v152 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange];
  swift_beginAccess();
  uint64_t v153 = *v152;
  *char v152 = (uint64_t)partial apply for closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v152[1] = v151;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v153);
  uint64_t v154 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v155 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange];
  swift_beginAccess();
  uint64_t v156 = *v155;
  *uint64_t v155 = (uint64_t)partial apply for closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v155[1] = v154;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v156);
  uint64_t v157 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v158 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange];
  swift_beginAccess();
  uint64_t v159 = *v158;
  uint64_t *v158 = (uint64_t)partial apply for closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v158[1] = v157;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v159);
  uint64_t v160 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v161 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange];
  swift_beginAccess();
  uint64_t v162 = *v161;
  *uint64_t v161 = (uint64_t)partial apply for closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v161[1] = v160;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v162);
  uint64_t v163 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v164 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange];
  swift_beginAccess();
  uint64_t v165 = *v164;
  *id v164 = (uint64_t)partial apply for closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v164[1] = v163;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v165);
  uint64_t v166 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v167 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange];
  swift_beginAccess();
  uint64_t v168 = *v167;
  uint64_t *v167 = (uint64_t)partial apply for closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v167[1] = v166;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v168);
  uint64_t v169 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v170 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange];
  swift_beginAccess();
  uint64_t v171 = *v170;
  *id v170 = (uint64_t)partial apply for closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v170[1] = v169;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v171);
  uint64_t v172 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v173 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  swift_beginAccess();
  uint64_t v174 = *v173;
  uint64_t *v173 = (uint64_t)partial apply for closure #32 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v173[1] = v172;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v174);
  uint64_t v175 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v176 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize];
  swift_beginAccess();
  uint64_t v177 = *v176;
  *uint64_t v176 = (uint64_t)partial apply for closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v176[1] = v175;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v177);
  uint64_t v178 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v179 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange];
  swift_beginAccess();
  uint64_t v180 = *v179;
  *uint64_t v179 = (uint64_t)partial apply for closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v179[1] = v178;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v180);
  uint64_t v181 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v182 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  swift_beginAccess();
  uint64_t v183 = *v182;
  *long long v182 = (uint64_t)closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  v182[1] = v181;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v183);
  uint64_t v184 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v185 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange];
  swift_beginAccess();
  uint64_t v186 = *v185;
  *long long v185 = (uint64_t)partial apply for closure #36 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v185[1] = v184;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v186);
  uint64_t v187 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v188 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
  swift_beginAccess();
  uint64_t v189 = *v188;
  *id v188 = (uint64_t)partial apply for closure #37 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v188[1] = v187;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v189);
  uint64_t v190 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v191 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic];
  swift_beginAccess();
  uint64_t v192 = *v191;
  uint64_t *v191 = (uint64_t)partial apply for closure #38 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v191[1] = v190;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v192);
  uint64_t v193 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v194 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants];
  swift_beginAccess();
  uint64_t v195 = *v194;
  uint64_t *v194 = (uint64_t)partial apply for closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v194[1] = v193;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v195);
  uint64_t v196 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v197 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations];
  swift_beginAccess();
  uint64_t v198 = *v197;
  uint64_t *v197 = (uint64_t)partial apply for closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v197[1] = v196;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v198);
  uint64_t v199 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v200 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
  swift_beginAccess();
  uint64_t v201 = *v200;
  *id v200 = (uint64_t)partial apply for closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v200[1] = v199;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v201);
  uint64_t v202 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v203 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
  swift_beginAccess();
  uint64_t v204 = *v203;
  *double v203 = (uint64_t)partial apply for closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v203[1] = v202;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v204);
  uint64_t v205 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v206 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange];
  swift_beginAccess();
  uint64_t v207 = *v206;
  uint64_t *v206 = (uint64_t)partial apply for closure #43 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v206[1] = v205;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v207);
  uint64_t v208 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v209 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants];
  swift_beginAccess();
  uint64_t v210 = *v209;
  *id v209 = (uint64_t)partial apply for closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v209[1] = v208;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v210);
  uint64_t v211 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v212 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange];
  swift_beginAccess();
  uint64_t v213 = *v212;
  *id v212 = (uint64_t)partial apply for closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v212[1] = v211;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v213);
  uint64_t v214 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v215 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment];
  swift_beginAccess();
  uint64_t v216 = *v215;
  *id v215 = (uint64_t)partial apply for closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v215[1] = v214;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v216);
  uint64_t v217 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v218 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions];
  swift_beginAccess();
  uint64_t v219 = *v218;
  *id v218 = (uint64_t)partial apply for closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v218[1] = v217;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v219);
  uint64_t v220 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v221 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange];
  swift_beginAccess();
  uint64_t v222 = *v221;
  uint64_t *v221 = (uint64_t)partial apply for closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v221[1] = v220;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v222);
  uint64_t v223 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v224 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities];
  swift_beginAccess();
  uint64_t v225 = *v224;
  *id v224 = (uint64_t)partial apply for closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v224[1] = v223;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v225);
  uint64_t v226 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v227 = (uint64_t *)&v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured];
  swift_beginAccess();
  uint64_t v228 = *v227;
  uint64_t *v227 = (uint64_t)partial apply for closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v227[1] = v226;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v228);
  uint64_t v229 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController;
  uint64_t v230 = *(void *)&v77[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController];
  uint64_t v231 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  uint64_t v232 = *(void *)(v230 + 16);
  *(void *)(v230 + 16) = closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  *(void *)(v230 + 24) = v231;
  uint64_t v233 = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v232);
  uint64_t v234 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 368))(v233);
  if (v234)
  {
    uint64_t v235 = *(void *)&v77[v229];
    uint64_t v236 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    uint64_t v237 = *(void *)(v235 + 32);
    *(void *)(v235 + 32) = partial apply for closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
    *(void *)(v235 + 40) = v236;
    uint64_t v234 = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v237);
  }
  char v238 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 136))(v234);
  uint64_t v239 = v252;
  if (v238)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    objc_msgSend(v239, sel_setUplinkMuted_, 1);
  }
  MultiwayViewController.testing_callStatusDidChange(_:)((int)objc_msgSend(v239, sel_status));
  uint64_t v240 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  swift_retain();
  uint64_t v241 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000027, 0x80000001C3797120, v241, (uint64_t)partial apply for closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v240);
  swift_release_n();

  uint64_t v242 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  long long v243 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000028, 0x80000001C3797150, v243, (uint64_t)partial apply for closure #54 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v242);
  swift_release_n();

  MultiwayViewController.registerForSystemEventsIfNecessary()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  long long v244 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static ScreenSharingInteractionController.shared)
                          + 0x1C8);
  char v245 = v77;
  v244();

  swift_release();
  return v245;
}