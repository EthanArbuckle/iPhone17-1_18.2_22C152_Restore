uint64_t destroy for SplitHStack.SizeInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for CallScreeningInitialState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *destructiveInjectEnumTag for ConversationControlsContext(unsigned char *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for RecentsCallHandle()
{
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance SharePlayAppType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

void type metadata accessor for RecentsCallHandleType()
{
}

uint64_t partial apply for closure #2 in CallScreeningEndingState.enteredState()()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

id RecentsCallItem.titleColor.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for RecentsCallItem(0) + 40));
  return v1;
}

uint64_t RecentsCallItem.subtitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

void *RecentsCallItem.applicationIcon.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for RecentsCallItem(0) + 44));
  id v2 = v1;
  return v1;
}

uint64_t RecentsCallItem.title.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t RecentsCallItem.occurrenceCount.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t RecentsCallItem.senderIdentity.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t RecentCallRecentItemMetadata.init(uniqueId:date:recentCall:mediaType:remoteParticipantHandles:countOfExcludedHandles:groupUUID:conversationLink:conversationID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, long long *a11, uint64_t a12)
{
  long long v26 = *a11;
  uint64_t v25 = *((void *)a11 + 2);
  v19 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
  uint64_t v20 = v19[6];
  v21 = (char *)a9 + v19[11];
  *(void *)((char *)a9 + v19[13]) = 0;
  *a9 = a1;
  a9[1] = a2;
  outlined init with take of RecentsCollectionViewSectionable?(a3, (uint64_t)a9 + v19[5], (uint64_t *)&demangling cache variable for type metadata for Date?);
  *(void *)((char *)a9 + v20) = a4;
  v22 = (char *)a9 + v19[7];
  *(void *)v22 = a5;
  v22[8] = a6 & 1;
  *(void *)((char *)a9 + v19[8]) = a7;
  *(void *)((char *)a9 + v19[9]) = a8;
  outlined init with take of RecentsCollectionViewSectionable?(a10, (uint64_t)a9 + v19[10], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_OWORD *)v21 = v26;
  *((void *)v21 + 2) = v25;
  return outlined init with take of RecentsCollectionViewSectionable?(a12, (uint64_t)a9 + v19[12], (uint64_t *)&demangling cache variable for type metadata for UUID?);
}

void specialized static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v10 = *v9;
  v11 = (uint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v83 = MEMORY[0x1E4FBC860];
  v12 = (void *)type metadata accessor for UUID();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [GroupCombinable]);
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BCA0]);
  uint64_t v82 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v13 = *(void *)(v8 + 16);
  if (v13)
  {
    unsigned int v80 = v10;
    uint64_t v75 = v4;
    uint64_t v76 = v6;
    uint64_t v77 = v2;
    v14 = (void *)(v8 + 32);
    v81 = v12;
    OUTLINED_FUNCTION_45_11(*(void *)(*(v12 - 1) + 64));
    uint64_t v74 = v8;
    uint64_t v15 = swift_bridgeObjectRetain();
    long long v78 = xmmword_1C3769620;
    while (1)
    {
      uint64_t v0 = &v74;
      MEMORY[0x1F4188790](v15);
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v17 = OUTLINED_FUNCTION_8(v16);
      MEMORY[0x1F4188790](v17);
      OUTLINED_FUNCTION_20_45();
      OUTLINED_FUNCTION_57_8();
      v19(v18);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v81) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined init with copy of IDSLookupManager((uint64_t)v14, (uint64_t)v84);
        uint64_t v20 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_28_5();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v20 = v49;
        }
        unint64_t v21 = *(void *)(v20 + 16);
        v11 = (uint64_t *)(v21 + 1);
        if (v21 >= *(void *)(v20 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v20 = v50;
        }
        *(void *)(v20 + 16) = v11;
        uint64_t v15 = outlined init with take of Notice(v84, v20 + 40 * v21 + 32);
        uint64_t v83 = v20;
        v12 = &demangling cache variable for type metadata for UUID?;
        goto LABEL_32;
      }
      v79 = &v74;
      OUTLINED_FUNCTION_89_4();
      v23(v22);
      uint64_t v24 = v82;
      if (*(void *)(v82 + 16) && (unint64_t v25 = specialized __RawDictionaryStorage.find<A>(_:)(), (v26 & 1) != 0))
      {
        uint64_t v0 = *(uint64_t **)(*(void *)(v24 + 56) + 8 * v25);
        outlined init with copy of IDSLookupManager((uint64_t)v14, (uint64_t)v84);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_28_5();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v0 = v51;
        }
        unint64_t v27 = v0[2];
        if (v27 >= (unint64_t)v0[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v0 = v52;
        }
        v0[2] = v27 + 1;
        outlined init with take of Notice(v84, (uint64_t)&v0[5 * v27 + 4]);
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_53_11();
        OUTLINED_FUNCTION_88_4();
        if (v30) {
          goto LABEL_80;
        }
        unint64_t v31 = v28;
        char v32 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>);
        if (OUTLINED_FUNCTION_82_7())
        {
          unint64_t v33 = specialized __RawDictionaryStorage.find<A>(_:)();
          if ((v32 & 1) != (v34 & 1)) {
            goto LABEL_83;
          }
          unint64_t v31 = v33;
        }
        uint64_t v35 = *(void *)&v84[0];
        if ((v32 & 1) == 0)
        {
          uint64_t v36 = OUTLINED_FUNCTION_10_68();
          v37(v36);
          *(void *)(*(void *)(v35 + 56) + 8 * v31) = v0;
          OUTLINED_FUNCTION_86_7();
          if (v30) {
            goto LABEL_81;
          }
LABEL_30:
          *(void *)(v35 + 16) = v38;
          goto LABEL_31;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GroupCombinable>);
        uint64_t v0 = (uint64_t *)swift_allocObject();
        *((_OWORD *)v0 + 1) = v78;
        outlined init with copy of IDSLookupManager((uint64_t)v14, (uint64_t)(v0 + 4));
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_53_11();
        OUTLINED_FUNCTION_88_4();
        if (v30) {
          goto LABEL_78;
        }
        unint64_t v31 = v39;
        char v41 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>);
        if (OUTLINED_FUNCTION_82_7())
        {
          unint64_t v42 = specialized __RawDictionaryStorage.find<A>(_:)();
          if ((v41 & 1) != (v43 & 1)) {
            goto LABEL_83;
          }
          unint64_t v31 = v42;
        }
        uint64_t v35 = *(void *)&v84[0];
        if ((v41 & 1) == 0)
        {
          uint64_t v45 = OUTLINED_FUNCTION_10_68();
          v46(v45);
          *(void *)(*(void *)(v35 + 56) + 8 * v31) = v0;
          OUTLINED_FUNCTION_86_7();
          if (v30) {
            goto LABEL_79;
          }
          goto LABEL_30;
        }
      }
      uint64_t v44 = *(void *)(v35 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v44 + 8 * v31) = v0;
LABEL_31:
      uint64_t v82 = v35;
      swift_bridgeObjectRelease();
      v12 = &demangling cache variable for type metadata for UUID?;
      v11 = v79;
      OUTLINED_FUNCTION_69_0();
      OUTLINED_FUNCTION_26_2();
      uint64_t v15 = v48(v47);
LABEL_32:
      v14 += 5;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v76;
        uint64_t v4 = v75;
        unint64_t v10 = v80;
        break;
      }
    }
  }
  uint64_t v53 = *(void *)(v6 + 16);
  if (v53)
  {
    v11 = (uint64_t *)(v6 + 32);
    swift_bridgeObjectRetain();
    do
    {
      specialized closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v11, v10, &v83, &v82, v4);
      v11 += 5;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease();
  }
  specialized _NativeDictionary.makeIterator()(v84, v82);
  OUTLINED_FUNCTION_36_21();
  uint64_t v54 = MEMORY[0x1E4FBC860];
  while (!__OFADD__(v6, 1))
  {
    if (v6 + 1 >= (uint64_t)v11) {
      goto LABEL_72;
    }
    OUTLINED_FUNCTION_84_6();
    if (!v56)
    {
      if (v55 + 1 >= (uint64_t)v11) {
        goto LABEL_72;
      }
      OUTLINED_FUNCTION_35_17();
      if (!v58)
      {
        if (v57 + 2 >= (uint64_t)v11) {
          goto LABEL_72;
        }
        OUTLINED_FUNCTION_35_17();
        if (!v60)
        {
          if (v59 + 3 >= (uint64_t)v11) {
            goto LABEL_72;
          }
          OUTLINED_FUNCTION_35_17();
          if (!v62)
          {
            if (v61 + 4 >= (uint64_t)v11) {
              goto LABEL_72;
            }
            OUTLINED_FUNCTION_35_17();
            if (!v64)
            {
              if (v63 + 5 >= (uint64_t)v11) {
                goto LABEL_72;
              }
              OUTLINED_FUNCTION_84_6();
              if (!v71)
              {
                uint64_t v72 = v6 + 7;
                while (v72 < (uint64_t)v11)
                {
                  if (v81[v72++]) {
                    goto LABEL_50;
                  }
                }
LABEL_72:
                swift_bridgeObjectRelease();
                swift_release();
                specialized Array.append<A>(contentsOf:)();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_28();
                return;
              }
            }
          }
        }
      }
    }
LABEL_50:
    OUTLINED_FUNCTION_49_12();
    OUTLINED_FUNCTION_70_6();
    if (v30)
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      break;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)v0 > *(void *)(v54 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v54 = v65;
    }
    if (*(void *)(v4 + 16))
    {
      OUTLINED_FUNCTION_83_6();
      if (v66 != v30) {
        goto LABEL_75;
      }
      OUTLINED_FUNCTION_34_23();
      BOOL v68 = v68 || v10 >= v67;
      if (!v68) {
        goto LABEL_82;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupCombinable);
      OUTLINED_FUNCTION_76_7();
      if (v12)
      {
        uint64_t v69 = *(void *)(v54 + 16);
        BOOL v30 = __OFADD__(v69, v12);
        v70 = (char *)v12 + v69;
        if (v30) {
          goto LABEL_76;
        }
        *(void *)(v54 + 16) = v70;
      }
    }
    else if (v12)
    {
      goto LABEL_74;
    }
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  OUTLINED_FUNCTION_50_13();
  OUTLINED_FUNCTION_60_9();
  __break(1u);
LABEL_83:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t OUTLINED_FUNCTION_127()
{
  return v0;
}

void OUTLINED_FUNCTION_127_1(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = v11;
  uint64_t v14 = v10;
  String.append(_:)(*(Swift::String *)&v13);
}

uint64_t OUTLINED_FUNCTION_127_2()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_127_4()
{
  return swift_slowAlloc();
}

unint64_t OUTLINED_FUNCTION_127_6()
{
  return 0xD000000000000010;
}

void OUTLINED_FUNCTION_127_7(uint64_t a1)
{
  closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void RecentsCallItem.combiningUUIDForLinks.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RecentCallRecentItemMetadata(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1F4188790](v7);
  v9 = (id *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v2, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v9, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v10 = type metadata accessor for UUID();
      __swift_storeEnumTagSinglePayload(a1, 1, 1, v10);
      break;
    case 2u:
      id v11 = *v9;
      swift_bridgeObjectRetain();
      swift_retain();
      id v12 = objc_msgSend(v11, sel_groupUUID);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      MEMORY[0x1F4188790](v13 - 8);
      uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v12)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v16 = 0;
      }
      else
      {
        uint64_t v16 = 1;
      }
      uint64_t v17 = type metadata accessor for UUID();
      __swift_storeEnumTagSinglePayload((uint64_t)v15, v16, 1, v17);
      outlined init with take of RecentsCollectionViewSectionable?((uint64_t)v15, a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      swift_release_n();
      swift_bridgeObjectRelease_n();

      break;
    default:
      _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v9, (uint64_t)v6);
      _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v6[*(int *)(v4 + 40)], a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v6, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      break;
  }
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  OUTLINED_FUNCTION_6_28();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (void *)OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_13_16(v7);
  }
  if (v1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_23_10();
    v0(v8);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_27_9();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v9, v10);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_44_1();
  if (v2)
  {
    OUTLINED_FUNCTION_4_23();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_9_24();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGRect>);
    char v5 = (const void *)OUTLINED_FUNCTION_15_2();
    uint64_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_51_1((uint64_t)(v6 - 32) / 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_48_7();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v8, v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_18_19();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11, v12, v13);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t *v6;
  const void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_28();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (const void *)OUTLINED_FUNCTION_15_2();
    uint64_t v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_25((uint64_t)(v8 - 32) / 16);
  }
  if (v1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_10();
    v0(v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_27_9();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_28();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_15_2();
    uint64_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_25((uint64_t)(v9 - 32) / 16);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_23_10();
    v1(v10);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    id v11 = OUTLINED_FUNCTION_17_18();
    v0(v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_44_1();
  if (v2)
  {
    OUTLINED_FUNCTION_4_23();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_9_24();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    char v5 = (const void *)OUTLINED_FUNCTION_15_2();
    uint64_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_51_1((uint64_t)(v6 - 32) / 4);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_48_7();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v8, v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_18_19();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11, v12, v13);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_28();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (const void *)OUTLINED_FUNCTION_15_2();
    uint64_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_25((uint64_t)(v9 - 32) / 8);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_23_10();
    v1(v10);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    id v11 = OUTLINED_FUNCTION_17_18();
    v0(v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t *v6;
  const void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_28();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (const void *)OUTLINED_FUNCTION_15_2();
    uint64_t v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_25((uint64_t)(v8 - 32) / 8);
  }
  if (v1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_10();
    v0(v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_27_9();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_6_28();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (void *)OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_13_16(v8);
  }
  if (v2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_10();
    v1(v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_17_18();
    v0(v10);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_6_28();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (void *)OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_13_16(v8);
  }
  if (v2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_10();
    v1(v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_17_18();
    v0(v10);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_44_1();
  if (v2)
  {
    OUTLINED_FUNCTION_4_23();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_9_24();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationLink>);
    char v5 = (const void *)swift_allocObject();
    uint64_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_51_1((uint64_t)(v6 - 32) / 24);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_48_7();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v8, v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_18_19();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v10, v11, v12, v13);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  void *v6;
  size_t v7;
  char *v8;
  size_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SharePlayDiscoverabilityType>);
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    uint64_t v8 = (char *)OUTLINED_FUNCTION_48_7();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v8, v9, v10);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    id v11 = OUTLINED_FUNCTION_18_19();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v11, v12, v13, v14);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_6_28();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    uint64_t v8 = (void *)OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_13_16(v8);
  }
  if (v2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_10();
    v1(v9);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_17_18();
    v0(v10);
  }
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_26()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_27(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_13_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v4, a3);
}

void OUTLINED_FUNCTION_0_0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(v2 + a2);
  *(void *)(v2 + a2) = a1;
}

uint64_t OUTLINED_FUNCTION_6()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_1(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_6_0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

double OUTLINED_FUNCTION_13_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return swift_beginAccess();
}

BOOL OUTLINED_FUNCTION_13_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  a63 = v65;
  a64 = v64;
  return static SystemApertureIconFactory.CallDescriptor.== infix(_:_:)((uint64_t *)&STACK[0x260], &a63);
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  return swift_beginAccess();
}

BOOL OUTLINED_FUNCTION_12(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_29()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_37()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_13_7(double a1)
{
  *(double *)(v1 - 120) = a1;
}

uint64_t OUTLINED_FUNCTION_11()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_13_10()
{
  *(void *)uint64_t v6 = v4;
  *(void *)(v6 + 8) = v3;
  *(unsigned char *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v5;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v0;
}

uint64_t OUTLINED_FUNCTION_20()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_34(unsigned __int8 *a1)
{
  return *a1;
}

size_t OUTLINED_FUNCTION_13_16(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void OUTLINED_FUNCTION_25(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_13_18(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void *OUTLINED_FUNCTION_37_0()
{
  return malloc(0x28uLL);
}

id OUTLINED_FUNCTION_13_19()
{
  return [v1 (SEL)(v0 + 1304)];
}

void *OUTLINED_FUNCTION_13_20()
{
  return memcpy((void *)(v1 - 216), (const void *)(v0 + 536), 0x80uLL);
}

uint64_t OUTLINED_FUNCTION_13_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_2@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  return outlined consume of Participant.CopresenceInfo?(v2, v3);
}

uint64_t OUTLINED_FUNCTION_13_23@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002CLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_13_24(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_98(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

BOOL OUTLINED_FUNCTION_107(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_168(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_13_28()
{
  JUMPOUT(0x1C8770AF0);
}

void OUTLINED_FUNCTION_13_31()
{
  uint64_t v4 = *(void *)(v3 + 56) + 6 * v2;
  *(_WORD *)(v4 + 4) = v1;
  *(_DWORD *)uint64_t v4 = v0;
}

uint64_t OUTLINED_FUNCTION_13_32()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_13_34(void *a1)
{
  int v3 = *(_DWORD *)(v1 + 32);
  return ConversationControlsDialogButtonProvider.init(controlsManager:context:)(a1, v3);
}

uint64_t OUTLINED_FUNCTION_13_36()
{
  return v0;
}

void OUTLINED_FUNCTION_13_37()
{
  JUMPOUT(0x1C87733A0);
}

double OUTLINED_FUNCTION_4_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_40()
{
  return v0;
}

void OUTLINED_FUNCTION_13_41()
{
  JUMPOUT(0x1C87733A0);
}

id OUTLINED_FUNCTION_13_43(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_13_44@<X0>(char a1@<W8>)
{
  **(unsigned char **)(v1 + 40) = a1;
  return v1 + 8;
}

id OUTLINED_FUNCTION_13_46()
{
  return [v0 (SEL)(v1 + 1944)];
}

void *OUTLINED_FUNCTION_45()
{
  return malloc(0x40uLL);
}

uint64_t OUTLINED_FUNCTION_119()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_13_49()
{
  return CurrentValueSubject.send(_:)();
}

id OUTLINED_FUNCTION_13_50(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 0.0, 0.0, 0.0, 0.0);
}

uint64_t OUTLINED_FUNCTION_13_51()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_13_52(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_53(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_13_55(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_58()
{
  return _ConditionalContent<>.init(storage:)();
}

BOOL OUTLINED_FUNCTION_13_62()
{
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  uint64_t v16 = v8;
  return CGRectEqualToRect(*(CGRect *)&v9, *(CGRect *)&v13);
}

uint64_t OUTLINED_FUNCTION_13_63()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_64(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_13_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_67()
{
  __swift_getEnumTagSinglePayload(v1, 1, v0);
  return outlined destroy of UUID?(v1);
}

id OUTLINED_FUNCTION_13_68()
{
  return v0;
}

void OUTLINED_FUNCTION_13_69()
{
  *(void *)(v1 + 8 * (v2 >> 6) + 64) |= 1 << v2;
  *(void *)(*(void *)(v1 + 48) + 8 * v2) = v0;
}

uint64_t OUTLINED_FUNCTION_13_70()
{
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_13_71()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_13_72(uint64_t result)
{
  void *v1 = result;
  *(void *)(result + 32) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_73()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_13_74(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_13_75()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_76()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_77(uint64_t result)
{
  *(void *)(v1 - 288) = result;
  return result;
}

id OUTLINED_FUNCTION_13_79(void *a1)
{
  return [a1 (SEL)(v1 + 1944)];
}

id OUTLINED_FUNCTION_13_81(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 1);
}

uint64_t OUTLINED_FUNCTION_13_82()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_90()
{
  return v0;
}

void OUTLINED_FUNCTION_0_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_3()
{
  JUMPOUT(0x1C87760E0);
}

uint64_t OUTLINED_FUNCTION_10(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

_WORD *OUTLINED_FUNCTION_23_1(_WORD *result)
{
  *size_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_30(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_23_2(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_1_1(uint64_t a1)
{
  return a1 - 8;
}

double OUTLINED_FUNCTION_6_2()
{
  return v0;
}

id OUTLINED_FUNCTION_23_4(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0, v3);
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return v0;
}

int32x2_t OUTLINED_FUNCTION_23_6@<D0>(int64x2_t *a1@<X8>)
{
  return vmovn_s64(vceqq_s64(*a1, *v1));
}

uint64_t OUTLINED_FUNCTION_23_7()
{
  return v0 - 136;
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  return type metadata accessor for Date();
}

void OUTLINED_FUNCTION_23_12(unint64_t a1@<X8>)
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v2, 1, v1);
}

void OUTLINED_FUNCTION_23_13()
{
}

double OUTLINED_FUNCTION_23_14()
{
  return 0.0;
}

void OUTLINED_FUNCTION_23_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 288) = &a9;
}

uint64_t OUTLINED_FUNCTION_23_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_106()
{
  return v0 + v1;
}

uint64_t OUTLINED_FUNCTION_23_22()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

_WORD *OUTLINED_FUNCTION_23_24(_WORD *result)
{
  *size_t result = 0;
  return result;
}

id OUTLINED_FUNCTION_23_25(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v3, v5, v4, v4);
}

uint64_t OUTLINED_FUNCTION_23_26()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

unint64_t OUTLINED_FUNCTION_23_27()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_23_29@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

uint64_t OUTLINED_FUNCTION_23_30(uint64_t result)
{
  *(void *)(v1 - 72) = result;
  return result;
}

void OUTLINED_FUNCTION_23_31()
{
  JUMPOUT(0x1C87733A0);
}

uint64_t OUTLINED_FUNCTION_23_32()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_33()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_23_34(uint64_t a1)
{
  return outlined consume of SessionActionNotice.NoticeType(a1, 0, 0xC000000000000000);
}

char *OUTLINED_FUNCTION_23_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,int a22,int a23,void *a24)
{
  uint64_t v36 = *(void *)(v34 - 104);
  v37 = *(char **)(v34 - 96);
  return specialized SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(v32, v31, v30, a21, a23, a24, v36, v37, v29, v28, v33, a19, a20, v24, v26, v25, a1, v27);
}

double OUTLINED_FUNCTION_23_36(double a1, double a2)
{
  return a1 * a2;
}

id OUTLINED_FUNCTION_23_37()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_23_39()
{
  return static Published.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_23_40(uint64_t a1)
{
  *(void *)(v1 - 192) = a1;
  return v1 - 192;
}

BOOL OUTLINED_FUNCTION_23_42(Swift::Bool a1)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(a1, v1);
}

id OUTLINED_FUNCTION_23_43()
{
  return [v1 (SEL)(v0 + 1752)];
}

uint64_t OUTLINED_FUNCTION_23_44(uint64_t a1)
{
  *(void *)(v1 + 280) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_23_45()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_23_46()
{
  return type metadata accessor for RemoteControlRequest(0);
}

uint64_t OUTLINED_FUNCTION_23_47()
{
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[33];
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[35];
  uint64_t v7 = v0[36];
  unint64_t v8 = v0[37];
  return outlined consume of CallScreening.State(v2, v3, v4, v5, v6, v7, v8);
}

id OUTLINED_FUNCTION_23_48(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v4, v2, v6);
}

uint64_t OUTLINED_FUNCTION_23_49(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_23_50@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

void *OUTLINED_FUNCTION_23_52()
{
  return closure #1 in variable initialization expression of LocalParticipantControlsView.collapseButton();
}

id OUTLINED_FUNCTION_23_53()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_23_54()
{
  return static Published.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_23_55()
{
  return type metadata accessor for ButtonRole();
}

double OUTLINED_FUNCTION_23_56()
{
  *(void *)(v0 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(unsigned char *)(v0 + 40) = -1;
  return result;
}

id OUTLINED_FUNCTION_23_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v8, (SEL)(v6 + 2840), v7, v5, a5, 0);
}

uint64_t OUTLINED_FUNCTION_23_59()
{
  return v0;
}

double OUTLINED_FUNCTION_23_60()
{
  uint64_t v7 = *(void **)(v0 + 384);
  return specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v2, v1, v7, v4, v5, v6, v6);
}

uint64_t OUTLINED_FUNCTION_23_61(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_23_62(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t OUTLINED_FUNCTION_23_63()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_23_64@<W0>(unint64_t a1@<X8>)
{
  return a1 < 3;
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_45_8(a3, result, 56 * a2);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    double result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[72 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_83(a3, result);
  }
  return result;
}

void specialized _arrayForceCast<A, B>(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v20 = v1;
  uint64_t v3 = v2;
  double v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_64();
  unint64_t v12 = *(void *)(v7 + 16);
  if (v12)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    v19 = v5;
    v5(0, v12, 0);
    uint64_t v13 = v22;
    uint64_t v14 = v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v15 = *(void *)(v10 + 72);
    do
    {
      _s15ConversationKit0A14ControlsActionOWOcTm_0(v14, v0);
      uint64_t v22 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        v19(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v22;
      }
      v21[3] = v8;
      v21[4] = v3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
      _s15ConversationKit0A14ControlsActionOWOcTm_0(v0, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v13 + 16) = v17 + 1;
      v20(v21, v13 + 40 * v17 + 32);
      _s15ConversationKit0A14ControlsActionOWOhTm_0(v0, (void (*)(void))type metadata accessor for RecentsCallItem);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_28();
}

{
  specialized _arrayForceCast<A, B>(_:)();
}

{
  specialized _arrayForceCast<A, B>(_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16[6];

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_84_0();
  if (v2)
  {
    OUTLINED_FUNCTION_32();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_3_20();
  }
  else
  {
    OUTLINED_FUNCTION_82_1();
  }
  if (!v1)
  {
LABEL_14:
    OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_28();
    return;
  }
  OUTLINED_FUNCTION_58_3();
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = 0;
    do
    {
      if ((v0 & 0xC000000000000001) != 0) {
        OUTLINED_FUNCTION_81_1();
      }
      else {
        OUTLINED_FUNCTION_79_2();
      }
      double v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      double v5 = OUTLINED_FUNCTION_56_4(v4);
      if (v7)
      {
        OUTLINED_FUNCTION_49_6(v6);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v8 = v16[3];
      }
      else
      {
        uint64_t v8 = v5;
      }
      ++v3;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v8);
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v9);
      uint64_t v11 = OUTLINED_FUNCTION_25_19(v10, v16[0]);
      v12(v11);
      uint64_t v13 = OUTLINED_FUNCTION_50_6();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
    while (v1 != v3);
    goto LABEL_14;
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_84_0();
  if (v2)
  {
    OUTLINED_FUNCTION_32();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_3_20();
  }
  else
  {
    OUTLINED_FUNCTION_82_1();
  }
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v1 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = 0;
      do
      {
        if ((v0 & 0xC000000000000001) != 0) {
          OUTLINED_FUNCTION_81_1();
        }
        else {
          double v4 = OUTLINED_FUNCTION_79_2();
        }
        double v5 = v4;
        uint64_t v6 = *(void *)(v9 + 16);
        if (v6 >= *(void *)(v9 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v3;
        uint64_t v7 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
        *(void *)(v9 + 16) = v6 + 1;
        uint64_t v8 = v9 + 16 * v6;
        *(void *)(v8 + 32) = v5;
        *(void *)(v8 + 40) = v7;
      }
      while (v1 != v3);
    }
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[6];

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_84_0();
  if (v2)
  {
    OUTLINED_FUNCTION_32();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_3_20();
  }
  else
  {
    OUTLINED_FUNCTION_82_1();
  }
  if (!v1)
  {
LABEL_14:
    OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_28();
    return;
  }
  OUTLINED_FUNCTION_58_3();
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = 0;
    do
    {
      if ((v0 & 0xC000000000000001) != 0) {
        OUTLINED_FUNCTION_81_1();
      }
      else {
        OUTLINED_FUNCTION_79_2();
      }
      double v4 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
      double v5 = OUTLINED_FUNCTION_56_4(v4);
      if (v7)
      {
        OUTLINED_FUNCTION_49_6(v6);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v8 = v18[3];
      }
      else
      {
        uint64_t v8 = v5;
      }
      ++v3;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v8);
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v9);
      uint64_t v11 = OUTLINED_FUNCTION_25_19(v10, v18[0]);
      v12(v11);
      uint64_t v13 = OUTLINED_FUNCTION_50_6();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v14, v15, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    while (v1 != v3);
    goto LABEL_14;
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  long long v13;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Collaboration(0);
  OUTLINED_FUNCTION_5_3();
  double v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16_0();
  uint64_t v7 = *(void *)(v2 + 16);
  if (v7)
  {
    unint64_t v16 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v8 = v16;
    uint64_t v9 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v10 = *(void *)(v5 + 72);
    do
    {
      _s15ConversationKit0A14ControlsActionOWOcTm_0(v9, v0);
      unint64_t v16 = v8;
      uint64_t v11 = *(void *)(v8 + 16);
      if (v11 >= *(void *)(v8 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v8 = v16;
      }
      uint64_t v14 = v3;
      uint64_t v15 = &protocol witness table for Collaboration;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
      _s15ConversationKit0A14ControlsActionOWOcTm_0(v0, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v8 + 16) = v11 + 1;
      outlined init with take of Notice(&v13, v8 + 40 * v11 + 32);
      _s15ConversationKit0A14ControlsActionOWOhTm_0(v0, (void (*)(void))type metadata accessor for Collaboration);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_28();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  unint64_t v5;
  long long v6;
  uint64_t v7;

  OUTLINED_FUNCTION_84_0();
  if (v2)
  {
    OUTLINED_FUNCTION_32();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_3_20();
  }
  else
  {
    OUTLINED_FUNCTION_82_1();
  }
  if (v1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v1 < 0)
    {
      __break(1u);
    }
    else
    {
      for (i = 0; i != v1; ++i)
      {
        if ((v0 & 0xC000000000000001) != 0) {
          OUTLINED_FUNCTION_81_1();
        }
        else {
          OUTLINED_FUNCTION_79_2();
        }
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSExtensionItem);
        swift_dynamicCast();
        double v4 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          double v4 = v7;
        }
        double v5 = *(void *)(v4 + 16);
        if (v5 >= *(void *)(v4 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          double v4 = v7;
        }
        *(void *)(v4 + 16) = v5 + 1;
        outlined init with take of Any(&v6, (_OWORD *)(v4 + 32 * v5 + 32));
      }
    }
  }
}

uint64_t outlined init with take of Notice(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t outlined init with copy of ConversationControlsAction(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_48();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t _s15ConversationKit0A14ControlsActionOWOcTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_89();
  v5(v4);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t outlined destroy of ConversationControlsAction(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t _s15ConversationKit0A14ControlsActionOWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t _s15ConversationKit0A14ControlsActionOWOhTm_1(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s15ConversationKit0A14ControlsActionOWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void RecentsCallItem.init(recentsCallMetadata:contacts:title:subtitle:forcedSubtitle:senderIdentity:occurrenceCount:applicationIcon:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  OUTLINED_FUNCTION_31();
  uint64_t v165 = v28;
  uint64_t v166 = v29;
  uint64_t v159 = v30;
  uint64_t v160 = v31;
  v175 = v32;
  unint64_t v34 = (unint64_t)v33;
  uint64_t v36 = v35;
  v170 = v37;
  uint64_t v171 = a26;
  uint64_t v168 = a24;
  id v169 = a25;
  uint64_t v163 = a23;
  v164 = v38;
  uint64_t v167 = a22;
  uint64_t v162 = a21;
  uint64_t v39 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_10_5();
  uint64_t v161 = v41;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v158 - v43;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  uint64_t v46 = OUTLINED_FUNCTION_8(v45);
  MEMORY[0x1F4188790](v46);
  v48 = (char *)&v158 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v50);
  OUTLINED_FUNCTION_106_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v51);
  OUTLINED_FUNCTION_63();
  v173 = v52;
  uint64_t v53 = v52[14];
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  uint64_t v172 = v27;
  *(void *)(v27 + v53) = v54;
  uint64_t v55 = (int *)v39;
  uint64_t v56 = *(int *)(v39 + 32);
  v174 = (void *)v34;
  uint64_t v57 = *(void *)(v34 + v56);
  if (v57) {
    uint64_t v57 = *(void *)(v57 + 16);
  }
  uint64_t v58 = *(void *)((char *)v174 + *(int *)(v39 + 36));
  BOOL v59 = __OFADD__(v57, v58);
  uint64_t v60 = v57 + v58;
  if (v59)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v76) {
      goto LABEL_18;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    long long v78 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_33;
  }
  uint64_t v39 = v36;
  if (v60 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    outlined destroy of SystemUpdateNotice?(v171, &demangling cache variable for type metadata for RecentsCallItemType?);
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v174, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);

    OUTLINED_FUNCTION_218();
    OUTLINED_FUNCTION_28();
    __swift_storeEnumTagSinglePayload(v62, v63, v64, v65);
    return;
  }
  _s15ConversationKit11ParticipantVSgWOcTm_0(v171, (uint64_t)v48, &demangling cache variable for type metadata for RecentsCallItemType?);
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v174, (uint64_t)v44);
  OUTLINED_FUNCTION_33_0((uint64_t)v48, 1, v49);
  if (v61)
  {
    _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v44, v26);
    swift_storeEnumTagMultiPayload();
    outlined destroy of SystemUpdateNotice?((uint64_t)v48, &demangling cache variable for type metadata for RecentsCallItemType?);
  }
  else
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v44, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
    _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v48, v26);
  }
  unint64_t v34 = (unint64_t)v175;
  uint64_t v67 = v172;
  _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v26, v172);
  BOOL v68 = v173;
  uint64_t v69 = v174;
  v70 = (int **)(v67 + v173[5]);
  uint64_t v71 = v170;
  char *v70 = v164;
  v70[1] = v71;
  *(void *)(v67 + v68[12]) = v34;
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v69 + v55[5], v67 + v68[9], (uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v72 = *(void **)((char *)v69 + v55[6]);
  if (v72)
  {
    swift_bridgeObjectRetain();
    unsigned int v73 = objc_msgSend(v72, sel_callStatus);
    if (v73 == *MEMORY[0x1E4F57CB8])
    {
      uint64_t v74 = &selRef_systemRedColor;
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v74 = &selRef_whiteColor;
LABEL_16:
  id v75 = [self *v74];
  *(void *)(v172 + v173[10]) = v75;
  if (v34 >> 62) {
    goto LABEL_31;
  }
  uint64_t v76 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v76) {
    goto LABEL_32;
  }
LABEL_18:
  v176 = (void *)MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v76 & 0x8000000000000000) == 0)
  {
    v164 = v55;
    v170 = (int *)v39;
    uint64_t v77 = 0;
    long long v78 = v176;
    unint64_t v79 = v34 & 0xC000000000000001;
    do
    {
      if (v79)
      {
        uint64_t v80 = OUTLINED_FUNCTION_217_0();
        id v81 = (id)MEMORY[0x1C87744F0](v80);
      }
      else
      {
        id v81 = *(id *)(v34 + 8 * v77 + 32);
      }
      uint64_t v82 = v81;
      if (objc_msgSend(v81, sel_hasBeenPersisted))
      {
        id v83 = objc_msgSend(v82, sel_identifier);
        uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v86 = v85;
      }
      else
      {

        uint64_t v84 = 0;
        unint64_t v86 = 0xE000000000000000;
      }
      v176 = v78;
      unint64_t v87 = v78[2];
      if (v87 >= v78[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        long long v78 = v176;
      }
      ++v77;
      v78[2] = v87 + 1;
      v88 = &v78[2 * v87];
      v88[4] = v84;
      v88[5] = v86;
      unint64_t v34 = (unint64_t)v175;
    }
    while (v76 != v77);
    swift_bridgeObjectRelease();
    uint64_t v39 = (uint64_t)v170;
    uint64_t v55 = v164;
LABEL_33:
    v176 = v78;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]();
    BidirectionalCollection<>.joined(separator:)();
    OUTLINED_FUNCTION_42_1();
    swift_bridgeObjectRelease();
    v89 = v174;
    v90 = (void *)v174[1];
    v176 = (void *)*v174;
    v177 = v90;
    swift_bridgeObjectRetain();
    v91._countAndFlagsBits = OUTLINED_FUNCTION_24_2();
    String.append(_:)(v91);
    swift_bridgeObjectRelease();
    v93 = v176;
    v92 = v177;
    v94 = (char *)v89 + v55[11];
    v95 = *(void **)v94;
    if (*(void *)v94)
    {
      v97 = (void *)*((void *)v94 + 1);
      v96 = (void *)*((void *)v94 + 2);
      v176 = *(void **)v94;
      v177 = v97;
      v178 = v96;
      id v98 = v95;
      swift_bridgeObjectRetain();
      swift_retain();
      ConversationLink.uniqueId.getter();
      uint64_t v100 = v99;
      v102 = v101;
      v176 = v93;
      v177 = v92;
      swift_bridgeObjectRetain();
      v103._countAndFlagsBits = v100;
      v103._object = v102;
      String.append(_:)(v103);
      outlined consume of ConversationLink?(v95);
      swift_bridgeObjectRelease();
      v104 = v176;
      v105 = v177;
    }
    else
    {
      v104 = 0;
      v105 = 0;
    }
    uint64_t v106 = v161;
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v174, v161);
    uint64_t v107 = v166;
    if (v166)
    {
      swift_bridgeObjectRelease();
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v106, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      uint64_t v108 = v160;
    }
    else
    {
      v109 = (void **)(v106 + v55[11]);
      v110 = *v109;
      if (*v109)
      {
        v170 = (int *)v39;
        v111 = v55;
        v113 = v109[1];
        v112 = v109[2];
        v176 = v110;
        v177 = v113;
        v178 = v112;
        uint64_t v114 = ConversationLink.displayName.getter();
        if (v115
          || (v176 = v110,
              v177 = v113,
              v178 = v112,
              static RecentsCallItem.formattedOriginatorTitleFromLink(_:in:)((uint64_t)&v176, 0),
              v115))
        {
          uint64_t v107 = v115;
          uint64_t v108 = v114;
          uint64_t v55 = v111;
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v106, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
          swift_bridgeObjectRelease();
        }
        else
        {
          v150 = (objc_class *)objc_msgSend(self, sel_conversationKit);
          OUTLINED_FUNCTION_190_0();
          OUTLINED_FUNCTION_4_6();
          v151.super.isa = v150;
          uint64_t v156 = OUTLINED_FUNCTION_2_29(v152, v153, v154, v155, v151);
          uint64_t v107 = v157;

          _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v106, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
          swift_bridgeObjectRelease();
          uint64_t v108 = v156;
          uint64_t v55 = v111;
        }
        uint64_t v39 = (uint64_t)v170;
      }
      else
      {
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v106, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        uint64_t v108 = v159;
        uint64_t v107 = v165;
      }
    }
    v116 = (uint64_t *)(v172 + v173[6]);
    uint64_t *v116 = v108;
    v116[1] = v107;
    if (v105)
    {
      outlined destroy of SystemUpdateNotice?(v171, &demangling cache variable for type metadata for RecentsCallItemType?);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v174, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      swift_bridgeObjectRelease();
      v93 = v104;
      v92 = v105;
      id v117 = v169;
LABEL_54:
      uint64_t v144 = v172;
      v143 = v173;
      v145 = (void *)(v172 + v173[13]);
      void *v145 = v93;
      v145[1] = v92;
      v146 = (void *)(v144 + v143[7]);
      uint64_t v147 = v167;
      void *v146 = v162;
      v146[1] = v147;
      v148 = (void *)(v144 + v143[8]);
      uint64_t v149 = v168;
      void *v148 = v163;
      v148[1] = v149;
      *(void *)(v144 + v143[11]) = v117;
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v144, v39);
      OUTLINED_FUNCTION_91_2(v39, 0);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v144, (void (*)(void))type metadata accessor for RecentsCallItem);
      OUTLINED_FUNCTION_28();
      return;
    }
    uint64_t v118 = v39;
    uint64_t v119 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_5_3();
    uint64_t v166 = v120;
    MEMORY[0x1F4188790](v121);
    OUTLINED_FUNCTION_62();
    uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    v175 = &v158;
    uint64_t v123 = OUTLINED_FUNCTION_8(v122);
    uint64_t v125 = *(void *)(v124 + 64);
    MEMORY[0x1F4188790](v123);
    unint64_t v126 = (v125 + 15) & 0xFFFFFFFFFFFFFFF0;
    v127 = (char *)&v158 - v126;
    v128 = *(void **)((char *)v174 + v55[13]);
    if (v128)
    {
      v170 = (int *)&v158;
      id v129 = objc_msgSend(v128, sel_messageUUID);
      v130 = (char *)&v158 - v126;
      if (MEMORY[0x1F4188790](v129))
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v131 = 0;
      }
      else
      {
        uint64_t v131 = 1;
      }
      uint64_t v39 = v118;
      OUTLINED_FUNCTION_91_2((uint64_t)v130, v131);
      uint64_t v132 = OUTLINED_FUNCTION_205_0();
      outlined init with take of RecentsCollectionViewSectionable?(v132, v133, v134);
      uint64_t v135 = OUTLINED_FUNCTION_287();
      OUTLINED_FUNCTION_33_0(v135, v136, v119);
      id v117 = v169;
      if (!v61)
      {
        OUTLINED_FUNCTION_63_0();
        v137();
        OUTLINED_FUNCTION_129_2();
        uint64_t v138 = UUID.uuidString.getter();
        v140 = v139;
        v176 = v93;
        v177 = v92;
        swift_bridgeObjectRetain();
        v141._countAndFlagsBits = v138;
        v141._object = v140;
        String.append(_:)(v141);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v93 = v176;
        v92 = v177;
        outlined destroy of SystemUpdateNotice?(v171, &demangling cache variable for type metadata for RecentsCallItemType?);
        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_10_6();
        v142();
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v174, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        goto LABEL_54;
      }
    }
    else
    {
      OUTLINED_FUNCTION_91_2((uint64_t)&v158 - v126, 1);
      uint64_t v39 = v118;
      id v117 = v169;
    }
    outlined destroy of SystemUpdateNotice?(v171, &demangling cache variable for type metadata for RecentsCallItemType?);
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v174, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
    outlined destroy of SystemUpdateNotice?((uint64_t)v127, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_129_2();
    goto LABEL_54;
  }
  __break(1u);
}

uint64_t outlined destroy of SystemUpdateNotice?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_90();
  v5(v4);
  return a2;
}

uint64_t outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t outlined init with take of RecentCallRecentItemMetadata(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_46();
  v5();
  return a2;
}

uint64_t OUTLINED_FUNCTION_26_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t specialized ParticipantsViewController.participantsViewControllerDelegate.getter()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_165_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized Set._Variant.insert(_:)(&a9, a2, a3, v9, v10);
}

uint64_t OUTLINED_FUNCTION_165_3()
{
  return swift_dynamicCast();
}

void destroy for RecentsCallItemType(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v2 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      uint64_t v3 = (uint64_t)a1 + v2[5];
      uint64_t v4 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v3, 1, v4)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      }

      swift_bridgeObjectRelease();
      uint64_t v5 = (uint64_t)a1 + v2[10];
      uint64_t v6 = type metadata accessor for UUID();
      if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      uint64_t v7 = (void **)((char *)a1 + v2[11]);
      if (*v7)
      {

        swift_bridgeObjectRelease();
        swift_release();
      }
      uint64_t v8 = (uint64_t)a1 + v2[12];
      if (!__swift_getEnumTagSinglePayload(v8, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v8, v6);
      }
      uint64_t v9 = *(void **)((char *)a1 + v2[13]);

      break;
    case 1u:
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(void **, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      uint64_t v11 = type metadata accessor for RecentOngoingConversationMetadata(0);
      swift_bridgeObjectRelease();

      unint64_t v12 = *(void **)((char *)a1 + *(int *)(v11 + 28));
      if (v12) {
        goto LABEL_16;
      }
      break;
    case 2u:
      unint64_t v12 = *a1;
LABEL_16:

      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:
      return;
  }
}

uint64_t outlined init with copy of FeatureEligibility?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

uint64_t outlined init with copy of Environment<DynamicTypeSize>.Content(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t outlined init with copy of Participant?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return v3;
}

uint64_t _s15ConversationKit11ParticipantVSgWOcTm_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v4();
  return a2;
}

uint64_t outlined init with copy of RecentsCallItemType(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v5();
  return a2;
}

uint64_t OUTLINED_FUNCTION_88()
{
  return v0;
}

id OUTLINED_FUNCTION_4_2@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(v1 + a1);
}

id OUTLINED_FUNCTION_88_0()
{
  return static UIImage.symbolImage(for:)(v0 + 112);
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return 0;
}

void OUTLINED_FUNCTION_374(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_88_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return *(void *)(v0 + *(int *)(v1 + 52));
}

uint64_t OUTLINED_FUNCTION_88_3()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_88_5()
{
  return swift_getEnumCaseMultiPayload();
}

double OUTLINED_FUNCTION_88_6()
{
  return 13.0;
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_24()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_123()
{
  return swift_bridgeObjectRetain();
}

BOOL OUTLINED_FUNCTION_21_0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

id OUTLINED_FUNCTION_123_1()
{
  return [v0 (SEL)(v1 + 1944)];
}

void OUTLINED_FUNCTION_123_3(uint64_t a1)
{
  closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_123_4()
{
  return swift_beginAccess();
}

uint64_t outlined destroy of RecentsCallItemType(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t _s15ConversationKit19RecentsCallItemTypeOWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  v4(v3);
  return a1;
}

uint64_t _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return 1;
}

double OUTLINED_FUNCTION_14_0@<D0>(double a1@<X8>)
{
  return a1;
}

double OUTLINED_FUNCTION_16_1()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return v0;
}

id OUTLINED_FUNCTION_0_6(void *a1)
{
  return specialized @nonobjc CNLabeledValue.init(label:value:)(0, 0, a1);
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_0_9(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log)
{
  _os_log_impl(a1, log, v10, a4, v11, 2u);
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_0_11()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_0_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, long long a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60,long long a61,long long a62,long long a63)
{
  a59 = v65;
  a60 = v64;
  a61 = a14;
  a62 = a13;
  a63 = a12;
  a64 = a11;
  STACK[0x200] = v66;
  STACK[0x208] = v67;
  long long v70 = *(_OWORD *)(v68 - 160);
  *(_OWORD *)&STACK[0x210] = *(_OWORD *)(v68 - 176);
  *(_OWORD *)&STACK[0x220] = v70;
  long long v71 = *(_OWORD *)(v68 - 128);
  *(_OWORD *)&STACK[0x230] = *(_OWORD *)(v68 - 144);
  *(_OWORD *)&STACK[0x240] = v71;
  *(_OWORD *)&STACK[0x250] = *(_OWORD *)(v68 - 112);
  return TPNumberPadCharacter.rawValue.getter(&a59);
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void OUTLINED_FUNCTION_4_5()
{
  *(void *)(v1 - 256) = v0;
}

void OUTLINED_FUNCTION_0_15(Swift::UInt64 a1@<X8>)
{
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = a1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
}

__n128 OUTLINED_FUNCTION_0_16@<Q0>(uint64_t a1@<X8>)
{
  v2[28] = v1;
  v2[29] = a1;
  v2[30] = v3[2].n128_u64[1];
  return v3[3];
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return 8;
}

uint64_t OUTLINED_FUNCTION_0_18(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  return *(void *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_0_22()
{
  uint64_t v3 = *(const char **)(v1 + 3808);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_0_23(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_24@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 216) = a1;
  uint64_t v4 = *(void *)(v2 + 200) + 56 * a1;
  long long v6 = *(_OWORD *)(v4 + 48);
  long long v5 = *(_OWORD *)(v4 + 64);
  long long v7 = *(_OWORD *)(v4 + 32);
  *(unsigned char *)(v1 + 48) = *(unsigned char *)(v4 + 80);
  *(_OWORD *)(v1 + 16) = v6;
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)uint64_t v1 = v7;
  return outlined retain of AnsweringMachineCallStatus(v1);
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_0_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

__n128 OUTLINED_FUNCTION_0_31()
{
  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_0_32()
{
  return swift_beginAccess();
}

double OUTLINED_FUNCTION_41()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_0_33(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return swift_unknownObjectRelease();
}

id OUTLINED_FUNCTION_0_35()
{
  return ConversationHUDAppLaunchPillView.contentHStack.getter();
}

uint64_t OUTLINED_FUNCTION_0_36()
{
  return v0;
}

id OUTLINED_FUNCTION_0_37()
{
  return [v0 (SEL)(v1 + 664)];
}

double OUTLINED_FUNCTION_0_38(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return a9;
}

id OUTLINED_FUNCTION_0_41()
{
  return [v0 (SEL)(v1 + 664)];
}

id OUTLINED_FUNCTION_0_42()
{
  return static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(v0, 0, 1);
}

void OUTLINED_FUNCTION_0_43(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_5_5(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_5_6@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_0_44(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 48) = v2;
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_0_45()
{
  JUMPOUT(0x1C87730B0);
}

uint64_t OUTLINED_FUNCTION_0_46()
{
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_0_47()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

double OUTLINED_FUNCTION_1_8()
{
  return CGFloat.rounded(_:toScale:)(v0, v3, v2);
}

uint64_t OUTLINED_FUNCTION_0_52()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_0_53(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_0_54(uint64_t a1, uint64_t a2, int a3, NSBundle bundle, Swift::String_optional tableName, Swift::String value, uint64_t a7)
{
  object = value._object;
  value._object = *(void **)(v7 + 16);
  uint64_t countAndFlagsBits = tableName.value._countAndFlagsBits;
  uint64_t v13 = tableName.value._object;
  uint64_t v14 = value._countAndFlagsBits;
  uint64_t v15 = object;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&countAndFlagsBits, bundle, *(Swift::String *)&v14, *(Swift::String *)&v11)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
  return v0;
}

id OUTLINED_FUNCTION_0_56()
{
  return static ConversationControlsButtonFactory.makeButton(frame:provider:)(v0);
}

void *OUTLINED_FUNCTION_0_57(uint64_t a1, void *a2)
{
  return __swift_project_boxed_opaque_existential_1(a2, a2[3]);
}

uint64_t OUTLINED_FUNCTION_0_59()
{
  return type metadata accessor for Locale();
}

uint64_t OUTLINED_FUNCTION_0_60()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_61()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_3_5()
{
  return [v1 (SEL)(v0 + 2147)];
}

double OUTLINED_FUNCTION_0_64()
{
  return v0;
}

double OUTLINED_FUNCTION_0_65()
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v7 = v2;
  uint64_t v8 = v1;
  return CGRectGetMaxX(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_0_67()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_0_69(char a1, const char *a2)
{
  return objc_msgSend(v2, a2, a1 & 1);
}

uint64_t OUTLINED_FUNCTION_0_70()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_0_71()
{
  *(void *)(v0 + 8 * (v2 >> 6) + 64) |= 1 << v2;
  uint64_t v5 = (void *)(*(void *)(v0 + 48) + 16 * v2);
  *uint64_t v5 = v1;
  v5[1] = v3;
  *(void *)(*(void *)(v0 + 56) + 8 * v2) = v4;
}

id OUTLINED_FUNCTION_0_72()
{
  return objc_msgSend(v0, (SEL)(v1 + 775), v2, 3.0);
}

uint64_t OUTLINED_FUNCTION_0_73()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_0_74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return one-time initialization function for joinLink(a1, a2, 2, a4);
}

id OUTLINED_FUNCTION_0_75(objc_super *a1, SEL a2)
{
  return objc_msgSendSuper2(a1, a2, 0.0, 0.0, 0.0, 0.0);
}

uint64_t OUTLINED_FUNCTION_0_76()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_77()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_0_78()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_0_79()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_0_80()
{
  return 0x655F726577617264;
}

id OUTLINED_FUNCTION_0_82(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2, 0.0, 0.0, 0.0, 0.0);
}

uint64_t OUTLINED_FUNCTION_0_83(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  uint64_t v5 = 0x61737265766E6F43;
  unint64_t v6 = 0xEF74694B6E6F6974;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v9 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&a2 - 1), *(Swift::String_optional *)&v5, v2, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_0_84()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

char *OUTLINED_FUNCTION_0_85(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t OUTLINED_FUNCTION_33()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_0_86()
{
  return CallControlsStatusView.titleLabel.getter(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_0_87()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_0_88()
{
  return *(__n128 *)(v0 + 88);
}

double OUTLINED_FUNCTION_0_89()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_90()
{
  unint64_t v2 = *(void *)(v0 + 256);
  return InCallControlsParticipantCell.setEnabled(_:for:)(0, v2);
}

uint64_t OUTLINED_FUNCTION_0_92()
{
  return swift_unknownObjectUnownedLoadStrong();
}

uint64_t OUTLINED_FUNCTION_0_94()
{
  return swift_deallocClassInstance();
}

unint64_t OUTLINED_FUNCTION_0_95()
{
  return 0xD00000000000001FLL;
}

uint64_t OUTLINED_FUNCTION_0_98()
{
  return 0x5F454259414DLL;
}

uint64_t OUTLINED_FUNCTION_0_99()
{
  return specialized Array._endMutation()();
}

uint64_t OUTLINED_FUNCTION_0_100()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_0_101@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_102()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_0_103()
{
  return [v1 (SEL)(v0 + 1944)];
}

void OUTLINED_FUNCTION_0_104(uint64_t a1@<X8>)
{
  uint64_t v3 = &v1[a1];
  *((void *)v3 + 6) = 0;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *(_OWORD *)uint64_t v3 = 0u;
}

uint64_t OUTLINED_FUNCTION_0_105()
{
  return 1280065859;
}

uint64_t OUTLINED_FUNCTION_0_106(float a1)
{
  float *v2 = a1;
  return v1;
}

double OUTLINED_FUNCTION_0_107()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_108()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t OUTLINED_FUNCTION_0_109()
{
  return v0;
}

id OUTLINED_FUNCTION_1_10()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_0_110@<X0>(void *a1@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  void *v1 = *a1;
  v1[1] = v3;
  v1[2] = v5;
  v1[3] = v4;
  v1[4] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_0_111()
{
  uint64_t v2 = *(void *)(v0 - 472);
  uint64_t v3 = *(void *)(v0 - 496);
  uint64_t v4 = *(void *)(v0 - 464);
  uint64_t v5 = *(void *)(v0 - 488);
  uint64_t v6 = *(void *)(v0 - 456);
  uint64_t v7 = *(unsigned int *)(v0 - 444);
  return outlined copy of ConversationControlsRecipe.Actions(v2, v3, v4, v5, v6, v7);
}

double OUTLINED_FUNCTION_0_112(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return a3 * a7 + a5 - a1 * a7 * a3;
}

BOOL OUTLINED_FUNCTION_373()
{
  return v0 != 0;
}

id OUTLINED_FUNCTION_0_113@<X0>(const char *a1@<X1>, void *a2@<X8>)
{
  return [a2 a1];
}

id OUTLINED_FUNCTION_0_114(void *a1)
{
  return static Fonts.Notices.systemApertureButtonFont.getter(a1, 264);
}

uint64_t OUTLINED_FUNCTION_0_115(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t OUTLINED_FUNCTION_0_116()
{
  return v0;
}

double OUTLINED_FUNCTION_0_118()
{
  return v0;
}

double OUTLINED_FUNCTION_18()
{
  return 0.0;
}

void OUTLINED_FUNCTION_30_2()
{
  Hasher._combine(_:)(v0 & 1);
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return v0;
}

NSArray OUTLINED_FUNCTION_6_5()
{
  return Array._bridgeToObjectiveC()();
}

double OUTLINED_FUNCTION_30_3()
{
  return v0;
}

id OUTLINED_FUNCTION_30_5(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1069), v3);
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_30_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized CaptionsViewModel.withMutation<A, B>(keyPath:_:)(a1, a2, (uint64_t)&a9, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_30_11(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_30_12(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_30_13()
{
  v0[96] = 0;
  v0[97] = 0;
  v0[98] = 0;
  v0[99] = 1;
}

uint64_t OUTLINED_FUNCTION_30_14()
{
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_26_1(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_30_16(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

id OUTLINED_FUNCTION_30_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v5, (SEL)(v7 + 2840), v6, a4, a5, 0);
}

uint64_t OUTLINED_FUNCTION_30_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_20()
{
  void *v1 = v0;
  return v2;
}

uint64_t OUTLINED_FUNCTION_30_22(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_30_24@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

void OUTLINED_FUNCTION_30_25()
{
  *(void *)(v1 + 256) = *(void *)(v0 + 16);
  *(void *)(v1 + 264) = (v0 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
}

void OUTLINED_FUNCTION_30_26()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_30_27()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_30_28()
{
  return specialized __RawDictionaryStorage.find<A>(_:)(v1, v0);
}

void OUTLINED_FUNCTION_30_29(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_30_30()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_30_31(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_30_33()
{
  return type metadata accessor for NSObject(0, v0);
}

id OUTLINED_FUNCTION_30_34()
{
  return objc_msgSend(v0, (SEL)(v1 + 1048), v3, v4, v5, v6);
}

id OUTLINED_FUNCTION_30_35()
{
  return [v1 (SEL)(v0 + 2072)];
}

void OUTLINED_FUNCTION_30_36(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t OUTLINED_FUNCTION_30_38()
{
  return v0;
}

void *initializeWithCopy for RecentsCallItemType(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = type metadata accessor for UUID();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
      v37 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
      *(void *)((char *)a1 + v37[5]) = *(void *)(a2 + v37[5]);
      uint64_t v38 = v37[6];
      uint64_t v39 = *(void **)(a2 + v38);
      *(void *)((char *)a1 + v38) = v39;
      uint64_t v40 = v37[7];
      uint64_t v41 = (void *)((char *)a1 + v40);
      uint64_t v42 = a2 + v40;
      uint64_t v43 = *(void **)(a2 + v40);
      swift_bridgeObjectRetain();
      id v44 = v39;
      if (v43)
      {
        uint64_t v45 = *(void *)(v42 + 8);
        uint64_t v46 = *(void *)(v42 + 16);
        *uint64_t v41 = v43;
        v41[1] = v45;
        v41[2] = v46;
        id v47 = v43;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      v41[2] = *(void *)(v42 + 16);
      break;
    case 2u:
      v48 = *(void **)a2;
      uint64_t v49 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v49;
      a1[2] = *(void *)(a2 + 16);
      id v50 = v48;
      swift_bridgeObjectRetain();
LABEL_18:
      swift_retain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v4;
      double v5 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      }
      uint64_t v11 = v5[6];
      uint64_t v12 = *(void **)(a2 + v11);
      *(void *)((char *)a1 + v11) = v12;
      uint64_t v13 = v5[7];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = a2 + v13;
      *(void *)uint64_t v14 = *(void *)v15;
      v14[8] = *(unsigned char *)(v15 + 8);
      *(void *)((char *)a1 + v5[8]) = *(void *)(a2 + v5[8]);
      *(void *)((char *)a1 + v5[9]) = *(void *)(a2 + v5[9]);
      uint64_t v16 = v5[10];
      unint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (const void *)(a2 + v16);
      uint64_t v19 = type metadata accessor for UUID();
      id v20 = v12;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v22 = v5[11];
      v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = a2 + v22;
      unint64_t v25 = *(void **)v24;
      if (*(void *)v24)
      {
        uint64_t v26 = *(void *)(v24 + 8);
        uint64_t v27 = *(void *)(v24 + 16);
        void *v23 = v25;
        v23[1] = v26;
        v23[2] = v27;
        id v28 = v25;
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        *(_OWORD *)v23 = *(_OWORD *)v24;
        v23[2] = *(void *)(v24 + 16);
      }
      uint64_t v29 = v5[12];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (const void *)(a2 + v29);
      if (__swift_getEnumTagSinglePayload(a2 + v29, 1, v19))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v30, v31, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v19);
      }
      uint64_t v33 = v5[13];
      unint64_t v34 = *(void **)(a2 + v33);
      *(void *)((char *)a1 + v33) = v34;
      id v35 = v34;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *initializeWithCopy for RecentsCallItem(void *a1, uint64_t a2, int *a3)
{
  type metadata accessor for RecentsCallItemType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v38 = type metadata accessor for UUID();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
      uint64_t v39 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
      *(void *)((char *)a1 + v39[5]) = *(void *)(a2 + v39[5]);
      uint64_t v40 = v39[6];
      uint64_t v41 = *(void **)(a2 + v40);
      *(void *)((char *)a1 + v40) = v41;
      uint64_t v42 = v39[7];
      uint64_t v43 = (void *)((char *)a1 + v42);
      uint64_t v44 = a2 + v42;
      uint64_t v45 = *(void **)(a2 + v42);
      swift_bridgeObjectRetain();
      id v46 = v41;
      if (v45)
      {
        uint64_t v47 = *(void *)(v44 + 8);
        uint64_t v48 = *(void *)(v44 + 16);
        *uint64_t v43 = v45;
        v43[1] = v47;
        v43[2] = v48;
        id v49 = v45;
        goto LABEL_18;
      }
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      v43[2] = *(void *)(v44 + 16);
      break;
    case 2u:
      id v50 = *(void **)a2;
      uint64_t v51 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v51;
      a1[2] = *(void *)(a2 + 16);
      id v52 = v50;
LABEL_18:
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    default:
      uint64_t v6 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v6;
      uint64_t v7 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (const void *)(a2 + v8);
      uint64_t v11 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
      uint64_t v13 = v7[6];
      uint64_t v14 = *(void **)(a2 + v13);
      *(void *)((char *)a1 + v13) = v14;
      uint64_t v15 = v7[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = a2 + v15;
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = *(unsigned char *)(v17 + 8);
      *(void *)((char *)a1 + v7[8]) = *(void *)(a2 + v7[8]);
      *(void *)((char *)a1 + v7[9]) = *(void *)(a2 + v7[9]);
      uint64_t v18 = v7[10];
      uint64_t v19 = (char *)a1 + v18;
      id v20 = (const void *)(a2 + v18);
      uint64_t v21 = type metadata accessor for UUID();
      id v22 = v14;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v24 = v7[11];
      unint64_t v25 = (void *)((char *)a1 + v24);
      uint64_t v26 = a2 + v24;
      uint64_t v27 = *(void **)v26;
      if (*(void *)v26)
      {
        uint64_t v28 = *(void *)(v26 + 8);
        uint64_t v29 = *(void *)(v26 + 16);
        *unint64_t v25 = v27;
        v25[1] = v28;
        v25[2] = v29;
        id v30 = v27;
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
        v25[2] = *(void *)(v26 + 16);
      }
      uint64_t v31 = v7[12];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (const void *)(a2 + v31);
      if (__swift_getEnumTagSinglePayload(a2 + v31, 1, v21))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v32, v33, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v21);
      }
      uint64_t v35 = v7[13];
      uint64_t v36 = *(void **)(a2 + v35);
      *(void *)((char *)a1 + v35) = v36;
      id v37 = v36;
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = a3[5];
  uint64_t v54 = a3[6];
  uint64_t v55 = (void *)((char *)a1 + v53);
  uint64_t v56 = (void *)(a2 + v53);
  uint64_t v57 = v56[1];
  *uint64_t v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = (void *)((char *)a1 + v54);
  BOOL v59 = (void *)(a2 + v54);
  uint64_t v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = a3[7];
  uint64_t v62 = a3[8];
  uint64_t v63 = (void *)((char *)a1 + v61);
  char v64 = (void *)(a2 + v61);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  unint64_t v66 = (void *)((char *)a1 + v62);
  unint64_t v67 = (void *)(a2 + v62);
  uint64_t v68 = v67[1];
  *unint64_t v66 = *v67;
  v66[1] = v68;
  uint64_t v69 = a3[9];
  long long v70 = (char *)a1 + v69;
  long long v71 = (const void *)(a2 + v69);
  uint64_t v72 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
  {
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
  }
  uint64_t v74 = a3[10];
  uint64_t v75 = a3[11];
  uint64_t v76 = *(void **)(a2 + v74);
  *(void *)((char *)a1 + v74) = v76;
  uint64_t v77 = *(void **)(a2 + v75);
  *(void *)((char *)a1 + v75) = v77;
  uint64_t v78 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)(a2 + a3[12]);
  unint64_t v79 = (void *)((char *)a1 + v78);
  uint64_t v80 = (void *)(a2 + v78);
  uint64_t v81 = v80[1];
  void *v79 = *v80;
  v79[1] = v81;
  uint64_t v82 = a3[14];
  id v83 = *(void **)(a2 + v82);
  *(void *)((char *)a1 + v82) = v83;
  id v84 = v76;
  id v85 = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v86 = v83;
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

void destroy for RecentsCallItem(id *a1, int *a2)
{
  type metadata accessor for RecentsCallItemType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v4 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      uint64_t v5 = (uint64_t)a1 + v4[5];
      uint64_t v6 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }

      swift_bridgeObjectRelease();
      uint64_t v7 = (uint64_t)a1 + v4[10];
      uint64_t v8 = type metadata accessor for UUID();
      if (!__swift_getEnumTagSinglePayload(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
      uint64_t v9 = (id *)((char *)a1 + v4[11]);
      if (*v9)
      {

        swift_bridgeObjectRelease();
        swift_release();
      }
      uint64_t v10 = (uint64_t)a1 + v4[12];
      if (!__swift_getEnumTagSinglePayload(v10, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v10, v8);
      }

      break;
    case 1u:
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(id *, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
      uint64_t v12 = type metadata accessor for RecentOngoingConversationMetadata(0);
      swift_bridgeObjectRelease();

      uint64_t v13 = (id *)((char *)a1 + *(int *)(v12 + 28));
      if (*v13)
      {

        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      break;
    case 2u:

      swift_bridgeObjectRelease();
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)a1 + a2[9];
  uint64_t v15 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(id *)((char *)a1 + a2[14]);
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t type metadata accessor for ConversationControlsAppLaunchButtonType(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for RecentCallRecentItemMetadata(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RecentCallRecentItemMetadata);
}

uint64_t type metadata accessor for RecentsCallItemType(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RecentsCallItemType);
}

void destroy for RecentCallRecentItemMetadata(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = type metadata accessor for UUID();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = (id *)(a1 + a2[11]);
  if (*v8)
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v9 = a1 + a2[12];
  if (!__swift_getEnumTagSinglePayload(v9, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v9, v7);
  }
  uint64_t v10 = *(void **)(a1 + a2[13]);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return *(void *)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_3_7(uint64_t result)
{
  *(void *)(result + 8) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return _s15ConversationKit11ParticipantVWOcTm_0();
}

uint64_t OUTLINED_FUNCTION_54_1(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return type metadata accessor for MainActor();
}

uint64_t OUTLINED_FUNCTION_54_3@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v1 + a1, 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return v0;
}

id OUTLINED_FUNCTION_54_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v5, v6, 1, a4, v4);
}

void OUTLINED_FUNCTION_54_5(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_54_6(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 32) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_54_8(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_54_10()
{
  return v0;
}

id OUTLINED_FUNCTION_54_11()
{
  uint64_t v3 = *(void **)(*(void *)(v0 + 48) + 8 * v1);
  return v3;
}

uint64_t OUTLINED_FUNCTION_54_12()
{
  return v0;
}

char *OUTLINED_FUNCTION_54_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_54_15(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

void OUTLINED_FUNCTION_54_16(double a1)
{
  *(double *)(v1 + 200) = a1;
}

void OUTLINED_FUNCTION_54_17(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

void *initializeWithCopy for RecentCallRecentItemMetadata(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v14;
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  id v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for UUID();
  id v22 = v14;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v24 = a3[11];
  unint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void **)v26;
  if (*(void *)v26)
  {
    uint64_t v28 = *((void *)v26 + 1);
    uint64_t v29 = *((void *)v26 + 2);
    *unint64_t v25 = v27;
    v25[1] = v28;
    v25[2] = v29;
    id v30 = v27;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
    v25[2] = *((void *)v26 + 2);
  }
  uint64_t v31 = a3[12];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v31, 1, v21))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v32, v33, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v21);
  }
  uint64_t v35 = a3[13];
  uint64_t v36 = *(void **)((char *)a2 + v35);
  *(void *)((char *)a1 + v35) = v36;
  id v37 = v36;
  return a1;
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return Hasher.init(_seed:)();
}

int8x8_t OUTLINED_FUNCTION_36_1(int8x16_t a1, int8x16_t a2)
{
  int8x16_t v2 = vorrq_s8(a2, a1);
  return vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return outlined destroy of ConversationControlsAction(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_2(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_36_3(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

char *OUTLINED_FUNCTION_36_8(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t OUTLINED_FUNCTION_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_0(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_8_5(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return v1 - 136;
}

uint64_t OUTLINED_FUNCTION_36_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return outlined init with copy of IDSLookupManager((uint64_t)&a14, (uint64_t)&a9);
}

id OUTLINED_FUNCTION_36_13()
{
  return @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v0, v1, v2, v3, 1);
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_56(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_286()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_79()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_36_20()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_36_21()
{
  uint64_t v3 = *(void *)(v1 - 120);
  *(void *)(v1 - 168) = v0;
  *(void *)(v1 - 160) = v3;
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_36_22()
{
  return v0;
}

double OUTLINED_FUNCTION_36_23(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  *(void *)(v3 - 120) = v2;
  double result = 0.0;
  *(_OWORD *)(v3 - 112) = 0u;
  *(_OWORD *)(v3 - 96) = 0u;
  return result;
}

void OUTLINED_FUNCTION_36_25(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_36_26()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_36_28()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_36_29()
{
  return v0;
}

id OUTLINED_FUNCTION_36_30(uint64_t a1)
{
  return objc_msgSend(v1, sel_constraintEqualToAnchor_, a1);
}

uint64_t OUTLINED_FUNCTION_36_32()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)();
}

double OUTLINED_FUNCTION_36_33()
{
  return *(double *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_25_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return v0;
}

void OUTLINED_FUNCTION_102_1(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

unint64_t OUTLINED_FUNCTION_102_2()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_102_4()
{
  return type metadata accessor for Participant(0);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return Hasher.init(_seed:)();
}

void OUTLINED_FUNCTION_34_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  Hasher._combine(_:)(v10);
}

int8x8_t OUTLINED_FUNCTION_34_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11 = vorrq_s8(a10, a11);
  return vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL));
}

void OUTLINED_FUNCTION_2_8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_16_2(uint64_t result)
{
  void *v1 = result;
  *(void *)(result + 24) = v2;
  return result;
}

void OUTLINED_FUNCTION_34_6(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

id OUTLINED_FUNCTION_34_8()
{
  return [v1 (SEL)(v0 + 3224)];
}

_WORD *OUTLINED_FUNCTION_22_1(_WORD *result)
{
  *double result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_9()
{
  return v0;
}

id OUTLINED_FUNCTION_34_10()
{
  return @nonobjc TUPhoneNumber.init(digits:countryCode:)(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_34_12(uint64_t result)
{
  *(void *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_9(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_34_13()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_34_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_15()
{
  return *(void *)(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_34_16()
{
  return 1953718604;
}

uint64_t OUTLINED_FUNCTION_34_17(uint64_t a1)
{
  return specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(a1, 1);
}

uint64_t OUTLINED_FUNCTION_34_18()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_34_20()
{
  outlined copy of RemoteControlState(v0);
  return swift_retain();
}

id OUTLINED_FUNCTION_24_3(float a1)
{
  float *v2 = a1;
  return v1;
}

id OUTLINED_FUNCTION_34_24(uint64_t a1, const char *a2)
{
  uint64_t v4 = *(void **)(v2 - 160);
  return [v4 a2];
}

void OUTLINED_FUNCTION_34_25(uint64_t a1@<X8>)
{
  *(void *)(v1 + 64) = a1 & 0x1FFFFFFFFFFFFFFFLL;
}

uint64_t OUTLINED_FUNCTION_34_26()
{
  return *(void *)(*(void *)v0 + 40);
}

uint64_t OUTLINED_FUNCTION_34_28()
{
  return type metadata accessor for RemoteControlMessage(0);
}

uint64_t OUTLINED_FUNCTION_34_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_31(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_34_33(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return v1 + 72;
}

uint64_t OUTLINED_FUNCTION_34_37()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

double OUTLINED_FUNCTION_34_38()
{
  return v0;
}

void OUTLINED_FUNCTION_34_39()
{
  outlined consume of CallDisplayInfo(*(void **)(v0 + 64), *(id *)(v0 + 72), *(_DWORD *)(v0 + 84));
  uint64_t v1 = *(void **)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_34_40()
{
  return swift_bridgeObjectRetain();
}

double OUTLINED_FUNCTION_34_41@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 - 120) = 0u;
  *(_OWORD *)(v1 - 104) = 0u;
  *(unsigned char *)(v1 - 88) = 6;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_42()
{
  return 0;
}

double OUTLINED_FUNCTION_34_43()
{
  return *(double *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_362()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_201_0(unsigned int a1)
{
  return a1 | 0x7020646500000000;
}

uint64_t OUTLINED_FUNCTION_201_1()
{
  return type metadata accessor for Participant.Caption(0);
}

void OUTLINED_FUNCTION_201_2()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_6_6(uint64_t a1)
{
  return *(void *)a1;
}

double OUTLINED_FUNCTION_138_0(uint64_t a1, __n128 a2)
{
  *(__n128 *)(a1 + 16) = a2;
  *(void *)(a1 + 32) = 11;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(unsigned char *)(a1 + 72) = 6;
  return result;
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  return 0x2064657463616552;
}

void OUTLINED_FUNCTION_138_3(uint64_t a1, uint64_t a2)
{
  closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

unint64_t lazy protocol witness table accessor for type [String] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [String] and conformance [A];
  if (!lazy protocol witness table cache variable for type [String] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [String]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A]);
  }
  return result;
}

void specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

{
  void *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  void *v0 = v1;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  OUTLINED_FUNCTION_2_106();
  if (v5)
  {
    OUTLINED_FUNCTION_4_23();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_9_24();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)OUTLINED_FUNCTION_15_2();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_25((uint64_t)(v10 - 32) / 16);
  }
  uint64_t v11 = OUTLINED_FUNCTION_5_97();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_106();
  if (v5)
  {
    OUTLINED_FUNCTION_4_23();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_9_24();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_25((uint64_t)(v10 - 32) / 40);
  }
  uint64_t v11 = OUTLINED_FUNCTION_5_97();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_106();
  if (v5)
  {
    OUTLINED_FUNCTION_4_23();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_9_24();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)OUTLINED_FUNCTION_15_2();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_25((uint64_t)(v10 - 32) / 8);
  }
  uint64_t v11 = OUTLINED_FUNCTION_5_97();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  void *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  OUTLINED_FUNCTION_44_1();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<InCallViewModelHolder>);
    char v7 = (void *)swift_allocObject();
    uint64_t v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 64);
  }
  uint64_t v9 = (char *)OUTLINED_FUNCTION_9_65();
  if (v1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)();
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_106();
  if (v5)
  {
    OUTLINED_FUNCTION_4_23();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_9_24();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)OUTLINED_FUNCTION_15_2();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_25((uint64_t)(v10 - 32) / 32);
  }
  uint64_t v11 = OUTLINED_FUNCTION_5_97();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
LABEL_23:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  char v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8) {
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MostActiveParticipantsController<UUID>.ActivityDetails>);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  OUTLINED_FUNCTION_1(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = _swift_stdlib_malloc_size(v14);
  if (!v11)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v15 - v13 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_22;
  }
  v14[2] = v7;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v11);
LABEL_17:
  uint64_t v17 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails)
                  - 8);
  uint64_t v18 = v0 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  if (v1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v18, v7);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v18, v7);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  void *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  OUTLINED_FUNCTION_44_1();
  if (v4)
  {
    OUTLINED_FUNCTION_4_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_9_24();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    char v7 = (void *)OUTLINED_FUNCTION_15_2();
    uint64_t v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 4);
  }
  uint64_t v9 = (char *)OUTLINED_FUNCTION_9_65();
  if (v1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((unint64_t)v9, v10, (unint64_t)v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_106();
  if (v5)
  {
    OUTLINED_FUNCTION_4_23();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_9_24();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_25((uint64_t)(v10 - 32) / 56);
  }
  uint64_t v11 = OUTLINED_FUNCTION_5_97();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  void *v6;
  char *v7;
  uint64_t v8;
  char *v9;

  OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationLink>);
    char v6 = (void *)OUTLINED_FUNCTION_14_52();
    OUTLINED_FUNCTION_10_60(v6);
  }
  char v7 = (char *)OUTLINED_FUNCTION_9_65();
  if (v1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v8, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)();
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  void *v6;
  char *v7;
  uint64_t v8;
  char *v9;

  OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantMediaPriorities>);
    char v6 = (void *)OUTLINED_FUNCTION_14_52();
    OUTLINED_FUNCTION_10_60(v6);
  }
  char v7 = (char *)OUTLINED_FUNCTION_9_65();
  if (v1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v8, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)();
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t *v9;
  void *v10;
  size_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_2_106();
  if (v6)
  {
    OUTLINED_FUNCTION_4_23();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_9_24();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_10_8();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(v9);
    size_t v10 = (void *)swift_allocObject();
    uint64_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v4;
    v10[3] = 2 * v11 - 64;
  }
  uint64_t v12 = OUTLINED_FUNCTION_5_97();
  if (v3)
  {
    v2(v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_44_1();
  if (v3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_9_24();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_29_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantPresentationContext>);
    char v6 = (void *)OUTLINED_FUNCTION_14_52();
    OUTLINED_FUNCTION_10_60(v6);
  }
  char v7 = OUTLINED_FUNCTION_9_65();
  if (v1)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v7, v8, v9);
  }
  swift_release();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return outlined init with copy of FeatureEligibility?(v1, v0, v2);
}

BOOL OUTLINED_FUNCTION_2_12(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

id OUTLINED_FUNCTION_2_14(void *a1)
{
  return specialized @nonobjc CNLabeledValue.init(label:value:)(0, 0, a1);
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  uint64_t v1 = *v0;
  if ((unint64_t)*v0 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void OUTLINED_FUNCTION_2_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 64) = a10;
}

uint64_t OUTLINED_FUNCTION_2_17(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10)
{
  return InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(0, a3, 0, 0, 0, 1, 0, 0, a1, a10);
}

id OUTLINED_FUNCTION_2_19()
{
  return [v0 (SEL)(v1 + 2072)];
}

uint64_t OUTLINED_FUNCTION_2_20(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t OUTLINED_FUNCTION_2_21(__n128 a1, __n128 a2)
{
  *(__n128 *)(v4 + 248) = a1;
  *(__n128 *)(v2 + 24) = a2;
  *(void *)(v4 + 280) = v5;
  *(void *)(v4 + 288) = v6;
  *(void *)(v4 + 296) = v8;
  *(void *)(v4 + 304) = v9;
  *(void *)(v4 + 312) = v10;
  *(void *)(v4 + 320) = v11;
  *(void *)(v4 + 328) = v7;
  *(void *)(v4 + 336) = v3;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_32()
{
  return swift_bridgeObjectRetain();
}

void *OUTLINED_FUNCTION_2_23()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_2_24()
{
  return type metadata accessor for InCallControlsCollectionViewController.Action(0);
}

void *OUTLINED_FUNCTION_2_25(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  uint64_t v4 = (void *)(a1 + 24);
  return memcpy(v4, v1, 0x59uLL);
}

id OUTLINED_FUNCTION_2_27(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

id OUTLINED_FUNCTION_2_28(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0, 0.0, 0.0, 1.0);
}

uint64_t OUTLINED_FUNCTION_2_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5)
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  return v0;
}

char *OUTLINED_FUNCTION_2_32@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_2_33@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = BYTE4(result);
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_34()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_2_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10)
{
  *(void *)(v11 + 16) = v12;
  return outlined init with take of Notice(&a10, v11 + v13 * v10 + 32);
}

uint64_t OUTLINED_FUNCTION_2_37(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_2_40()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  return *(void *)(v0 + 48) + v1 * *(void *)(v2 - 240);
}

id OUTLINED_FUNCTION_1_13(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_2_41(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_9_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return swift_bridgeObjectRelease_n();
}

__n128 OUTLINED_FUNCTION_4_9()
{
  return *(__n128 *)(v0 + 40);
}

id OUTLINED_FUNCTION_2_42()
{
  return TPPillView.__allocating_init(title:frame:theme:)(0, 0xE000000000000000, 2, 0.0, 0.0, 0.0, 0.0);
}

BOOL OUTLINED_FUNCTION_2_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CGAffineTransform *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a15 = v21;
  a16 = v22;
  a17 = v23;
  a18 = v24;
  a19 = v25;
  a20 = v26;
  return CGAffineTransformIsIdentity((CGAffineTransform *)&a15);
}

double OUTLINED_FUNCTION_2_45(uint64_t a1)
{
  return *(double *)&a1;
}

uint64_t OUTLINED_FUNCTION_2_47()
{
  return type metadata accessor for PictureInPictureWrapperViewController();
}

uint64_t OUTLINED_FUNCTION_2_48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_4(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return static Published.subscript.modify();
}

uint64_t OUTLINED_FUNCTION_2_49()
{
  return 0x53552D6E65;
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_50()
{
  return outlined init with copy of IDSLookupManager(v0, v1 - 128);
}

uint64_t OUTLINED_FUNCTION_2_52()
{
  return v0;
}

char *OUTLINED_FUNCTION_2_53@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_2_54()
{
  return 0x454D495445434146;
}

id OUTLINED_FUNCTION_2_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_56()
{
  return String.localized.getter();
}

void OUTLINED_FUNCTION_2_57()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return swift_deallocObject();
}

id OUTLINED_FUNCTION_2_60()
{
  return objc_msgSend(v1, (SEL)(v0 + 750), v2);
}

uint64_t OUTLINED_FUNCTION_2_61()
{
  return v0 - 184;
}

uint64_t OUTLINED_FUNCTION_2_62()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_19_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

void *OUTLINED_FUNCTION_2_63(uint64_t a1, void *a2)
{
  return __swift_project_boxed_opaque_existential_1(a2, a2[3]);
}

void OUTLINED_FUNCTION_2_64()
{
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[2];
  outlined consume of ClarityUIOutgoingCallAction?(v3, v1, v4, v5);
}

id OUTLINED_FUNCTION_2_67()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

void OUTLINED_FUNCTION_2_68()
{
  JUMPOUT(0x1C8776240);
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return v0;
}

void OUTLINED_FUNCTION_2_69()
{
  uint64_t v2 = *(void **)(v0 - 312);
  uint64_t v3 = *(void **)(v0 - 288);
  int v4 = *(_DWORD *)(v0 - 300);
  outlined consume of ButtonBackgroundStyle(v2, v3, v4);
}

UIMenu OUTLINED_FUNCTION_2_70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, UIMenuElementSize a9, Swift::OpaquePointer a10)
{
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  v15.value.super.isa = 0;
  v15.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(*(Swift::String *)&v11, *(Swift::String_optional *)&v13, v15, (UIMenuIdentifier_optional)33, 0xFFFFFFFFFFFFFFFFLL, a9, a10);
}

unint64_t OUTLINED_FUNCTION_2_71()
{
  return specialized __RawDictionaryStorage.find<A>(_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_72()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  return type metadata accessor for LayoutSubview();
}

id OUTLINED_FUNCTION_2_74()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

void *OUTLINED_FUNCTION_2_75(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t OUTLINED_FUNCTION_2_76()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_78()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t OUTLINED_FUNCTION_2_79@<X0>(uint64_t a1@<X8>)
{
  unint64_t v4 = 0xD000000000000018;
  uint64_t v5 = 0x61737265766E6F43;
  unint64_t v6 = 0xEF74694B6E6F6974;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v9 = 0;
  unint64_t v3 = (a1 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v5, v1, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  return specialized Dictionary.subscript.setter(v28 - 224, (uint64_t)&a28);
}

void OUTLINED_FUNCTION_19_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_2_81(uint64_t a1, uint64_t (*a2)(void))
{
  return Features.isHeroTitleEnabled.getter(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return swift_beginAccess();
}

void *OUTLINED_FUNCTION_2_83@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_84()
{
  return *(void *)(v0 + 200);
}

id OUTLINED_FUNCTION_2_85(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 664), a1);
}

uint64_t OUTLINED_FUNCTION_2_86()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_2_87()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_88()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_2_91()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_92()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

char *OUTLINED_FUNCTION_2_93@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_2_94(void (*a1)(uint64_t *__return_ptr), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  return specialized InCallCallControlsService.fromControlManager<A>(_:defaultValue:)(a1, 0, a3);
}

void OUTLINED_FUNCTION_2_95(uint64_t a1@<X8>)
{
  uint64_t v3 = &v1[a1];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
}

id OUTLINED_FUNCTION_2_96(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_2_97()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_98()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_2_99()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_2_100()
{
  return outlined consume of Set<TUHandle>.Index._Variant(v0, v1, v2);
}

void OUTLINED_FUNCTION_2_101()
{
  Hasher._combine(_:)(1uLL);
}

char *OUTLINED_FUNCTION_2_102(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_2_103()
{
  return v0;
}

double OUTLINED_FUNCTION_2_104@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_105()
{
  return outlined consume of Data._Representation(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_109()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_2_110()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2_111()
{
  return Logger.init(subsystem:category:)();
}

uint64_t OUTLINED_FUNCTION_2_112()
{
  return String.localizedCallStatus.getter();
}

uint64_t OUTLINED_FUNCTION_2_113()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

void OUTLINED_FUNCTION_2_114()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_2_115(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_2_117()
{
  return type metadata accessor for InCallControlsParticipantCellViewModel();
}

id OUTLINED_FUNCTION_2_118(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_2_119()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_2_120(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_2_121@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = result;
  *(_WORD *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 4;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_122()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_2_124()
{
  return type metadata accessor for OS_dispatch_queue();
}

uint64_t OUTLINED_FUNCTION_2_125()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_127()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_12@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

id OUTLINED_FUNCTION_2_128()
{
  return objc_msgSend(v0, (SEL)(v3 + 1688), v1, v2);
}

double OUTLINED_FUNCTION_2_129()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_131()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x6E696E657473694CLL, 0xEE00657461745367, (uint64_t *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_2_132(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  outlined copy of ConversationControlsRecipe.Actions(*(void *)(v4 - 472), v2, *(void *)(v4 - 464), v3, *(void *)(v4 - 456), *(unsigned int *)(v4 - 444));
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_2_133()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_2_134()
{
  return type metadata accessor for OS_dispatch_queue();
}

uint64_t OUTLINED_FUNCTION_2_135()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t OUTLINED_FUNCTION_2_136()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_137()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

double OUTLINED_FUNCTION_2_138()
{
  return 0.5;
}

Class OUTLINED_FUNCTION_2_140(void *a1)
{
  return static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter(a1, 0x8000u);
}

id OUTLINED_FUNCTION_2_141@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)(v1 + a1);
  return objc_msgSend(v4, (SEL)(v2 + 1176), 1);
}

void OUTLINED_FUNCTION_2_142(uint64_t a1, uint64_t a2, void (__cdecl *a3)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))
{
  CFNotificationCenterAddObserver(v4, v3, a3, v5, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_4(uint64_t result)
{
  *(void *)(v1 - 264) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_25_6(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1069), 0.75);
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return 0;
}

void OUTLINED_FUNCTION_25_9()
{
  JUMPOUT(0x1C87744F0);
}

void OUTLINED_FUNCTION_52_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_25_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_13()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  return swift_allocObject();
}

void *OUTLINED_FUNCTION_25_17(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char __src)
{
  return memcpy(a1, &__src, 0x70uLL);
}

id OUTLINED_FUNCTION_25_18(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 111), a1);
}

char *OUTLINED_FUNCTION_25_19@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_25_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_23()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_25_24()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_25_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_27@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

id OUTLINED_FUNCTION_25_28()
{
  return [v0 (SEL)(v1 + 2147)];
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_30()
{
  return v0;
}

id OUTLINED_FUNCTION_25_32()
{
  return [v0 (SEL)(v1 + 321)];
}

uint64_t OUTLINED_FUNCTION_25_33(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_25_34()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_25_35()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

double OUTLINED_FUNCTION_25_36()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_25_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  v8[-7].n128_u64[1] = a7;
  v8[-6].n128_u64[0] = a8;
  return v8[3];
}

void OUTLINED_FUNCTION_25_38()
{
  *(_DWORD *)(v0 - 328) = 1;
}

uint64_t OUTLINED_FUNCTION_25_39()
{
  return type metadata accessor for VideoReactionButton(0);
}

uint64_t OUTLINED_FUNCTION_25_41()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(void *)(v1 - 152));
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_25_42()
{
  outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_43()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_25_44()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_108@<W0>(char a1@<W8>)
{
  return (a1 & 1) == 0;
}

uint64_t OUTLINED_FUNCTION_25_45@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void *)(v4 - 88);
  *(void *)(a1 - 32) = v2;
  *(void *)(a1 - 24) = v5;
  *(void *)(a1 - 16) = v3;
  *(void *)(a1 - 8) = v1;
  outlined copy of RemoteControlState(v3);
  return swift_retain();
}

void OUTLINED_FUNCTION_25_46(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 280) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_25_47()
{
  return v0;
}

double OUTLINED_FUNCTION_25_48()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetMaxY(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_25_49()
{
  outlined init with take of Notice((long long *)(v0 + 120), v0 + 160);
  uint64_t v2 = *(void *)(v1 - 144);
  return __swift_mutable_project_boxed_opaque_existential_1(v1 - 168, v2);
}

uint64_t OUTLINED_FUNCTION_25_50()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_51(uint64_t a1)
{
  *(void *)(v1 - 248) = a1;
  return v1 - 248;
}

int8x8_t OUTLINED_FUNCTION_25_52(uint64_t a1, uint64x2_t a2, int32x4_t a3, uint64x2_t a4)
{
  int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(a2, a4), a3);
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v5);
  *(_DWORD *)(v4 + 1) = result.i32[0];
  *(unsigned char *)(v4 + 5) = BYTE5(a1) & 1;
  *(unsigned char *)(v4 + 6) = BYTE6(a1) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_53()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_25_54(id a1)
{
  *(void *)(v2 + v1) = a1;
  return a1;
}

void OUTLINED_FUNCTION_25_55()
{
  JUMPOUT(0x1C87733A0);
}

void OUTLINED_FUNCTION_25_56(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)()
{
  OUTLINED_FUNCTION_20_33();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  if (v2 + 16 * v1 > v0 && v0 + 16 * v1 > v2)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  if (v2 + (v1 << 6) > v0 && v0 + (v1 << 6) > v2)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  if (v2 + 32 * v1 > v0 && v0 + 32 * v1 > v2)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_44_10();
  if (!v4 & v3) {
    int16x8_t v5 = v2 > v1;
  }
  else {
    int16x8_t v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_44_10();
  if (!v4 & v3) {
    int16x8_t v5 = v2 > v1;
  }
  else {
    int16x8_t v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_46_12();
  if (!v4 & v3) {
    int16x8_t v5 = v2 > v1;
  }
  else {
    int16x8_t v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  if (v2 + 48 * v1 > v0 && v0 + 48 * v1 > v2)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_46_12();
  if (!v4 & v3) {
    int16x8_t v5 = v2 > v1;
  }
  else {
    int16x8_t v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;
  uint64_t vars8;

  OUTLINED_FUNCTION_20_33();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_46_12();
  if (!v4 & v3) {
    int16x8_t v5 = v2 > v1;
  }
  else {
    int16x8_t v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

Swift::Int OUTLINED_FUNCTION_20_0()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t OUTLINED_FUNCTION_20_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return outlined init with copy of ConversationControlsType(v9, (uint64_t)&a9);
}

void OUTLINED_FUNCTION_20_2(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
}

uint64_t OUTLINED_FUNCTION_20_3(uint64_t result)
{
  *(void *)(v1 - 296) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_4(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = (2 * ((result - 32) / 8)) | 1;
  return result;
}

id OUTLINED_FUNCTION_20_5()
{
  return v0;
}

id OUTLINED_FUNCTION_20_6(void *a1)
{
  return objc_msgSend(a1, sel_labelColor);
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_20_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 - 216);
}

uint64_t OUTLINED_FUNCTION_20_16()
{
  return outlined init with take of ConversationControlsRecipe?(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_17()
{
  return *(void *)(v0 - 536);
}

uint64_t OUTLINED_FUNCTION_20_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_66()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_20_20()
{
  *(void *)(v0 + 328) = *(void *)(v0 + 224);
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  return v0;
}

id OUTLINED_FUNCTION_20_21(uint64_t a1)
{
  return objc_msgSend(v2, (SEL)(v1 + 664), a1);
}

double OUTLINED_FUNCTION_20_23()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_89()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_20_24()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_20_25(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_1_16(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_20_26()
{
  return v0;
}

void *OUTLINED_FUNCTION_20_27(void *result)
{
  *uint64_t result = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_28()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void OUTLINED_FUNCTION_20_29(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

id OUTLINED_FUNCTION_20_30()
{
  return objc_msgSend(v0, sel_view);
}

uint64_t OUTLINED_FUNCTION_20_31()
{
  return type metadata accessor for RecentsCallItem(0);
}

uint64_t *OUTLINED_FUNCTION_20_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_20_34(void *a1, void *a2, char a3)
{
  outlined consume of CallDisplayInfo(a1, a2, a3);
  return v3;
}

unint64_t OUTLINED_FUNCTION_20_35()
{
  *(void *)(v0 + 56) = v1;
  return lazy protocol witness table accessor for type String and conformance String();
}

id OUTLINED_FUNCTION_12_3(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_20_37(uint64_t a1)
{
  *(void *)(v1 + 224) = a1;
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_20_38@<X0>(uint64_t a1@<X8>)
{
  return v1 - a1;
}

void OUTLINED_FUNCTION_20_40()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_20_41()
{
  return swift_getKeyPath();
}

id OUTLINED_FUNCTION_20_43()
{
  return [v1 (SEL)(v0 + 1944)];
}

uint64_t OUTLINED_FUNCTION_20_44@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
  return Published.init(initialValue:)();
}

uint64_t OUTLINED_FUNCTION_20_45()
{
  *(unsigned char *)(v0 - 128) = *(_DWORD *)(v0 - 168);
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_20_46()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_20_48()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_20_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(a1, a2, 2, a4, 0, 0, 1, v23, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
}

unint64_t OUTLINED_FUNCTION_20_50()
{
  outlined copy of RemoteControlState(v1);
  return outlined copy of RemoteControlState(v0);
}

uint64_t OUTLINED_FUNCTION_20_51()
{
  return static Published.subscript.getter();
}

void *OUTLINED_FUNCTION_20_52(uint64_t a1)
{
  void *v1 = a1;
  return v1;
}

id OUTLINED_FUNCTION_20_53()
{
  return [v0 (SEL)(v1 + 1471)];
}

unsigned char *OUTLINED_FUNCTION_20_54@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_55(uint64_t a1)
{
  *(void *)(v1 - 216) = a1;
  return v1 - 216;
}

void *OUTLINED_FUNCTION_20_56()
{
  uint64_t v2 = *(void *)(v0 + 40);
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
}

uint64_t OUTLINED_FUNCTION_20_58()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_20_59()
{
  outlined init with take of Notice((long long *)(v0 - 160), v0 - 120);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), *(void *)(v0 - 96));
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_20_60(uint64_t a1)
{
  *(void *)(v1 - 216) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_20_61(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, (SEL)(v4 + 917), v5, a4, 64);
}

uint64_t OUTLINED_FUNCTION_20_63(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_WORD *)(v13 + 12) = 2080;
  *(void *)(v12 + 24) = a12;
  return swift_unknownObjectRetain();
}

double OUTLINED_FUNCTION_20_64()
{
  return 5.0;
}

uint64_t OUTLINED_FUNCTION_20_65()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

id OUTLINED_FUNCTION_85_0()
{
  return @nonobjc TUPhoneNumber.init(digits:countryCode:)(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_85_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return InCallControlButton.__allocating_init(style:imageName:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:)(a1, a2, a3, a4, 0, 1, 0, 0, a5, a10);
}

uint64_t OUTLINED_FUNCTION_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_125()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_85_5@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_85_7()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_85_8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a1, (SEL)(v7 + 2840), v5, v6, a5, 0);
}

uint64_t OUTLINED_FUNCTION_85_9(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

void OUTLINED_FUNCTION_85_10(double a1, __n128 a2)
{
  __n128 *v2 = a2;
  v2[1].n128_u64[0] = 0x4024000000000000;
  v2[1].n128_u64[1] = v3;
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_4_14(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

id OUTLINED_FUNCTION_8_6()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return swift_allocObject();
}

char *OUTLINED_FUNCTION_28_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

void OUTLINED_FUNCTION_28_4()
{
  *(void *)(v0 + 112) = v1;
  *(void *)(v0 + 120) = v2;
  *(void *)(v0 + 128) = v3;
  *(void *)(v0 + 136) = v4;
  *(unsigned char *)(v0 + 144) = 1;
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return v0;
}

void OUTLINED_FUNCTION_28_7(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_28_9(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  **(void **)(v1 - 272) = v0;
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_28_11()
{
  return memcpy((void *)(v0 + 872), (const void *)(v0 + 448), 0x80uLL);
}

void *OUTLINED_FUNCTION_28_12()
{
  return memcpy((void *)(v0 + 432), v1, 0x150uLL);
}

void OUTLINED_FUNCTION_28_14(void *a1)
{
  ControlsButtonProvider.backgroundStyle.setter(a1, 0, 64);
}

uint64_t OUTLINED_FUNCTION_28_15@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002FLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 72));
}

uint64_t OUTLINED_FUNCTION_28_16()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_18()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void *OUTLINED_FUNCTION_28_20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + a1);
  return outlined copy of ConversationLink?(v3);
}

uint64_t OUTLINED_FUNCTION_28_22()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t OUTLINED_FUNCTION_122()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_28_23(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_24()
{
  return v0;
}

void OUTLINED_FUNCTION_28_25(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x12u);
}

uint64_t OUTLINED_FUNCTION_28_26()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void OUTLINED_FUNCTION_28_27(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_28_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_78@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_151()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_28_30()
{
  return *(void *)(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_28_31()
{
  return 255;
}

char *OUTLINED_FUNCTION_28_32@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_28_34()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_36(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_28_37()
{
  outlined consume of RemoteControlState(v0);
  return swift_release();
}

void OUTLINED_FUNCTION_28_39()
{
}

void *OUTLINED_FUNCTION_28_40()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 168), *(void *)(v0 - 144));
}

void OUTLINED_FUNCTION_28_41(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_28_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_44()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_28_45()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

double OUTLINED_FUNCTION_28_47()
{
  return 7.0;
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_56_1();
  unint64_t v7 = v6 + 40 * v5 + 32;
  unint64_t v8 = v3 + 40 * v2;
  if (v7 >= v8 || v7 + 40 * v2 <= v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v4);
    OUTLINED_FUNCTION_32_11();
    swift_bridgeObjectRelease();
    return v8;
  }
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_16_3();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_33_4();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_56_1();
  uint64_t v6 = v5;
  unint64_t v8 = *(void *)(v7(0) - 8);
  uint64_t v9 = v2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v10 = *(void *)(v8 + 72);
  uint64_t v11 = v9 + v10 * v6;
  uint64_t v12 = v3 + v10 * v4;
  if (v11 >= v12 || v11 + v10 * v4 <= v3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v12;
  }
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_16_3();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_33_4();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  uint64_t v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_56_1();
  unint64_t v7 = v6 + 8 * v5 + 32;
  unint64_t v8 = v3 + 8 * v2;
  if (v7 >= v8 || v7 + 8 * v2 <= v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v4);
    OUTLINED_FUNCTION_32_11();
    swift_bridgeObjectRelease();
    return v8;
  }
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_16_3();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_33_4();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  uint64_t v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_56_1();
  unint64_t v7 = v6 + 16 * v5 + 32;
  unint64_t v8 = v3 + 16 * v2;
  if (v7 >= v8 || v7 + 16 * v2 <= v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v4);
    OUTLINED_FUNCTION_32_11();
    swift_bridgeObjectRelease();
    return v8;
  }
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_16_3();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_33_4();
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_26_5(uint64_t a1)
{
  *(void *)(v1 - 192) = a1;
  return v1 - 192;
}

id OUTLINED_FUNCTION_26_6()
{
  uint64_t v2 = *(objc_class **)(v0 + 1560);
  return objc_allocWithZone(v2);
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_26_10()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_26_11()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_26_12()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_26_13()
{
  *(void *)(v1 + 8 * v0) = *(void *)(v2 - 280);
}

uint64_t OUTLINED_FUNCTION_26_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_154()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_26_18()
{
  _StringGuts.grow(_:)(46);
}

uint64_t OUTLINED_FUNCTION_26_19@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000022, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

void OUTLINED_FUNCTION_6_7(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_26_21()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_26_22()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void *OUTLINED_FUNCTION_26_23@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + a1);
  return outlined copy of ConversationLink?(v3);
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_337()
{
  return swift_unknownObjectWeakInit();
}

void OUTLINED_FUNCTION_26_25(uint64_t a1@<X8>, float a2@<S0>)
{
  *(float *)(v2 + a1) = a2;
}

id OUTLINED_FUNCTION_26_26(uint64_t a1, const char *a2)
{
  return objc_msgSendSuper2((objc_super *)(v5 - 64), a2, v4, v3, v2);
}

uint64_t OUTLINED_FUNCTION_26_27()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_26_28()
{
  *(_WORD *)(v0 + 12) = 1024;
}

uint64_t OUTLINED_FUNCTION_57()
{
  return static MainActor.shared.getter();
}

uint64_t OUTLINED_FUNCTION_26_29()
{
  return type metadata accessor for SessionActionNotice(0);
}

void OUTLINED_FUNCTION_26_30()
{
}

uint64_t OUTLINED_FUNCTION_26_31()
{
  return 300000000000000;
}

id OUTLINED_FUNCTION_26_32()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_33(uint64_t a1, uint64_t a2)
{
  __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
  return v3;
}

uint64_t OUTLINED_FUNCTION_26_36()
{
  return v0;
}

void OUTLINED_FUNCTION_26_37()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_26_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *uint64_t v10 = a10;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_39()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_26_40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void *)(v4 - 88);
  *(void *)(a1 - 32) = v3;
  *(void *)(a1 - 24) = v5;
  *(void *)(a1 - 16) = v2;
  *(void *)(a1 - 8) = v1;
  outlined copy of RemoteControlState(v2);
  return swift_retain();
}

void OUTLINED_FUNCTION_26_41()
{
  *(void *)(v1 + 168) = v0;
}

uint64_t OUTLINED_FUNCTION_26_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_44()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_26_45()
{
  return 0;
}

void OUTLINED_FUNCTION_18_2()
{
}

void OUTLINED_FUNCTION_205(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

id OUTLINED_FUNCTION_26_48()
{
  return objc_msgSend(v1, (SEL)(v2 + 750), v0);
}

double OUTLINED_FUNCTION_26_49()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(void *)(v0 - 112) = 0;
  *(unsigned char *)(v0 - 104) = -1;
  return result;
}

double OUTLINED_FUNCTION_26_50()
{
  return *(double *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_26_51()
{
  return v0;
}

id OUTLINED_FUNCTION_26_52()
{
  return specialized ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(v2, v1, v6, v0, v3, v4, v5);
}

uint64_t lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void specialized _arrayConditionalCast<A, B>(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v22 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_48_14();
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *(void *)(v4 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v14, 0);
  if (v14)
  {
    uint64_t v15 = v4 + 32;
    while (1)
    {
      outlined init with copy of IDSLookupManager(v15, (uint64_t)&v23);
      __swift_instantiateConcreteTypeFromMangledName(v22);
      if (!swift_dynamicCast()) {
        break;
      }
      __swift_storeEnumTagSinglePayload(v0, 0, 1, v7);
      outlined init with take of RecentsCallItem(v0, (uint64_t)v13);
      uint64_t v16 = OUTLINED_FUNCTION_48_3();
      outlined init with take of RecentsCallItem(v16, v17);
      uint64_t v18 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v24;
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v24;
      }
      *(void *)(v18 + 16) = v20 + 1;
      outlined init with take of RecentsCallItem(v1, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v20);
      v15 += 40;
      if (!--v14) {
        goto LABEL_12;
      }
    }
    OUTLINED_FUNCTION_53(v0);
    swift_release();
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  }
LABEL_12:
  OUTLINED_FUNCTION_28();
}

uint64_t outlined init with take of RecentsCallItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecentsCallItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for RecentsCallItem(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RecentsCallItem);
}

uint64_t storeEnumTagSinglePayload for RecentsCallItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C340D0C8);
}

void specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3)
{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>, type metadata accessor for Participant, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>, MEMORY[0x1F418BCE8], (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantGridView.IdentifiableParticipantTile>, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantGridView.ParticipantTileInfo>, type metadata accessor for ParticipantGridView.ParticipantTileInfo, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<CaptionSectioner.Caption>, type metadata accessor for CaptionSectioner.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<TranscriptionViewModel.Caption>, type metadata accessor for TranscriptionViewModel.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<LayoutSubview>, MEMORY[0x1E4F3C858], (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, char *), void (*a8)(uint64_t, uint64_t, char *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v14 != v15)
    {
      OUTLINED_FUNCTION_9_24();
      if (v14)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v18 = a6(0);
  OUTLINED_FUNCTION_1(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  size_t v24 = _swift_stdlib_malloc_size(v23);
  if (!v20)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v24 - v22 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_23;
  }
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (char *)v23 + v27;
  uint64_t v29 = a4 + v27;
  if (a1)
  {
    a7(v29, v16, v28);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a8(v29, v16, v28);
  }
  swift_release();
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2)
{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  void (*v3)(void);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_37_13();
  v3(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_61_7();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_37_13();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_46();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_37_13();
  if (v4 + 56 * v3 > v2 && v2 + 56 * v3 > v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore));
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_37_13();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_61_7();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_46();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (MessageType, [Message]));
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  void (*v3)(void);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_48();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  v3(0);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_46();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_48();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  type metadata accessor for NSObject(0, v3);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_48();
  if (!v5 & v4) {
    uint64_t v6 = v3 > v2;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSLayoutConstraint?);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_13_48();
  if (!v6 & v5) {
    uint64_t v7 = v4 > v2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_7_71();
  return swift_arrayInitWithCopy();
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return 0x655F726577617264;
}

void OUTLINED_FUNCTION_35_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return CaptionsStateSource.callName.setter();
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return swift_slowAlloc();
}

id OUTLINED_FUNCTION_38_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v4 + a2) = a1;
  return objc_msgSend(v2, (SEL)(v3 + 2379), 1);
}

BOOL OUTLINED_FUNCTION_92(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_9()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_38_10()
{
  return v0;
}

id OUTLINED_FUNCTION_38_11()
{
  return objc_msgSend(v1, sel_addAction_, v0);
}

uint64_t OUTLINED_FUNCTION_38_12(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 320);
  return outlined init with copy of ShareCardButton(v3, v6, a3);
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_38_14(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_38_18()
{
  return static Published.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_38_19()
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 16) = v1 + 1;
  return outlined init with copy of IDSLookupManager(v0, v4 + 40 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_38_20()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_38_21(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 72) = v2;
  *(void *)(v3 - 88) = a2;
  return type metadata accessor for RemoteControlSuspendRequest(0);
}

uint64_t OUTLINED_FUNCTION_38_25()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t OUTLINED_FUNCTION_38_28()
{
  return type metadata accessor for Participant(0);
}

id OUTLINED_FUNCTION_38_29(__int16 a1)
{
  return PeoplePickerActionBar.updateButton(_:isEnabled:)(v1, (a1 & 0x101) != 0);
}

uint64_t OUTLINED_FUNCTION_38_32()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_38_33(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t OUTLINED_FUNCTION_63_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_351()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_63_4@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  int v1 = a1 - 1;
  if (v1 < 0) {
    int v1 = -1;
  }
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return outlined init with copy of Participant.State();
}

void OUTLINED_FUNCTION_59(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_63_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 112) = a10;
  *(void *)(v11 + 120) = a11;
}

uint64_t OUTLINED_FUNCTION_63_8(uint64_t a1, uint64_t a2)
{
  return __swift_mutable_project_boxed_opaque_existential_1(a2, v2);
}

uint64_t OUTLINED_FUNCTION_63_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(_DWORD *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(v1 - 184) = *(void *)a1;
  *(void *)(v1 - 176) = v5;
  *(unsigned char *)(v1 - 168) = v4 & 1;
  uint64_t v6 = v1 - 184;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(a1 + 72);
  *(void *)(v1 - 96) = v3;
  return Participant.ScreenShareAttributes.debugDescription.getter();
}

id OUTLINED_FUNCTION_63_10(double a1, double a2, double a3, double a4, uint64_t a5, const char *a6)
{
  LODWORD(a3) = 1148846080;
  LODWORD(a4) = 1112014848;
  return objc_msgSend(v6, a6, a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_63_11(double a1)
{
  *(double *)(v1 + 168) = a1;
}

uint64_t OUTLINED_FUNCTION_46_0@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_89_1()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_89_2()
{
  return type metadata accessor for Participant(0);
}

uint64_t OUTLINED_FUNCTION_89_3(uint64_t a1, uint64_t a2)
{
  __swift_storeEnumTagSinglePayload(v2, a2, 1, *(void *)(v3 - 168));
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_89_6()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v1, v2, (uint64_t *)(v0 + 160));
}

uint64_t specialized _NativeDictionary.makeIterator()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void specialized Array.append<A>(contentsOf:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *v1;
  uint64_t v7 = *(void *)(*v1 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = v3;
  uint64_t v9 = v2;
  if (!OUTLINED_FUNCTION_110_5() || v7 + v5 > *(void *)(v6 + 24) >> 1)
  {
    OUTLINED_FUNCTION_109_2();
    uint64_t v6 = v9();
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_34_27();
  if (v10 != v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = OUTLINED_FUNCTION_62_7();
  v8(v12);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v6;
    OUTLINED_FUNCTION_15_0();
    return;
  }
  OUTLINED_FUNCTION_107_6();
  if (!v11)
  {
    *(void *)(v6 + 16) = v13;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  void (*v3)(unint64_t, uint64_t, unint64_t);
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void (*v10)(unint64_t, uint64_t, unint64_t);
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_31();
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = *v1;
  uint64_t v8 = *(void *)(*v1 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v9 = v4;
  char v10 = v3;
  char v11 = v2;
  if (!OUTLINED_FUNCTION_110_5() || v8 + v6 > *(void *)(v7 + 24) >> 1)
  {
    OUTLINED_FUNCTION_109_2();
    uint64_t v7 = v11();
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v6) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v13 = (*(void *)(v7 + 24) >> 1) - v12;
  char v14 = *(void *)(v9(0) - 8);
  if (v13 < v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v10(v0 + v15, v6, v7 + v15 + *(void *)(v14 + 72) * v12);
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v7;
    OUTLINED_FUNCTION_28();
    return;
  }
  OUTLINED_FUNCTION_107_6();
  if (!v17)
  {
    *(void *)(v7 + 16) = v16;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_56_13();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_110_5() || (OUTLINED_FUNCTION_196_3(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_109_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_34_27();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = OUTLINED_FUNCTION_62_7();
  specialized UnsafeMutablePointer.initialize(from:count:)(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v2;
    return;
  }
  OUTLINED_FUNCTION_107_6();
  if (!v4)
  {
    *(void *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  int isUniquelyReferenced_nonNull_native;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void v92[2];
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v99 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_36();
  char v11 = v9 - v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8_4();
  id v98 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v92 - v15;
  uint64_t v17 = *(void *)(v3 + 16);
  uint64_t v18 = *v0;
  uint64_t v19 = *(void *)(*v0 + 16);
  uint64_t v20 = v19 + v17;
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char *v0 = v18;
  if (!isUniquelyReferenced_nonNull_native || (unint64_t v22 = *(void *)(v18 + 24) >> 1, v22 < v20))
  {
    if (v19 <= v20) {
      uint64_t v23 = v19 + v17;
    }
    else {
      uint64_t v23 = v19;
    }
    uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v23, 1, v18);
    char *v0 = v18;
    unint64_t v22 = *(void *)(v18 + 24) >> 1;
  }
  size_t v24 = *(void *)(v18 + 16);
  uint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v25 = *(void *)(v5 + 72);
  uint64_t v26 = v22 - v24;
  unint64_t v27 = specialized Sequence._copySequenceContents(initializing:)((uint64_t)&v100, v18 + v20 + v25 * v24, v22 - v24, v3);
  if (v27 < v17) {
    goto LABEL_17;
  }
  if (!v27) {
    goto LABEL_12;
  }
  uint64_t v28 = *(void *)(v18 + 16);
  uint64_t v29 = __OFADD__(v28, v27);
  id v30 = v28 + v27;
  if (v29)
  {
    __break(1u);
    while (1)
    {
      while (1)
      {
        outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
        uint64_t v41 = *v0;
        uint64_t v42 = *(void *)(*v0 + 24);
        v93 = v42 >> 1;
        if ((uint64_t)(v42 >> 1) < v26 + 1)
        {
          uint64_t v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v26 + 1, 1, v41);
          char *v0 = v41;
          v93 = *(void *)(v41 + 24) >> 1;
        }
        uint64_t v43 = OUTLINED_FUNCTION_162();
        outlined init with copy of Participant?(v43, v44, &demangling cache variable for type metadata for Participant?);
        uint64_t v45 = OUTLINED_FUNCTION_171_2();
        OUTLINED_FUNCTION_33_0(v45, v46, v99);
        if (!v40) {
          break;
        }
LABEL_30:
        uint64_t v3 = v98;
        outlined destroy of SystemUpdateNotice?(v11, &demangling cache variable for type metadata for Participant?);
LABEL_66:
        *(void *)(*v0 + 16) = v26;
        unint64_t v79 = OUTLINED_FUNCTION_278();
        outlined init with copy of Participant?(v79, v80, &demangling cache variable for type metadata for Participant?);
        OUTLINED_FUNCTION_33_0(v3, 1, v99);
        if (v40) {
          goto LABEL_24;
        }
      }
      v92[1] = v41 + v20;
      _s15ConversationKit11ParticipantVWObTm_5();
      uint64_t v47 = v26 < v93;
      uint64_t v48 = v96;
      while (1)
      {
        if (!v47)
        {
          v96 = v48;
          _s15ConversationKit11ParticipantVWOhTm_7(v1, (void (*)(void))type metadata accessor for Participant);
          uint64_t v3 = v98;
          goto LABEL_66;
        }
        outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
        uint64_t v34 = _s15ConversationKit11ParticipantVWObTm_5();
        uint64_t v32 = v100;
        id v50 = v102;
        uint64_t v51 = v103;
        v96 = v102;
        v97 = v101;
        if (v104)
        {
          OUTLINED_FUNCTION_174_3();
          v94 = v52;
          v95 = v53;
          goto LABEL_35;
        }
        uint64_t v56 = v103 + 1;
        if (__OFADD__(v103, 1)) {
          break;
        }
        OUTLINED_FUNCTION_166_2();
        if (v58 == v29)
        {
          v94 = 0;
          v95 = v57;
          goto LABEL_41;
        }
        OUTLINED_FUNCTION_164_3();
        if (v61) {
          goto LABEL_40;
        }
        if (v59 + 1 >= v60)
        {
          v94 = 0;
          v95 = v59;
          goto LABEL_41;
        }
        OUTLINED_FUNCTION_165_2();
        if (v70)
        {
          BOOL v59 = v69;
          goto LABEL_40;
        }
        if (v67 + 2 >= v68)
        {
          v94 = 0;
          v95 = v69;
LABEL_41:
          uint64_t v55 = 1;
LABEL_42:
          uint64_t v62 = v32;
          goto LABEL_43;
        }
        if (*(void *)(v97 + 8 * (v67 + 2)))
        {
          BOOL v59 = v67 + 2;
          goto LABEL_40;
        }
        uint64_t v62 = v32;
        if (v67 + 3 >= v68)
        {
          v94 = 0;
          v95 = v67 + 2;
        }
        else
        {
          OUTLINED_FUNCTION_165_2();
          if (v72)
          {
            BOOL v59 = v71;
LABEL_40:
            OUTLINED_FUNCTION_92_4(v59);
LABEL_35:
            uint64_t v54 = outlined init with copy of Participant.State();
            uint64_t v55 = 0;
            goto LABEL_42;
          }
          OUTLINED_FUNCTION_163_1();
          if (v58 != v29)
          {
            OUTLINED_FUNCTION_164_3();
            if (v76) {
              goto LABEL_40;
            }
            uint64_t v77 = v75 + 6;
            while (v77 < v74)
            {
              if (*(void *)(v97 + 8 * v77++))
              {
                BOOL v59 = v77 - 1;
                goto LABEL_40;
              }
            }
            v94 = 0;
            v95 = v74 - 1;
          }
          else
          {
            v94 = 0;
            v95 = v73;
          }
        }
        uint64_t v55 = 1;
LABEL_43:
        ++v26;
        OUTLINED_FUNCTION_184_2(v54, v55);
        uint64_t v100 = v62;
        v101 = v97;
        uint64_t v48 = v96;
        v102 = v96;
        Swift::String v103 = v95;
        v104 = v94;
        uint64_t v63 = OUTLINED_FUNCTION_162();
        outlined init with copy of Participant?(v63, v64, &demangling cache variable for type metadata for Participant?);
        uint64_t v65 = OUTLINED_FUNCTION_171_2();
        OUTLINED_FUNCTION_33_0(v65, v66, v32);
        if (v40) {
          goto LABEL_30;
        }
        _s15ConversationKit11ParticipantVWObTm_5();
        uint64_t v47 = v26 < v93;
      }
      __break(1u);
LABEL_81:
      if (v56 + 3 >= v50)
      {
        v94 = 0;
        v95 = v49;
LABEL_91:
        uint64_t v35 = 1;
        uint64_t v3 = v98;
        uint64_t v36 = v51;
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_165_2();
      if (v87) {
        goto LABEL_76;
      }
      OUTLINED_FUNCTION_163_1();
      if (v58 == v29)
      {
LABEL_92:
        v94 = 0;
        v95 = v85;
        goto LABEL_91;
      }
      OUTLINED_FUNCTION_164_3();
      if (!v89)
      {
        uint64_t v81 = v88 - 1;
        v90 = v95 + 6;
        while (v90 < v88)
        {
          if (*(void *)(v97 + 8 * v90++))
          {
            uint64_t v81 = v90 - 1;
            goto LABEL_73;
          }
        }
        goto LABEL_90;
      }
LABEL_73:
      OUTLINED_FUNCTION_92_4(v81);
      uint64_t v3 = v98;
      uint64_t v32 = v84;
LABEL_20:
      uint64_t v34 = outlined init with copy of Participant.State();
      uint64_t v35 = 0;
LABEL_21:
      uint64_t v36 = v32;
LABEL_22:
      OUTLINED_FUNCTION_184_2(v34, v35);
      uint64_t v100 = v36;
      v101 = v97;
      v102 = v96;
      Swift::String v103 = v95;
      v104 = v94;
      id v37 = OUTLINED_FUNCTION_278();
      outlined init with copy of Participant?(v37, v38, v39);
      OUTLINED_FUNCTION_33_0(v3, 1, v32);
      if (v40)
      {
LABEL_24:
        outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
        outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
        outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
        OUTLINED_FUNCTION_28();
        return;
      }
    }
  }
  *(void *)(v18 + 16) = v30;
LABEL_12:
  if (v27 != v26)
  {
    OUTLINED_FUNCTION_28();
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return;
  }
LABEL_18:
  uint64_t v26 = *(void *)(v18 + 16);
  uint64_t v32 = v100;
  v96 = v102;
  v97 = v101;
  v95 = v103;
  if (v104)
  {
    OUTLINED_FUNCTION_174_3();
    v94 = v33;
    uint64_t v3 = v98;
    goto LABEL_20;
  }
  if (!__OFADD__(v103, 1))
  {
    OUTLINED_FUNCTION_166_2();
    if (v58 == v29)
    {
      v94 = 0;
      uint64_t v35 = 1;
      uint64_t v3 = v98;
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_164_3();
    if (v83) {
      goto LABEL_73;
    }
    if (v81 + 1 >= v82)
    {
LABEL_90:
      v94 = 0;
      v95 = v81;
      goto LABEL_91;
    }
    OUTLINED_FUNCTION_165_2();
    if (!v86)
    {
      id v49 = v56 + 2;
      if (v56 + 2 >= v50) {
        goto LABEL_92;
      }
      if (!*(void *)(v97 + 8 * v49)) {
        goto LABEL_81;
      }
      uint64_t v81 = v56 + 2;
      goto LABEL_73;
    }
LABEL_76:
    uint64_t v81 = v85;
    goto LABEL_73;
  }
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_14();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(*v0 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char *v0 = v3;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v7 = *(void *)(v3 + 24) >> 1, v7 < v4 + v2))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_156_4();
    uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    char *v0 = v3;
    uint64_t v7 = *(void *)(v3 + 24) >> 1;
  }
  if (!*(void *)(v5 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (v7 - *(void *)(v3 + 16) < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(v5 + 32, v2);
  if (v2)
  {
    uint64_t v9 = *(void *)(*v0 + 16);
    char v10 = __OFADD__(v9, v2);
    char v11 = v9 + v2;
    if (!v10)
    {
      *(void *)(*v0 + 16) = v11;
      goto LABEL_11;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15_0();
  specialized Array._endMutation()();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  void (*v0)(uint64_t);
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_4_15();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v5;
  uint64_t v6 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v7 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v6 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_27;
  }
  char v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v10 <= v7) {
      char v10 = v7;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1C8774500](v6, v10, 1, v5);
    swift_bridgeObjectRelease();
    uint64_t *v1 = v5;
    uint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    char v11 = OUTLINED_FUNCTION_119_3(v9);
    v0(v11);
    if (v12 >= v4) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    char v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    OUTLINED_FUNCTION_162_3();
    if (v15)
    {
      __break(1u);
      return;
    }
    *(void *)(v13 + 16) = v14;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15_0();
  specialized Array._endMutation()();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_56_13();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_110_5() || (OUTLINED_FUNCTION_196_3(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_109_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_34_27();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_62_7();
  specialized UnsafeMutablePointer.initialize(from:count:)();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v2;
    return;
  }
  OUTLINED_FUNCTION_107_6();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_56_13();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_110_5() || (OUTLINED_FUNCTION_196_3(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_109_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_34_27();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_62_7();
  specialized UnsafeMutablePointer.initialize(from:count:)();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v2;
    return;
  }
  OUTLINED_FUNCTION_107_6();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_56_13();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_110_5() || (OUTLINED_FUNCTION_196_3(), !(v6 ^ v4 | v5)))
  {
    OUTLINED_FUNCTION_109_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v8, v9, v10);
    uint64_t v2 = v11;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_34_27();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = OUTLINED_FUNCTION_62_7();
  specialized UnsafeMutablePointer.initialize(from:count:)(v12, v13);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v2;
    return;
  }
  OUTLINED_FUNCTION_107_6();
  if (!v4)
  {
    *(void *)(v2 + 16) = v14;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void specialized UnsafeMutablePointer.moveInitialize(from:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for Participant);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for HUDActivityManager.BannerUpdate);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, MEMORY[0x1F418BB40]);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for ParticipantGridView.IdentifiableParticipantTile);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for ParticipantGridView.ParticipantTileInfo);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for ConversationControlsAction);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for CaptionSectioner.SpeakerSection);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for TranscriptionViewModel.Caption);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for Participant.Caption);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, MEMORY[0x1F418AEA0]);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, (void (*)(void))type metadata accessor for ParticipantReaction);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, MEMORY[0x1E4FB0E68]);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, MEMORY[0x1E4F3C858]);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2, a3, MEMORY[0x1F418BFC8]);
}

void specialized UnsafeMutablePointer.moveInitialize(from:count:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_84_1();
    if (v8 && (a4(0), OUTLINED_FUNCTION_0(), v5 + *(void *)(v9 + 72) * v4 > v6))
    {
      if (v6 != v5)
      {
        OUTLINED_FUNCTION_32_21();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      a4(0);
      OUTLINED_FUNCTION_32_21();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

uint64_t OUTLINED_FUNCTION_72()
{
  return swift_bridgeObjectRetain();
}

double OUTLINED_FUNCTION_24_4()
{
  return 0.0;
}

void OUTLINED_FUNCTION_72_0()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_1(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(void *)uint64_t v7 = result;
  *(void *)(v7 + 8) = a2;
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  *(void *)(v7 + 32) = a5;
  *(void *)(v7 + 40) = a6;
  *(unsigned char *)(v7 + 48) = a7;
  return result;
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  return swift_bridgeObjectRetain();
}

_WORD *OUTLINED_FUNCTION_180(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_4()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_72_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return _s15ConversationKit11ParticipantVSgWOcTm_0(v10, (uint64_t)&a9 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
}

uint64_t OUTLINED_FUNCTION_72_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_9()
{
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_72_10()
{
  return _typeName(_:qualified:)();
}

void OUTLINED_FUNCTION_72_11(double a1)
{
  *(double *)(v1 + 144) = a1;
}

ValueMetadata *type metadata accessor for ConversationLink()
{
  return &type metadata for ConversationLink;
}

ConversationKit::RecentsCallHandle __swiftcall RecentsCallHandle.init(type:value:)(ConversationKit::RecentsCallHandleType type, Swift::String_optional value)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)type;
  *(Swift::String_optional *)(v2 + 8) = value;
  result.value = value;
  result.type = type;
  return result;
}

uint64_t getEnumTagSinglePayload for RecentsCallItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C340D014);
}

uint64_t initializeBufferWithCopyOfBuffer for SystemUpdateNotice.NoticeType(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SharePlayAppType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance SharePlayAppType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t VideoMessageInboxController.getAllMessages()()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(void *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(MessageType, [Message])]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  uint64_t *v2 = v0;
  v2[1] = VideoMessageInboxController.getAllMessages();
  uint64_t v3 = *(void *)(v0 + 24);
  return MEMORY[0x1F4188080](v0 + 16, v1, v1, 0, 0, &async function pointer to partial apply for closure #1 in VideoMessageInboxController.getAllMessages(), v3, v1);
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_6();
  return v0();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RecentsCallItemProviding.callStatus.getter in conformance RecentsCallItem()
{
  unint64_t v0 = RecentsCallItem.callStatus.getter();
  return v0 | ((HIDWORD(v0) & 1) << 32);
}

unint64_t RecentsCallItem.callStatus.getter()
{
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_164_2();
  OUTLINED_FUNCTION_155_1();
  OUTLINED_FUNCTION_171_1();
  if (!v6)
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v3, (void (*)(void))type metadata accessor for RecentsCallItemType);
LABEL_5:
    uint64_t v11 = 0;
    unsigned __int8 v10 = 1;
    return v11 | ((unint64_t)v10 << 32);
  }
  OUTLINED_FUNCTION_114_0();
  uint64_t v7 = *(void **)(v0 + *(int *)(v4 + 24));
  id v8 = v7;
  _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
  if (!v7) {
    goto LABEL_5;
  }
  unsigned int v9 = objc_msgSend(v8, sel_callStatus);

  unsigned __int8 v10 = 0;
  uint64_t v11 = v9;
  return v11 | ((unint64_t)v10 << 32);
}

uint64_t RecentsCallItem.messageIndicatorViewModel.getter()
{
  uint64_t v3 = v0;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_65_3();
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v3, (uint64_t)v6);
  swift_getEnumCaseMultiPayload();
  OUTLINED_FUNCTION_171_1();
  if (v11)
  {
    if ((v10 - 3) >= 2)
    {
      OUTLINED_FUNCTION_114_0();
      id v14 = *(id *)(v1 + *(int *)(v7 + 52));
      uint64_t v13 = v1;
    }
    else
    {
      _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v6, v2);
      id v12 = *(id *)(v2 + *(int *)(v7 + 52));
      uint64_t v13 = v2;
    }
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v13, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
  }
  else
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v6, (void (*)(void))type metadata accessor for RecentsCallItemType);
  }
  return OUTLINED_FUNCTION_209_1();
}

void OUTLINED_FUNCTION_137(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 96) = &a9;
}

void OUTLINED_FUNCTION_137_0(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t OUTLINED_FUNCTION_137_1(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return v1 + 56;
}

void OUTLINED_FUNCTION_137_2(uint64_t a1, uint64_t a2)
{
  closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_180_0()
{
  return PersonNameComponents.givenName.setter();
}

uint64_t OUTLINED_FUNCTION_180_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_98_0(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

uint64_t OUTLINED_FUNCTION_180_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_180_3()
{
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_199_0()
{
  return outlined init with copy of Participant.State();
}

uint64_t OUTLINED_FUNCTION_199_1()
{
  return outlined init with copy of Conversation(v0, v1 - 160);
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)()
{
  OUTLINED_FUNCTION_11_10();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_20_0();
}

{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v9;
  char v10;

  unsigned __int8 v0 = Hasher.init(_seed:)();
  OUTLINED_FUNCTION_34_0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return Hasher._finalize()();
}

{
  Swift::UInt32 v0;

  OUTLINED_FUNCTION_11_10();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_30_2();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_8();
}

{
  char v0;

  OUTLINED_FUNCTION_11_10();
  if (!v0) {
    OUTLINED_FUNCTION_13();
  }
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_8();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  char v0;
  id v1;

  OUTLINED_FUNCTION_11_10();
  uint64_t v1 = VideoReaction.rawValue.getter(v0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_8();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return OUTLINED_FUNCTION_20_0();
}

{
  char v0;

  OUTLINED_FUNCTION_11_10();
  Hasher._combine(_:)((v0 & 1) - 3);
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_6_8();
}

{
  return OUTLINED_FUNCTION_6_8();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  return Hasher._finalize()();
}

{
  char v0;

  OUTLINED_FUNCTION_11_10();
  Hasher._combine(_:)(qword_1C3768DB8[v0]);
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void static RecentsCollectionViewModel.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v91 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_42();
  v89 = (void *)v8;
  uint64_t v88 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_10_5();
  uint64_t v84 = v10;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_42();
  uint64_t v83 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v14 = OUTLINED_FUNCTION_8(v13);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_42();
  uint64_t v100 = v18;
  uint64_t v99 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_10_5();
  uint64_t v95 = v20;
  OUTLINED_FUNCTION_8_1();
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  size_t v24 = (char *)&v79 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v96 = (uint64_t)&v79 - v25;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_42();
  uint64_t v97 = v27;
  uint64_t v28 = *v3;
  uint64_t v82 = *v1;
  specialized MutableCollection.subscript.getter(1, (uint64_t)&outlined read-only object #0 of static RecentsCollectionViewSection.allCases.getter);
  OUTLINED_FUNCTION_62_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_6();
  uint64_t v30 = v29;
  uint64_t v81 = *(void *)(v29 + 16);
  if (!v81) {
    goto LABEL_71;
  }
  unint64_t v31 = 0;
  uint64_t v85 = v29 + 32;
  v101 = (long long *)&v111;
  uint64_t v32 = v82;
  unint64_t v87 = v7;
  uint64_t v79 = v28;
  uint64_t v80 = v29;
  v90 = v24;
  while (1)
  {
    if (v31 >= *(void *)(v30 + 16)) {
      goto LABEL_78;
    }
    unint64_t v86 = v31;
    uint64_t v33 = *(unsigned __int8 *)(v85 + v31);
    if (*(void *)(v28 + 16)
      && (specialized __RawDictionaryStorage.find<A>(_:)(*(unsigned __int8 *)(v85 + v31)), (v34 & 1) != 0))
    {
      uint64_t v35 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v36 = *(void *)(v32 + 16);
    uint64_t v98 = v35;
    if (!v36)
    {
      uint64_t v38 = 0;
      if (v35) {
        break;
      }
      goto LABEL_12;
    }
    specialized __RawDictionaryStorage.find<A>(_:)(v33);
    uint64_t v38 = (v37 & 1) != 0 ? swift_bridgeObjectRetain() : 0;
    uint64_t v35 = v98;
    if (v98) {
      break;
    }
LABEL_12:
    if (v38) {
      goto LABEL_75;
    }
LABEL_64:
    unint64_t v31 = v86 + 1;
    if (v86 + 1 == v81) {
      goto LABEL_71;
    }
  }
  if (!v38) {
    goto LABEL_75;
  }
  unint64_t v39 = *(void *)(v35 + 16);
  if (v39 != *(void *)(v38 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_75:
    swift_bridgeObjectRelease();
LABEL_71:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28();
    return;
  }
  uint64_t v92 = v38 + 32;
  uint64_t v93 = v35 + 32;
  uint64_t v40 = v38;
  swift_bridgeObjectRetain();
  uint64_t v94 = v40;
  swift_bridgeObjectRetain();
  unint64_t v41 = 0;
  unint64_t v42 = 0;
  while (1)
  {
    if (v42 == v39)
    {
      uint64_t v116 = 0;
      unint64_t v42 = v39;
      memset(v115, 0, sizeof(v115));
      goto LABEL_23;
    }
    if (v42 >= *(void *)(v98 + 16)) {
      break;
    }
    outlined init with copy of IDSLookupManager(v93 + 40 * v42++, (uint64_t)v115);
LABEL_23:
    if (v41 == v39)
    {
      uint64_t v114 = 0;
      unint64_t v41 = v39;
      memset(v113, 0, sizeof(v113));
    }
    else
    {
      if (v41 >= *(void *)(v94 + 16)) {
        goto LABEL_77;
      }
      outlined init with copy of IDSLookupManager(v92 + 40 * v41++, (uint64_t)v113);
    }
    outlined init with take of RecentsCollectionViewSectionable?((uint64_t)v115, (uint64_t)&v109, &demangling cache variable for type metadata for RecentsCollectionViewSectionable?);
    outlined init with take of RecentsCollectionViewSectionable?((uint64_t)v113, (uint64_t)v101, &demangling cache variable for type metadata for RecentsCollectionViewSectionable?);
    if (!v110)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = v80;
      if (!v112)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = v79;
        uint64_t v32 = v82;
        goto LABEL_64;
      }
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v101, &demangling cache variable for type metadata for RecentsCollectionViewSectionable?);
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    if (!v112)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_71;
    }
    uint64_t v43 = v17;
    outlined init with take of Notice(&v109, (uint64_t)v106);
    outlined init with take of Notice(v101, (uint64_t)v103);
    uint64_t v44 = v107;
    uint64_t v45 = v108;
    __swift_project_boxed_opaque_existential_1(v106, v107);
    uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
    uint64_t v48 = v47;
    uint64_t v49 = v104;
    uint64_t v50 = v105;
    __swift_project_boxed_opaque_existential_1(v103, v104);
    if (v46 == (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50) && v48 == v51)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v17 = v43;
    }
    else
    {
      char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v43;
      if ((v53 & 1) == 0) {
        goto LABEL_69;
      }
    }
    outlined init with copy of IDSLookupManager((uint64_t)v106, (uint64_t)v102);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
    uint64_t v55 = v99;
    uint64_t v54 = v100;
    if (!swift_dynamicCast())
    {
      OUTLINED_FUNCTION_55_8(v54, 1);
      uint64_t v68 = v54;
      goto LABEL_48;
    }
    OUTLINED_FUNCTION_55_8(v54, 0);
    uint64_t v56 = v54;
    uint64_t v57 = v97;
    _s15ConversationKit15RecentsCallItemVWObTm_1(v56, v97, (void (*)(void))type metadata accessor for RecentsCallItem);
    outlined init with copy of IDSLookupManager((uint64_t)v103, (uint64_t)v102);
    if (swift_dynamicCast())
    {
      OUTLINED_FUNCTION_55_8((uint64_t)v17, 0);
      uint64_t v58 = v96;
      _s15ConversationKit15RecentsCallItemVWObTm_1((uint64_t)v17, v96, (void (*)(void))type metadata accessor for RecentsCallItem);
      uint64_t v59 = *(int *)(v55 + 32);
      uint64_t v60 = (void *)(v57 + v59);
      uint64_t v61 = *(void *)(v57 + v59 + 8);
      uint64_t v62 = (void *)(v58 + v59);
      uint64_t v63 = v62[1];
      if (!v61)
      {
        if (v63)
        {
LABEL_67:
          uint64_t v78 = v57;
          uint64_t v67 = (uint64_t)v90;
          _s15ConversationKit15RecentsCallItemVWOcTm_2(v78, (uint64_t)v90, (void (*)(void))type metadata accessor for RecentsCallItem);
          _s15ConversationKit15RecentsCallItemVWOcTm_2(v96, v95, (void (*)(void))type metadata accessor for RecentsCallItem);
LABEL_68:
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v95, (void (*)(void))type metadata accessor for RecentsCallItem);
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v67, (void (*)(void))type metadata accessor for RecentsCallItem);
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v96, (void (*)(void))type metadata accessor for RecentsCallItem);
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v97, (void (*)(void))type metadata accessor for RecentsCallItem);
LABEL_69:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
LABEL_70:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_71;
        }
LABEL_50:
        uint64_t v69 = v57;
        uint64_t v67 = (uint64_t)v90;
        _s15ConversationKit15RecentsCallItemVWOcTm_2(v69, (uint64_t)v90, (void (*)(void))type metadata accessor for RecentsCallItem);
        _s15ConversationKit15RecentsCallItemVWOcTm_2(v96, v95, (void (*)(void))type metadata accessor for RecentsCallItem);
        goto LABEL_51;
      }
      if (!v63) {
        goto LABEL_67;
      }
      if (*v60 == *v62 && v61 == v63) {
        goto LABEL_50;
      }
      char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v66 = v57;
      uint64_t v67 = (uint64_t)v90;
      _s15ConversationKit15RecentsCallItemVWOcTm_2(v66, (uint64_t)v90, (void (*)(void))type metadata accessor for RecentsCallItem);
      _s15ConversationKit15RecentsCallItemVWOcTm_2(v96, v95, (void (*)(void))type metadata accessor for RecentsCallItem);
      if ((v65 & 1) == 0) {
        goto LABEL_68;
      }
LABEL_51:
      long long v70 = v89;
      _s15ConversationKit15RecentsCallItemVWOcTm_2(v67, (uint64_t)v89, (void (*)(void))type metadata accessor for RecentsCallItemType);
      if (swift_getEnumCaseMultiPayload() - 3 >= 2)
      {
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_1((uint64_t)v70, (void (*)(void))type metadata accessor for RecentsCallItemType);
        LODWORD(v70) = 0;
      }
      else
      {
        uint64_t v71 = v83;
        _s15ConversationKit15RecentsCallItemVWObTm_1((uint64_t)v70, v83, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        long long v70 = *(void **)(v71 + *(int *)(v88 + 52));
        id v72 = v70;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v71, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        if (v70)
        {
          LODWORD(v70) = objc_msgSend(v72, sel_isRead);
        }
      }
      uint64_t v73 = (uint64_t)v87;
      _s15ConversationKit15RecentsCallItemVWOcTm_2(v95, (uint64_t)v87, (void (*)(void))type metadata accessor for RecentsCallItemType);
      if (swift_getEnumCaseMultiPayload() - 3 >= 2)
      {
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v73, (void (*)(void))type metadata accessor for RecentsCallItemType);
LABEL_59:
        unsigned int v77 = 0;
        goto LABEL_60;
      }
      uint64_t v74 = v84;
      _s15ConversationKit15RecentsCallItemVWObTm_1(v73, v84, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      uint64_t v75 = *(void **)(v74 + *(int *)(v88 + 52));
      id v76 = v75;
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v74, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      if (!v75) {
        goto LABEL_59;
      }
      unsigned int v77 = objc_msgSend(v76, sel_isRead);

LABEL_60:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v95, (void (*)(void))type metadata accessor for RecentsCallItem);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1((uint64_t)v90, (void (*)(void))type metadata accessor for RecentsCallItem);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v96, (void (*)(void))type metadata accessor for RecentsCallItem);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v97, (void (*)(void))type metadata accessor for RecentsCallItem);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      if (v70 != v77) {
        goto LABEL_70;
      }
    }
    else
    {
      OUTLINED_FUNCTION_55_8((uint64_t)v17, 1);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v57, (void (*)(void))type metadata accessor for RecentsCallItem);
      uint64_t v68 = (uint64_t)v17;
LABEL_48:
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v68, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
}

uint64_t outlined init with copy of IDSLookupManager(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

char *initializeBufferWithCopyOfBuffer for RecentsCallItem(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    type metadata accessor for RecentsCallItemType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v40 = type metadata accessor for UUID();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        unint64_t v41 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
        *(void *)&a1[v41[5]] = *(char **)((char *)a2 + v41[5]);
        uint64_t v42 = v41[6];
        uint64_t v43 = *(char **)((char *)a2 + v42);
        *(void *)&a1[v42] = v43;
        uint64_t v44 = v41[7];
        uint64_t v45 = &a1[v44];
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = *(char **)((char *)a2 + v44);
        swift_bridgeObjectRetain();
        id v48 = v43;
        if (v47)
        {
          uint64_t v49 = *((void *)v46 + 1);
          uint64_t v50 = *((void *)v46 + 2);
          *(void *)uint64_t v45 = v47;
          *((void *)v45 + 1) = v49;
          *((void *)v45 + 2) = v50;
          id v51 = v47;
          goto LABEL_20;
        }
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((void *)v45 + 2) = *((void *)v46 + 2);
        break;
      case 2u:
        id v52 = *a2;
        char v53 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v53;
        *((void *)a1 + 2) = a2[2];
        uint64_t v54 = v52;
LABEL_20:
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      default:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
        }
        uint64_t v15 = v8[6];
        uint64_t v16 = *(char **)((char *)a2 + v15);
        *(void *)&a1[v15] = v16;
        uint64_t v17 = v8[7];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = (char *)a2 + v17;
        *(void *)uint64_t v18 = *(void *)v19;
        v18[8] = v19[8];
        *(void *)&a1[v8[8]] = *(char **)((char *)a2 + v8[8]);
        *(void *)&a1[v8[9]] = *(char **)((char *)a2 + v8[9]);
        uint64_t v20 = v8[10];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for UUID();
        id v24 = v16;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
        }
        uint64_t v26 = v8[11];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = *(void **)v28;
        if (*(void *)v28)
        {
          uint64_t v30 = *((void *)v28 + 1);
          uint64_t v31 = *((void *)v28 + 2);
          *(void *)uint64_t v27 = v29;
          *((void *)v27 + 1) = v30;
          *((void *)v27 + 2) = v31;
          id v32 = v29;
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
          *((void *)v27 + 2) = *((void *)v28 + 2);
        }
        uint64_t v33 = v8[12];
        char v34 = &a1[v33];
        uint64_t v35 = (char *)a2 + v33;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v33, 1, v23))
        {
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v34, v35, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v23);
        }
        uint64_t v37 = v8[13];
        uint64_t v38 = *(char **)((char *)a2 + v37);
        *(void *)&a1[v37] = v38;
        id v39 = v38;
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = a3[5];
    uint64_t v56 = a3[6];
    uint64_t v57 = &a1[v55];
    uint64_t v58 = (char **)((char *)a2 + v55);
    uint64_t v59 = v58[1];
    *(void *)uint64_t v57 = *v58;
    *((void *)v57 + 1) = v59;
    uint64_t v60 = &a1[v56];
    uint64_t v61 = (char **)((char *)a2 + v56);
    uint64_t v62 = v61[1];
    *(void *)uint64_t v60 = *v61;
    *((void *)v60 + 1) = v62;
    uint64_t v63 = a3[7];
    uint64_t v64 = a3[8];
    char v65 = &a1[v63];
    uint64_t v66 = (char **)((char *)a2 + v63);
    uint64_t v67 = v66[1];
    *(void *)char v65 = *v66;
    *((void *)v65 + 1) = v67;
    uint64_t v68 = &a1[v64];
    uint64_t v69 = (char **)((char *)a2 + v64);
    uint64_t v70 = v69[1];
    *(void *)uint64_t v68 = *v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = a3[9];
    id v72 = &a1[v71];
    uint64_t v73 = (char *)a2 + v71;
    uint64_t v74 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74))
    {
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v74);
    }
    uint64_t v76 = a3[10];
    uint64_t v77 = a3[11];
    uint64_t v78 = *(char **)((char *)a2 + v76);
    *(void *)&a1[v76] = v78;
    uint64_t v79 = *(char **)((char *)a2 + v77);
    *(void *)&a1[v77] = v79;
    uint64_t v80 = a3[13];
    *(void *)&a1[a3[12]] = *(char **)((char *)a2 + a3[12]);
    uint64_t v81 = &a1[v80];
    uint64_t v82 = (char **)((char *)a2 + v80);
    uint64_t v83 = v82[1];
    *(void *)uint64_t v81 = *v82;
    *((void *)v81 + 1) = v83;
    uint64_t v84 = a3[14];
    uint64_t v85 = *(char **)((char *)a2 + v84);
    *(void *)&a1[v84] = v85;
    id v86 = v78;
    id v87 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v88 = v85;
  }
  return a1;
}

uint64_t outlined init with copy of RecentsCallItem()
{
  uint64_t v2 = OUTLINED_FUNCTION_41_3();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t _s15ConversationKit15RecentsCallItemVWOcTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v4();
  return a2;
}

uint64_t _s15ConversationKit15RecentsCallItemVWOcTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s15ConversationKit15RecentsCallItemVWOcTm_2(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t _s15ConversationKit15RecentsCallItemVWOcTm_3()
{
  uint64_t v2 = OUTLINED_FUNCTION_51_14();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

__n128 OUTLINED_FUNCTION_57_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, long long a14)
{
  return (__n128)a14;
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_57_2()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return type metadata accessor for UUID();
}

BOOL OUTLINED_FUNCTION_57_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_57_10(float a1)
{
  float *v1 = a1;
  return swift_bridgeObjectRetain();
}

double OUTLINED_FUNCTION_57_12()
{
  return *(double *)(v0 + 192);
}

uint64_t outlined init with take of RecentsCallItem()
{
  uint64_t v2 = OUTLINED_FUNCTION_41_3();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t _s15ConversationKit15RecentsCallItemVWObTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_90();
  v5(v4);
  return a2;
}

uint64_t _s15ConversationKit15RecentsCallItemVWObTm_1(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_46();
  v4();
  return a2;
}

uint64_t _s15ConversationKit15RecentsCallItemVWObTm_2()
{
  uint64_t v2 = OUTLINED_FUNCTION_51_14();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t RecentsCallItem.dataSourceId.getter()
{
  return OUTLINED_FUNCTION_35();
}

Swift::Int RecentsCallItem.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_67_1()
{
  uint64_t v2 = *(void **)(v0 + 8);
  return v2;
}

uint64_t OUTLINED_FUNCTION_67_2()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_67_4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_67_7()
{
  return v0;
}

void *OUTLINED_FUNCTION_67_12(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

double OUTLINED_FUNCTION_67_13()
{
  return *(double *)(v0 + 160);
}

void static RecentsCollectionViewModel.section(_:includes:now:calendar:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v128 = v0;
  uint64_t v129 = v1;
  uint64_t v3 = v2;
  uint64_t v130 = *v4;
  uint64_t v5 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v131 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *((void *)v3 + 3);
  uint64_t v16 = *((void *)v3 + 4);
  uint64_t v18 = __swift_project_boxed_opaque_existential_1(v3, v17);
  MEMORY[0x1F4188790](v18);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
  outlined init with copy of IDSLookupManager((uint64_t)v3, (uint64_t)v136);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v5) == 1)
  {
    uint64_t v16 = v137;
    uint64_t v19 = v138;
    __swift_project_boxed_opaque_existential_1(v136, v137);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v19);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v15, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v5) != 1)
  {
    uint64_t v21 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v22 = v21(v131, v15, v5);
    switch(v130)
    {
      case 1:
        uint64_t v33 = *((void *)v3 + 3);
        uint64_t v34 = *((void *)v3 + 4);
        __swift_project_boxed_opaque_existential_1(v3, v33);
        (*(void (**)(uint64_t, uint64_t))(v34 + 32))(v33, v34);
        goto LABEL_15;
      case 2:
        static Date.> infix(_:_:)();
LABEL_15:
        OUTLINED_FUNCTION_4_1();
        v35();
        goto LABEL_30;
      case 3:
        uint64_t v36 = type metadata accessor for Calendar.Component();
        OUTLINED_FUNCTION_4();
        uint64_t v38 = v37;
        MEMORY[0x1F4188790](v39);
        OUTLINED_FUNCTION_62();
        uint64_t v40 = (unsigned int *)MEMORY[0x1E4F27BF8];
        goto LABEL_23;
      case 4:
        OUTLINED_FUNCTION_18_41(v22, v23, v24, v25, v26, v27, v28, v29, (uint64_t)v120);
        uint64_t v42 = MEMORY[0x1F4188790](v41);
        OUTLINED_FUNCTION_8_54(v42, v43, v44, v45, v46, v47, v48, v49, (uint64_t)v120);
        MEMORY[0x1F4188790](v50);
        uint64_t v51 = OUTLINED_FUNCTION_12_45();
        uint64_t v124 = &v120;
        OUTLINED_FUNCTION_4();
        uint64_t v53 = v52;
        MEMORY[0x1F4188790](v54);
        OUTLINED_FUNCTION_9_58();
        uint64_t v55 = (unsigned int *)MEMORY[0x1E4F27BF8];
        goto LABEL_25;
      case 5:
        uint64_t v36 = type metadata accessor for Calendar.Component();
        OUTLINED_FUNCTION_4();
        uint64_t v38 = v56;
        MEMORY[0x1F4188790](v57);
        OUTLINED_FUNCTION_62();
        uint64_t v40 = (unsigned int *)MEMORY[0x1E4F27BC8];
        goto LABEL_23;
      case 6:
        OUTLINED_FUNCTION_18_41(v22, v23, v24, v25, v26, v27, v28, v29, (uint64_t)v120);
        uint64_t v59 = MEMORY[0x1F4188790](v58);
        OUTLINED_FUNCTION_8_54(v59, v60, v61, v62, v63, v64, v65, v66, (uint64_t)v120);
        MEMORY[0x1F4188790](v67);
        uint64_t v51 = OUTLINED_FUNCTION_12_45();
        uint64_t v124 = &v120;
        OUTLINED_FUNCTION_4();
        uint64_t v53 = v68;
        MEMORY[0x1F4188790](v69);
        OUTLINED_FUNCTION_9_58();
        uint64_t v55 = (unsigned int *)MEMORY[0x1E4F27BC8];
        goto LABEL_25;
      case 7:
        uint64_t v36 = type metadata accessor for Calendar.Component();
        OUTLINED_FUNCTION_4();
        uint64_t v38 = v70;
        MEMORY[0x1F4188790](v71);
        OUTLINED_FUNCTION_62();
        uint64_t v40 = (unsigned int *)MEMORY[0x1E4F27C38];
        goto LABEL_23;
      case 8:
        OUTLINED_FUNCTION_18_41(v22, v23, v24, v25, v26, v27, v28, v29, (uint64_t)v120);
        uint64_t v73 = MEMORY[0x1F4188790](v72);
        OUTLINED_FUNCTION_8_54(v73, v74, v75, v76, v77, v78, v79, v80, (uint64_t)v120);
        MEMORY[0x1F4188790](v81);
        uint64_t v51 = OUTLINED_FUNCTION_12_45();
        uint64_t v124 = &v120;
        OUTLINED_FUNCTION_4();
        uint64_t v53 = v82;
        MEMORY[0x1F4188790](v83);
        OUTLINED_FUNCTION_9_58();
        uint64_t v55 = (unsigned int *)MEMORY[0x1E4F27C38];
        goto LABEL_25;
      case 9:
        uint64_t v36 = type metadata accessor for Calendar.Component();
        OUTLINED_FUNCTION_4();
        uint64_t v38 = v84;
        MEMORY[0x1F4188790](v85);
        OUTLINED_FUNCTION_62();
        uint64_t v40 = (unsigned int *)MEMORY[0x1E4F27C28];
LABEL_23:
        (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))(v7 + 32, *v40, v36);
        Calendar.isDate(_:equalTo:toGranularity:)();
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v7 + 32, v36);
        OUTLINED_FUNCTION_4_1();
        v86();
        goto LABEL_30;
      case 10:
        OUTLINED_FUNCTION_18_41(v22, v23, v24, v25, v26, v27, v28, v29, (uint64_t)v120);
        uint64_t v88 = MEMORY[0x1F4188790](v87);
        OUTLINED_FUNCTION_8_54(v88, v89, v90, v91, v92, v93, v94, v95, (uint64_t)v120);
        MEMORY[0x1F4188790](v96);
        uint64_t v51 = OUTLINED_FUNCTION_12_45();
        uint64_t v124 = &v120;
        OUTLINED_FUNCTION_4();
        uint64_t v53 = v97;
        MEMORY[0x1F4188790](v98);
        OUTLINED_FUNCTION_9_58();
        uint64_t v55 = (unsigned int *)MEMORY[0x1E4F27C28];
LABEL_25:
        unsigned int v99 = *v55;
        uint64_t v100 = *(void (**)(void))(v53 + 104);
        unsigned int v122 = v99;
        uint64_t v121 = (void (*)(char *, void, uint64_t))v100;
        v100(v16);
        Calendar.date(byAdding:value:to:wrappingComponents:)();
        uint64_t v101 = OUTLINED_FUNCTION_351();
        uint64_t v120 = v102;
        v102(v101);
        OUTLINED_FUNCTION_52_0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v7) == 1)
        {
          (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v7);
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for Date?);
          OUTLINED_FUNCTION_52_0();
        }
        else
        {
          v21(v126, v3, v7);
          OUTLINED_FUNCTION_52_0();
          MEMORY[0x1F4188790](v103);
          v121((char *)&v120 - v123, v122, v51);
          Calendar.isDate(_:equalTo:toGranularity:)();
          uint64_t v104 = OUTLINED_FUNCTION_351();
          v120(v104);
          uint64_t v105 = *(void (**)(void))(v130 + 8);
          OUTLINED_FUNCTION_4_1();
          v105();
          OUTLINED_FUNCTION_4_1();
          v105();
        }
        goto LABEL_30;
      case 11:
        uint64_t v106 = type metadata accessor for Calendar.Component();
        v127 = &v120;
        OUTLINED_FUNCTION_4();
        uint64_t v108 = v107;
        uint64_t v130 = v5;
        uint64_t v110 = *(void *)(v109 + 64);
        MEMORY[0x1F4188790](v111);
        unint64_t v112 = (v110 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v113 = *MEMORY[0x1E4F27C28];
        unint64_t v126 = *(char **)(v108 + 104);
        ((void (*)(char *, uint64_t, uint64_t))v126)((char *)&v120 - v112, v113, v106);
        uint64_t v125 = Calendar.component(_:from:)();
        uint64_t v114 = *(uint64_t (**)(char *, uint64_t))(v108 + 8);
        uint64_t v115 = v114((char *)&v120 - v112, v106);
        MEMORY[0x1F4188790](v115);
        ((void (*)(char *, uint64_t, uint64_t))v126)((char *)&v120 - v112, v113, v106);
        uint64_t v116 = Calendar.component(_:from:)();
        uint64_t v117 = OUTLINED_FUNCTION_351();
        ((void (*)(uint64_t))v114)(v117);
        OUTLINED_FUNCTION_4_1();
        v118();
        if (!__OFSUB__(v116, 1)) {
          goto LABEL_30;
        }
        __break(1u);
        return;
      case 12:
        OUTLINED_FUNCTION_4_1();
        v119();
        goto LABEL_30;
      default:
        OUTLINED_FUNCTION_4_1();
        v30();
        goto LABEL_30;
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined init with copy of IDSLookupManager((uint64_t)v3, (uint64_t)v135);
  int v20 = v130;
  if (v130 == 12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v135);
  }
  else
  {
    outlined init with copy of IDSLookupManager((uint64_t)v135, (uint64_t)v132);
    if (v20 == 1)
    {
      uint64_t v31 = v133;
      uint64_t v32 = v134;
      __swift_project_boxed_opaque_existential_1(v132, v133);
      (*(void (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v135);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
  }
LABEL_30:
  OUTLINED_FUNCTION_28();
}

Swift::Int OUTLINED_FUNCTION_6_8()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

id OUTLINED_FUNCTION_6_10()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

double OUTLINED_FUNCTION_6_16(uint64_t a1)
{
  return *(double *)(a1 + 72);
}

id OUTLINED_FUNCTION_6_17()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return swift_retain();
}

void *OUTLINED_FUNCTION_6_19()
{
  v1[2] = v0;
  v1[3] = v2;
  return memcpy(v1 + 4, v3, 0x88uLL);
}

void OUTLINED_FUNCTION_6_20(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  return outlined retain of String(v0 - 80);
}

uint64_t OUTLINED_FUNCTION_6_24()
{
  return v0;
}

id OUTLINED_FUNCTION_6_25()
{
  uint64_t v3 = *(const char **)(v1 + 3176);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return v0;
}

void OUTLINED_FUNCTION_15_3(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_6_26(uint64_t result)
{
  void *v1 = result;
  *(void *)(result + 24) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_27()
{
  return swift_bridgeObjectRelease_n();
}

BOOL OUTLINED_FUNCTION_12_4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_6_31(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41854D8](a1, a2, v2, a1);
}

uint64_t OUTLINED_FUNCTION_6_32()
{
  return *(void *)(v0 - 88);
}

uint64_t OUTLINED_FUNCTION_6_33()
{
  return v0;
}

double OUTLINED_FUNCTION_6_34(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20,double a21,double a22)
{
  return a22;
}

uint64_t OUTLINED_FUNCTION_6_36()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_6_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return *(void *)((a10 & 0xFFFFFFFFFFFFFF8) + 0x10);
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_39()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

void OUTLINED_FUNCTION_6_40()
{
  *(_WORD *)(v0 + 22) = 2048;
}

uint64_t OUTLINED_FUNCTION_6_42(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_6_43()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t OUTLINED_FUNCTION_6_44()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_6_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_48()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_6_51()
{
  return swift_getObjectType();
}

BOOL OUTLINED_FUNCTION_6_52(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

uint64_t OUTLINED_FUNCTION_11_3(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

id OUTLINED_FUNCTION_6_55()
{
  uint64_t v2 = *(void **)(v0 + 56);
  return v2;
}

uint64_t OUTLINED_FUNCTION_6_56()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_6_57()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(v0, v1);
  ReportSpamManager.reportFaceTimeCallSpam<A>(call:)((uint64_t)v3, v1, v2);
}

void OUTLINED_FUNCTION_6_58(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_6_59()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_60(unsigned __int8 *a1)
{
  return *a1;
}

id OUTLINED_FUNCTION_6_61()
{
  return [v0 (SEL)(v1 + 2072)];
}

void OUTLINED_FUNCTION_6_62()
{
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_69(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_5(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_6_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_67()
{
  return Notification.object.getter();
}

uint64_t OUTLINED_FUNCTION_6_68()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_7(uint64_t result)
{
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_70()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_71()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_72(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_6_73@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = 0x61737265766E6F43;
  unint64_t v6 = 0xEF74694B6E6F6974;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v9 = 0;
  unint64_t v4 = (a2 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v5, v2, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_6_74(uint64_t a1, ...)
{
  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

Swift::Int OUTLINED_FUNCTION_6_75(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  uint64_t countAndFlagsBits = string._countAndFlagsBits;
  unint64_t v6 = object;
  return _findStringSwitchCase(cases:string:)(cases, *(Swift::String *)&countAndFlagsBits);
}

id OUTLINED_FUNCTION_6_76()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

double OUTLINED_FUNCTION_6_77()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_6_79()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_6_81(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0, 0.0, 0.0, 0.0);
}

uint64_t OUTLINED_FUNCTION_6_82(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_6_83()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_84()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

__n128 OUTLINED_FUNCTION_6_85()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)v0;
  *(_OWORD *)(v1 - 112) = v2;
  __n128 result = *(__n128 *)(v0 + 32);
  *(__n128 *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_86()
{
  return *(void *)(v0 - 136);
}

double OUTLINED_FUNCTION_6_87()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_91()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_92()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_93()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_6_94(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 - 184) = 0;
  *(unsigned char *)(v4 - 192) = 0;
  *(unsigned char *)(v4 - 184) = a2 & 1;
  *(unsigned char *)(v4 - 192) = a4 & 1;
  return static ProposedViewSize.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_6_95()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

unint64_t OUTLINED_FUNCTION_6_97()
{
  return 0xD00000000000001FLL;
}

unint64_t OUTLINED_FUNCTION_6_98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
}

uint64_t OUTLINED_FUNCTION_6_99()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_100()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_6_102()
{
  outlined init with take of Notice((long long *)(v0 + 160), v0 + 208);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), *(void *)(v0 + 232));
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_6_103()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_104()
{
  return 0;
}

id OUTLINED_FUNCTION_6_106()
{
  __swift_project_boxed_opaque_existential_1(v1, *(void *)(v0 + 40));
  return Activity.linkMetadata.getter();
}

uint64_t OUTLINED_FUNCTION_6_107()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_108()
{
  return type metadata accessor for ClarityUIRootView();
}

uint64_t OUTLINED_FUNCTION_6_110()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_111()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_6_112(uint64_t *a1)
{
  return getEnumTag for TapInteraction.EventType(a1);
}

uint64_t OUTLINED_FUNCTION_6_114(uint64_t result)
{
  *(void *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_115()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_6_116()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_6_118()
{
  return v0;
}

void OUTLINED_FUNCTION_6_119(UIActivityIndicatorView *a1@<X8>)
{
  UIActivityIndicatorView.init(style:size:)(a1, ConversationKit_PlatformActivityIndicatorStyle_spinner, ConversationKit_PlatformActivityIndicatorSize_large);
}

uint64_t OUTLINED_FUNCTION_6_120()
{
  return *(void *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return v0;
}

void OUTLINED_FUNCTION_10_12(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void *OUTLINED_FUNCTION_10_13()
{
  uint64_t v2 = *(void *)(v0 - 96);
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), v2);
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_10_15(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 8u);
}

id OUTLINED_FUNCTION_10_18(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1069), v3);
}

void OUTLINED_FUNCTION_10_19()
{
  uint64_t v1 = 0x7562206D6F726620;
  unint64_t v2 = 0xED000020656C646ELL;
  String.append(_:)(*(Swift::String *)&v1);
}

void *OUTLINED_FUNCTION_5_16()
{
  return malloc(0x30uLL);
}

uint64_t OUTLINED_FUNCTION_10_20()
{
  return Publisher.receive<A>(on:options:)();
}

id OUTLINED_FUNCTION_10_21(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  return [a29 (SEL)(v29 + 2600)];
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  return type metadata accessor for UUID();
}

void OUTLINED_FUNCTION_32_2()
{
  *(unsigned char *)(v1 + 32) = *v0;
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

id OUTLINED_FUNCTION_10_24()
{
  return [v0 (SEL)(v1 + 1331)];
}

void *OUTLINED_FUNCTION_10_25()
{
  return memcpy((void *)(v0 + 664), (const void *)(v0 + 256), 0x80uLL);
}

uint64_t OUTLINED_FUNCTION_10_26()
{
  return outlined destroy of Participant.ScreenInfo(v0 + 432);
}

uint64_t OUTLINED_FUNCTION_10_28()
{
  return static os_log_type_t.fault.getter();
}

uint64_t OUTLINED_FUNCTION_10_29()
{
  return 32;
}

id OUTLINED_FUNCTION_10_30()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_10_31()
{
  return os_log(_:dso:log:type:_:)();
}

id OUTLINED_FUNCTION_10_33(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2, v11, v10, v9);
}

uint64_t OUTLINED_FUNCTION_5_17()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t OUTLINED_FUNCTION_10_36@<X0>(uint64_t a1@<X8>)
{
  v2[5] = a1;
  void *v2 = v1;
  return swift_getKeyPath();
}

uint64_t OUTLINED_FUNCTION_10_37()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t OUTLINED_FUNCTION_10_38@<X0>(char a1@<W0>, int a2@<W8>)
{
  return a2 & 0xFFFFFFFE | a1 & 1;
}

id OUTLINED_FUNCTION_10_39()
{
  return static ConversationControlsButtonFactory.makeButton(frame:provider:)(v0);
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return type metadata accessor for AttributedString.FormattingOptions();
}

uint64_t OUTLINED_FUNCTION_10_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_44()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_10_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_46()
{
  return String.localized.getter();
}

uint64_t OUTLINED_FUNCTION_10_47()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_10_48()
{
  return swift_getTupleTypeMetadata2();
}

id OUTLINED_FUNCTION_10_49(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t OUTLINED_FUNCTION_10_50()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_51()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_172()
{
  JUMPOUT(0x1C8773BA0);
}

unint64_t OUTLINED_FUNCTION_10_52(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(*(void *)(a5 + 56) + 8 * result) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_53(uint64_t a1)
{
  v2[8] = a1;
  v2[4] = v1;
  v2[5] = v3;
  return type metadata accessor for InCallControlButton();
}

uint64_t OUTLINED_FUNCTION_10_54()
{
  return _typeName(_:qualified:)();
}

BOOL OUTLINED_FUNCTION_10_58(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v8 = v7;
  uint64_t v9 = v6;
  uint64_t v10 = v6;
  return CGRectEqualToRect(*(CGRect *)&a1, *(CGRect *)&a5);
}

uint64_t OUTLINED_FUNCTION_10_59()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  outlined consume of RemoteControlState(v0);
  return swift_release();
}

size_t OUTLINED_FUNCTION_10_60(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_10_61(uint64_t a1)
{
  return specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(a1, 1);
}

uint64_t OUTLINED_FUNCTION_10_62()
{
  return v0 - 152;
}

void OUTLINED_FUNCTION_10_63()
{
  JUMPOUT(0x1C87733A0);
}

double OUTLINED_FUNCTION_10_64()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_65()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_67()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t OUTLINED_FUNCTION_10_68()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  return *(void *)(v0 + 48) + *(void *)(*(void *)(v2 - 232) + 72) * v1;
}

uint64_t OUTLINED_FUNCTION_10_69()
{
  return outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v7, v6, v5, v4, v3, v2, v0, v1);
}

void OUTLINED_FUNCTION_10_70()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_10_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_72@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + 16 * a1;
  *(void *)(v2 + 304) = *(void *)(v4 + 32);
  *(void *)(v2 + 312) = *(void *)(v4 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_10_75()
{
  return static NSObject.== infix(_:_:)();
}

unint64_t OUTLINED_FUNCTION_10_76()
{
  return type metadata accessor for OS_dispatch_queue();
}

id OUTLINED_FUNCTION_10_77(uint64_t a1, const char *a2)
{
  return objc_msgSend(v4, a2, v3, v2, v6);
}

uint64_t OUTLINED_FUNCTION_10_81()
{
  return swift_slowAlloc();
}

double OUTLINED_FUNCTION_10_82()
{
  return v0;
}

id OUTLINED_FUNCTION_10_83(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v7, (SEL)(v6 + 2840), v8, v5, a5, 0);
}

uint64_t OUTLINED_FUNCTION_10_84()
{
  return swift_release();
}

char *OUTLINED_FUNCTION_10_85(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_10_86(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1) |= v2;
}

double OUTLINED_FUNCTION_10_87()
{
  return 14.0;
}

uint64_t OUTLINED_FUNCTION_10_88(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

__n128 OUTLINED_FUNCTION_10_89(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,long long a29)
{
  return (__n128)a29;
}

uint64_t OUTLINED_FUNCTION_10_90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return type metadata accessor for MainActor();
}

uint64_t OUTLINED_FUNCTION_45_0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t OUTLINED_FUNCTION_64_2(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return v0;
}

void OUTLINED_FUNCTION_64_4(double a1)
{
  *(double *)(v1 + 88) = a1;
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return specialized >> prefix<A>(_:)();
}

void OUTLINED_FUNCTION_126()
{
}

uint64_t OUTLINED_FUNCTION_64_8()
{
  return v0;
}

double OUTLINED_FUNCTION_64_10()
{
  return *(double *)(v0 + 168);
}

void OUTLINED_FUNCTION_33_5(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 32) = 1;
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  *(void *)(v0 - 264) = v2;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return swift_release_n();
}

id OUTLINED_FUNCTION_33_9(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1.0, v3);
}

void OUTLINED_FUNCTION_33_10()
{
  _StringGuts.grow(_:)(38);
}

uint64_t OUTLINED_FUNCTION_33_11()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

double OUTLINED_FUNCTION_33_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_33_16()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_33_17()
{
  return type metadata accessor for UUID();
}

void OUTLINED_FUNCTION_33_18()
{
}

uint64_t OUTLINED_FUNCTION_33_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_20()
{
  return *(void *)(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_33_23()
{
  return v0;
}

id OUTLINED_FUNCTION_33_26()
{
  return CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
}

id OUTLINED_FUNCTION_33_27(float a1)
{
  float *v2 = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_33_28()
{
  return outlined destroy of UUID?(v0);
}

uint64_t OUTLINED_FUNCTION_33_29()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_33_30()
{
  return static Published.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_33_31()
{
  return v0 - 168;
}

id OUTLINED_FUNCTION_33_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_35(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 304));
}

id OUTLINED_FUNCTION_33_36()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

void OUTLINED_FUNCTION_33_38(double a1)
{
  *(double *)(v1 + 64) = a1;
}

void static RecentsCallItem.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  static RecentsCallItemType.== infix(_:_:)();
  if ((v7 & 1) == 0) {
    goto LABEL_61;
  }
  uint64_t v8 = (int *)type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_6_78();
  if (v11)
  {
    if (!v9) {
      goto LABEL_61;
    }
    OUTLINED_FUNCTION_82_5(v10);
    BOOL v14 = v14 && v12 == v13;
    if (!v14)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      OUTLINED_FUNCTION_100_3();
      if ((v15 & 1) == 0) {
        goto LABEL_61;
      }
    }
  }
  else if (v9)
  {
    goto LABEL_61;
  }
  OUTLINED_FUNCTION_6_78();
  if (v18)
  {
    if (!v16) {
      goto LABEL_61;
    }
    OUTLINED_FUNCTION_82_5(v17);
    if (!v14 || v19 != v20)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      OUTLINED_FUNCTION_100_3();
      if ((v22 & 1) == 0) {
        goto LABEL_61;
      }
    }
  }
  else if (v16)
  {
    goto LABEL_61;
  }
  OUTLINED_FUNCTION_6_78();
  if (v25)
  {
    if (!v23) {
      goto LABEL_61;
    }
    OUTLINED_FUNCTION_82_5(v24);
    if (!v14 || v26 != v27)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      OUTLINED_FUNCTION_100_3();
      if ((v29 & 1) == 0) {
        goto LABEL_61;
      }
    }
  }
  else if (v23)
  {
    goto LABEL_61;
  }
  OUTLINED_FUNCTION_6_78();
  if (v32)
  {
    if (!v30) {
      goto LABEL_61;
    }
    OUTLINED_FUNCTION_82_5(v31);
    if (!v14 || v33 != v34)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      OUTLINED_FUNCTION_100_3();
      if ((v36 & 1) == 0) {
        goto LABEL_61;
      }
    }
  }
  else if (v30)
  {
    goto LABEL_61;
  }
  uint64_t v37 = v6 + v8[9];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v101 = &v95;
  uint64_t v39 = OUTLINED_FUNCTION_8(v38);
  uint64_t v41 = *(void *)(v40 + 64);
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v50 = OUTLINED_FUNCTION_72_5(v42, v43, v44, v45, v46, v47, v48, v49, v95);
  OUTLINED_FUNCTION_137(v50, v51, v52, v53, v54, v55, v56, v57, v95);
  uint64_t v58 = MEMORY[0x1F4188790](v4 + v8[9]);
  OUTLINED_FUNCTION_140_2(v58, v59, v60, v61, v62, v63, v64, v65, v95);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Date?, Date?));
  uint64_t v100 = &v95;
  uint64_t v67 = OUTLINED_FUNCTION_8(v66);
  MEMORY[0x1F4188790](v67);
  OUTLINED_FUNCTION_51_13(v68, v95);
  _s15ConversationKit11ParticipantVSgWOcTm_0(v1, v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  type metadata accessor for Date();
  uint64_t v69 = OUTLINED_FUNCTION_69(v37);
  if (!v14)
  {
    unsigned int v99 = &v95;
    MEMORY[0x1F4188790](v69);
    OUTLINED_FUNCTION_135_1();
    _s15ConversationKit11ParticipantVSgWOcTm_0(v37, v41, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_69(v2);
    if (!v70)
    {
      uint64_t v98 = &v95;
      OUTLINED_FUNCTION_5_3();
      uint64_t v96 = v72;
      MEMORY[0x1F4188790](v73);
      OUTLINED_FUNCTION_36_4();
      OUTLINED_FUNCTION_63_0();
      v74();
      lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, MEMORY[0x1F418BA20]);
      HIDWORD(v97) = OUTLINED_FUNCTION_208_0();
      uint64_t v95 = v41;
      uint64_t v75 = *(void (**)(void))(v96 + 8);
      OUTLINED_FUNCTION_10_6();
      v75();
      outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for Date?);
      outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
      OUTLINED_FUNCTION_10_6();
      v75();
      OUTLINED_FUNCTION_129_2();
      OUTLINED_FUNCTION_179_2();
      OUTLINED_FUNCTION_8_63();
      if ((v97 & 0x100000000) == 0) {
        goto LABEL_61;
      }
      goto LABEL_48;
    }
    outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for Date?);
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_26_2();
    v71();
    OUTLINED_FUNCTION_31_10();
LABEL_46:
    outlined destroy of SystemUpdateNotice?(v37, (uint64_t *)&demangling cache variable for type metadata for (Date?, Date?));
    OUTLINED_FUNCTION_8_63();
    goto LABEL_61;
  }
  outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_69(v2);
  if (!v14) {
    goto LABEL_46;
  }
  outlined destroy of SystemUpdateNotice?(v37, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_8_63();
LABEL_48:
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_61;
  }
  uint64_t v82 = v8[11];
  uint64_t v83 = *(void **)(v6 + v82);
  uint64_t v84 = *(void **)(v4 + v82);
  if (v83)
  {
    if (!v84) {
      goto LABEL_61;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    id v85 = v84;
    id v86 = v83;
    char v87 = static NSObject.== infix(_:_:)();

    if ((v87 & 1) == 0) {
      goto LABEL_61;
    }
  }
  else if (v84)
  {
    goto LABEL_61;
  }
  specialized static Array<A>.== infix(_:_:)(*(void *)(v6 + v8[12]), *(void *)(v4 + v8[12]), v76, v77, v78, v79, v80, v81, v95, v96, v97, (unint64_t)v98);
  if (v88)
  {
    uint64_t v89 = v8[13];
    uint64_t v90 = *(void *)(v6 + v89);
    uint64_t v91 = *(void *)(v6 + v89 + 8);
    uint64_t v92 = (void *)(v4 + v89);
    BOOL v93 = v90 == *v92 && v91 == v92[1];
    if (v93 || (_stringCompareWithSmolCheck(_:_:expecting:)(), OUTLINED_FUNCTION_100_3(), (v94 & 1) != 0)) {
      static NSObject.== infix(_:_:)();
    }
  }
LABEL_61:
  OUTLINED_FUNCTION_28();
}

void OUTLINED_FUNCTION_27_0()
{
  *(void *)(v1 - 96) = 60;
  *(void *)(v1 - 88) = 0xE100000000000000;
  *(void *)(v1 - 104) = v0;
}

void OUTLINED_FUNCTION_27_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return 0;
}

id OUTLINED_FUNCTION_27_4()
{
  uint64_t v3 = *v0;
  return [v1 v3];
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized CaptionsViewModel.withMutation<A, B>(keyPath:_:)(a1, v9, (uint64_t)&a9, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return 0;
}

void OUTLINED_FUNCTION_27_10(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_27_11(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_27_12()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_27_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_14()
{
  return outlined consume of AnsweringMachineCallStatus?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_16(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_27_17(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_27_18@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

id OUTLINED_FUNCTION_27_20()
{
  uint64_t v3 = *(const char **)(v1 + 1712);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_27_22()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void *OUTLINED_FUNCTION_27_24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + a1);
  return outlined copy of ConversationLink?(v3);
}

uint64_t OUTLINED_FUNCTION_27_26()
{
  return swift_getObjectType();
}

unint64_t OUTLINED_FUNCTION_27_27(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  *(void *)(*(void *)(a4 + 48) + 8 * result) = a2;
  *(void *)(*(void *)(a4 + 56) + 8 * result) = a3;
  return result;
}

float OUTLINED_FUNCTION_27_28@<S0>(uint64_t a1@<X8>)
{
  return *(float *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_27_29()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_27_31()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_27_32()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_27_34()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_27_35(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL OUTLINED_FUNCTION_27_36()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

id OUTLINED_FUNCTION_27_37()
{
  return [v0 (SEL)(v1 + 3052)];
}

void OUTLINED_FUNCTION_27_39()
{
  *(void *)(*(void *)(v1 + 48) + 8 * v0) = *(void *)(*(void *)(v2 + 48) + 8 * v0);
}

uint64_t OUTLINED_FUNCTION_27_40@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 32) = v1;
  *(void *)(a1 - 24) = v2;
  uint64_t v5 = *(void *)(v4 - 88);
  *(void *)(a1 - 16) = v3;
  *(void *)(a1 - 8) = v5;
  outlined copy of RemoteControlState(v1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_27_41(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_27_42(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_27_43()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetMaxY(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_27_44()
{
  return BannerPresentationManager.presentBanner(as:type:reply:)();
}

uint64_t OUTLINED_FUNCTION_27_45()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_27_46()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_27_48()
{
  JUMPOUT(0x1C87733A0);
}

uint64_t OUTLINED_FUNCTION_27_50(uint64_t a1)
{
  *(void *)(v1 - 248) = a1;
  return v1 - 248;
}

uint64_t OUTLINED_FUNCTION_27_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_52()
{
  return type metadata accessor for Logger();
}

uint64_t OUTLINED_FUNCTION_27_54()
{
  return v0;
}

unint64_t *OUTLINED_FUNCTION_27_55()
{
  return &STACK[0x2A0];
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_31_4(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_31_5()
{
  uint64_t v3 = *(const char **)(v1 + 3808);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  return 28245;
}

uint64_t OUTLINED_FUNCTION_31_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_31_9()
{
  return swift_allocObject();
}

char *OUTLINED_FUNCTION_31_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

BOOL OUTLINED_FUNCTION_31_14()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_31_16(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(v1 + 56);
  return a1 + v2;
}

uint64_t OUTLINED_FUNCTION_31_17()
{
  return swift_bridgeObjectRetain_n();
}

id OUTLINED_FUNCTION_31_19(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v6, v5, v4, v3);
}

uint64_t OUTLINED_FUNCTION_31_20()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_31_21(uint64_t a1)
{
  return v1 + *(int *)(a1 + 28);
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_104(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_268(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_31_22()
{
  return outlined init with copy of IDSLookupManager(v0 - 144, v0 - 184);
}

uint64_t OUTLINED_FUNCTION_31_23()
{
  return v0;
}

void OUTLINED_FUNCTION_31_24()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_31_26()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_31_27()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_slowAlloc();
}

unint64_t OUTLINED_FUNCTION_31_30()
{
  return 0xD000000000000017;
}

uint64_t OUTLINED_FUNCTION_31_31@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 16) = *(void *)(v2 - 88);
  outlined copy of RemoteControlState(v1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_31_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_36()
{
  return type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_31_37()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_31_39(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_31_43()
{
  return swift_retain();
}

double OUTLINED_FUNCTION_31_44()
{
  return *(double *)(v0 + 72);
}

void OUTLINED_FUNCTION_31_45()
{
  ++*(void *)(v0 + 16);
}

Swift::Int OUTLINED_FUNCTION_5_19()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

void OUTLINED_FUNCTION_5_20()
{
  JUMPOUT(0x1C87760E0);
}

void OUTLINED_FUNCTION_5_21(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v6, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_5_22(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return specialized Array._endMutation()();
}

uint64_t OUTLINED_FUNCTION_5_23(uint64_t a1)
{
  *(void *)(v1 - 296) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_5_24(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

id OUTLINED_FUNCTION_5_25()
{
  return objc_msgSend(v1, (SEL)(v2 + 750), v0);
}

uint64_t OUTLINED_FUNCTION_5_26()
{
  return specialized ClarityUIPreferences.withMutation<A, B>(keyPath:_:)();
}

id OUTLINED_FUNCTION_5_27()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_5_29(float *a1, float a2)
{
  *a1 = a2;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return v0;
}

id OUTLINED_FUNCTION_5_35(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1069), 0.75);
}

uint64_t OUTLINED_FUNCTION_5_36(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  a9 = *a1;
  return outlined release of String((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return v0;
}

void OUTLINED_FUNCTION_5_39()
{
  JUMPOUT(0x1C87760E0);
}

uint64_t OUTLINED_FUNCTION_5_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_43()
{
  return static _SetStorage.allocate(capacity:)();
}

id OUTLINED_FUNCTION_5_44()
{
  uint64_t v3 = *(const char **)(v1 + 1664);
  return [v0 v3];
}

id OUTLINED_FUNCTION_39_0()
{
  return [v0 (SEL)(v1 + 1944)];
}

char *OUTLINED_FUNCTION_5_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_5_46()
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, *(void *)(v2 - 216));
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_48()
{
  return v0;
}

void OUTLINED_FUNCTION_5_50()
{
  specialized Logger.traceFunction<A>(returning:file:function:line:)();
}

uint64_t OUTLINED_FUNCTION_5_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_52()
{
  return PersonNameComponents.init()();
}

id OUTLINED_FUNCTION_5_53()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_5_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_56()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_5_57()
{
  return v0;
}

void OUTLINED_FUNCTION_5_58()
{
  uint64_t v4 = *(void *)(v1 + 56) + 6 * v0;
  *(_WORD *)(v4 + 4) = *(void *)(v3 - 312);
  *(_DWORD *)uint64_t v4 = v2;
}

id OUTLINED_FUNCTION_5_60(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_5_61()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

void OUTLINED_FUNCTION_5_62()
{
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(v3, v4, v1);
}

char *OUTLINED_FUNCTION_18_5@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_5_63@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000027, a1 | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_5_65()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_66()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_5_67(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

double OUTLINED_FUNCTION_5_68()
{
  return v0;
}

id OUTLINED_FUNCTION_5_69()
{
  return [v0 (SEL)(v1 + 3213)];
}

uint64_t OUTLINED_FUNCTION_68_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_5_72()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_74()
{
  return v0;
}

double OUTLINED_FUNCTION_5_75()
{
  return v0;
}

id OUTLINED_FUNCTION_5_76()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_5_77()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_5_78()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_79(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return specialized Dictionary.subscript.setter((uint64_t)&a9, (uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_5_80(uint64_t a1, uint64_t (*a2)(void))
{
  return Features.isHeroTitleEnabled.getter(a1, a2, 4);
}

uint64_t OUTLINED_FUNCTION_5_81()
{
  return *v0;
}

id OUTLINED_FUNCTION_5_82(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 2743), 0);
}

uint64_t OUTLINED_FUNCTION_5_83(uint64_t a1)
{
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a1);
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_191()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_5_84(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_5_85()
{
  return Publisher<>.removeDuplicates()();
}

void OUTLINED_FUNCTION_5_86()
{
  JUMPOUT(0x1C8773BA0);
}

id OUTLINED_FUNCTION_5_88()
{
  return objc_msgSend(v0, (SEL)(v1 + 1944), 0);
}

id OUTLINED_FUNCTION_5_90()
{
  return @nonobjc UIImage.init(_systemName:)(0x73616C732E63696DLL, 0xEE006C6C69662E68);
}

char *OUTLINED_FUNCTION_5_92(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

id OUTLINED_FUNCTION_5_93(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v4, v5, v3, v3);
}

void OUTLINED_FUNCTION_5_94()
{
  JUMPOUT(0x1C8774620);
}

id OUTLINED_FUNCTION_5_95(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1048), v3, v5, v4, v4);
}

id OUTLINED_FUNCTION_5_96()
{
  return PersonalNicknameMenuView.containerStackView.getter();
}

uint64_t OUTLINED_FUNCTION_5_97()
{
  return v0 + 32;
}

id OUTLINED_FUNCTION_5_99(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_5_100()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_101()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

unint64_t OUTLINED_FUNCTION_5_103()
{
  return 0xD000000000000024;
}

uint64_t OUTLINED_FUNCTION_5_104()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_105()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_107()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_5_108()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_109()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

__n128 OUTLINED_FUNCTION_5_110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  return (__n128)a9;
}

uint64_t OUTLINED_FUNCTION_5_112()
{
  return v0;
}

id OUTLINED_FUNCTION_5_113(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v6, (SEL)(v5 + 2840), v7, a4, a5, 0);
}

id OUTLINED_FUNCTION_5_114()
{
  double v3 = *(void **)(v1 - 312);
  return [v3 (SEL)(v0 + 2072)];
}

uint64_t OUTLINED_FUNCTION_5_115(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 440) = result;
  *(void *)(v2 - 448) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_116(float a1, float a2)
{
  *(_DWORD *)(v2 + v3[9]) = 1065353216;
  *(_DWORD *)(v2 + v3[10]) = v5;
  *(unsigned char *)(v2 + v3[11]) = 1;
  *(float *)(v2 + v3[12]) = a1 + a2;
  *(_DWORD *)(v2 + v3[13]) = 0;
  *(_DWORD *)(v2 + v3[14]) = 0;
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_5_117(uint64_t a1@<X8>)
{
  uint64_t v4 = (void *)(v1 + a1);
  *uint64_t v4 = 0;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = v2;
  bzero(v4 + 4, 0x88uLL);
}

double OUTLINED_FUNCTION_5_119()
{
  return 16.0;
}

uint64_t OUTLINED_FUNCTION_5_120(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_5_121()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

void OUTLINED_FUNCTION_11_6(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_40_3()
{
  *(void *)(v2 - 88) = v0 - v1;
}

uint64_t OUTLINED_FUNCTION_40_4(unint64_t *a1)
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(a1, v1);
}

uint64_t OUTLINED_FUNCTION_40_5(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_40_8()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void *OUTLINED_FUNCTION_40_9()
{
  return PillButton.init(title:symbol:stateConfiguration:context:)(v1, v2, v0 + 112, v3, 1);
}

uint64_t OUTLINED_FUNCTION_40_10(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_40_12()
{
  return v0 + 2;
}

void OUTLINED_FUNCTION_40_13(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 272) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_297()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_40_15()
{
  return v0;
}

void OUTLINED_FUNCTION_40_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11)
{
  a11 = a10;
  ScreenSharingInteractionController.session(_:didUpdateState:)(v11, &a11);
}

uint64_t OUTLINED_FUNCTION_40_17()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_40_19()
{
  return type metadata accessor for Binding();
}

uint64_t OUTLINED_FUNCTION_40_21()
{
  uint64_t v2 = *(void *)(*(void *)(v0 - 88) + 16);
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
}

void OUTLINED_FUNCTION_40_25()
{
  ParticipantView.setInfoViewIsVisible(_:animated:)(0, 0);
}

uint64_t OUTLINED_FUNCTION_40_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  return outlined init with take of CATransform3D?((uint64_t)&a13, (uint64_t)&a40, v40);
}

uint64_t OUTLINED_FUNCTION_484()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_40_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_28()
{
  return 0;
}

void OUTLINED_FUNCTION_40_30(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_60_1(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t OUTLINED_FUNCTION_60_2(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_60_5()
{
}

uint64_t OUTLINED_FUNCTION_221()
{
  return 0;
}

void OUTLINED_FUNCTION_60_6()
{
  specialized Array.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_60_8(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

void OUTLINED_FUNCTION_60_10(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

double OUTLINED_FUNCTION_60_11()
{
  return *(double *)(v0 + 184);
}

uint64_t OUTLINED_FUNCTION_60_12()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t OUTLINED_FUNCTION_62_1(uint64_t result)
{
  *(void *)(*(void *)(v1 - 136) + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_62_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = v9 + *(int *)(a1 + 20);
  return outlined init with take of AspectRatio(v11, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_62_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  *a12 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_62_6()
{
  AttributedString.init(cnkLocalized:)();
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return v0 + 32;
}

void OUTLINED_FUNCTION_62_8()
{
  unint64_t v3 = *(void **)(v1 + v0);
}

BOOL OUTLINED_FUNCTION_62_9(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_62_10()
{
  return type metadata accessor for LocalParticipantControlsView.ViewModel(0);
}

double OUTLINED_FUNCTION_62_12()
{
  return *(double *)(v0 + 176);
}

void static RecentsCallItemType.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  uint64_t v8 = type metadata accessor for RecentOngoingConversationMetadata(0);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2_3();
  uint64_t v41 = v10;
  uint64_t v11 = type metadata accessor for RecentCallRecentItemMetadata(0);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v40 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_8_4();
  uint64_t v39 = v15;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_139_4();
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_55_0();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v38 - v20;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_58();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_83_4();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_65_3();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RecentsCallItemType, RecentsCallItemType));
  uint64_t v25 = OUTLINED_FUNCTION_8(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_17_0();
  uint64_t v27 = (void **)(v0 + *(int *)(v26 + 56));
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v42, v0);
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v43, (uint64_t)v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v0, v2);
      if (OUTLINED_FUNCTION_113_2() == 1)
      {
        uint64_t v30 = v41;
        _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v27, v41);
        static RecentOngoingConversationMetadata.== infix(_:_:)();
        uint64_t v31 = type metadata accessor for RecentOngoingConversationMetadata;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v30, (void (*)(void))type metadata accessor for RecentOngoingConversationMetadata);
        uint64_t v32 = v2;
        goto LABEL_19;
      }
      uint64_t v28 = type metadata accessor for RecentOngoingConversationMetadata;
      uint64_t v29 = v2;
      goto LABEL_16;
    case 2u:
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v0, (uint64_t)v4);
      uint64_t v33 = *v4;
      if (OUTLINED_FUNCTION_113_2() == 2)
      {
        uint64_t v34 = *v27;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        static NSObject.== infix(_:_:)();
        swift_release();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();

        goto LABEL_21;
      }
      swift_release();
      swift_bridgeObjectRelease();

      goto LABEL_17;
    case 3u:
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v0, (uint64_t)v21);
      if (OUTLINED_FUNCTION_113_2() == 3)
      {
        uint64_t v35 = v39;
        _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v27, v39);
        static RecentCallRecentItemMetadata.== infix(_:_:)();
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v35, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        uint64_t v32 = (uint64_t)v21;
        char v36 = type metadata accessor for RecentCallRecentItemMetadata;
        goto LABEL_20;
      }
      uint64_t v28 = type metadata accessor for RecentCallRecentItemMetadata;
      uint64_t v29 = (uint64_t)v21;
      goto LABEL_16;
    case 4u:
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v0, v5);
      if (OUTLINED_FUNCTION_113_2() == 4)
      {
        uint64_t v37 = v40;
        _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v27, v40);
        static RecentCallRecentItemMetadata.== infix(_:_:)();
        uint64_t v31 = type metadata accessor for RecentCallRecentItemMetadata;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v37, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        uint64_t v32 = v5;
        goto LABEL_19;
      }
      uint64_t v28 = type metadata accessor for RecentCallRecentItemMetadata;
      uint64_t v29 = v5;
      goto LABEL_16;
    default:
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v0, v1);
      if (OUTLINED_FUNCTION_113_2())
      {
        uint64_t v28 = type metadata accessor for RecentCallRecentItemMetadata;
        uint64_t v29 = v1;
LABEL_16:
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v29, (void (*)(void))v28);
LABEL_17:
        outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for (RecentsCallItemType, RecentsCallItemType));
      }
      else
      {
        _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v27, v3);
        static RecentCallRecentItemMetadata.== infix(_:_:)();
        uint64_t v31 = type metadata accessor for RecentCallRecentItemMetadata;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v3, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        uint64_t v32 = v1;
LABEL_19:
        char v36 = v31;
LABEL_20:
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v32, (void (*)(void))v36);
LABEL_21:
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
      }
      OUTLINED_FUNCTION_28();
      return;
  }
}

id OUTLINED_FUNCTION_35_2()
{
  return objc_msgSend(v0, (SEL)(v1 + 3352), v3, v4);
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  return AnyCancellable.store<A>(in:)();
}

uint64_t OUTLINED_FUNCTION_35_4()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_35_6()
{
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_8()
{
  return v0;
}

void OUTLINED_FUNCTION_73_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_35_10()
{
  return v0;
}

id OUTLINED_FUNCTION_29_2(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void *OUTLINED_FUNCTION_47_1()
{
  return malloc(0x38uLL);
}

void OUTLINED_FUNCTION_35_12(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_35_13()
{
  return 1936287828;
}

uint64_t OUTLINED_FUNCTION_35_15()
{
  return 0x454D495445434146;
}

uint64_t OUTLINED_FUNCTION_35_16()
{
  return type metadata accessor for ModifiedContent();
}

void OUTLINED_FUNCTION_35_18()
{
}

uint64_t OUTLINED_FUNCTION_35_19()
{
  return v0;
}

double OUTLINED_FUNCTION_35_20(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  *(void *)(v3 - 104) = v2;
  double result = 0.0;
  *(_OWORD *)(v3 - 96) = 0u;
  *(_OWORD *)(v3 - 80) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_35_21()
{
  return v0;
}

void OUTLINED_FUNCTION_35_22(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_35_24()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_35_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_26()
{
  return swift_unknownObjectRelease_n();
}

double OUTLINED_FUNCTION_35_27()
{
  return v0;
}

void OUTLINED_FUNCTION_35_29(double a1)
{
  *(double *)(v1 + 56) = a1;
}

uint64_t OUTLINED_FUNCTION_35_30()
{
  return *(void *)(v0 + *(int *)(v1 + 64) + 8);
}

uint64_t OUTLINED_FUNCTION_22_3(unsigned int *a1)
{
  return *a1;
}

void OUTLINED_FUNCTION_22_5()
{
  *(void *)(v0 - 296) = v2;
  *(void *)(v0 - 288) = v3;
  type metadata accessor for CGPoint(0);
}

id OUTLINED_FUNCTION_22_6()
{
  uint64_t v3 = *(const char **)(v1 + 3808);
  return [v0 v3];
}

unint64_t OUTLINED_FUNCTION_3_19(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void *OUTLINED_FUNCTION_22_8(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

void OUTLINED_FUNCTION_22_9(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x20u);
}

uint64_t OUTLINED_FUNCTION_22_11()
{
  return dispatch thunk of Hashable.hash(into:)();
}

void OUTLINED_FUNCTION_22_13()
{
}

uint64_t OUTLINED_FUNCTION_22_14()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_22_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_18()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_22_19(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

char *OUTLINED_FUNCTION_22_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - *(void *)(v9 + 16);
}

uint64_t OUTLINED_FUNCTION_22_21(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_22_23(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_22_24()
{
  JUMPOUT(0x1C8773BA0);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return 0;
}

id OUTLINED_FUNCTION_22_26()
{
  return [v0 (SEL)(v1 + 570)];
}

uint64_t OUTLINED_FUNCTION_22_27@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for RecentsCallItemType(0);
}

uint64_t OUTLINED_FUNCTION_22_28(float a1)
{
  float *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_22_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_319(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_22_30()
{
  return v0 - 216;
}

id OUTLINED_FUNCTION_22_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_22_33@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_21_4(uint64_t result)
{
  *(void *)(v1 + 280) = result;
  *(void *)(v1 + 288) = *(void *)(result + 16);
  return result;
}

id OUTLINED_FUNCTION_22_34(uint64_t a1)
{
  return static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(a1, 0, 1);
}

uint64_t OUTLINED_FUNCTION_22_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return static ConversationControlsType.== infix(_:_:)((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_22_36@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_22_37()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_22_38(uint64_t result)
{
  void *v1 = result;
  *(void *)(result + 160) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_39()
{
  return String.localizedCallStatus.getter();
}

uint64_t OUTLINED_FUNCTION_22_41()
{
  return *(void *)(v0 + 248);
}

double OUTLINED_FUNCTION_22_42()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetWidth(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_22_43(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_22_44()
{
  return *v0;
}

void OUTLINED_FUNCTION_22_45(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, os_log_type_t type, os_log_t log)
{
  _os_log_impl(a1, log, type, a4, v15, 0xCu);
}

uint64_t OUTLINED_FUNCTION_22_46()
{
  return swift_dynamicCast();
}

id OUTLINED_FUNCTION_22_48()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_22_49()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_50(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return swift_bridgeObjectRetain_n();
}

id OUTLINED_FUNCTION_22_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v7, (SEL)(v6 + 2840), v8, v5, a5, 0);
}

uint64_t OUTLINED_FUNCTION_22_52(uint64_t result)
{
  *(void *)(v1 - 304) = result;
  return result;
}

id OUTLINED_FUNCTION_22_53()
{
  return PeoplePickerActionBar.audioButton.getter();
}

uint64_t OUTLINED_FUNCTION_22_55(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_22_56()
{
  return 24.0;
}

uint64_t OUTLINED_FUNCTION_22_57()
{
  return v0;
}

uint64_t type metadata accessor for RecentOngoingConversationMetadata(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RecentOngoingConversationMetadata);
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return 0x616E7265746E495BLL;
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_12_11(uint64_t a1)
{
  *(void *)(v1 - 264) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_12_12(uint64_t a1@<X8>)
{
  **(void **)(v1 - 168) = a1;
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  return v0;
}

id OUTLINED_FUNCTION_12_15(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3, -16.0);
}

id OUTLINED_FUNCTION_12_16(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 96), 1.0, 1.0);
}

uint64_t OUTLINED_FUNCTION_12_17()
{
  outlined consume of CallScreening.EndingAction(v0, v1, 1u);
  return outlined consume of CallScreening.EndingAction(v0, v1, 1u);
}

uint64_t OUTLINED_FUNCTION_12_20()
{
  void *v1 = v0;
  return swift_getKeyPath();
}

double OUTLINED_FUNCTION_12_21@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 184) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 - 176) = 0u;
  *(_OWORD *)(v1 - 160) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_23()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_12_24()
{
  *(void *)(*(void *)(v0 + 56) + 8 * v1) = *(void *)(v2 - 280);
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  return type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
}

uint64_t OUTLINED_FUNCTION_12_26@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002CLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return swift_dynamicCast();
}

void *OUTLINED_FUNCTION_12_31()
{
  return specialized IDSCapabilitiesChecker.init(participants:lookupManager:)(v1, v4, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_12_32(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_33()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_12_34()
{
  uint64_t v3 = *(void *)(v0 + 80);
  return outlined init with copy of ConversationControlsRecipe(v1, v3);
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_12_36(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  return v0;
}

id OUTLINED_FUNCTION_12_38(double a1, uint64_t a2, const char *a3)
{
  LODWORD(a1) = 1148846080;
  return objc_msgSend(v3, a3, a1);
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_40()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void OUTLINED_FUNCTION_12_41()
{
}

uint64_t OUTLINED_FUNCTION_12_42()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_12_44()
{
  *(unsigned char *)(v0 + 416) = v1;
  *(void *)(v0 + 424) = *(void *)(v0 + 336);
  *(unsigned char *)(v0 + 432) = *(_DWORD *)(v0 + 316);
}

uint64_t OUTLINED_FUNCTION_12_45()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t OUTLINED_FUNCTION_12_46()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_12_48()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_12_49()
{
  return v0;
}

void OUTLINED_FUNCTION_15_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

void OUTLINED_FUNCTION_12_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, char *), void (*a8)(uint64_t, uint64_t, char *))
{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a2, 0, a4, a5, a6, a7, a8);
}

id OUTLINED_FUNCTION_12_53(double a1)
{
  double v4 = a1 + -2.0;
  return objc_msgSend(v1, (SEL)(v2 + 979), v4);
}

uint64_t OUTLINED_FUNCTION_12_54()
{
  return MEMORY[0x1F40F9F90](0);
}

uint64_t OUTLINED_FUNCTION_12_55(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

BOOL OUTLINED_FUNCTION_12_57()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

uint64_t OUTLINED_FUNCTION_12_58()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_12_60()
{
  return v0;
}

id OUTLINED_FUNCTION_12_63()
{
  return [v0 (SEL)(v1 + 2072)];
}

__n128 OUTLINED_FUNCTION_12_66(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, __n128 a11, long long a12)
{
  _OWORD *v12 = a9;
  v12[1] = a10;
  __n128 result = a11;
  v12[2] = a11;
  v12[3] = a12;
  return result;
}

void OUTLINED_FUNCTION_12_67()
{
  _StringGuts.grow(_:)(58);
}

uint64_t OUTLINED_FUNCTION_12_68()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_12_69()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_12_70()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_12_71()
{
  return type metadata accessor for ButtonRole();
}

double OUTLINED_FUNCTION_12_72@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 80) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 - 72) = 0u;
  *(_OWORD *)(v1 - 56) = 0u;
  return result;
}

void OUTLINED_FUNCTION_12_73(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  void *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_12_76()
{
  return v0;
}

double OUTLINED_FUNCTION_12_78@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 192) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(unsigned char *)(v1 + 232) = 6;
  return result;
}

void OUTLINED_FUNCTION_12_79(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>, long long a10, uint64_t a11, uint64_t a12)
{
}

__n128 OUTLINED_FUNCTION_12_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,long long a61)
{
  return (__n128)a61;
}

uint64_t OUTLINED_FUNCTION_12_81(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)&STACK[0x288]);
}

uint64_t OUTLINED_FUNCTION_94_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  return v0;
}

void OUTLINED_FUNCTION_94_3(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_94_5@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v2 + a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_94_6()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_150(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_150_1()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

uint64_t OUTLINED_FUNCTION_150_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  *(void *)(v16 + 16) = a15;
  *(void *)(v16 + 24) = a16;
  return outlined copy of Data._Representation(a15, a16);
}

uint64_t OUTLINED_FUNCTION_150_3()
{
  uint64_t result = *v1;
  uint64_t *v1 = v0;
  return result;
}

void OUTLINED_FUNCTION_150_6()
{
  closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

uint64_t OUTLINED_FUNCTION_150_7()
{
  return String.init<A>(reflecting:)();
}

void static RecentCallRecentItemMetadata.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_143_0();
  BOOL v7 = *v6 == *v1 && v0[1] == v1[1];
  if (!v7)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_100_3();
    if ((v8 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v9 = type metadata accessor for RecentCallRecentItemMetadata(0);
  uint64_t v10 = (uint64_t)v0 + *(int *)(v9 + 20);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v172 = &v163;
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v23 = OUTLINED_FUNCTION_72_5(v15, v16, v17, v18, v19, v20, v21, v22, v163);
  OUTLINED_FUNCTION_137(v23, v24, v25, v26, v27, v28, v29, v30, v163);
  uint64_t v31 = MEMORY[0x1F4188790]((char *)v1 + *(int *)(v9 + 20));
  OUTLINED_FUNCTION_140_2(v31, v32, v33, v34, v35, v36, v37, v38, v163);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Date?, Date?));
  v170 = &v163;
  uint64_t v40 = OUTLINED_FUNCTION_8(v39);
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_51_13(v41, v163);
  _s15ConversationKit11ParticipantVSgWOcTm_0(v3, v4, (uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v43 = OUTLINED_FUNCTION_69(v10);
  if (v7)
  {
    outlined destroy of SystemUpdateNotice?(v3, (uint64_t *)&demangling cache variable for type metadata for Date?);
    outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_69(v4);
    if (v7)
    {
      outlined destroy of SystemUpdateNotice?(v10, (uint64_t *)&demangling cache variable for type metadata for Date?);
      OUTLINED_FUNCTION_8_63();
      goto LABEL_18;
    }
LABEL_14:
    uint64_t v46 = (uint64_t *)&demangling cache variable for type metadata for (Date?, Date?);
    uint64_t v47 = v10;
    goto LABEL_15;
  }
  id v169 = &v163;
  MEMORY[0x1F4188790](v43);
  OUTLINED_FUNCTION_135_1();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v10, v14, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_69(v4);
  if (v44)
  {
    outlined destroy of SystemUpdateNotice?(v3, (uint64_t *)&demangling cache variable for type metadata for Date?);
    outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_26_2();
    v45();
    OUTLINED_FUNCTION_31_10();
    goto LABEL_14;
  }
  uint64_t v167 = &v163;
  uint64_t v168 = v0;
  OUTLINED_FUNCTION_5_3();
  uint64_t v49 = v48;
  MEMORY[0x1F4188790](v50);
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_63_0();
  v51();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, MEMORY[0x1F418BA20]);
  LODWORD(v166) = OUTLINED_FUNCTION_208_0();
  uint64_t v52 = v9;
  uint64_t v53 = v1;
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v54(v5, v42);
  outlined destroy of SystemUpdateNotice?(v3, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v54(v14, v42);
  uint64_t v0 = v168;
  uint64_t v1 = v53;
  uint64_t v9 = v52;
  OUTLINED_FUNCTION_179_2();
  OUTLINED_FUNCTION_8_63();
  if ((v166 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v55 = (int *)v9;
  uint64_t v56 = *(int *)(v9 + 24);
  uint64_t v57 = v0;
  uint64_t v58 = *(void **)((char *)v0 + v56);
  uint64_t v59 = v1;
  uint64_t v60 = *(void **)((char *)v1 + v56);
  if (v58)
  {
    if (!v60) {
      goto LABEL_16;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
    id v61 = v60;
    id v62 = v58;
    char v63 = static NSObject.== infix(_:_:)();

    if ((v63 & 1) == 0) {
      goto LABEL_16;
    }
  }
  else if (v60)
  {
    goto LABEL_16;
  }
  uint64_t v64 = v55[7];
  uint64_t v65 = (uint64_t *)((char *)v57 + v64);
  char v66 = *((unsigned char *)v57 + v64 + 8);
  uint64_t v67 = v59;
  uint64_t v68 = (void *)((char *)v59 + v64);
  int v69 = *((unsigned __int8 *)v59 + v64 + 8);
  if (v66)
  {
    if (!v69) {
      goto LABEL_16;
    }
LABEL_29:
    uint64_t v70 = v55[8];
    uint64_t v71 = *(void *)((char *)v59 + v70);
    if (*(uint64_t *)((char *)v57 + v70))
    {
      if (!v71) {
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
      uint64_t v72 = swift_bridgeObjectRetain();
      specialized static Set.== infix(_:_:)(v72, v71);
      char v74 = v73;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v74 & 1) == 0) {
        goto LABEL_16;
      }
    }
    else if (v71)
    {
      goto LABEL_16;
    }
    if (*(uint64_t *)((char *)v57 + v55[9]) != *(void *)((char *)v59 + v55[9])) {
      goto LABEL_16;
    }
    uint64_t v75 = (uint64_t)v57 + v55[10];
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v172 = &v163;
    uint64_t v77 = OUTLINED_FUNCTION_8(v76);
    uint64_t v79 = *(uint64_t **)(v78 + 64);
    MEMORY[0x1F4188790](v77);
    uint64_t v80 = (char *)&v163 - (((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v81 = _s15ConversationKit11ParticipantVSgWOcTm_0(v75, (uint64_t)v80, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_137(v81, v82, v83, v84, v85, v86, v87, v88, v163);
    uint64_t v89 = MEMORY[0x1F4188790]((char *)v59 + v55[10]);
    id v169 = (uint64_t *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v90 = (uint64_t)v80;
    _s15ConversationKit11ParticipantVSgWOcTm_0(v89, (uint64_t)v80, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v170 = &v163;
    OUTLINED_FUNCTION_0();
    uint64_t v92 = MEMORY[0x1F4188790](v91);
    uint64_t v167 = v93;
    uint64_t v168 = (uint64_t *)v92;
    char v94 = (char *)&v163 - (((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v95 = (uint64_t)&v94[*(int *)(v92 + 48)];
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v80, (uint64_t)v94, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v80, v95, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v96 = type metadata accessor for UUID();
    uint64_t v97 = OUTLINED_FUNCTION_33_0((uint64_t)v94, 1, v96);
    if (v7)
    {
      id v169 = v79;
      uint64_t v98 = OUTLINED_FUNCTION_351();
      outlined destroy of SystemUpdateNotice?(v98, v99);
      uint64_t v100 = OUTLINED_FUNCTION_194_1();
      outlined destroy of SystemUpdateNotice?(v100, v101);
      OUTLINED_FUNCTION_33_0(v95, 1, v96);
      if (v7)
      {
        uint64_t v166 = v96;
        outlined destroy of SystemUpdateNotice?((uint64_t)v94, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_8_63();
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v165 = &v163;
      uint64_t v166 = (uint64_t)&v163 - (((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v97);
      v102 = (char *)((char *)&v163 - (char *)v169);
      _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v94, (char *)&v163 - (char *)v169, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_33_0(v95, 1, v96);
      if (!v103)
      {
        id v169 = v79;
        v164 = &v163;
        OUTLINED_FUNCTION_5_3();
        uint64_t v108 = v107;
        MEMORY[0x1F4188790](v109);
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_63_0();
        v110();
        lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
        HIDWORD(v163) = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v111 = *(void (**)(char *, uint64_t))(v108 + 8);
        v111((char *)v59, v96);
        outlined destroy of SystemUpdateNotice?(v90, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?(v166, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v166 = v96;
        v111(v102, v96);
        uint64_t v67 = v59;
        outlined destroy of SystemUpdateNotice?((uint64_t)v94, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_8_63();
        if ((v163 & 0x100000000) == 0) {
          goto LABEL_16;
        }
LABEL_45:
        uint64_t v112 = v55[11];
        uint64_t v113 = *(void **)((char *)v57 + v112);
        uint64_t v114 = (uint64_t)v67 + v112;
        uint64_t v115 = *(void **)v114;
        uint64_t v116 = *(void *)(v114 + 16);
        if (v113)
        {
          if (v115)
          {
            uint64_t v117 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
            uint64_t v171 = v116;
            uint64_t v172 = (uint64_t *)v117;
            outlined copy of ConversationLink?(v113);
            outlined copy of ConversationLink?(v113);
            outlined copy of ConversationLink?(v115);
            char v118 = static NSObject.== infix(_:_:)();
            uint64_t v119 = (void *)OUTLINED_FUNCTION_351();
            outlined consume of ConversationLink?(v119);

            swift_bridgeObjectRelease();
            swift_release();
            outlined consume of ConversationLink?(v113);
            if ((v118 & 1) == 0) {
              goto LABEL_16;
            }
            goto LABEL_50;
          }
          id v142 = v113;
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else if (!v115)
        {
LABEL_50:
          uint64_t v172 = &v163;
          uint64_t v120 = v169;
          uint64_t v121 = MEMORY[0x1F4188790]((char *)v57 + v55[12]);
          unint64_t v122 = ((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v123 = (char *)&v163 - v122;
          uint64_t v124 = _s15ConversationKit11ParticipantVSgWOcTm_0(v121, (uint64_t)&v163 - v122, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          OUTLINED_FUNCTION_137(v124, v125, v126, v127, v128, v129, v130, v131, v163);
          uint64_t v132 = MEMORY[0x1F4188790]((char *)v67 + v55[12]);
          uint64_t v133 = (char *)&v163 - v122;
          uint64_t v134 = _s15ConversationKit11ParticipantVSgWOcTm_0(v132, (uint64_t)&v163 - v122, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v170 = &v163;
          MEMORY[0x1F4188790](v134);
          uint64_t v136 = (char *)&v163 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v137 = (uint64_t)&v136[*((int *)v168 + 12)];
          _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v163 - v122, (uint64_t)v136, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v163 - v122, v137, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          uint64_t v138 = v166;
          uint64_t v139 = OUTLINED_FUNCTION_33_0((uint64_t)v136, 1, v166);
          if (v7)
          {
            outlined destroy of SystemUpdateNotice?((uint64_t)v133, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            outlined destroy of SystemUpdateNotice?((uint64_t)v123, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            uint64_t v140 = OUTLINED_FUNCTION_287();
            OUTLINED_FUNCTION_33_0(v140, v141, v138);
            if (v7)
            {
              outlined destroy of SystemUpdateNotice?((uint64_t)v136, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              OUTLINED_FUNCTION_8_63();
LABEL_62:
              uint64_t v158 = v55[13];
              uint64_t v159 = *(void **)((char *)v57 + v158);
              uint64_t v160 = *(void **)((char *)v59 + v158);
              if (v159 && v160)
              {
                type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TPMessageIndicatorViewModel);
                id v161 = v160;
                id v162 = v159;
                static NSObject.== infix(_:_:)();
              }
              goto LABEL_16;
            }
          }
          else
          {
            uint64_t v168 = &v163;
            MEMORY[0x1F4188790](v139);
            v143 = (uint64_t *)((char *)&v163 - v122);
            uint64_t v144 = OUTLINED_FUNCTION_194_1();
            _s15ConversationKit11ParticipantVSgWOcTm_0(v144, v145, v146);
            OUTLINED_FUNCTION_33_0(v137, 1, v138);
            if (!v147)
            {
              id v169 = &v163;
              OUTLINED_FUNCTION_5_3();
              uint64_t v165 = v151;
              MEMORY[0x1F4188790](v152);
              uint64_t v154 = v138;
              uint64_t v155 = (char *)&v163 - ((v153 + 15) & 0xFFFFFFFFFFFFFFF0);
              OUTLINED_FUNCTION_45_9();
              OUTLINED_FUNCTION_63_0();
              v156();
              lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
              OUTLINED_FUNCTION_102();
              LODWORD(v167) = dispatch thunk of static Equatable.== infix(_:_:)();
              v164 = v143;
              uint64_t v157 = (void (*)(char *, uint64_t))v165[1];
              v157(v155, v154);
              outlined destroy of SystemUpdateNotice?((uint64_t)v133, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              outlined destroy of SystemUpdateNotice?((uint64_t)v123, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              v157((char *)v164, v154);
              OUTLINED_FUNCTION_31_10();
              OUTLINED_FUNCTION_129_2();
              outlined destroy of SystemUpdateNotice?((uint64_t)v136, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              OUTLINED_FUNCTION_8_63();
              if ((v167 & 1) == 0) {
                goto LABEL_16;
              }
              goto LABEL_62;
            }
            uint64_t v148 = OUTLINED_FUNCTION_35();
            outlined destroy of SystemUpdateNotice?(v148, v149);
            outlined destroy of SystemUpdateNotice?((uint64_t)&v163 - v122, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            OUTLINED_FUNCTION_48();
            OUTLINED_FUNCTION_102();
            OUTLINED_FUNCTION_26_2();
            v150();
            OUTLINED_FUNCTION_129_2();
          }
          uint64_t v46 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
          uint64_t v47 = (uint64_t)v136;
LABEL_15:
          outlined destroy of SystemUpdateNotice?(v47, v46);
          OUTLINED_FUNCTION_8_63();
          goto LABEL_16;
        }
        outlined copy of ConversationLink?(v115);
        outlined consume of ConversationLink?(v113);
        outlined consume of ConversationLink?(v115);
        goto LABEL_16;
      }
      uint64_t v104 = OUTLINED_FUNCTION_30_15();
      outlined destroy of SystemUpdateNotice?(v104, v105);
      outlined destroy of SystemUpdateNotice?(v166, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_26_2();
      v106();
    }
    uint64_t v46 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    uint64_t v47 = (uint64_t)v94;
    goto LABEL_15;
  }
  if (*v65 != *v68) {
    LOBYTE(v69) = 1;
  }
  if ((v69 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_16:
  OUTLINED_FUNCTION_28();
}

void destroy for TapInteraction.EventType(id *a1)
{
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return _typeName(_:qualified:)();
}

id OUTLINED_FUNCTION_8_13()
{
  return [v0 (SEL)(v1 + 664)];
}

void OUTLINED_FUNCTION_8_14(uint64_t a1@<X8>)
{
  void *v1 = a1;
  v1[1] = v4;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[5] = v8;
  v1[6] = v9;
  v1[7] = v3;
  v1[8] = v10;
  v1[9] = v2;
}

uint64_t OUTLINED_FUNCTION_8_15(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return outlined init with take of CallScreening.EndingAction((long long *)(v0 - 176), v0 - 152);
}

id OUTLINED_FUNCTION_8_18()
{
  return v0;
}

id OUTLINED_FUNCTION_8_19()
{
  uint64_t v3 = *(const char **)(v1 + 3176);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_28()
{
  *(void *)(v2 - 256) = (unint64_t)(v0 + 63) >> 6;
  *(void *)(v2 - 248) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_8_29@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) = v1;
  return swift_release();
}

void *OUTLINED_FUNCTION_8_30()
{
  return memcpy((void *)(v1 - 208), (const void *)(v0 + 160), 0x80uLL);
}

unint64_t OUTLINED_FUNCTION_8_31()
{
  return 0xD000000000000052;
}

uint64_t OUTLINED_FUNCTION_8_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  return v0;
}

void OUTLINED_FUNCTION_8_35()
{
  uint64_t v2 = *(void *)(v0 + 56) + 6 * v1;
  *(_WORD *)(v2 + 4) = 0;
  *(_DWORD *)uint64_t v2 = 2;
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_36()
{
  return dispatch thunk of Collection.endIndex.getter();
}

void OUTLINED_FUNCTION_8_37()
{
  uint64_t v3 = *(void *)(v0 + 24);
  ControlsButtonProvider.title.setter(v3, v1);
}

id OUTLINED_FUNCTION_8_38(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

void OUTLINED_FUNCTION_8_39(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_8_40()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_8_41()
{
  return Environment.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_8_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_8_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_46()
{
  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_8_48()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_8_49(uint64_t a1)
{
  return specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(a1, 1);
}

id OUTLINED_FUNCTION_8_50(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return v1;
}

id OUTLINED_FUNCTION_8_51(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_93()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_52()
{
  return NSObject.hash(into:)();
}

void OUTLINED_FUNCTION_8_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 256) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v10 - 264) = &a9;
}

uint64_t OUTLINED_FUNCTION_8_55()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t OUTLINED_FUNCTION_8_56()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_8_57@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

char *OUTLINED_FUNCTION_18_7@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_8_58()
{
  return *(void *)(v0 + 80);
}

id OUTLINED_FUNCTION_8_60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)(v1 + a1);
  return [v4 (SEL)(v2 + 1304)];
}

uint64_t OUTLINED_FUNCTION_8_61()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_8_62()
{
  return *(void *)(v0 + 720);
}

uint64_t OUTLINED_FUNCTION_8_64()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_8_65()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_8_67()
{
  return __swift_project_value_buffer(v0, v1);
}

BOOL OUTLINED_FUNCTION_8_69()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

uint64_t OUTLINED_FUNCTION_8_73()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_74()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_78()
{
  return type metadata accessor for LocalParticipantControlsView.ViewModel(0) - 8;
}

uint64_t OUTLINED_FUNCTION_8_79()
{
  return swift_isEscapingClosureAtFileLocation();
}

uint64_t OUTLINED_FUNCTION_8_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  a9 = 0u;
  a10 = 0u;
  return outlined destroy of Any?((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_8_81@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = a2;
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_8_82()
{
  return v0;
}

void OUTLINED_FUNCTION_8_83(float a1)
{
  float *v1 = a1;
  *(void *)(v3 - 440) = v1 + 1;
  *(void *)(v3 - 296) = v2;
}

void OUTLINED_FUNCTION_8_84(uint64_t a1@<X8>)
{
  uint64_t v3 = &v1[a1];
  *(void *)uint64_t v3 = 0x3FF0000000000000;
  *((void *)v3 + 1) = 0;
  *((void *)v3 + 2) = 0;
  *((void *)v3 + 3) = 0x3FF0000000000000;
  *((void *)v3 + 4) = 0;
  *((void *)v3 + 5) = 0;
}

uint64_t OUTLINED_FUNCTION_8_86@<X0>(uint64_t a1@<X8>)
{
  return v1 | a1 | v2 | v3 | v4 | v5;
}

uint64_t OUTLINED_FUNCTION_8_87@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_8_89()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_90()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_8_91()
{
  return type metadata accessor for ObjectTracker.RuleGroup(0) - 8;
}

double OUTLINED_FUNCTION_8_92()
{
  return 20.0;
}

uint64_t OUTLINED_FUNCTION_8_93(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4188298](a1, a2, 0);
}

id OUTLINED_FUNCTION_8_94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + a1);
  return objc_msgSend(v3, sel_setHidden_, 0);
}

uint64_t OUTLINED_FUNCTION_8_95()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return v1 + v0;
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_7_14()
{
  return lazy protocol witness table accessor for type ClarityUIPreferences and conformance ClarityUIPreferences();
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_7_18()
{
  JUMPOUT(0x1C87744F0);
}

BOOL OUTLINED_FUNCTION_7_19()
{
  return static SpringBoardUtilities.checkSpringBoardState(for:)();
}

__n128 *OUTLINED_FUNCTION_7_22(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_24()
{
  return 0;
}

void *OUTLINED_FUNCTION_3_22()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

void OUTLINED_FUNCTION_4_22(uint64_t a1@<X8>)
{
  v2[4] = a1;
  void *v2 = v1;
}

double OUTLINED_FUNCTION_7_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_27()
{
  if (v0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0;
  }
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, v3, v1);
}

uint64_t OUTLINED_FUNCTION_7_28()
{
  return *(void *)(v0 - 176);
}

uint64_t OUTLINED_FUNCTION_7_29()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_7_30@<X0>(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v6 - 96) + 8 * a1) = v2 | v1;
  return *(void *)(v4 + 48) + v3 * v5;
}

void OUTLINED_FUNCTION_7_31(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_7_33()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_35()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_7_36()
{
  return v0;
}

id OUTLINED_FUNCTION_7_37(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 1);
}

void OUTLINED_FUNCTION_7_38()
{
  *(_WORD *)(v0 + 22) = 2048;
}

uint64_t OUTLINED_FUNCTION_7_39()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_7_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return a18;
}

uint64_t OUTLINED_FUNCTION_7_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_43()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_7_44()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_7_45(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_7_46()
{
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_7_47(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t OUTLINED_FUNCTION_7_48()
{
  return v0;
}

id OUTLINED_FUNCTION_7_49()
{
  return objc_allocWithZone(v0);
}

uint64_t OUTLINED_FUNCTION_7_52()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_53()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_54()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_56()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_7_57()
{
  return 8236;
}

id OUTLINED_FUNCTION_7_58(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0, 0.0, v3, 19.0);
}

uint64_t OUTLINED_FUNCTION_7_59()
{
  return v0 + 24;
}

uint64_t OUTLINED_FUNCTION_7_62()
{
  return dispatch thunk of Collection.endIndex.getter();
}

char *OUTLINED_FUNCTION_7_63@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  a8 = a1;
  a9 = v9;
  a5 = 1;
  return ParticipantViewButton.__allocating_init(imageName:)((uint64_t)&a5);
}

uint64_t OUTLINED_FUNCTION_7_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return outlined init with copy of ParticipantVideoProvider?(v4, (uint64_t)va);
}

id OUTLINED_FUNCTION_7_66()
{
  return [v0 (SEL)(v1 + 1944)];
}

double OUTLINED_FUNCTION_7_68()
{
  double result = 0.0;
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_69()
{
  return isFeatureEnabled(_:)();
}

id OUTLINED_FUNCTION_7_70(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_7_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_72()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t OUTLINED_FUNCTION_7_74()
{
  return v0;
}

void OUTLINED_FUNCTION_17_6()
{
  *(_WORD *)(v0 + 12) = 2080;
}

id OUTLINED_FUNCTION_7_77()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

id OUTLINED_FUNCTION_7_79()
{
  return [v0 (SEL)(v1 + 664)];
}

uint64_t OUTLINED_FUNCTION_7_80()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t OUTLINED_FUNCTION_7_81@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + a1);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_9_5@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_7_83()
{
  JUMPOUT(0x1C87733A0);
}

uint64_t OUTLINED_FUNCTION_7_84()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t OUTLINED_FUNCTION_7_86()
{
  uint64_t v3 = *(void *)(v0 + 8);
  *(unsigned char *)(v1 - 168) = *(unsigned char *)v0;
  *(void *)(v1 - 160) = v3;
  return State.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_7_87()
{
  return *(void *)(v0 + 200);
}

uint64_t OUTLINED_FUNCTION_7_88@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

void OUTLINED_FUNCTION_7_92()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_7_93()
{
  return static _SetStorage.copy(original:)();
}

uint64_t OUTLINED_FUNCTION_7_94()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_95()
{
  return v0;
}

void OUTLINED_FUNCTION_7_98()
{
  *(unsigned char *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
}

uint64_t OUTLINED_FUNCTION_7_99(float a1)
{
  float *v1 = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_7_100()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_101()
{
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_7_102()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_103(uint64_t a1)
{
  *(void *)(v1 - 296) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_7_104()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_7_106(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(a1, v10, (uint64_t)&a9, v11, v9);
}

id OUTLINED_FUNCTION_7_107(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, (SEL)(v5 + 917), v4, a4, 64);
}

uint64_t OUTLINED_FUNCTION_7_108@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + a2) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_109()
{
  type metadata accessor for CountdownVoucher(0);
  return type metadata accessor for UUID();
}

double OUTLINED_FUNCTION_7_111()
{
  return 8.0;
}

CGAffineTransform *OUTLINED_FUNCTION_7_112(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, CGAffineTransform *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a15 = v21;
  a16 = v22;
  a17 = v23;
  a18 = v24;
  a19 = v25;
  a20 = v26;
  return CGAffineTransformInvert((CGAffineTransform *)&a9, (CGAffineTransform *)&a15);
}

id OUTLINED_FUNCTION_21_5(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 0);
}

uint64_t OUTLINED_FUNCTION_7_113(unint64_t a1)
{
  STACK[0x280] = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_151_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + a1);
  uint64_t result = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t *v1 = *v3;
  v1[1] = v5;
  v1[2] = v6;
  return result;
}

void OUTLINED_FUNCTION_151_6()
{
  closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

uint64_t OUTLINED_FUNCTION_151_7()
{
  uint64_t v1 = *(void *)(v0 - 128);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 152), v1);
  return v1;
}

void OUTLINED_FUNCTION_42_2()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_4(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

id OUTLINED_FUNCTION_42_5(float a1)
{
  float *v2 = a1;
  *(void *)(v3 + 16) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_14(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_42_16()
{
  return v0;
}

int *OUTLINED_FUNCTION_42_18@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
  *(void *)(a1 + result[6]) = 0;
  uint64_t v3 = (void *)(a1 + result[11]);
  *uint64_t v3 = 0;
  v3[1] = 0;
  v3[2] = 0;
  *(void *)(a1 + result[13]) = 0;
  return result;
}

void OUTLINED_FUNCTION_42_22()
{
  v0[43] = 0;
  v0[44] = 0;
  v0[45] = 0;
  v0[46] = 1;
  bzero(v0 + 47, 0xB1uLL);
}

uint64_t OUTLINED_FUNCTION_42_23()
{
  return static Published.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_42_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_26(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with take of CATransform3D?(v3 + 272, v3 + 32, a3);
}

uint64_t OUTLINED_FUNCTION_42_27()
{
  return v0;
}

double OUTLINED_FUNCTION_42_29()
{
  return 20.0;
}

uint64_t OUTLINED_FUNCTION_42_30()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_77()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_6(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_77_0()
{
  uint64_t v3 = *(void **)(v0 + *(int *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_77_2(uint64_t a1, uint64_t a2)
{
  return specialized Array.index(_:offsetBy:limitedBy:)(0, a1, *(void *)(a2 + 16));
}

void OUTLINED_FUNCTION_77_3(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint8_t *buf, uint64_t a12, int a13, os_log_type_t type)
{
  _os_log_impl(a1, v14, type, a4, buf, 0xCu);
}

uint64_t OUTLINED_FUNCTION_77_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_77_5(uint64_t result, float a2)
{
  float *v2 = a2;
  *(void *)(v3 - 144) = result;
  return result;
}

void OUTLINED_FUNCTION_77_6()
{
  uint64_t v1 = 41;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_77_7()
{
  uint64_t v1 = *(void *)(v0 + 3152);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 3128), v1);
  return v1;
}

double OUTLINED_FUNCTION_77_8()
{
  return *(double *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return String.hash(into:)();
}

BOOL OUTLINED_FUNCTION_9_8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_9_9()
{
  return v0;
}

int8x16_t OUTLINED_FUNCTION_9_10(uint64_t a1)
{
  v2[3].i64[0] = a1;
  int8x16_t v3 = v2[2];
  *(void *)(a1 + 16) = v1;
  int8x16_t result = vextq_s8(v3, v3, 8uLL);
  *(int8x16_t *)(a1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_22(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_9_11(uint64_t a1, uint64_t a2)
{
  return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?(v3, a2, v2);
}

id OUTLINED_FUNCTION_9_12()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_9_13@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

double OUTLINED_FUNCTION_9_14()
{
  double result = 0.0;
  v0[12] = 0u;
  v0[13] = 0u;
  v0[11] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_15()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_9_16()
{
  uint64_t v3 = *(void **)(v0 + 8 * v1 + 32);
  return v3;
}

void OUTLINED_FUNCTION_9_17()
{
  type metadata accessor for CNKDeviceOrientation(0);
}

void OUTLINED_FUNCTION_9_18(uint64_t a1)
{
  *(void *)(v1 + 256) = v3;
  *(void *)(v1 + 264) = v4;
  *(void *)(v1 + 272) = v5;
  *(void *)(v1 + 280) = v2;
  *(unsigned char *)(v1 + 288) = 1;
  *(void *)(v1 + 296) = v7;
  *(void *)(v1 + 304) = v6;
  *(void *)(v1 + 312) = a1;
  type metadata accessor for UIControlState(0);
}

uint64_t OUTLINED_FUNCTION_9_19(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_9_21()
{
  return 0;
}

id OUTLINED_FUNCTION_9_22()
{
  return [v1 (SEL)(v0 + 2600)];
}

uint64_t OUTLINED_FUNCTION_9_26()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_9_27()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_9_30()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_9_32()
{
  return swift_slowAlloc();
}

__n128 OUTLINED_FUNCTION_9_33(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_34()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_9_36@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)(*(void *)(v1 + a1) + 41);
}

uint64_t OUTLINED_FUNCTION_9_39()
{
  return type metadata accessor for TupleView();
}

id OUTLINED_FUNCTION_9_40(void *a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_9_41()
{
  return 0;
}

id OUTLINED_FUNCTION_9_42(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_9_44()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_45()
{
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_9_46()
{
  return Environment.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_9_47@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v3 = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return ParticipantGridView.identifier(for:)((uint64_t)v3);
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t OUTLINED_FUNCTION_9_49(uint64_t a1)
{
  return v1 | a1 & v2;
}

uint64_t OUTLINED_FUNCTION_9_50()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_9_53()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_9_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  return specialized Dictionary.subscript.setter(v28 - 224, (uint64_t)&a28);
}

void *OUTLINED_FUNCTION_44_0(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return malloc(v2);
}

void OUTLINED_FUNCTION_9_57()
{
  *(unsigned char *)(v0 + 435) = *(_DWORD *)(v0 + 324);
  *(unsigned char *)(v0 + 436) = *(_DWORD *)(v0 + 320);
  *(_WORD *)(v0 + 437) = *(_DWORD *)(v0 + 312);
}

void OUTLINED_FUNCTION_9_58()
{
  *(void *)(v1 - 280) = (v0 + 15) & 0xFFFFFFFFFFFFFFF0;
}

void OUTLINED_FUNCTION_9_61(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_9_62(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
}

uint64_t OUTLINED_FUNCTION_9_64()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_9_65()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_9_66()
{
  return v0;
}

void OUTLINED_FUNCTION_9_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, void *a18)
{
  outlined consume of CallControlsStatusView.LeadingView(a18, v19, v20, v18, a17);
}

void OUTLINED_FUNCTION_95()
{
  ++*(void *)(v0 + 16);
}

BOOL OUTLINED_FUNCTION_9_69(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

double OUTLINED_FUNCTION_9_70()
{
  return *(double *)(v0 - 360);
}

void OUTLINED_FUNCTION_9_71()
{
  _StringGuts.grow(_:)(41);
}

uint64_t OUTLINED_FUNCTION_9_74()
{
  uint64_t v2 = *(void *)(*(void *)(v0 - 88) + 16);
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
}

uint64_t OUTLINED_FUNCTION_9_75()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_76()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_9_77()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

NSNumber OUTLINED_FUNCTION_9_78()
{
  return Bool._bridgeToObjectiveC()();
}

void OUTLINED_FUNCTION_9_79()
{
  os_unfair_lock_unlock(v0);
}

void OUTLINED_FUNCTION_9_80()
{
}

uint64_t OUTLINED_FUNCTION_9_81()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_85(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a2);
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_9_86()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t OUTLINED_FUNCTION_9_87()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_9_89()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

__n128 OUTLINED_FUNCTION_9_91()
{
  __n128 result = *(__n128 *)v0;
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)v0;
  *(_OWORD *)(v1 - 112) = v3;
  *(void *)(v1 - 96) = *(void *)(v0 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_9_92()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_93()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_94()
{
  return swift_slowAlloc();
}

double OUTLINED_FUNCTION_9_95()
{
  return 3.0;
}

uint64_t OUTLINED_FUNCTION_9_97()
{
  return outlined consume of AnsweringMachineCallStatus?(v1, v0);
}

BOOL OUTLINED_FUNCTION_105(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_92_1(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  return type metadata accessor for UUID();
}

id OUTLINED_FUNCTION_92_3()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_110()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_92_4(uint64_t a1@<X8>)
{
  *(void *)(v2 - 168) = (v1 - 1) & v1;
  *(void *)(v2 - 160) = a1;
}

uint64_t OUTLINED_FUNCTION_225_0(uint64_t a1)
{
  return outlined init with take of CATransform3D?(a1, v2 - 248, v1);
}

uint64_t OUTLINED_FUNCTION_80()
{
  return 0;
}

id OUTLINED_FUNCTION_117()
{
  return RecentsListViewController.viewDidFinishInitialLoad.getter();
}

uint64_t OUTLINED_FUNCTION_69_0()
{
  return v0;
}

void OUTLINED_FUNCTION_335(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_117_1(uint64_t a1)
{
  *(void *)(v1 - 184) = a1;
  return v1 - 184;
}

void OUTLINED_FUNCTION_117_2(uint64_t a1)
{
  closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_300()
{
  JUMPOUT(0x1C8773BA0);
}

uint64_t OUTLINED_FUNCTION_375()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return outlined consume of SessionActionNotice.NoticeType(0, 0, 0xC000000000000000);
}

uint64_t OUTLINED_FUNCTION_104_4(uint64_t a1)
{
  *(void *)(v1 + 312) = a1;
  return v1 + 312;
}

uint64_t OUTLINED_FUNCTION_104_5()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_25()
{
  return String.localizedCallRecording.getter();
}

id OUTLINED_FUNCTION_1_27()
{
  return @nonobjc CNSocialProfile.init(urlString:username:userIdentifier:service:)(0, 0, v0, v1, 0, 0, 0, 0);
}

void OUTLINED_FUNCTION_1_29()
{
  JUMPOUT(0x1C87760E0);
}

id OUTLINED_FUNCTION_1_30(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

void OUTLINED_FUNCTION_1_32()
{
  STACK[0x260] = v1;
  LOBYTE(STACK[0x268]) = v0;
  SystemApertureIconFactory.CallDescriptor.activityIcon.getter(v2 - 176);
}

uint64_t OUTLINED_FUNCTION_1_33()
{
  return swift_beginAccess();
}

double OUTLINED_FUNCTION_1_34()
{
  return *(double *)v0;
}

uint64_t OUTLINED_FUNCTION_1_38()
{
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
}

uint64_t OUTLINED_FUNCTION_1_39()
{
  return outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
}

uint64_t OUTLINED_FUNCTION_1_40(uint64_t result)
{
  void *v1 = result;
  return result;
}

BOOL OUTLINED_FUNCTION_1_41()
{
  return static SpringBoardUtilities.checkSpringBoardState(for:)();
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  return StateObject.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_1_43(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t OUTLINED_FUNCTION_1_44(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CallScreening.State(v2, a2);
}

uint64_t OUTLINED_FUNCTION_1_45()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x536C616974696E49, 0xEC00000065746174, (uint64_t *)(v0 - 104));
}

char *OUTLINED_FUNCTION_1_46@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_47(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t OUTLINED_FUNCTION_1_48()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_1_49()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_1_50()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_51(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_1_52(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x7542000000000000;
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_55()
{
  return v0;
}

void *OUTLINED_FUNCTION_1_56()
{
  v0[37] = v0[4];
  v0[38] = v1;
  v0[39] = v0[6];
  v0[40] = v2;
  v0[41] = v0[8];
  v0[42] = v3;
  v0[43] = v0[10];
  v0[44] = v4;
  v0[45] = v0[12];
  v0[46] = v5;
  v0[47] = v0[14];
  v0[48] = v6;
  v0[49] = v0[16];
  v0[50] = v7;
  v0[51] = v0[18];
  v0[52] = v8;
  return v0 + 37;
}

uint64_t OUTLINED_FUNCTION_1_58(float a1)
{
  float *v1 = a1;
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_1_59()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

char *OUTLINED_FUNCTION_1_60()
{
  return ParticipantView.init(frame:localParticipant:)();
}

void OUTLINED_FUNCTION_1_61(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, CGAffineTransform *using)
{
  CGAffineTransform.transformingTranslationComponent(using:)((CGAffineTransform *)&a9, (CGAffineTransform *)&using);
}

uint64_t OUTLINED_FUNCTION_1_62(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  LOBYTE(a12) = v19;
  LOBYTE(a10) = v17;
  return specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6, a7, a8, v16, a10, v18, a12, v20, v21, a15, a16);
}

id OUTLINED_FUNCTION_1_63()
{
  return objc_msgSend(v1, (SEL)(v0 + 750), v2);
}

uint64_t OUTLINED_FUNCTION_1_64()
{
  return objectdestroyTm_3();
}

uint64_t OUTLINED_FUNCTION_1_65()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

void OUTLINED_FUNCTION_1_67()
{
  JUMPOUT(0x1C87730B0);
}

id OUTLINED_FUNCTION_1_68()
{
  return objc_msgSend(v1, (SEL)(v0 + 1214), v2, 16.0);
}

id OUTLINED_FUNCTION_1_71(objc_super *a1, SEL a2)
{
  return objc_msgSendSuper2(a1, a2, v6, v5, v4, v3);
}

id OUTLINED_FUNCTION_1_72()
{
  return v0;
}

double OUTLINED_FUNCTION_1_73()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_1_74()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_75()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

double OUTLINED_FUNCTION_1_76()
{
  return 1.0;
}

uint64_t OUTLINED_FUNCTION_1_77()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_1_79()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_81(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 2743), 0);
}

uint64_t OUTLINED_FUNCTION_1_82()
{
  return v0;
}

id OUTLINED_FUNCTION_1_83()
{
  return [v0 (SEL)(v1 + 2072)];
}

__n128 OUTLINED_FUNCTION_1_84()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 144) = *(_OWORD *)v0;
  *(_OWORD *)(v1 - 128) = v2;
  __n128 result = *(__n128 *)(v0 + 32);
  *(__n128 *)(v1 - 112) = result;
  *(void *)(v1 - 96) = *(void *)(v0 + 48);
  return result;
}

id OUTLINED_FUNCTION_1_86(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1176), 1);
}

uint64_t OUTLINED_FUNCTION_1_87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10)
{
  return InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(a1, a2, a3, a4, 0, 1, 0, 0, a5, a10);
}

id OUTLINED_FUNCTION_1_88()
{
  return objc_msgSend(v0, (SEL)(v1 + 750), v2);
}

uint64_t OUTLINED_FUNCTION_1_89()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

void OUTLINED_FUNCTION_1_90(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 - 8) = a3 & 1;
}

uint64_t OUTLINED_FUNCTION_1_91(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  uint64_t v5 = 0x61737265766E6F43;
  unint64_t v6 = 0xEF74694B6E6F6974;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v9 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&a2 - 1), *(Swift::String_optional *)&v5, v2, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;
}

BOOL OUTLINED_FUNCTION_1_92()
{
  uint64_t v9 = v5;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v1;
  uint64_t v14 = v2;
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  return CGRectEqualToRect(*(CGRect *)&v9, *(CGRect *)&v13);
}

uint64_t OUTLINED_FUNCTION_1_93()
{
  return v0;
}

char *OUTLINED_FUNCTION_1_95@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_1_96()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_1_97(uint64_t a1, uint64_t (*a2)(void))
{
  return Features.isHeroTitleEnabled.getter(a1, a2, 2);
}

uint64_t OUTLINED_FUNCTION_1_98()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_1_99()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_100()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_101(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t OUTLINED_FUNCTION_1_102()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_1_103()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_104()
{
  return [v0 (SEL)(v1 + 664)];
}

uint64_t OUTLINED_FUNCTION_1_105()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

unint64_t OUTLINED_FUNCTION_1_107(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_1_108()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_1_109()
{
  return swift_getOpaqueTypeMetadata2();
}

void OUTLINED_FUNCTION_1_110()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1);
}

uint64_t OUTLINED_FUNCTION_1_111()
{
  return v0;
}

void OUTLINED_FUNCTION_1_112()
{
  Hasher._combine(_:)(0);
}

uint64_t OUTLINED_FUNCTION_3_25()
{
  *(void *)(v1 + 320) = *(void *)(v2 + 8);
  *(void *)(v1 + 328) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_114(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return InCallControlButton.__allocating_init(style:imageName:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:)(5, a3, 0, 0, 0, 1, 0, 0, a1, a10);
}

uint64_t OUTLINED_FUNCTION_1_115()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_7(uint64_t a1)
{
  return MEMORY[0x1F4188298](a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_1_117(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CNKCoreAnalyticsReporter.reportIncompatibilityTypeNone(recipientCount:reason:)(a1, a2, a3, (void *)0xE600000000000000);
}

uint64_t OUTLINED_FUNCTION_1_118()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_119(uint64_t result)
{
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_120()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_121()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_1_123()
{
  return __swift_project_value_buffer(v0, v1);
}

id OUTLINED_FUNCTION_1_125(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

uint64_t OUTLINED_FUNCTION_1_127()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_128()
{
  return *(void *)(v0 + 544);
}

uint64_t OUTLINED_FUNCTION_1_129()
{
  return v0 + 56;
}

uint64_t OUTLINED_FUNCTION_1_131()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_1_132()
{
  return type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_1_134()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_135()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_136(char a1)
{
  return Defaults.BOOL(for:domain:default:)(a1, v1, 0);
}

id OUTLINED_FUNCTION_1_137()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_1_139()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_141@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = 0xEC0000006C6C6163;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_142()
{
  return type metadata accessor for ConversationControlsRecipe();
}

id OUTLINED_FUNCTION_1_143(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

id OUTLINED_FUNCTION_1_144(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

unint64_t OUTLINED_FUNCTION_1_145()
{
  return 0xD00000000000001CLL;
}

double OUTLINED_FUNCTION_1_146()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_148()
{
  return v0;
}

double OUTLINED_FUNCTION_1_149()
{
  return 10.0;
}

double OUTLINED_FUNCTION_1_150()
{
  return 0.25;
}

id OUTLINED_FUNCTION_1_151(uint64_t a1)
{
  uint64_t v4 = *v1;
  return objc_msgSend(v2, v4, a1);
}

uint64_t OUTLINED_FUNCTION_1_152()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_153@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)(v1 + a1);
  return objc_msgSend(v4, (SEL)(v2 + 1176), 1);
}

uint64_t OUTLINED_FUNCTION_1_154()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_155@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

id OUTLINED_FUNCTION_1_156()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

void *OUTLINED_FUNCTION_1_157@<X0>(uint64_t a1@<X8>)
{
  return __swift_project_boxed_opaque_existential_1((void *)(v1 + a1), *(void *)(v1 + a1 + 24));
}

void RecentsCallItem.sectionDate.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_214_0();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
    uint64_t v12 = (uint64_t)v0 + *(int *)(type metadata accessor for RecentsCallItem(0) + 36);
    uint64_t v13 = v3;
LABEL_9:
    _s15ConversationKit11ParticipantVSgWOcTm_0(v12, v13, (uint64_t *)&demangling cache variable for type metadata for Date?);
    goto LABEL_10;
  }
  uint64_t v6 = *v0;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_62();
  id v9 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  ConversationLink.prevailingSuggestion.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    SGURL.endDate.getter(v4);
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v14 = type metadata accessor for Date();
    __swift_storeEnumTagSinglePayload(v4, 1, 1, v14);
    swift_release_n();
    swift_bridgeObjectRelease_n();
    uint64_t v11 = v9;
  }

  type metadata accessor for Date();
  OUTLINED_FUNCTION_69(v4);
  if (v15)
  {
    outlined destroy of SystemUpdateNotice?(v4, (uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v12 = (uint64_t)v1 + *(int *)(type metadata accessor for RecentsCallItem(0) + 36);
    uint64_t v13 = v3;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_46();
  v16();
  OUTLINED_FUNCTION_192_1(v3, 0);
LABEL_10:
  OUTLINED_FUNCTION_15_0();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_103_1()
{
  return lazy protocol witness table accessor for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors();
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  return v0 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 20);
}

void OUTLINED_FUNCTION_103_4(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_103_5()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

void OUTLINED_FUNCTION_103_6()
{
  ConversationControlsNoticeCoordinator.pop()();
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_47_3(uint64_t result)
{
  *(void *)(v1 - 112) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

void OUTLINED_FUNCTION_47_8()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_47_9@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v1 + a1, 1, 1, v2);
}

void OUTLINED_FUNCTION_47_10()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_47_13@<X0>(unint64_t *a1@<X8>)
{
  return closure #1 in RemoteControlStateMachine.state.getter(v1, a1);
}

uint64_t OUTLINED_FUNCTION_47_14()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_47_15()
{
  return type metadata accessor for HUDActivityManager.BannerUpdate(0);
}

uint64_t OUTLINED_FUNCTION_47_16()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_47_18()
{
  return v0 + 208;
}

void *OUTLINED_FUNCTION_47_19()
{
  return closure #1 in variable initialization expression of LocalParticipantControlsView.collapseButton();
}

uint64_t OUTLINED_FUNCTION_47_20(uint64_t *a1)
{
  return getEnumTag for TapInteraction.EventType(a1);
}

uint64_t OUTLINED_FUNCTION_47_21()
{
  return outlined destroy of SystemUpdateNotice?(v1 - 144, v0);
}

uint64_t OUTLINED_FUNCTION_47_22()
{
  return *(void *)(v0 + 24);
}

double OUTLINED_FUNCTION_47_23()
{
  return *(double *)(v0 + 232);
}

double OUTLINED_FUNCTION_21_6()
{
  return 1.0;
}

int8x8_t OUTLINED_FUNCTION_21_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11 = vorrq_s8(a10, a11);
  return vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL));
}

uint64_t OUTLINED_FUNCTION_21_8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  a1[2] = v3;
  a1[3] = a2;
  a1[4] = v6;
  a1[5] = v4;
  a1[6] = v2;
  a1[7] = v5;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  void *v0 = v1;
  v0[1] = v3;
  v0[2] = ~v4;
  v0[3] = v6;
  v0[4] = v5;
  return v2;
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_21_10(uint64_t result)
{
  *(void *)(v1 + 200) = v2;
  *(void *)(v1 + 208) = 0;
  *(unsigned char *)(v1 + 216) = 0;
  *(void *)(v1 + 224) = v3;
  *(void *)(v1 + 232) = v4;
  *(void *)(v1 + 240) = result;
  *(void *)(v1 + 248) = 5;
  return result;
}

void OUTLINED_FUNCTION_21_11()
{
}

uint64_t OUTLINED_FUNCTION_21_12(float a1)
{
  *(double *)(v1 - 104) = a1;
  return v1 - 104;
}

double OUTLINED_FUNCTION_21_13@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 176) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 - 168) = 0u;
  *(_OWORD *)(v1 - 152) = 0u;
  return result;
}

void OUTLINED_FUNCTION_21_14()
{
  ConversationLink.prevailingSuggestion.getter();
}

uint64_t OUTLINED_FUNCTION_21_15(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_21_16(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

id OUTLINED_FUNCTION_21_18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a1, (SEL)(v6 + 2840), v5, a4, a5, 0);
}

char *OUTLINED_FUNCTION_21_21()
{
  return PushToTalkLabelButtonView.init(button:labelText:)(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_21_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9)
{
  double v11 = *(double *)(v9 + 304);
  return InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(0, v9 + 64, 0, 0, 0, 1, 0, 0, v11, a9);
}

uint64_t OUTLINED_FUNCTION_21_23(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t OUTLINED_FUNCTION_21_24(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &a26);
}

uint64_t OUTLINED_FUNCTION_21_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_28()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_275()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_378()
{
  uint64_t result = v0[5] + v0[6];
  *(void *)(result + 8) = v0[4];
  return result;
}

uint64_t OUTLINED_FUNCTION_21_29()
{
  return v2 + v0 * v1;
}

uint64_t OUTLINED_FUNCTION_21_30()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_21_32()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_21_34(float a1)
{
  float *v1 = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_21_35@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (uint64_t *)(v2 + a1);
  uint64_t result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*v4);
  *uint64_t v4 = v3;
  v4[1] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_38@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = *(void *)(a1 - 256);
  *(void *)(v2 - 96) = v1;
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_21_39()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_157()
{
  return v0;
}

void OUTLINED_FUNCTION_21_43(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 48) + 8 * a1) = v2;
}

id OUTLINED_FUNCTION_21_44()
{
  uint64_t v3 = *(void **)(v1 - 160);
  return [v3 (SEL)(v0 + 3052)];
}

uint64_t OUTLINED_FUNCTION_21_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_49(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_21_50@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_51()
{
  return swift_slowAlloc();
}

void *OUTLINED_FUNCTION_21_52()
{
  return malloc(0x28uLL);
}

char *OUTLINED_FUNCTION_21_53()
{
  return MostActiveParticipantViewController.localParticipantView.getter();
}

id OUTLINED_FUNCTION_21_54(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1176), 0);
}

uint64_t OUTLINED_FUNCTION_21_55()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 224), v1);
  return v1;
}

id OUTLINED_FUNCTION_21_56(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, (SEL)(v5 + 917), v4, a4, 0x2000);
}

uint64_t OUTLINED_FUNCTION_21_57(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v3;
  return outlined init with take of ObjectTracker.RuleGroup();
}

void OUTLINED_FUNCTION_21_58(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(a1 + 720) = a2;
  *(int64x2_t *)(a1 + 736) = vdupq_n_s64(0x404A000000000000uLL);
  *(void *)(a1 + 752) = 0x404A000000000000;
}

void RecentsCallItem.sectionOverride.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v2;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v0, (uint64_t)v1);
  OUTLINED_FUNCTION_39();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = *v1;
    type metadata accessor for RecentsCallItem(0);
    static RecentsCallItem.shouldTargetUpcoming(for:)();
    if (v6)
    {
      id v7 = v5;
      swift_bridgeObjectRetain();
      swift_retain();
      ConversationLink.prevailingSuggestion.getter();
      if (!v8)
      {
        char v11 = 2;
        swift_release_n();
        OUTLINED_FUNCTION_32_1();

        goto LABEL_10;
      }
      uint64_t v9 = v8;
      char v10 = SGURL.hasEventDate.getter();
      char v11 = 2;
      swift_release_n();
      OUTLINED_FUNCTION_32_1();

      if ((v10 & 1) == 0) {
        goto LABEL_10;
      }
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    char v11 = 13;
LABEL_10:
    *uint64_t v3 = v11;
    goto LABEL_11;
  }
  *uint64_t v3 = 13;
  _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v1, (void (*)(void))type metadata accessor for RecentsCallItemType);
LABEL_11:
  OUTLINED_FUNCTION_15_0();
}

void RecentsCallItem.combiningUUID(forType:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_108_1();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_62();
  if (*v3)
  {
    OUTLINED_FUNCTION_110_4();
    OUTLINED_FUNCTION_351();
    swift_getEnumCaseMultiPayload();
    OUTLINED_FUNCTION_171_1();
    if (v9)
    {
      uint64_t v13 = OUTLINED_FUNCTION_24_2();
      _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v13, v14);
      _s15ConversationKit11ParticipantVSgWOcTm_0(v1 + *(int *)(v7 + 48), v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
    }
    else
    {
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v10 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_0_53(v10);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    RecentsCallItem.combiningUUIDForLinks.getter(v11);
  }
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return *v0;
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_15_8(uint64_t result)
{
  *(void *)(v1 + 240) = *(void *)(result + 16);
  return result;
}

void OUTLINED_FUNCTION_15_9()
{
  STACK[0x260] = v1;
  LOBYTE(STACK[0x268]) = v0;
  SystemApertureIconFactory.CallDescriptor.statusIcon.getter((int64x2_t *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

id OUTLINED_FUNCTION_15_11()
{
  uint64_t v3 = *(const char **)(v1 + 3808);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return type metadata accessor for CaptionSectioner.Caption(0);
}

uint64_t OUTLINED_FUNCTION_15_14()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

void OUTLINED_FUNCTION_15_15()
{
  JUMPOUT(0x1C87744F0);
}

uint64_t OUTLINED_FUNCTION_15_19()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_15_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 312) = &a9;
  return a1 - 8;
}

void *OUTLINED_FUNCTION_15_21@<X0>(uint64_t a1@<X8>)
{
  return memcpy((void *)(v1 - 216), (const void *)(a1 + 40), 0x80uLL);
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_15_23()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_24()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OUTLINED_FUNCTION_15_25(uint64_t result)
{
  *(void *)(v1 + 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_26()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_31()
{
  return v0;
}

char *OUTLINED_FUNCTION_15_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t result = (char *)&a9 - v12;
  *(void *)(v9 + 16) = v12;
  *(void *)(v9 + 24) = v13;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_33()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_15_35()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

id OUTLINED_FUNCTION_15_36(void *a1)
{
  uint64_t v4 = *(const char **)(v1 + 1648);
  return objc_msgSend(a1, v4, v3);
}

char *OUTLINED_FUNCTION_15_37()
{
  return ParticipantView.init(frame:localParticipant:)();
}

uint64_t OUTLINED_FUNCTION_15_38(uint64_t a1)
{
  return specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(a1, 1);
}

uint64_t OUTLINED_FUNCTION_15_39()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_15_40()
{
  return v0;
}

id OUTLINED_FUNCTION_15_41()
{
  return [v0 (SEL)(v1 + 1694)];
}

uint64_t OUTLINED_FUNCTION_15_42(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_15_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_15_47()
{
  return swift_getObjectType();
}

float OUTLINED_FUNCTION_15_48@<S0>(uint64_t a1@<X8>)
{
  return *(float *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_15_50()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_15_51(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_15_52()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t OUTLINED_FUNCTION_15_53()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

void OUTLINED_FUNCTION_15_54()
{
}

uint64_t OUTLINED_FUNCTION_15_55()
{
  return v0;
}

double OUTLINED_FUNCTION_15_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_58(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 - 184) = a2 & 1;
  *(unsigned char *)(v4 - 192) = a4 & 1;
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t OUTLINED_FUNCTION_15_59()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_15_60()
{
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return v0 + v1;
}

uint64_t OUTLINED_FUNCTION_15_62()
{
  return 0x4345445F4C4C4143;
}

uint64_t OUTLINED_FUNCTION_15_63()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_64()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)(v1);
}

void *OUTLINED_FUNCTION_15_65()
{
  return memcpy(v0, v1, 0x150uLL);
}

uint64_t OUTLINED_FUNCTION_15_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_67()
{
  return v0 + 160;
}

uint64_t OUTLINED_FUNCTION_15_68@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = result;
  *(_WORD *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 4;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  return result;
}

void *OUTLINED_FUNCTION_15_70()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_15_71(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return outlined init with copy of InCallControlsActivityCellViewModel(v4, v3, a3);
}

double OUTLINED_FUNCTION_15_73()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetWidth(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_15_74()
{
  return v0;
}

void OUTLINED_FUNCTION_15_75(float a1)
{
  float *v1 = a1;
}

BOOL OUTLINED_FUNCTION_15_76(os_log_type_t a1)
{
  *(_DWORD *)(v2 - 428) = a1;
  return os_log_type_enabled(v1, a1);
}

double OUTLINED_FUNCTION_15_79()
{
  return 12.0;
}

uint64_t OUTLINED_FUNCTION_15_80()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

__n128 OUTLINED_FUNCTION_15_81(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15)
{
  return (__n128)a15;
}

uint64_t OUTLINED_FUNCTION_15_82()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_14_7(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return outlined init with take of SystemUpdateNotice(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return swift_task_alloc();
}

double OUTLINED_FUNCTION_14_9()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_14_10()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

id OUTLINED_FUNCTION_14_11(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2, 112);
}

uint64_t OUTLINED_FUNCTION_14_12(uint64_t a1)
{
  return outlined consume of CallScreening.EndingAction(a1, v1, 0);
}

uint64_t OUTLINED_FUNCTION_14_13()
{
  return v0;
}

id OUTLINED_FUNCTION_14_14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2, v13, v12, v11, v10);
}

id OUTLINED_FUNCTION_14_15(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  return [a29 (SEL)(v29 + 2600)];
}

void OUTLINED_FUNCTION_14_18()
{
  *(void *)(v3 - 120) = v0;
  *(void *)(v3 - 112) = v1;
  *(void *)(v3 - 104) = v2;
}

uint64_t OUTLINED_FUNCTION_14_19()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_14_20(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 + 136);
  uint64_t v6 = *(void *)(v3 + 104);
  return _s15ConversationKit11ParticipantVWOcTm_1(v5, v6, a3);
}

uint64_t OUTLINED_FUNCTION_14_21@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = *(void *)(v1 - 232);
  *(void *)(v1 - 224) = a1;
  return result;
}

BOOL OUTLINED_FUNCTION_14_22(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

uint64_t OUTLINED_FUNCTION_14_23()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OUTLINED_FUNCTION_14_24()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_14_25@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 320) = a1;
  return *(void *)(v1 + 296) + 32 * a1 + 32;
}

uint64_t OUTLINED_FUNCTION_14_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return swift_unknownObjectWeakInit();
}

void OUTLINED_FUNCTION_14_29()
{
  JUMPOUT(0x1C87730B0);
}

uint64_t OUTLINED_FUNCTION_4_24()
{
  return swift_slowAlloc();
}

__n128 OUTLINED_FUNCTION_14_31(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_32(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(unsigned char *)(result + 24) = v1 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_34()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t OUTLINED_FUNCTION_14_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_37(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return specialized Array._endMutation()();
}

uint64_t OUTLINED_FUNCTION_14_38()
{
  return v0;
}

id OUTLINED_FUNCTION_14_40(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

double OUTLINED_FUNCTION_14_41()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_14_42()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_14_43()
{
  return v0;
}

id OUTLINED_FUNCTION_14_44()
{
  return objc_msgSend(v0, (SEL)(v2 + 3419), v1);
}

uint64_t OUTLINED_FUNCTION_14_46(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_14_47()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_14_49@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 16 * a2;
  *(void *)(v2 + 304) = *(void *)(v4 + 32);
  *(void *)(v2 + 312) = *(void *)(v4 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_50()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_51(uint64_t a1)
{
  *(void *)(*(void *)v1 + 16) = a1 + 1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_14_52()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_14_53()
{
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(*(void *)(v1 - 136), *(void *)(v1 - 128));
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(*(void *)(v1 - 120), *(void *)(v1 - 112));
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(*(void *)(v1 - 104), *(void *)(v1 - 96));
  return StateHolder.state.getter(v0);
}

uint64_t OUTLINED_FUNCTION_14_54()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_55(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 - 184) = a2 & 1;
  *(unsigned char *)(v4 - 192) = a4 & 1;
  return LayoutSubview.sizeThatFits(_:)();
}

id OUTLINED_FUNCTION_14_56()
{
  return [v1 (SEL)(v0 + 1944)];
}

uint64_t OUTLINED_FUNCTION_14_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_61()
{
  return outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v1, v0, v2, v3, v6, v5, v4, 1u);
}

void OUTLINED_FUNCTION_14_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v24, v25, 2, v26 - 104, 0, 0, 1, v23, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
}

void OUTLINED_FUNCTION_14_65()
{
  JUMPOUT(0x1C8774620);
}

uint64_t OUTLINED_FUNCTION_14_70()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_73()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + a1);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
}

double OUTLINED_FUNCTION_14_74()
{
  uint64_t v4 = v1;
  uint64_t v5 = v2;
  uint64_t v6 = v3;
  uint64_t v7 = v3;
  return CGRectGetWidth(*(CGRect *)&v4);
}

uint64_t OUTLINED_FUNCTION_14_75()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t OUTLINED_FUNCTION_14_77()
{
  return v0;
}

double OUTLINED_FUNCTION_14_80()
{
  return 30.0;
}

uint64_t OUTLINED_FUNCTION_14_81()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_82()
{
  return v0;
}

id OUTLINED_FUNCTION_172_0()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_172_1()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_172_2()
{
  return v0;
}

void OUTLINED_FUNCTION_172_3(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return *(void *)(v1 - 192) + *(void *)(*(void *)(v1 - 160) + 72) * v0;
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_39_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_39_11()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_39_12()
{
  return v0;
}

id OUTLINED_FUNCTION_39_13(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 1, 0);
}

uint64_t OUTLINED_FUNCTION_39_14()
{
  return v0 + 1;
}

uint64_t OUTLINED_FUNCTION_39_15@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for BorderedProminentButtonStyle();
}

uint64_t OUTLINED_FUNCTION_39_16@<X0>(uint64_t a1@<X8>)
{
  return v1 - a1;
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return v0;
}

void OUTLINED_FUNCTION_39_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 272) = &a9;
}

uint64_t OUTLINED_FUNCTION_39_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_20()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_39_21()
{
  return type metadata accessor for Binding();
}

void OUTLINED_FUNCTION_39_22(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_39_25@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 16) = v1;
  *(void *)(a1 - 8) = v2;
  outlined copy of RemoteControlState(v1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_39_26(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 + 96));
}

uint64_t OUTLINED_FUNCTION_39_27()
{
  return v0;
}

void OUTLINED_FUNCTION_39_29()
{
  long long v2 = *(_OWORD *)(v0 - 112);
  long long v3 = *(_OWORD *)(v0 - 96);
  *(_OWORD *)(v0 - 128) = *(_OWORD *)(v0 - 128);
  *(_OWORD *)(v0 - 112) = v2;
  *(_OWORD *)(v0 - 96) = v3;
  ParticipantView.updateLayerTransform(to:)((CGAffineTransform *)(v0 - 128));
}

uint64_t OUTLINED_FUNCTION_39_30()
{
  return type metadata accessor for Participant(0);
}

uint64_t OUTLINED_FUNCTION_39_32@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_39_33()
{
  return swift_arrayDestroy();
}

double OUTLINED_FUNCTION_39_34()
{
  return *(double *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  return 41;
}

uint64_t OUTLINED_FUNCTION_161_2()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_161_3()
{
  return objectdestroy_290Tm();
}

uint64_t OUTLINED_FUNCTION_161_4()
{
  uint64_t v2 = *(void *)(v0 + 24);
  return __swift_mutable_project_boxed_opaque_existential_1(v0, v2);
}

void OUTLINED_FUNCTION_98_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 72) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_98_6()
{
  return type metadata accessor for Date();
}

void OUTLINED_FUNCTION_98_7(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_194()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_194_0()
{
  void *v0 = 0x4089000000000000;
  return outlined init with copy of ConversationControlsType(v1 - 232, (uint64_t)(v0 + 1));
}

uint64_t OUTLINED_FUNCTION_194_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return 0x68736E6565726373;
}

id OUTLINED_FUNCTION_68_3(uint64_t a1)
{
  return static ConversationControlsButtonFactory.makeButton(frame:provider:)(a1);
}

uint64_t OUTLINED_FUNCTION_68_4(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_68_5()
{
  ++*(void *)(v0 + 16);
}

unint64_t OUTLINED_FUNCTION_68_6(unint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

void OUTLINED_FUNCTION_68_8()
{
  uint64_t v1 = 10322146;
  unint64_t v2 = 0xA300000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_68_9()
{
  return v0;
}

void OUTLINED_FUNCTION_68_10(float a1)
{
  float *v1 = a1;
}

void OUTLINED_FUNCTION_68_13(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t OUTLINED_FUNCTION_43_3()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  *(unsigned char *)(v0 - 66) = 1;
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_43_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return a21;
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_43_8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  uint64_t v7 = (void *)(v4 + *(int *)(*(void *)(v5 - 136) + 36));
  *uint64_t v7 = v1;
  v7[1] = v0;
  return outlined destroy of SystemUpdateNotice?(v3, v2);
}

uint64_t OUTLINED_FUNCTION_43_10()
{
  return swift_getObjectType();
}

void *OUTLINED_FUNCTION_43_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + a1);
  return outlined copy of ConversationLink?(v3);
}

uint64_t OUTLINED_FUNCTION_43_14()
{
  outlined copy of SessionActionNotice.NoticeType(v5, v4, v3);
  outlined copy of SessionActionNotice.NoticeType(v2, v1, v0);
  outlined consume of SessionActionNotice.NoticeType(v2, v1, v0);
  return v5;
}

uint64_t OUTLINED_FUNCTION_43_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_43_20()
{
  return static Published.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_43_21(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_43_22()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

id OUTLINED_FUNCTION_43_23(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  unint64_t v2 = MostActiveParticipantViewController.localParticipantView.getter();
  return objc_msgSend(v2, sel_widthAnchor);
}

uint64_t OUTLINED_FUNCTION_43_25()
{
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_43_26()
{
  return type metadata accessor for ObjectTracker.RuleGroup(0);
}

double OUTLINED_FUNCTION_43_27()
{
  return 17.0;
}

uint64_t OUTLINED_FUNCTION_43_28()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t (*specialized _NativeDictionary.subscript.modify(uint64_t a1, uint64_t a2, char a3))(uint64_t result)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  uint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  *(unsigned char *)(a1 + 25) = v10 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v14 = v9;
  char v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<RecentsCollectionViewSection, [RecentsCollectionViewSectionable]>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13))
  {
    uint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v15 & 1) == (v17 & 1))
    {
      uint64_t v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    __n128 result = (uint64_t (*)(uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *(void *)(a1 + 16) = v14;
  if (v15) {
    uint64_t v18 = *(void *)(*(void *)(*v4 + 56) + 8 * v14);
  }
  else {
    uint64_t v18 = 0;
  }
  *(void *)a1 = v18;
  return _NativeDictionary.subscript.modifyspecialized ;
}

void specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_5_30();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();
  specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

{
  uint64_t v2;

  Swift::Int v2 = static Hasher._hash(seed:_:)();
  specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

void specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_4_32(a1, a2);
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(*(void *)(v2 + 48) + v3) == v4)
  {
    OUTLINED_FUNCTION_12_14();
    return;
  }
  uint64_t v6 = OUTLINED_FUNCTION_3_37(v3);
  if (v9)
  {
    do
    {
      if (*(unsigned __int8 *)(v8 + v6) == v7) {
        break;
      }
      uint64_t v6 = OUTLINED_FUNCTION_3_37(v6);
    }
    while ((v10 & 1) != 0);
  }
  else
  {
LABEL_8:
    TUCallSoundPlayerSoundType.init(rawValue:)();
  }
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  uint64_t v3 = OUTLINED_FUNCTION_4_32(a1, a2);
  if ((v5 & 1) == 0) {
    goto LABEL_7;
  }
  if (*(void *)(*(void *)(v2 + 48) + 8 * v3) == v4)
  {
    OUTLINED_FUNCTION_12_14();
    return;
  }
  uint64_t v6 = OUTLINED_FUNCTION_3_37(v3);
  if ((v9 & 1) == 0)
  {
LABEL_7:
    TUCallSoundPlayerSoundType.init(rawValue:)();
    return;
  }
  do
  {
    if (*(void *)(v8 + 8 * v6) == v7) {
      break;
    }
    uint64_t v6 = OUTLINED_FUNCTION_3_37(v6);
  }
  while ((v10 & 1) != 0);
}

uint64_t OUTLINED_FUNCTION_3_28(uint64_t a1)
{
  return *(void *)a1;
}

id OUTLINED_FUNCTION_3_29()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_3_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_31(uint64_t a1, uint64_t a2)
{
  __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
  return swift_beginAccess();
}

void *OUTLINED_FUNCTION_3_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  return outlined copy of SystemApertureIcon?(a17, v18, v19, v20, v21, v22, v23, v17);
}

uint64_t OUTLINED_FUNCTION_3_34()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_3_36()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t OUTLINED_FUNCTION_3_37(uint64_t a1)
{
  return (a1 + 1) & v1;
}

uint64_t OUTLINED_FUNCTION_3_38()
{
  return swift_getKeyPath();
}

__n128 OUTLINED_FUNCTION_3_40(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, long long a14, long long a15, __n128 a16)
{
  a1[1] = a14;
  a1[2] = a15;
  __n128 result = a16;
  a1[3] = a16;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_41()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_3_42(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

id OUTLINED_FUNCTION_3_43(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1069), 0.75);
}

uint64_t OUTLINED_FUNCTION_3_44()
{
  return *(void *)(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_3_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_47()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_3_48()
{
  JUMPOUT(0x1C87730B0);
}

uint64_t OUTLINED_FUNCTION_3_50()
{
  __swift_storeEnumTagSinglePayload(v0, 1, 1, *(void *)(v1 - 184));
  return v1 - 112;
}

void OUTLINED_FUNCTION_3_51()
{
  uint64_t v3 = *(void *)(v2 - 120);
  *(void *)(v2 - 136) = v1
                        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  *(void *)(v2 - 104) = v3 + 16;
  *(void *)(v2 - 96) = v0 + 56;
  *(void *)(v2 - 152) = v1;
  *(void *)(v2 - 144) = v3 + 32;
}

id OUTLINED_FUNCTION_3_52(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 750), a1);
}

void OUTLINED_FUNCTION_3_54()
{
  *(void *)(v1 - 264) = *v0 + 64;
}

uint64_t OUTLINED_FUNCTION_3_55()
{
  return swift_unknownObjectWeakInit();
}

id OUTLINED_FUNCTION_3_57()
{
  return objc_msgSend(v1, (SEL)(v0 + 775), v2);
}

uint64_t OUTLINED_FUNCTION_3_58()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_3_61()
{
  return objectdestroyTm_3();
}

id OUTLINED_FUNCTION_3_62()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_3_63()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

id OUTLINED_FUNCTION_3_65(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 3480), 0.0, 0.0, 0.0, 0.0);
}

uint64_t OUTLINED_FUNCTION_3_66()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_69()
{
  return v0;
}

id OUTLINED_FUNCTION_3_70()
{
  return [v0 (SEL)(v1 + 664)];
}

uint64_t OUTLINED_FUNCTION_3_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_72()
{
  return swift_getTupleTypeMetadata2();
}

id OUTLINED_FUNCTION_3_76()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

void OUTLINED_FUNCTION_3_77()
{
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  outlined consume of ClarityUIOutgoingCallAction?(v4, v1, v5, v2);
}

uint64_t OUTLINED_FUNCTION_3_78()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void OUTLINED_FUNCTION_18_9(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

double OUTLINED_FUNCTION_3_80()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_81()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_83()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_3_84()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_3_85()
{
  return v0;
}

void OUTLINED_FUNCTION_3_87(uint64_t a1@<X8>)
{
  *(void *)(v1 + 64) = a1 & 0x1FFFFFFFFFFFFFFFLL;
}

uint64_t OUTLINED_FUNCTION_3_88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = *(void *)(v13 - 72);
  return outlined copy of CallScreening.StateTransition(v15, a12, v12);
}

uint64_t OUTLINED_FUNCTION_3_89()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_90(uint64_t a1, uint64_t (*a2)(void))
{
  return Features.isHeroTitleEnabled.getter(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_3_91()
{
  uint64_t v2 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
}

uint64_t OUTLINED_FUNCTION_3_92()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t OUTLINED_FUNCTION_3_93()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_95()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_3_97()
{
  return specialized LiveCallDurationView.init(font:callDurationProvider:voiceOverUpdateHandler:)(v3, v6, v2, v0, v1, v4, v5);
}

uint64_t OUTLINED_FUNCTION_3_98(void (*a1)(uint64_t *__return_ptr), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  return specialized InCallCallControlsService.fromControlManager<A>(_:defaultValue:)(a1, 0, a3);
}

id OUTLINED_FUNCTION_3_99()
{
  return objc_msgSend(v1, (SEL)(v0 + 750), v2);
}

id OUTLINED_FUNCTION_3_100()
{
  return CallControlsStatusView.titleLabel.getter(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_3_102()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_103(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return static NSTimer.publish(every:tolerance:on:in:options:)();
}

void OUTLINED_FUNCTION_3_104(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  Hasher._combine(_:)(v10);
}

void *OUTLINED_FUNCTION_3_105(uint64_t a1)
{
  v2[2] = v3;
  v2[3] = v7;
  v2[6] = v6;
  v2[7] = v5;
  v2[8] = v4;
  v2[4] = a1;
  v2[5] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_3_106()
{
  return outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v2, v1, v0);
}

unint64_t OUTLINED_FUNCTION_3_107()
{
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v2 - 88) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 88) + 80))
       + *(void *)(*(void *)(v2 - 88) + 72) * v1;
}

uint64_t OUTLINED_FUNCTION_3_108()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_3_110()
{
  return type metadata accessor for AutoScrollingList();
}

id OUTLINED_FUNCTION_3_111()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_3_112()
{
  return Logger.init(subsystem:category:)();
}

void OUTLINED_FUNCTION_3_113(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t OUTLINED_FUNCTION_3_114()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

void OUTLINED_FUNCTION_3_115()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_3_117()
{
  uint64_t v2 = 0x4C45434E4143;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v4, v0, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_3_118(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(v1 + *(int *)(a1 + 64));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  return outlined consume of Participant.CopresenceInfo?(v4, v5);
}

uint64_t OUTLINED_FUNCTION_3_119()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_120()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_123()
{
  return 0;
}

void OUTLINED_FUNCTION_3_124()
{
  JUMPOUT(0x1C8773BA0);
}

uint64_t OUTLINED_FUNCTION_3_125()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_126()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_3_127()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_128()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_4_25@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

void OUTLINED_FUNCTION_3_129()
{
  outlined consume of VariableBlurMask(v1, v2, v3, v4, v0, v5);
}

uint64_t OUTLINED_FUNCTION_3_130(char a1)
{
  return Defaults.BOOL(for:domain:default:)(a1, v1, 1u);
}

uint64_t OUTLINED_FUNCTION_3_131(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x6E696E657473694CLL, 0xEE00657461745367, a3);
}

id OUTLINED_FUNCTION_3_132()
{
  return [v0 (SEL)(v1 + 2072)];
}

void OUTLINED_FUNCTION_3_133(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  void *v2 = 0;
  v2[1] = 0;
}

id OUTLINED_FUNCTION_3_134()
{
  return @nonobjc TUCollaborationInitiator.init(nameComponents:handle:)(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_135()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_3_136()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_137()
{
  return swift_release();
}

double OUTLINED_FUNCTION_3_138()
{
  return ShutterButtonStyle.resolvedSize.getter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_139(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
  uint64_t v5 = 0x61737265766E6F43;
  unint64_t v6 = 0xEF74694B6E6F6974;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v9 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v5, v2, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_3_140()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_3_142(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = v1;
}

void OUTLINED_FUNCTION_3_143()
{
  v0[13] = 0;
  v0[14] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[10] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[16] = 0;
  v0[17] = 0;
  v0[15] = 0;
}

BOOL OUTLINED_FUNCTION_3_144@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

id OUTLINED_FUNCTION_3_145@<X0>(uint64_t a1@<X8>)
{
  unint64_t v4 = *(void **)(v1 + a1);
  return objc_msgSend(v4, (SEL)(v2 + 1176), 1);
}

double OUTLINED_FUNCTION_3_146@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 264) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 8) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_147@<X0>(char a1@<W8>)
{
  **(unsigned char **)(v1 + 16) = a1;
  return v1 + 8;
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_4_27(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return specialized Array._endMutation()();
}

id OUTLINED_FUNCTION_4_28()
{
  return objc_allocWithZone(v0);
}

uint64_t OUTLINED_FUNCTION_4_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_30()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_4_31()
{
  return CallControlsMenuViewController.isOneToOneModeEnabled.setter(v0);
}

uint64_t OUTLINED_FUNCTION_4_32(uint64_t a1, uint64_t a2)
{
  return a2 & ~(-1 << *(unsigned char *)(v2 + 32));
}

uint64_t OUTLINED_FUNCTION_4_33(void *a1)
{
  a1[2] = v1;
  a1[3] = v4;
  a1[4] = v2;
  a1[5] = v3;
  return swift_unknownObjectRetain();
}

id OUTLINED_FUNCTION_4_35()
{
  uint64_t v3 = *(const char **)(v1 + 2072);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_4_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

double OUTLINED_FUNCTION_4_40()
{
  return 0.0;
}

char *OUTLINED_FUNCTION_4_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_4_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_44()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 216), v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_45(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v3 + 80);
  return _s15ConversationKit11ParticipantVWOcTm_2(v4, v6, a3);
}

uint64_t OUTLINED_FUNCTION_4_48()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t OUTLINED_FUNCTION_4_49()
{
  return type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_4_50()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

id OUTLINED_FUNCTION_4_51()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_4_52(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void OUTLINED_FUNCTION_4_53(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = 0;
}

uint64_t OUTLINED_FUNCTION_4_55()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

void OUTLINED_FUNCTION_4_56(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t OUTLINED_FUNCTION_4_57()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_4_61()
{
  ControlsButtonProvider.button.setter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_62(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_4_64(float a1)
{
  float *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_4_65()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

char *OUTLINED_FUNCTION_4_66@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_17_9(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_68()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_69()
{
  *(void *)(v2 - 152) = v1;
  *(void *)(v2 - 144) = v0;
  *(unsigned char *)(v2 - 176) = 0;
  return String.localized.getter();
}

uint64_t OUTLINED_FUNCTION_4_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_73()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_74()
{
  return v0;
}

double OUTLINED_FUNCTION_4_75()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_4_76()
{
  return v0;
}

id OUTLINED_FUNCTION_4_77()
{
  return objc_msgSend(v0, (SEL)(v2 + 750), v1);
}

uint64_t OUTLINED_FUNCTION_4_80()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_81()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_4_83()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_4_84(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_4_85(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 16) = 1;
}

uint64_t OUTLINED_FUNCTION_4_86()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

void OUTLINED_FUNCTION_4_87()
{
  outlined consume of CallControlsStatusView.LeadingView(v4, v3, v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_88()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_89()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_4_90()
{
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(v1, v0, v2);
}

id OUTLINED_FUNCTION_4_91(uint64_t a1)
{
  double v5 = -*v2;
  return objc_msgSend(v1, (SEL)(v3 + 775), a1, v5);
}

void OUTLINED_FUNCTION_4_92(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_4_94()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4_95()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_96()
{
  void *v0 = v1;
  return swift_getKeyPath();
}

id OUTLINED_FUNCTION_4_97()
{
  return [v0 (SEL)(v1 + 2072)];
}

uint64_t OUTLINED_FUNCTION_4_98()
{
  return static ProposedViewSize.== infix(_:_:)();
}

void *OUTLINED_FUNCTION_4_99(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x48uLL);
}

id OUTLINED_FUNCTION_4_100()
{
  return objc_msgSend(v1, (SEL)(v0 + 750), v2);
}

id OUTLINED_FUNCTION_4_101()
{
  return objc_msgSend(v1, (SEL)(v3 + 1221), v2, v0);
}

uint64_t OUTLINED_FUNCTION_4_102@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 16) = v2;
  *(void *)(a1 - 8) = v1;
  outlined copy of RemoteControlState(v2);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_103(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x61737265766E6F43;
  unint64_t v5 = 0xEF74694B6E6F6974;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_4_104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13)
{
  *(_OWORD *)(a1 + 16) = a13;
  return *(void *)(v13 + v14);
}

uint64_t OUTLINED_FUNCTION_4_105(float a1)
{
  float *v2 = a1;
  v1[6] = v2 + 1;
  uint64_t v3 = v1[18];
  __swift_project_boxed_opaque_existential_1(v1 + 15, v3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_4_106@<X0>(int a1@<W8>)
{
  return ((a1 + 2147483646) & 0x7FFFFFFFu) + 1;
}

uint64_t OUTLINED_FUNCTION_4_109()
{
  return 0;
}

id OUTLINED_FUNCTION_4_111()
{
  return [v0 (SEL)(v1 + 664)];
}

uint64_t OUTLINED_FUNCTION_4_112()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_113()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_4_115()
{
  return v0;
}

void OUTLINED_FUNCTION_4_116()
{
  JUMPOUT(0x1C87760E0);
}

uint64_t OUTLINED_FUNCTION_4_117(uint64_t a1)
{
  return a1 + v1;
}

id OUTLINED_FUNCTION_4_119()
{
  return outlined copy of VariableBlurMask(v1, v2, v3, v4, v0, v5);
}

uint64_t OUTLINED_FUNCTION_4_120()
{
  return type metadata accessor for ConversationControlsRecipe();
}

id OUTLINED_FUNCTION_4_121()
{
  return [v0 (SEL)(v1 + 2072)];
}

uint64_t OUTLINED_FUNCTION_4_122()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

void OUTLINED_FUNCTION_4_123()
{
  outlined consume of LeadingViewType?(*(id *)(v0 - 320), *(void *)(v0 - 344), *(_DWORD *)(v0 - 332));
  uint64_t v1 = *(void **)(v0 - 360);
  uint64_t v2 = *(void **)(v0 - 384);
  outlined consume of ConversationControlsRecipe.View?(v1, v2);
}

uint64_t OUTLINED_FUNCTION_4_127(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_128()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_4_129(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,long long a34)
{
  return (__n128)a34;
}

uint64_t OUTLINED_FUNCTION_4_130()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_11_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?((uint64_t)&STACK[0x260], (uint64_t)&a41, v41);
}

uint64_t OUTLINED_FUNCTION_11_12()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_14()
{
  return swift_storeEnumTagMultiPayload();
}

id OUTLINED_FUNCTION_11_15(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 96), 0.0, 1.0);
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  outlined consume of CallScreening.EndingAction(v0, *(void *)(v1 - 248), *(_DWORD *)(v1 - 240));
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_11_19(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
}

void OUTLINED_FUNCTION_11_20(float a1)
{
  float *v1 = a1;
}

unint64_t OUTLINED_FUNCTION_11_21()
{
  *(void *)(v1 - 192) = *v0;
  void *v0 = 0x8000000000000000;
  return specialized __RawDictionaryStorage.find<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  *(void *)(v1 - 88) = v0;
  return specialized Array._endMutation()();
}

void OUTLINED_FUNCTION_11_25()
{
  void *v0 = 0x8000000000000000;
}

void OUTLINED_FUNCTION_11_27(__int16 a1@<W8>)
{
  uint64_t v4 = *(void *)(v1 + 56) + 6 * v3;
  *(_WORD *)(v4 + 4) = a1;
  *(_DWORD *)uint64_t v4 = v2;
}

uint64_t OUTLINED_FUNCTION_11_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_29()
{
  *(_WORD *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = 4;
  *(unsigned char *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = 0;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_30@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001DLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 96));
}

id OUTLINED_FUNCTION_11_32@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)&v1[a1];
  return objc_msgSend(v1, (SEL)(v2 + 664), v4);
}

void OUTLINED_FUNCTION_11_34(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_11_35()
{
  JUMPOUT(0x1C87733A0);
}

uint64_t OUTLINED_FUNCTION_11_36()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_11_37()
{
  return [v0 (SEL)(v1 + 3864)];
}

id OUTLINED_FUNCTION_11_38()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_11_39(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
}

uint64_t OUTLINED_FUNCTION_48_2(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_40()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

unint64_t OUTLINED_FUNCTION_11_41(unint64_t result, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  *(unsigned char *)(*(void *)(a4 + 48) + result) = a2;
  *(void *)(*(void *)(a4 + 56) + 8 * result) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_42(uint64_t a1)
{
  return a1 + v1;
}

uint64_t OUTLINED_FUNCTION_11_43()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_11_44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, (SEL)(v4 + 917), v5, a4, 64);
}

uint64_t OUTLINED_FUNCTION_11_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_46()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_11_47()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t OUTLINED_FUNCTION_11_50()
{
  return Cache.subscript.getter();
}

double OUTLINED_FUNCTION_11_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_52@<X0>(uint64_t a1@<X8>, double a2@<D1>)
{
  *(double *)(a1 - 256) = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_11_53()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_54()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_11_57()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
  return *(void *)(v1 + 48) + *(void *)(*(void *)(v2 - 232) + 72) * v0;
}

unint64_t OUTLINED_FUNCTION_11_58()
{
  return 0xD000000000000011;
}

uint64_t OUTLINED_FUNCTION_11_61()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_63()
{
  return outlined consume of ConversationControlsRecipe.Actions?(v5, v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_64()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  *(_WORD *)(v1 + 12) = 2080;
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_67()
{
  return *(void *)(v0 + 312);
}

uint64_t OUTLINED_FUNCTION_11_69()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_72()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

id OUTLINED_FUNCTION_11_73()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_11_74()
{
  *(_WORD *)(v1 + 12) = 2082;
  return outlined retain of AnsweringMachineCallStatus(v0);
}

uint64_t OUTLINED_FUNCTION_11_75()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_11_76(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  void *v2 = 0;
  v2[1] = 0;
}

unint64_t OUTLINED_FUNCTION_11_78()
{
  return 0xD000000000000022;
}

uint64_t OUTLINED_FUNCTION_11_79()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t OUTLINED_FUNCTION_11_81()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_11_82()
{
  return swift_beginAccess();
}

__n128 OUTLINED_FUNCTION_11_83(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  return (__n128)a9;
}

__n128 OUTLINED_FUNCTION_11_84()
{
  return v0[2];
}

uint64_t OUTLINED_FUNCTION_11_85(uint64_t a1, void *a2)
{
  return v2 + *a2;
}

id OUTLINED_FUNCTION_65()
{
  return objc_msgSend(v1, (SEL)(v2 + 2459), v0);
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_162()
{
  return v0;
}

void OUTLINED_FUNCTION_65_1()
{
  ControlsButtonProvider.image.setter(v0);
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  return type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
}

id OUTLINED_FUNCTION_65_4(uint64_t a1, const char *a2)
{
  return objc_msgSend(v4, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  return v0;
}

void OUTLINED_FUNCTION_65_7(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_65_8()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void OUTLINED_FUNCTION_65_9()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

void OUTLINED_FUNCTION_65_10()
{
  uint64_t v1 = 0x746365707361202CLL;
  unint64_t v2 = 0xEF203A6F69746152;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_65_11()
{
  return type metadata accessor for InCallControlButton();
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  return v0 - 168;
}

uint64_t OUTLINED_FUNCTION_65_13(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return v3;
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  return dispatch thunk of Hashable.hash(into:)();
}

id OUTLINED_FUNCTION_59_3(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1, 0);
}

uint64_t OUTLINED_FUNCTION_59_5()
{
  return v0;
}

void OUTLINED_FUNCTION_59_7(uint64_t a1@<X8>)
{
  unsigned char *v1 = *(unsigned char *)(v2 + a1);
}

uint64_t OUTLINED_FUNCTION_59_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *Swift::UInt8 v10 = a10;
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_59_10()
{
  return outlined init with copy of Participant.State();
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  *(void *)(v1 - 96) = v0;
  return swift_getKeyPath();
}

void OUTLINED_FUNCTION_59_13(double a1)
{
  *(double *)(v1 + 184) = a1;
}

uint64_t OUTLINED_FUNCTION_59_14()
{
  return swift_task_dealloc();
}

uint64_t type metadata accessor for Participant.State(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant.State);
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  return String.hash(into:)();
}

id OUTLINED_FUNCTION_24_9(id a1, SEL a2, double a3)
{
  return objc_msgSend(a1, a2, a3, a3, a3, 1.0);
}

void OUTLINED_FUNCTION_24_10(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000015;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t OUTLINED_FUNCTION_24_11()
{
  return Publisher<>.sink(receiveValue:)();
}

void OUTLINED_FUNCTION_24_12()
{
  JUMPOUT(0x1C87744F0);
}

uint64_t OUTLINED_FUNCTION_24_14()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t OUTLINED_FUNCTION_24_15(uint64_t result)
{
  *(void *)(v1 - 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_19(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, void *a12)
{
  uint64_t v15 = *(unsigned int *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 24);
  return ConversationControlsPrimaryActionButtonProvider.init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)(a1, v15, a3, 0, 0, v16, v13, v12 + 112, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_24_22(uint64_t a1, ...)
{
  va_start(va, a1);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v1, v2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_24_23()
{
  return v0;
}

void OUTLINED_FUNCTION_24_25()
{
}

void *OUTLINED_FUNCTION_24_26()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_24_27()
{
}

uint64_t OUTLINED_FUNCTION_24_28()
{
  return v0;
}

id OUTLINED_FUNCTION_24_29()
{
  return objc_msgSend(v0, (SEL)(v2 + 1304), v1);
}

void OUTLINED_FUNCTION_24_30(uint64_t (*a1)(id *), uint64_t a2)
{
  specialized Sequence.first(where:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_24_31()
{
  *(_WORD *)(v0 + 12) = 2080;
}

void OUTLINED_FUNCTION_24_32(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_24_34()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_24_35(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(v3, a2);
  return v2;
}

__n128 OUTLINED_FUNCTION_24_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, long long a10)
{
  *(_OWORD *)(v10 + 8) = a10;
  __n128 result = a9;
  *(__n128 *)(v10 + 24) = a9;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_41()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t OUTLINED_FUNCTION_24_42()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = type metadata accessor for CallScreening.MachineStateObserver(0);
  v0[54] = v2;
  v0[55] = *(void *)(v1 + *(int *)(v2 + 24));
  return type metadata accessor for MainActor();
}

void *OUTLINED_FUNCTION_24_43@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return memmove(a1, v2, 8 * a2);
}

uint64_t OUTLINED_FUNCTION_24_44()
{
  return type metadata accessor for UUID();
}

void OUTLINED_FUNCTION_24_45(uint64_t a1@<X8>)
{
  *(void *)(v1 + 296) = a1;
}

uint64_t OUTLINED_FUNCTION_24_46()
{
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[46];
  uint64_t v4 = v0[47];
  uint64_t v5 = v0[48];
  uint64_t v6 = v0[49];
  uint64_t v7 = v0[50];
  unint64_t v8 = v0[51];
  return outlined consume of CallScreening.State(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t OUTLINED_FUNCTION_24_48()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_24_50()
{
  return v0;
}

void *OUTLINED_FUNCTION_24_51()
{
  return closure #1 in variable initialization expression of LocalParticipantControlsView.effectsButton();
}

uint64_t OUTLINED_FUNCTION_24_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_53()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_24_54()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_24_55()
{
  return type metadata accessor for UUID();
}

double OUTLINED_FUNCTION_24_56()
{
  return *(double *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_24_57()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_24_58(uint64_t a1)
{
  *(void *)(v1 + 144) = a1;
  *(void *)(a1 + 16) = 0;
  *(void *)(v2 + 112) = a1;
  return swift_retain();
}

void OUTLINED_FUNCTION_24_59()
{
  unsigned char *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return type metadata accessor for RemoteControlRequest(0);
}

uint64_t OUTLINED_FUNCTION_61_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_61_4()
{
  return Published.init(initialValue:)();
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_61_6(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_61_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_61_9(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_157_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

void OUTLINED_FUNCTION_49_1(void *a1@<X8>)
{
  *a1 = v1;
}

BOOL OUTLINED_FUNCTION_61_11(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_61_13(double a1)
{
  *(double *)(v1 + 176) = a1;
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  return v0;
}

double OUTLINED_FUNCTION_66_4(uint64_t a1, __n128 a2)
{
  *(__n128 *)(a1 + 16) = a2;
  *(void *)(a1 + 32) = 18;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(unsigned char *)(a1 + 72) = 6;
  *(void *)(a1 + 80) = 17;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 6;
  *(void *)(a1 + 128) = 19;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = 6;
  return result;
}

uint64_t OUTLINED_FUNCTION_233()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_66_5()
{
  return outlined init with take of Notice((long long *)(v2 - 184), v1 + 40 * v0 + 32);
}

id OUTLINED_FUNCTION_66_6(uint64_t a1, const char *a2)
{
  return objc_msgSend(v4, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_66_7(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_66_8()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  return specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
}

void OUTLINED_FUNCTION_66_10(double a1)
{
  *(double *)(v1 + 160) = a1;
}

void OUTLINED_FUNCTION_141(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  void *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_141_0()
{
  return type metadata accessor for ReactionNotice(0);
}

uint64_t OUTLINED_FUNCTION_141_1(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_141_3()
{
  return outlined destroy of SystemUpdateNotice?(v1 - 192, v0);
}

void OUTLINED_FUNCTION_141_4(uint64_t a1, uint64_t a2)
{
  closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

uint64_t storeEnumTagSinglePayload for RecentsCallHandle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RecentsCallHandle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RecentsCallHandle()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = *((void *)v0 + 2);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t partial apply for closure #2 in closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return closure #2 in closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter(a1, a2, v3, a3);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

uint64_t block_destroy_helper_76()
{
  return swift_release();
}

uint64_t block_destroy_helper_77()
{
  return swift_release();
}

uint64_t block_destroy_helper_78()
{
  return swift_release();
}

uint64_t block_destroy_helper_79()
{
  return swift_release();
}

uint64_t block_destroy_helper_80()
{
  return swift_release();
}

uint64_t block_destroy_helper_81()
{
  return swift_release();
}

uint64_t block_destroy_helper_82()
{
  return swift_release();
}

uint64_t block_destroy_helper_83()
{
  return swift_release();
}

uint64_t block_destroy_helper_84()
{
  return swift_release();
}

uint64_t block_destroy_helper_85()
{
  return swift_release();
}

uint64_t block_destroy_helper_86()
{
  return swift_release();
}

uint64_t block_destroy_helper_87()
{
  return swift_release();
}

uint64_t block_destroy_helper_88()
{
  return swift_release();
}

uint64_t block_destroy_helper_89()
{
  return swift_release();
}

uint64_t block_destroy_helper_90()
{
  return swift_release();
}

uint64_t block_destroy_helper_91()
{
  return swift_release();
}

uint64_t block_destroy_helper_92()
{
  return swift_release();
}

uint64_t block_destroy_helper_93()
{
  return swift_release();
}

uint64_t block_destroy_helper_94()
{
  return swift_release();
}

uint64_t block_destroy_helper_95()
{
  return swift_release();
}

uint64_t block_destroy_helper_96()
{
  return swift_release();
}

uint64_t block_destroy_helper_97()
{
  return swift_release();
}

uint64_t block_destroy_helper_98()
{
  return swift_release();
}

uint64_t block_destroy_helper_99()
{
  return swift_release();
}

uint64_t block_destroy_helper_100()
{
  return swift_release();
}

uint64_t block_destroy_helper_101()
{
  return swift_release();
}

uint64_t block_destroy_helper_102()
{
  return swift_release();
}

uint64_t block_destroy_helper_103()
{
  return swift_release();
}

uint64_t block_destroy_helper_104()
{
  return swift_release();
}

uint64_t block_destroy_helper_105()
{
  return swift_release();
}

uint64_t block_destroy_helper_106()
{
  return swift_release();
}

uint64_t block_destroy_helper_107()
{
  return swift_release();
}

uint64_t block_destroy_helper_108()
{
  return swift_release();
}

uint64_t block_destroy_helper_109()
{
  return swift_release();
}

uint64_t block_destroy_helper_110()
{
  return swift_release();
}

uint64_t block_destroy_helper_111()
{
  return swift_release();
}

uint64_t block_destroy_helper_112()
{
  return swift_release();
}

uint64_t block_destroy_helper_113()
{
  return swift_release();
}

uint64_t block_destroy_helper_114()
{
  return swift_release();
}

uint64_t block_destroy_helper_115()
{
  return swift_release();
}

uint64_t block_destroy_helper_116()
{
  return swift_release();
}

uint64_t block_destroy_helper_117()
{
  return swift_release();
}

uint64_t block_destroy_helper_118()
{
  return swift_release();
}

uint64_t block_destroy_helper_119()
{
  return swift_release();
}

uint64_t block_destroy_helper_120()
{
  return swift_release();
}

id partial apply for closure #1 in RecentsListViewController.cellProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return closure #1 in RecentsListViewController.cellProvider.getter(a1, a2, a3, v3);
}

void partial apply for closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(UIView *a1, uint64_t a2, uint64_t a3)
{
  closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(a1, a2, a3, v3);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_79(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_81(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_82(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_83(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_85(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_86(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_87(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_89(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_91(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_92(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_93(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_95(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_96(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_97(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_99(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_100(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_101(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_102(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_103(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_104(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_105(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_106(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_107(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_109(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_110(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_111(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_112(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_113(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_114(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_115(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_116(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_117(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_118(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_119(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_120(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t closure #1 in VideoMessageInboxController.updateCallItems()()
{
  OUTLINED_FUNCTION_17_2();
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  OUTLINED_FUNCTION_41_6();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  type metadata accessor for MainActor();
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_39_1();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_28_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_2_2();
  *unint64_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 104) = v3;
  }
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

{
  void *v0;
  uint64_t Strong;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_17_2();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    void *v2 = v0;
    v2[1] = closure #1 in VideoMessageInboxController.updateCallItems();
    return VideoMessageInboxController.getAllMessages()();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    v0[14] = 0;
    v0[15] = v4;
    OUTLINED_FUNCTION_41_6();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    type metadata accessor for MainActor();
    v0[16] = static MainActor.shared.getter();
    OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_39_1();
    return MEMORY[0x1F4188298](v5, v6, v7);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  specialized closure #1 in closure #1 in VideoMessageInboxController.updateCallItems()(v1, v0 + 64);
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t static NameAndPhotoUtilities.prewarm()()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v2 = type metadata accessor for DispatchQoS.QoSClass();
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  uint64_t v8 = v7 - v6;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v7 - v6, *MEMORY[0x1E4FBCB30], v2);
  uint64_t v40 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  uint64_t v38 = type metadata accessor for DispatchTime();
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  v37[0] = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  static DispatchTime.now()();
  uint64_t v14 = type metadata accessor for DispatchTimeInterval();
  OUTLINED_FUNCTION_5_3();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_5_1();
  void *v1 = 1;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v1, *MEMORY[0x1E4FBCAE0], v14);
  DispatchTime.advanced(by:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v1, v14);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v37[1] = v10 + 8;
  uint64_t v39 = v18;
  uint64_t v19 = OUTLINED_FUNCTION_41_0();
  v20(v19);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v0;
  aBlock[4] = partial apply for closure #1 in static NameAndPhotoUtilities.prewarm();
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_100;
  char v22 = _Block_copy(aBlock);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_5_1();
  static DispatchQoS.unspecified.getter();
  uint64_t v27 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_21();
  uint64_t v33 = v32 - v31;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v34 = v37[0];
  uint64_t v35 = (void *)v40;
  MEMORY[0x1C8773B10](v37[0], v1, v33, v22);
  _Block_release(v22);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v27);
  (*(void (**)(void *, uint64_t))(v25 + 8))(v1, v23);
  v39(v34, v38);
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags()
{
  unint64_t result = lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags;
  if (!lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  }
  return result;
}

void RecentsCallItem.extraSubtitleWithDate.getter()
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_110_4();
  if (OUTLINED_FUNCTION_161_2() == 2)
  {
    uint64_t v3 = *v0;
    if (RecentsCallItem.shouldShowDate.getter())
    {
      ConversationLink.extraSubtitleStringWithDate.getter();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = v3;
      swift_bridgeObjectRetain();
      swift_retain();
      ConversationLink.prevailingSuggestion.getter();
      if (v5)
      {
        uint64_t v6 = v5;
        v7.super.isa = (Class)objc_msgSend(self, sel_conversationKit);
        OUTLINED_FUNCTION_19_41(v7);

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1C3769620;
        SGURL.applicationLocalizedName.getter();
        *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v9 = lazy protocol witness table accessor for type String and conformance String();
        OUTLINED_FUNCTION_146_2(v9);
        swift_release_n();
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
  }
  OUTLINED_FUNCTION_28();
}

void RecentsListViewController.collectionView(_:willDisplay:forItemAt:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  if (!objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR___FTRecentsListViewController_featureFlags), sel_increaseCallHistoryEnabled))goto LABEL_12; {
  uint64_t v6 = IndexPath.section.getter();
  }
  if (v6 < 0) {
    goto LABEL_14;
  }
  NSBundle v7 = specialized _copyCollectionToContiguousArray<A>(_:)(0, v6);
  uint64_t v8 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySiG_Sis5NeverOTg50104_s15ConversationKit25RecentsListViewControllerC010collectionE0_11willDisplay9forItemAtySo012UICollectionM46C_So0mE4CellC10Foundation9IndexPathVtFS2iXEfU_So0sJ0CTf1cn_n((uint64_t)v7, v5);
  swift_release();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v2 = 0;
    uint64_t v10 = (uint64_t *)(v8 + 32);
    while (1)
    {
      uint64_t v11 = *v10++;
      BOOL v12 = __OFADD__(v2, v11);
      v2 += v11;
      if (v12) {
        break;
      }
      if (!--v9) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v2 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_15;
  }
LABEL_10:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v13 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  uint64_t v15 = OUTLINED_FUNCTION_8(v14);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_64();
  type metadata accessor for IndexPath();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v16();
  OUTLINED_FUNCTION_144();
  uint64_t v17 = specialized >> prefix<A>(_:)(v1);
  uint64_t v19 = v18;
  uint64_t v20 = OUTLINED_FUNCTION_102();
  outlined destroy of SystemUpdateNotice?(v20, v21);
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v13 + 32) = v17;
  *(void *)(v13 + 40) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v22 = swift_bridgeObjectRelease();
  (*(void (**)(void *__return_ptr, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x1A8))(v24, v22);
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  if (!__OFADD__(IndexPath.item.getter(), v2))
  {
    OUTLINED_FUNCTION_175_0();
    v23();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
LABEL_12:
    OUTLINED_FUNCTION_28();
    return;
  }
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_58_1(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v3 - 136);
  return MEMORY[0x1F41856C0](a1, a2, v2, v5);
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  *(void *)(v1 - 88) = v0;
  return 0;
}

BOOL OUTLINED_FUNCTION_58_4@<W0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)(v2 + a1) == *(unsigned __int8 *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_58_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(_DWORD *)(v4 - 108) = a3;
  *(void *)(v4 - 120) = a2;
  *(void *)(v4 - 200) = a1;
  *(void *)(v4 - 104) = a4;
  return type metadata accessor for Font.Leading();
}

uint64_t OUTLINED_FUNCTION_58_7()
{
  return v0 - 216;
}

uint64_t OUTLINED_FUNCTION_58_8()
{
  return type metadata accessor for AppLaunchNotice(0);
}

uint64_t OUTLINED_FUNCTION_58_9()
{
  return *(void *)(v0 + 168);
}

unint64_t OUTLINED_FUNCTION_58_10()
{
  *(void *)(v1 - 128) = v0;
  *(void *)(v1 - 144) = 0x8000000000000000;
  return specialized __RawDictionaryStorage.find<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_58_11()
{
  return swift_arrayDestroy();
}

void *OUTLINED_FUNCTION_58_12()
{
  return malloc(0x30uLL);
}

double OUTLINED_FUNCTION_58_13()
{
  return 15.0;
}

uint64_t OUTLINED_FUNCTION_58_14()
{
  uint64_t v2 = *(void *)(v0 + 24);
  return __swift_mutable_project_boxed_opaque_existential_1(v0, v2);
}

uint64_t RecentsListViewController.recentCallProvider.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return outlined init with copy of RecentCallProviding & RecentsControllable(v0, v1);
}

uint64_t outlined init with copy of RecentCallProviding & RecentsControllable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_185_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_185_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_248()
{
  return v0;
}

void *specialized _copyCollectionToContiguousArray<A>(_:)(void *result, uint64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = (uint64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
      uint64_t v5 = (void *)OUTLINED_FUNCTION_15_2();
      _swift_stdlib_malloc_size(v5);
      OUTLINED_FUNCTION_40_2();
      v5[2] = v2;
      v5[3] = v6;
    }
    unint64_t result = specialized Sequence._copySequenceContents(initializing:)(v7, v5 + 4, v2, v4, a2);
    if (result == (void *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySiG_Sis5NeverOTg50104_s15ConversationKit25RecentsListViewControllerC010collectionE0_11willDisplay9forItemAtySo012UICollectionM46C_So0mE4CellC10Foundation9IndexPathVtFS2iXEfU_So0sJ0CTf1cn_n(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v5 = v11;
    uint64_t v6 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v6++;
      id v8 = objc_msgSend(a2, sel_numberOfItemsInSection_, v7);
      unint64_t v9 = *(void *)(v11 + 16);
      if (v9 >= *(void *)(v11 + 24) >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v8;
      --v3;
    }
    while (v3);
  }
  else
  {

    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = (void *)OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_25_29();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  uint64_t v6 = (void *)OUTLINED_FUNCTION_24_28();
  return memcpy(v6, v7, v8);
}

{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = (void *)OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_26_24();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  uint64_t v6 = (void *)OUTLINED_FUNCTION_24_28();
  return memcpy(v6, v7, v8);
}

void *specialized Sequence._copySequenceContents(initializing:)(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    uint64_t v5 = a4;
LABEL_7:
    *unint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (void *)a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a5 == a4)
    {
LABEL_5:
      a3 = 0;
      goto LABEL_6;
    }
    if (a5 >= a4)
    {
      if (a5 <= a4)
      {
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t v5 = a5;
        a3 = a5 - a4;
      }
      else
      {
        uint64_t v6 = a3 - 1;
        uint64_t v5 = a4 + 1;
        while (1)
        {
          *a2 = v5 - 1;
          if (!v6) {
            break;
          }
          if (a5 == v5) {
            goto LABEL_18;
          }
          ++a2;
          --v6;
          BOOL v7 = v5 >= a4 && v5 < a5;
          ++v5;
          if (!v7) {
            goto LABEL_17;
          }
        }
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized >> prefix<A>(_:)(uint64_t a1)
{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418BF70], &demangling cache variable for type metadata for IndexPath?);
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for AudioSampleNormalizer?, (void (*)(void *, unsigned char *))outlined init with take of Notice, &demangling cache variable for type metadata for AudioSampleNormalizer);
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  unint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  MEMORY[0x1F4188790](v2 - 8);
  BOOL v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StagedCollaboration(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  size_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v13 - v9;
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v4, &demangling cache variable for type metadata for StagedCollaboration?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for StagedCollaboration?);
    return 7104878;
  }
  else
  {
    outlined init with take of SystemUpdateNotice((uint64_t)v4, (uint64_t)v10, (void (*)(void))type metadata accessor for StagedCollaboration);
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v10, (uint64_t)v8, (void (*)(void))type metadata accessor for StagedCollaboration);
    uint64_t v11 = String.init<A>(reflecting:)();
    outlined destroy of SystemUpdateNotice((uint64_t)v10, (void (*)(void))type metadata accessor for StagedCollaboration);
  }
  return v11;
}

{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418B838], &demangling cache variable for type metadata for URL?);
}

{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418BA10], (uint64_t *)&demangling cache variable for type metadata for Date?);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11[4];
  long long v12;
  uint64_t v13;
  unsigned char v14[48];
  uint64_t v15;

  uint64_t v1 = outlined init with copy of FeatureEligibility?(a1, (uint64_t)v11, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
  if (BYTE8(v12) == 0xFF)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    OUTLINED_FUNCTION_57_0(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11[0], v11[1], v11[2], v11[3], v12);
    uint64_t v15 = v13;
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore));
    String.init<A>(reflecting:)();
    outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore));
  }
  return OUTLINED_FUNCTION_23_0();
}

{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418BCC0], (uint64_t *)&demangling cache variable for type metadata for UUID?);
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for Conversation?, (void (*)(void *, unsigned char *))outlined init with take of Notice, &demangling cache variable for type metadata for Conversation);
}

{
  long long v2[2];
  unsigned __int8 v3;
  _OWORD v4[3];

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v2, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v3 == 255)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v2, &demangling cache variable for type metadata for ConversationControlsType?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    outlined init with take of ConversationControlsType(v2, v4);
    outlined init with copy of ConversationControlsType((uint64_t)v4, (uint64_t)v2);
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of ConversationControlsType((uint64_t)v4);
  }
  return OUTLINED_FUNCTION_23_0();
}

{
  void v2[27];
  unsigned char __dst[216];

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (v2[3] == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    memcpy(__dst, v2, 0xD1uLL);
    outlined init with copy of Participant.ScreenInfo((uint64_t)__dst, (uint64_t)v2);
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of Participant.ScreenInfo((uint64_t)__dst);
  }
  return OUTLINED_FUNCTION_23_0();
}

{
  return specialized >> prefix<A>(_:)(a1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?, (void (*)(void *, unsigned char *))outlined init with take of Notice, &demangling cache variable for type metadata for ParticipantVideoProvider);
}

{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418BE28], &demangling cache variable for type metadata for Locale?);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11[4];
  long long v12;
  unsigned __int8 v13;
  unsigned char v14[64];

  uint64_t v1 = outlined init with copy of FeatureEligibility?(a1, (uint64_t)v11, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v13 == 255)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    OUTLINED_FUNCTION_57_0(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11[0], v11[1], v11[2], v11[3], v12);
    v14[48] = v13;
    outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v14, (uint64_t)v11);
    String.init<A>(reflecting:)();
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v14);
  }
  return OUTLINED_FUNCTION_23_0();
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for Notice?, (void (*)(void *, unsigned char *))outlined init with take of Notice, (uint64_t *)&demangling cache variable for type metadata for Notice);
}

{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418AE68], &demangling cache variable for type metadata for Notification?);
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for PeoplePickerHandle?, (void (*)(void *, unsigned char *))outlined init with take of Notice, &demangling cache variable for type metadata for PeoplePickerHandle);
}

{
  return specialized >> prefix<A>(_:)(a1, MEMORY[0x1F418AF60], (uint64_t *)&demangling cache variable for type metadata for URLComponents?);
}

{
  long long v2;
  uint64_t v3;
  _OWORD v4[2];

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)&v2, &demangling cache variable for type metadata for Any?);
  if (v3)
  {
    outlined init with take of Any(&v2, v4);
    outlined init with copy of Any((uint64_t)v4, (uint64_t)&v2);
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_10_10();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v2, &demangling cache variable for type metadata for Any?);
    OUTLINED_FUNCTION_6_9();
  }
  return OUTLINED_FUNCTION_23_0();
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for ControlMessageReliability?, MEMORY[0x1E4F99D40]);
}

{
  return specialized >> prefix<A>(_:)(a1, (uint64_t *)&demangling cache variable for type metadata for Participant?, MEMORY[0x1E4F294B8]);
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for InteractionState?, MEMORY[0x1E4F99CF8]);
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for RadarReporting?, (void (*)(void *, unsigned char *))outlined init with take of Notice, &demangling cache variable for type metadata for RadarReporting);
}

{
  return specialized >> prefix<A>(_:)(a1, &demangling cache variable for type metadata for FeatureEligibility?, MEMORY[0x1E4F61788]);
}

uint64_t specialized >> prefix<A>(_:)(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v6 = a2(0);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_63();
  outlined init with copy of FeatureEligibility?(a1, v3, a3);
  if (__swift_getEnumTagSinglePayload(v3, 1, v6) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v3, a3);
    return 7104878;
  }
  else
  {
    OUTLINED_FUNCTION_40_1();
    uint64_t v12 = v11();
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_39_3();
    v13();
    uint64_t v10 = String.init<A>(reflecting:)();
    uint64_t v14 = OUTLINED_FUNCTION_23_0();
    v15(v14);
  }
  return v10;
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return _s15ConversationKit11ParticipantVWOcTm_0();
}

uint64_t OUTLINED_FUNCTION_45_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_45_6(uint64_t a1)
{
  *(void *)(a1 + 136) = *(void *)(v1 + 56);
  int v3 = *(_DWORD *)(v1 + 32);
  return ControlsButtonProvider.init(context:shape:)(v3, 2);
}

void *OUTLINED_FUNCTION_45_8@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_45_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_45_10()
{
  return *(void *)(v0 + 80);
}

void OUTLINED_FUNCTION_45_11(uint64_t a1@<X8>)
{
  *(void *)(v2 - 176) = a1;
  *(void *)(v2 - 240) = v1 + 16;
  *(void *)(v2 - 232) = v1;
  *(void *)(v2 - 200) = v1 + 8;
  *(void *)(v2 - 192) = v1 + 32;
}

uint64_t OUTLINED_FUNCTION_45_12()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_45_13()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_45_14(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return outlined init with copy of IDSLookupManager(v2 - 128, v2 - 168);
}

__n128 *OUTLINED_FUNCTION_45_15(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

char *OUTLINED_FUNCTION_45_17()
{
  return MostActiveParticipantViewController.remoteParticipantView.getter();
}

uint64_t OUTLINED_FUNCTION_45_18(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_45_19()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_45_22()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(void *)(v1 - 168));
  return specialized >> prefix<A>(_:)();
}

double OUTLINED_FUNCTION_45_23()
{
  return *(double *)(v0 + 240);
}

uint64_t OUTLINED_FUNCTION_45_24()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_45_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return v0;
}

void OUTLINED_FUNCTION_46_9(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_46_10()
{
  return 0x206572616853;
}

float OUTLINED_FUNCTION_46_13()
{
  return 1.0;
}

uint64_t OUTLINED_FUNCTION_46_14()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_46_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_46_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_19()
{
  return type metadata accessor for UUID();
}

uint64_t (*OUTLINED_FUNCTION_46_21())(uint64_t *a1, char a2)
{
  return ConversationControlsNoticeCoordinator.noticeQueue.modify((uint64_t *)(v0 - 168));
}

uint64_t OUTLINED_FUNCTION_46_22(unint64_t *a1)
{
  return _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_2(a1, v1);
}

char *OUTLINED_FUNCTION_46_23()
{
  return MostActiveParticipantViewController.localParticipantView.getter();
}

uint64_t OUTLINED_FUNCTION_46_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_25()
{
  return outlined destroy of SystemUpdateNotice?(v0 + 192, v1);
}

void OUTLINED_FUNCTION_46_27(double a1)
{
  *(double *)(v1 + 232) = a1;
}

uint64_t OUTLINED_FUNCTION_46_28@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001ALL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void OUTLINED_FUNCTION_84()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_84_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 304) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

BOOL OUTLINED_FUNCTION_84_4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return outlined init with copy of HUDActivityManager.BannerUpdate(v1, v0);
}

uint64_t OUTLINED_FUNCTION_84_8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return __swift_destroy_boxed_opaque_existential_1(v2 - 168);
}

void OUTLINED_FUNCTION_78_4(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t OUTLINED_FUNCTION_78_6(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_78_7(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_78_8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void OUTLINED_FUNCTION_78_9(double a1)
{
  *(double *)(v1 + 88) = a1;
}

void @objc RecentsListViewController.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  type metadata accessor for IndexPath();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_118();
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = v5;
  id v10 = v3;
  id v11 = v7;
  v1();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_139();
  v12();
  OUTLINED_FUNCTION_28();
}

void RecentsListViewController.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  unint64_t v6 = v2;
  uint64_t v8 = v7;
  if (v7 == 0xD00000000000001CLL && v2 == 0x80000001C379AFE0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationKit);
    uint64_t v10 = type metadata accessor for IndexPath();
    OUTLINED_FUNCTION_4();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_5_1();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v5, v10);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = v3;
      uint64_t v17 = v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v25 = (uint64_t)&v25;
      uint64_t v28 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v6, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, MEMORY[0x1F418BF80]);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v21 = OUTLINED_FUNCTION_169();
      v22(v21);
      _os_log_impl(&dword_1C2F90000, v14, v15, "Started displaying SupplementalView of kind %s at index %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      uint64_t v3 = v26;
      OUTLINED_FUNCTION_3();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v23 = OUTLINED_FUNCTION_169();
      v24(v23);
    }

    *(unsigned char *)(v3 + OBJC_IVAR___FTRecentsListViewController_headerViewIsPresented) = 1;
  }
  OUTLINED_FUNCTION_28();
}

uint64_t OUTLINED_FUNCTION_48_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  return 0x6465746361657220;
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

#error "1C2FB4F44: call analysis failed (funcsize=644)"

uint64_t OUTLINED_FUNCTION_69_3()
{
  return v0;
}

void OUTLINED_FUNCTION_69_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_69_7()
{
  return outlined destroy of Participant.ScreenInfo(v0 + 160);
}

void OUTLINED_FUNCTION_69_8(void *a1)
{
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityIdentifier.setter(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_69_9@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(v1 + 72) * v2;
}

void *OUTLINED_FUNCTION_69_10(void *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_1(a1, a2);
}

void OUTLINED_FUNCTION_69_12(double a1)
{
  *(double *)(v1 + 152) = a1;
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  return type metadata accessor for SystemUpdateNotice(0);
}

uint64_t OUTLINED_FUNCTION_52_5()
{
  return type metadata accessor for ParticipantGridView.ParticipantTileInfo(0);
}

id OUTLINED_FUNCTION_52_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v4, v5, 2, a4, v6);
}

uint64_t OUTLINED_FUNCTION_52_7()
{
  uint64_t v7 = (void *)(v2 + *(int *)(*(void *)(v5 - 168) + 44));
  *uint64_t v7 = v0;
  v7[1] = v1;
  return outlined destroy of SystemUpdateNotice?(v4, v3);
}

uint64_t OUTLINED_FUNCTION_52_9()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_52_10(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

void OUTLINED_FUNCTION_52_12()
{
  Hasher._combine(_:)(1u);
}

void OUTLINED_FUNCTION_52_15(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000046;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t OUTLINED_FUNCTION_52_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_17()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

void OUTLINED_FUNCTION_52_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(a12 + 16) = v13;
  *(void *)(a12 + 8 * v14 + 32) = v12;
}

void OUTLINED_FUNCTION_52_21(double a1)
{
  *(double *)(v1 + 208) = a1;
}

void Dictionary.subscript.modifyspecialized (void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_31_35();
  v3(v2);
  free(v1);
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  *(void *)(v1 - 104) = v0;
  return swift_slowAlloc();
}

id OUTLINED_FUNCTION_29_8()
{
  unint64_t v3 = *(const char **)(v1 + 3808);
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return outlined destroy of CaptionSectioner.Caption();
}

uint64_t OUTLINED_FUNCTION_29_11()
{
  *(void *)(v1 - 136) = v0;
  return swift_getKeyPath();
}

void OUTLINED_FUNCTION_29_12(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_29_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 88) = (char *)&a9 - v9;
}

id OUTLINED_FUNCTION_29_14()
{
  return [v0 (SEL)(v1 + 3080)];
}

uint64_t OUTLINED_FUNCTION_29_16()
{
  return type metadata accessor for Logger();
}

void *OUTLINED_FUNCTION_29_18@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *unint64_t result = *(void *)(v2 + a2);
  return result;
}

id OUTLINED_FUNCTION_29_19()
{
  return objc_msgSend(v0, (SEL)(v1 + 775), v2, -16.0);
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_21()
{
  return swift_isEscapingClosureAtFileLocation();
}

uint64_t OUTLINED_FUNCTION_29_22(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_29_23()
{
  return swift_unknownObjectWeakInit();
}

unint64_t OUTLINED_FUNCTION_29_24(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_25(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_188@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

void OUTLINED_FUNCTION_29_28(float a1)
{
  float *v1 = a1;
}

unint64_t OUTLINED_FUNCTION_29_30()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_29_31(uint64_t result)
{
  *(void *)(v1 + 528) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_32()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_33()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_29_35()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_29_36()
{
  return static DispatchQoS.unspecified.getter();
}

id OUTLINED_FUNCTION_29_37(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

double OUTLINED_FUNCTION_29_39@<D0>(uint64_t a1@<X8>)
{
  return *(double *)a1;
}

uint64_t OUTLINED_FUNCTION_29_40(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t (*specialized Dictionary.subscript.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_21_52();
  void *v1 = v2;
  v2[4] = specialized Dictionary._Variant.subscript.modify(v2, v0);
  return Dictionary.subscript.modifyspecialized ;
}

{
  uint64_t v0;
  void *v1;
  void *v2;

  uint64_t v2 = OUTLINED_FUNCTION_21_52();
  void *v1 = v2;
  v2[4] = specialized Dictionary._Variant.subscript.modify(v2, v0);
  return Dictionary.subscript.modifyspecialized ;
}

{
  char v0;
  void *v1;
  void *v2;

  uint64_t v2 = OUTLINED_FUNCTION_21_52();
  void *v1 = v2;
  v2[4] = specialized Dictionary._Variant.subscript.modify(v2, v0 & 1);
  return Dictionary.subscript.modifyspecialized ;
}

id OUTLINED_FUNCTION_17_10()
{
  return [v0 (SEL)(v1 + 2072)];
}

void OUTLINED_FUNCTION_17_11()
{
  uint64_t v1 = 0x707954706174202CLL;
  unint64_t v2 = 0xEB00000000203A65;
  String.append(_:)(*(Swift::String *)&v1);
}

id OUTLINED_FUNCTION_17_13(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1.0, 1.0, 1.0, 1.0);
}

uint64_t OUTLINED_FUNCTION_17_14(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
}

uint64_t OUTLINED_FUNCTION_17_16(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_17_17(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_17_18()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_17_20(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_17_21(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  return 0x676E696E696F4ALL;
}

uint64_t OUTLINED_FUNCTION_17_24()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_17_25()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_17_27()
{
  ControlsButtonProvider.button.setter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_17_28()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_17_30(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_33(float a1)
{
  float *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_35(uint64_t a1)
{
  return specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(a1, 1);
}

unint64_t OUTLINED_FUNCTION_17_36(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  *(void *)(*(void *)(a4 + 48) + 8 * result) = a2;
  return result;
}

void OUTLINED_FUNCTION_17_37()
{
  outlined consume of CallDisplayInfo(v1, v0, 1);
}

void OUTLINED_FUNCTION_17_38(Swift::String a1)
{
  String.append(_:)(a1);
}

void OUTLINED_FUNCTION_17_40()
{
  *(void *)(v2 - 72) = v0;
  *(void *)(v2 - 104) = *(void *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_17_41(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_17_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_44()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_45()
{
  outlined init with take of Any(v0, v1);
  outlined init with take of Any(v1, (_OWORD *)(v2 - 128));
  return v2 - 128;
}

uint64_t OUTLINED_FUNCTION_17_48()
{
  return static PlatformAlert.create(with:message:)(v0, v1, v2, v3);
}

void OUTLINED_FUNCTION_17_49()
{
  uint64_t v4 = v1 + *(int *)(v3 + 28);
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = v2;
  *(unsigned char *)(v4 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_17_51()
{
  return BannerPresentationManager.presentBanner(as:type:reply:)();
}

void *OUTLINED_FUNCTION_17_52()
{
  return malloc(0x40uLL);
}

uint64_t OUTLINED_FUNCTION_17_54()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_55()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

id OUTLINED_FUNCTION_17_56(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v3, v4, v5, v6);
}

id OUTLINED_FUNCTION_17_57()
{
  *(void *)(v0 + 48) = v1;
  uint64_t v2 = MostActiveParticipantViewController.localParticipantView.getter();
  return objc_msgSend(v2, sel_centerYAnchor);
}

uint64_t OUTLINED_FUNCTION_17_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_60@<X0>(uint64_t a1@<X5>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = *a2;
  return outlined copy of ConversationControlsRecipe.Actions(v7, v5, v6, v3, v4, a1);
}

id OUTLINED_FUNCTION_17_61()
{
  return objc_msgSend(v0, (SEL)(v1 + 2328), v3, v4, v5, v5);
}

uint64_t OUTLINED_FUNCTION_17_62(void *a1)
{
  a1[2] = v3;
  a1[3] = v1;
  a1[4] = v4;
  a1[5] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_17_63()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

double OUTLINED_FUNCTION_17_64()
{
  return 4.0;
}

uint64_t OUTLINED_FUNCTION_17_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_67()
{
  return swift_getObjectType();
}

void Dictionary._Variant.subscript.modifyspecialized (uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  uint64_t v3 = OUTLINED_FUNCTION_31_35();
  v2(v3);
  free(v1);
}

uint64_t _NativeDictionary.subscript.modifyspecialized (uint64_t result)
{
  if (*(void *)result)
  {
    if (*(unsigned char *)(result + 25))
    {
      *(void *)(*(void *)(**(void **)(result + 8) + 56) + 8 * *(void *)(result + 16)) = *(void *)result;
    }
    else
    {
      uint64_t v1 = *(unsigned __int8 *)(result + 24);
      uint64_t v2 = *(void *)(result + 16);
      return specialized _NativeDictionary._insert(at:key:value:)(v2, v1);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [RecentsCollectionViewSectionable]);
    lazy protocol witness table accessor for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection();
    OUTLINED_FUNCTION_28_43();
    return _NativeDictionary._delete(at:)();
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t vars8;

  if (*(void *)result)
  {
    if (*(unsigned char *)(result + 25))
    {
      *(void *)(*(void *)(**(void **)(result + 8) + 56) + 8 * *(void *)(result + 16)) = *(void *)result;
    }
    else
    {
      uint64_t v1 = *(unsigned char *)(result + 24) & 1;
      uint64_t v2 = *(void *)(result + 16);
      return specialized _NativeDictionary._insert(at:key:value:)(v2, v1);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application]);
    lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
    OUTLINED_FUNCTION_28_43();
    return _NativeDictionary._delete(at:)();
  }
  return result;
}

uint64_t (*specialized Dictionary._Variant.subscript.modify(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = specialized Dictionary._Variant.asNative.modify(v4);
  v4[9] = specialized _NativeDictionary.subscript.modify((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return Dictionary._Variant.subscript.modifyspecialized ;
}

{
  void *v4;
  char isUniquelyReferenced_nonNull_native;

  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = specialized Dictionary._Variant.asNative.modify(v4);
  v4[9] = specialized _NativeDictionary.subscript.modify(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return Dictionary._Variant.subscript.modifyspecialized ;
}

uint64_t (*specialized Dictionary._Variant.asNative.modify(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return Dictionary._Variant.asNative.modifyspecialized ;
}

uint64_t Dictionary._Variant.asNative.modifyspecialized (uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_56_4(uint64_t result)
{
  *(void *)(v4 - 104) = result;
  *(void *)(v4 - 96) = v2;
  *(void *)(v4 - 128) = v3;
  *(void *)(v4 - 88) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_56_6()
{
  return objectdestroy_88Tm();
}

uint64_t OUTLINED_FUNCTION_56_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_15()
{
  __swift_destroy_boxed_opaque_existential_1(v2 - 168);
  *(_WORD *)(v1 + 12) = 2080;
  *(void *)(v0 + 16) = v1 + 14;
  return type metadata accessor for UUID();
}

void OUTLINED_FUNCTION_56_16(double a1)
{
  *(double *)(v1 + 192) = a1;
}

BOOL RecentsCallItem.isOngoing.getter()
{
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_110_4();
  BOOL v2 = OUTLINED_FUNCTION_161_2() == 1;
  _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
  return v2;
}

uint64_t OUTLINED_FUNCTION_147_2(uint64_t result)
{
  *(void *)(v1 + 152) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_205_0()
{
  return v0;
}

void *OUTLINED_FUNCTION_147_3()
{
  return memcpy((void *)(v0 + 8), v1, 0x150uLL);
}

uint64_t OUTLINED_FUNCTION_147_4()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t outlined destroy of OS_dispatch_queue.SchedulerOptions?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  v4(v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return outlined init with copy of IDSLookupManager(v0 - 168, v0 - 208);
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

BOOL OUTLINED_FUNCTION_49_6@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_49_8@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v1 + a1, 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_49_10()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_49_13()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_49_15()
{
  _StringGuts.grow(_:)(72);
}

uint64_t OUTLINED_FUNCTION_49_16(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_49_18()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_49_19@<X0>(uint64_t a1@<X8>)
{
  return v5 | v4 | v3 | v2 | v1 | a1;
}

double OUTLINED_FUNCTION_49_20()
{
  return *(double *)(v0 + 224);
}

void specialized Array.init<A>(_:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  if ((v2 & 1) == 0) {
    goto LABEL_2;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (__OFSUB__(v3 >> 1, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (v3 >> 1) - v5)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v1(v9, v7, v5, v3);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_9:
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_15_0();
}

{
  specialized Array.init<A>(_:)();
}

{
  specialized Array.init<A>(_:)();
}

{
  specialized Array.init<A>(_:)();
}

void specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCollectionViewSection>);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
    }
    if (v4 != a3)
    {
      specialized UnsafeMutablePointer.initialize(from:count:)(a2 + a3, v5, v8 + 4);
      return;
    }
    goto LABEL_10;
  }
}

{
  specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>, type metadata accessor for Participant, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<CaptionSectioner.Caption>, type metadata accessor for CaptionSectioner.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>, type metadata accessor for Participant.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

void *specialized UnsafeMutablePointer.initialize(from:count:)()
{
  OUTLINED_FUNCTION_20_33();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    unint64_t result = (void *)OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  if (&v2[v1] > v0 && &v0[v1] > v2)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return memcpy(v2, v0, v1);
}

void specialized MutableCollection.subscript.getter(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) < a1)
  {
    __break(1u);
  }
  else if ((a1 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_49_9();
    return;
  }
  __break(1u);
}

{
  if (*(void *)(a2 + 16) < a1)
  {
    __break(1u);
  }
  else if ((a1 & 0x8000000000000000) == 0)
  {
    type metadata accessor for CaptionSectioner.Caption(0);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_49_9();
    return;
  }
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return type metadata accessor for SessionActionNotice(0);
}

void OUTLINED_FUNCTION_53_3()
{
  JUMPOUT(0x1C87744F0);
}

uint64_t OUTLINED_FUNCTION_53_4@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v1 + a1, 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_53_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_53_6()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t OUTLINED_FUNCTION_100()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_7(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_8()
{
  return swift_continuation_init();
}

void OUTLINED_FUNCTION_53_10()
{
  Hasher._combine(_:)(0);
}

unint64_t OUTLINED_FUNCTION_53_11()
{
  *(void *)(v1 - 128) = v0;
  *(void *)(v1 - 144) = 0x8000000000000000;
  return specialized __RawDictionaryStorage.find<A>(_:)();
}

void OUTLINED_FUNCTION_53_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(a1, a2, a3, a4, 0, 0, 1, v23, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
}

double OUTLINED_FUNCTION_53_18()
{
  return *(double *)(v0 + 208);
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_4()
{
  return swift_allocObject();
}

BOOL OUTLINED_FUNCTION_73_7(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_73_8()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_73_9()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

double OUTLINED_FUNCTION_73_10()
{
  return *(double *)(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_4(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  uint64_t v7 = (void *)(v4 + *(int *)(*(void *)(v5 - 216) + 44));
  *uint64_t v7 = v0;
  v7[1] = v1;
  return outlined destroy of SystemUpdateNotice?(v3, v2);
}

uint64_t OUTLINED_FUNCTION_55_8(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

id OUTLINED_FUNCTION_55_9(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, float a9, uint64_t a10)
{
  *uint64_t v10 = a9;
  *(void *)(v11 + 144) = v12;
  return v12;
}

void OUTLINED_FUNCTION_55_10()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

void OUTLINED_FUNCTION_55_11()
{
  *(unsigned char *)(v0 + 56) = 4;
}

uint64_t OUTLINED_FUNCTION_55_12()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_55_14()
{
  return type metadata accessor for Participant(0);
}

uint64_t OUTLINED_FUNCTION_55_16()
{
  return *(void *)(v0 - 344);
}

id OUTLINED_FUNCTION_55_17()
{
  return [v0 (SEL)(v1 + 1944)];
}

double OUTLINED_FUNCTION_55_18()
{
  return *(double *)(v0 + 200);
}

unint64_t lazy protocol witness table accessor for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection()
{
  unint64_t result = lazy protocol witness table cache variable for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection;
  if (!lazy protocol witness table cache variable for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection;
  if (!lazy protocol witness table cache variable for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection);
  }
  return result;
}

void OUTLINED_FUNCTION_70_0()
{
  uint64_t v3 = *(void *)(v0 + 24);
  ControlsButtonProvider.title.setter(v3, v1);
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_70_2(uint64_t a1)
{
  return MEMORY[0x1F40E6788](v1, a1, 0);
}

uint64_t OUTLINED_FUNCTION_70_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return outlined init with copy of IDSLookupManager(v0, v1 - 88);
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_112()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_70_7()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t OUTLINED_FUNCTION_70_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_70_9()
{
  return v0;
}

double OUTLINED_FUNCTION_70_10()
{
  return *(double *)(v0 + 48);
}

uint64_t specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_148;
  }
  uint64_t v5 = result;
  v181 = a1;
  uint64_t v177 = v1;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  uint64_t v168 = result;
  unint64_t v176 = v6;
  uint64_t v169 = v3;
  if (v3 <= 0)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    unint64_t v109 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v109 >= 2)
    {
      uint64_t v159 = *v181;
      while (1)
      {
        unint64_t v160 = v109 - 2;
        if (v109 < 2) {
          break;
        }
        if (!v159) {
          goto LABEL_157;
        }
        uint64_t v161 = *(void *)(v8 + 32 + 16 * v160);
        uint64_t v162 = *(void *)(v8 + 32 + 16 * (v109 - 1) + 8);
        uint64_t v163 = v177;
        uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)(v159 + 40 * v161, v159 + 40 * *(void *)(v8 + 32 + 16 * (v109 - 1)), v159 + 40 * v162, v176);
        uint64_t v177 = v163;
        if (v163) {
          goto LABEL_122;
        }
        if (v162 < v161) {
          goto LABEL_143;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v8);
          uint64_t v8 = result;
        }
        if (v160 >= *(void *)(v8 + 16)) {
          goto LABEL_144;
        }
        v164 = (void *)(v8 + 32 + 16 * v160);
        void *v164 = v161;
        v164[1] = v162;
        unint64_t v165 = *(void *)(v8 + 16);
        if (v109 > v165) {
          goto LABEL_145;
        }
        uint64_t result = (uint64_t)memmove((void *)(v8 + 32 + 16 * (v109 - 1)), (const void *)(v8 + 32 + 16 * v109), 16 * (v165 - v109));
        *(void *)(v8 + 16) = v165 - 1;
        unint64_t v109 = v165 - 1;
        if (v165 <= 2) {
          goto LABEL_124;
        }
      }
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
      goto LABEL_150;
    }
LABEL_124:
    uint64_t result = swift_bridgeObjectRelease();
    if (v169 >= -1)
    {
      *(void *)(v168 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    return result;
  }
  uint64_t v167 = v5;
  int64_t v7 = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  Swift::Int v9 = v3;
  while (2)
  {
    int64_t v10 = v7 + 1;
    uint64_t v170 = -40;
    uint64_t v173 = v8;
    int64_t v175 = v7;
    if (v7 + 1 >= v9) {
      goto LABEL_32;
    }
    int64_t v183 = v9;
    uint64_t v11 = *v181;
    outlined init with copy of IDSLookupManager(*v181 + 40 * v10, (uint64_t)&v196);
    int64_t v172 = v11;
    outlined init with copy of IDSLookupManager(v11 + 40 * v7, (uint64_t)v193);
    uint64_t v184 = type metadata accessor for Date();
    v191 = (char *)&v166;
    v192 = *(void **)(v184 - 8);
    uint64_t v12 = (void *)v192[8];
    MEMORY[0x1F4188790](v184);
    v185 = (char *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v13 = (char **)((char *)&v166 - v185);
    uint64_t v14 = v197;
    uint64_t v15 = v198;
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(&v196, v197);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v199 = &v166;
    int64_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
    MEMORY[0x1F4188790](v17 - 8);
    int64_t v182 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = (char *)&v166 - v182;
    unint64_t v20 = *(void (**)(uint64_t *, uint64_t))(v15 + 8);
    uint64_t v187 = v15 + 8;
    v188 = v16;
    v190 = (uint64_t *)v14;
    uint64_t v21 = v14;
    uint64_t v22 = v15;
    uint64_t v23 = v184;
    v186 = v20;
    v20((uint64_t *)v21, v22);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v23);
    v179 = v12;
    int64_t v189 = v18;
    if (EnumTagSinglePayload == 1)
    {
      uint64_t v25 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for Date?);
      Swift::Int v9 = v183;
      uint64_t v26 = v12;
    }
    else
    {
      uint64_t v27 = (uint64_t (*)(void))v192[4];
      v178 = v13;
      v180 = v27;
      uint64_t v28 = v27();
      v199 = &v166;
      MEMORY[0x1F4188790](v28);
      uint64_t v29 = (char *)((char *)&v166 - v185);
      uint64_t v30 = v194;
      uint64_t v31 = v195;
      uint64_t v32 = __swift_project_boxed_opaque_existential_1(v193, v194);
      MEMORY[0x1F4188790](v32);
      uint64_t v33 = (char *)&v166 - v182;
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
      if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v23) != 1)
      {
        ((void (*)(char *, char *, uint64_t))v180)(v29, v33, v23);
        uint64_t v37 = v178;
        LODWORD(v180) = static Date.> infix(_:_:)();
        uint64_t v38 = v192;
        uint64_t v39 = (void (*)(char *, uint64_t))v192[1];
        v39(v29, v23);
        v39((char *)v37, v23);
        uint64_t v8 = v173;
        Swift::Int v9 = v183;
        uint64_t v26 = v179;
        uint64_t v36 = v38;
        goto LABEL_11;
      }
      ((void (*)(char **, uint64_t))v192[1])(v178, v23);
      uint64_t v25 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for Date?);
      uint64_t v8 = v173;
      Swift::Int v9 = v183;
      uint64_t v26 = v179;
    }
    MEMORY[0x1F4188790](v25);
    uint64_t v35 = (char *)&v166 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    v186(v190, v22);
    LODWORD(v180) = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v184) != 1;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v36 = v192;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v193);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
    int64_t v7 = v175;
    int64_t v10 = v175 + 2;
    if (v175 + 2 >= v9) {
      goto LABEL_23;
    }
    v178 = (char **)(v36 + 4);
    uint64_t v171 = (void (**)(char *, uint64_t))(v36 + 1);
    uint64_t v40 = v172 + 40 * v175 + 40;
    int64_t v41 = v189;
    do
    {
      outlined init with copy of IDSLookupManager(v40 + 40, (uint64_t)&v196);
      v190 = (uint64_t *)v40;
      uint64_t v42 = outlined init with copy of IDSLookupManager(v40, (uint64_t)v193);
      v199 = &v166;
      MEMORY[0x1F4188790](v42);
      unint64_t v43 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0;
      v192 = (uint64_t *)((char *)&v166 - v43);
      uint64_t v45 = v197;
      uint64_t v44 = v198;
      uint64_t v46 = __swift_project_boxed_opaque_existential_1(&v196, v197);
      v191 = (char *)&v166;
      uint64_t v47 = MEMORY[0x1F4188790](v46);
      unint64_t v48 = (v41 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v49 = *(char **)(v44 + 8);
      v186 = (void (*)(uint64_t *, uint64_t))v47;
      uint64_t v187 = v44;
      v188 = (void *)v45;
      v185 = v49;
      ((void (*)(uint64_t, uint64_t))v49)(v45, v44);
      uint64_t v50 = v184;
      int v51 = __swift_getEnumTagSinglePayload((uint64_t)&v166 - v48, 1, v184);
      int64_t v182 = v10;
      if (v51 == 1)
      {
        uint64_t v52 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v166 - v48, (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_17:
        int64_t v41 = v189;
        MEMORY[0x1F4188790](v52);
        ((void (*)(void *, uint64_t))v185)(v188, v187);
        int v58 = __swift_getEnumTagSinglePayload((uint64_t)&v166 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v50) != 1;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v166 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for Date?);
        goto LABEL_19;
      }
      v174 = *v178;
      uint64_t v53 = ((uint64_t (*)(void *, char *, uint64_t))v174)(v192, (char *)&v166 - v48, v50);
      MEMORY[0x1F4188790](v53);
      uint64_t v54 = (char *)&v166 - v43;
      uint64_t v56 = v194;
      uint64_t v55 = v195;
      uint64_t v57 = __swift_project_boxed_opaque_existential_1(v193, v194);
      v191 = (char *)&v166;
      MEMORY[0x1F4188790](v57);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v55);
      if (__swift_getEnumTagSinglePayload((uint64_t)&v166 - v48, 1, v50) == 1)
      {
        (*v171)((char *)v192, v50);
        uint64_t v52 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v166 - v48, (uint64_t *)&demangling cache variable for type metadata for Date?);
        goto LABEL_17;
      }
      ((void (*)(char *, char *, uint64_t))v174)(v54, (char *)&v166 - v48, v50);
      uint64_t v59 = v192;
      int v58 = static Date.> infix(_:_:)();
      uint64_t v60 = *v171;
      (*v171)(v54, v50);
      v60((char *)v59, v50);
      int64_t v41 = v189;
LABEL_19:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v193);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
      uint64_t v8 = v173;
      int64_t v10 = v182;
      Swift::Int v9 = v183;
      uint64_t v26 = v179;
      if ((v180 ^ v58)) {
        goto LABEL_22;
      }
      int64_t v10 = v182 + 1;
      uint64_t v40 = (uint64_t)(v190 + 5);
    }
    while (v182 + 1 < v183);
    int64_t v10 = v183;
LABEL_22:
    int64_t v7 = v175;
LABEL_23:
    if (v180)
    {
      if (v10 >= v7)
      {
        if (v7 < v10)
        {
          int64_t v61 = v10;
          uint64_t v62 = v170 + 40 * v10;
          uint64_t v63 = 40 * v7;
          int64_t v64 = v61;
          int64_t v65 = v7;
          do
          {
            if (v65 != --v61)
            {
              if (!v172) {
                goto LABEL_156;
              }
              int64_t v66 = v172 + v63;
              uint64_t v67 = v172 + v62;
              outlined init with take of Notice((long long *)(v172 + v63), (uint64_t)&v196);
              uint64_t v68 = *(void *)(v67 + 32);
              long long v69 = *(_OWORD *)(v67 + 16);
              *(_OWORD *)int64_t v66 = *(_OWORD *)v67;
              *(_OWORD *)(v66 + 16) = v69;
              *(void *)(v66 + 32) = v68;
              uint64_t result = outlined init with take of Notice(&v196, v67);
              int64_t v7 = v175;
            }
            ++v65;
            v62 -= 40;
            v63 += 40;
          }
          while (v65 < v61);
          int64_t v10 = v64;
          Swift::Int v9 = v183;
        }
        goto LABEL_32;
      }
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
      goto LABEL_152;
    }
LABEL_32:
    if (v10 >= v9) {
      goto LABEL_56;
    }
    if (__OFSUB__(v10, v7)) {
      goto LABEL_147;
    }
    if (v10 - v7 >= v167) {
      goto LABEL_56;
    }
    if (__OFADD__(v7, v167)) {
      goto LABEL_151;
    }
    if (v7 + v167 >= v9) {
      Swift::Int v70 = v9;
    }
    else {
      Swift::Int v70 = v7 + v167;
    }
    if (v70 < v7)
    {
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    if (v10 == v70) {
      goto LABEL_56;
    }
    uint64_t v71 = (char *)(v170 + 40 * v10);
    uint64_t v72 = v181;
    char v73 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    int64_t v172 = v70;
    while (2)
    {
      v174 = v71;
      char v74 = v71;
      int64_t v182 = v10;
      while (2)
      {
        v188 = v74;
        int64_t v189 = v7;
        uint64_t v75 = (uint64_t)v74 + *v72;
        outlined init with copy of IDSLookupManager(v75 + 40, (uint64_t)&v196);
        outlined init with copy of IDSLookupManager(v75, (uint64_t)v193);
        uint64_t v76 = type metadata accessor for Date();
        v199 = &v166;
        v192 = *(void **)(v76 - 8);
        uint64_t v77 = v192[8];
        MEMORY[0x1F4188790](v76);
        uint64_t v184 = (v77 + 15) & 0xFFFFFFFFFFFFFFF0;
        v191 = (char *)&v166 - v184;
        uint64_t v79 = v197;
        uint64_t v78 = v198;
        uint64_t v80 = (void (*)(uint64_t *, uint64_t))__swift_project_boxed_opaque_existential_1(&v196, v197);
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(v73);
        v190 = &v166;
        uint64_t v82 = *(void *)(*(void *)(v81 - 8) + 64);
        MEMORY[0x1F4188790](v81 - 8);
        uint64_t v83 = v73;
        int64_t v183 = (v82 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v84 = (char *)&v166 - v183;
        uint64_t v85 = *(char **)(v78 + 8);
        v186 = v80;
        uint64_t v187 = v79;
        uint64_t v86 = v79;
        uint64_t v87 = (uint64_t (*)(void))v78;
        v185 = v85;
        ((void (*)(uint64_t, uint64_t))v85)(v86, v78);
        if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v76) == 1)
        {
          uint64_t v88 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v84, v83);
          uint64_t v72 = v181;
          char v73 = v83;
LABEL_47:
          MEMORY[0x1F4188790](v88);
          uint64_t v97 = (char *)&v166 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
          ((void (*)(uint64_t, uint64_t (*)(void)))v185)(v187, v87);
          int v98 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v76);
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v97, v73);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v193);
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
          if (v98 == 1) {
            break;
          }
          goto LABEL_50;
        }
        v180 = (uint64_t (*)(void))v78;
        uint64_t v89 = (char **)v192[4];
        v179 = v192 + 4;
        v178 = v89;
        uint64_t v90 = ((uint64_t (*)(char *, char *, uint64_t))v89)(v191, v84, v76);
        MEMORY[0x1F4188790](v90);
        uint64_t v91 = (char *)&v166 - v184;
        uint64_t v93 = v194;
        uint64_t v92 = v195;
        char v94 = __swift_project_boxed_opaque_existential_1(v193, v194);
        v190 = &v166;
        MEMORY[0x1F4188790](v94);
        uint64_t v95 = (char *)&v166 - v183;
        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v92);
        if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v76) == 1)
        {
          ((void (*)(char *, uint64_t))v192[1])(v191, v76);
          uint64_t v96 = (uint64_t)v95;
          char v73 = (uint64_t *)&demangling cache variable for type metadata for Date?;
          uint64_t v88 = outlined destroy of OS_dispatch_queue.SchedulerOptions?(v96, (uint64_t *)&demangling cache variable for type metadata for Date?);
          uint64_t v72 = v181;
          uint64_t v87 = v180;
          goto LABEL_47;
        }
        ((void (*)(char *, char *, uint64_t))v178)(v91, v95, v76);
        unsigned int v99 = v191;
        char v100 = static Date.> infix(_:_:)();
        uint64_t v101 = (void (*)(char *, uint64_t))v192[1];
        v101(v91, v76);
        v101(v99, v76);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v193);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
        uint64_t v72 = v181;
        char v73 = (uint64_t *)&demangling cache variable for type metadata for Date?;
        if (v100)
        {
LABEL_50:
          uint64_t v102 = *v72;
          int64_t v103 = v182;
          if (!*v72) {
            goto LABEL_154;
          }
          uint64_t v104 = v188;
          uint64_t v105 = (uint64_t)v188 + v102;
          outlined init with take of Notice((long long *)((char *)v188 + v102 + 40), (uint64_t)&v196);
          long long v106 = *(_OWORD *)(v105 + 16);
          *(_OWORD *)(v105 + 40) = *(_OWORD *)v105;
          *(_OWORD *)(v105 + 56) = v106;
          *(void *)(v105 + 72) = *(void *)(v105 + 32);
          uint64_t result = outlined init with take of Notice(&v196, v105);
          char v74 = v104 - 5;
          int64_t v7 = v189 + 1;
          if (v103 == v189 + 1) {
            goto LABEL_54;
          }
          continue;
        }
        break;
      }
      int64_t v103 = v182;
LABEL_54:
      int64_t v10 = v103 + 1;
      uint64_t v71 = v174 + 40;
      int64_t v7 = v175;
      if (v10 != v172) {
        continue;
      }
      break;
    }
    int64_t v10 = v172;
    uint64_t v8 = v173;
LABEL_56:
    if (v10 < v7) {
      goto LABEL_146;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v108 = *(void *)(v8 + 16);
    unint64_t v107 = *(void *)(v8 + 24);
    unint64_t v109 = v108 + 1;
    int64_t v182 = v10;
    if (v108 >= v107 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v107 > 1), v108 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v109;
    uint64_t v110 = v8 + 32;
    uint64_t v111 = (int64_t *)(v8 + 32 + 16 * v108);
    int64_t v112 = v182;
    int64_t *v111 = v175;
    v111[1] = v112;
    if (!v108)
    {
      unint64_t v109 = 1;
LABEL_104:
      Swift::Int v9 = v181[1];
      int64_t v7 = v182;
      if (v182 >= v9) {
        goto LABEL_110;
      }
      continue;
    }
    break;
  }
  while (1)
  {
    unint64_t v113 = v109 - 1;
    if (v109 >= 4)
    {
      unint64_t v118 = v110 + 16 * v109;
      uint64_t v119 = *(void *)(v118 - 64);
      uint64_t v120 = *(void *)(v118 - 56);
      BOOL v124 = __OFSUB__(v120, v119);
      uint64_t v121 = v120 - v119;
      if (v124) {
        goto LABEL_131;
      }
      uint64_t v123 = *(void *)(v118 - 48);
      uint64_t v122 = *(void *)(v118 - 40);
      BOOL v124 = __OFSUB__(v122, v123);
      uint64_t v116 = v122 - v123;
      char v117 = v124;
      if (v124) {
        goto LABEL_132;
      }
      unint64_t v125 = v109 - 2;
      uint64_t v126 = (uint64_t *)(v110 + 16 * (v109 - 2));
      uint64_t v128 = *v126;
      uint64_t v127 = v126[1];
      BOOL v124 = __OFSUB__(v127, v128);
      uint64_t v129 = v127 - v128;
      if (v124) {
        goto LABEL_133;
      }
      BOOL v124 = __OFADD__(v116, v129);
      uint64_t v130 = v116 + v129;
      if (v124) {
        goto LABEL_135;
      }
      if (v130 >= v121)
      {
        uint64_t v148 = (uint64_t *)(v110 + 16 * v113);
        uint64_t v150 = *v148;
        uint64_t v149 = v148[1];
        BOOL v124 = __OFSUB__(v149, v150);
        uint64_t v151 = v149 - v150;
        if (v124) {
          goto LABEL_141;
        }
        BOOL v141 = v116 < v151;
        goto LABEL_93;
      }
    }
    else
    {
      if (v109 != 3)
      {
        uint64_t v142 = *(void *)(v8 + 32);
        uint64_t v143 = *(void *)(v8 + 40);
        BOOL v124 = __OFSUB__(v143, v142);
        uint64_t v135 = v143 - v142;
        char v136 = v124;
        goto LABEL_87;
      }
      uint64_t v115 = *(void *)(v8 + 32);
      uint64_t v114 = *(void *)(v8 + 40);
      BOOL v124 = __OFSUB__(v114, v115);
      uint64_t v116 = v114 - v115;
      char v117 = v124;
    }
    if (v117) {
      goto LABEL_134;
    }
    unint64_t v125 = v109 - 2;
    uint64_t v131 = (uint64_t *)(v110 + 16 * (v109 - 2));
    uint64_t v133 = *v131;
    uint64_t v132 = v131[1];
    BOOL v134 = __OFSUB__(v132, v133);
    uint64_t v135 = v132 - v133;
    char v136 = v134;
    if (v134) {
      goto LABEL_136;
    }
    uint64_t v137 = (uint64_t *)(v110 + 16 * v113);
    uint64_t v139 = *v137;
    uint64_t v138 = v137[1];
    BOOL v124 = __OFSUB__(v138, v139);
    uint64_t v140 = v138 - v139;
    if (v124) {
      goto LABEL_138;
    }
    if (__OFADD__(v135, v140)) {
      goto LABEL_140;
    }
    if (v135 + v140 >= v116)
    {
      BOOL v141 = v116 < v140;
LABEL_93:
      if (v141) {
        unint64_t v113 = v125;
      }
      goto LABEL_95;
    }
LABEL_87:
    if (v136) {
      goto LABEL_137;
    }
    uint64_t v144 = (uint64_t *)(v110 + 16 * v113);
    uint64_t v146 = *v144;
    uint64_t v145 = v144[1];
    BOOL v124 = __OFSUB__(v145, v146);
    uint64_t v147 = v145 - v146;
    if (v124) {
      goto LABEL_139;
    }
    if (v147 < v135) {
      goto LABEL_104;
    }
LABEL_95:
    unint64_t v152 = v113 - 1;
    if (v113 - 1 >= v109)
    {
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    if (!*v181) {
      goto LABEL_155;
    }
    uint64_t v153 = (uint64_t *)(v110 + 16 * v152);
    uint64_t v154 = *v153;
    uint64_t v155 = (void *)(v110 + 16 * v113);
    uint64_t v156 = v155[1];
    uint64_t v157 = v177;
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)(*v181 + 40 * *v153, *v181 + 40 * *v155, *v181 + 40 * v156, v176);
    uint64_t v177 = v157;
    if (v157) {
      break;
    }
    if (v156 < v154) {
      goto LABEL_128;
    }
    if (v113 > *(void *)(v8 + 16)) {
      goto LABEL_129;
    }
    *uint64_t v153 = v154;
    *(void *)(v110 + 16 * v152 + 8) = v156;
    unint64_t v158 = *(void *)(v8 + 16);
    if (v113 >= v158) {
      goto LABEL_130;
    }
    unint64_t v109 = v158 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v110 + 16 * v113), v155 + 2, 16 * (v158 - 1 - v113));
    *(void *)(v8 + 16) = v158 - 1;
    if (v158 <= 2) {
      goto LABEL_104;
    }
  }
LABEL_122:
  uint64_t result = swift_bridgeObjectRelease();
  if (v169 < -1) {
    goto LABEL_149;
  }
  *(void *)(v168 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  void *v21;
  Swift::Int v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::Int *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  Swift::Int v91;
  uint64_t v92;
  char *v93;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_126;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  uint64_t v89 = result;
  uint64_t v90 = v3;
  uint64_t v93 = v6;
  uint64_t v87 = a1;
  if (v3 <= 0)
  {
    Swift::Int v9 = MEMORY[0x1E4FBC860];
    uint64_t v28 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_91:
    if (v28 < 2)
    {
LABEL_102:
      uint64_t result = swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(void *)(v89 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_131;
    }
    uint64_t v80 = *v87;
    while (1)
    {
      uint64_t v81 = v28 - 2;
      if (v28 < 2) {
        break;
      }
      if (!v80) {
        goto LABEL_135;
      }
      uint64_t v82 = *(void *)(v9 + 32 + 16 * v81);
      uint64_t v83 = *(void *)(v9 + 32 + 16 * (v28 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v80 + 16 * v82), (char *)(v80 + 16 * *(void *)(v9 + 32 + 16 * (v28 - 1))), v80 + 16 * v83, v93);
      if (v1) {
        goto LABEL_88;
      }
      if (v83 < v82) {
        goto LABEL_121;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v9);
        Swift::Int v9 = result;
      }
      if (v81 >= *(void *)(v9 + 16)) {
        goto LABEL_122;
      }
      uint64_t v84 = (void *)(v9 + 32 + 16 * v81);
      *uint64_t v84 = v82;
      v84[1] = v83;
      uint64_t v85 = *(void *)(v9 + 16);
      if (v28 > v85) {
        goto LABEL_123;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v28 - 1)), (const void *)(v9 + 32 + 16 * v28), 16 * (v85 - v28));
      *(void *)(v9 + 16) = v85 - 1;
      uint64_t v28 = v85 - 1;
      if (v85 <= 2) {
        goto LABEL_102;
      }
    }
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
    return result;
  }
  uint64_t v88 = v5;
  int64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = *a1 + 40;
  Swift::Int v9 = MEMORY[0x1E4FBC860];
  while (1)
  {
    int64_t v10 = v7++;
    uint64_t v91 = v10;
    if (v7 < v3)
    {
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t result = StringProtocol.localizedStandardCompare<A>(_:)();
      uint64_t v11 = result;
      int64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v12 = v86 + 16 * v10;
        while (1)
        {
          uint64_t result = StringProtocol.localizedStandardCompare<A>(_:)();
          if ((v11 == -1) == (result != -1)) {
            break;
          }
          v12 += 16;
          if (++v7 >= v3)
          {
            int64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 == -1)
      {
        if (v7 < v10) {
          goto LABEL_130;
        }
        if (v10 < v7)
        {
          uint64_t v13 = 16 * v7;
          uint64_t v14 = 16 * v10;
          uint64_t v15 = v7;
          uint64_t v16 = v10;
          do
          {
            if (v16 != --v15)
            {
              if (!v8) {
                goto LABEL_134;
              }
              uint64_t v17 = v8 + v13;
              int64_t v18 = *(void *)(v8 + v14);
              uint64_t v19 = *(void *)(v8 + v14 + 8);
              *(_OWORD *)(v8 + v14) = *(_OWORD *)(v8 + v13 - 16);
              *(void *)(v17 - 16) = v18;
              *(void *)(v17 - 8) = v19;
            }
            ++v16;
            v13 -= 16;
            v14 += 16;
          }
          while (v16 < v15);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_125;
      }
      if (v7 - v10 < v88)
      {
        if (__OFADD__(v10, v88)) {
          goto LABEL_128;
        }
        if (v10 + v88 >= v3) {
          unint64_t v20 = v3;
        }
        else {
          unint64_t v20 = v10 + v88;
        }
        if (v20 < v10) {
          goto LABEL_129;
        }
        if (v7 != v20)
        {
          lazy protocol witness table accessor for type String and conformance String();
          uint64_t v21 = (void *)(v8 + 16 * v7);
          do
          {
            uint64_t v22 = v10;
            uint64_t v23 = v21;
            do
            {
              uint64_t result = StringProtocol.localizedStandardCompare<A>(_:)();
              if (result != -1) {
                break;
              }
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v24 = *v23;
              uint64_t v25 = v23[1];
              *(_OWORD *)uint64_t v23 = *((_OWORD *)v23 - 1);
              *(v23 - 1) = v25;
              *(v23 - 2) = v24;
              v23 -= 2;
              ++v22;
            }
            while (v7 != v22);
            ++v7;
            v21 += 2;
            int64_t v10 = v91;
          }
          while (v7 != v20);
          int64_t v7 = v20;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_124;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      Swift::Int v9 = result;
    }
    uint64_t v27 = *(void *)(v9 + 16);
    uint64_t v26 = *(void *)(v9 + 24);
    uint64_t v28 = v27 + 1;
    if (v27 >= v26 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v26 > 1), v27 + 1, 1, (char *)v9);
      Swift::Int v9 = result;
    }
    *(void *)(v9 + 16) = v28;
    uint64_t v92 = v9 + 32;
    uint64_t v29 = (Swift::Int *)(v9 + 32 + 16 * v27);
    *uint64_t v29 = v10;
    v29[1] = v7;
    if (v27) {
      break;
    }
    uint64_t v28 = 1;
LABEL_83:
    Swift::Int v3 = v90;
    if (v7 >= v90) {
      goto LABEL_91;
    }
  }
  uint64_t v30 = v9 + 32;
  while (1)
  {
    uint64_t v31 = v28 - 1;
    if (v28 >= 4)
    {
      uint64_t v36 = v30 + 16 * v28;
      uint64_t v37 = *(void *)(v36 - 64);
      uint64_t v38 = *(void *)(v36 - 56);
      uint64_t v42 = __OFSUB__(v38, v37);
      uint64_t v39 = v38 - v37;
      if (v42) {
        goto LABEL_109;
      }
      int64_t v41 = *(void *)(v36 - 48);
      uint64_t v40 = *(void *)(v36 - 40);
      uint64_t v42 = __OFSUB__(v40, v41);
      uint64_t v34 = v40 - v41;
      uint64_t v35 = v42;
      if (v42) {
        goto LABEL_110;
      }
      unint64_t v43 = v28 - 2;
      uint64_t v44 = (uint64_t *)(v30 + 16 * (v28 - 2));
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      uint64_t v42 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      if (v42) {
        goto LABEL_111;
      }
      uint64_t v42 = __OFADD__(v34, v47);
      unint64_t v48 = v34 + v47;
      if (v42) {
        goto LABEL_113;
      }
      if (v48 >= v39)
      {
        int64_t v66 = (uint64_t *)(v30 + 16 * v31);
        uint64_t v68 = *v66;
        uint64_t v67 = v66[1];
        uint64_t v42 = __OFSUB__(v67, v68);
        long long v69 = v67 - v68;
        if (v42) {
          goto LABEL_119;
        }
        uint64_t v59 = v34 < v69;
        goto LABEL_72;
      }
    }
    else
    {
      if (v28 != 3)
      {
        uint64_t v60 = *(void *)(v9 + 32);
        int64_t v61 = *(void *)(v9 + 40);
        uint64_t v42 = __OFSUB__(v61, v60);
        uint64_t v53 = v61 - v60;
        uint64_t v54 = v42;
        goto LABEL_66;
      }
      uint64_t v33 = *(void *)(v9 + 32);
      uint64_t v32 = *(void *)(v9 + 40);
      uint64_t v42 = __OFSUB__(v32, v33);
      uint64_t v34 = v32 - v33;
      uint64_t v35 = v42;
    }
    if (v35) {
      goto LABEL_112;
    }
    unint64_t v43 = v28 - 2;
    uint64_t v49 = (uint64_t *)(v30 + 16 * (v28 - 2));
    int v51 = *v49;
    uint64_t v50 = v49[1];
    uint64_t v52 = __OFSUB__(v50, v51);
    uint64_t v53 = v50 - v51;
    uint64_t v54 = v52;
    if (v52) {
      goto LABEL_114;
    }
    uint64_t v55 = (uint64_t *)(v30 + 16 * v31);
    uint64_t v57 = *v55;
    uint64_t v56 = v55[1];
    uint64_t v42 = __OFSUB__(v56, v57);
    int v58 = v56 - v57;
    if (v42) {
      goto LABEL_116;
    }
    if (__OFADD__(v53, v58)) {
      goto LABEL_118;
    }
    if (v53 + v58 >= v34)
    {
      uint64_t v59 = v34 < v58;
LABEL_72:
      if (v59) {
        uint64_t v31 = v43;
      }
      goto LABEL_74;
    }
LABEL_66:
    if (v54) {
      goto LABEL_115;
    }
    uint64_t v62 = (uint64_t *)(v30 + 16 * v31);
    int64_t v64 = *v62;
    uint64_t v63 = v62[1];
    uint64_t v42 = __OFSUB__(v63, v64);
    int64_t v65 = v63 - v64;
    if (v42) {
      goto LABEL_117;
    }
    if (v65 < v53) {
      goto LABEL_83;
    }
LABEL_74:
    Swift::Int v70 = v31 - 1;
    if (v31 - 1 >= v28)
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    uint64_t v71 = v8;
    if (!v8) {
      goto LABEL_133;
    }
    uint64_t v72 = v9;
    char v73 = (uint64_t *)(v30 + 16 * v70);
    char v74 = v30;
    uint64_t v75 = *v73;
    uint64_t v76 = (void *)(v74 + 16 * v31);
    uint64_t v77 = v76[1];
    uint64_t v78 = v71;
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v71 + 16 * *v73), (char *)(v71 + 16 * *v76), v71 + 16 * v77, v93);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_106;
    }
    if (v31 > *(void *)(v72 + 16)) {
      goto LABEL_107;
    }
    *char v73 = v75;
    uint64_t v30 = v92;
    *(void *)(v92 + 16 * v70 + 8) = v77;
    uint64_t v79 = *(void *)(v72 + 16);
    if (v31 >= v79) {
      goto LABEL_108;
    }
    Swift::Int v9 = v72;
    uint64_t v28 = v79 - 1;
    uint64_t result = (uint64_t)memmove(v76, v76 + 2, 16 * (v79 - 1 - v31));
    *(void *)(v72 + 16) = v79 - 1;
    uint64_t v8 = v78;
    if (v79 <= 2) {
      goto LABEL_83;
    }
  }
LABEL_88:
  uint64_t result = swift_bridgeObjectRelease();
  if (v90 < -1) {
    goto LABEL_127;
  }
  *(void *)(v89 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  Swift::Int v18;
  unsigned char *v19;
  unsigned int v20;
  Swift::Int v21;
  unsigned char *v22;
  unsigned int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  Swift::Int *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 *v87;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  uint64_t v82 = a1;
  uint64_t v83 = result;
  uint64_t v87 = v6;
  uint64_t v85 = v3;
  if (v3 <= 0)
  {
    Swift::Int v9 = MEMORY[0x1E4FBC860];
    uint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v26 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v85 >= -1)
      {
        *(void *)(v83 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v76 = *v82;
    while (1)
    {
      uint64_t v77 = v26 - 2;
      if (v26 < 2) {
        break;
      }
      if (!v76) {
        goto LABEL_133;
      }
      uint64_t v78 = *(void *)(v9 + 32 + 16 * v77);
      uint64_t v79 = *(void *)(v9 + 32 + 16 * (v26 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((unsigned __int8 *)(v76 + v78), (unsigned __int8 *)(v76 + *(void *)(v9 + 32 + 16 * (v26 - 1))), v76 + v79, v87);
      if (v1) {
        goto LABEL_86;
      }
      if (v79 < v78) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v9);
        Swift::Int v9 = result;
      }
      if (v77 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v80 = (void *)(v9 + 32 + 16 * v77);
      *uint64_t v80 = v78;
      v80[1] = v79;
      uint64_t v81 = *(void *)(v9 + 16);
      if (v26 > v81) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v26 - 1)), (const void *)(v9 + 32 + 16 * v26), 16 * (v81 - v26));
      *(void *)(v9 + 16) = v81 - 1;
      uint64_t v26 = v81 - 1;
      if (v81 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = *a1;
  Swift::Int v9 = MEMORY[0x1E4FBC860];
  uint64_t v84 = v5;
  uint64_t v86 = *a1;
  while (1)
  {
    int64_t v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(unsigned __int8 *)(v8 + v7);
      uint64_t v12 = *(unsigned __int8 *)(v8 + v10);
      int64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v13 = v11;
        while (1)
        {
          uint64_t v14 = *(unsigned __int8 *)(v8 + v7);
          if (v11 < v12 == v14 >= v13) {
            break;
          }
          ++v7;
          uint64_t v13 = v14;
          if (v7 >= v3)
          {
            int64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v15 = v7 - 1;
          uint64_t v16 = v10;
          do
          {
            if (v16 != v15)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v17 = *(unsigned char *)(v8 + v16);
              *(unsigned char *)(v8 + v16) = *(unsigned char *)(v8 + v15);
              *(unsigned char *)(v8 + v15) = v17;
            }
            uint64_t v57 = ++v16 < v15--;
          }
          while (v57);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        int64_t v18 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v18 >= v3) {
          int64_t v18 = v3;
        }
        if (v18 < v10) {
          goto LABEL_128;
        }
        if (v7 != v18)
        {
          uint64_t v19 = (unsigned char *)(v8 + v7);
          do
          {
            unint64_t v20 = *(unsigned __int8 *)(v8 + v7);
            uint64_t v21 = v10;
            uint64_t v22 = v19;
            do
            {
              uint64_t v23 = *(v22 - 1);
              if (v20 >= v23) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              void *v22 = v23;
              *--uint64_t v22 = v20;
              ++v21;
            }
            while (v7 != v21);
            ++v7;
            ++v19;
          }
          while (v7 != v18);
          int64_t v7 = v18;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      Swift::Int v9 = result;
    }
    uint64_t v25 = *(void *)(v9 + 16);
    uint64_t v24 = *(void *)(v9 + 24);
    uint64_t v26 = v25 + 1;
    uint64_t v8 = v86;
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v24 > 1), v25 + 1, 1, (char *)v9);
      uint64_t v8 = v86;
      Swift::Int v9 = result;
    }
    *(void *)(v9 + 16) = v26;
    uint64_t v27 = v9 + 32;
    uint64_t v28 = (Swift::Int *)(v9 + 32 + 16 * v25);
    *uint64_t v28 = v10;
    v28[1] = v7;
    if (v25) {
      break;
    }
    uint64_t v26 = 1;
LABEL_81:
    uint64_t v5 = v84;
    Swift::Int v3 = v85;
    if (v7 >= v85) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    uint64_t v29 = v26 - 1;
    if (v26 >= 4)
    {
      uint64_t v34 = v27 + 16 * v26;
      uint64_t v35 = *(void *)(v34 - 64);
      uint64_t v36 = *(void *)(v34 - 56);
      uint64_t v40 = __OFSUB__(v36, v35);
      uint64_t v37 = v36 - v35;
      if (v40) {
        goto LABEL_107;
      }
      uint64_t v39 = *(void *)(v34 - 48);
      uint64_t v38 = *(void *)(v34 - 40);
      uint64_t v40 = __OFSUB__(v38, v39);
      uint64_t v32 = v38 - v39;
      uint64_t v33 = v40;
      if (v40) {
        goto LABEL_108;
      }
      int64_t v41 = v26 - 2;
      uint64_t v42 = (uint64_t *)(v27 + 16 * (v26 - 2));
      uint64_t v44 = *v42;
      unint64_t v43 = v42[1];
      uint64_t v40 = __OFSUB__(v43, v44);
      uint64_t v45 = v43 - v44;
      if (v40) {
        goto LABEL_109;
      }
      uint64_t v40 = __OFADD__(v32, v45);
      uint64_t v46 = v32 + v45;
      if (v40) {
        goto LABEL_111;
      }
      if (v46 >= v37)
      {
        int64_t v64 = (uint64_t *)(v27 + 16 * v29);
        int64_t v66 = *v64;
        int64_t v65 = v64[1];
        uint64_t v40 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v40) {
          goto LABEL_117;
        }
        uint64_t v57 = v32 < v67;
        goto LABEL_70;
      }
    }
    else
    {
      if (v26 != 3)
      {
        int v58 = *(void *)(v9 + 32);
        uint64_t v59 = *(void *)(v9 + 40);
        uint64_t v40 = __OFSUB__(v59, v58);
        int v51 = v59 - v58;
        uint64_t v52 = v40;
        goto LABEL_64;
      }
      uint64_t v31 = *(void *)(v9 + 32);
      uint64_t v30 = *(void *)(v9 + 40);
      uint64_t v40 = __OFSUB__(v30, v31);
      uint64_t v32 = v30 - v31;
      uint64_t v33 = v40;
    }
    if (v33) {
      goto LABEL_110;
    }
    int64_t v41 = v26 - 2;
    uint64_t v47 = (uint64_t *)(v27 + 16 * (v26 - 2));
    uint64_t v49 = *v47;
    unint64_t v48 = v47[1];
    uint64_t v50 = __OFSUB__(v48, v49);
    int v51 = v48 - v49;
    uint64_t v52 = v50;
    if (v50) {
      goto LABEL_112;
    }
    uint64_t v53 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    uint64_t v40 = __OFSUB__(v54, v55);
    uint64_t v56 = v54 - v55;
    if (v40) {
      goto LABEL_114;
    }
    if (__OFADD__(v51, v56)) {
      goto LABEL_116;
    }
    if (v51 + v56 >= v32)
    {
      uint64_t v57 = v32 < v56;
LABEL_70:
      if (v57) {
        uint64_t v29 = v41;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v52) {
      goto LABEL_113;
    }
    uint64_t v60 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v62 = *v60;
    int64_t v61 = v60[1];
    uint64_t v40 = __OFSUB__(v61, v62);
    uint64_t v63 = v61 - v62;
    if (v40) {
      goto LABEL_115;
    }
    if (v63 < v51) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v68 = v9;
    long long v69 = v29 - 1;
    if (v29 - 1 >= v26)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    Swift::Int v70 = (uint64_t *)(v27 + 16 * v69);
    uint64_t v71 = *v70;
    uint64_t v72 = v27;
    char v73 = (void *)(v27 + 16 * v29);
    char v74 = v73[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((unsigned __int8 *)(v8 + *v70), (unsigned __int8 *)(v8 + *v73), v8 + v74, v87);
    if (v1) {
      break;
    }
    if (v74 < v71) {
      goto LABEL_104;
    }
    if (v29 > *(void *)(v68 + 16)) {
      goto LABEL_105;
    }
    void *v70 = v71;
    *(void *)(v72 + 16 * v69 + 8) = v74;
    uint64_t v75 = *(void *)(v68 + 16);
    if (v29 >= v75) {
      goto LABEL_106;
    }
    Swift::Int v9 = v68;
    uint64_t v26 = v75 - 1;
    uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v29));
    uint64_t v27 = v72;
    *(void *)(v68 + 16) = v75 - 1;
    uint64_t v8 = v86;
    if (v75 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v85 < -1) {
    goto LABEL_125;
  }
  *(void *)(v83 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  int v14;
  Swift::Int v15;
  void *v16;
  void *v17;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::Int *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t v81;
  Swift::Int v82;
  uint64_t *v83;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    int v98 = MEMORY[0x1E4FBC860];
    uint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      uint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)(v98 + 32 + 16 * v86);
      uint64_t v89 = *(void *)(v98 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)(v98 + 32 + 16 * (v31 - 1))), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v98);
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_140;
      }
      uint64_t v90 = (void *)(v87 + 32 + 16 * v86);
      char *v90 = v88;
      v90[1] = v89;
      uint64_t v91 = *(void *)(v87 + 16);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v31 - 1)), (const void *)(v87 + 32 + 16 * v31), 16 * (v91 - v31));
      int v98 = v87;
      *(void *)(v87 + 16) = v91 - 1;
      uint64_t v31 = v91 - 1;
      Swift::Int v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  char v94 = v5;
  int64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  int v98 = MEMORY[0x1E4FBC860];
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    int64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      uint64_t v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        uint64_t v19 = v15 + 1;
        int64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    int64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      unint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    int64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      uint64_t v27 = v3;
    }
    else {
      uint64_t v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        uint64_t v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      int64_t v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v28 + 16) + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    uint64_t v30 = *(void *)(v28 + 16);
    uint64_t v29 = *(void *)(v28 + 24);
    uint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v29 > 1), v30 + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v31;
    uint64_t v32 = v28 + 32;
    uint64_t v33 = (Swift::Int *)(v28 + 32 + 16 * v30);
    *uint64_t v33 = v9;
    v33[1] = v7;
    int v98 = v28;
    if (v30) {
      break;
    }
    uint64_t v31 = 1;
LABEL_90:
    Swift::Int v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    uint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      uint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      int64_t v41 = *(void *)(v39 - 56);
      uint64_t v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      unint64_t v43 = *(void *)(v39 - 40);
      uint64_t v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      uint64_t v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      uint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      unint64_t v48 = v47[1];
      uint64_t v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      uint64_t v45 = __OFADD__(v37, v50);
      int v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        long long v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        Swift::Int v70 = v69[1];
        uint64_t v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        uint64_t v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v28 + 32);
        int64_t v64 = *(void *)(v28 + 40);
        uint64_t v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        uint64_t v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *(void *)(v28 + 32);
      uint64_t v35 = *(void *)(v28 + 40);
      uint64_t v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      uint64_t v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    uint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    uint64_t v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    uint64_t v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    int v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    uint64_t v45 = __OFSUB__(v59, v60);
    int64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      uint64_t v62 = v37 < v61;
LABEL_79:
      if (v62) {
        uint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    int64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    int64_t v66 = v65[1];
    uint64_t v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    char v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    char v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *(void *)(v98 + 16)) {
      goto LABEL_125;
    }
    *char v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    uint64_t v78 = *(void *)(v98 + 16);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    uint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v98 + 16) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  Swift::Int v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  id v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  id v47;
  int v48;
  void (*v49)(char *, uint64_t);
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  long long v58;
  Swift::Int v59;
  uint64_t v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  id v76;
  void (*v77)(char *, uint64_t *);
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  long long v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  Swift::Int v85;
  uint64_t v86;
  Swift::Int *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  Swift::Int v149;
  uint64_t v150;
  uint64_t v151;
  Swift::Int v152;
  unint64_t v153;
  uint64_t *v154;
  Swift::Int v155;
  uint64_t *v156;
  uint64_t *v157;
  void v158[3];
  uint64_t v159;
  uint64_t v160;
  long long v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;

  uint64_t v2 = v1;
  Swift::Int v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v4, 1, v3);
      }
      return result;
    }
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  unint64_t v6 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v4 / 2);
  uint64_t v145 = result;
  uint64_t v153 = v7;
  uint64_t v146 = v4;
  if (v4 <= 0)
  {
    Swift::Int v9 = MEMORY[0x1E4FBC860];
    uint64_t v84 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_109:
    if (v84 < 2) {
      goto LABEL_123;
    }
    uint64_t v135 = *v3;
    while (1)
    {
      char v136 = v84 - 2;
      if (v84 < 2) {
        break;
      }
      if (!v135) {
        goto LABEL_155;
      }
      uint64_t v137 = v9;
      uint64_t v138 = v9 + 32;
      uint64_t v139 = *(void *)(v9 + 32 + 16 * v136);
      uint64_t v140 = *(void *)(v9 + 32 + 16 * (v84 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)(v135 + 40 * v139, v135 + 40 * *(void *)(v138 + 16 * (v84 - 1)), v135 + 40 * v140, v153);
      if (v2) {
        goto LABEL_121;
      }
      if (v140 < v139) {
        goto LABEL_142;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v137);
        uint64_t v137 = result;
      }
      if (v136 >= *(void *)(v137 + 16)) {
        goto LABEL_143;
      }
      BOOL v141 = (void *)(v137 + 32 + 16 * v136);
      *BOOL v141 = v139;
      v141[1] = v140;
      uint64_t v142 = *(void *)(v137 + 16);
      if (v84 > v142) {
        goto LABEL_144;
      }
      Swift::Int v9 = v137;
      uint64_t result = (uint64_t)memmove((void *)(v137 + 32 + 16 * (v84 - 1)), (const void *)(v137 + 32 + 16 * v84), 16 * (v142 - v84));
      *(void *)(v137 + 16) = v142 - 1;
      uint64_t v84 = v142 - 1;
      if (v142 <= 2) {
        goto LABEL_123;
      }
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  uint64_t v144 = v6;
  uint64_t v8 = 0;
  Swift::Int v9 = MEMORY[0x1E4FBC860];
  int64_t v10 = v4;
  uint64_t v154 = v3;
  while (1)
  {
    uint64_t v11 = v8 + 1;
    uint64_t v147 = -40;
    uint64_t v148 = v9;
    unint64_t v152 = v8;
    if (v8 + 1 < v10)
    {
      uint64_t v12 = *v3;
      uint64_t v13 = v8;
      outlined init with copy of IDSLookupManager(*v3 + 40 * (v8 + 1), (uint64_t)&v161);
      uint64_t v150 = v12;
      outlined init with copy of IDSLookupManager(v12 + 40 * v13, (uint64_t)v158);
      uint64_t v14 = v162;
      uint64_t v15 = v163;
      __swift_project_boxed_opaque_existential_1(&v161, v162);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 104))(v14, v15);
      uint64_t v149 = v10;
      if (v16)
      {
        uint64_t v17 = (void *)v16;
        int64_t v18 = v159;
        uint64_t v19 = v160;
        __swift_project_boxed_opaque_existential_1(v158, v159);
        unint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(v18, v19);
        if (v20)
        {
          uint64_t v21 = (void *)v20;
          uint64_t v22 = type metadata accessor for Date();
          uint64_t v157 = &v143;
          uint64_t v23 = *(void *)(v22 - 8);
          uint64_t v24 = *(void *)(v23 + 64);
          MEMORY[0x1F4188790](v22);
          uint64_t v25 = v2;
          uint64_t v26 = objc_msgSend(v17, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v156 = &v143;
          MEMORY[0x1F4188790](v27);
          uint64_t v28 = (char *)&v143 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
          Swift::Int v9 = v148;
          uint64_t v29 = objc_msgSend(v21, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v2 = v25;
          LODWORD(v164) = static Date.> infix(_:_:)();

          uint64_t v30 = *(void (**)(char *, uint64_t))(v23 + 8);
          v30(v28, v22);
          v30(v28, v22);
          int64_t v10 = v149;
        }
        else
        {

          LODWORD(v164) = 1;
        }
        Swift::Int v3 = v154;
      }
      else
      {
        LODWORD(v164) = 0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v161);
      uint64_t v8 = v152;
      uint64_t v11 = v152 + 2;
      if (v152 + 2 < v10)
      {
        uint64_t v31 = v150 + 40 * v152 + 40;
        while (1)
        {
          outlined init with copy of IDSLookupManager(v31 + 40, (uint64_t)&v161);
          outlined init with copy of IDSLookupManager(v31, (uint64_t)v158);
          uint64_t v32 = v162;
          uint64_t v33 = v163;
          __swift_project_boxed_opaque_existential_1(&v161, v162);
          uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 104))(v32, v33);
          uint64_t v151 = v2;
          if (v34)
          {
            uint64_t v35 = (void *)v34;
            uint64_t v36 = v159;
            uint64_t v37 = v160;
            __swift_project_boxed_opaque_existential_1(v158, v159);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 104))(v36, v37);
            if (v38)
            {
              uint64_t v39 = (void *)v38;
              uint64_t v40 = type metadata accessor for Date();
              uint64_t v157 = &v143;
              int64_t v41 = *(void *)(v40 - 8);
              uint64_t v155 = v11;
              uint64_t v42 = v41;
              unint64_t v43 = *(void *)(v41 + 64);
              MEMORY[0x1F4188790](v40);
              uint64_t v44 = (char *)&v143 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
              uint64_t v45 = objc_msgSend(v35, sel_timestamp);
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v156 = &v143;
              MEMORY[0x1F4188790](v46);
              Swift::Int v9 = v148;
              uint64_t v47 = objc_msgSend(v39, sel_timestamp);
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              unint64_t v48 = static Date.> infix(_:_:)();
              uint64_t v49 = *(void (**)(char *, uint64_t))(v42 + 8);
              int64_t v10 = v149;
              v49(v44, v40);
              v49(v44, v40);
              uint64_t v11 = v155;
            }
            else
            {

              unint64_t v48 = 1;
            }
          }
          else
          {
            unint64_t v48 = 0;
          }
          Swift::Int v3 = v154;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v161);
          if ((v164 ^ v48)) {
            break;
          }
          ++v11;
          v31 += 40;
          uint64_t v2 = v151;
          if (v11 >= v10)
          {
            uint64_t v11 = v10;
            goto LABEL_22;
          }
        }
        uint64_t v2 = v151;
LABEL_22:
        uint64_t v8 = v152;
      }
      if (v164)
      {
        if (v11 < v8) {
          goto LABEL_148;
        }
        if (v8 < v11)
        {
          uint64_t v50 = v11;
          int v51 = v147 + 40 * v11;
          uint64_t v52 = 40 * v8;
          uint64_t v53 = v50;
          uint64_t v54 = v8;
          do
          {
            if (v54 != --v50)
            {
              if (!v150) {
                goto LABEL_154;
              }
              uint64_t v55 = v150 + v52;
              uint64_t v56 = v150 + v51;
              outlined init with take of Notice((long long *)(v150 + v52), (uint64_t)&v161);
              uint64_t v57 = *(void *)(v56 + 32);
              int v58 = *(_OWORD *)(v56 + 16);
              *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
              *(_OWORD *)(v55 + 16) = v58;
              *(void *)(v55 + 32) = v57;
              uint64_t result = outlined init with take of Notice(&v161, v56);
              uint64_t v8 = v152;
            }
            ++v54;
            v51 -= 40;
            v52 += 40;
          }
          while (v54 < v50);
          Swift::Int v3 = v154;
          uint64_t v11 = v53;
          int64_t v10 = v149;
        }
      }
    }
    if (v11 < v10)
    {
      if (__OFSUB__(v11, v8)) {
        goto LABEL_146;
      }
      if (v11 - v8 < v144)
      {
        if (__OFADD__(v8, v144)) {
          goto LABEL_149;
        }
        if (v8 + v144 >= v10) {
          uint64_t v59 = v10;
        }
        else {
          uint64_t v59 = v8 + v144;
        }
        if (v59 < v8) {
          goto LABEL_150;
        }
        if (v11 != v59)
        {
          uint64_t v151 = v2;
          uint64_t v60 = v147 + 40 * v11;
          uint64_t v149 = v59;
          do
          {
            int64_t v61 = v8;
            uint64_t v150 = v60;
            uint64_t v155 = v11;
            while (1)
            {
              uint64_t v62 = *v3 + v60;
              outlined init with copy of IDSLookupManager(v62 + 40, (uint64_t)&v161);
              outlined init with copy of IDSLookupManager(v62, (uint64_t)v158);
              uint64_t v63 = v162;
              int64_t v64 = v163;
              __swift_project_boxed_opaque_existential_1(&v161, v162);
              int64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 104))(v63, v64);
              if (!v65) {
                break;
              }
              int64_t v66 = (void *)v65;
              uint64_t v67 = v159;
              uint64_t v68 = v160;
              __swift_project_boxed_opaque_existential_1(v158, v159);
              long long v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 104))(v67, v68);
              if (v69)
              {
                Swift::Int v70 = (void *)v69;
                uint64_t v157 = (uint64_t *)type metadata accessor for Date();
                v164 = &v143;
                uint64_t v71 = *(v157 - 1);
                uint64_t v72 = *(void *)(v71 + 64);
                MEMORY[0x1F4188790](v157);
                char v73 = objc_msgSend(v66, sel_timestamp);
                static Date._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v156 = &v143;
                MEMORY[0x1F4188790](v74);
                uint64_t v75 = (char *)&v143 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
                uint64_t v76 = objc_msgSend(v70, sel_timestamp);
                static Date._unconditionallyBridgeFromObjectiveC(_:)();

                LOBYTE(v76) = static Date.> infix(_:_:)();
                uint64_t v77 = *(void (**)(char *, uint64_t *))(v71 + 8);
                uint64_t v78 = v157;
                v77(v75, v157);
                Swift::Int v3 = v154;
                v77(v75, v78);
                uint64_t v11 = v155;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
                uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v161);
                if ((v76 & 1) == 0) {
                  goto LABEL_52;
                }
              }
              else
              {

                __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
                uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v161);
              }
              uint64_t v79 = *v3;
              if (!*v3) {
                goto LABEL_152;
              }
              uint64_t v80 = v79 + v60;
              outlined init with take of Notice((long long *)(v79 + v60 + 40), (uint64_t)&v161);
              uint64_t v81 = *(_OWORD *)(v80 + 16);
              *(_OWORD *)(v80 + 40) = *(_OWORD *)v80;
              *(_OWORD *)(v80 + 56) = v81;
              *(void *)(v80 + 72) = *(void *)(v80 + 32);
              uint64_t result = outlined init with take of Notice(&v161, v80);
              v60 -= 40;
              if (v11 == ++v61) {
                goto LABEL_52;
              }
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
            uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v161);
LABEL_52:
            ++v11;
            uint64_t v60 = v150 + 40;
            uint64_t v8 = v152;
          }
          while (v11 != v149);
          uint64_t v11 = v149;
          uint64_t v2 = v151;
          Swift::Int v9 = v148;
        }
      }
    }
    if (v11 < v8) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v155 = v11;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      Swift::Int v9 = result;
    }
    uint64_t v83 = *(void *)(v9 + 16);
    uint64_t v82 = *(void *)(v9 + 24);
    uint64_t v84 = v83 + 1;
    uint64_t v85 = v152;
    if (v83 >= v82 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v82 > 1), v83 + 1, 1, (char *)v9);
      uint64_t v85 = v152;
      Swift::Int v9 = result;
    }
    *(void *)(v9 + 16) = v84;
    uint64_t v86 = v9 + 32;
    uint64_t v87 = (Swift::Int *)(v9 + 32 + 16 * v83);
    *uint64_t v87 = v85;
    v87[1] = v155;
    if (v83) {
      break;
    }
    uint64_t v84 = 1;
    uint64_t v8 = v155;
LABEL_103:
    int64_t v10 = v3[1];
    if (v8 >= v10) {
      goto LABEL_109;
    }
  }
  uint64_t v8 = v155;
  while (1)
  {
    uint64_t v88 = v84 - 1;
    if (v84 >= 4)
    {
      uint64_t v93 = v86 + 16 * v84;
      char v94 = *(void *)(v93 - 64);
      uint64_t v95 = *(void *)(v93 - 56);
      unsigned int v99 = __OFSUB__(v95, v94);
      uint64_t v96 = v95 - v94;
      if (v99) {
        goto LABEL_130;
      }
      int v98 = *(void *)(v93 - 48);
      uint64_t v97 = *(void *)(v93 - 40);
      unsigned int v99 = __OFSUB__(v97, v98);
      uint64_t v91 = v97 - v98;
      uint64_t v92 = v99;
      if (v99) {
        goto LABEL_131;
      }
      char v100 = v84 - 2;
      uint64_t v101 = (uint64_t *)(v86 + 16 * (v84 - 2));
      int64_t v103 = *v101;
      uint64_t v102 = v101[1];
      unsigned int v99 = __OFSUB__(v102, v103);
      uint64_t v104 = v102 - v103;
      if (v99) {
        goto LABEL_132;
      }
      unsigned int v99 = __OFADD__(v91, v104);
      uint64_t v105 = v91 + v104;
      if (v99) {
        goto LABEL_134;
      }
      if (v105 >= v96)
      {
        uint64_t v123 = (uint64_t *)(v86 + 16 * v88);
        unint64_t v125 = *v123;
        BOOL v124 = v123[1];
        unsigned int v99 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v99) {
          goto LABEL_140;
        }
        uint64_t v116 = v91 < v126;
        goto LABEL_92;
      }
    }
    else
    {
      if (v84 != 3)
      {
        char v117 = *(void *)(v9 + 32);
        unint64_t v118 = *(void *)(v9 + 40);
        unsigned int v99 = __OFSUB__(v118, v117);
        uint64_t v110 = v118 - v117;
        uint64_t v111 = v99;
        goto LABEL_86;
      }
      uint64_t v90 = *(void *)(v9 + 32);
      uint64_t v89 = *(void *)(v9 + 40);
      unsigned int v99 = __OFSUB__(v89, v90);
      uint64_t v91 = v89 - v90;
      uint64_t v92 = v99;
    }
    if (v92) {
      goto LABEL_133;
    }
    char v100 = v84 - 2;
    long long v106 = (uint64_t *)(v86 + 16 * (v84 - 2));
    unint64_t v108 = *v106;
    unint64_t v107 = v106[1];
    unint64_t v109 = __OFSUB__(v107, v108);
    uint64_t v110 = v107 - v108;
    uint64_t v111 = v109;
    if (v109) {
      goto LABEL_135;
    }
    int64_t v112 = (uint64_t *)(v86 + 16 * v88);
    uint64_t v114 = *v112;
    unint64_t v113 = v112[1];
    unsigned int v99 = __OFSUB__(v113, v114);
    uint64_t v115 = v113 - v114;
    if (v99) {
      goto LABEL_137;
    }
    if (__OFADD__(v110, v115)) {
      goto LABEL_139;
    }
    if (v110 + v115 >= v91)
    {
      uint64_t v116 = v91 < v115;
LABEL_92:
      if (v116) {
        uint64_t v88 = v100;
      }
      goto LABEL_94;
    }
LABEL_86:
    if (v111) {
      goto LABEL_136;
    }
    uint64_t v119 = (uint64_t *)(v86 + 16 * v88);
    uint64_t v121 = *v119;
    uint64_t v120 = v119[1];
    unsigned int v99 = __OFSUB__(v120, v121);
    uint64_t v122 = v120 - v121;
    if (v99) {
      goto LABEL_138;
    }
    if (v122 < v110) {
      goto LABEL_103;
    }
LABEL_94:
    uint64_t v127 = v88 - 1;
    if (v88 - 1 >= v84)
    {
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    uint64_t v128 = *v3;
    if (!*v3) {
      goto LABEL_153;
    }
    uint64_t v129 = v9;
    uint64_t v130 = (uint64_t *)(v86 + 16 * v127);
    uint64_t v131 = *v130;
    uint64_t v132 = (void *)(v86 + 16 * v88);
    uint64_t v133 = v132[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)(v128 + 40 * *v130, v128 + 40 * *v132, v128 + 40 * v133, v153);
    if (v2) {
      break;
    }
    if (v133 < v131) {
      goto LABEL_127;
    }
    if (v88 > *(void *)(v129 + 16)) {
      goto LABEL_128;
    }
    char *v130 = v131;
    *(void *)(v86 + 16 * v127 + 8) = v133;
    BOOL v134 = *(void *)(v129 + 16);
    if (v88 >= v134) {
      goto LABEL_129;
    }
    Swift::Int v9 = v129;
    uint64_t v84 = v134 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v86 + 16 * v88), v132 + 2, 16 * (v134 - 1 - v88));
    *(void *)(v129 + 16) = v134 - 1;
    Swift::Int v3 = v154;
    uint64_t v8 = v155;
    if (v134 <= 2) {
      goto LABEL_103;
    }
  }
LABEL_121:
  swift_bridgeObjectRelease();
  if (v146 >= -1) {
    goto LABEL_124;
  }
  __break(1u);
LABEL_123:
  uint64_t result = swift_bridgeObjectRelease();
  if (v146 >= -1)
  {
LABEL_124:
    *(void *)(v145 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
  return result;
}

{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  Swift::Int v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  long long v29;
  uint64_t v30;
  long long v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  long long v40;
  uint64_t v41;
  long long v42;
  long long v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;

  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = specialized static Array._allocateUninitialized(_:)(v3 / 2);
  unint64_t v107 = result;
  unint64_t v108 = v3;
  uint64_t v110 = v6;
  uint64_t v104 = a1;
  if (v3 <= 0)
  {
    Swift::Int v9 = MEMORY[0x1E4FBC860];
    unint64_t v48 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    uint64_t result = v9;
    if (v48 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v108 >= -1)
      {
        *(void *)(v107 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v97 = *v104;
    while (1)
    {
      int v98 = v48 - 2;
      if (v48 < 2) {
        break;
      }
      if (!v97) {
        goto LABEL_153;
      }
      unsigned int v99 = result;
      char v100 = *(void *)(result + 32 + 16 * v98);
      uint64_t v101 = *(void *)(result + 32 + 16 * (v48 - 1) + 8);
      uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v97 + 40 * v100), (char *)(v97 + 40 * *(void *)(result + 32 + 16 * (v48 - 1))), v97 + 40 * v101, v110);
      if (v1) {
        goto LABEL_106;
      }
      if (v101 < v100) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v99);
        unsigned int v99 = result;
      }
      if (v98 >= *(void *)(v99 + 16)) {
        goto LABEL_140;
      }
      uint64_t v102 = (void *)(v99 + 32 + 16 * v98);
      char *v102 = v100;
      v102[1] = v101;
      int64_t v103 = *(void *)(v99 + 16);
      if (v48 > v103) {
        goto LABEL_141;
      }
      memmove((void *)(v99 + 32 + 16 * (v48 - 1)), (const void *)(v99 + 32 + 16 * v48), 16 * (v103 - v48));
      uint64_t result = v99;
      *(void *)(v99 + 16) = v103 - 1;
      unint64_t v48 = v103 - 1;
      if (v103 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v105 = *a1 + 24;
  long long v106 = v5;
  Swift::Int v9 = MEMORY[0x1E4FBC860];
  unint64_t v109 = v8;
  while (1)
  {
    int64_t v10 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v11 = v8 + 40 * v7;
    uint64_t result = *(void *)(v11 + 16);
    uint64_t v12 = *(void *)(v11 + 24);
    uint64_t v13 = v8 + 40 * v10;
    if (result == *(void *)(v13 + 16) && v12 == *(void *)(v13 + 24))
    {
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v108) {
        goto LABEL_31;
      }
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v15 = result;
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v108) {
        goto LABEL_23;
      }
    }
    uint64_t v17 = (void *)(v105 + 40 * v16);
    do
    {
      uint64_t result = *(v17 - 1);
      int64_t v18 = v8 + 40 * v7;
      if (result == *(void *)(v18 + 16) && *v17 == *(void *)(v18 + 24))
      {
        if (v15) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((v15 ^ result)) {
          goto LABEL_23;
        }
      }
      unint64_t v20 = v16 + 1;
      v17 += 5;
      int64_t v7 = v16;
      uint64_t v16 = v20;
    }
    while (v20 < v108);
    uint64_t v16 = v20;
LABEL_23:
    int64_t v7 = v16;
    if (v15)
    {
LABEL_24:
      if (v16 < v10) {
        goto LABEL_148;
      }
      if (v10 < v16)
      {
        uint64_t v21 = 40 * v16;
        uint64_t v22 = 40 * v10;
        uint64_t v23 = v16;
        uint64_t v24 = v10;
        do
        {
          if (v24 != --v23)
          {
            if (!v8) {
              goto LABEL_152;
            }
            uint64_t v25 = v8 + v22;
            uint64_t v26 = *(_OWORD *)(v8 + v22);
            uint64_t v27 = v8 + v21;
            uint64_t v28 = *(void *)(v8 + v22 + 16);
            uint64_t v29 = *(_OWORD *)(v8 + v22 + 24);
            uint64_t v30 = *(void *)(v8 + v21 - 8);
            uint64_t v31 = *(_OWORD *)(v8 + v21 - 24);
            *(_OWORD *)uint64_t v25 = *(_OWORD *)(v8 + v21 - 40);
            *(_OWORD *)(v25 + 16) = v31;
            *(void *)(v25 + 32) = v30;
            *(_OWORD *)(v27 - 40) = v26;
            *(void *)(v27 - 24) = v28;
            *(_OWORD *)(v27 - 16) = v29;
          }
          ++v24;
          v21 -= 40;
          v22 += 40;
        }
        while (v24 < v23);
      }
LABEL_31:
      int64_t v7 = v16;
    }
LABEL_32:
    if (v7 < v108)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_143;
      }
      if (v7 - v10 < v106)
      {
        if (__OFADD__(v10, v106)) {
          goto LABEL_146;
        }
        if (v10 + v106 >= v108) {
          uint64_t v32 = v108;
        }
        else {
          uint64_t v32 = v10 + v106;
        }
        if (v32 < v10) {
          goto LABEL_147;
        }
        if (v7 != v32)
        {
          uint64_t v33 = v105 + 40 * v7;
          do
          {
            uint64_t v34 = v8 + 40 * v7;
            uint64_t result = *(void *)(v34 + 16);
            uint64_t v35 = *(void *)(v34 + 24);
            uint64_t v36 = v10;
            uint64_t v37 = v33;
            do
            {
              if (result == *(void *)(v37 - 48) && v35 == *(void *)(v37 - 40)) {
                break;
              }
              uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
              if ((result & 1) == 0) {
                break;
              }
              if (!v8) {
                goto LABEL_150;
              }
              uint64_t v39 = v37 - 24;
              uint64_t v40 = *(_OWORD *)v37;
              int64_t v41 = *(void *)(v37 - 32);
              unint64_t v43 = *(_OWORD *)(v37 - 64);
              uint64_t v42 = *(_OWORD *)(v37 - 48);
              *(_OWORD *)(v37 - 40) = *(_OWORD *)v37;
              v37 -= 40;
              uint64_t v44 = *(void *)(v37 + 16);
              uint64_t v45 = *(void *)(v37 + 24);
              uint64_t result = *(void *)(v37 + 32);
              *(_OWORD *)uint64_t v39 = v43;
              *(_OWORD *)(v39 + 16) = v42;
              *(void *)(v39 + 32) = v41;
              *(void *)(v37 - 24) = v44;
              *(void *)(v37 - 16) = v45;
              *(void *)(v37 - 8) = result;
              uint64_t v35 = v40;
              ++v36;
            }
            while (v7 != v36);
            ++v7;
            v33 += 40;
          }
          while (v7 != v32);
          int64_t v7 = v32;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      Swift::Int v9 = result;
    }
    uint64_t v47 = *(void *)(v9 + 16);
    uint64_t v46 = *(void *)(v9 + 24);
    unint64_t v48 = v47 + 1;
    if (v47 >= v46 >> 1)
    {
      uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v46 > 1), v47 + 1, 1, (char *)v9);
      Swift::Int v9 = result;
    }
    *(void *)(v9 + 16) = v48;
    uint64_t v49 = v9 + 32;
    uint64_t v50 = (uint64_t *)(v9 + 32 + 16 * v47);
    *uint64_t v50 = v10;
    v50[1] = v7;
    if (v47) {
      break;
    }
    unint64_t v48 = 1;
    uint64_t v8 = v109;
LABEL_101:
    Swift::Int v3 = v108;
    if (v7 >= v108) {
      goto LABEL_110;
    }
  }
  uint64_t v8 = v109;
  while (1)
  {
    int v51 = v48 - 1;
    if (v48 >= 4)
    {
      uint64_t v56 = v49 + 16 * v48;
      uint64_t v57 = *(void *)(v56 - 64);
      int v58 = *(void *)(v56 - 56);
      uint64_t v62 = __OFSUB__(v58, v57);
      uint64_t v59 = v58 - v57;
      if (v62) {
        goto LABEL_127;
      }
      int64_t v61 = *(void *)(v56 - 48);
      uint64_t v60 = *(void *)(v56 - 40);
      uint64_t v62 = __OFSUB__(v60, v61);
      uint64_t v54 = v60 - v61;
      uint64_t v55 = v62;
      if (v62) {
        goto LABEL_128;
      }
      uint64_t v63 = v48 - 2;
      int64_t v64 = (uint64_t *)(v49 + 16 * (v48 - 2));
      int64_t v66 = *v64;
      int64_t v65 = v64[1];
      uint64_t v62 = __OFSUB__(v65, v66);
      uint64_t v67 = v65 - v66;
      if (v62) {
        goto LABEL_129;
      }
      uint64_t v62 = __OFADD__(v54, v67);
      uint64_t v68 = v54 + v67;
      if (v62) {
        goto LABEL_131;
      }
      if (v68 >= v59)
      {
        uint64_t v86 = (uint64_t *)(v49 + 16 * v51);
        uint64_t v88 = *v86;
        uint64_t v87 = v86[1];
        uint64_t v62 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v62) {
          goto LABEL_137;
        }
        uint64_t v79 = v54 < v89;
        goto LABEL_90;
      }
    }
    else
    {
      if (v48 != 3)
      {
        uint64_t v80 = *(void *)(v9 + 32);
        uint64_t v81 = *(void *)(v9 + 40);
        uint64_t v62 = __OFSUB__(v81, v80);
        char v73 = v81 - v80;
        char v74 = v62;
        goto LABEL_84;
      }
      uint64_t v53 = *(void *)(v9 + 32);
      uint64_t v52 = *(void *)(v9 + 40);
      uint64_t v62 = __OFSUB__(v52, v53);
      uint64_t v54 = v52 - v53;
      uint64_t v55 = v62;
    }
    if (v55) {
      goto LABEL_130;
    }
    uint64_t v63 = v48 - 2;
    long long v69 = (uint64_t *)(v49 + 16 * (v48 - 2));
    uint64_t v71 = *v69;
    Swift::Int v70 = v69[1];
    uint64_t v72 = __OFSUB__(v70, v71);
    char v73 = v70 - v71;
    char v74 = v72;
    if (v72) {
      goto LABEL_132;
    }
    uint64_t v75 = (uint64_t *)(v49 + 16 * v51);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    uint64_t v62 = __OFSUB__(v76, v77);
    uint64_t v78 = v76 - v77;
    if (v62) {
      goto LABEL_134;
    }
    if (__OFADD__(v73, v78)) {
      goto LABEL_136;
    }
    if (v73 + v78 >= v54)
    {
      uint64_t v79 = v54 < v78;
LABEL_90:
      if (v79) {
        int v51 = v63;
      }
      goto LABEL_92;
    }
LABEL_84:
    if (v74) {
      goto LABEL_133;
    }
    uint64_t v82 = (uint64_t *)(v49 + 16 * v51);
    uint64_t v84 = *v82;
    uint64_t v83 = v82[1];
    uint64_t v62 = __OFSUB__(v83, v84);
    uint64_t v85 = v83 - v84;
    if (v62) {
      goto LABEL_135;
    }
    if (v85 < v73) {
      goto LABEL_101;
    }
LABEL_92:
    uint64_t v90 = v51 - 1;
    if (v51 - 1 >= v48)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v91 = v8;
    uint64_t v92 = (uint64_t *)(v49 + 16 * v90);
    uint64_t v93 = *v92;
    char v94 = (void *)(v49 + 16 * v51);
    uint64_t v95 = v94[1];
    uint64_t result = specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v91 + 40 * *v92), (char *)(v91 + 40 * *v94), v91 + 40 * v95, v110);
    if (v1) {
      break;
    }
    if (v95 < v93) {
      goto LABEL_124;
    }
    if (v51 > *(void *)(v9 + 16)) {
      goto LABEL_125;
    }
    void *v92 = v93;
    *(void *)(v49 + 16 * v90 + 8) = v95;
    uint64_t v96 = *(void *)(v9 + 16);
    if (v51 >= v96) {
      goto LABEL_126;
    }
    unint64_t v48 = v96 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v49 + 16 * v51), v94 + 2, 16 * (v96 - 1 - v51));
    *(void *)(v9 + 16) = v96 - 1;
    uint64_t v79 = v96 > 2;
    uint64_t v8 = v109;
    if (!v79) {
      goto LABEL_101;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v108 < -1) {
    goto LABEL_145;
  }
  *(void *)(v107 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t RecentsCallItem.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RecentsCallItem(0);
  return _s15ConversationKit11ParticipantVSgWOcTm_0(v1 + *(int *)(v3 + 36), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>>);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1)
{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for RecentsCollectionViewSectionable);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for CVarArg);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for Participant);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for Activity);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for Participant.Caption);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for HUDActivityManager.BannerUpdate);
}

{
  uint64_t v2;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(v2 + 16) = a1;
    }
    else
    {
      uint64_t v2 = MEMORY[0x1E4FBC860];
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    return v2;
  }
  return result;
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for MomentsIndicatorBubble);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &lazy cache variable for type metadata for SGURL);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for TranscriptionViewModel.Caption);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(void))type metadata accessor for RecipientResultWrapper);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, MEMORY[0x1F418BFD0]);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, &lazy cache variable for type metadata for UIWindow);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1);
}

{
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v2;
  return result;
}

{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()(v2);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  return specialized ContiguousArray._endMutation()();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v2;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v2;
  return result;
}

{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()(v2);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  return specialized ContiguousArray._endMutation()();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v2;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v2;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  *a1 = v2;
  return result;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew()()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_12_52(v0, v1, v2, v3, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>, type metadata accessor for Participant, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  OUTLINED_FUNCTION_4_93();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_12_52(v0, v1, v2, v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<CaptionSectioner.Caption>, type metadata accessor for CaptionSectioner.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  JUMPOUT(0x1C87748E0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_12_52(v0, v1, v2, v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<TranscriptionViewModel.Caption>, type metadata accessor for TranscriptionViewModel.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_12_52(v0, v1, v2, v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>, type metadata accessor for Participant.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  OUTLINED_FUNCTION_4_93();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_4_93();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  OUTLINED_FUNCTION_4_93();
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_12_52(v0, v1, v2, v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>, MEMORY[0x1F418BF90], (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = OUTLINED_FUNCTION_148_4();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_132_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_132_4(uint64_t a1)
{
  closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x1E4FBC860];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_6:
  unint64_t v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t protocol witness for RecentsCallItemProviding.mediaType.getter in conformance RecentsCallItem()
{
  return RecentsCallItem.mediaType.getter();
}

uint64_t RecentsCallItem.mediaType.getter()
{
  type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_218_1();
  switch(OUTLINED_FUNCTION_59_1())
  {
    case 1u:
    case 2u:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v5 = 0;
      break;
    case 3u:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v5 = 2;
      break;
    case 4u:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v5 = 1;
      break;
    default:
      OUTLINED_FUNCTION_162_2();
      char v6 = (void *)OUTLINED_FUNCTION_170_1();
      if (v6) {
        uint64_t v5 = (uint64_t)objc_msgSend(v6, sel_mediaType);
      }
      else {
        uint64_t v5 = 0;
      }
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v3, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      break;
  }
  return v5;
}

uint64_t OUTLINED_FUNCTION_178_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_178_2()
{
  return Date.init()();
}

id OUTLINED_FUNCTION_178_3(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  *(void *)(v3 - 120) = v2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_168_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v2 + a1;
  uint64_t result = outlined consume of NoticeAccessory(*(void *)v4, *(void *)(v4 + 8));
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = v3;
  return result;
}

BOOL OUTLINED_FUNCTION_168_2(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_168_3()
{
  return v0;
}

id OUTLINED_FUNCTION_168_4()
{
  return [v0 (SEL)(v1 + 1944)];
}

Swift::Int OUTLINED_FUNCTION_143_2()
{
  return NSObject._rawHashValue(seed:)(v0);
}

void OUTLINED_FUNCTION_143_4(uint64_t a1, uint64_t a2)
{
  closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void *OUTLINED_FUNCTION_143_5()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 184), *(void *)(v0 - 160));
}

uint64_t _ss14_ArrayProtocolPsE6filterySay7ElementQzGSbAEKXEKFSay15ConversationKit15RecentsCallItemVG_Tg5041_s5UIKit28NSDiffableDataSourceSnapshotV15ef78E24appendItemsRemovingDupes_9toSection6onDupeySayq_G_xSgyq_cSgtFSbq_XEfU_AD021g23CollectionViewM0O_AD0P8hI4VTg5ShyAIGxRi_zRi0_zlyAIIsegn_SgTf1cn_n(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v31[1] = a4;
  uint64_t v35 = type metadata accessor for RecentsCallItem(0);
  uint64_t v38 = *(void *)(v35 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v35);
  uint64_t v39 = (uint64_t)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v36 = (uint64_t)v31 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v31 - v13;
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)v31 - v16;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v37 = *(void *)(a1 + 16);
  if (!v37)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a3);
    return v18;
  }
  uint64_t v32 = (void (*)(char *))a3;
  uint64_t v33 = a2;
  v31[0] = v4;
  unint64_t v19 = 0;
  uint64_t v34 = a1;
  while (v19 < *(void *)(a1 + 16))
  {
    uint64_t v20 = *(void *)(v38 + 72);
    unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v41 = v18;
    outlined init with copy of ObjectTracker.RuleGroup(a1 + v40 + v20 * v19, (uint64_t)v17, (void (*)(void))type metadata accessor for RecentsCallItem);
    uint64_t v21 = *a2;
    if (*(void *)(*a2 + 16))
    {
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v22 = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
      unint64_t v24 = v22 & ~v23;
      if ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
      {
        uint64_t v25 = ~v23;
        while (1)
        {
          outlined init with copy of ObjectTracker.RuleGroup(*(void *)(v21 + 48) + v24 * v20, (uint64_t)v14, (void (*)(void))type metadata accessor for RecentsCallItem);
          static RecentsCallItem.== infix(_:_:)();
          char v27 = v26;
          outlined destroy of RecentsCallItem((uint64_t)v14);
          if (v27) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v25;
          if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease();
        if (v32) {
          v32(v17);
        }
        uint64_t result = outlined destroy of RecentsCallItem((uint64_t)v17);
        a2 = v33;
        a1 = v34;
        uint64_t v18 = v41;
        goto LABEL_15;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      a2 = v33;
      a1 = v34;
    }
    outlined init with copy of ObjectTracker.RuleGroup((uint64_t)v17, v36, (void (*)(void))type metadata accessor for RecentsCallItem);
    specialized Set._Variant.insert(_:)();
    outlined destroy of RecentsCallItem((uint64_t)v14);
    outlined init with take of RecentsCallItem((uint64_t)v17, v39);
    uint64_t v28 = v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v28 + 16) + 1, 1);
    }
    uint64_t v18 = v42;
    unint64_t v30 = *(void *)(v42 + 16);
    unint64_t v29 = *(void *)(v42 + 24);
    if (v30 >= v29 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
      uint64_t v18 = v42;
    }
    *(void *)(v18 + 16) = v30 + 1;
    uint64_t result = outlined init with take of RecentsCallItem(v39, v18 + v40 + v30 * v20);
LABEL_15:
    if (++v19 == v37)
    {
      uint64_t v18 = v42;
      a3 = (uint64_t)v32;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t outlined init with copy of ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_35();
  v5(v4);
  return a2;
}

uint64_t _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0()
{
  uint64_t v2 = OUTLINED_FUNCTION_34_42();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t outlined destroy of RecentsCallItem(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecentsCallItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void specialized Set._Variant.insert(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v1;
  OUTLINED_FUNCTION_143_0();
  uint64_t v5 = type metadata accessor for RecentsCallItem(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  uint64_t v7 = *v1;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  OUTLINED_FUNCTION_153_0();
  unint64_t v10 = v9 & ~v8;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v8;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v7 + 48) + v12 * v10, v3);
      static RecentsCallItem.== infix(_:_:)();
      char v14 = v13;
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v3, (void (*)(void))type metadata accessor for RecentsCallItem);
      if (v14) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v2, (void (*)(void))type metadata accessor for RecentsCallItem);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(*v4 + 48) + v12 * v10, v0);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v2, v3);
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)(v3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v16;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_162_2();
  }
  OUTLINED_FUNCTION_28();
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t (**v12)(void);
  void (*v13)(void);
  char v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  void (*v18)(void);
  uint64_t v19;
  unint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *v0;
  uint64_t v7 = type metadata accessor for UUID();
  lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
  swift_bridgeObjectRetain();
  char v26 = v3;
  dispatch thunk of Hashable._rawHashValue(seed:)();
  OUTLINED_FUNCTION_153_0();
  unint64_t v10 = v8 & ~v9;
  uint64_t v11 = (void *)(v7 - 8);
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v23 = v0;
    unint64_t v24 = v5;
    uint64_t v25 = ~v9;
    Swift::Int v22 = *v11;
    uint64_t v12 = (uint64_t (**)(void))(*v11 + 8);
    while (1)
    {
      MEMORY[0x1F4188790](v8);
      OUTLINED_FUNCTION_124();
      v13();
      lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
      char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v15 = *v12;
      OUTLINED_FUNCTION_12_1();
      uint64_t v8 = v15();
      if (v14) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v25;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v23;
        uint64_t v5 = v24;
        uint64_t v16 = v22;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_1();
    v15();
    OUTLINED_FUNCTION_124();
    v21();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = *v11;
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
    OUTLINED_FUNCTION_2_1();
    v18();
    char v27 = *v1;
    void *v1 = 0x8000000000000000;
    unint64_t v19 = OUTLINED_FUNCTION_194_1();
    specialized _NativeSet.insertNew(_:at:isUnique:)(v19, v20, isUniquelyReferenced_nonNull_native);
    void *v1 = v27;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v5, v26, v7);
  }
  OUTLINED_FUNCTION_28();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unsigned __int8 *v43;
  int v44;
  int v45;
  int v46;
  unsigned __int8 *v47;
  int v48;
  int v49;
  BOOL v50;
  uint64_t v51;
  void (*v52)(void);
  uint64_t v53;
  void (*v54)(void);
  uint64_t v55;
  void (*v56)(void);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v76 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_10_5();
  uint64_t v78 = v12;
  OUTLINED_FUNCTION_8_1();
  char v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v60 - v15;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_36_7();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_8_4();
  uint64_t v79 = v18;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_58();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_8_4();
  uint64_t v80 = v21;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_54_2();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_42();
  uint64_t v63 = v24;
  uint64_t v25 = *v4;
  Hasher.init(_seed:)();
  uint64_t v71 = v9;
  uint64_t v77 = type metadata accessor for UUID();
  lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  char v26 = Hasher._finalize()();
  char v27 = -1 << *(unsigned char *)(v25 + 32);
  uint64_t v28 = v26 & ~v27;
  uint64_t v77 = v25 + 56;
  if (((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  int64_t v61 = v4;
  uint64_t v62 = v8;
  uint64_t v72 = ~v27;
  char v73 = v25;
  unint64_t v29 = *(void *)(v76 + 72);
  uint64_t v75 = v2;
  uint64_t v76 = v29;
  char v74 = v6;
  unint64_t v30 = v80;
  do
  {
    uint64_t v31 = v76 * v28;
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v25 + 48) + v76 * v28, v1);
    OUTLINED_FUNCTION_39();
    static Participant.State.== infix(_:_:)();
    uint64_t v33 = v32;
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v1, v30);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v6, v3);
    if ((v33 & 1) == 0)
    {
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v3, (void (*)(void))type metadata accessor for Participant);
      int v51 = OUTLINED_FUNCTION_205_0();
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v51, v52);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v1, v79);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v6, v2);
LABEL_15:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v2, (void (*)(void))type metadata accessor for Participant);
      uint64_t v53 = OUTLINED_FUNCTION_362();
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v53, v54);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v1, (uint64_t)v16);
      unint64_t v40 = v78;
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v6, v78);
LABEL_16:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v40, (void (*)(void))type metadata accessor for Participant);
      uint64_t v55 = OUTLINED_FUNCTION_35();
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v55, v56);
      unint64_t v30 = v80;
LABEL_17:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant);
      uint64_t v6 = v74;
      uint64_t v2 = v75;
      uint64_t v25 = v73;
      goto LABEL_18;
    }
    Swift::Int v70 = v31;
    uint64_t v34 = static UUID.== infix(_:_:)();
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v3, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v30, (void (*)(void))type metadata accessor for Participant);
    uint64_t v35 = v3;
    uint64_t v36 = v79;
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v1, v79);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v6, v2);
    if ((v34 & 1) == 0) {
      goto LABEL_15;
    }
    uint64_t v37 = v71;
    uint64_t v38 = v36;
    uint64_t v39 = *(void *)(v36 + *(int *)(v71 + 28)) != 0;
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v38, (void (*)(void))type metadata accessor for Participant);
    unint64_t v40 = v78;
    LOBYTE(v37) = *(void *)(v2 + *(int *)(v37 + 28)) == 0;
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v2, (void (*)(void))type metadata accessor for Participant);
    uint64_t v41 = v39 ^ v37;
    uint64_t v3 = v35;
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v1, (uint64_t)v16);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v6, v40);
    if ((v41 & 1) == 0) {
      goto LABEL_16;
    }
    uint64_t v42 = v71;
    unint64_t v43 = (unsigned __int8 *)&v16[*(int *)(v71 + 24)];
    uint64_t v44 = *v43;
    uint64_t v68 = v43[1];
    long long v69 = v44;
    uint64_t v67 = v43[2];
    uint64_t v45 = v43[3];
    uint64_t v46 = v43[4];
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
    uint64_t v47 = (unsigned __int8 *)(v40 + *(int *)(v42 + 24));
    unint64_t v48 = *v47;
    uint64_t v49 = v47[1];
    int64_t v66 = v47[2];
    int64_t v65 = v47[3];
    int64_t v64 = v47[4];
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v40, (void (*)(void))type metadata accessor for Participant);
    uint64_t v50 = v69 == v48;
    uint64_t v3 = v35;
    unint64_t v30 = v80;
    if (!v50 || ((v68 ^ v49) & 1) != 0 || ((v67 ^ v66) & 1) != 0 || ((v45 ^ v65) & 1) != 0) {
      goto LABEL_17;
    }
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for Participant);
    uint64_t v50 = v46 == v64;
    uint64_t v6 = v74;
    uint64_t v2 = v75;
    uint64_t v25 = v73;
    if (v50)
    {
      swift_bridgeObjectRelease();
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v6, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(*v61 + 48) + v70, v62);
      goto LABEL_22;
    }
LABEL_18:
    uint64_t v28 = (v28 + 1) & v72;
  }
  while (((*(void *)(v77 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) != 0);
  swift_bridgeObjectRelease();
  uint64_t v8 = v62;
  uint64_t v4 = v61;
LABEL_21:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_216_1();
  uint64_t v81 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  int v58 = OUTLINED_FUNCTION_163();
  specialized _NativeSet.insertNew(_:at:isUnique:)(v58, v59, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v81;
  swift_bridgeObjectRelease();
  _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v6, v8);
LABEL_22:
  OUTLINED_FUNCTION_28();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for CountdownVoucher(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  uint64_t v9 = *v0;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  Hasher._finalize()();
  OUTLINED_FUNCTION_153_0();
  uint64_t v12 = v11 & ~v10;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v19 = v6;
    char v13 = ~v10;
    char v14 = *(void *)(v20 + 72);
    while (1)
    {
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v9 + 48) + v14 * v12, v1);
      uint64_t v15 = static UUID.== infix(_:_:)();
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for CountdownVoucher);
      if (v15) {
        break;
      }
      uint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v0;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v4, (void (*)(void))type metadata accessor for CountdownVoucher);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(*v0 + 48) + v14 * v12, v19);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v4, v1);
    uint64_t v21 = *v2;
    void *v2 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)(v1, v12, isUniquelyReferenced_nonNull_native);
    void *v2 = v21;
    swift_bridgeObjectRelease();
    uint64_t v17 = OUTLINED_FUNCTION_39();
    _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v17, v18);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t OUTLINED_FUNCTION_146_0()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_146_1(uint64_t result)
{
  *(void *)(v1 + 112) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_146_2(uint64_t a1)
{
  v1[8] = a1;
  v1[4] = v2;
  v1[5] = v3;
  return String.init(format:_:)();
}

uint64_t OUTLINED_FUNCTION_146_3()
{
  return outlined destroy of Participant.ScreenInfo(v0 + 160);
}

void *OUTLINED_FUNCTION_146_5(void *result)
{
  return outlined consume of Participant.RemoteIdentifiers?(result);
}

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for RecentsCallItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    specialized _NativeSet.resize(capacity:)();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    specialized _NativeSet.copyAndResize(capacity:)();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v27 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11);
        static RecentsCallItem.== infix(_:_:)();
        char v21 = v20;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v11, (void (*)(void))type metadata accessor for RecentsCallItem);
        if (v21) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  specialized _NativeSet.copy()();
LABEL_14:
  uint64_t v22 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(a1, *(void *)(v22 + 48) + *(void *)(v14 + 72) * a2);
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (!v25)
  {
    *(void *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(char *, uint64_t);
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  unint64_t v29 = a1;
  uint64_t v5 = *(void *)(*v3 + 16);
  uint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v6 > v5)
    {
      specialized _NativeSet.copy()();
      goto LABEL_12;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = type metadata accessor for UUID();
  lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
  uint64_t v9 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v10;
  uint64_t v27 = v7 + 56;
  uint64_t v28 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v26 = ~v10;
    uint64_t v11 = *(void **)(v8 - 8);
    unint64_t v12 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    unint64_t v13 = v11[8];
    uint64_t v14 = v11[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v11 + 1);
    do
    {
      MEMORY[0x1F4188790](v9);
      v12((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v28 + 48) + v14 * a2, v8);
      lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
      Swift::Int v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v9 = (*v15)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v16) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v26;
    }
    while (((*(void *)(v27 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v17 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v18 = *(void *)(v17 + 48);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * a2, v29, v19);
  char v21 = *(void *)(v17 + 16);
  uint64_t v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v17 + 16) = v23;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ConversationControlsAction();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    specialized _NativeSet.resize(capacity:)();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    specialized _NativeSet.copyAndResize(capacity:)();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    ConversationControlsAction.hash(into:)();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v27 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11);
        static ConversationControlsAction.== infix(_:_:)();
        char v21 = v20;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v11, (void (*)(void))type metadata accessor for ConversationControlsAction);
        if (v21) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  specialized _NativeSet.copy()();
LABEL_14:
  uint64_t v22 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(a1, *(void *)(v22 + 48) + *(void *)(v14 + 72) * a2);
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (!v25)
  {
    *(void *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  unsigned char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  int v41;
  unsigned __int8 *v42;
  uint64_t v43;
  int v44;
  int v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  unsigned char v52[4];
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned char *v69;

  uint64_t v67 = type metadata accessor for Participant(0);
  uint64_t v60 = *(void *)(v67 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v67);
  uint64_t v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unint64_t v13 = &v52[-v12];
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  Swift::Int v16 = &v52[-v15];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = &v52[-v18];
  char v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = &v52[-v21];
  MEMORY[0x1F4188790](v20);
  BOOL v25 = &v52[-v24];
  int64_t v61 = v3;
  uint64_t v26 = *(void *)(*v3 + 16);
  uint64_t v27 = *(void *)(*v3 + 24);
  if (v27 <= v26 || (a3 & 1) == 0)
  {
    uint64_t v68 = v23;
    if (a3)
    {
      uint64_t v28 = v61;
      specialized _NativeSet.resize(capacity:)();
    }
    else
    {
      if (v27 > v26)
      {
        specialized _NativeSet.copy()();
        goto LABEL_25;
      }
      uint64_t v28 = v61;
      specialized _NativeSet.copyAndResize(capacity:)();
    }
    unint64_t v29 = *v28;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
    dispatch thunk of Hashable.hash(into:)();
    unint64_t v30 = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v29 + 32);
    a2 = v30 & ~v31;
    int64_t v65 = v29 + 56;
    int64_t v66 = v29;
    if ((*(void *)(v29 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v63 = ~v31;
      int64_t v64 = v13;
      uint64_t v62 = *(void *)(v60 + 72);
      long long v69 = v9;
      while (1)
      {
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v66 + 48) + v62 * a2, (uint64_t)v25);
        static Participant.State.== infix(_:_:)();
        uint64_t v33 = v32;
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v25, (uint64_t)v22);
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(a1, (uint64_t)v19);
        if ((v33 & 1) == 0) {
          break;
        }
        uint64_t v34 = static UUID.== infix(_:_:)();
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v25, (uint64_t)v16);
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(a1, (uint64_t)v13);
        if ((v34 & 1) == 0) {
          goto LABEL_21;
        }
        uint64_t v35 = v67;
        uint64_t v36 = *(void *)&v16[*(int *)(v67 + 28)] != 0;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
        LOBYTE(v35) = *(void *)&v13[*(int *)(v35 + 28)] == 0;
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
        uint64_t v37 = v36 ^ v35;
        uint64_t v38 = v68;
        uint64_t v9 = v69;
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v25, v68);
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(a1, (uint64_t)v9);
        if ((v37 & 1) == 0) {
          goto LABEL_22;
        }
        uint64_t v39 = v67;
        unint64_t v40 = (unsigned __int8 *)(v38 + *(int *)(v67 + 24));
        uint64_t v41 = *v40;
        int v58 = v40[1];
        uint64_t v59 = v41;
        uint64_t v57 = v40[2];
        uint64_t v55 = v40[3];
        uint64_t v53 = v40[4];
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v38, (void (*)(void))type metadata accessor for Participant);
        uint64_t v42 = &v9[*(int *)(v39 + 24)];
        LODWORD(v39) = *v42;
        unint64_t v43 = (uint64_t)v9;
        uint64_t v44 = v42[1];
        uint64_t v56 = v42[2];
        uint64_t v54 = v42[3];
        uint64_t v45 = v42[4];
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v43, (void (*)(void))type metadata accessor for Participant);
        if (v59 == v39 && ((v58 ^ v44) & 1) == 0 && ((v57 ^ v56) & 1) == 0 && ((v55 ^ v54) & 1) == 0)
        {
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v25, (void (*)(void))type metadata accessor for Participant);
          uint64_t v46 = v53 == v45;
          unint64_t v13 = v64;
          if (v46) {
            goto LABEL_28;
          }
          goto LABEL_24;
        }
LABEL_23:
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v25, (void (*)(void))type metadata accessor for Participant);
        unint64_t v13 = v64;
LABEL_24:
        a2 = (a2 + 1) & v63;
        uint64_t v9 = v69;
        if (((*(void *)(v65 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_25;
        }
      }
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v25, (uint64_t)v16);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(a1, (uint64_t)v13);
LABEL_21:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      uint64_t v38 = v68;
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v25, v68);
      _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(a1, (uint64_t)v9);
LABEL_22:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v38, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_23;
    }
  }
LABEL_25:
  uint64_t v47 = *v61;
  *(void *)(*v61 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(a1, *(void *)(v47 + 48) + *(void *)(v60 + 72) * a2);
  uint64_t v49 = *(void *)(v47 + 16);
  uint64_t v50 = __OFADD__(v49, 1);
  int v51 = v49 + 1;
  if (v50)
  {
    __break(1u);
LABEL_28:
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v47 + 16) = v51;
  }
  return result;
}

{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  uint64_t v7 = type metadata accessor for CountdownVoucher(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v27 = v3;
  uint64_t v28 = a1;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    unint64_t v13 = v8;
    goto LABEL_14;
  }
  if (a3)
  {
    specialized _NativeSet.resize(capacity:)();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    specialized _NativeSet.copyAndResize(capacity:)();
LABEL_8:
    uint64_t v14 = *v3;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BAF0]);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v15 = Hasher._finalize()();
    Swift::Int v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      unint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10);
        uint64_t v19 = static UUID.== infix(_:_:)();
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v10, (void (*)(void))type metadata accessor for CountdownVoucher);
        if (v19) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  unint64_t v13 = v8;
  specialized _NativeSet.copy()();
LABEL_14:
  char v20 = v28;
  char v21 = *v27;
  *(void *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v20, *(void *)(v21 + 48) + *(void *)(v13 + 72) * a2);
  uint64_t v23 = *(void *)(v21 + 16);
  uint64_t v24 = __OFADD__(v23, 1);
  BOOL v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void specialized _NativeSet.resize(capacity:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = OUTLINED_FUNCTION_89();
  type metadata accessor for RecentsCallItem(v3);
  OUTLINED_FUNCTION_4();
  uint64_t v34 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_187();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<RecentsCallItem>);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v6)
  {
    OUTLINED_FUNCTION_216();
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    uint64_t v10 = v9 & v8;
    int64_t v32 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v1 + 56;
    swift_retain();
    int64_t v12 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    OUTLINED_FUNCTION_307();
    for (int64_t i = v13 | (v12 << 6); ; int64_t i = v21 + (v12 << 6))
    {
      uint64_t v22 = *(void *)(v34 + 72);
      outlined init with take of Collaboration(*(void *)(v0 + 48) + v22 * i, v2);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      unint64_t v23 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v1 + 32));
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v28)
          {
            if (v25) {
              break;
            }
          }
          if (v26 == v27) {
            uint64_t v26 = 0;
          }
          if (*(void *)(v11 + 8 * v26) != -1)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_33:
      OUTLINED_FUNCTION_174_0(v24);
      outlined init with take of Collaboration(v2, v30 + v29 * v22);
      OUTLINED_FUNCTION_68_5();
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      if (__OFADD__(v12, 1)) {
        goto LABEL_41;
      }
      OUTLINED_FUNCTION_306();
      if (v15 == v16) {
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_318();
      int64_t v12 = v17;
      if (!v18)
      {
        int64_t v12 = v17 + 1;
        if (v17 + 1 >= v32) {
          goto LABEL_35;
        }
        if (!*(void *)(v33 + 8 * v12))
        {
          int64_t v12 = v17 + 2;
          if (v17 + 2 >= v32) {
            goto LABEL_35;
          }
          if (!*(void *)(v33 + 8 * v12))
          {
            OUTLINED_FUNCTION_306();
            if (v15 == v16)
            {
LABEL_35:
              swift_release();
              OUTLINED_FUNCTION_46_11();
              if (v15 ^ v16 | v28) {
                OUTLINED_FUNCTION_316(v31);
              }
              else {
                OUTLINED_FUNCTION_322(v31);
              }
              *(void *)(v0 + 16) = 0;
              break;
            }
            OUTLINED_FUNCTION_318();
            if (!v20)
            {
              while (1)
              {
                int64_t v12 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v12 >= v32) {
                  goto LABEL_35;
                }
                ++v19;
                if (*(void *)(v33 + 8 * v12)) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v12 = v19;
          }
        }
      }
LABEL_22:
      OUTLINED_FUNCTION_320();
    }
  }
  swift_release();
  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_28();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void v37[2];
  int64_t v38;
  void *v39;
  void *v40;
  int64_t v41;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UUID>);
  OUTLINED_FUNCTION_362();
  uint64_t v4 = v3;
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  if (*(void *)(v2 + 16))
  {
    uint64_t v39 = (void *)(v2 + 56);
    OUTLINED_FUNCTION_325();
    uint64_t v8 = v7 & v6;
    v37[1] = v1;
    uint64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v10 = v5 + 56;
    swift_retain();
    uint64_t v11 = 0;
    if (!v8) {
      goto LABEL_4;
    }
LABEL_3:
    int64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    uint64_t v41 = v11;
    for (int64_t i = v12 | (v11 << 6); ; int64_t i = __clz(__rbit64(v15)) + (v16 << 6))
    {
      uint64_t v18 = type metadata accessor for UUID();
      unint64_t v40 = v37;
      OUTLINED_FUNCTION_4();
      uint64_t v20 = v19;
      MEMORY[0x1F4188790](v21);
      OUTLINED_FUNCTION_60();
      uint64_t v22 = v2;
      unint64_t v23 = *(void *)(v2 + 48);
      unint64_t v24 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32);
      char v25 = *(void *)(v20 + 72);
      v24(v4, v23 + v25 * i, v18);
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
      dispatch thunk of Hashable._rawHashValue(seed:)();
      OUTLINED_FUNCTION_246();
      if (((v28 << v27) & ~*(void *)(v10 + 8 * v26)) == 0)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v33)
          {
            if (v30) {
              break;
            }
          }
          if (v31 == v32) {
            uint64_t v31 = 0;
          }
          if (*(void *)(v10 + 8 * v31) != -1)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_28:
      *(void *)(v10 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      v24(*(void *)(v5 + 48) + v29 * v25, v4, v18);
      OUTLINED_FUNCTION_68_5();
      uint64_t v11 = v41;
      uint64_t v2 = v22;
      if (v8) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_36;
      }
      if (v14 >= v38) {
        goto LABEL_30;
      }
      char v15 = v39[v14];
      char v16 = v11 + 1;
      if (!v15)
      {
        char v16 = v11 + 2;
        if (v11 + 2 >= v38) {
          goto LABEL_30;
        }
        char v15 = v39[v16];
        if (!v15)
        {
          char v16 = v11 + 3;
          if (v11 + 3 >= v38) {
            goto LABEL_30;
          }
          char v15 = v39[v16];
          if (!v15)
          {
            int64_t v17 = v11 + 4;
            if (v11 + 4 >= v38)
            {
LABEL_30:
              swift_release();
              uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
              if (v34 > 63)
              {
                uint64_t v35 = OUTLINED_FUNCTION_248_0();
                specialized UnsafeMutablePointer.assign(repeating:count:)(v35, v36, v39);
              }
              else
              {
                *uint64_t v39 = -1 << v34;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            char v15 = v39[v17];
            if (!v15)
            {
              while (1)
              {
                char v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v16 >= v38) {
                  goto LABEL_30;
                }
                char v15 = v39[v16];
                ++v17;
                if (v15) {
                  goto LABEL_17;
                }
              }
            }
            char v16 = v11 + 4;
          }
        }
      }
LABEL_17:
      uint64_t v8 = (v15 - 1) & v15;
      uint64_t v41 = v16;
    }
  }
  swift_release();
  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_28();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  void *v30;

  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<String>);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v3)
  {
    OUTLINED_FUNCTION_148_1();
    uint64_t v30 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1 << v4);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v8 = v7 & v5;
    uint64_t v9 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    uint64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    OUTLINED_FUNCTION_151_1();
    while (1)
    {
      int64_t v19 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v11);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      Hasher._finalize()();
      OUTLINED_FUNCTION_97_1();
      if (v22)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v22)
          {
            if (v24) {
              break;
            }
          }
          OUTLINED_FUNCTION_245();
          if (!v22)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_29:
      *(void *)(v2 + 56 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      char v25 = (void *)(*(void *)(v2 + 48) + 16 * v23);
      *char v25 = v20;
      v25[1] = v21;
      OUTLINED_FUNCTION_68_5();
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_37;
      }
      if (v12 >= v9) {
        goto LABEL_31;
      }
      ++v10;
      if (!v30[v12])
      {
        uint64_t v10 = v12 + 1;
        if (v12 + 1 >= v9) {
          goto LABEL_31;
        }
        OUTLINED_FUNCTION_313();
        if (!v14)
        {
          uint64_t v10 = v13 + 2;
          if (v13 + 2 >= v9) {
            goto LABEL_31;
          }
          OUTLINED_FUNCTION_313();
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_31:
              swift_release();
              OUTLINED_FUNCTION_46_11();
              if (v27 ^ v28 | v22) {
                OUTLINED_FUNCTION_315(v26, v29, (uint64_t)v0, v30);
              }
              else {
                OUTLINED_FUNCTION_323(v26, v29, (uint64_t)v0, v30);
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            if (!v30[v17])
            {
              while (1)
              {
                uint64_t v10 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_38;
                }
                if (v10 >= v9) {
                  goto LABEL_31;
                }
                OUTLINED_FUNCTION_312();
                if (v18) {
                  goto LABEL_20;
                }
              }
            }
            uint64_t v10 = v17;
          }
        }
      }
LABEL_20:
      OUTLINED_FUNCTION_150_0();
    }
  }
  swift_release();
  void *v0 = v2;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_89();
  uint64_t v4 = type metadata accessor for ConversationControlsAction();
  uint64_t v5 = OUTLINED_FUNCTION_1(v4);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_187();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<ConversationControlsAction>);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v8)
  {
    OUTLINED_FUNCTION_148_1();
    uint64_t v26 = v9;
    OUTLINED_FUNCTION_203();
    char v25 = v10;
    swift_retain();
    uint64_t v11 = 0;
    if (!v2) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_151_1();
    while (1)
    {
      char v16 = *(void *)(v7 + 72);
      outlined init with take of Collaboration(*(void *)(v0 + 48) + v16 * v12, v3);
      Hasher.init(_seed:)();
      ConversationControlsAction.hash(into:)();
      Hasher._finalize()();
      OUTLINED_FUNCTION_97_1();
      if (v17)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v17)
          {
            if (v19) {
              break;
            }
          }
          OUTLINED_FUNCTION_245();
          if (!v17)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_26:
      *(void *)(v1 + 56 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      outlined init with take of Collaboration(v3, *(void *)(v1 + 48) + v18 * v16);
      OUTLINED_FUNCTION_68_5();
      if (v2) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v13 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_34;
      }
      if (v13 >= v25) {
        goto LABEL_28;
      }
      ++v11;
      if (!v26[v13])
      {
        uint64_t v11 = v13 + 1;
        if (v13 + 1 >= v25) {
          goto LABEL_28;
        }
        if (!v26[v11])
        {
          uint64_t v11 = v13 + 2;
          if (v13 + 2 >= v25) {
            goto LABEL_28;
          }
          if (!v26[v11])
          {
            uint64_t v14 = v13 + 3;
            if (v14 >= v25)
            {
LABEL_28:
              swift_release();
              OUTLINED_FUNCTION_46_11();
              if (v21 ^ v22 | v17)
              {
                *uint64_t v26 = -1 << v20;
              }
              else
              {
                unint64_t v23 = OUTLINED_FUNCTION_248_0();
                specialized UnsafeMutablePointer.assign(repeating:count:)(v23, v24, v26);
              }
              *(void *)(v0 + 16) = 0;
              break;
            }
            if (!v26[v14])
            {
              while (1)
              {
                uint64_t v11 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_35;
                }
                if (v11 >= v25) {
                  goto LABEL_28;
                }
                OUTLINED_FUNCTION_312();
                if (v15) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v11 = v14;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_150_0();
    }
  }
  swift_release();
  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_28();
}

{
  specialized _NativeSet.resize(capacity:)();
}

{
  specialized _NativeSet.resize(capacity:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int64_t v16;
  uint64_t v17;
  int64_t i;
  char v19;
  char v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v4 = OUTLINED_FUNCTION_89();
  v5(v4);
  OUTLINED_FUNCTION_4();
  uint64_t v44 = v7;
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - v8;
  OUTLINED_FUNCTION_187();
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v10)
  {
    OUTLINED_FUNCTION_216();
    OUTLINED_FUNCTION_325();
    uint64_t v13 = v12 & v11;
    uint64_t v41 = v0;
    uint64_t v42 = (unint64_t)(v14 + 63) >> 6;
    char v15 = v3 + 7;
    swift_retain();
    char v16 = 0;
    if (!v13) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_307();
    for (int64_t i = v17 | (v16 << 6); ; int64_t i = v26 + (v16 << 6))
    {
      uint64_t v27 = v1;
      char v28 = *(void *)(v1 + 48);
      uint64_t v29 = *(void *)(v44 + 72);
      outlined init with take of Collaboration(v28 + v29 * i, (uint64_t)v9);
      Hasher.init(_seed:)();
      type metadata accessor for UUID();
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
      dispatch thunk of Hashable.hash(into:)();
      Hasher._finalize()();
      OUTLINED_FUNCTION_246();
      if (((v32 << v31) & ~v15[v30]) == 0)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v37)
          {
            if (v34) {
              break;
            }
          }
          if (v35 == v36) {
            uint64_t v35 = 0;
          }
          if (v15[v35] != -1)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_30:
      OUTLINED_FUNCTION_174_0(v33);
      outlined init with take of Collaboration((uint64_t)v9, v39 + v38 * v29);
      OUTLINED_FUNCTION_68_5();
      uint64_t v1 = v27;
      if (v13) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v16, 1)) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_306();
      if (v19 == v20) {
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_318();
      char v16 = v21;
      if (!v22)
      {
        char v16 = v21 + 1;
        if (v21 + 1 >= v42) {
          goto LABEL_32;
        }
        if (!*(void *)(v43 + 8 * v16))
        {
          char v16 = v21 + 2;
          if (v21 + 2 >= v42) {
            goto LABEL_32;
          }
          if (!*(void *)(v43 + 8 * v16))
          {
            OUTLINED_FUNCTION_306();
            if (v19 == v20)
            {
LABEL_32:
              swift_release();
              OUTLINED_FUNCTION_46_11();
              if (v19 ^ v20 | v37) {
                OUTLINED_FUNCTION_316(v40);
              }
              else {
                OUTLINED_FUNCTION_322(v40);
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            OUTLINED_FUNCTION_318();
            if (!v24)
            {
              while (1)
              {
                char v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_39;
                }
                if (v16 >= v42) {
                  goto LABEL_32;
                }
                OUTLINED_FUNCTION_312();
                if (v25) {
                  goto LABEL_19;
                }
              }
            }
            char v16 = v23;
          }
        }
      }
LABEL_19:
      OUTLINED_FUNCTION_320();
    }
  }
  swift_release();
  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_28();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<RecentsCallHandle>);
  uint64_t v2 = OUTLINED_FUNCTION_28_22();
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v4 = (void *)(v1 + 56);
    uint64_t v5 = -1;
    if (v3 < 64) {
      uint64_t v5 = ~(-1 << v3);
    }
    uint64_t v6 = v5 & *(void *)(v1 + 56);
    uint64_t v7 = (unint64_t)(v3 + 63) >> 6;
    swift_retain();
    uint64_t v8 = 0;
    if (!v6) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    for (int64_t i = v9 | (v8 << 6); ; int64_t i = __clz(__rbit64(v12)) + (v8 << 6))
    {
      specialized _NativeSet._unsafeInsertNew(_:)(*(unsigned char *)(*(void *)(v1 + 48) + 24 * i), *(void *)(*(void *)(v1 + 48) + 24 * i + 8), *(void *)(*(void *)(v1 + 48) + 24 * i + 16), v2);
      if (v6) {
        goto LABEL_5;
      }
LABEL_6:
      uint64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v11 >= v7) {
        goto LABEL_22;
      }
      int64_t v12 = v4[v11];
      ++v8;
      if (!v12)
      {
        uint64_t v8 = v11 + 1;
        if (v11 + 1 >= v7) {
          goto LABEL_22;
        }
        int64_t v12 = v4[v8];
        if (!v12)
        {
          uint64_t v8 = v11 + 2;
          if (v11 + 2 >= v7) {
            goto LABEL_22;
          }
          int64_t v12 = v4[v8];
          if (!v12)
          {
            uint64_t v13 = v11 + 3;
            if (v13 >= v7)
            {
LABEL_22:
              swift_release();
              OUTLINED_FUNCTION_46_11();
              if (v16 ^ v17 | v15)
              {
                *uint64_t v4 = -1 << v14;
              }
              else
              {
                uint64_t v18 = OUTLINED_FUNCTION_248_0();
                specialized UnsafeMutablePointer.assign(repeating:count:)(v18, v19, (void *)(v1 + 56));
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            int64_t v12 = v4[v13];
            if (!v12)
            {
              while (1)
              {
                uint64_t v8 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_28;
                }
                if (v8 >= v7) {
                  goto LABEL_22;
                }
                int64_t v12 = v4[v8];
                ++v13;
                if (v12) {
                  goto LABEL_19;
                }
              }
            }
            uint64_t v8 = v13;
          }
        }
      }
LABEL_19:
      uint64_t v6 = (v12 - 1) & v12;
    }
  }
  swift_release();
  void *v0 = v2;
  OUTLINED_FUNCTION_15_0();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  void *v26;

  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<VideoReaction>);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v4)
  {
    OUTLINED_FUNCTION_148_1();
    uint64_t v26 = v5;
    OUTLINED_FUNCTION_203();
    char v25 = v6;
    swift_retain();
    uint64_t v7 = 0;
    if (!v3) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_151_1();
    while (1)
    {
      char v16 = *(char *)(*(void *)(v1 + 48) + v8);
      Hasher.init(_seed:)();
      int64_t v17 = (void *)**((void **)&unk_1E6484080 + v16);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_281();
      uint64_t v18 = v17;
      String.hash(into:)();

      swift_bridgeObjectRelease();
      Hasher._finalize()();
      OUTLINED_FUNCTION_97_1();
      if (v19)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v19)
          {
            if (v21) {
              break;
            }
          }
          OUTLINED_FUNCTION_245();
          if (!v19)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_26:
      *(void *)(v2 + 56 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(unsigned char *)(*(void *)(v2 + 48) + v20) = v16;
      OUTLINED_FUNCTION_68_5();
      if (v3) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v9 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_34;
      }
      if (v9 >= v25) {
        goto LABEL_28;
      }
      ++v7;
      if (!v26[v9])
      {
        uint64_t v7 = v9 + 1;
        if (v9 + 1 >= v25) {
          goto LABEL_28;
        }
        OUTLINED_FUNCTION_313();
        if (!v11)
        {
          uint64_t v7 = v10 + 2;
          if (v10 + 2 >= v25) {
            goto LABEL_28;
          }
          OUTLINED_FUNCTION_313();
          if (!v13)
          {
            uint64_t v14 = v12 + 3;
            if (v14 >= v25)
            {
LABEL_28:
              swift_release();
              OUTLINED_FUNCTION_46_11();
              if (v23 ^ v24 | v19) {
                OUTLINED_FUNCTION_315(v22, (uint64_t)v0, v25, v26);
              }
              else {
                OUTLINED_FUNCTION_323(v22, (uint64_t)v0, v25, v26);
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            if (!v26[v14])
            {
              while (1)
              {
                uint64_t v7 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_35;
                }
                if (v7 >= v25) {
                  goto LABEL_28;
                }
                OUTLINED_FUNCTION_312();
                if (v15) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v7 = v14;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_150_0();
    }
  }
  swift_release();
  void *v0 = v2;
}

uint64_t outlined init with take of Collaboration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = OUTLINED_FUNCTION_90();
  v6(v5);
  return a2;
}

{
  uint64_t v4;

  uint64_t v4 = type metadata accessor for Collaboration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return type metadata accessor for RecentsCallItem(0);
}

id OUTLINED_FUNCTION_79_2()
{
  uint64_t v3 = *(void **)(v0 + 8 * v1 + 32);
  return v3;
}

uint64_t OUTLINED_FUNCTION_79_4()
{
  return *(void *)(v0 + 112);
}

void OUTLINED_FUNCTION_79_5(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_79_6()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(void *)(v1 - 224));
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_79_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_79_9()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v1, (uint64_t *)(v0 + 160));
}

double OUTLINED_FUNCTION_79_10()
{
  return *(double *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_74()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_6()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double OUTLINED_FUNCTION_71_8()
{
  return *(double *)(v0 + 152);
}

uint64_t OUTLINED_FUNCTION_181()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_181_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_389()
{
  return v0;
}

void OUTLINED_FUNCTION_223_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 248) = &a9;
}

uint64_t OUTLINED_FUNCTION_193@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_193_0()
{
  return _s15ConversationKit11ParticipantVWObTm_3();
}

uint64_t OUTLINED_FUNCTION_309()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_193_1()
{
  return 0;
}

void OUTLINED_FUNCTION_315(char a1@<W8>, uint64_t a2, uint64_t a3, void *a4)
{
  *a4 = -1 << a1;
}

uint64_t specialized UnsafeMutablePointer.assign(repeating:count:)(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

id OUTLINED_FUNCTION_243_0(void *a1)
{
  return [a1 (SEL)(v1 + 1944)];
}

char *OUTLINED_FUNCTION_243_1@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  return v1 + *(int *)(v0 + 36);
}

uint64_t OUTLINED_FUNCTION_111_3(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  *(void *)(v1 + 96) = result;
  return result;
}

void OUTLINED_FUNCTION_316(char a1@<W8>)
{
  **(void **)(v1 - 176) = -1 << a1;
}

uint64_t specialized _NativeSet.copyAndResize(capacity:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RecentsCallItem(0);
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  os_log_type_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<RecentsCallItem>);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  if (!v11) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    uint64_t v20 = *(void *)(v32 + 72);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v5 + 48) + v20 * i, (uint64_t)v4);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v4, *(void *)(v7 + 48) + v24 * v20);
    ++*(void *)(v7 + 16);
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_36;
    }
    if (v17 >= v31) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v31) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v31)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v30 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  int64_t v29;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<String>);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  os_log_type_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  uint64_t v8 = v7 & *(void *)(v2 + 56);
  uint64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  unint64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    unint64_t v18 = *v17;
    int64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      unint64_t v24 = 0;
      char v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        unint64_t v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        BOOL v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      unint64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        unint64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v8 = (v15 - 1) & v15;
  }
  char v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    unint64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    unint64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConversationControlsAction();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<ConversationControlsAction>);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  int64_t v31 = v6 + 56;
  if (v9 < 64) {
    unint64_t v11 = ~(-1 << v9);
  }
  else {
    unint64_t v11 = -1;
  }
  uint64_t v12 = v11 & v10;
  uint64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  unint64_t v15 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  char v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = *(void *)(v3 + 72);
    _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(*(void *)(v6 + 48) + v21 * i, (uint64_t)v5);
    Hasher.init(_seed:)();
    ConversationControlsAction.hash(into:)();
    uint64_t result = Hasher._finalize()();
    unint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) == 0)
    {
      unint64_t v26 = 0;
      BOOL v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        uint64_t v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v24);
        if (v29 != -1)
        {
          char v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    char v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t result = _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v5, *(void *)(v8 + 48) + v25 * v21);
    ++*(void *)(v8 + 16);
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    unint64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_36;
    }
    if (v18 >= v32) {
      goto LABEL_32;
    }
    int64_t v19 = *(void *)(v31 + 8 * v18);
    ++v15;
    if (!v19)
    {
      unint64_t v15 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_32;
      }
      int64_t v19 = *(void *)(v31 + 8 * v15);
      if (!v19)
      {
        unint64_t v15 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_32;
        }
        int64_t v19 = *(void *)(v31 + 8 * v15);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v12 = (v19 - 1) & v19;
  }
  uint64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_34;
  }
  int64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    unint64_t v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    unint64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_32;
    }
    int64_t v19 = *(void *)(v31 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  Swift::UInt v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<BezelEffect>);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  os_log_type_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  uint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    int64_t v17 = *(unsigned __int8 *)(*(void *)(v2 + 48) + i);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v17);
    uint64_t result = Hasher._finalize()();
    unint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    int64_t v19 = result & ~v18;
    uint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      unint64_t v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        unint64_t v24 = v20 == v23;
        if (v20 == v23) {
          uint64_t v20 = 0;
        }
        v22 |= v24;
        char v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          uint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(unsigned char *)(*(void *)(v4 + 48) + v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      uint64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        uint64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v9 = (v15 - 1) & v15;
  }
  char v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    uint64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  os_log_type_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  uint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    int64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = static Hasher._hash(seed:_:)();
    unint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    int64_t v19 = result & ~v18;
    uint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      unint64_t v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        unint64_t v24 = v20 == v23;
        if (v20 == v23) {
          uint64_t v20 = 0;
        }
        v22 |= v24;
        char v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          uint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      uint64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        uint64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v9 = (v15 - 1) & v15;
  }
  char v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    uint64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<VideoReaction>);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  os_log_type_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(v2 + 56);
  uint64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  uint64_t v10 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    char v16 = *(char *)(*(void *)(v2 + 48) + i);
    Hasher.init(_seed:)();
    int64_t v17 = (void *)**((void **)&unk_1E6484CE8 + v16);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;
    String.hash(into:)();

    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    int64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v20 = result & ~v19;
    uint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      unint64_t v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        char v25 = v21 == v24;
        if (v21 == v24) {
          uint64_t v21 = 0;
        }
        v23 |= v25;
        unint64_t v26 = *(void *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v4 + 48) + v22) = v16;
    ++*(void *)(v4 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    uint64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v29) {
      goto LABEL_32;
    }
    int64_t v14 = *(void *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      uint64_t v10 = v13 + 1;
      if (v13 + 1 >= v29) {
        goto LABEL_32;
      }
      int64_t v14 = *(void *)(v28 + 8 * v10);
      if (!v14)
      {
        uint64_t v10 = v13 + 2;
        if (v13 + 2 >= v29) {
          goto LABEL_32;
        }
        int64_t v14 = *(void *)(v28 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v7 = (v14 - 1) & v14;
  }
  unint64_t v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_34;
  }
  int64_t v14 = *(void *)(v28 + 8 * v15);
  if (v14)
  {
    uint64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_32;
    }
    int64_t v14 = *(void *)(v28 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  os_log_type_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  uint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    int64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = static Hasher._hash(seed:_:)();
    unint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    int64_t v19 = result & ~v18;
    uint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      unint64_t v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        unint64_t v24 = v20 == v23;
        if (v20 == v23) {
          uint64_t v20 = 0;
        }
        v22 |= v24;
        char v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          uint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      uint64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        uint64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v9 = (v15 - 1) & v15;
  }
  char v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    uint64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  Swift::UInt v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<InCallControlsState>);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  os_log_type_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  uint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    int64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v17);
    uint64_t result = Hasher._finalize()();
    unint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    int64_t v19 = result & ~v18;
    uint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      unint64_t v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        unint64_t v24 = v20 == v23;
        if (v20 == v23) {
          uint64_t v20 = 0;
        }
        v22 |= v24;
        char v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          uint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      uint64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        uint64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v9 = (v15 - 1) & v15;
  }
  char v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    uint64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

BOOL specialized == infix<A>(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

{
  return qword_1C3769568[a1] == qword_1C3769568[a2];
}

uint64_t getEnumTagSinglePayload for ActivityType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t type metadata instantiation function for StateHolder()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(uint64_t a1)
{
  return closure #1 in closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(a1);
}

{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  return UIMutableTraits.userInterfaceStyle.setter();
}

unint64_t destroy for RemoteControlState(unint64_t *a1)
{
  return outlined consume of RemoteControlState(*a1);
}

ValueMetadata *type metadata accessor for RecentsCollectionViewSection()
{
  return &type metadata for RecentsCollectionViewSection;
}

void partial apply for closure #1 in RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)(uint64_t a1)
{
  closure #1 in RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)(a1, v1);
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.supplementaryViewProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return closure #1 in closure #1 in RecentsListViewController.supplementaryViewProvider.getter(a1, a2, a3, a4);
}

char *RecentsCollectionViewCell.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t v1 = type metadata accessor for RecentsListItemLocation();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  int v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_joinButton) = 0;
  int v5 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_doubleTapHandler);
  uint64_t v6 = type metadata accessor for RecentsCollectionViewCell();
  *int v5 = 0;
  v5[1] = 0;
  v13[0] = v0;
  v13[1] = v6;
  double v7 = OUTLINED_FUNCTION_6_2();
  uint64_t v10 = (char *)objc_msgSendSuper2(v8, v9, v7);
  id v11 = objc_msgSend(v10, sel_contentView);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD9E0], v1);
  type metadata accessor for RecentsListItemViewHelper();
  swift_allocObject();
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper] = RecentsListItemViewHelper.init(parentView:location:)();
  swift_release();
  RecentsCollectionViewCell.configureRootView()();

  return v10;
}

void RecentsCollectionViewCell.configureRootView()()
{
  id v1 = objc_msgSend(self, sel_secondarySystemFillColor);
  id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.3);

  objc_msgSend(v0, sel_setBackgroundColor_, v2);
  objc_msgSend(v0, sel_setOpaque_, 0);
  RecentsCollectionViewCell.configureSelectedBackgroundView()();
}

Swift::Void __swiftcall RecentsCollectionViewCell.configureSelectedBackgroundView()()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_bounds);
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, v3, v5, v7, v9);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.607843137, 0.607843137, 0.607843137, 0.72);
  objc_msgSend(v11, sel_setBackgroundColor_, v10);

  objc_msgSend(v11, sel__setDrawsAsBackdropOverlayWithBlendMode_, 3);
  objc_msgSend(v0, sel_setSelectedBackgroundView_, v11);
}

Swift::Void __swiftcall RecentsCollectionViewCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for RecentsCollectionViewCell();
  objc_msgSendSuper2(&v3, sel_traitCollectionDidChange_, isa);
  if (*(void *)&v1[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper])
  {
    swift_retain();
    dispatch thunk of RecentsListItemViewHelper.updateForParentTraitCollectionDidChange()();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall RecentsCollectionViewCell.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentsCollectionViewCell();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  if (*(void *)&v0[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper])
  {
    swift_retain();
    objc_msgSend(v0, sel_isEditing);
    id v1 = objc_msgSend(v0, sel_trailingAccessoryView);
    dispatch thunk of RecentsListItemViewHelper.layout(shouldHideTrailingAccessoryView:trailingAccessoryView:)();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for RecentsCollectionViewCell()
{
  return self;
}

CGSize __swiftcall RecentsCollectionViewCell.sizeThatFits(_:)(CGSize result)
{
  if (*(void *)&v1[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper])
  {
    swift_retain();
    objc_msgSend(v1, sel_isEditing);
    id v2 = objc_msgSend(v1, sel_trailingAccessoryView);
    dispatch thunk of RecentsListItemViewHelper.sizeThatFits(_:shouldHideTrailingAccessoryView:trailingAccessoryView:)();
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    swift_release();

    result.width = v4;
    result.height = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void RecentsCollectionViewCell.detailAccessoryButton.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper))
  {
    swift_retain();
    dispatch thunk of RecentsListItemViewHelper.detailAccessoryButton.getter();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t RecentsCollectionViewCell.trailingAccessoryView.getter()
{
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  id v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
  if (v2)
  {
    double v3 = v2;
    id v4 = objc_msgSend(v2, sel_superview);

    if (v4) {
      return (uint64_t)v3;
    }
  }
  CGFloat v6 = *(uint64_t (**)(void))((*v1 & *v0) + 0xB0);
  return v6();
}

void *RecentsCollectionViewCell.joinButton.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  id v2 = v1;
  return v1;
}

void type metadata accessor for RemoteControlState()
{
}

ValueMetadata *type metadata accessor for ScreenSharingInteractionActivity()
{
  return &type metadata for ScreenSharingInteractionActivity;
}

uint64_t protocol witness for RecentsCallItemProviding.ttyType.getter in conformance RecentsCallItem()
{
  return RecentsCallItem.ttyType.getter();
}

uint64_t RecentsCallItem.ttyType.getter()
{
  return RecentsCallItem.ttyType.getter((SEL *)&selRef_ttyType);
}

uint64_t protocol witness for RecentsCallItemProviding.verificationStatus.getter in conformance RecentsCallItem()
{
  return RecentsCallItem.verificationStatus.getter();
}

uint64_t RecentsCallItem.ttyType.getter(SEL *a1)
{
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  double v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_62();
  uint64_t v8 = OUTLINED_FUNCTION_45_9();
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v8, v9);
  swift_getEnumCaseMultiPayload();
  OUTLINED_FUNCTION_171_1();
  if (v10)
  {
    _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0((uint64_t)v5, v1);
    id v11 = *(void **)(v1 + *(int *)(v6 + 24));
    id v12 = v11;
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
    if (v11)
    {
      [v12 *a1];
    }
  }
  else
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v5, (void (*)(void))type metadata accessor for RecentsCallItemType);
  }
  return OUTLINED_FUNCTION_209_1();
}

uint64_t RecentsCallItem.verificationStatus.getter()
{
  return RecentsCallItem.ttyType.getter((SEL *)&selRef_verificationStatus);
}

ValueMetadata *type metadata accessor for ScreenSharingStateMonitor.Observation()
{
  return &type metadata for ScreenSharingStateMonitor.Observation;
}

uint64_t type metadata accessor for ScreenSharingInteractionSession()
{
  return self;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t objectdestroy_66Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_133_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_133_4(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_133_5(uint64_t a1, Swift::Float a2)
{
  closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v2, a2);
}

uint64_t OUTLINED_FUNCTION_133_6()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t @nonobjc CNAvatarViewController.contacts.getter()
{
  id v1 = objc_msgSend(v0, sel_contacts);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(UIView *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for RecentsCallItem(0);
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v64 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1C8776240](a4 + 16);
  if (v16)
  {
    int64_t v17 = (void *)v16;
    _s15ConversationKit15RecentsCallItemVWOcTm_0(a3, (uint64_t)v15, (void (*)(void))type metadata accessor for RecentsCallItemType);
    unsigned int v18 = swift_getEnumCaseMultiPayload() - 1;
    uint64_t v19 = outlined destroy of RecentsCallItem((uint64_t)v15, (void (*)(void))type metadata accessor for RecentsCallItemType);
    if (v18 < 2)
    {
LABEL_14:

      return;
    }
    uint64_t v20 = (void *)MEMORY[0x1E4FBC8C8];
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v17) + 0x378))(v19);
    uint64_t v21 = type metadata accessor for UIBackgroundConfiguration();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v21);
    uint64_t v22 = MEMORY[0x1C8773CE0](v12);
    unint64_t v23 = *(uint64_t (**)(void))((*v20 & (uint64_t)a1->super.super.isa) + 0x80);
    unint64_t v24 = (void *)((uint64_t (*)(uint64_t))v23)(v22);

    if (!v24)
    {
      char v25 = *(void **)((char *)v17 + OBJC_IVAR___FTRecentsListViewController_avatarViewControllerSettings);
      if (v25)
      {
        id v26 = objc_allocWithZone(MEMORY[0x1E4F1BB40]);
        id v63 = v25;
        id v27 = objc_msgSend(v26, sel_initWithSettings_, v63);
        uint64_t v28 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v17) + 0x480))();
        objc_msgSend(v27, sel_setObjectViewControllerDelegate_, v28);

        uint64_t v29 = *(void (**)(id))((*MEMORY[0x1E4FBC8C8] & (uint64_t)a1->super.super.isa) + 0x88);
        uint64_t v61 = (*MEMORY[0x1E4FBC8C8] & (uint64_t)a1->super.super.isa) + 136;
        uint64_t v62 = v29;
        id v60 = v27;
        v62(v27);
      }
    }
    uint64_t v30 = v23();
    if (v30)
    {
      int64_t v31 = (void *)v30;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v31, sel_setContacts_, isa);
    }
    RecentsCollectionViewCell.configure(with:)(a3);
    RecentsCallItem.hasVideoMessage.getter(v33, v34, v35, v36, v37, v38, v39, v40, (uint64_t)v60, v61, (uint64_t)v62, (uint64_t)v63, v64, v65, v66, v67, v68, v69);
    if (v41)
    {
      uint64_t v49 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s15ConversationKit15RecentsCallItemVWOcTm_0(a3, (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for RecentsCallItem);
      unint64_t v50 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v49;
      uint64_t v52 = v51 + v50;
      uint64_t v53 = partial apply for closure #1 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls();
    }
    else
    {
      RecentsCallItem.hasAudioMessage.getter(v41, v42, v43, v44, v45, v46, v47, v48, (uint64_t)v60, v61, (uint64_t)v62, (uint64_t)v63, v64, v65, v66, v67, v68, v69);
      if ((v54 & 1) == 0)
      {
LABEL_13:
        uint64_t v59 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & (uint64_t)a1->super.super.isa) + 0xB0))();
        objc_msgSend(v59, sel_addTarget_action_forControlEvents_, v17, sel_didSelectAccessoryViewForRecentCallWithSender_, 64);

        RecentsListViewController.prepareSubviewsForFilter(view:)(a1);
        goto LABEL_14;
      }
      uint64_t v55 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s15ConversationKit15RecentsCallItemVWOcTm_0(a3, (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for RecentsCallItem);
      unint64_t v56 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v55;
      uint64_t v52 = v57 + v56;
      uint64_t v53 = partial apply for closure #2 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls();
    }
    uint64_t v58 = (uint64_t)v53;
    _s15ConversationKit15RecentsCallItemVWObTm_0((uint64_t)v9, v52, (void (*)(void))type metadata accessor for RecentsCallItem);
    RecentsCollectionViewCell.messageTapHandler.setter(v58);
    goto LABEL_13;
  }
}

Swift::Void __swiftcall RecentsListViewController.prepareSubviewsForFilter(view:)(UIView *view)
{
  uint64_t v2 = [(UIView *)view subviews];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_9;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      uint64_t v6 = (UIView *)MEMORY[0x1C87744F0](i, v3);
    }
    else {
      uint64_t v6 = (UIView *)*(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    RecentsListViewController.prepareSubviewsForFilter(view:)(v6);
  }
LABEL_9:
  swift_bridgeObjectRelease();
  uint64_t v8 = [(UIView *)view layer];
  [(CALayer *)v8 setAllowsGroupBlending:0];

  [(CALayer *)[(UIView *)view layer] setAllowsGroupOpacity:0];
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for NSObject(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void RecentsCollectionViewCell.avatarViewController.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper))
  {
    swift_retain();
    id v1 = (void *)dispatch thunk of RecentsListItemViewHelper.avatarViewController.getter();
    swift_release();
    if (v1)
    {
      self;
      if (!swift_dynamicCastObjCClass()) {
    }
      }
  }
  else
  {
    __break(1u);
  }
}

void RecentsListViewController.cellBackgroundConfiguration.getter()
{
  OUTLINED_FUNCTION_14();
  unint64_t v3 = v2;
  double v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(v8);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_119_0();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = v0 + *v7;
  OUTLINED_FUNCTION_2();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v17, (uint64_t)v16, v9);
  uint64_t v18 = v5(0);
  OUTLINED_FUNCTION_33_0((uint64_t)v16, 1, v18);
  if (v19)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v16, v9);
    v3(v0);
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_124();
    v20();
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of Participant?(v1, v17, v9);
    swift_endAccess();
  }
  else
  {
    OUTLINED_FUNCTION_48();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v11, v16, v18);
  }
  OUTLINED_FUNCTION_15_0();
}

{
  RecentsListViewController.cellBackgroundConfiguration.getter();
}

uint64_t outlined init with copy of RecentCallDetailControllerFactoryProtocol?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v4();
  return v3;
}

void OUTLINED_FUNCTION_149_1()
{
  AttributedString.init(cnkLocalized:)();
}

uint64_t OUTLINED_FUNCTION_149_2()
{
  void *v0 = v1;
  return 1;
}

uint64_t OUTLINED_FUNCTION_149_3()
{
  return v0;
}

void OUTLINED_FUNCTION_149_4()
{
  closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

id closure #1 in RecentsListViewController.cellProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = a3;
  uint64_t v119 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v115 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v120 = (uint64_t)&v107 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v113 = (uint64_t)&v107 - v17;
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>);
  uint64_t v118 = *(void *)(v121 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v121);
  uint64_t v114 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v107 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v116 = (char *)&v107 - v24;
  MEMORY[0x1F4188790](v23);
  int64_t v112 = (char *)&v107 - v25;
  uint64_t v26 = type metadata accessor for RecentCallRecentItemMetadata(0);
  MEMORY[0x1F4188790](v26);
  uint64_t v117 = (uint64_t)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for RecentsCallItemType(0);
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  int64_t v31 = (char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (void **)((char *)&v107 - v32);
  uint64_t v34 = a4 + 16;
  swift_beginAccess();
  uint64_t v35 = (void *)MEMORY[0x1C8776240](a4 + 16);
  if (!v35) {
    return 0;
  }
  uint64_t v36 = v35;
  unint64_t v109 = v8;
  uint64_t v110 = a2;
  uint64_t v37 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v38 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v35) + 0x318))();

  swift_beginAccess();
  uint64_t v39 = (void *)MEMORY[0x1C8776240](v34);
  if (!v39) {
    goto LABEL_23;
  }
  uint64_t v40 = v39;
  uint64_t v111 = v38;
  uint64_t v41 = (*(uint64_t (**)(void))((*v37 & *v39) + 0x318))();

  uint64_t v42 = (void *)(*(uint64_t (**)(void))(*(void *)v41 + 168))();
  swift_release();
  swift_beginAccess();
  uint64_t v43 = MEMORY[0x1C8776240](v34);
  if (v43)
  {
    uint64_t v44 = (char *)v43;
    uint64_t v45 = v122;
    _s15ConversationKit15RecentsCallItemVWOcTm_0(v122, (uint64_t)v33, (void (*)(void))type metadata accessor for RecentsCallItemType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v74 = (uint64_t)&v44[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemOngoingCalls];
        swift_beginAccess();
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v74, (uint64_t)v14, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
        uint64_t v75 = v121;
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v121) != 1)
        {
          uint64_t v68 = v44;
          id v108 = v42;
          uint64_t v91 = v45;
          uint64_t v92 = v118;
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v22, v14, v75);
          uint64_t v93 = v75;
          uint64_t v94 = (uint64_t)v109;
          _s15ConversationKit15RecentsCallItemVWOcTm_0(v91, (uint64_t)v109, (void (*)(void))type metadata accessor for RecentsCallItem);
          uint64_t v95 = type metadata accessor for RecentsCallItem(0);
          __swift_storeEnumTagSinglePayload(v94, 0, 1, v95);
          type metadata accessor for RecentsCollectionViewCell();
          char v73 = (void *)UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
          outlined destroy of SystemUpdateNotice?(v94, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
          (*(void (**)(char *, uint64_t))(v92 + 8))(v22, v93);
          outlined destroy of RecentsCallItem((uint64_t)v33, (void (*)(void))type metadata accessor for RecentsCallItemType);
          goto LABEL_42;
        }
        outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v76 = type metadata accessor for Logger();
        __swift_project_value_buffer(v76, (uint64_t)static Logger.conversationKit);
        uint64_t v77 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = v44;
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v80 = 0;
          _os_log_impl(&dword_1C2F90000, v77, v78, "cellRegistrationForRecentsCallItemOngoingCalls was unexpectedly nil", v80, 2u);
          uint64_t v81 = v80;
          uint64_t v44 = v79;
          MEMORY[0x1C87760E0](v81, -1, -1);
        }

        swift_release();
        unint64_t v56 = type metadata accessor for RecentsCallItemType;
        uint64_t v57 = (uint64_t)v33;
        goto LABEL_33;
      case 2u:
        uint64_t v82 = *v33;
        swift_release();
        swift_bridgeObjectRelease();

        uint64_t v83 = &v44[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemLinks];
        swift_beginAccess();
        uint64_t v84 = (uint64_t)v83;
        uint64_t v85 = v115;
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v84, v115, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
        uint64_t v86 = v121;
        if (__swift_getEnumTagSinglePayload(v85, 1, v121) != 1)
        {
          uint64_t v68 = v44;
          id v108 = v42;
          uint64_t v96 = v118;
          uint64_t v97 = v114;
          (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v114, v85, v86);
          uint64_t v98 = (uint64_t)v109;
          _s15ConversationKit15RecentsCallItemVWOcTm_0(v45, (uint64_t)v109, (void (*)(void))type metadata accessor for RecentsCallItem);
          uint64_t v99 = type metadata accessor for RecentsCallItem(0);
          __swift_storeEnumTagSinglePayload(v98, 0, 1, v99);
          type metadata accessor for RecentsCollectionViewCell();
          char v73 = (void *)UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
          outlined destroy of SystemUpdateNotice?(v98, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
          (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v86);
          goto LABEL_42;
        }
        outlined destroy of SystemUpdateNotice?(v85, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v87 = type metadata accessor for Logger();
        __swift_project_value_buffer(v87, (uint64_t)static Logger.conversationKit);
        uint64_t v88 = Logger.logObject.getter();
        os_log_type_t v89 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v90 = 0;
          _os_log_impl(&dword_1C2F90000, v88, v89, "cellRegistrationForRecentsCallItemLinks was unexpectedly nil", v90, 2u);
          MEMORY[0x1C87760E0](v90, -1, -1);
        }

        break;
      default:
        id v108 = v42;
        outlined destroy of RecentsCallItem((uint64_t)v33, (void (*)(void))type metadata accessor for RecentsCallItemType);
        _s15ConversationKit15RecentsCallItemVWOcTm_0(v45, (uint64_t)v31, (void (*)(void))type metadata accessor for RecentsCallItemType);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v46 = v117;
          _s15ConversationKit15RecentsCallItemVWObTm_0((uint64_t)v31, v117, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
          uint64_t v47 = *(void **)(v46 + *(int *)(v26 + 52));
          if (v47 && objc_msgSend(v47, sel_isSensitive))
          {
            uint64_t v48 = &v44[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsSensitveCallItemCalls];
            swift_beginAccess();
            uint64_t v49 = (uint64_t)v48;
            uint64_t v50 = v113;
            outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v49, v113, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
            uint64_t v51 = v121;
            if (__swift_getEnumTagSinglePayload(v50, 1, v121) == 1)
            {
              outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
              if (one-time initialization token for conversationKit != -1) {
                swift_once();
              }
              uint64_t v52 = type metadata accessor for Logger();
              __swift_project_value_buffer(v52, (uint64_t)static Logger.conversationKit);
              uint64_t v53 = Logger.logObject.getter();
              os_log_type_t v54 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v53, v54))
              {
                uint64_t v55 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v55 = 0;
                _os_log_impl(&dword_1C2F90000, v53, v54, "cellRegistrationForRecentsSensitveCallItemCalls was unexpectedly nil", v55, 2u);
                MEMORY[0x1C87760E0](v55, -1, -1);
              }

              swift_release();
              unint64_t v56 = type metadata accessor for RecentCallRecentItemMetadata;
              uint64_t v57 = v46;
LABEL_33:
              outlined destroy of RecentsCallItem(v57, (void (*)(void))v56);
              return 0;
            }
            uint64_t v68 = v44;
            uint64_t v103 = v118;
            uint64_t v104 = v112;
            (*(void (**)(void))(v118 + 32))();
            uint64_t v105 = (uint64_t)v109;
            _s15ConversationKit15RecentsCallItemVWOcTm_0(v45, (uint64_t)v109, (void (*)(void))type metadata accessor for RecentsCallItem);
            uint64_t v106 = type metadata accessor for RecentsCallItem(0);
            __swift_storeEnumTagSinglePayload(v105, 0, 1, v106);
            type metadata accessor for RecentsCollectionViewCell();
            char v73 = (void *)UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
            outlined destroy of SystemUpdateNotice?(v105, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
            (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v51);
            outlined destroy of RecentsCallItem(v46, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
LABEL_42:
            uint64_t v124 = 0;
            uint64_t v125 = 0xE000000000000000;
            id v66 = v73;
            _StringGuts.grow(_:)(36);
            swift_bridgeObjectRelease();
            uint64_t v124 = 0xD00000000000001CLL;
            uint64_t v125 = 0x80000001C379BBC0;
            uint64_t v123 = IndexPath.section.getter();
            v100._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v100);
            swift_bridgeObjectRelease();
            v101._uint64_t countAndFlagsBits = 2003784238;
            v101._object = (void *)0xE400000000000000;
            String.append(_:)(v101);
            uint64_t v123 = IndexPath.row.getter();
            v102._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v102);
            swift_bridgeObjectRelease();
            outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(v124, v125, v66);

            swift_release();
            return v66;
          }
          outlined destroy of RecentsCallItem(v46, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        }
        else
        {
          outlined destroy of RecentsCallItem((uint64_t)v31, (void (*)(void))type metadata accessor for RecentsCallItemType);
        }
        uint64_t v58 = v121;
        uint64_t v59 = &v44[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemCalls];
        swift_beginAccess();
        uint64_t v60 = (uint64_t)v59;
        uint64_t v61 = v120;
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v60, v120, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
        if (__swift_getEnumTagSinglePayload(v61, 1, v58) != 1)
        {
          uint64_t v68 = v44;
          uint64_t v69 = v118;
          Swift::Int v70 = v116;
          (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v116, v61, v58);
          uint64_t v71 = (uint64_t)v109;
          _s15ConversationKit15RecentsCallItemVWOcTm_0(v45, (uint64_t)v109, (void (*)(void))type metadata accessor for RecentsCallItem);
          uint64_t v72 = type metadata accessor for RecentsCallItem(0);
          __swift_storeEnumTagSinglePayload(v71, 0, 1, v72);
          type metadata accessor for RecentsCollectionViewCell();
          char v73 = (void *)UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
          outlined destroy of SystemUpdateNotice?(v71, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v58);
          goto LABEL_42;
        }
        outlined destroy of SystemUpdateNotice?(v61, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v62 = type metadata accessor for Logger();
        __swift_project_value_buffer(v62, (uint64_t)static Logger.conversationKit);
        id v63 = Logger.logObject.getter();
        os_log_type_t v64 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v65 = 0;
          _os_log_impl(&dword_1C2F90000, v63, v64, "cellRegistrationForRecentsCallItemCalls was unexpectedly nil", v65, 2u);
          MEMORY[0x1C87760E0](v65, -1, -1);
        }

        break;
    }
LABEL_23:
    swift_release();
    return 0;
  }
  swift_release();

  return 0;
}

uint64_t outlined destroy of RecentsCallItem(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_50_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return v0;
}

double OUTLINED_FUNCTION_50_7()
{
  return 1.0;
}

id OUTLINED_FUNCTION_50_8()
{
  return [v0 (SEL)(v1 + 2609)];
}

uint64_t OUTLINED_FUNCTION_50_9(float a1)
{
  float *v1 = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_50_10()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
}

uint64_t OUTLINED_FUNCTION_50_11(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return _s15ConversationKit11ParticipantVWOcTm_10(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_50_14()
{
  return String.init<A>(reflecting:)();
}

id OUTLINED_FUNCTION_50_15()
{
  return [v0 (SEL)(v1 + 152)];
}

uint64_t OUTLINED_FUNCTION_50_16()
{
  type metadata accessor for Participant(0);
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_50_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

id OUTLINED_FUNCTION_50_20()
{
  return [v0 (SEL)(v1 + 1944)];
}

uint64_t OUTLINED_FUNCTION_50_21()
{
  return v0;
}

void OUTLINED_FUNCTION_50_22(double a1)
{
  *(double *)(v1 + 216) = a1;
}

unsigned char *OUTLINED_FUNCTION_50_23(unsigned char *result, char a2)
{
  *uint64_t result = a2 + 1;
  return result;
}

uint64_t RecentsListViewController.dataSource.getter()
{
  uint64_t v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___dataSource;
  if (*(void *)((char *)v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___dataSource))
  {
    uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___dataSource);
  }
  else
  {
    uint64_t v2 = closure #1 in RecentsListViewController.dataSource.getter(v0);
    *(void *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id RecentsCollectionViewDataSource.collator.getter()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    id v2 = *(id *)(v0 + 80);
  }
  else
  {
    closure #1 in RecentsCollectionViewDataSource.collator.getter((id *)v0);
    uint64_t v3 = *(void **)(v0 + 80);
    *(void *)(v0 + 80) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setAccessibilityIdentifier_, v4);
}

id RecentsListViewController.avatarViewControllerDelegate.getter()
{
  uint64_t v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate;
  id v2 = *(void **)&v0[OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate];
  }
  else
  {
    id v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for AvatarViewControllerDelegateWrapper());
    id v6 = AvatarViewControllerDelegateWrapper.init(hostingViewController:)(v0);
    uint64_t v7 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v6;
    id v3 = v6;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void RecentsCollectionViewCell.configure(with:)(uint64_t a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper))
  {
    v4[3] = type metadata accessor for RecentsCallItem(0);
    v4[4] = lazy protocol witness table accessor for type RecentsCallItem and conformance RecentsCallItem();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
    _s15ConversationKit15RecentsCallItemVWOcTm_1(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for RecentsCallItem);
    swift_retain();
    dispatch thunk of RecentsListItemViewHelper.configure(with:)();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    RecentsCollectionViewCell.configureMultiselectEditAccessory(for:)(a1);
    RecentsCollectionViewCell.configureTrailingAccessory(for:)(a1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t RecentsCollectionViewCell.configureMultiselectEditAccessory(for:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UICellAccessory.MultiselectOptions();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void **)((char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s15ConversationKit15RecentsCallItemVWOcTm_1(a1, (uint64_t)v15, type metadata accessor for RecentsCallItemType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      UICollectionViewListCell.accessories.setter();
      uint64_t result = outlined destroy of RecentOngoingConversationMetadata((uint64_t)v15, type metadata accessor for RecentsCallItemType);
      break;
    case 2u:
      uint64_t v17 = *v15;
      swift_release();
      swift_bridgeObjectRelease();

      goto LABEL_5;
    default:
      outlined destroy of RecentOngoingConversationMetadata((uint64_t)v15, type metadata accessor for RecentsCallItemType);
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
      type metadata accessor for UICellAccessory();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C3769620;
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FB0E08], v9);
      uint64_t v18 = type metadata accessor for UICellAccessory.LayoutDimension();
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v18);
      UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)();
      static UICellAccessory.multiselect(displayed:options:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t result = UICollectionViewListCell.accessories.setter();
      break;
  }
  return result;
}

void RecentsCollectionViewCell.configureTrailingAccessory(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RecentOngoingConversationMetadata(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void **)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s15ConversationKit15RecentsCallItemVWOcTm_1(a1, (uint64_t)v12, type metadata accessor for RecentsCallItemType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      outlined init with take of RecentOngoingConversationMetadata((uint64_t)v12, (uint64_t)v9);
      uint64_t v13 = *(void *)&v9[*(int *)(v7 + 24)];
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v14 = (void *)MEMORY[0x1E4FBC8C8];
      if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)static RestrictedConversationChecker.shared)
                                               + 0x80))(v13) & 1) != 0)
      {
        RecentsCollectionViewCell.configureDetailAccessory()();
      }
      else
      {
        uint64_t v16 = (void *)(*(uint64_t (**)(void))((*v14 & *v2) + 0x98))();
        if (!v16) {
          uint64_t v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RecentsJoinButton()), sel_init);
        }
        uint64_t v17 = v16;
        _s15ConversationKit15RecentsCallItemVWOcTm_1((uint64_t)v9, (uint64_t)v6, type metadata accessor for RecentOngoingConversationMetadata);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
        (*(void (**)(char *))((*v14 & *v17) + 0x60))(v6);
        objc_msgSend(v2, sel__setPopupMenuButton_, v17);
        objc_msgSend(v2, sel_addSubview_, v17);
        uint64_t v18 = *(uint64_t (**)(void *))((*v14 & *v2) + 0xA0);
        uint64_t v19 = v17;
        uint64_t v20 = v18(v17);
        uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))((*v14 & *v2) + 0xB0))(v20);
        objc_msgSend(v21, sel_removeFromSuperview);
      }
      outlined destroy of RecentOngoingConversationMetadata((uint64_t)v9, type metadata accessor for RecentOngoingConversationMetadata);
      break;
    case 2u:
      uint64_t v15 = *v12;
      swift_release();
      swift_bridgeObjectRelease();

      goto LABEL_8;
    default:
      outlined destroy of RecentOngoingConversationMetadata((uint64_t)v12, type metadata accessor for RecentsCallItemType);
LABEL_8:
      RecentsCollectionViewCell.configureDetailAccessory()();
      break;
  }
}

uint64_t outlined destroy of RecentOngoingConversationMetadata(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

Swift::Void __swiftcall RecentsCollectionViewCell.configureDetailAccessory()()
{
  OUTLINED_FUNCTION_5_13();
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v1 + 176))();
  objc_msgSend(v0, sel_addSubview_, v2);

  objc_msgSend(v0, sel__setPopupMenuButton_, 0);
  OUTLINED_FUNCTION_5_13();
  uint64_t v4 = (void *)(*(uint64_t (**)(void))(v3 + 152))();
  if (v4)
  {
    id v5 = v4;
    objc_msgSend(v4, sel_removeFromSuperview);
  }
}

void RecentsCollectionViewCell.avatarViewController.setter(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper))
  {
    if (a1) {
      lazy protocol witness table accessor for type CNAvatarViewController and conformance CNAvatarViewController();
    }
    id v3 = a1;
    swift_retain();
    OUTLINED_FUNCTION_34_9();
    dispatch thunk of RecentsListItemViewHelper.avatarViewController.setter();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

unint64_t lazy protocol witness table accessor for type CNAvatarViewController and conformance CNAvatarViewController()
{
  unint64_t result = lazy protocol witness table cache variable for type CNAvatarViewController and conformance CNAvatarViewController;
  if (!lazy protocol witness table cache variable for type CNAvatarViewController and conformance CNAvatarViewController)
  {
    type metadata accessor for NSObject(255, &lazy cache variable for type metadata for CNAvatarViewController);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CNAvatarViewController and conformance CNAvatarViewController);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RecentsCallItem and conformance RecentsCallItem()
{
  unint64_t result = lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem;
  if (!lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem)
  {
    type metadata accessor for RecentsCallItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem;
  if (!lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem)
  {
    type metadata accessor for RecentsCallItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem);
  }
  return result;
}

void RecentsCallItem.hasVideoMessage.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14();
  a17 = v19;
  a18 = v20;
  uint64_t v21 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_60();
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v18, v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v18, (void (*)(void))type metadata accessor for RecentsCallItemType);
      break;
    default:
      _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v18, (uint64_t)v24);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v27 = OUTLINED_FUNCTION_8(v26);
      MEMORY[0x1F4188790](v27);
      uint64_t v28 = (void *)OUTLINED_FUNCTION_88_2();
      if (v28)
      {
        id v29 = objc_msgSend(v28, sel_messageUUID);
        MEMORY[0x1F4188790](v29);
        OUTLINED_FUNCTION_219_0();
        if (v30)
        {
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v31 = type metadata accessor for UUID();
          uint64_t v32 = v21;
          uint64_t v33 = 0;
        }
        else
        {
          uint64_t v31 = type metadata accessor for UUID();
          uint64_t v32 = OUTLINED_FUNCTION_70_3();
        }
        OUTLINED_FUNCTION_82_2(v32, v33);
        outlined init with take of RecentsCollectionViewSectionable?(v21, v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        type metadata accessor for UUID();
        OUTLINED_FUNCTION_33_0(v18, 1, v31);
      }
      else
      {
        uint64_t v34 = type metadata accessor for UUID();
        OUTLINED_FUNCTION_13_18(v34);
      }
      outlined destroy of SystemUpdateNotice?(v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v24, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
      break;
  }
  OUTLINED_FUNCTION_15_0();
}

uint64_t OUTLINED_FUNCTION_192()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_192_0()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_192_1(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_192_2(uint64_t result)
{
  v3[8] = result;
  v3[4] = v1;
  v3[5] = v2;
  return result;
}

void RecentsCallItem.hasAudioMessage.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14();
  a17 = v19;
  a18 = v20;
  uint64_t v21 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_60();
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0(v18, v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 3 || EnumCaseMultiPayload)
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v18, (void (*)(void))type metadata accessor for RecentsCallItemType);
  }
  else
  {
    _s15ConversationKit010RecentCallC12ItemMetadataVWObTm_0(v18, (uint64_t)v24);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v28 = OUTLINED_FUNCTION_8(v27);
    MEMORY[0x1F4188790](v28);
    id v29 = (void *)OUTLINED_FUNCTION_88_2();
    if (v29)
    {
      id v30 = objc_msgSend(v29, sel_messageUUID);
      MEMORY[0x1F4188790](v30);
      OUTLINED_FUNCTION_219_0();
      if (v31)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v32 = type metadata accessor for UUID();
        uint64_t v33 = v21;
        uint64_t v34 = 0;
      }
      else
      {
        uint64_t v32 = type metadata accessor for UUID();
        uint64_t v33 = OUTLINED_FUNCTION_70_3();
      }
      OUTLINED_FUNCTION_82_2(v33, v34);
      outlined init with take of RecentsCollectionViewSectionable?(v21, v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      type metadata accessor for UUID();
      OUTLINED_FUNCTION_33_0(v18, 1, v32);
    }
    else
    {
      uint64_t v35 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_13_18(v35);
    }
    outlined destroy of SystemUpdateNotice?(v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v24, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
  }
  OUTLINED_FUNCTION_15_0();
}

uint64_t type metadata accessor for AvatarViewControllerDelegateWrapper()
{
  return self;
}

id AvatarViewControllerDelegateWrapper.init(hostingViewController:)(void *a1)
{
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AvatarViewControllerDelegateWrapper();
  id v3 = objc_msgSendSuper2(&v5, sel_init);

  return v3;
}

void closure #1 in RecentsCollectionViewDataSource.collator.getter(id *a1)
{
  outlined init with copy of IDSLookupManager((uint64_t)(a1 + 3), (uint64_t)v6);
  uint64_t v2 = (void (*)(uint64_t))*((void *)*a1 + 24);
  id v3 = a1[8];
  uint64_t v4 = swift_retain();
  v2(v4);
  (*((void (**)(void))*a1 + 28))();
  id v5 = objc_allocWithZone((Class)type metadata accessor for RecentsCollectionViewCollator());
  RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)();
}

void RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  id v57 = v3;
  id v58 = v2;
  uint64_t v60 = v4;
  uint64_t v61 = v5;
  uint64_t v59 = v6;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = (char *)OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue;
  os_log_type_t v54 = (uint64_t *)type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_17_0();
  uint64_t v14 = v0;
  static DispatchQoS.userInteractive.getter();
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_62();
  uint64_t v65 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, MEMORY[0x1F41AB0D0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_60();
  (*(void (**)(uint64_t, void))(v18 + 104))(v15, *MEMORY[0x1E4FBCC50]);
  *(void *)&v55[(void)v1] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v19 = &v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_messageInboxController];
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_messageInboxController] = 0;
  uint64_t v20 = &v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator__hasFinishedFirstLoad];
  LOBYTE(v65) = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v20, v11, v56);
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentCallsDidChangeObserver] = 0;
  uint64_t v21 = &v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator____lazy_storage___upcomingSectionItemLimit];
  *(void *)uint64_t v21 = 0;
  v21[8] = 1;
  p_opt_class_meths = &OBJC_PROTOCOL___UIViewControllerContextTransitioning.opt_class_meths;
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_messageInboxSubscription] = 0;
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_videoMessageLoadSubscription] = 0;
  uint64_t v23 = OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_featureFlags;
  *(void *)&v14[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_wantsSynchronousLoad] = 1;
  v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_isDataLoading] = 0;
  v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_pendingDataLoading] = 0;
  uint64_t v24 = &v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController];
  outlined init with copy of IDSLookupManager(v60, (uint64_t)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController]);
  id v26 = v58;
  uint64_t v25 = v59;
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager] = v58;
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_linkController] = v25;
  swift_beginAccess();
  void *v19 = v61;
  id v58 = v26;
  swift_retain();
  swift_retain();
  swift_release();
  id v27 = v57;
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_dataSource] = v57;
  uint64_t v28 = v24[3];
  uint64_t v29 = v24[4];
  id v30 = __swift_project_boxed_opaque_existential_1(v24, v28);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 40);
  id v57 = v27;
  v31(v28, v29);
  uint64_t v32 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v34 = v33;
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_60();
  Date.init()();
  uint64_t v36 = static RecentsCollectionViewModel.sections(from:now:upcomingSectionItemLimit:)(MEMORY[0x1E4FBC860], v30, 0x7FFFFFFFFFFFFFFFLL);
  (*(void (**)(void *, uint64_t))(v34 + 8))(v30, v32);
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_model] = v36;

  uint64_t v37 = (objc_class *)type metadata accessor for RecentsCollectionViewCollator();
  v64.receiver = v14;
  v64.super_class = v37;
  uint64_t v38 = (char *)objc_msgSendSuper2(&v64, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<CurrentValueSubject<[RecentsCallItem], Never>, NSRunLoop>);
  OUTLINED_FUNCTION_4();
  uint64_t v40 = v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = &v38[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_messageInboxController];
  swift_beginAccess();
  uint64_t v43 = *(void *)v42;
  if (*(void *)v42)
  {
    swift_endAccess();
    uint64_t v44 = *(uint64_t (**)(uint64_t))(*(void *)v43 + 104);
    uint64_t v56 = v40;
    uint64_t v55 = v38;
    uint64_t v45 = swift_retain();
    uint64_t v46 = v44(v45);
    swift_release();
    uint64_t v63 = v46;
    id v62 = objc_msgSend(self, sel_mainRunLoop);
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
    os_log_type_t v54 = &v53;
    uint64_t v48 = OUTLINED_FUNCTION_8(v47);
    MEMORY[0x1F4188790](v48);
    OUTLINED_FUNCTION_62();
    uint64_t v49 = type metadata accessor for NSRunLoop.SchedulerOptions();
    OUTLINED_FUNCTION_24_6(v49);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[RecentsCallItem], Never>);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<[RecentsCallItem], Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<[RecentsCallItem], Never>);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___UIViewControllerContextTransitioning + 48);
    Publisher.receive<A>(on:options:)();
    outlined destroy of SystemUpdateNotice?((uint64_t)&OBJC_PROTOCOL___UIViewControllerContextTransitioning.opt_class_meths, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

    swift_release();
    OUTLINED_FUNCTION_20();
    uint64_t v50 = v55;
    swift_unknownObjectWeakInit();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<CurrentValueSubject<[RecentsCallItem], Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<CurrentValueSubject<[RecentsCallItem], Never>, NSRunLoop>);
    uint64_t v51 = Publisher<>.sink(receiveValue:)();

    swift_release();
    swift_release();

    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v60);
    OUTLINED_FUNCTION_26_2();
    v52();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v60);
    swift_endAccess();

    swift_release();
    swift_release();

    uint64_t v51 = 0;
  }
  *(__objc2_meth_list *)((char *)p_opt_class_meths[31] + (void)v38) = (__objc2_meth_list)v51;
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t VideoMessageInboxController.updateCallItems()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v1 = OUTLINED_FUNCTION_8(v0);
  MEMORY[0x1F4188790](v1);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 864))();
  if (result)
  {
    uint64_t v5 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v5);
    uint64_t v6 = OUTLINED_FUNCTION_20();
    swift_weakInit();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = 0;
    void v7[3] = 0;
    v7[4] = v6;
    _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v3, (uint64_t)&async function pointer to partial apply for closure #1 in VideoMessageInboxController.updateCallItems(), (uint64_t)v7);
    return swift_release();
  }
  return result;
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    outlined destroy of TaskPriority?(a1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *RecentsCollectionViewDataSource.messageInboxController.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = (void *)v1;
  if (v1 == 1)
  {
    uint64_t v2 = closure #1 in RecentsCollectionViewDataSource.messageInboxController.getter(v0);
    uint64_t v3 = *(void *)(v0 + 88);
    *(void *)(v0 + 88) = v2;
    swift_retain();
    outlined consume of VideoMessageInboxController??(v3);
  }
  outlined copy of VideoMessageInboxController??(v1);
  return v2;
}

void *closure #1 in RecentsCollectionViewDataSource.messageInboxController.getter(uint64_t a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 864))() & 1) == 0) {
    return 0;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_1EA37E480;
  uint64_t v3 = unk_1EA37E488;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(static PlatformFeatureChecker.shared, qword_1EA37E480);
  uint64_t v5 = *(void *)(v2 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  uint64_t result = 0;
  if (v3)
  {
    outlined init with copy of IDSLookupManager(a1 + 24, (uint64_t)v12);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsControllable);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallProviding);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      type metadata accessor for VideoMessageInboxController();
      swift_allocObject();
      return VideoMessageInboxController.init()();
    }
    return 0;
  }
  return result;
}

id Defaults.videoMessagingEnabled.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_videoMessagingEnabled);
}

uint64_t outlined copy of VideoMessageInboxController??(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of VideoMessageInboxController??(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for VideoMessageInboxController()
{
  return self;
}

void *VideoMessageInboxController.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[RecentsCallItem], Never>);
  swift_allocObject();
  v0[2] = CurrentValueSubject.init(_:)();
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = 0;
  return v0;
}

uint64_t protocol witness for PlatformFeatureSupportChecking.videoMessagingSupported.getter in conformance iPadFeatureSupportChecker()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

uint64_t closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter(void *a1)
{
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v22 - v11;
  v22[1] = a1;
  id v13 = objc_msgSend(a1, sel_traitCollection);
  id v14 = objc_msgSend(v13, sel_userInterfaceIdiom);

  if (v14 == (id)5)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, *MEMORY[0x1E4FB10D8], v6);
  }
  else
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))()) {
      uint64_t v15 = (unsigned int *)MEMORY[0x1E4FB10D0];
    }
    else {
      uint64_t v15 = (unsigned int *)MEMORY[0x1E4FB10C0];
    }
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, *v15, v6);
  }
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22[0] = v6;
  v16(v10, v12, v6);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FB1108], v2);
  UICollectionLayoutListConfiguration.headerMode.setter();
  id v17 = objc_msgSend(self, sel_clearColor);
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))()) {
    UICollectionLayoutListConfiguration.headerTopPadding.setter();
  }
  id v18 = objc_msgSend(self, sel_effectWithStyle_, 18);
  id v19 = objc_msgSend(self, sel_effectForBlurEffect_style_, v18, 7);

  uint64_t v20 = (void (*)(unsigned char *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
  MEMORY[0x1C8770460](v19);
  v20(v23, 0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  (*(void (**)(char *, void))(v7 + 8))(v12, v22[0]);
  return swift_release();
}

uint64_t closure #1 in RecentsListViewController.cellBackgroundConfiguration.getter(void *a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))() & 1) != 0
    || (id v2 = objc_msgSend(a1, sel_traitCollection),
        id v3 = objc_msgSend(v2, sel_userInterfaceIdiom),
        v2,
        v3 == (id)5))
  {
    return static UIBackgroundConfiguration.clear()();
  }
  else
  {
    static UIBackgroundConfiguration.listGroupedCell()();
    id v5 = objc_msgSend(self, sel_effectWithStyle_, 8);
    id v6 = objc_msgSend(self, sel_effectForBlurEffect_style_, v5, 6);

    return UIBackgroundConfiguration.visualEffect.setter();
  }
}

id closure #1 in RecentsLinkController.modelLocked.getter()
{
  type metadata accessor for RecentsLinkControllerModel();
  uint64_t v0 = swift_allocObject();
  RecentsLinkControllerModel.init()();
  uint64_t v1 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v0 + 144);
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2, &protocol witness table for RecentsLinkController);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBF8]), sel_initWithObject_, v0);
  swift_release();
  return v3;
}

uint64_t type metadata accessor for RecentsLinkControllerModel()
{
  return self;
}

void RecentsLinkControllerModel.init()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  v0[2] = 4;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_32_5();
  static DispatchQoS.unspecified.getter();
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, MEMORY[0x1F41AB0F0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_60();
  (*(void (**)(uint64_t, void))(v8 + 104))(v4, *MEMORY[0x1E4FBCC50]);
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  if ((v6 & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v9 = MEMORY[0x1E4FBC870];
  }
  v1[6] = v9;
  v1[7] = 0;
  v1[8] = v6;
  v1[9] = v6;
  OUTLINED_FUNCTION_28();
}

double OUTLINED_FUNCTION_90_1()
{
  *(void *)(v0 + 96) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_90_3()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_90_5()
{
  return v0;
}

uint64_t lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = OUTLINED_FUNCTION_148_4();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t RecentsLinkControllerModel.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_48_10();
  *(void *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall RecentsListViewController.scrollViewDidScroll(_:)(UIScrollView *a1)
{
  id v3 = objc_msgSend(v1, sel_navigationItem);
  id v5 = objc_msgSend(v3, sel_titleView);

  if (v5)
  {
    type metadata accessor for RecentsNavigationBarTitleView();
    if (swift_dynamicCastClass())
    {
      [(UIScrollView *)a1 contentOffset];
      if (one-time initialization token for topMargin != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_0_20();
      (*(void (**)(void))(v4 + 80))();
    }
  }
}

Swift::Void __swiftcall RecentsNavigationBarTitleView.updateNavigationItemVisible(_:)(Swift::Bool a1)
{
  BOOL v2 = a1;
  objc_msgSend(v1, sel_trailingBarAlpha);
  if ((((v3 <= 0.0) ^ v2) & 1) == 0)
  {
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v1;
    *(unsigned char *)(v5 + 24) = v2;
    v8[4] = partial apply for closure #1 in RecentsNavigationBarTitleView.updateNavigationItemVisible(_:);
    v8[5] = v5;
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 1107296256;
    v8[2] = thunk for @escaping @callee_guaranteed () -> ();
    v8[3] = &block_descriptor_12;
    uint64_t v6 = _Block_copy(v8);
    id v7 = v1;
    swift_release();
    objc_msgSend(v4, sel_animateWithDuration_delay_options_animations_completion_, 4, v6, 0, 0.2, 0.0);
    _Block_release(v6);
  }
}

Swift::Void __swiftcall RecentsListViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  BOOL v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for RecentsListViewController(0);
  objc_msgSendSuper2(&v15, sel_viewWillAppear_, a1);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_30(v4, (uint64_t)static Logger.conversationKit);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v7, v8, "RecentsListViewController viewWillAppear");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_158();
  v9();
  OUTLINED_FUNCTION_2_10();
  (*(void (**)(void))(v10 + 296))();
  swift_release();
  OUTLINED_FUNCTION_1_12();
  (*(void (**)(void *__return_ptr))(v11 + 424))(v14);
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  uint64_t v12 = OUTLINED_FUNCTION_48_1();
  v13(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  RecentsListViewController.tipKitStartObservation()();
  RecentsListViewController.updateLeftBarButton()();
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  outlined init with take of Notice((long long *)(v0 - 208), v0 - 248);
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_48_5()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v0 & ~(v0 >> 63), 0);
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_48_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41856C0](a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_48_9()
{
  return 5;
}

uint64_t OUTLINED_FUNCTION_48_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_48_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_12()
{
  return AttributeContainer.init()();
}

uint64_t OUTLINED_FUNCTION_48_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_14()
{
  return type metadata accessor for RecentsCallItem(0);
}

uint64_t OUTLINED_FUNCTION_48_15()
{
  return v0 + 56;
}

uint64_t OUTLINED_FUNCTION_48_16()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_48_17()
{
  return type metadata accessor for Logger();
}

uint64_t OUTLINED_FUNCTION_48_18(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  *(void *)(v1 + 24) = v1 + 128;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_48_19()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

void OUTLINED_FUNCTION_48_21(double a1)
{
  *(double *)(v1 + 224) = a1;
}

uint64_t OUTLINED_FUNCTION_166()
{
  return v0;
}

id OUTLINED_FUNCTION_166_1()
{
  *(_WORD *)(v2 + 12) = 2080;
  *(void *)(v0 + 48) = v1;
  return v1;
}

Swift::Void __swiftcall RecentsCollectionViewDataSource.resume()()
{
  OUTLINED_FUNCTION_50();
  id v2 = (id)(*(uint64_t (**)(void))(v0 + 168))();
  OUTLINED_FUNCTION_0_91();
  (*(void (**)(void))(v1 + 464))();
}

Swift::Void __swiftcall RecentsListViewController.updateLeftBarButton()()
{
  id v3 = objc_msgSend(v0, sel_navigationItem);
  if (objc_msgSend(v0, sel_isEditing)) {
    Class isa = RecentsListViewController.doneEditingBarButtonItem.getter();
  }
  else {
    Class isa = RecentsListViewController.editBarButtonItem.getter().super.super.isa;
  }
  id v2 = isa;
  objc_msgSend(v3, sel_setLeftBarButtonItem_, isa);
}

uint64_t RecentsListViewController.tipKitStartObservation()()
{
  return swift_release_n();
}

Swift::Void __swiftcall RecentsListViewController.tipKitStartObservation()()
{
}

id static Features.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = static Features.shared;
  return v0;
}

uint64_t Features.isScreeningLiveActivityEnabled.getter(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v5 = a1;
  uint64_t v6 = a2();
  char v2 = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t lazy protocol witness table accessor for type Features.UIKit and conformance Features.UIKit()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit;
  if (!lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit;
  if (!lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.UIKit and conformance Features.UIKit);
  }
  return result;
}

uint64_t Features.isUIFluidTransitionsEnabled.getter()
{
  return Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1F1EA37C8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.UIKit and conformance Features.UIKit);
}

void protocol witness for RecentCallProviderDelegate.recentCallsDidChange() in conformance <> WeakBox<A>()
{
}

void WeakBox<>.recentCallsDidChange()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)MEMORY[0x1C8776240](v0 + 16);
  if (v1)
  {
    char v2 = v1;
    if (objc_msgSend(v1, sel_isViewLoaded))
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      id v3 = (void *)MEMORY[0x1E4FBC8C8];
      OUTLINED_FUNCTION_1_12();
      (*(void (**)(void))(v4 + 792))();
      OUTLINED_FUNCTION_17_8();
      uint64_t v6 = (void *)(*(uint64_t (**)(void))(v5 + 168))();
      uint64_t v7 = swift_release();
      (*(void (**)(uint64_t))((*v3 & *v6) + 0x228))(v7);

      RecentsListViewController.reloadEditMenu()();
    }
  }
}

uint64_t closure #1 in VideoMessageInboxController.getAllMessages()()
{
  uint64_t v1 = (uint64_t *)v0[17];
  uint64_t v3 = v0[15];
  char v2 = (uint64_t *)v0[16];
  uint64_t v4 = v0[14];
  uint64_t v5 = OUTLINED_FUNCTION_20();
  *(void *)(v5 + 16) = &outlined read-only object #0 of closure #1 in VideoMessageInboxController.getAllMessages();
  uint64_t *v1 = v5;
  uint64_t v6 = *MEMORY[0x1E4F61810];
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 104);
  v0[19] = v7;
  v0[20] = (v3 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v7(v1, v6, v4);
  uint64_t v8 = OUTLINED_FUNCTION_20();
  *(void *)(v8 + 16) = &outlined read-only object #1 of closure #1 in VideoMessageInboxController.getAllMessages();
  uint64_t *v2 = v8;
  v7(v2, *MEMORY[0x1E4F61808], v4);
  static MessageStoreQuery.&& infix(_:_:)();
  uint64_t v9 = *(void (**)(void))(v3 + 8);
  v0[21] = v9;
  v0[22] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  OUTLINED_FUNCTION_50_1();
  v9();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_50_1();
  v9();
  v0[23] = self;
  v0[24] = type metadata accessor for MainActor();
  v0[25] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_39_1();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  *(void *)(v0 + 216) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_39_1();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  *(void *)(v0 + 208) = objc_msgSend(v1, sel_currentDevice);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  *(void *)(v0 + 224) = objc_msgSend(v1, sel_userInterfaceIdiom);

  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_49_0();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  *(void *)(v4 + 248) = v0;
  swift_task_dealloc();
  swift_release();
  if (!v0) {
    *(void *)(v4 + 256) = v3;
  }
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t (*v8)(void);
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[21];
  uint64_t v1 = v0[18];
  char v2 = v0[14];
  uint64_t v3 = (void *)v0[4];
  uint64_t v4 = specialized Dictionary.init<A>(grouping:by:)(v0[32]);
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy20FaceTimeMessageStore0F4TypeOSayAF0F0CGG_AH_AKts5NeverOTg5026_s15ConversationKit27Videof74InboxControllerC14getAllMessages33_7171B8C8E05400027B1F97FF317BCE39LLSay08de10D5Store0D4h29O_SayAF0D0CGtGyYaKFALScgyALs5C41_pGzYaKXEfU_AH_AKtAH3key_AK5valuet_tXEfU_Tf1cn_n(v4);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_1();
  v7();
  v10(v1, v2);
  *uint64_t v3 = v6;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void *closure #1 in RecentsListViewController.createSectionHeaderViewRegistrationForSupplementalView()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t result = (void *)MEMORY[0x1C8776240](a5 + 16);
  if (result)
  {
    id v13 = result;
    uint64_t v14 = *(void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *result) + 0x318))();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v14 + 256))(v25, a4);
    swift_release();
    char v15 = v25[0];
    if (LOBYTE(v25[0]) == 13)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C3769620;
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
      MEMORY[0x1F4188790](v17 - 8);
      id v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v20 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a4, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v20);
      uint64_t v21 = specialized >> prefix<A>(_:)((uint64_t)v19);
      uint64_t v23 = v22;
      outlined destroy of SystemUpdateNotice?((uint64_t)v19, &demangling cache variable for type metadata for IndexPath?);
      *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v16 + 32) = v21;
      *(void *)(v16 + 40) = v23;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      static UIListContentConfiguration.groupedHeader()();
      LOBYTE(v25[0]) = v15;
      RecentsCollectionViewSection.title()();
      UIListContentConfiguration.text.setter();
      v25[3] = v8;
      v25[4] = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
      (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v11, v8);
      MEMORY[0x1C8773CD0](v25);
      objc_msgSend(v13, sel_accessibilityPrepareHeaderView_, a1);

      return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return result;
}

uint64_t RecentsCollectionViewDataSource.section(for:)()
{
  uint64_t v1 = IndexPath.section.getter();
  char v2 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 248);
  return v2(v1);
}

Swift::String __swiftcall RecentsCollectionViewSection.title()()
{
  object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = 0;
  switch(*v1)
  {
    case 1:
      id v4 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_4_16();
      uint64_t v5 = 0x657669746341;
      unint64_t v6 = 0xE600000000000000;
      goto LABEL_16;
    case 2:
      id v7 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_4_16();
      uint64_t v5 = 0x676E696D6F637055;
      unint64_t v6 = 0xE800000000000000;
      goto LABEL_16;
    case 3:
      id v8 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_4_16();
      uint64_t v5 = 0x7961646F54;
      unint64_t v6 = 0xE500000000000000;
      goto LABEL_16;
    case 4:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unint64_t v6 = 0xE900000000000079;
      unint64_t v20 = 0xE000000000000000;
      uint64_t v5 = 0x6164726574736559;
      goto LABEL_16;
    case 5:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unsigned int v9 = OUTLINED_FUNCTION_35_13();
      goto LABEL_8;
    case 6:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unsigned int v9 = OUTLINED_FUNCTION_34_16();
LABEL_8:
      uint64_t v5 = v9 | 0x6565572000000000;
      unint64_t v6 = 0xE90000000000006BLL;
      goto LABEL_16;
    case 7:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unsigned int v10 = OUTLINED_FUNCTION_35_13();
      goto LABEL_11;
    case 8:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unsigned int v10 = OUTLINED_FUNCTION_34_16();
LABEL_11:
      uint64_t v5 = v10 | 0x6E6F4D2000000000;
      unint64_t v6 = 0xEA00000000006874;
      goto LABEL_16;
    case 9:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unsigned int v11 = OUTLINED_FUNCTION_35_13();
      goto LABEL_14;
    case 0xA:
      id v0 = objc_msgSend(self, sel_conversationKit);
      unsigned int v11 = OUTLINED_FUNCTION_34_16();
LABEL_14:
      uint64_t v5 = v11 | 0x6165592000000000;
      goto LABEL_16;
    case 0xB:
      id v12 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_4_16();
      uint64_t v5 = 0x73756F6976657250;
      unint64_t v6 = 0xEE00737261655920;
LABEL_16:
      v13.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
      v13.value._object = (void *)0xEF74694B6E6F6974;
      v14._uint64_t countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      uint64_t v15 = 0;
      Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, v13, (NSBundle)v0, v14, *(Swift::String *)(&v20 - 1));
      uint64_t countAndFlagsBits = v16._countAndFlagsBits;
      object = v16._object;

      break;
    default:
      break;
  }
  uint64_t v17 = countAndFlagsBits;
  uint64_t v18 = object;
  result._object = v18;
  result._uint64_t countAndFlagsBits = v17;
  return result;
}

uint64_t one-time initialization function for conversationKit()
{
  type metadata accessor for OS_os_log();
  OUTLINED_FUNCTION_47();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  static OS_os_log.conversationKit = result;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  id v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.conversationKit);
  uint64_t v1 = OUTLINED_FUNCTION_1_123();
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)static Log.default);
  OUTLINED_FUNCTION_48();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 16);
  return v3(v1);
}

unint64_t type metadata accessor for OS_os_log()
{
  unint64_t result = lazy cache variable for type metadata for OS_os_log;
  if (!lazy cache variable for type metadata for OS_os_log)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
  }
  return result;
}

Swift::Void __swiftcall RecentsListViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for RecentsListViewController(0);
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_30(v2, (uint64_t)static Logger.conversationKit);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "RecentsListViewController viewDidLoad");
    OUTLINED_FUNCTION_3();
  }

  RecentsListViewController.configureCollectionView()();
  RecentsListViewController.configureNavigationItem()();
  RecentsListViewController.configureNavigationToolbar()();
  id v7 = (objc_class *)objc_msgSend(self, sel_conversationKit);
  OUTLINED_FUNCTION_13_11();
  unint64_t v8 = OUTLINED_FUNCTION_3_19(35);
  v9.super.Class isa = v7;
  OUTLINED_FUNCTION_2_29(v8, v10, v11, v12, v9);

  uint64_t v13 = OUTLINED_FUNCTION_24_2();
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(v13, v14, v1, v15);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v16 + 208))())
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    uint64_t v17 = *(void **)&v1[OBJC_IVAR___FTRecentsListViewController_onboardingController];
    uint64_t v18 = self;
    id v19 = v17;
    id v20 = objc_msgSend(v18, sel_sharedInstance);
    id v21 = objc_msgSend(v20, sel_contactStore);

    objc_msgSend(v19, sel_presentOnboardingControllerOnLaunchIfNeededFrom_withContactStore_, v1, v21);
  }
  RecentsListViewController.subscribeToNotifications()();
}

void outlined bridged method (mbnn) of @objc UIViewController.title.setter(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

uint64_t Features.isNameAndPhotoC3Enabled.getter()
{
  return OUTLINED_FUNCTION_2_81((uint64_t)&unk_1F1EA3A98, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
}

uint64_t Features.isHeroTitleEnabled.getter(uint64_t a1, uint64_t (*a2)(void), char a3)
{
  uint64_t v7 = a1;
  uint64_t v8 = a2();
  v6[0] = a3;
  char v4 = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v4 & 1;
}

unint64_t lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities;
  if (!lazy protocol witness table cache variable for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities;
  if (!lazy protocol witness table cache variable for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
  }
  return result;
}

Swift::Void __swiftcall RecentsListViewController.configureNavigationToolbar()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_navigationController);
  if (v2)
  {
    uint64_t v3 = v2;
    id v5 = objc_msgSend(v2, sel_toolbar);

    if (v5)
    {
      objc_msgSend(v5, sel_setBarStyle_, 1);
      objc_msgSend(v5, sel_setTranslucent_, 1);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1C3769F40;
      *(void *)(v4 + 32) = RecentsListViewController.flexibleSpaceButtonItem.getter();
      *(void *)(v4 + 40) = RecentsListViewController.deleteButtonItem.getter();
      *(void *)(v4 + 48) = RecentsListViewController.flexibleSpaceButtonItem.getter();
      specialized Array._endMutation()();
      outlined bridged method (mbnn) of @objc UIViewController.toolbarItems.setter(v4, v1);
    }
  }
}

id RecentsListViewController.flexibleSpaceButtonItem.getter()
{
  uint64_t v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___flexibleSpaceButtonItem;
  id v2 = *(void **)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___flexibleSpaceButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___flexibleSpaceButtonItem);
  }
  else
  {
    uint64_t v4 = v0;
    memset(v10, 0, sizeof(v10));
    id v5 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v6 = @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(5, v10, 0);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void outlined bridged method (mbnn) of @objc UIViewController.toolbarItems.setter(uint64_t a1, void *a2)
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIBarButtonItem);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setToolbarItems_, isa);
}

id @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[3];
  if (v6)
  {
    id v8 = __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v9 = *(void *)(v6 - 8);
    MEMORY[0x1F4188790](v8);
    uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(v3, sel_initWithBarButtonSystemItem_target_action_, a1, v12, a3);
  swift_unknownObjectRelease();
  return v13;
}

void RecentsListViewController.subscribeToNotifications()()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  OUTLINED_FUNCTION_125_0(v2, v3, v4, (uint64_t)sel_didEnterBackgroundNotification_, *MEMORY[0x1E4FB2640]);

  id v5 = objc_msgSend(v1, sel_defaultCenter);
  OUTLINED_FUNCTION_125_0(v5, v6, v7, (uint64_t)sel_willEnterForegroundNotification_, *MEMORY[0x1E4FB2730]);

  id v8 = objc_msgSend(v1, sel_defaultCenter);
  uint64_t v9 = (void *)MEMORY[0x1C87730B0](0xD000000000000018, 0x80000001C379BE10);
  objc_msgSend(v8, sel_addObserver_selector_name_object_, v0, sel_deleteAllRecents_, v9, 0);

  id v14 = objc_msgSend(v1, sel_defaultCenter);
  OUTLINED_FUNCTION_125_0(v14, v10, v11, (uint64_t)sel_contactStoreDidChange_, *MEMORY[0x1E4F1AF80]);
  OUTLINED_FUNCTION_1_0();
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_124_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_124_3(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_124_4(char a1)
{
  closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_124_5()
{
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0);
}

void RecentsListViewController.configureNavigationItem()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_navigationController);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_navigationBar);

    objc_msgSend(v4, sel_setPrefersLargeTitles_, 1);
  }
  id v5 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v5, sel_setLargeTitleDisplayMode_, 1);

  id v6 = objc_msgSend(v1, sel_navigationItem);
  id v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RecentsNavigationBarTitleView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTitleView_, v7);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  id v8 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x1E4FB28F0]);
  id v9 = @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(0x6F65646976, 0xE500000000000000, v8);
  v14[3] = type metadata accessor for RecentsListViewController(0);
  v14[0] = v1;
  objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v13 = v9;
  id v10 = v1;
  id v11 = @nonobjc UIBarButtonItem.init(image:style:target:action:)(v9, 0, v14, (uint64_t)sel_didTapNewCallButton);
  id v12 = objc_msgSend(v10, sel_navigationItem);
  objc_msgSend(v12, sel_setRightBarButtonItem_, v11);

  RecentsListViewController.reloadEditMenu()();
}

uint64_t type metadata accessor for RecentsNavigationBarTitleView()
{
  return self;
}

id @nonobjc UIBarButtonItem.init(image:style:target:action:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t v9 = a3[3];
  if (v9)
  {
    id v11 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    uint64_t v12 = *(void *)(v9 - 8);
    MEMORY[0x1F4188790](v11);
    id v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v16 = objc_msgSend(v5, sel_initWithImage_style_target_action_, a1, a2, v15, a4);
  swift_unknownObjectRelease();

  return v16;
}

id RecentsNavigationBarTitleView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for RecentsNavigationBarTitleView();
  return OUTLINED_FUNCTION_14_14((uint64_t)v8.super_class, sel_initWithFrame_, v1, v2, v3, v4, v5, v6, v8);
}

UIBarButtonItem RecentsListViewController.editBarButtonItem.getter()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
  UIMenuElementSize preferredElementSize = RecentsListViewController.editMenuItems.getter();
  v0._uint64_t countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  v11.value.super.Class isa = 0;
  v11.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v0, (Swift::String_optional)0, v11, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v9).super.super.isa;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIBarButtonItem);
  id v2 = objc_msgSend(self, sel_conversationKit);
  swift__string._object = (void *)0xE000000000000000;
  v3._uint64_t countAndFlagsBits = 1953064005;
  v3._object = (void *)0xE400000000000000;
  v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  swift__string._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, swift__string);

  v10.value.super.Class isa = 0;
  v10.is_nil = 0;
  v12.value.super.super.Class isa = isa;
  return UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v6, v10, v12, v13);
}

Swift::Void __swiftcall RecentsListViewController.reloadEditMenu()()
{
  uint64_t v1 = v0;
  unint64_t v2 = RecentsListViewController.editMenuItems.getter();
  unint64_t v91 = v2;
  id v3 = objc_msgSend(self, sel_sharedInstance);
  if (!v3)
  {
    __break(1u);
    return;
  }
  Swift::String_optional v4 = v3;
  objc_msgSend(v3, sel_deviceType);

  uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x318))() + 24;
  outlined init with copy of Conversation(v5, (uint64_t)v90);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v90, v90[3]);
  uint64_t v6 = OUTLINED_FUNCTION_166();
  uint64_t v8 = v7(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  if (v2 >> 62) {
    goto LABEL_114;
  }
  uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_4:
  os_log_type_t v89 = v1;
  if (v9)
  {
    uint64_t v88 = v8;
    uint64_t v8 = 4;
    while (1)
    {
      uint64_t v1 = (void *)(v8 - 4);
      if ((v2 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C87744F0](v8 - 4, v2);
      }
      else {
        id v10 = *(id *)(v2 + 8 * v8);
      }
      UIImage_optional v11 = v10;
      uint64_t v12 = v8 - 3;
      if (__OFADD__(v1, 1))
      {
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        swift_bridgeObjectRetain_n();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_4;
      }
      self;
      UIMenu_optional v13 = (void *)swift_dynamicCastObjCClass();
      if (v13) {
        id v14 = objc_msgSend(v13, sel_identifier);
      }
      else {
        id v14 = 0;
      }
      if (one-time initialization token for selectActionIdentifier == -1)
      {
        if (!v14) {
          goto LABEL_22;
        }
      }
      else
      {
        swift_once();
        if (!v14)
        {
LABEL_22:

          goto LABEL_23;
        }
      }
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;
      if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
      {
        swift_bridgeObjectRelease_n();

LABEL_27:
        int v21 = 0;
LABEL_28:
        uint64_t v8 = v88;
        uint64_t v1 = v89;
        goto LABEL_29;
      }
      char v20 = OUTLINED_FUNCTION_76_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v20) {
        goto LABEL_27;
      }
LABEL_23:
      ++v8;
      if (v12 == v9)
      {
        int v21 = 1;
        goto LABEL_28;
      }
    }
  }
  int v21 = 1;
LABEL_29:
  swift_bridgeObjectRelease_n();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  unint64_t v2 = OUTLINED_FUNCTION_30(v22, (uint64_t)static Logger.conversationKit);
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled((os_log_t)v2, v23))
  {
    uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_37();
    *(_DWORD *)uint64_t v24 = 134217984;
    v90[0] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, (os_log_t)v2, v23, "Recentlist: recentCounts: %ld", v24, 0xCu);
    OUTLINED_FUNCTION_3();
  }

  if (v8 > 0) {
    int v25 = v21;
  }
  else {
    int v25 = 0;
  }
  if (v25 == 1)
  {
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_105(v27))
    {
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134218240;
      v90[0] = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 1024;
      LODWORD(v90[0]) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v26, (os_log_type_t)v2, "Recentlist: adding selectActionItem in reloadEditMenu because recentCounts: %ld, hasSelectAction: %{BOOL}d", (uint8_t *)v28, 0x12u);
      OUTLINED_FUNCTION_3();
    }

    RecentsListViewController.selectActionItem.getter();
    MEMORY[0x1C87733A0]();
    if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_119:
    }
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    OUTLINED_FUNCTION_39();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_134;
  }
  if (!v8)
  {
    unint64_t v29 = v91;
    if (v91 >> 62) {
      goto LABEL_126;
    }
    OUTLINED_FUNCTION_120_0();
    if (v2)
    {
      while (2)
      {
        uint64_t v8 = 0;
        while (1)
        {
          id v30 = (v29 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1C87744F0](v8, v29)
              : *(id *)(v29 + 8 * v8 + 32);
          uint64_t v31 = v30;
          self;
          uint64_t v32 = (void *)swift_dynamicCastObjCClass();
          id v33 = v32 ? objc_msgSend(v32, sel_identifier) : 0;
          if (one-time initialization token for selectActionIdentifier == -1)
          {
            if (!v33) {
              goto LABEL_60;
            }
          }
          else
          {
            swift_once();
            if (!v33)
            {
LABEL_60:

              goto LABEL_61;
            }
          }
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;
          if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37) {
            break;
          }
          char v39 = OUTLINED_FUNCTION_76_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v39) {
            goto LABEL_65;
          }
LABEL_61:
          uint64_t v40 = v8 + 1;
          uint64_t v1 = v89;
          if (__OFADD__(v8, 1)) {
            goto LABEL_113;
          }
          ++v8;
          if (v40 == v2)
          {
            swift_bridgeObjectRelease();
            unint64_t v29 = v91;
            goto LABEL_128;
          }
        }
        swift_bridgeObjectRelease_n();

LABEL_65:
        swift_bridgeObjectRelease();
        uint64_t v1 = v89;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
        }
        else
        {
          unint64_t v29 = v91;
          if (!(v91 >> 62))
          {
            unint64_t v2 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_68;
          }
        }
        OUTLINED_FUNCTION_67_0();
        _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_5_2();
LABEL_68:
        if (v8 + 1 != v2)
        {
          uint64_t v41 = v8 + 5;
          while (1)
          {
            unint64_t v2 = v41 - 4;
            if ((v29 & 0xC000000000000001) != 0)
            {
              id v42 = (id)MEMORY[0x1C87744F0](v41 - 4, v29);
            }
            else
            {
              if ((v2 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_116:
                __break(1u);
LABEL_117:
                __break(1u);
LABEL_118:
                __break(1u);
                goto LABEL_119;
              }
              if (v2 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_116;
              }
              id v42 = *(id *)(v29 + 8 * v41);
            }
            uint64_t v43 = v42;
            self;
            uint64_t v44 = (void *)swift_dynamicCastObjCClass();
            if (!v44) {
              break;
            }
            id v45 = objc_msgSend(v44, sel_identifier);
            uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v48 = v47;
            if (v46 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v48 == v49)
            {
              swift_bridgeObjectRelease_n();

              uint64_t v1 = v89;
              goto LABEL_104;
            }
            char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            uint64_t v1 = v89;
            if ((v51 & 1) == 0) {
              goto LABEL_82;
            }
LABEL_104:
            uint64_t v61 = v41 - 3;
            if (__OFADD__(v2, 1)) {
              goto LABEL_117;
            }
            unint64_t v29 = v91;
            if (v91 >> 62)
            {
              OUTLINED_FUNCTION_67_0();
              _CocoaArrayWrapper.endIndex.getter();
              OUTLINED_FUNCTION_5_2();
            }
            else
            {
              unint64_t v2 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            ++v41;
            if (v61 == v2) {
              goto LABEL_130;
            }
          }

LABEL_82:
          if (v2 != v8)
          {
            unint64_t v29 = v91;
            if ((v91 & 0xC000000000000001) != 0)
            {
              uint64_t v54 = MEMORY[0x1C87744F0](v8, v91);
              id v55 = (id)MEMORY[0x1C87744F0](v41 - 4, v29);
            }
            else
            {
              if (v8 < 0)
              {
                __break(1u);
LABEL_121:
                __break(1u);
LABEL_122:
                __break(1u);
LABEL_123:
                __break(1u);
LABEL_124:
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                OUTLINED_FUNCTION_66();
                unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
                if (!v2) {
                  goto LABEL_127;
                }
                continue;
              }
              unint64_t v52 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v8 >= v52) {
                goto LABEL_121;
              }
              id v53 = *(id *)(v91 + 8 * v8 + 32);
              if ((v2 & 0x8000000000000000) != 0) {
                goto LABEL_122;
              }
              if (v2 >= v52) {
                goto LABEL_123;
              }
              uint64_t v54 = (uint64_t)v53;
              id v55 = *(id *)(v29 + 8 * v41);
            }
            id v56 = v55;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (v29 & 0x8000000000000000) != 0
              || (v29 & 0x4000000000000000) != 0)
            {
              unint64_t v29 = specialized _ArrayBuffer._consumeAndCreateNew()(v29);
              unint64_t v91 = v29;
            }
            id v57 = *(void **)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
            *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v56;

            specialized Array._endMutation()();
            unint64_t v29 = v91;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (v29 & 0x8000000000000000) != 0
              || (v29 & 0x4000000000000000) != 0)
            {
              unint64_t v29 = specialized _ArrayBuffer._consumeAndCreateNew()(v29);
              unint64_t v91 = v29;
            }
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_124;
            }
            uint64_t v58 = v29 & 0xFFFFFFFFFFFFFF8;
            if (v2 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_125;
            }
            uint64_t v59 = *(void **)(v58 + 8 * v41);
            *(void *)(v58 + 8 * v41) = v54;

            specialized Array._endMutation()();
          }
          if (__OFADD__(v8++, 1)) {
            goto LABEL_118;
          }
          goto LABEL_104;
        }
        break;
      }
    }
    else
    {
LABEL_127:
      swift_bridgeObjectRelease();
LABEL_128:
      if (v29 >> 62) {
        goto LABEL_147;
      }
      uint64_t v8 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    while (1)
    {
LABEL_130:
      if (v29 >> 62)
      {
        OUTLINED_FUNCTION_67_0();
        _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_5_2();
      }
      else
      {
        unint64_t v2 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if ((uint64_t)v2 >= v8) {
        break;
      }
      __break(1u);
LABEL_147:
      OUTLINED_FUNCTION_66();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t v62 = OUTLINED_FUNCTION_24_2();
    specialized Array.replaceSubrange<A>(_:with:)(v62, v63, v64, v65, v66, v67, v68, v69, v86, v87);
  }
LABEL_134:
  Swift::Int v70 = RecentsListViewController.editMenu.getter();
  id v71 = [(objc_class *)v70 children];

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
  unint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v72 >> 62)
  {
    OUTLINED_FUNCTION_156();
    uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v91 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v74 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v73 == v74)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v75 = RecentsListViewController.editMenu.getter();
    OUTLINED_FUNCTION_39();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v77 = [(objc_class *)v75 menuByReplacingChildren:isa];

    RecentsListViewController.editMenu.setter((uint64_t)v77);
    id v78 = objc_msgSend(v1, sel_navigationItem);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIBarButtonItem);
    uint64_t v79 = (objc_class *)objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_13_11();
    v80.super.Class isa = v79;
    OUTLINED_FUNCTION_2_29(1953064005, 0xE400000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v80);

    RecentsListViewController.editMenu.getter();
    v81.value._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_162();
    v92.value.super.Class isa = 0;
    v92.is_nil = 0;
    Class v82 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v81, v92, v93, v94).super.super.isa;
    objc_msgSend(v78, sel_setLeftBarButtonItem_, v82);

    id v83 = objc_msgSend(v1, sel_navigationController);
    if (v83)
    {
      uint64_t v84 = v83;
      id v85 = objc_msgSend(v83, sel_navigationBar);

      objc_msgSend(v85, sel_reloadInputViews);
    }
  }
}

uint64_t OUTLINED_FUNCTION_37_5(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 296));
}

void OUTLINED_FUNCTION_37_9(void *a1)
{
  ControlsButtonProvider.backgroundStyle.setter(a1, 0, 64);
}

uint64_t OUTLINED_FUNCTION_37_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for ParticipantGridView.IdentifiableParticipantTile(0);
}

uint64_t OUTLINED_FUNCTION_37_12()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_37_14()
{
  return 0;
}

void OUTLINED_FUNCTION_37_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 264) = &a9;
}

unint64_t OUTLINED_FUNCTION_37_16@<X0>(unint64_t *a1@<X8>)
{
  return closure #1 in RemoteControlStateMachine.state.getter(v1, a1);
}

id OUTLINED_FUNCTION_37_17()
{
  Swift::String_optional v4 = *(void **)(*(void *)(*(void *)v1 + 48) + 8 * v2);
  void *v0 = v4;
  return v4;
}

unint64_t OUTLINED_FUNCTION_37_18()
{
  return specialized __RawDictionaryStorage.find<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_37_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_20()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_37_21()
{
  *(unsigned char *)(v0 - 200) = 0;
  return Published.init(initialValue:)();
}

uint64_t OUTLINED_FUNCTION_37_22()
{
  outlined init with take of Notice((long long *)(v0 + 208), v1 - 168);
  return ConversationControlsNoticeCoordinator.peek()(v0 + 160);
}

unint64_t OUTLINED_FUNCTION_37_23()
{
  *(void *)(v2 - 328) = v0;
  *(void *)(v2 - 320) = v1;
  return lazy protocol witness table accessor for type String and conformance String();
}

void OUTLINED_FUNCTION_37_25(float a1)
{
  float *v1 = a1;
}

double OUTLINED_FUNCTION_37_26@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, long long a6, uint64_t a7, uint64_t a8, char a9, long long a10, long long a11, long long a12, long long a13, long long a14, __n128 a15, uint64_t a16)
{
  uint64_t v18 = *(void *)(v16 - 112);
  uint64_t v19 = *(void *)(v16 - 104);
  *(void *)&double result = ReportSpamManager.SpamDataModel.init(invitedMembers:callType:callLength:hasLink:recipientHandleValue:senderHandle:messageId:spamTime:messageKey:callStatus:linkName:snapFirstName:snapLastName:snapRecordId:snapRecordInfo:)(a1, a2, a3, a4, 0, 0, v18, v19, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
                         a16).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_37_28()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_37_29()
{
  return 7104878;
}

uint64_t OUTLINED_FUNCTION_37_30(float a1)
{
  float *v1 = a1;
  return _typeName(_:qualified:)();
}

id OUTLINED_FUNCTION_37_31(void *a1)
{
  return objc_msgSend(a1, (SEL)(v3 + 917), v1, v2, 64);
}

uint64_t OUTLINED_FUNCTION_37_32@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_37_33(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

__n128 OUTLINED_FUNCTION_37_34(double a1, __n128 a2)
{
  v2[11] = a2;
  v2[12].n128_u64[0] = 0x4030000000000000;
  v2[12].n128_f64[1] = a1;
  __asm { FMOV            V0.2D, #20.0 }
  return result;
}

uint64_t OUTLINED_FUNCTION_37_35()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return type metadata accessor for AccountUpdateNotice(0);
}

void OUTLINED_FUNCTION_51_1(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return outlined init with take of RemoteControlRequest();
}

uint64_t OUTLINED_FUNCTION_51_3(uint64_t a1, ...)
{
  va_start(va, a1);
  return specialized Set._Variant.insert(_:)(va, v1, v2);
}

id OUTLINED_FUNCTION_51_4()
{
  *(_WORD *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = 6;
  *(unsigned char *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = 0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_51_5()
{
  type metadata accessor for ParticipantGridView.VideoInfoCache(0);
  return swift_allocObject();
}

void OUTLINED_FUNCTION_51_6()
{
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)(v0 - 120), *(_DWORD *)(v0 - 108) & 1);
  specialized Environment.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_10()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_51_11()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
}

uint64_t OUTLINED_FUNCTION_51_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_13@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return _s15ConversationKit11ParticipantVSgWOcTm_0(v3, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

uint64_t OUTLINED_FUNCTION_51_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_51_15()
{
  return outlined init with copy of Participant.State();
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_51_17()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_51_18(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_51_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_20(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v3 + 80);
  return _s15ConversationKit11ParticipantVWOcTm_10(v4, v6, a3);
}

uint64_t OUTLINED_FUNCTION_51_21()
{
  return v0 - 168;
}

double OUTLINED_FUNCTION_51_22()
{
  return *(double *)(v0 + 216);
}

uint64_t OUTLINED_FUNCTION_51_23()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t RecentsListViewController.editMenuItems.getter()
{
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (meCardSharingEnabled.getter())
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UICustomViewMenuElement);
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v0;
    id v2 = v0;
    uint64_t v3 = (uint64_t)@nonobjc UICustomViewMenuElement.__allocating_init(viewProvider:)((uint64_t)partial apply for closure #1 in RecentsListViewController.editMenuItems.getter, v1);
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    id v4 = objc_msgSend(self, sel_conversationKit);
    v5._uint64_t countAndFlagsBits = 0xD000000000000015;
    swift__string._object = (void *)0xE000000000000000;
    v5._object = (void *)0x80000001C379BC00;
    v6.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v6.value._object = (void *)0xEF74694B6E6F6974;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    swift__string._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, swift__string);

    uint64_t v8 = String.init(format:_:)();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain();
    uint64_t v3 = UIAction.init(title:imageSymbolName:target:selector:discoverabilityTitle:)(v8, v10, 0xD000000000000012, 0x80000001C379BC20, (uint64_t)v0, (uint64_t)sel_presentOnboardingViewController);
  }
  UIImage_optional v11 = (void *)v3;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3769830;
  *(void *)(v12 + 32) = v11;
  UIMenuElementSize preferredElementSize = v12;
  specialized Array._endMutation()();
  id v13 = v11;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v20.value.super.Class isa = 0;
  v20.is_nil = 0;
  uint64_t v15 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v14, (Swift::String_optional)0, v20, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v17).super.super.isa;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  RecentsListViewController.selectActionItem.getter();
  MEMORY[0x1C87733A0]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v19;
}

uint64_t UIAction.init(title:imageSymbolName:target:selector:discoverabilityTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for UIImage();
  @nonobjc UIImage.__allocating_init(systemName:)();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a6;
  swift_retain();
  uint64_t v9 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  swift_release();
  swift_unknownObjectRelease();
  return v9;
}

id @nonobjc UIImage.__allocating_init(systemName:)()
{
  uint64_t v0 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_systemImageNamed_, v0);

  return v1;
}

unint64_t type metadata accessor for UIImage()
{
  unint64_t result = lazy cache variable for type metadata for UIImage;
  if (!lazy cache variable for type metadata for UIImage)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  }
  return result;
}

uint64_t RecentsListViewController.selectActionItem.getter()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  id v0 = objc_msgSend(self, sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x7463656C6553;
  v1._object = (void *)0xE600000000000000;
  v2.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v7);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  if (one-time initialization token for selectActionIdentifier != -1) {
    swift_once();
  }
  id v4 = (void *)static RecentsListViewController.Constants.selectActionIdentifier;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = v4;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

Class meCardSharingEnabled.getter()
{
  if (one-time initialization token for nicknamesDefaults != -1) {
    swift_once();
  }
  Class isa = nicknamesDefaults.value.super.isa;
  if (nicknamesDefaults.value.super.isa)
  {
    Swift::String v1 = (void *)MEMORY[0x1C87730B0](0xD000000000000014, 0x80000001C37AB340);
    Class isa = (Class)[(objc_class *)isa BOOLForKey:v1];
  }
  return isa;
}

uint64_t OUTLINED_FUNCTION_174()
{
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
}

void OUTLINED_FUNCTION_174_0(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t OUTLINED_FUNCTION_174_1(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_174_2()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_174_4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8) = a1;
  return swift_unknownObjectWeakAssign();
}

objc_class *RecentsListViewController.editMenu.getter()
{
  uint64_t v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___editMenu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___editMenu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___editMenu);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
    UIMenuElementSize preferredElementSize = RecentsListViewController.editMenuItems.getter();
    v5._uint64_t countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v12.value.super.Class isa = 0;
    v12.is_nil = 0;
    v6.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v5, (Swift::String_optional)0, v12, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v11).super.super.isa;
    Swift::String v7 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v6;
    uint64_t v3 = v6.super.super.isa;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t outlined init with copy of Conversation(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  OUTLINED_FUNCTION_48();
  (*v3)(a2);
  return a2;
}

id RecentsListViewController.deleteButtonItem.getter()
{
  return RecentsListViewController.collectionView.getter(&OBJC_IVAR___FTRecentsListViewController____lazy_storage___deleteButtonItem, (uint64_t (*)(uint64_t))closure #1 in RecentsListViewController.deleteButtonItem.getter);
}

uint64_t dispatch thunk of ScreenSharingInteractionController.remoteControlStatus.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

const char *protocol witness for FeatureFlagsKey.feature.getter in conformance Features.TelephonyUtilities()
{
  return Features.TelephonyUtilities.feature.getter(*v0);
}

const char *protocol witness for FeatureFlagsKey.domain.getter in conformance Features.TelephonyUtilities()
{
  return Features.TelephonyUtilities.domain.getter();
}

void *partial apply for closure #1 in RecentsListViewController.createSectionHeaderViewRegistrationForSupplementalView()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return closure #1 in RecentsListViewController.createSectionHeaderViewRegistrationForSupplementalView()(a1, a2, a3, a4, v4);
}

void partial apply for closure #1 in RecentsListViewController.createHeaderButtonsViewRegistration()(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  closure #1 in RecentsListViewController.createHeaderButtonsViewRegistration()(a1, a2, a3, a4, v4);
}

id CNKScreenSharingInteractionControllerFactory.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = static ScreenSharingInteractionController.shared;
  return v0;
}

unint64_t outlined consume of RemoteControlState(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

BOOL RecentsCallItem.shouldShowDate.getter()
{
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_60();
  _s15ConversationKit19RecentsCallItemTypeOWOcTm_0((uint64_t)v0, (uint64_t)v0);
  OUTLINED_FUNCTION_41_0();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    _s15ConversationKit19RecentsCallItemTypeOWOhTm_2((uint64_t)v0, (void (*)(void))type metadata accessor for RecentsCallItemType);
    return 1;
  }
  id v7 = *v0;
  id v2 = *v0;
  swift_bridgeObjectRetain();
  swift_retain();
  ConversationLink.prevailingSuggestion.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    char v5 = SGURL.hasEventDate.getter();
    swift_release();
    swift_bridgeObjectRelease();

    if (v5)
    {
      swift_release();
      swift_bridgeObjectRelease();

      return 1;
    }
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  RecentsCallItem.sectionOverride.getter();
  swift_release();
  swift_bridgeObjectRelease();

  return v7 != 2;
}

unint64_t *initializeBufferWithCopyOfBuffer for RemoteControlState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  outlined copy of RemoteControlState(*a2);
  *a1 = v3;
  return a1;
}

unint64_t outlined copy of RemoteControlState(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t RecentsCallItem.itemStyle.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_214_0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = *MEMORY[0x1E4FAD9C8];
      type metadata accessor for RecentsCallItemStyle();
      OUTLINED_FUNCTION_0();
      (*(void (**)(uint64_t, uint64_t))(v9 + 104))(a1, v8);
      uint64_t result = _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for RecentsCallItemType);
      break;
    case 2u:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v4 = (unsigned int *)MEMORY[0x1E4FAD9B8];
      goto LABEL_4;
    default:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_2(v1, (void (*)(void))type metadata accessor for RecentsCallItemType);
      uint64_t v4 = (unsigned int *)MEMORY[0x1E4FAD9C0];
LABEL_4:
      uint64_t v5 = *v4;
      type metadata accessor for RecentsCallItemStyle();
      OUTLINED_FUNCTION_0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 104))(a1, v5);
      break;
  }
  return result;
}

id thunk for @escaping @callee_guaranteed (@guaranteed UICustomViewMenuElement) -> (@owned UIView)(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

id closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(uint64_t a1, SEL *a2)
{
  id v2 = [self *a2];
  uint64_t v3 = (void *)UITraitCollection.modifyingTraits(_:)();
  id v4 = objc_msgSend(v2, sel_resolvedColorWithTraitCollection_, v3);

  return v4;
}

id closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(uint64_t a1)
{
  return closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(a1, (SEL *)&selRef_systemGreenColor);
}

void one-time initialization function for topMargin()
{
  static RecentsHeaderButtonsView.Constants.topMargin = 0x4030000000000000;
}

void one-time initialization function for buttonContentVerticalPadding()
{
  static RecentsHeaderButtonsView.Constants.buttonContentVerticalPadding = 0x4028000000000000;
}

void one-time initialization function for imageReservation()
{
  static RecentsHeaderButtonsView.Constants.imageReservation = 0x4037000000000000;
}

void one-time initialization function for estimatedHeight()
{
  static RecentsHeaderButtonsView.Constants.estimatedHeight = 0x4059000000000000;
}

{
  static LinkDetailHeaderView.Layout.estimatedHeight = 0x4059000000000000;
}

void one-time initialization function for stackViewSpacing()
{
  static RecentsHeaderButtonsView.Constants.stackViewSpacing = 0x4020000000000000;
}

id one-time initialization function for shared()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Features()), sel_init);
  static Features.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id result;
  char *v9;
  void (*v10)(void);
  id v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;

  type metadata accessor for FeatureEligibilityChecker();
  OUTLINED_FUNCTION_5_3();
  id v2 = MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = type metadata accessor for DeviceRestrictionController();
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    DeviceRestrictionController.init(profileConnection:)();
    FeatureEligibilityChecker.init()();
    uint64_t v9 = (char *)objc_allocWithZone((Class)type metadata accessor for ScreenSharingInteractionController());
    OUTLINED_FUNCTION_2_1();
    v10();
    Swift::OpaquePointer v11 = specialized ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(v7, v0, (uint64_t)v4, v9);
    UIImage_optional v12 = OUTLINED_FUNCTION_23_0();
    id result = (id)v13(v12);
    static ScreenSharingInteractionController.shared = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  id v0;
  id v1;
  id result;

  uint64_t v0 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v1 = objc_allocWithZone((Class)type metadata accessor for RestrictedConversationChecker());
  id result = RestrictedConversationChecker.init(callCenter:)(v0);
  static RestrictedConversationChecker.shared = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppleIntelligenceManager()), sel_init);
  static AppleIntelligenceManager.shared = result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConversationCapabilities()), sel_init);
  static ConversationCapabilities.shared = result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NameAndPhotoUtilities()), sel_init);
  static NameAndPhotoUtilities.shared = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PhoneLockStateObserver()), sel_init);
  static PhoneLockStateObserver.shared = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharePlayDiscoverabilityAppsController()), sel_init);
  static SharePlayDiscoverabilityAppsController.shared = (uint64_t)result;
  return result;
}

id Features.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Features();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for Features()
{
  return self;
}

uint64_t ScreenSharingInteractionController.remoteControlStatus.getter()
{
  OUTLINED_FUNCTION_0_20();
  if (!(*(uint64_t (**)(void))(v0 + 248))()) {
    return 1;
  }
  OUTLINED_FUNCTION_17_8();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 424))();
  swift_release();
  return v2;
}

uint64_t ScreenSharingInteractionController.session.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_23_0();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void RecentsHeaderButtonsView.updateButtons()()
{
  RecentsHeaderButtonsView.updateSymbolConfiguration()();
  RecentsHeaderButtonsView.updateFonts()();
  RecentsHeaderButtonsView.updateCornerRadius()();
  RecentsHeaderButtonsView.updateImageReservation()();
  RecentsHeaderButtonsView.updateButtonsViewAxis()();
  uint64_t v1 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8);
  uint64_t v2 = (void *)v1();
  if (objc_msgSend(self, sel_supportsConversations)) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = (uint64_t)objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_featureFlags), sel_greenTeaLinksEnabled);
  }
  objc_msgSend(v2, sel_setUserInteractionEnabled_, v3);

  id v4 = (id)((uint64_t (*)(id))v1)(objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton), sel_setNeedsUpdateConfiguration));
  objc_msgSend(v4, sel_setNeedsUpdateConfiguration);
}

void RecentsHeaderButtonsView.configure()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  RecentsHeaderButtonsView.headerDelegate.setter((uint64_t)partial apply for closure #1 in RecentsHeaderButtonsView.configure(), v6);
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton;
  id v8 = *(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton);
  RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter((uint64_t)v5);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v9);
  UIButton.configuration.setter();

  objc_msgSend(*(id *)((char *)v1 + v7), sel_setPreferredBehavioralStyle_, 1);
  id v10 = objc_msgSend(*(id *)((char *)v1 + v7), sel_layer);
  uint64_t v11 = *MEMORY[0x1E4F39EA8];
  objc_msgSend(v10, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  objc_msgSend(*(id *)((char *)v1 + v7), sel_setPointerInteractionEnabled_, 1);
  UIImage_optional v12 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xE8);
  OUTLINED_FUNCTION_2_31();
  id v13 = (void *)v12();
  RecentsHeaderButtonsView.createLinkButtonConfiguration.getter((uint64_t)v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v9);
  UIButton.configuration.setter();

  OUTLINED_FUNCTION_2_31();
  Swift::String v14 = (void *)v12();
  objc_msgSend(v14, sel_setPreferredBehavioralStyle_, 1);

  OUTLINED_FUNCTION_2_31();
  uint64_t v15 = (void *)v12();
  id v16 = objc_msgSend(v15, sel_layer);

  objc_msgSend(v16, sel_setCornerCurve_, v11);
  OUTLINED_FUNCTION_2_31();
  Swift::OpaquePointer v17 = (void *)v12();
  objc_msgSend(v17, sel_setPointerInteractionEnabled_, 1);

  id v18 = objc_msgSend(*(id *)((char *)v1 + v7), sel_layer);
  objc_msgSend(v18, sel_setMasksToBounds_, 1);

  OUTLINED_FUNCTION_2_31();
  uint64_t v19 = (void *)v12();
  id v20 = objc_msgSend(v19, sel_layer);

  objc_msgSend(v20, sel_setMasksToBounds_, 1);
  OUTLINED_FUNCTION_2_31();
  int v21 = (void *)v12();
  uint64_t v22 = &selRef_labelColor;
  if ((objc_msgSend(self, sel_supportsConversations) & 1) == 0
    && !objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_featureFlags), sel_greenTeaLinksEnabled))
  {
    uint64_t v22 = &selRef_secondaryLabelColor;
  }
  id v23 = [self *v22];
  objc_msgSend(v21, sel_setTintColor_, v23);

  RecentsHeaderButtonsView.updateButtons()();
  uint64_t v24 = (void *)((uint64_t (*)(id))v12)(objc_msgSend(*(id *)((char *)v1 + v7), sel_addTarget_action_forControlEvents_, v1, sel_didTapNewCallButton, 64));
  objc_msgSend(v24, sel_addTarget_action_forControlEvents_, v1, sel_didTapNewLinkButton, 64);

  OUTLINED_FUNCTION_7_25();
  id v26 = *(uint64_t (**)(void))(v25 + 280);
  os_log_type_t v27 = (void *)v26();
  OUTLINED_FUNCTION_2_31();
  uint64_t v28 = (void *)v12();
  objc_msgSend(v27, sel_addArrangedSubview_, v28);

  OUTLINED_FUNCTION_4_37();
  unint64_t v29 = (void *)v26();
  objc_msgSend(v29, sel_addArrangedSubview_, *(void *)((char *)v1 + v7));

  OUTLINED_FUNCTION_4_37();
  id v30 = (void *)v26();
  objc_msgSend(v1, sel_addSubview_, v30);

  OUTLINED_FUNCTION_4_37();
  uint64_t v31 = (void *)v26();
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = objc_msgSend(v1, sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  RecentsHeaderButtonsView.bottomAnchorConstraint.setter(v34);
  OUTLINED_FUNCTION_7_25();
  uint64_t v36 = (*(uint64_t (**)(void))(v35 + 256))();
  if (v36)
  {
    uint64_t v37 = (void *)v36;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C3769580;
    OUTLINED_FUNCTION_4_37();
    char v39 = (void *)v26();
    id v40 = objc_msgSend(v39, sel_topAnchor);

    id v41 = objc_msgSend(v1, sel_topAnchor);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    char v42 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))();
    double v43 = 0.0;
    double v44 = 0.0;
    if ((v42 & 1) == 0)
    {
      if (one-time initialization token for topMargin != -1) {
        swift_once();
      }
      double v44 = *(double *)&static RecentsHeaderButtonsView.Constants.topMargin;
    }
    id v45 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, v44);

    *(void *)(v38 + 32) = v45;
    OUTLINED_FUNCTION_4_37();
    uint64_t v46 = (void *)v26();
    id v47 = objc_msgSend(v46, sel_leadingAnchor);

    id v48 = objc_msgSend(v1, sel_leadingAnchor);
    OUTLINED_FUNCTION_3_46();
    char v50 = (*(uint64_t (**)(void))(v49 + 872))();
    double v51 = 16.0;
    if ((v50 & 1) == 0) {
      double v51 = 0.0;
    }
    id v52 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, &selRef_ringButton, v51);

    *(void *)(v38 + 40) = v52;
    OUTLINED_FUNCTION_4_37();
    id v53 = (void *)v26();
    id v54 = objc_msgSend(v53, sel_trailingAnchor);

    id v55 = objc_msgSend(v1, sel_trailingAnchor);
    OUTLINED_FUNCTION_3_46();
    if ((*(uint64_t (**)(void))(v56 + 872))()) {
      double v43 = -16.0;
    }
    id v57 = self;
    id v58 = objc_msgSend(v54, sel_constraintEqualToAnchor_constant_, &selRef_ringButton, v43);

    *(void *)(v38 + 48) = v58;
    *(void *)(v38 + 56) = v37;
    v61[1] = v38;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    id v59 = v37;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v57, sel_activateConstraints_, isa);
  }
}

id RecentsHeaderButtonsView.createLinkButton.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  return v1;
}

id RecentsHeaderButtonsView.buttonsView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView);
  }
  else
  {
    id v4 = closure #1 in RecentsHeaderButtonsView.buttonsView.getter();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v11);
  id v13 = &v17[-v12];
  uint64_t v14 = v4 + *a1;
  swift_beginAccess();
  outlined init with copy of UIButton.Configuration?(v14, (uint64_t)v13);
  uint64_t v15 = type metadata accessor for UIButton.Configuration();
  if (OUTLINED_FUNCTION_17_16(v15) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v5 - 8) + 32))(a3, v13, v5);
  }
  outlined destroy of UIButton.Configuration?((uint64_t)v13);
  a2(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v3, a3, v5);
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v5);
  swift_beginAccess();
  outlined assign with take of UIButton.Configuration?(v3, v14);
  return swift_endAccess();
}

uint64_t outlined destroy of UIButton.Configuration?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined assign with take of UIButton.Configuration?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of UIButton.Configuration?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall RecentsListViewController.configureCollectionView()()
{
  OUTLINED_FUNCTION_24_0();
  id v1 = OUTLINED_FUNCTION_172_0();
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_20();
  v3 += 108;
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)(*v3)();
  objc_msgSend(v2, sel_addSubview_, v5);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3769580;
  OUTLINED_FUNCTION_170();
  uint64_t v7 = (void *)v4();
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = OUTLINED_FUNCTION_172_0();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_topAnchor);

  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  *(void *)(v6 + 32) = v12;
  OUTLINED_FUNCTION_170();
  id v13 = (void *)v4();
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = OUTLINED_FUNCTION_172_0();
  if (!v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v16 = v15;
  id v17 = objc_msgSend(v15, sel_bottomAnchor);

  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);
  *(void *)(v6 + 40) = v18;
  OUTLINED_FUNCTION_170();
  uint64_t v19 = (void *)v4();
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = OUTLINED_FUNCTION_172_0();
  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v21, sel_safeAreaLayoutGuide);

  id v24 = objc_msgSend(v23, sel_leadingAnchor);
  id v25 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v24);

  *(void *)(v6 + 48) = v25;
  OUTLINED_FUNCTION_170();
  id v26 = (void *)v4();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = [v0 (SEL)0x1F6DD7798];
  if (!v28)
  {
LABEL_13:
    __break(1u);
    return;
  }
  unint64_t v29 = v28;
  id v30 = self;
  id v31 = objc_msgSend(v29, sel_safeAreaLayoutGuide);

  id v32 = objc_msgSend(v31, sel_trailingAnchor);
  id v33 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v32);

  *(void *)(v6 + 56) = v33;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_activateConstraints_, isa);
  OUTLINED_FUNCTION_22();
}

uint64_t closure #2 in closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v7 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIListSeparatorConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1C8776240](a3 + 16);
  if (!v15) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a4, a2, v11);
  }
  id v16 = (void *)v15;
  id v58 = v10;
  uint64_t v59 = v8;
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  uint64_t v18 = (*MEMORY[0x1E4FBC8C8] & *v16) + 864;
  uint64_t v19 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v16) + 0x360);
  id v20 = (void *)v19(v17);
  uint64_t v21 = outlined bridged method (ob) of @objc UICollectionView.indexPathsForSelectedItems.getter(v20);
  if (!v21)
  {

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v14, v11);
  }
  uint64_t v22 = v21;
  uint64_t v51 = v12;
  uint64_t v52 = v7;
  id v55 = v14;
  id v53 = (uint64_t (*)(uint64_t))v11;
  uint64_t v50 = a4;
  uint64_t v23 = type metadata accessor for IndexPath();
  uint64_t v49 = &v47;
  uint64_t v60 = *(void **)(v23 - 8);
  id v24 = (char *)v60[8];
  MEMORY[0x1F4188790](v23);
  unint64_t v54 = (unint64_t)(v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v25 = (char *)&v47 - v54;
  uint64_t v26 = v61;
  uint64_t v27 = IndexPath.row.getter();
  id v28 = (void (*)(char *, uint64_t))(v27 + 1);
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v29 = IndexPath.section.getter();
  uint64_t v30 = MEMORY[0x1C876F250](v28, v29);
  id v31 = (void *)v19(v30);
  uint64_t v56 = (char *)objc_msgSend(v31, sel_numberOfItemsInSection_, IndexPath.section.getter());

  MEMORY[0x1F4188790](v32);
  id v57 = v25;
  *(&v47 - 2) = (uint64_t)v25;
  uint64_t v33 = specialized Sequence.contains(where:)((uint64_t)partial apply for specialized closure #1 in Sequence<>.contains(_:), (uint64_t)(&v47 - 4), v22);
  char v34 = v33;
  uint64_t v47 = (uint64_t)&v47;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v47 - v54;
  uint64_t v36 = (uint64_t (*)(char *, uint64_t, uint64_t))v60[2];
  uint64_t v37 = v36((char *)&v47 - v54, v26, v23);
  uint64_t v48 = v23;
  if (v34)
  {
    id v28 = (void (*)(char *, uint64_t))v60[1];
    v28(v35, v23);
    swift_bridgeObjectRelease();
    uint64_t v26 = v52;
    uint64_t v19 = v53;
    uint64_t v18 = v59;
    id v24 = v55;
    uint64_t v23 = v51;
    goto LABEL_6;
  }
  MEMORY[0x1F4188790](v37);
  *(&v47 - 2) = (uint64_t)v35;
  char v39 = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)(&v47 - 4), v22);
  uint64_t v40 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v40);
  id v41 = (char *)&v47 - ((unint64_t)(v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36(v41, (uint64_t)v35, v23);
  id v24 = v55;
  if ((v39 & 1) == 0)
  {
    id v28 = (void (*)(char *, uint64_t))v60[1];
    v28(v41, v23);
    v28(v35, v23);
    uint64_t v26 = v52;
    uint64_t v19 = v53;
    uint64_t v18 = v59;
    uint64_t v23 = v51;
LABEL_14:
    uint64_t result = IndexPath.row.getter();
    if (__OFSUB__(v56, 1))
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (result >= (uint64_t)(v56 - 1)
      || (id v43 = objc_msgSend(v16, sel_traitCollection),
          id v44 = objc_msgSend(v43, sel_userInterfaceIdiom),
          v43,
          v44 != (id)5))
    {
LABEL_17:
      if (one-time initialization token for shared == -1)
      {
LABEL_18:
        char v45 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))();
        uint64_t v46 = v57;
        if ((v45 & 1) == 0)
        {
          v28(v57, v48);

          return (*(uint64_t (**)(uint64_t, char *, uint64_t (*)(uint64_t)))(v23 + 32))(v50, v24, v19);
        }
        uint64_t result = IndexPath.row.getter();
        if (!__OFSUB__(v56, 1))
        {
          if ((char *)result == v56 - 1)
          {
            (*(void (**)(char *, void, uint64_t))(v18 + 104))(v58, *MEMORY[0x1E4FB1000], v26);
            uint64_t v46 = v57;
            UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
          }
          UIListSeparatorConfiguration.topSeparatorInsets.setter();

          v28(v46, v48);
          return (*(uint64_t (**)(uint64_t, char *, uint64_t (*)(uint64_t)))(v23 + 32))(v50, v24, v19);
        }
        __break(1u);
        goto LABEL_28;
      }
LABEL_26:
      swift_once();
      goto LABEL_18;
    }
LABEL_6:
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v58, *MEMORY[0x1E4FB1008], v26);
    UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
    goto LABEL_17;
  }
  uint64_t v42 = IndexPath.row.getter();
  id v28 = (void (*)(char *, uint64_t))v60[1];
  v28(v41, v23);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v35, v23);
  uint64_t v18 = v59;
  if (!__OFADD__(v42, 1))
  {
    uint64_t v26 = v52;
    uint64_t v19 = v53;
    uint64_t v23 = v51;
    if ((char *)(v42 + 1) != v56) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_29:
  __break(1u);
  return result;
}

id RecentsListViewController.collectionView.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id RecentsListViewController.collectionView.getter()
{
  return RecentsListViewController.collectionView.getter(&OBJC_IVAR___FTRecentsListViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))closure #1 in RecentsListViewController.collectionView.getter);
}

uint64_t specialized Sequence.contains(where:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized Sequence.contains(where:)(a1, a2, a3, (uint64_t)&demangling cache variable for type metadata for IndexPath?, MEMORY[0x1F418BF68]) & 1;
}

{
  return specialized Sequence.contains(where:)(a1, a2, a3, (uint64_t)&demangling cache variable for type metadata for UUID?, MEMORY[0x1F418BC30]) & 1;
}

uint64_t specialized Sequence.contains(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  OUTLINED_FUNCTION_23_30(a1);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
  MEMORY[0x1F4188790](v9 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = *(void *)(v6 + 16);
  id v31 = a5;
  if (v13)
  {
    uint64_t v14 = a5(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = v6 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v32 = *(void *)(v15 + 72);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v33(v12, v16, v14);
      __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v14);
      if (EnumTagSinglePayload == 1) {
        break;
      }
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      OUTLINED_FUNCTION_21();
      uint64_t v20 = v19 - v18;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v19 - v18, v12, v14);
      char v22 = v34(v20);
      if (v5)
      {
        uint64_t v29 = OUTLINED_FUNCTION_10_50();
        v30(v29);
        swift_bridgeObjectRelease();
        return v27 & 1;
      }
      char v23 = v22;
      uint64_t v24 = OUTLINED_FUNCTION_10_50();
      v25(v24);
      if (v23)
      {
        swift_bridgeObjectRelease();
        char v27 = 1;
        return v27 & 1;
      }
      v16 += v32;
      if (!--v13) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v26 = v31(0);
    __swift_storeEnumTagSinglePayload(v12, 1, 1, v26);
  }
  swift_bridgeObjectRelease();
  char v27 = 0;
  return v27 & 1;
}

id Defaults.videoMessagingEnabledM3.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_videoMessagingEnabledM3);
}

uint64_t outlined bridged method (ob) of @objc UICollectionView.indexPathsForSelectedItems.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_indexPathsForSelectedItems);

  if (!v2) {
    return 0;
  }
  type metadata accessor for IndexPath();
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  return PersonNameComponents.familyName.setter();
}

uint64_t OUTLINED_FUNCTION_179_2()
{
  return outlined destroy of SystemUpdateNotice?(v0, v1);
}

void *OUTLINED_FUNCTION_179_3(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return __swift_project_boxed_opaque_existential_1(v2, v2[3]);
}

id closure #1 in RecentsListViewController.deleteButtonItem.getter(void *a1)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C379BB90;
  v3._uint64_t countAndFlagsBits = 0xD000000000000020;
  v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  v9[3] = type metadata accessor for RecentsListViewController(0);
  v9[0] = a1;
  objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v7 = a1;
  return @nonobjc UIBarButtonItem.init(title:style:target:action:)(v6._countAndFlagsBits, (uint64_t)v6._object, 0, v9, (uint64_t)sel_deleteButtonAction_);
}

id @nonobjc UIBarButtonItem.init(title:style:target:action:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  Swift::String v6 = v5;
  if (a2)
  {
    Swift::String v10 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::String v10 = 0;
  }
  uint64_t v11 = a4[3];
  if (v11)
  {
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    uint64_t v13 = *(void *)(v11 - 8);
    MEMORY[0x1F4188790](v12);
    uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v17 = objc_msgSend(v6, sel_initWithTitle_style_target_action_, v10, a3, v16, a5);

  swift_unknownObjectRelease();
  return v17;
}

id closure #1 in RecentsListViewController.collectionView.getter(void *a1)
{
  if ((objc_msgSend(a1, sel_isViewLoaded) & 1) == 0)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    Swift::String v3 = result;
    objc_msgSend(result, sel_bounds);
    double v5 = v4;
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;

    RecentsListViewController.collectionViewLayout()(v12);
    uint64_t v14 = v13;
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1568]), sel_initWithFrame_collectionViewLayout_, v13, v5, v7, v9, v11);

    objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v16 = self;
    id v17 = v15;
    id v18 = objc_msgSend(v16, sel_clearColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v18);

    objc_msgSend(v17, sel_setAllowsMultipleSelectionDuringEditing_, 1);
    objc_msgSend(v17, sel_setDelegate_, a1);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void __swiftcall RecentsListViewController.collectionViewLayout()(UICollectionViewLayout *__return_ptr retstr)
{
  uint64_t v1 = OUTLINED_FUNCTION_20();
  swift_unknownObjectUnownedInit();
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1580]);
  @nonobjc UICollectionViewCompositionalLayout.init(sectionProvider:)((uint64_t)partial apply for closure #1 in RecentsListViewController.collectionViewLayout(), v1);
}

id @nonobjc UICollectionViewCompositionalLayout.init(sectionProvider:)(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  uint64_t v6[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v6[3] = &block_descriptor_297;
  Swift::String v3 = _Block_copy(v6);
  id v4 = objc_msgSend(v2, sel_initWithSectionProvider_, v3);
  _Block_release(v3);
  swift_release();
  return v4;
}

uint64_t closure #1 in RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v6 - 8);
  double v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_conversationKit);
  v36._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0x454341465F57454ELL;
  v10._object = (void *)0xEC000000454D4954;
  v11.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v36);

  uint64_t v13 = type metadata accessor for AttributeContainer();
  MEMORY[0x1F4188790](v13 - 8);
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v14 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v14);
  UIButton.Configuration.attributedTitle.setter();
  UIButton.Configuration.imagePlacement.setter();
  id v15 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v16, 1, v14))
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v18 = v3;
    uint64_t v19 = v2;
    MEMORY[0x1F4188790](KeyPath);
    swift_getKeyPath();
    id v34 = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_buttonTitleParagraphStyle);
    uint64_t v20 = v34;
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute();
    id v21 = v20;
    uint64_t v2 = v19;
    uint64_t v3 = v18;
    AttributedString.subscript.setter();
  }
  v15(v35, 0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))())
  {
    char v22 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
    if (!__swift_getEnumTagSinglePayload(v23, 1, v14))
    {
      uint64_t v24 = swift_getKeyPath();
      MEMORY[0x1F4188790](v24);
      swift_getKeyPath();
      id v34 = objc_msgSend(self, sel_telephonyUISubheadlineShortSemiboldFont);
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      AttributedString.subscript.setter();
    }
    v22(v35, 0);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    id v25 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E4FB28C8], 0, 1);
    id v26 = objc_msgSend(self, sel_configurationWithFont_, v25);

    @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(0x69662E6F65646976, 0xEA00000000006C6CLL, v26);
    UIButton.Configuration.image.setter();
  }
  else
  {
    char v27 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
    if (!__swift_getEnumTagSinglePayload(v28, 1, v14))
    {
      uint64_t v29 = swift_getKeyPath();
      MEMORY[0x1F4188790](v29);
      swift_getKeyPath();
      id v34 = objc_msgSend(self, sel_telephonyUISubheadlineShortEmphasizedFont);
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      AttributedString.subscript.setter();
    }
    v27(v35, 0);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    @nonobjc UIImage.__allocating_init(systemName:)();
    UIButton.Configuration.image.setter();
    if (one-time initialization token for buttonTextToImagePadding != -1) {
      swift_once();
    }
  }
  UIButton.Configuration.imagePadding.setter();
  if (one-time initialization token for buttonContentVerticalPadding != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FB11F0], v2);
  UIButton.Configuration.cornerStyle.setter();
  if (one-time initialization token for systemGreenWithUserInterfaceStyleLight != -1) {
    swift_once();
  }
  id v30 = (id)static UIColor.systemGreenWithUserInterfaceStyleLight;
  id v31 = (uint64_t (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  return v31(v35, 0);
}

uint64_t RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter(&OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___newFaceTimeButtonConfiguration, (void (*)(uint64_t))closure #1 in RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter, a1);
}

uint64_t closure #1 in RecentsHeaderButtonsView.createLinkButtonConfiguration.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v6 - 8);
  double v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_conversationKit);
  v41._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0x4C5F455441455243;
  v10._object = (void *)0xEB000000004B4E49;
  v11.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v41._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v41);

  uint64_t v13 = type metadata accessor for AttributeContainer();
  MEMORY[0x1F4188790](v13 - 8);
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v14 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v14);
  UIButton.Configuration.attributedTitle.setter();
  UIButton.Configuration.imagePlacement.setter();
  id v15 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v16, 1, v14))
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v18 = v3;
    uint64_t v19 = v2;
    MEMORY[0x1F4188790](KeyPath);
    swift_getKeyPath();
    id v39 = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_buttonTitleParagraphStyle);
    uint64_t v20 = v39;
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute();
    id v21 = v20;
    uint64_t v2 = v19;
    uint64_t v3 = v18;
    AttributedString.subscript.setter();
  }
  v15(v40, 0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))())
  {
    char v22 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
    if (!__swift_getEnumTagSinglePayload(v23, 1, v14))
    {
      uint64_t v24 = swift_getKeyPath();
      MEMORY[0x1F4188790](v24);
      swift_getKeyPath();
      id v39 = objc_msgSend(self, sel_telephonyUISubheadlineShortSemiboldFont);
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      AttributedString.subscript.setter();
    }
    v22(v40, 0);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    id v25 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E4FB28C8], 0, 1);
    id v26 = objc_msgSend(self, sel_configurationWithFont_, v25);

    @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(1802398060, 0xE400000000000000, v26);
    UIButton.Configuration.image.setter();
  }
  else
  {
    char v27 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
    if (!__swift_getEnumTagSinglePayload(v28, 1, v14))
    {
      uint64_t v29 = swift_getKeyPath();
      MEMORY[0x1F4188790](v29);
      swift_getKeyPath();
      id v39 = objc_msgSend(self, sel_telephonyUISubheadlineShortEmphasizedFont);
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      AttributedString.subscript.setter();
    }
    v27(v40, 0);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    @nonobjc UIImage.__allocating_init(systemName:)();
    UIButton.Configuration.image.setter();
    if (one-time initialization token for buttonTextToImagePadding != -1) {
      swift_once();
    }
  }
  UIButton.Configuration.imagePadding.setter();
  if (one-time initialization token for buttonContentVerticalPadding != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FB11F0], v2);
  UIButton.Configuration.cornerStyle.setter();
  id v30 = self;
  id v31 = objc_msgSend(v30, sel_whiteColor);
  uint64_t v32 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  v32(v40, 0);
  id v33 = objc_msgSend(self, sel_effectWithStyle_, 8);
  id v34 = objc_msgSend(self, sel_effectForBlurEffect_style_, v33, 6);

  uint64_t v35 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.visualEffect.setter();
  v35(v40, 0);
  id v36 = objc_msgSend(v30, sel_whiteColor);
  return UIButton.Configuration.baseForegroundColor.setter();
}

id @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_systemImageNamed_withConfiguration_, v4, a3);

  return v5;
}

id static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(uint64_t a1, uint64_t a2, char a3)
{
  id v6 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, a1);
  uint64_t v7 = self;
  objc_msgSend(v6, sel_pointSize);
  id v8 = objc_msgSend(v7, sel_systemFontOfSize_weight_);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a1);
  Swift::String v10 = v9;
  if (a3) {
    id v11 = objc_msgSend(v9, sel_scaledFontForFont_, v8);
  }
  else {
    id v11 = objc_msgSend(v9, sel_scaledFontForFont_maximumPointSize_, v8, *(double *)&a2);
  }
  id v12 = v11;

  return v12;
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute()
{
  unint64_t result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.ParagraphStyleAttribute and conformance AttributeScopes.UIKitAttributes.ParagraphStyleAttribute);
  }
  return result;
}

uint64_t RecentsHeaderButtonsView.createLinkButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return RecentsHeaderButtonsView.newFaceTimeButtonConfiguration.getter(&OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___createLinkButtonConfiguration, (void (*)(uint64_t))closure #1 in RecentsHeaderButtonsView.createLinkButtonConfiguration.getter, a1);
}

void RecentsHeaderButtonsView.updateSymbolConfiguration()()
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v17 - v8;
  id v10 = RecentsHeaderButtonsView.symbolConfiguration()();
  id v11 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton);
  UIButton.configuration.getter();
  uint64_t v12 = type metadata accessor for UIButton.Configuration();
  if (OUTLINED_FUNCTION_17_16(v12))
  {
    outlined init with copy of UIButton.Configuration?((uint64_t)v9, v2);
    UIButton.configuration.setter();

    outlined destroy of UIButton.Configuration?((uint64_t)v9);
  }
  else
  {
    id v13 = v10;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    UIButton.configuration.setter();
  }
  OUTLINED_FUNCTION_20_8();
  id v15 = (void *)v14();
  UIButton.configuration.getter();
  if (__swift_getEnumTagSinglePayload(v0, 1, v3))
  {
    outlined init with copy of UIButton.Configuration?(v0, v2);
    UIButton.configuration.setter();

    outlined destroy of UIButton.Configuration?(v0);
  }
  else
  {
    id v16 = v10;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    UIButton.configuration.setter();
  }
}

void RecentsHeaderButtonsView.updateImageReservation()()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - v7;
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton);
  UIButton.configuration.getter();
  uint64_t v10 = type metadata accessor for UIButton.Configuration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10))
  {
    outlined init with copy of UIButton.Configuration?((uint64_t)v8, v2);
    UIButton.configuration.setter();

    outlined destroy of UIButton.Configuration?((uint64_t)v8);
  }
  else
  {
    if (one-time initialization token for imageReservation != -1) {
      swift_once();
    }
    UIButton.Configuration.imageReservation.setter();
    UIButton.configuration.setter();
  }
  OUTLINED_FUNCTION_20_8();
  uint64_t v12 = (void *)v11();
  UIButton.configuration.getter();
  if (__swift_getEnumTagSinglePayload(v0, 1, v10))
  {
    outlined init with copy of UIButton.Configuration?(v0, v2);
    UIButton.configuration.setter();

    outlined destroy of UIButton.Configuration?(v0);
  }
  else
  {
    if (one-time initialization token for imageReservation != -1) {
      swift_once();
    }
    UIButton.Configuration.imageReservation.setter();
    UIButton.configuration.setter();
  }
}

void RecentsHeaderButtonsView.bottomAnchorConstraint.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  uint64_t *v1 = a1;
}

void *RecentsHeaderButtonsView.bottomAnchorConstraint.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

id RecentsHeaderButtonsView.symbolConfiguration()()
{
  id v1 = objc_msgSend(v0, sel_traitCollection);
  id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  uint64_t v3 = RecentsHeaderButtonsView.symbolScale(for:)();
  id v4 = objc_msgSend(self, sel_telephonyUISubheadlineShortFont);
  id v5 = objc_msgSend(self, sel_configurationWithFont_scale_, v4, v3);

  return v5;
}

void RecentsHeaderButtonsView.updateCornerRadius()()
{
  id v1 = v0;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  double v2 = 16.0;
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))() & 1) == 0)
  {
    id v3 = objc_msgSend(v0, sel_traitCollection);
    _UITableViewDefaultSectionCornerRadiusForTraitCollection();
    double v2 = v4;
  }
  id v5 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton], sel_layer);
  objc_msgSend(v5, sel_setCornerRadius_, v2);

  OUTLINED_FUNCTION_20_8();
  uint64_t v7 = (void *)v6();
  id v8 = objc_msgSend(v7, sel_layer);

  objc_msgSend(v8, sel_setCornerRadius_, v2);
}

uint64_t RecentsHeaderButtonsView.headerDelegate.setter(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_headerDelegate);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_headerDelegate);
  *id v3 = a1;
  v3[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
}

void RecentsHeaderButtonsView.updateFonts()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_11_8();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - v6;
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v27 - v8;
  id v10 = objc_msgSend(self, sel_telephonyUISubheadlineShortEmphasizedFont);
  id v11 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton);
  UIButton.configuration.getter();
  uint64_t v12 = type metadata accessor for UIButton.Configuration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12)) {
    goto LABEL_4;
  }
  uint64_t v13 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload(v15, 1, v16))
  {
    v13(v29, 0);
LABEL_4:
    outlined init with copy of UIButton.Configuration?((uint64_t)v9, (uint64_t)v7);
    UIButton.configuration.setter();

    outlined destroy of UIButton.Configuration?((uint64_t)v9);
    goto LABEL_5;
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  OUTLINED_FUNCTION_18_16();
  uint64_t v27 = swift_getKeyPath();
  id v28 = v10;
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
  id v24 = v10;
  AttributedString.subscript.setter();
  v13(v29, 0);
  UIButton.configuration.setter();

LABEL_5:
  OUTLINED_FUNCTION_20_8();
  uint64_t v18 = (void *)v17();
  UIButton.configuration.getter();
  if (!__swift_getEnumTagSinglePayload(v0, 1, v12))
  {
    uint64_t v19 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
    uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for AttributedString();
    if (!__swift_getEnumTagSinglePayload(v21, 1, v22))
    {
      uint64_t v25 = swift_getKeyPath();
      MEMORY[0x1F4188790](v25);
      OUTLINED_FUNCTION_18_16();
      swift_getKeyPath();
      id v28 = v10;
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      id v26 = v10;
      AttributedString.subscript.setter();
      v19(v29, 0);
      UIButton.configuration.setter();

      return;
    }
    v19(v29, 0);
  }
  outlined init with copy of UIButton.Configuration?(v0, (uint64_t)v7);
  UIButton.configuration.setter();

  outlined destroy of UIButton.Configuration?(v0);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute()
{
  unint64_t result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute);
  }
  return result;
}

uint64_t RecentsHeaderButtonsView.symbolScale(for:)()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v2) {
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v4) {
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v6) {
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v8) {
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v10)
  {
LABEL_32:
    swift_bridgeObjectRelease_n();
    return 3;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v12) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 2;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v16) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 2;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v18)
  {
LABEL_67:
    uint64_t v14 = 2;
    swift_bridgeObjectRelease_n();
    return v14;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 2;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v20) {
    goto LABEL_68;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 1;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v22) {
    goto LABEL_68;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 1;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_1_17() && v0 == v24) {
    goto LABEL_68;
  }
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_5_2();
  swift_bridgeObjectRelease();
  if (v1) {
    return 1;
  }
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;
  if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
  {
LABEL_68:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    return 1;
  }
  else {
    return 3;
  }
}

id closure #1 in RecentsHeaderButtonsView.buttonsView.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  if (one-time initialization token for stackViewSpacing != -1) {
    swift_once();
  }
  objc_msgSend(v0, sel_setSpacing_, *(double *)&static RecentsHeaderButtonsView.Constants.stackViewSpacing);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setDistribution_, 1);
  return v0;
}

void RecentsHeaderButtonsView.updateButtonsViewAxis()()
{
  id v2 = objc_msgSend(v0, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_15_14() && v2 == v4) {
    goto LABEL_17;
  }
  uint64_t v6 = OUTLINED_FUNCTION_0_14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_18:

    goto LABEL_19;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v6 == OUTLINED_FUNCTION_15_14() && v2 == v7)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  uint64_t v9 = OUTLINED_FUNCTION_0_14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_18;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v9 == OUTLINED_FUNCTION_15_14() && v2 == v10)
  {

    uint64_t v13 = swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = OUTLINED_FUNCTION_0_14();

    swift_bridgeObjectRelease();
    uint64_t v13 = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      id v14 = (id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))(v13);
      objc_msgSend(v14, sel_setAxis_, 0);
      goto LABEL_20;
    }
  }
LABEL_19:
  id v14 = (id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))(v13);
  objc_msgSend(v14, sel_setAxis_, 1);
LABEL_20:
}

const char *Features.UIKit.feature.getter()
{
  return "uip_fluid_transitions";
}

const char *Features.UIKit.domain.getter()
{
  return "UIKit";
}

const char *Features.TelephonyUtilities.domain.getter()
{
  return "TelephonyUtilities";
}

uint64_t dispatch thunk of RecentCallProviderDelegate.recentCallsDidChange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t thunk for @escaping @callee_guaranteed () -> ()(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t vars8;

  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  id v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t partial apply for thunk for @callee_guaranteed () -> ()()
{
  return thunk for @escaping @callee_guaranteed () -> ()(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed () -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t thunk for @escaping @callee_guaranteed () -> ()(uint64_t (*a1)(void))
{
  return a1();
}

Swift::Void __swiftcall RecentsListViewController.viewWillLayoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for RecentsListViewController(0);
  objc_msgSendSuper2(&v1, sel_viewWillLayoutSubviews);
  RecentsListViewController.tipKitInvalidateLayout()();
}

uint64_t type metadata accessor for RecentsListViewController(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RecentsListViewController);
}

Swift::Void __swiftcall RecentsListViewController.tipKitInvalidateLayout()()
{
}

void closure #1 in RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  id v3 = (void *)MEMORY[0x1C8776240](v2);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x100))()) {
      (*(void (**)(void))((*v5 & *v4) + 0x228))();
    }
  }
}

void partial apply for closure #3 in RecentsCollectionViewCollator.reloadData()()
{
}

void RecentsCollectionViewCollator.doReloadData(completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v59 = v3;
  uint64_t v61 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<RecentsCollectionViewSection, RecentsCallItem>);
  OUTLINED_FUNCTION_4();
  uint64_t v58 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_36();
  uint64_t v57 = v8 - v9;
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)v56 - v11;
  RecentsCollectionViewCollator.model.getter(&v66);
  uint64_t v13 = *(void *)(v66 + 16);
  swift_bridgeObjectRelease();
  BOOL v14 = v13 != 0;
  if (objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_featureFlags), sel_increaseCallHistoryEnabled))
  {
    uint64_t v15 = (void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController);
    uint64_t v1 = *(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController
                                + 32);
    __swift_project_boxed_opaque_existential_1((void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController), *(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController + 24));
    uint64_t v16 = OUTLINED_FUNCTION_73_8();
    if (v17(v16))
    {
      uint64_t v1 = v15[4];
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      uint64_t v18 = OUTLINED_FUNCTION_73_8();
      v19(v18);
      BOOL v14 = 0;
    }
  }
  v56[1] = v14;
  RecentsCollectionViewCollator.allCallItems.getter();
  uint64_t v63 = v20;
  specialized _arrayForceCast<A, B>(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = RecentsCollectionViewCollator.upcomingSectionItemLimit.getter();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_90_0();
  Date.init()();
  uint64_t v25 = static RecentsCollectionViewModel.sections(from:now:upcomingSectionItemLimit:)(v22, v1, v23);
  swift_bridgeObjectRelease();
  uint64_t v26 = OUTLINED_FUNCTION_56_12();
  v27(v26);
  uint64_t v66 = v25;
  RecentsCollectionViewCollator.model.getter(&v65);
  uint64_t v64 = v65;
  static RecentsCollectionViewModel.== infix(_:_:)();
  LOBYTE(v23) = v28;
  uint64_t v29 = swift_bridgeObjectRelease();
  id v30 = (void *)MEMORY[0x1E4FBC8C8];
  if ((v23 & 1) == 0 || ((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x100))(v29) & 1) == 0)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)static Logger.conversationKit);
    id v33 = v2;
    uint64_t v34 = v63;
    swift_bridgeObjectRetain();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 67109376;
      LOBYTE(v66) = (*(uint64_t (**)(void))((*v30 & (uint64_t)v33->isa) + 0x100))() & 1;
      LODWORD(v66) = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v37 + 8) = 2048;
      uint64_t v66 = *(void *)(v34 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v35, v36, "reloadData hasFinishedFirstLoad: %{BOOL}d. call items count: %ld", (uint8_t *)v37, 0x12u);
      MEMORY[0x1C87760E0](v37, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      uint64_t v35 = v33;
    }

    uint64_t v66 = v25;
    RecentsCollectionViewCollator.model.setter(&v66);
    type metadata accessor for RecentsCallItem(0);
    lazy protocol witness table accessor for type RecentsCollectionViewSection and conformance RecentsCollectionViewSection();
    lazy protocol witness table accessor for type RecentsCallItem and conformance RecentsCallItem();
    NSDiffableDataSourceSnapshot.init()();
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&outlined read-only object #0 of RecentsCollectionViewCollator.doReloadData(completion:));
    uint64_t v38 = static RecentsCollectionViewSection.allCases.getter();
    specialized MutableCollection.subscript.getter(1, (uint64_t)v38);
    swift_bridgeObjectRelease();
    specialized Array.init<A>(_:)();
    uint64_t v60 = v39;
    uint64_t v40 = *(void *)(v39 + 16);
    if (!v40)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      uint64_t v51 = v57;
      uint64_t v50 = v58;
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v57, v12, v5);
      uint64_t v52 = (void *)swift_allocObject();
      v52[2] = v63;
      uint64_t v53 = (uint64_t)v61;
      uint64_t v54 = v59;
      v52[3] = v61;
      v52[4] = v54;
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v53);
      RecentsCollectionViewCollator.apply(_:animatingDifferences:completion:)();
      swift_release();
      id v55 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      v55(v51, v5);
      v55((uint64_t)v12, v5);
      goto LABEL_27;
    }
    Swift::String v41 = (unsigned __int8 *)(v60 + 32);
    long long v62 = xmmword_1C3769620;
    while (1)
    {
      unsigned int v43 = *v41++;
      uint64_t v42 = v43;
      RecentsCollectionViewCollator.model.getter(&v66);
      if (!*(void *)(v66 + 16)) {
        goto LABEL_22;
      }
      specialized __RawDictionaryStorage.find<A>(_:)(v42);
      if ((v44 & 1) == 0) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      specialized _arrayConditionalCast<A, B>(_:)();
      uint64_t v46 = v45;
      swift_bridgeObjectRelease();
      if (v46) {
        break;
      }
LABEL_23:
      if (!--v40) {
        goto LABEL_26;
      }
    }
    if (*(void *)(v46 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCollectionViewSection>);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = v62;
      *(unsigned char *)(v47 + 32) = v42;
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v47);
      swift_bridgeObjectRelease();
      uint64_t v48 = OUTLINED_FUNCTION_26();
      *(void *)(v48 + 16) = v33;
      *(void *)(v48 + 24) = v46;
      LOBYTE(v65) = v42;
      uint64_t v66 = MEMORY[0x1E4FBC870];
      swift_bridgeObjectRetain_n();
      uint64_t v49 = v33;
      swift_retain();
      _ss14_ArrayProtocolPsE6filterySay7ElementQzGSbAEKXEKFSay15ConversationKit15RecentsCallItemVG_Tg5041_s5UIKit28NSDiffableDataSourceSnapshotV15ef78E24appendItemsRemovingDupes_9toSection6onDupeySayq_G_xSgyq_cSgtFSbq_XEfU_AD021g23CollectionViewM0O_AD0P8hI4VTg5ShyAIGxRi_zRi0_zlyAIIsegn_SgTf1cn_n(v46, &v66, (uint64_t)partial apply for closure #1 in RecentsCollectionViewCollator.doReloadData(completion:), v48);
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  uint64_t v31 = os_log(_:dso:log:type:_:)();
  if (v61) {
    v61(v31);
  }
LABEL_27:
  OUTLINED_FUNCTION_28();
}

uint64_t RecentsCollectionViewCollator.model.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_model);
  return swift_bridgeObjectRetain();
}

uint64_t RecentsCollectionViewCollator.hasFinishedFirstLoad.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t RecentsCollectionViewCollator.upcomingSectionItemLimit.getter()
{
  unsigned __int8 v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator____lazy_storage___upcomingSectionItemLimit);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator____lazy_storage___upcomingSectionItemLimit
                + 8) != 1)
    return *(void *)v1;
  uint64_t result = closure #1 in RecentsCollectionViewCollator.upcomingSectionItemLimit.getter();
  *(void *)unsigned __int8 v1 = result;
  v1[8] = 0;
  return result;
}

void partial apply for closure #1 in RecentsCollectionViewCollator.reloadData()()
{
  closure #1 in RecentsCollectionViewCollator.reloadData()(v0);
}

void closure #1 in RecentsCollectionViewCollator.reloadData()(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    RecentsCollectionViewCollator.hasFinishedFirstLoad.setter();
  }
  swift_beginAccess();
  uint64_t v5 = (unsigned char *)MEMORY[0x1C8776240](v2);
  if (v5)
  {
    v5[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_isDataLoading] = 0;
  }
  swift_beginAccess();
  uint64_t v6 = (unsigned __int8 *)MEMORY[0x1C8776240](v2);
  if (v6)
  {
    int v7 = v6[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_pendingDataLoading];

    if (v7 == 1)
    {
      swift_beginAccess();
      uint64_t v8 = (unsigned char *)MEMORY[0x1C8776240](v2);
      if (v8)
      {
        v8[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_pendingDataLoading] = 0;
      }
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationKit);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        char v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v12 = 0;
        _os_log_impl(&dword_1C2F90000, v10, v11, "Request reloadData after data loading is done.", v12, 2u);
        MEMORY[0x1C87760E0](v12, -1, -1);
      }

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      aBlock[4] = partial apply for closure #1 in RecentsCollectionViewCollator.recentsLinkControllerRefreshedLinks(_:);
      aBlock[5] = a1;
      uint64_t v24 = static OS_dispatch_queue.main.getter();
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_97;
      uint64_t v13 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      uint64_t v14 = type metadata accessor for DispatchQoS();
      v23[1] = v23;
      uint64_t v15 = *(void *)(v14 - 8);
      MEMORY[0x1F4188790](v14);
      uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      static DispatchQoS.unspecified.getter();
      uint64_t v18 = type metadata accessor for DispatchWorkItemFlags();
      v23[0] = v23;
      uint64_t v19 = *(void *)(v18 - 8);
      MEMORY[0x1F4188790](v18);
      uint64_t v21 = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      aBlock[0] = MEMORY[0x1E4FBC860];
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF28]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v22 = (void *)v24;
      MEMORY[0x1C8773BA0](0, v17, v21, v13);
      _Block_release(v13);

      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
}

uint64_t RecentsCollectionViewCollator.hasFinishedFirstLoad.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

id partial apply for closure #1 in RecentsNavigationBarTitleView.updateNavigationItemVisible(_:)()
{
  double v1 = 0.0;
  if (*(unsigned char *)(v0 + 24)) {
    double v1 = 1.0;
  }
  return objc_msgSend(*(id *)(v0 + 16), sel_setTrailingBarAlpha_, v1);
}

uint64_t RecentsCollectionViewCollator.model.setter(void *a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_model) = *a1;
  return swift_bridgeObjectRelease();
}

void RecentsCollectionViewCollator.apply(_:animatingDifferences:completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue);
  void *v1 = v6;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v1, *MEMORY[0x1E4FBCBE8], v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_48_3();
  v9(v8);
  if (v6)
  {
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    OUTLINED_FUNCTION_28();
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in RecentsCollectionViewCollator.upcomingSectionItemLimit.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)MEMORY[0x1C87730B0](0xD000000000000018, 0x80000001C37AEF30);
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Any?);
    uint64_t v3 = (void *)MEMORY[0x1C87730B0](0xD000000000000018, 0x80000001C37AEF30);
    id v4 = objc_msgSend(v0, sel_integerForKey_, v3);
  }
  else
  {
    memset(v6, 0, sizeof(v6));

    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Any?);
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  return (uint64_t)v4;
}

void *static RecentsCollectionViewSection.allCases.getter()
{
  return &outlined read-only object #0 of static RecentsCollectionViewSection.allCases.getter;
}

uint64_t RecentsListViewController.configureCellRegistrations()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  uint64_t v11 = v0 + OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsSensitveCallItemCalls;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v9, v11, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  swift_endAccess();
  RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  uint64_t v12 = v0 + OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemCalls;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v9, v12, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  swift_endAccess();
  RecentsListViewController.createCellRegistrationForRecentsCallItemOngoingCalls()();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  uint64_t v13 = v0 + OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemOngoingCalls;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v9, v13, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  swift_endAccess();
  RecentsListViewController.createCellRegistrationForRecentsCallItemLinks()();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  uint64_t v14 = v0 + OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemLinks;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v9, v14, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  swift_endAccess();
  RecentsListViewController.createSectionHeaderViewRegistrationForSupplementalView()();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v15);
  uint64_t v16 = v0 + OBJC_IVAR___FTRecentsListViewController_sectionHeaderViewRegistrationForSupplementalView;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v16, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>?);
  swift_endAccess();
  RecentsListViewController.createHeaderButtonsViewRegistration()();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>);
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v17);
  uint64_t v18 = v0 + OBJC_IVAR___FTRecentsListViewController_headerButtonsViewRegistration;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v3, v18, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>?);
  return swift_endAccess();
}

uint64_t outlined assign with take of Participant?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v3, v4);
  return v3;
}

uint64_t _s15ConversationKit11ParticipantVSgWOdTm_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_309();
  v5(v4);
  return v3;
}

uint64_t RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()()
{
  OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  type metadata accessor for RecentsCollectionViewCell();
  type metadata accessor for RecentsCallItem(0);
  return UICollectionView.CellRegistration.init(handler:)();
}

Swift::Void __swiftcall RecentsCollectionViewCollator.resume()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = v0;
  RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v3 = (void *)static OS_dispatch_queue.main.getter();
  objc_msgSend(v2, sel_addDelegate_queue_, v1, v3);

  OUTLINED_FUNCTION_42_20();
  uint64_t v5 = *(void (**)(void))(v4 + 208);
  v5();
  OUTLINED_FUNCTION_17_8();
  uint64_t v7 = *(void (**)(uint64_t, _UNKNOWN **))(v6 + 136);
  uint64_t v8 = swift_unknownObjectRetain();
  v7(v8, &protocol witness table for RecentsCollectionViewCollator);
  uint64_t v9 = swift_release();
  ((void (*)(uint64_t))v5)(v9);
  OUTLINED_FUNCTION_2_10();
  (*(void (**)(void))(v10 + 256))();
  swift_release();
  objc_msgSend(v2, sel_refreshActiveConversations);
  OUTLINED_FUNCTION_42_20();
  if ((*(uint64_t (**)(void))(v11 + 232))())
  {
    OUTLINED_FUNCTION_17_8();
    (*(void (**)(void))(v12 + 152))();
    swift_release();
  }
  OUTLINED_FUNCTION_42_20();
  OUTLINED_FUNCTION_15_0();
  v13(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
}

void RecentsCollectionViewCollator.allCallItems.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_17_0();
  uint64_t v5 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_4();
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_17_4();
  MEMORY[0x1F4188790](v8);
  uint64_t v38 = (uint64_t)&v37 - v9;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController), *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController + 24));
  uint64_t v10 = OUTLINED_FUNCTION_18_3();
  if (v11(v10))
  {
    OUTLINED_FUNCTION_4_7();
    (*(void (**)(void))(v12 + 208))();
    OUTLINED_FUNCTION_2_10();
    (*(void (**)(void))(v13 + 272))();
    swift_release();
    RecentsCollectionViewCollator.linkCallItems(combining:with:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_7();
    if ((*(uint64_t (**)(void))(v14 + 232))())
    {
      OUTLINED_FUNCTION_17_8();
      (*(void (**)(void))(v15 + 104))();
      swift_release();
      CurrentValueSubject.value.getter();
      swift_release();
    }
    RecentsCollectionViewCollator.linkCallItems(combining:with:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_4_7();
    (*(void (**)(void))(v16 + 208))();
    OUTLINED_FUNCTION_2_10();
    (*(void (**)(void))(v17 + 272))();
    swift_release();
    specialized Array.append<A>(contentsOf:)();
    OUTLINED_FUNCTION_4_7();
    if ((*(uint64_t (**)(void))(v18 + 232))())
    {
      OUTLINED_FUNCTION_17_8();
      (*(void (**)(void))(v19 + 104))();
      swift_release();
      CurrentValueSubject.value.getter();
      swift_release();
    }
  }
  specialized Array.append<A>(contentsOf:)();
  id v20 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager), sel_activeConversations);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.filter(_:)(v21);
  unint64_t v23 = v22;
  if (!(v22 >> 62))
  {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_9;
    }
LABEL_25:
    swift_bridgeObjectRelease_n();
    specialized Array.append<A>(contentsOf:)();
    OUTLINED_FUNCTION_28();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  if (!v24) {
    goto LABEL_25;
  }
LABEL_9:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v27 = v2;
    do
    {
      if ((v23 & 0xC000000000000001) != 0) {
        id v28 = (id)MEMORY[0x1C87744F0](v25, v23);
      }
      else {
        id v28 = *(id *)(v23 + 8 * v25 + 32);
      }
      id v29 = v28;
      RecentsCallItem.init(conversation:)();
      __swift_storeEnumTagSinglePayload(v0, 0, 1, v5);

      if (__swift_getEnumTagSinglePayload(v0, 1, v5) == 1)
      {
        outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      }
      else
      {
        uint64_t v30 = v38;
        outlined init with take of RecentsCallItem(v0, v38);
        outlined init with take of RecentsCallItem(v30, v2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v34 = OUTLINED_FUNCTION_28_5();
          uint64_t v26 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v34, v35, v36, v26);
        }
        unint64_t v32 = *(void *)(v26 + 16);
        unint64_t v31 = *(void *)(v26 + 24);
        if (v32 >= v31 >> 1) {
          uint64_t v26 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1, v26);
        }
        *(void *)(v26 + 16) = v32 + 1;
        uint64_t v33 = v26
            + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
            + *(void *)(v39 + 72) * v32;
        uint64_t v2 = v27;
        outlined init with take of RecentsCallItem(v27, v33);
      }
      ++v25;
    }
    while (v24 != v25);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_18_11()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_18_12()
{
  return type metadata accessor for TaskPriority();
}

id OUTLINED_FUNCTION_18_14()
{
  uint64_t v3 = *v1;
  return [v0 v3];
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return outlined destroy of CaptionSectioner.Caption();
}

uint64_t OUTLINED_FUNCTION_18_17()
{
  uint64_t v3 = *(void *)(v1 - 192);
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
}

double OUTLINED_FUNCTION_18_18()
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v7 = v2;
  uint64_t v8 = v1;
  return CGRectGetMaxY(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_20()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_18_21()
{
  return type metadata accessor for EnvironmentValues();
}

void OUTLINED_FUNCTION_18_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v11 - 208) = v10;
  *(void *)(v11 - 200) = v9;
  *(void *)(v11 - 216) = &a9;
}

uint64_t OUTLINED_FUNCTION_18_24(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return _s15ConversationKit11ParticipantVWOcTm_2(v3, v4, a3);
}

void OUTLINED_FUNCTION_18_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 344) = &a9;
}

double OUTLINED_FUNCTION_18_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return *(double *)&a7;
}

uint64_t OUTLINED_FUNCTION_18_27()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_18_28()
{
  outlined bridged method (mbnnn) of @objc NSExtensionContext.completeRequest(returningItems:completionHandler:)(v1, 0, v0);
}

NSArray OUTLINED_FUNCTION_18_29()
{
  return Array._bridgeToObjectiveC()();
}

double OUTLINED_FUNCTION_18_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_31()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v1, v0, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_18_32()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_18_33(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, v4, a3, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_18_34()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_18_37()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_18_38()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_18_39@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v3 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return v2;
}

void OUTLINED_FUNCTION_18_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 224) = v9;
  *(void *)(v10 - 248) = &a9;
}

uint64_t OUTLINED_FUNCTION_18_42()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_18_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_45()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t OUTLINED_FUNCTION_18_46()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_18_51()
{
  return outlined init with copy of Participant.State();
}

uint64_t OUTLINED_FUNCTION_18_55@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_18_56()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_18_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_58()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_18_59()
{
  return [v0 (SEL)(v1 + 617)];
}

id OUTLINED_FUNCTION_18_60()
{
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = MostActiveParticipantViewController.localParticipantView.getter();
  return objc_msgSend(v2, sel_centerXAnchor);
}

void *OUTLINED_FUNCTION_18_61(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

void OUTLINED_FUNCTION_18_62()
{
  outlined consume of ConversationControlsRecipe.View?(v1, v0);
}

id OUTLINED_FUNCTION_18_63(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v6, (SEL)(v5 + 2840), v7, a4, a5, 0);
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

double OUTLINED_FUNCTION_18_64()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetHeight(*(CGRect *)&v5);
}

void OUTLINED_FUNCTION_18_65(double a1)
{
  double *v1 = a1;
}

void RecentsCollectionViewCollator.linkCallItems(combining:with:)()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for RecentsCollectionViewCollator();
  specialized _arrayForceCast<A, B>(_:)();
  specialized _arrayForceCast<A, B>(_:)();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_5_1();
  static Date.now.getter();
  specialized static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = OUTLINED_FUNCTION_48_3();
  v2(v1);
  specialized _arrayConditionalCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15_0();
}

uint64_t type metadata accessor for RecentsCollectionViewCollator()
{
  uint64_t result = type metadata singleton initialization cache for RecentsCollectionViewCollator;
  if (!type metadata singleton initialization cache for RecentsCollectionViewCollator) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RecentsCollectionViewCollator.linkController.getter()
{
  return swift_retain();
}

uint64_t VideoMessageInboxController.callItems.getter()
{
  return swift_retain();
}

uint64_t RecentsCollectionViewCollator.messageInboxController.getter()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_101()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t OUTLINED_FUNCTION_101_3()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_101_5(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_101_6()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_101_7()
{
  return swift_retain();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t a7, void (*a8)(unint64_t, uint64_t, char *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_4_23();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_9_24();
      if (v13)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_3_3();
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (v12 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v12;
  }
  if (!v16)
  {
    unint64_t v22 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v17 = a6(0);
  OUTLINED_FUNCTION_1(v17);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (void *)swift_allocObject();
  size_t v23 = _swift_stdlib_malloc_size(v22);
  if (!v19 || (v23 - v21 == 0x8000000000000000 ? (BOOL v24 = v19 == -1) : (BOOL v24 = 0), v24))
  {
LABEL_23:
    OUTLINED_FUNCTION_1_7();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v22[2] = v15;
  v22[3] = 2 * ((uint64_t)(v23 - v21) / v19);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  if (a1)
  {
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    a8(a4 + v26, v15, (char *)v22 + v26);
    OUTLINED_FUNCTION_8_25();
  }
  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0, v15);
  }
  return (uint64_t)v22;
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallItem>, type metadata accessor for RecentsCallItem, (uint64_t)type metadata accessor for RecentsCallItem, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<HUDActivityManager.BannerUpdate>, type metadata accessor for HUDActivityManager.BannerUpdate, (uint64_t)type metadata accessor for HUDActivityManager.BannerUpdate, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>, type metadata accessor for Participant, (uint64_t)type metadata accessor for Participant, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantGridView.IdentifiableParticipantTile>, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile, (uint64_t)type metadata accessor for ParticipantGridView.IdentifiableParticipantTile, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>, MEMORY[0x1F418BB68], MEMORY[0x1F418BCA8], (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<IDSCapabilitiesChecker.ParticipantDestination>, (uint64_t (*)(void))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination, (uint64_t)type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>, (uint64_t (*)(void))type metadata accessor for ConversationControlsAction, (uint64_t)type metadata accessor for ConversationControlsAction, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<CaptionSectioner.Caption>, type metadata accessor for CaptionSectioner.Caption, (uint64_t)type metadata accessor for CaptionSectioner.Caption, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CaptionSectioner.SpeakerSection>, type metadata accessor for CaptionSectioner.SpeakerSection, (uint64_t)type metadata accessor for CaptionSectioner.SpeakerSection, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<TranscriptionViewModel.Caption>, type metadata accessor for TranscriptionViewModel.Caption, (uint64_t)type metadata accessor for TranscriptionViewModel.Caption, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>, type metadata accessor for Participant.Caption, (uint64_t)type metadata accessor for Participant.Caption, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<URLQueryItem>, MEMORY[0x1F418AEC0], MEMORY[0x1F418AE90], (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantReaction>, type metadata accessor for ParticipantReaction, (uint64_t)type metadata accessor for ParticipantReaction, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FB0E68], (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>, MEMORY[0x1F418BF58], MEMORY[0x1F418BFD8], (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

void specialized Sequence.filter(_:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v24;
    uint64_t v2 = v25;
    uint64_t v3 = v26;
    int64_t v4 = v27;
    unint64_t v5 = v28;
  }
  else
  {
    int64_t v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v2 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  uint64_t v21 = v3;
  int64_t v22 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v9 = &selRef_ringButton;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      int64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v22) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    int64_t v12 = v4 + 1;
    if (!v15)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v22) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v12);
      if (!v15)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v22) {
          goto LABEL_41;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v12);
        if (!v15)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v22) {
            goto LABEL_41;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v12);
          if (!v15)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v22) {
              goto LABEL_41;
            }
            unint64_t v15 = *(void *)(v2 + 8 * v12);
            if (!v15)
            {
              int64_t v16 = v4 + 6;
              while (v16 < v22)
              {
                unint64_t v15 = *(void *)(v2 + 8 * v16++);
                if (v15)
                {
                  int64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_41:
              outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_41;
    }
    while (1)
    {
      if (objc_msgSend(v13, v9[236], v21) || objc_msgSend(v13, sel_isOneToOneModeEnabled)) {
        goto LABEL_32;
      }
      id v17 = objc_msgSend(v13, sel_link);

      if (v17) {
        goto LABEL_40;
      }
      id v18 = objc_msgSend(v13, sel_mergedRemoteMembers);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v20 = (v19 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v19 + 16);
      uint64_t v9 = &selRef_ringButton;
      swift_bridgeObjectRelease();
      if (v20 <= 0)
      {
LABEL_32:
      }
      else
      {
LABEL_40:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      int64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v23;
        swift_unknownObjectRelease();
        int64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      goto LABEL_41;
    }
  }
  __break(1u);
}

uint64_t RecentsLinkController.callItems.getter()
{
  uint64_t v7 = MEMORY[0x1E4FBC860];
  id v0 = RecentsLinkController.callItemsLocked.getter();
  uint64_t v1 = OUTLINED_FUNCTION_20();
  *(void *)(v1 + 16) = &v7;
  uint64_t v2 = OUTLINED_FUNCTION_26();
  *(void *)(v2 + 16) = partial apply for closure #1 in RecentsLinkController.callItems.getter;
  *(void *)(v2 + 24) = v1;
  aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
  aBlock[3] = &block_descriptor_24_1;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_performWhileLocked_, v3);

  _Block_release(v3);
  LOBYTE(v0) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v7;
    swift_release();
    return v5;
  }
  return result;
}

id RecentsLinkController.callItemsLocked.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  if (v1)
  {
    id v2 = *(id *)(v0 + 48);
  }
  else
  {
    type metadata accessor for RecentLinkCallItems();
    uint64_t v3 = OUTLINED_FUNCTION_20();
    *(void *)(v3 + 16) = MEMORY[0x1E4FBC860];
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBF8]), sel_initWithObject_, v3);
    swift_release();
    uint64_t v5 = *(void **)(v0 + 48);
    *(void *)(v0 + 48) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

Swift::Void __swiftcall RecentsCollectionViewCollator.reloadData()()
{
  OUTLINED_FUNCTION_31();
  uint64_t isEscapingClosureAtFileLocation = v0;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_isDataLoading;
  if ((*(unsigned char *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_isDataLoading) & 1) == 0)
  {
    uint64_t v9 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    *(unsigned char *)(isEscapingClosureAtFileLocation + v4) = 1;
    if (*(unsigned char *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_wantsSynchronousLoad) == 1)
    {
      *(unsigned char *)(isEscapingClosureAtFileLocation
               + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_wantsSynchronousLoad) = 0;
      uint64_t v10 = *(NSObject **)(isEscapingClosureAtFileLocation
                         + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue);
      unint64_t v11 = (void *)swift_allocObject();
      v11[2] = isEscapingClosureAtFileLocation;
      v11[3] = partial apply for closure #1 in RecentsCollectionViewCollator.reloadData();
      v11[4] = v9;
      uint64_t v12 = OUTLINED_FUNCTION_26();
      *(void *)(v12 + 16) = partial apply for closure #3 in RecentsCollectionViewCollator.reloadData();
      *(void *)(v12 + 24) = v11;
      uint64_t v33 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
      char v34 = (void *)v12;
      v30[0] = MEMORY[0x1E4F143A8];
      OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
      unint64_t v31 = thunk for @escaping @callee_guaranteed () -> ();
      unint64_t v32 = &block_descriptor_45_0;
      id v13 = _Block_copy(v30);
      uint64_t v1 = v34;
      id v14 = (id)isEscapingClosureAtFileLocation;
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v10, v13);
      swift_release();
      _Block_release(v13);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        goto LABEL_11;
      }
      __break(1u);
    }
    uint64_t v28 = *(void *)(isEscapingClosureAtFileLocation
                    + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue);
    unint64_t v15 = (void *)swift_allocObject();
    v15[2] = isEscapingClosureAtFileLocation;
    v15[3] = partial apply for closure #1 in RecentsCollectionViewCollator.reloadData();
    v15[4] = v9;
    uint64_t v33 = partial apply for closure #3 in RecentsCollectionViewCollator.reloadData();
    char v34 = v15;
    v30[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
    unint64_t v31 = thunk for @escaping @callee_guaranteed () -> ();
    unint64_t v32 = &block_descriptor_35_3;
    int64_t v16 = _Block_copy(v30);
    uint64_t v26 = type metadata accessor for DispatchQoS();
    uint64_t v27 = v25;
    OUTLINED_FUNCTION_4();
    uint64_t v18 = v17;
    MEMORY[0x1F4188790](v19);
    OUTLINED_FUNCTION_5_1();
    id v20 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v21 = type metadata accessor for DispatchWorkItemFlags();
    v25[1] = v25;
    OUTLINED_FUNCTION_4();
    uint64_t v23 = v22;
    MEMORY[0x1F4188790](v24);
    OUTLINED_FUNCTION_61();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF28]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C8773BA0](0, v1, v2, v16);
    _Block_release(v16);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v2, v21);
    (*(void (**)(void *, uint64_t))(v18 + 8))(v1, v26);
    swift_release();
    goto LABEL_11;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v7, "Request reloadData while data is loading, will be processed later.", v8, 2u);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }

  *(unsigned char *)(isEscapingClosureAtFileLocation
           + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_pendingDataLoading) = 1;
LABEL_11:
  OUTLINED_FUNCTION_28();
}

Swift::Int OUTLINED_FUNCTION_19_8()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return swift_getEnumCaseMultiPayload();
}

BOOL OUTLINED_FUNCTION_19_11(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return 22593;
}

uint64_t OUTLINED_FUNCTION_19_14()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_19_15()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_19_17()
{
  return v0;
}

void OUTLINED_FUNCTION_19_21()
{
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  return type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
}

id OUTLINED_FUNCTION_19_24()
{
  return LinkDetailHeaderView.linkLabel.getter();
}

BOOL OUTLINED_FUNCTION_19_26()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_19_29()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_19_30(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_19_32(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

double OUTLINED_FUNCTION_19_33()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetMinY(*(CGRect *)&v5);
}

uint64_t OUTLINED_FUNCTION_19_34()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_36()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_19_37(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  return swift_unknownObjectWeakAssign();
}

uint64_t OUTLINED_FUNCTION_19_38()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_19_40()
{
  return objectdestroy_13Tm_0();
}

uint64_t OUTLINED_FUNCTION_19_41(NSBundle bundle)
{
  uint64_t v3 = 0x5050415F4D4F5246;
  unint64_t v4 = 0xEC000000454D414ELL;
  uint64_t v5 = 0x61737265766E6F43;
  unint64_t v6 = 0xEF74694B6E6F6974;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v9 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, bundle, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;
}

double protocol witness for AnimationTiming.duration.getter in conformance SpringAnimationParameters()
{
  return *(double *)v0;
}

void OUTLINED_FUNCTION_19_43()
{
  *(void *)(v2 - 128) = *(void *)(*(void *)(v1 + 48) + 8 * v0);
}

uint64_t OUTLINED_FUNCTION_19_44()
{
  return String.init(format:_:)();
}

void OUTLINED_FUNCTION_19_47()
{
}

uint64_t OUTLINED_FUNCTION_19_48@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_53()
{
  return v0;
}

id OUTLINED_FUNCTION_19_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(v7, (SEL)(v5 + 2840), v6, a4, a5, 0);
}

id OUTLINED_FUNCTION_19_55()
{
  return objc_msgSend(v0, (SEL)(v2 + 775), v1);
}

uint64_t OUTLINED_FUNCTION_19_56(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return a1 + v2;
}

uint64_t OUTLINED_FUNCTION_19_57()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

__n128 OUTLINED_FUNCTION_19_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11)
{
  __n128 result = a9;
  __n128 *v11 = a9;
  v11[1] = a10;
  v11[2] = a11;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentCallsDidChangeObserver))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController + 24);
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController), v1);
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    if (v3)
    {
      unint64_t v4 = (void *)v3;
      id v5 = objc_msgSend(self, sel_defaultCenter);
      uint64_t v6 = (void *)OUTLINED_FUNCTION_69_0();
      __swift_project_boxed_opaque_existential_1(v6, v7);
      id v8 = v4;
      uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
      id v10 = objc_msgSend(self, sel_mainQueue);
      uint64_t v11 = OUTLINED_FUNCTION_20();
      swift_unknownObjectWeakInit();
      void v14[4] = partial apply for closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver();
      v14[5] = v11;
      v14[0] = MEMORY[0x1E4F143A8];
      v14[1] = 1107296256;
      v14[2] = thunk for @escaping @callee_guaranteed @Sendable (@in_guaranteed Notification) -> ();
      v14[3] = &block_descriptor_101_0;
      uint64_t v12 = _Block_copy(v14);
      swift_release();
      id v13 = objc_msgSend(v5, sel_addObserverForName_object_queue_usingBlock_, v8, v9, v10, v12);
      _Block_release(v12);

      swift_unknownObjectRelease();
      RecentsCollectionViewCollator.recentCallsDidChangeObserver.setter((uint64_t)v13);
    }
  }
  OUTLINED_FUNCTION_55_13();
}

uint64_t RecentsListViewController.createCellRegistrationForRecentsCallItemOngoingCalls()()
{
  return RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()();
}

uint64_t RecentsListViewController.createCellRegistrationForRecentsCallItemLinks()()
{
  return RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()();
}

uint64_t RecentsListViewController.createSectionHeaderViewRegistrationForSupplementalView()()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UICollectionViewListCell);
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t RecentsListViewController.createHeaderButtonsViewRegistration()()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for RecentsHeaderButtonsView();
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t RecentsLinkController.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_48_10();
  *(void *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall RecentsLinkController.resume()()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (v0[44] == 1)
  {
    uint64_t v1 = v0;
    OUTLINED_FUNCTION_50();
    uint64_t v3 = (*(uint64_t (**)(void))(v2 + 344))();
    (*(void (**)(uint64_t))(*(void *)v0 + 352))(v3);
    int out_token = 0;
    unint64_t v4 = (const char *)*MEMORY[0x1E4F5DF38];
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    id v5 = static OS_dispatch_queue.main.getter();
    uint64_t v6 = OUTLINED_FUNCTION_20();
    swift_weakInit();
    v8[4] = partial apply for closure #1 in closure #1 in RecentsLinkController.resume();
    v8[5] = v6;
    v8[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_35_11();
    v8[2] = thunk for @escaping @callee_guaranteed (@unowned Int32) -> ();
    v8[3] = &block_descriptor_15_0;
    uint64_t v7 = _Block_copy(v8);
    swift_release();
    LODWORD(v4) = notify_register_dispatch(v4, &out_token, v5, v7);
    _Block_release(v7);

    if (!v4)
    {
      if (out_token)
      {
        *((_DWORD *)v1 + 10) = out_token;
        v1[44] = 0;
      }
    }
  }
}

Swift::Void __swiftcall RecentsLinkController.refreshSuggestionsURLs()()
{
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_baseURLStrings);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6)
  {
    id v7 = RecentsLinkController.modelLocked.getter();
    unint64_t v32 = (uint64_t (*)(uint64_t, uint64_t))specialized thunk for @callee_guaranteed (@guaranteed RecentsLinkControllerModel) -> ();
    uint64_t v33 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, void *))thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
    unint64_t v31 = &block_descriptor_63;
    id v8 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v7, sel_performWhileLocked_, v8);

    _Block_release(v8);
    if (OUTLINED_FUNCTION_29_21())
    {
      __break(1u);
    }
    else
    {
      id v0 = RecentsLinkController.suggestionsService.getter();
      uint64_t v26 = (uint64_t)&v26;
      id v27 = (id)type metadata accessor for Date();
      OUTLINED_FUNCTION_4();
      uint64_t v2 = v9;
      uint64_t v11 = *(void *)(v10 + 64);
      MEMORY[0x1F4188790](v12);
      id v8 = (const void *)((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v1 = (char *)((char *)&v26 - (unsigned char *)v8);
      Date.init()();
      if (one-time initialization token for conversationKit == -1) {
        goto LABEL_4;
      }
    }
    swift_once();
LABEL_4:
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    uint64_t v13 = type metadata accessor for RecentsLinkController();
    MEMORY[0x1F4188790](v13);
    id v14 = (char *)((char *)&v26 - (unsigned char *)v8);
    static RecentsLinkController.startDateForSuggestions.getter((char *)&v26 - (unsigned char *)v8);
    v15.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    int64_t v16 = *(void (**)(char *, id))(v2 + 8);
    v16(v14, v27);
    v17.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v18 = objc_msgSend(v3, sel_baseURLStrings);
    uint64_t v19 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v19[2])
    {
      uint64_t v20 = v19[4];
      uint64_t v21 = v19[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)MEMORY[0x1C87730B0](v20, v21);
      swift_bridgeObjectRelease();
      uint64_t v23 = OUTLINED_FUNCTION_20();
      swift_weakInit();
      uint64_t v24 = OUTLINED_FUNCTION_26();
      *(void *)(v24 + 16) = v23;
      *(void *)(v24 + 24) = v0;
      unint64_t v32 = partial apply for closure #2 in RecentsLinkController.refreshSuggestionsURLs();
      uint64_t v33 = v24;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v29 = 1107296256;
      uint64_t v30 = thunk for @escaping @callee_guaranteed (@guaranteed [SGURL]?, @guaranteed Error?) -> ();
      unint64_t v31 = &block_descriptor_70;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      objc_msgSend(v0, sel_urlsFoundBetweenStartDate_endDate_excludingBundleIdentifiers_containingSubstring_flagFilter_limit_withCompletion_, v15.super.isa, v17.super.isa, 0, v22, 4, 10, v25);
      _Block_release(v25);
      swift_unknownObjectRelease();

      v16(v1, v27);
    }
    else
    {
      __break(1u);
    }
    return;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
  id v27 = (id)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
}

uint64_t static RecentsLinkController.startDateForSuggestions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  uint64_t v8 = type metadata accessor for Calendar.Component();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27BF8], v8);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  NSDate v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v12);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v18, v3, v12);
  }
  __break(1u);
  return result;
}

id RecentsLinkController.suggestionsService.getter()
{
  if (*(void *)(v0 + 64))
  {
    id v1 = *(id *)(v0 + 64);
  }
  else
  {
    id v1 = objc_msgSend(self, sel_serviceForURLs);
    *(void *)(v0 + 64) = v1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v1;
}

Swift::Void __swiftcall RecentsLinkController.refreshLinks()()
{
  id v1 = RecentsLinkController.modelLocked.getter();
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))specialized thunk for @callee_guaranteed (@guaranteed RecentsLinkControllerModel) -> ();
  uint64_t v11 = 0;
  uint64_t v6 = MEMORY[0x1E4F143A8];
  uint64_t v7 = 1107296256;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, void *))thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
  uint64_t v9 = &block_descriptor_56;
  uint64_t v2 = _Block_copy(&v6);
  swift_release();
  objc_msgSend(v1, sel_performWhileLocked_, v2);

  _Block_release(v2);
  if (OUTLINED_FUNCTION_29_21())
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 16);
    uint64_t v4 = OUTLINED_FUNCTION_20();
    swift_weakInit();
    uint64_t v10 = partial apply for closure #2 in RecentsLinkController.refreshLinks();
    uint64_t v11 = v4;
    uint64_t v6 = MEMORY[0x1E4F143A8];
    uint64_t v7 = 1107296256;
    uint64_t v8 = thunk for @escaping @callee_guaranteed (@guaranteed Set<TUConversationLink>?, @guaranteed Error?) -> ();
    uint64_t v9 = &block_descriptor_60_0;
    uint64_t v5 = _Block_copy(&v6);
    swift_release();
    objc_msgSend(v3, sel_getActiveLinksWithCreatedOnly_completionHandler_, 0, v5);
    _Block_release(v5);
  }
}

id RecentsLinkController.modelLocked.getter()
{
  id v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = *(id *)(v0 + 56);
  }
  else
  {
    id v3 = closure #1 in RecentsLinkController.modelLocked.getter();
    uint64_t v4 = *(void **)(v0 + 56);
    *(void *)(v0 + 56) = v3;
    id v2 = v3;

    id v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

int8x8_t OUTLINED_FUNCTION_32_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11 = vorrq_s8(a10, a11);
  return vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL));
}

id OUTLINED_FUNCTION_32_9(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0, 0.0, 0.0, 0.75);
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t OUTLINED_FUNCTION_32_11()
{
  return swift_arrayInitWithCopy();
}

id OUTLINED_FUNCTION_32_14()
{
  id v3 = *(void **)(v1 - 296);
  return [v3 (SEL)(v0 + 2072)];
}

uint64_t OUTLINED_FUNCTION_32_15()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_32_16()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_32_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_155()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_32_18(void *a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_32_20()
{
  uint64_t v6 = v2 + *(int *)(*(void *)(v4 - 192) + 44);
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = 1;
  *(unsigned char *)(v6 + 16) = 0;
  return outlined destroy of SystemUpdateNotice?(v3, v1);
}

uint64_t OUTLINED_FUNCTION_32_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_237(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 24) = result;
  *(void *)(v2 + 32) = v3;
  return result;
}

int *OUTLINED_FUNCTION_32_22@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S2>, float a4@<S3>, float a5@<S4>)
{
  return MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)(v5, 1, v6, a1, a2, v8, a3, a4, a5);
}

double OUTLINED_FUNCTION_32_23()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_32_25()
{
  return v0;
}

uint64_t (*OUTLINED_FUNCTION_32_27())()
{
  return specialized Dictionary.subscript.modify();
}

uint64_t OUTLINED_FUNCTION_32_29()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_32_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_31()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_32_32(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

void OUTLINED_FUNCTION_32_36(__n128 a1, __n128 a2)
{
  v2[15] = a1;
  v2[16] = a2;
  v2[17].n128_u64[0] = 0x4085E00000000000;
  v2[17].n128_u64[1] = 3;
}

uint64_t type metadata accessor for RecentLinkCallItems()
{
  return self;
}

uint64_t type metadata accessor for WeakBox()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for RecentsCollectionViewSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

uint64_t closure #1 in VideoMessageInboxController.updateCallItems()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a4;
  return MEMORY[0x1F4188298](closure #1 in VideoMessageInboxController.updateCallItems(), 0, 0);
}

uint64_t one-time initialization function for tipUserInfo()
{
  type metadata accessor for RecentsListViewController.FaceTimeLinkTipUserInfo();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  static RecentsListViewController.tipUserInfo = (_UNKNOWN *)result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for MultiwayViewController.FaceTimeLinkTipUserInfo();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  static MultiwayViewController.tipUserInfo = (_UNKNOWN *)result;
  return result;
}

uint64_t type metadata accessor for RecentsListViewController.FaceTimeLinkTipUserInfo()
{
  return self;
}

void type metadata completion function for RecentsListViewController()
{
  type metadata accessor for IndexPath?(319, (unint64_t *)&lazy cache variable for type metadata for IndexPath?, MEMORY[0x1F418BF78]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for IndexPath?(319, (unint64_t *)&lazy cache variable for type metadata for UIBackgroundConfiguration?, MEMORY[0x1E4FB0F28]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?, (uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?(319, &lazy cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>?, (uint64_t *)&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?(319, &lazy cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>?, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for IndexPath?(319, (unint64_t *)&lazy cache variable for type metadata for UICollectionLayoutListConfiguration?, MEMORY[0x1E4FB1130]);
            if (v5 <= 0x3F)
            {
              type metadata accessor for IndexPath?(319, (unint64_t *)&lazy cache variable for type metadata for UUID?, MEMORY[0x1F418BC20]);
              if (v6 <= 0x3F) {
                swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for IndexPath?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ()(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t partial apply for closure #1 in RecentsLinkController.callItems.getter(uint64_t a1)
{
  return closure #1 in RecentsLinkController.callItems.getter(a1, *(void **)(v1 + 16));
}

uint64_t closure #1 in RecentsLinkController.callItems.getter(uint64_t a1, void *a2)
{
  *a2 = (*(uint64_t (**)(void))(*(void *)a1 + 88))();
  return swift_bridgeObjectRelease();
}

uint64_t RecentLinkCallItems.callItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t partial apply for closure #1 in closure #2 in RecentsLinkController.refreshSuggestionsURLs()(uint64_t a1)
{
  return closure #1 in closure #2 in RecentsLinkController.refreshSuggestionsURLs()(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t closure #1 in RecentsLinkController.refreshSuggestionsURLs()(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 184))(a1);
  if ((result & 2) == 0)
  {
    unint64_t v4 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)a1 + 200))(v5);
    if ((*v3 & 2) == 0) {
      *v3 |= 2uLL;
    }
    return v4(v5, 0);
  }
  return result;
}

uint64_t RecentsLinkControllerModel.updateState.getter()
{
  OUTLINED_FUNCTION_2();
  return *(void *)(v0 + 56);
}

void partial apply for closure #1 in closure #2 in RecentsLinkController.refreshLinks()(uint64_t a1)
{
  closure #1 in closure #2 in RecentsLinkController.refreshLinks()(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void closure #1 in closure #2 in RecentsLinkController.refreshLinks()(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a2)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C3769620;
    v54[0] = a2;
    id v7 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v8 = String.init<A>(reflecting:)();
    uint64_t v10 = v9;
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    int8x16_t v11 = *(uint64_t (**)(void *))(*(void *)a1 + 200);
    goto LABEL_44;
  }
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  if (!v13)
  {
    if (a3) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v14 = v13;
  if (!a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  char v15 = specialized static Set.== infix(_:_:)(v14, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_10:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    goto LABEL_43;
  }
LABEL_14:
  int64_t v16 = *(void (**)(uint64_t))(*(void *)v3 + 168);
  uint64_t v17 = swift_bridgeObjectRetain();
  v16(v17);
  if (!a3)
  {
    unint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_40:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1C3769620;
    v54[0] = *(void *)(v19 + 16);
    unint64_t v41 = v19;
    uint64_t v42 = String.init<A>(reflecting:)();
    uint64_t v44 = v43;
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v40 + 32) = v42;
    *(void *)(v40 + 40) = v44;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t))(*(void *)v3 + 240))(v41);
LABEL_43:
    int8x16_t v11 = *(uint64_t (**)(void *))(*(void *)v3 + 200);
LABEL_44:
    uint64_t v46 = (void (*)(void *, void))v11(v54);
    if (*v45) {
      *v45 &= ~1uLL;
    }
    v46(v54, 0);
    return;
  }
  uint64_t v47 = v3;
  uint64_t v18 = specialized Set.count.getter(a3);
  unint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v18)
  {
LABEL_39:
    uint64_t v3 = v47;
    goto LABEL_40;
  }
  uint64_t v20 = v18;
  unint64_t v53 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  unint64_t v49 = a3 & 0xC000000000000001;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v21 = __CocoaSet.startIndex.getter();
    char v23 = 1;
  }
  else
  {
    uint64_t v21 = specialized _NativeSet.startIndex.getter(a3);
    char v23 = v24 & 1;
  }
  uint64_t v50 = v21;
  uint64_t v51 = v22;
  unsigned __int8 v52 = v23;
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v48 = a3;
    do
    {
      specialized Set.subscript.getter(v50, v51, v52, a3);
      id v26 = v25;
      uint64_t v27 = MEMORY[0x1E4FBC870];
      if ((v19 & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
      {
        specialized Set.init(_nonEmptyArrayLiteral:)(v19);
        uint64_t v27 = v28;
      }
      if (one-time initialization token for faceTime != -1) {
        swift_once();
      }
      uint64_t v29 = static ParticipantContactDetailsCache.faceTime;
      swift_retain();

      unint64_t v30 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v30 = v53;
      }
      unint64_t v31 = *(void *)(v30 + 16);
      if (v31 >= *(void *)(v30 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v30 = v53;
      }
      *(void *)(v30 + 16) = v31 + 1;
      unint64_t v32 = (void *)(v30 + 24 * v31);
      v32[4] = v26;
      v32[5] = v27;
      v32[6] = v29;
      if (v49)
      {
        a3 = v48;
        if ((v52 & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v33 = __CocoaSet.Index.handleBitPattern.getter();
        unint64_t v19 = MEMORY[0x1E4FBC860];
        if (v33) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationLink>.Index);
        uint64_t v39 = (void (*)(void *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v39(v54, 0);
      }
      else
      {
        a3 = v48;
        uint64_t v34 = specialized _NativeSet.index(after:)(v50, v51, v52, v48);
        uint64_t v36 = v35;
        char v38 = v37;
        outlined consume of Set<TUHandle>.Index._Variant(v50, v51, v52);
        uint64_t v50 = v34;
        uint64_t v51 = v36;
        unsigned __int8 v52 = v38 & 1;
        unint64_t v19 = MEMORY[0x1E4FBC860];
      }
      --v20;
    }
    while (v20);
    outlined consume of Set<TUHandle>.Index._Variant(v50, v51, v52);
    unint64_t v19 = v53;
    goto LABEL_39;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

uint64_t specialized static Set.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return MEMORY[0x1F4184BB8](v6, v5);
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    specialized _NativeSet.isEqual(to:)(v7, v8);
    return v9 & 1;
  }
  if (a1 == a2)
  {
LABEL_56:
    char v9 = 1;
    return v9 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_58:
    char v9 = 0;
    return v9 & 1;
  }
  OUTLINED_FUNCTION_14_30();
  if (v14 << v13 < 64) {
    uint64_t v15 = ~(-1 << (v14 << v13));
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v12;
  uint64_t v6 = type metadata accessor for NSObject(0, v11);
  uint64_t v17 = 0;
  if (!v16) {
    goto LABEL_27;
  }
LABEL_26:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v17 << 6))
  {
    Swift::Int v28 = *(void *)(a2 + 40);
    id v29 = *(id *)(*(void *)(a1 + 48) + 8 * i);
    Swift::Int v30 = NSObject._rawHashValue(seed:)(v28);
    uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v32 = v30 & ~v31;
    OUTLINED_FUNCTION_29_17();
    if ((v33 & 1) == 0) {
      goto LABEL_57;
    }
    uint64_t v40 = v17;
    id v34 = *(id *)(*(void *)(a2 + 48) + 8 * v32);
    char v35 = static NSObject.== infix(_:_:)();

    if ((v35 & 1) == 0)
    {
      uint64_t v36 = ~v31;
      while (1)
      {
        uint64_t v32 = (v32 + 1) & v36;
        OUTLINED_FUNCTION_29_17();
        if ((v37 & 1) == 0) {
          break;
        }
        id v38 = *(id *)(*(void *)(a2 + 48) + 8 * v32);
        char v39 = static NSObject.== infix(_:_:)();

        if (v39) {
          goto LABEL_54;
        }
      }
LABEL_57:

      goto LABEL_58;
    }
LABEL_54:

    uint64_t v17 = v40;
    if (v16) {
      goto LABEL_26;
    }
LABEL_27:
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_60;
    }
    OUTLINED_FUNCTION_25_21();
    if (v20 == v21) {
      goto LABEL_56;
    }
    OUTLINED_FUNCTION_24_21();
    uint64_t v17 = v22;
    if (!v23)
    {
      uint64_t v17 = v22 + 1;
      OUTLINED_FUNCTION_26_20();
      if (v20 == v21) {
        goto LABEL_56;
      }
      OUTLINED_FUNCTION_22_22();
      if (!v23)
      {
        uint64_t v17 = v24 + 2;
        OUTLINED_FUNCTION_26_20();
        if (v20 == v21) {
          goto LABEL_56;
        }
        OUTLINED_FUNCTION_22_22();
        if (!v23)
        {
          uint64_t v17 = v25 + 3;
          OUTLINED_FUNCTION_26_20();
          if (v20 == v21) {
            goto LABEL_56;
          }
          OUTLINED_FUNCTION_22_22();
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_48:
    unint64_t v16 = (v23 - 1) & v23;
  }
  OUTLINED_FUNCTION_25_21();
  if (v20 == v21) {
    goto LABEL_56;
  }
  OUTLINED_FUNCTION_24_21();
  if (v23)
  {
    uint64_t v17 = v26;
    goto LABEL_48;
  }
  while (1)
  {
    uint64_t v17 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    OUTLINED_FUNCTION_26_20();
    if (v20 == v21) {
      goto LABEL_56;
    }
    OUTLINED_FUNCTION_22_22();
    uint64_t v26 = v27 + 1;
    if (v23) {
      goto LABEL_48;
    }
  }
LABEL_60:
  __break(1u);
  return MEMORY[0x1F4184BB8](v6, v5);
}

{
  return specialized static Set.== infix(_:_:)(a1, a2);
}

{
  return specialized static Set.== infix(_:_:)(a1, a2);
}

{
  return specialized static Set.== infix(_:_:)(a1, a2);
}

void specialized _NativeSet.isEqual(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != __CocoaSet.count.getter()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_19:
    id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v16 = __CocoaSet.contains(_:)();

    if ((v16 & 1) == 0) {
      return;
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v12 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_18;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_19;
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t RecentsLinkControllerModel.tuLinks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t closure #1 in closure #2 in RecentsLinkController.refreshSuggestionsURLs()(uint64_t a1, unint64_t a2, void *a3)
{
  id v41 = a3;
  uint64_t v4 = a1;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 256))(a1);
  specialized static Array<A>.== infix(_:_:)(v5, a2, v6, v7, v8, v9, v10, v11, v38, (unint64_t)v39);
  char v13 = v12;
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_13;
  }
  int64_t v14 = *(void (**)(uint64_t))(*(void *)v4 + 264);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v38 = v4;
  v14(v15);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C3769620;
  aBlock[0] = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SGURL]);
  uint64_t v17 = String.init<A>(reflecting:)();
  uint64_t v19 = v18;
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v20 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_6:
      if (v20 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v22 = 0;
      char v39 = v43;
      unint64_t v40 = a2 & 0xC000000000000001;
      unint64_t v23 = a2;
      do
      {
        if (v40) {
          id v24 = (id)MEMORY[0x1C87744F0](v22, a2);
        }
        else {
          id v24 = *(id *)(a2 + 8 * v22 + 32);
        }
        uint64_t v25 = v24;
        ++v22;
        id v26 = objc_msgSend(v24, sel_url);
        uint64_t v27 = type metadata accessor for URL();
        uint64_t v28 = *(void *)(v27 - 8);
        MEMORY[0x1F4188790](v27);
        Swift::Int v30 = (char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v31 = URL.absoluteString.getter();
        uint64_t v33 = v32;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
        id v34 = (void *)MEMORY[0x1C87730B0](v31, v33);
        swift_bridgeObjectRelease();
        v43[2] = TPNumberPadCharacter.rawValue.getter;
        v43[3] = 0;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        v43[0] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
        v43[1] = &block_descriptor_159;
        char v35 = _Block_copy(aBlock);
        objc_msgSend(v41, sel_registerURLFeedback_absoluteURL_withCompletion_, 2, v34, v35);
        _Block_release(v35);

        a2 = v23;
      }
      while (v20 != v22);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = v38;
LABEL_13:
  char v37 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v4 + 200))(aBlock);
  if ((*v36 & 2) != 0) {
    *v36 &= ~2uLL;
  }
  v37(aBlock, 0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  return os_log(_:dso:log:type:_:)();
}

uint64_t RecentsLinkControllerModel.updateState.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return RecentsLinkControllerModel.updateState.didset();
  }
  return result;
}

uint64_t RecentsLinkControllerModel.updateState.didset()
{
  uint64_t v1 = swift_beginAccess();
  if (v0[7] == v0[2]) {
    return (*(uint64_t (**)(uint64_t))(*v0 + 280))(v1);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3769620;
  uint64_t v4 = String.init<A>(reflecting:)();
  uint64_t v6 = v5;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v6;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

uint64_t (*RecentsLinkControllerModel.updateState.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_9();
  return RecentsLinkControllerModel.updateState.modify;
}

void specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v12 = v11;
  uint64_t v13 = v10;
  int64_t v14 = (void *)(v10 >> 62);
  if (v10 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 == v16 && v15)
  {
    uint64_t v17 = v13 & 0xFFFFFFFFFFFFFF8;
    if (v13 < 0) {
      uint64_t v17 = v13;
    }
    if (!v14) {
      uint64_t v17 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    uint64_t v18 = v12 & 0xFFFFFFFFFFFFFF8;
    uint64_t v19 = (v12 & 0xFFFFFFFFFFFFFF8) + 32;
    if (v12 < 0) {
      uint64_t v18 = v12;
    }
    if ((unint64_t)v12 >> 62) {
      uint64_t v19 = v18;
    }
    if (v17 != v19)
    {
      if (v15 < 0) {
        goto LABEL_40;
      }
      a10 = v13 & 0xC000000000000001;
      if ((v13 & 0xC000000000000001) != 0) {
LABEL_41:
      }
        id v20 = (id)MEMORY[0x1C87744F0](0, v13);
      else {
        id v20 = *(id *)(v13 + 32);
      }
      int64_t v14 = v20;
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v12 & 0xC000000000000001) == 0, v12);
      if ((v12 & 0xC000000000000001) != 0) {
        OUTLINED_FUNCTION_53_3();
      }
      else {
        id v21 = *(id *)(v12 + 32);
      }
      uint64_t v22 = v21;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for SGURL);
      char v23 = static NSObject.== infix(_:_:)();

      if ((v23 & 1) != 0 && v15 != 1)
      {
        uint64_t v24 = 5;
        while (1)
        {
          if (v24 - 4 >= v15)
          {
            __break(1u);
            goto LABEL_37;
          }
          if (a10) {
            id v25 = (id)MEMORY[0x1C87744F0](v24 - 4, v13);
          }
          else {
            id v25 = *(id *)(v13 + 8 * v24);
          }
          int64_t v14 = v25;
          if ((v12 & 0xC000000000000001) != 0)
          {
            id v26 = (id)MEMORY[0x1C87744F0](v24 - 4, v12);
          }
          else
          {
            if ((unint64_t)(v24 - 4) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_40:
              __break(1u);
              goto LABEL_41;
            }
            id v26 = *(id *)(v12 + 8 * v24);
          }
          uint64_t v27 = v26;
          char v28 = static NSObject.== infix(_:_:)();

          if (v28)
          {
            uint64_t v29 = 2 - v15 + v24++;
            if (v29 != 5) {
              continue;
            }
          }
          break;
        }
      }
    }
  }
  OUTLINED_FUNCTION_22();
}

uint64_t RecentsLinkControllerModel.suggestionsURLs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t closure #1 in RecentsLinkController.refreshLinks()(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 184))(a1);
  if ((result & 1) == 0)
  {
    uint64_t v4 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)a1 + 200))(v5);
    if ((*v3 & 1) == 0) {
      *v3 |= 1uLL;
    }
    return v4(v5, 0);
  }
  return result;
}

id thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();
  return v6;
}

void *partial apply for closure #1 in RecentsListViewController.collectionViewLayout()(uint64_t a1)
{
  return closure #1 in RecentsListViewController.collectionViewLayout()(a1);
}

void *closure #1 in RecentsListViewController.collectionViewLayout()(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *Strong) + 0x318))();

  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v7 + 248))(&v30, a1);
  swift_release();
  if ((_BYTE)v30)
  {
    uint64_t v8 = (void *)type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutSection);
    uint64_t v9 = (void *)swift_unknownObjectUnownedLoadStrong();
    RecentsListViewController.collectionLayoutConfiguration.getter();

    unint64_t v10 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v3 += 8;
    v11(v5, v2);
    id v12 = objc_msgSend(v10, sel_boundarySupplementaryItems);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_10;
      }
    }
    if (v2 >= 1)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if ((v13 & 0xC000000000000001) != 0) {
          id v15 = (id)MEMORY[0x1C87744F0](i, v13);
        }
        else {
          id v15 = *(id *)(v13 + 8 * i + 32);
        }
        uint64_t v16 = v15;
        objc_msgSend(v15, sel_setPinToVisibleBounds_, 0);
      }
LABEL_10:
      swift_bridgeObjectRelease_n();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))())
      {
        objc_msgSend(v10, sel_contentInsets);
        objc_msgSend(v10, sel_setContentInsets_, 0.0);
      }
      return v10;
    }
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = self;
  unint64_t v13 = (unint64_t)objc_msgSend(v8, sel_fractionalWidthDimension_, 1.0);
  if (one-time initialization token for estimatedHeight != -1) {
LABEL_24:
  }
    swift_once();
  id v17 = objc_msgSend(v8, sel_estimatedDimension_, *(double *)&static RecentsHeaderButtonsView.Constants.estimatedHeight);
  id v18 = objc_msgSend(self, sel_sizeWithWidthDimension_heightDimension_, v13, v17);

  uint64_t v19 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v20 = v18;
  Class isa = RecentsListViewController.updateHeaderForTip(_:)((NSCollectionLayoutSize)v20).super.isa;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
  uint64_t v22 = isa;
  id v23 = @nonobjc NSCollectionLayoutBoundarySupplementaryItem.__allocating_init(layoutSize:elementKind:alignment:)(v22, 0xD00000000000001CLL, 0x80000001C379AFE0, 1);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutSection);
  uint64_t v24 = (void *)swift_unknownObjectUnownedLoadStrong();
  RecentsListViewController.collectionLayoutConfiguration.getter();

  unint64_t v10 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 872))())
  {
    objc_msgSend(v10, sel_contentInsets);
    objc_msgSend(v10, sel_setContentInsets_);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C3769830;
  *(void *)(v25 + 32) = v23;
  uint64_t v29 = v25;
  specialized Array._endMutation()();
  id v26 = v23;
  Class v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setBoundarySupplementaryItems_, v27);

  return v10;
}

ConversationKit::RecentsCollectionViewSection_optional __swiftcall RecentsCollectionViewDataSource.section(for:)(Swift::Int a1)
{
  OUTLINED_FUNCTION_50();
  id v3 = (id)(*(uint64_t (**)(void))(v1 + 224))();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

  return result;
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  return v0 - 136;
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return v0 - 136;
}

uint64_t OUTLINED_FUNCTION_44_7@<X0>(unint64_t a1@<X8>)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v2, 1, v1);
}

uint64_t OUTLINED_FUNCTION_44_8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, void *a12)
{
  uint64_t v15 = *(unsigned int *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 24);
  return ConversationControlsPrimaryActionButtonProvider.init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)(a1, v15, a3, 0, 0, v16, v13, v12 + 112, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_44_11()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t OUTLINED_FUNCTION_44_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_13()
{
  outlined consume of SessionActionNotice.NoticeType(v2, v1, v0);
  outlined consume of SessionActionNotice.NoticeType(v5, v4, v3);
  outlined consume of SessionActionNotice.NoticeType(v5, v4, v3);
  return v2;
}

uint64_t OUTLINED_FUNCTION_44_15()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_44_19()
{
  return type metadata accessor for VideoMessageControlsView(0);
}

uint64_t OUTLINED_FUNCTION_44_21()
{
  return outlined init with copy of IDSLookupManager(v0 + 160, v0 + 120);
}

uint64_t OUTLINED_FUNCTION_44_24(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

void OUTLINED_FUNCTION_44_25(double a1)
{
  *(double *)(v1 + 240) = a1;
}

uint64_t OUTLINED_FUNCTION_44_26()
{
  return swift_bridgeObjectRelease();
}

id RecentsCollectionViewDataSource.dataSource.getter()
{
  uint64_t v1 = *(void **)(v0 + 128);
  if (v1)
  {
    id v2 = *(id *)(v0 + 128);
  }
  else
  {
    unint64_t v3 = (void *)closure #1 in RecentsCollectionViewDataSource.dataSource.getter(v0);
    uint64_t v4 = *(void **)(v0 + 128);
    *(void *)(v0 + 128) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void RecentsListViewController.collectionLayoutConfiguration.getter()
{
}

id @nonobjc NSCollectionLayoutBoundarySupplementaryItem.__allocating_init(layoutSize:elementKind:alignment:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)MEMORY[0x1C87730B0](a2, a3);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_boundarySupplementaryItemWithLayoutSize_elementKind_alignment_, a1, v6, a4);

  return v7;
}

uint64_t closure #1 in RecentsCollectionViewDataSource.dataSource.getter(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  id v2 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<RecentsCollectionViewSection, RecentsCallItem>));
  id v3 = v1;
  swift_retain();
  uint64_t v4 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
  return v4;
}

NSCollectionLayoutSize __swiftcall RecentsListViewController.updateHeaderForTip(_:)(NSCollectionLayoutSize a1)
{
  OUTLINED_FUNCTION_121();
  id v2 = v1;
  id v3 = RecentsListViewController.tipPopoverController.getter();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x2C8);
    if (v6())
    {
      OUTLINED_FUNCTION_46_7();
      uint64_t v8 = (void *)(*(uint64_t (**)(void))(v7 + 256))();

      if (v8)
      {
        id v9 = objc_msgSend(v5, sel_popoverPresentationController);
        if (v9)
        {
          unint64_t v10 = v9;
          id v11 = objc_msgSend(v9, sel_presentedViewController);

          LOBYTE(v10) = objc_msgSend(v11, sel_isBeingPresented);
          if (v10)
          {
            uint64_t v12 = v2;
            if (((uint64_t (*)(id))v6)(objc_msgSend(v8, sel_setActive_, 0)))
            {
              OUTLINED_FUNCTION_46_7();
              uint64_t v14 = (void *)(*(uint64_t (**)(void))(v13 + 280))();

              objc_msgSend(v14, sel_bounds);
              OUTLINED_FUNCTION_38();

              v24.origin.x = OUTLINED_FUNCTION_41();
              double v15 = CGRectGetHeight(v24) + 90.0;
            }
            else
            {
              double v15 = 90.0;
            }
            id v21 = self;
            id v22 = objc_msgSend(v21, sel_fractionalWidthDimension_, 1.0);
            id v23 = objc_msgSend(v21, sel_absoluteDimension_, v15);
            objc_msgSend(self, sel_sizeWithWidthDimension_heightDimension_, v22, v23);

            OUTLINED_FUNCTION_147();
            return result;
          }
        }
      }
    }
  }
  if ((*(uint64_t (**)(void))((*v4 & *v2) + 0x2C8))())
  {
    OUTLINED_FUNCTION_46_7();
    id v17 = (void *)(*(uint64_t (**)(void))(v16 + 256))();

    if (v17)
    {
      objc_msgSend(v17, sel_setActive_, 1);
    }
  }
  OUTLINED_FUNCTION_147();
  return (NSCollectionLayoutSize)v18;
}

void OUTLINED_FUNCTION_154_0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_154_2()
{
  *(void *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 64) = 0;
  *(void *)(v0 + 8) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t OUTLINED_FUNCTION_154_3()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_154_5(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, 0, v2, v5);
}

void OUTLINED_FUNCTION_154_6()
{
  closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(v3, v4, v5, v6);
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  return outlined init with copy of FaceIDUnavailableNotice(v0, v1);
}

void OUTLINED_FUNCTION_122_4(void *a1)
{
  closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void *RecentsListViewController.headerView.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void *RecentsListViewController.tipPopoverController.getter()
{
  if (one-time initialization token for tipUserInfo != -1) {
    swift_once();
  }
  if (!static RecentsListViewController.tipUserInfo) {
    return 0;
  }
  uint64_t v0 = (void *)*((void *)static RecentsListViewController.tipUserInfo + 2);
  id v1 = v0;
  return v0;
}

uint64_t one-time initialization function for selectActionIdentifier()
{
  uint64_t result = MEMORY[0x1C87730B0](0x63417463656C6573, 0xEC0000006E6F6974);
  static RecentsListViewController.Constants.selectActionIdentifier = result;
  return result;
}

uint64_t dispatch thunk of RecentsListViewController.presentScreenTimeShield.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

id RecentsHeaderButtonsView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = &v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_delegate];
  *((void *)v1 + 1) = 0;
  *((void *)v1 + 2) = 0;
  *(void *)id v1 = 0;
  id v2 = &v0[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_headerDelegate];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_featureFlags;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  uint64_t v5 = v0;
  *(void *)&v0[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_newFaceTimeButton;
  uint64_t v7 = self;
  *(void *)&v5[v6] = objc_msgSend(v7, sel_buttonWithType_, 1);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_createLinkButton;
  *(void *)&v5[v8] = objc_msgSend(v7, sel_buttonWithType_, 1);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_bottomAnchorConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___buttonsView] = 0;
  uint64_t v9 = (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___newFaceTimeButtonConfiguration];
  type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_10_2(v9);
  OUTLINED_FUNCTION_10_2((uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView____lazy_storage___createLinkButtonConfiguration]);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit24RecentsHeaderButtonsView_buttonTitleParagraphStyle;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v11, sel_setAlignment_, 1);
  *(void *)&v5[v10] = v11;

  v20.receiver = v5;
  v20.super_class = (Class)type metadata accessor for RecentsHeaderButtonsView();
  id v18 = OUTLINED_FUNCTION_14_14((uint64_t)v20.super_class, sel_initWithFrame_, v12, v13, v14, v15, v16, v17, v20);
  RecentsHeaderButtonsView.configure()();

  return v18;
}

uint64_t closure #1 in closure #1 in RecentsListViewController.supplementaryViewProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v37 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>);
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>?);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 != 0xD00000000000001CLL || a3 != 0x80000001C379AFE0)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v28 = (uint64_t)Strong + OBJC_IVAR___FTRecentsListViewController_sectionHeaderViewRegistrationForSupplementalView;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v28, (uint64_t)v8, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>?);

    uint64_t v29 = v35;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v35) != 1)
    {
      uint64_t v31 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v11, v8, v29);
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UICollectionViewListCell);
      uint64_t v26 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v29);
      return v26;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.conversationKit);
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v22, v23)) {
      goto LABEL_16;
    }
    CGRect v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGRect v24 = 0;
    uint64_t v25 = "sectionHeaderViewRegistrationForSupplementalView was unexpectedly nil";
    goto LABEL_15;
  }
  uint64_t v19 = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v20 = (uint64_t)v19 + OBJC_IVAR___FTRecentsListViewController_headerButtonsViewRegistration;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v20, (uint64_t)v14, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>?);

  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.conversationKit);
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v22, v23)) {
      goto LABEL_16;
    }
    CGRect v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGRect v24 = 0;
    uint64_t v25 = "headerButtonsViewRegistration was unexpectedly nil";
LABEL_15:
    _os_log_impl(&dword_1C2F90000, v22, v23, v25, v24, 2u);
    MEMORY[0x1C87760E0](v24, -1, -1);
LABEL_16:

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  type metadata accessor for RecentsHeaderButtonsView();
  uint64_t v26 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v26;
}

Swift::Void __swiftcall RecentsHeaderButtonsView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for RecentsHeaderButtonsView();
  objc_msgSendSuper2(&v11, sel_traitCollectionDidChange_, isa);
  if (isa) {
    Class isa = (Class)[(objc_class *)isa preferredContentSizeCategory];
  }
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!isa)
  {

    goto LABEL_11;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
LABEL_11:
  }
    RecentsHeaderButtonsView.updateButtons()();
}

uint64_t type metadata accessor for RecentsHeaderButtonsView()
{
  uint64_t result = type metadata singleton initialization cache for RecentsHeaderButtonsView;
  if (!type metadata singleton initialization cache for RecentsHeaderButtonsView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

objc_class *one-time initialization function for nicknamesDefaults()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB20]);
  uint64_t result = (objc_class *)@nonobjc NSUserDefaults.init(suiteName:)(0xD00000000000001CLL, 0x80000001C37AB6E0);
  nicknamesDefaults.value.super.Class isa = result;
  return result;
}

uint64_t one-time initialization function for shared()
{
  type metadata accessor for Defaults();
  uint64_t v0 = swift_allocObject();
  uint64_t result = Defaults.init()();
  static Defaults.shared = v0;
  return result;
}

{
  id v0;
  uint64_t result;

  type metadata accessor for PlaceholderCallCenter();
  uint64_t v0 = objc_msgSend(self, sel_sharedInstance);
  uint64_t result = PlaceholderCallCenter.__allocating_init(callCenter:)(v0);
  static PlaceholderCallCenter.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  _UNKNOWN **v2;
  long long v4;
  uint64_t v5;
  _UNKNOWN **v6;

  if (static Platform.current.getter() == 1)
  {
    uint64_t v0 = type metadata accessor for iPadFeatureSupportChecker();
    id v1 = swift_allocObject();
    id v2 = &protocol witness table for iPadFeatureSupportChecker;
  }
  else
  {
    uint64_t v0 = type metadata accessor for iPhoneFeatureSupportChecker();
    id v1 = swift_allocObject();
    id v2 = &protocol witness table for iPhoneFeatureSupportChecker;
  }
  *(unsigned char *)(v1 + 16) = 1;
  uint64_t v5 = v0;
  uint64_t v6 = v2;
  *(void *)&id v4 = v1;
  return outlined init with take of Notice(&v4, (uint64_t)&static PlatformFeatureChecker.shared);
}

{
  uint64_t result;

  type metadata accessor for SystemApertureIconFactory();
  uint64_t result = swift_initStaticObject();
  static SystemApertureIconFactory.shared = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for ClarityUIPreferences();
  swift_allocObject();
  uint64_t result = ClarityUIPreferences.().init()();
  static ClarityUIPreferences.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ConversationControlsRecipeGenerator();
  uint64_t v0 = swift_allocObject();
  uint64_t result = ConversationControlsRecipeGenerator.init()();
  static ConversationControlsRecipeGenerator.shared = v0;
  return result;
}

{
  uint64_t result;

  type metadata accessor for ClarityUIOutgoingCallActionProvider();
  swift_allocObject();
  uint64_t result = ClarityUIOutgoingCallActionProvider.().init()();
  static ClarityUIOutgoingCallActionProvider.shared = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for CallScreeningRTTHelper();
  swift_allocObject();
  uint64_t result = CallScreeningRTTHelper.().init()();
  static CallScreeningRTTHelper.shared = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for ClarityUICallHistory();
  swift_allocObject();
  uint64_t result = ClarityUICallHistory.().init()();
  static ClarityUICallHistory.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ConversationHUDMenuController();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_weakInit();
  static ConversationHUDMenuController.shared = v0;
  return result;
}

{
  uint64_t result;

  type metadata accessor for CarrierBundleSettings();
  uint64_t result = CarrierBundleSettings.__allocating_init()();
  static CarrierBundleSettings.shared = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for CallRecordingAvailabilityManager();
  uint64_t result = swift_allocObject();
  static CallRecordingAvailabilityManager.shared = result;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CKStateMachineActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  static CKStateMachineActor.shared = v0;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for PlatformDisplayLink();
  uint64_t v0 = swift_allocObject();
  uint64_t result = PlatformDisplayLink.init()();
  static PlatformDisplayLink.shared = v0;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for IMCoreCollaborationImageProvider();
  swift_allocObject();
  type metadata accessor for CollaborationImageFetcher();
  uint64_t v0 = swift_allocObject();
  id v1 = swift_retain();
  id v2 = specialized CollaborationImageFetcher.init(provider:)(v1, v0);
  uint64_t result = swift_release();
  static CollaborationImageFetcher.shared = v2;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CallScreeningActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  static CallScreeningActor.shared = v0;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ObjectTracker();
  uint64_t v0 = swift_allocObject();
  uint64_t result = ObjectTracker.init(onReportFailure:)((uint64_t)closure #1 in variable initialization expression of static ObjectTracker.shared, 0);
  static ObjectTracker.shared = v0;
  return result;
}

{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ClarityCameraModel();
  uint64_t v0 = swift_allocObject();
  uint64_t result = ClarityCameraModel.init()();
  static ClarityCameraModel.shared = v0;
  return result;
}

uint64_t type metadata accessor for Defaults()
{
  return self;
}

uint64_t Defaults.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CB20]);
  *(void *)(v0 + 24) = @nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000015, 0x80000001C37B3940);
  return v0;
}

id @nonobjc NSUserDefaults.init(suiteName:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t type metadata completion function for WeakBox()
{
  return swift_initClassMetadata2();
}

uint64_t base witness table accessor for Equatable in RecentsCallItem()
{
  return lazy protocol witness table accessor for type RecentCallRecentItemMetadata and conformance RecentCallRecentItemMetadata(&lazy protocol witness table cache variable for type RecentsCallItem and conformance RecentsCallItem, (void (*)(uint64_t))type metadata accessor for RecentsCallItem);
}

uint64_t lazy protocol witness table accessor for type Date and conformance Date(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

id specialized ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  id v54 = a1;
  uint64_t v55 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v53 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<RemoteControlState>);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  objc_super v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FeatureEligibilityChecker();
  v58[3] = v16;
  v58[4] = MEMORY[0x1E4F617A0];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v58);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(boxed_opaque_existential_1, a3, v16);
  *(void *)&a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = 0;
  id v18 = &a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_groupSessionStateCancellable];
  *(_OWORD *)id v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((void *)v18 + 4) = 0;
  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock;
  type metadata accessor for Lock();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = a4;
  id v22 = (_DWORD *)swift_slowAlloc();
  *(void *)(v20 + 16) = v22;
  _DWORD *v22 = 0;
  *(void *)&a4[v19] = v20;
  uint64_t v23 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers;
  *(void *)&v21[v23] = objc_msgSend(self, sel_weakObjectsHashTable);
  CGRect v24 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session];
  unint64_t v57 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenSharingInteractionSession?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v24, v15, v12);
  uint64_t v25 = (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate];
  uint64_t v26 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v25, 1, 1, v26);
  v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_isBroadcastingScreenSharing] = 0;
  Class v27 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState];
  unint64_t v57 = 0xA000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v27, v11, v8);
  uint64_t v28 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_onUpdateUI];
  *(void *)uint64_t v28 = TPNumberPadCharacter.rawValue.getter;
  *((void *)v28 + 1) = 0;
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static Log.screenSharing);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_1C2F90000, v30, v31, "Setting up DeviceRestrictionController and disabling restrictions on launch", v32, 2u);
    MEMORY[0x1C87760E0](v32, -1, -1);
  }

  uint64_t v33 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_deviceRestrictionController];
  uint64_t v34 = type metadata accessor for DeviceRestrictionController();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v55, v34);
  DeviceRestrictionController.setRestrictionsActive(_:)(0);
  outlined init with copy of IDSLookupManager((uint64_t)v58, (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_eligibilityChecker]);

  uint64_t v37 = (objc_class *)type metadata accessor for ScreenSharingInteractionController();
  v56.receiver = v21;
  v56.super_class = v37;
  id v38 = objc_msgSendSuper2(&v56, sel_init);
  id v39 = v54;
  if ((objc_msgSend(v54, sel_screenSharingDrawToHighlightEnabled) & 1) != 0
    || objc_msgSend(v39, sel_screenSharingRemoteControlEnabled))
  {
    if (one-time initialization token for sharedMonitor != -1) {
      swift_once();
    }
    unint64_t v40 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static ScreenSharingStateMonitor.sharedMonitor) + 0x140);
    id v41 = v38;
    v40();

    uint64_t v42 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v53, 1, 1, v42);
    type metadata accessor for MainActor();
    uint64_t v43 = (char *)v41;
    uint64_t v44 = static MainActor.shared.getter();
    uint64_t v45 = (void *)swift_allocObject();
    uint64_t v46 = MEMORY[0x1E4FBCFD8];
    v45[2] = v44;
    v45[3] = v46;
    v45[4] = v43;
    uint64_t v47 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
    *(void *)&v43[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = v47;
    swift_release();
  }
  else
  {
    if (one-time initialization token for screenTime != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v29, (uint64_t)static Log.screenTime);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_1C2F90000, v48, v49, "Not starting screen sharing interaction controller, as the correct feature flags are not set.", v50, 2u);
      MEMORY[0x1C87760E0](v50, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  }
  return v38;
}

uint64_t type metadata accessor for Lock()
{
  return self;
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5()
{
  uint64_t v3 = OUTLINED_FUNCTION_18_12();
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    outlined destroy of TaskPriority?(v1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_22_4();
    uint64_t v4 = OUTLINED_FUNCTION_25_3();
    v5(v4);
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v0;
  return swift_task_create();
}

uint64_t type metadata accessor for ScreenSharingInteractionController()
{
  uint64_t result = type metadata singleton initialization cache for ScreenSharingInteractionController;
  if (!type metadata singleton initialization cache for ScreenSharingInteractionController) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ScreenSharingStateMonitor.addObserver(_:)(void *a1)
{
  swift_unknownObjectWeakInit();
  v3[8] = 0;
  OUTLINED_FUNCTION_6_1();
  specialized Dictionary.subscript.setter((uint64_t)v3, (uint64_t)a1);
  swift_endAccess();
  return ScreenSharingStateMonitor.notifyNewObserverIfScreenSharingIsActive(_:)(a1);
}

uint64_t specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
    specialized __RawDictionaryStorage.find<A>(_:)(a2);
    char v5 = v4;
    if (v4)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v2;
      uint64_t v7 = *v2;
      uint64_t *v2 = 0x8000000000000000;
      Swift::Int v8 = *(void *)(v7 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
      _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v8);
      outlined init with take of ScreenSharingStateMonitor.Observation();
      _NativeDictionary._delete(at:)();
      uint64_t *v2 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = 0;
    }
    BOOL v12 = (v5 & 1) == 0;
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v11, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
  }
  else
  {
    outlined init with take of ScreenSharingStateMonitor.Observation();
    return specialized Dictionary._Variant.setValue(_:forKey:)();
  }
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t EnumTagSinglePayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  char v5 = type metadata accessor for Date();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v5);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    Swift::Int v8 = OUTLINED_FUNCTION_8(v7);
    MEMORY[0x1F4188790](v8);
    uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v10);
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    (*(void (**)(uint64_t))(v11 + 8))(a2);
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    OUTLINED_FUNCTION_63();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v2, a1, v5);
    specialized Dictionary._Variant.setValue(_:forKey:)(v2, a2);
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    return (*(uint64_t (**)(uint64_t))(v14 + 8))(a2);
  }
}

{
  _OWORD v4[2];

  if (*(void *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v4);
    specialized Dictionary._Variant.setValue(_:forKey:)();
    return outlined destroy of AnyHashable(a2);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for Any?);
    specialized Dictionary._Variant.removeValue(forKey:)(a2, v4);
    outlined destroy of AnyHashable(a2);
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Any?);
  }
}

uint64_t outlined init with take of ScreenSharingStateMonitor.Observation()
{
  return swift_unknownObjectWeakTakeInit();
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)()
{
  OUTLINED_FUNCTION_3_63();
  OUTLINED_FUNCTION_1_65();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_2_48(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t vars8;

  OUTLINED_FUNCTION_3_63();
  uint64_t v0 = OUTLINED_FUNCTION_1_65();
  uint64_t v1 = specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0);
  OUTLINED_FUNCTION_2_48(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return swift_bridgeObjectRelease();
}

{
  uint64_t *v0;
  uint64_t v2;
  uint64_t vars8;

  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *v0;
  char *v0 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  char *v0 = v2;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t vars8;

  OUTLINED_FUNCTION_3_63();
  uint64_t v0 = OUTLINED_FUNCTION_1_65();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1);
  OUTLINED_FUNCTION_2_48(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t vars8;

  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v0;
  char *v0 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_2_48(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t vars8;

  OUTLINED_FUNCTION_3_63();
  OUTLINED_FUNCTION_1_65();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_2_48(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t vars8;

  OUTLINED_FUNCTION_3_63();
  OUTLINED_FUNCTION_1_65();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_2_48(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return swift_bridgeObjectRelease();
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = OUTLINED_FUNCTION_13_64(v0, v1);
  specialized __RawDictionaryStorage.find<A>(_:)(v2);
  OUTLINED_FUNCTION_1_126();
  if (v4)
  {
    __break(1u);
LABEL_13:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  char v5 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
  if (OUTLINED_FUNCTION_8_69())
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_12();
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    OUTLINED_FUNCTION_29_29();
    if (!v7) {
      goto LABEL_13;
    }
  }
  if (v5)
  {
    OUTLINED_FUNCTION_15_0();
    outlined assign with take of ScreenSharingStateMonitor.Observation(v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v11, v12, v13, v14);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14();
  char v7 = OUTLINED_FUNCTION_13_64(v5, v6);
  specialized __RawDictionaryStorage.find<A>(_:)(v7);
  OUTLINED_FUNCTION_1_126();
  if (v8)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<MomentsIndicatorType, MomentsIndicatorBubble>);
  if (OUTLINED_FUNCTION_8_69())
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v1);
    OUTLINED_FUNCTION_7_91();
    if (!v10) {
      goto LABEL_12;
    }
    char v3 = v9;
  }
  if (v4)
  {
    unint64_t v11 = *(void *)(*(void *)v2 + 56);

    *(void *)(v11 + 8 * v3) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_64_8();
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13, v14, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  void *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  specialized __RawDictionaryStorage.find<A>(_:)(v1);
  OUTLINED_FUNCTION_1_126();
  if (v9)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v10 = v7;
  unint64_t v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<PlatformAlertActionStyle, ()>);
  if (OUTLINED_FUNCTION_12_57())
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v2);
    OUTLINED_FUNCTION_7_91();
    if (!v13) {
      goto LABEL_12;
    }
    uint64_t v10 = v12;
  }
  if (v11)
  {
    uint64_t v14 = (void *)(*(void *)(*(void *)v0 + 56) + 16 * v10);
    swift_release();
    char *v14 = v6;
    v14[1] = v4;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v15, v16, v17, v18, v19);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14();
  uint64_t v8 = OUTLINED_FUNCTION_13_64(v6, v7);
  specialized __RawDictionaryStorage.find<A>(_:)(v8);
  OUTLINED_FUNCTION_1_126();
  if (v9)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Bool, [NSLayoutConstraint]>);
  if (OUTLINED_FUNCTION_8_69())
  {
    uint64_t v1 = *v3;
    specialized __RawDictionaryStorage.find<A>(_:)(v2 & 1);
    OUTLINED_FUNCTION_7_91();
    if (!v11) {
      goto LABEL_12;
    }
    char v4 = v10;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_79_7();
    *(void *)(v1 + 8 * v4) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13, v14, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_6_98(v4, v5, v6);
  OUTLINED_FUNCTION_1_126();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_281();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, ParticipantContactDetailsCache>);
  if (OUTLINED_FUNCTION_12_57())
  {
    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_18_49();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    uint64_t v10 = *(void *)(*(void *)v1 + 56);
    swift_release();
    *(void *)(v10 + 8 * v2) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    unint64_t v11 = OUTLINED_FUNCTION_26_36();
    specialized _NativeDictionary._insert(at:key:value:)(v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_15_0();
    swift_bridgeObjectRetain();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_6_98(v4, v5, v6);
  OUTLINED_FUNCTION_1_126();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_281();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<String, [TranscriptionViewModel.Caption]>);
  if (OUTLINED_FUNCTION_12_57())
  {
    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_18_49();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    uint64_t v10 = *(void *)(*(void *)v1 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 8 * v2) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    unint64_t v11 = OUTLINED_FUNCTION_26_36();
    specialized _NativeDictionary._insert(at:key:value:)(v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_15_0();
    swift_bridgeObjectRetain();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  long long v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_6_98(v4, v5, v6);
  OUTLINED_FUNCTION_1_126();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_281();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Application>);
  if (OUTLINED_FUNCTION_12_57())
  {
    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_18_49();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    uint64_t v10 = *(void *)(*(void *)v1 + 56) + 40 * v2;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v0;
    *(_OWORD *)(v10 + 16) = v11;
    *(void *)(v10 + 32) = *(void *)(v0 + 32);
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_26_36();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_15_0();
    swift_bridgeObjectRetain();
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_14();
  char v3 = v0;
  char v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = *v0;
  specialized __RawDictionaryStorage.find<A>(_:)(v6 & 1);
  OUTLINED_FUNCTION_1_126();
  if (v9)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharePlayDiscoverabilityType, [Application]>);
  if (OUTLINED_FUNCTION_8_69())
  {
    uint64_t v8 = *v3;
    specialized __RawDictionaryStorage.find<A>(_:)(v7);
    OUTLINED_FUNCTION_7_91();
    if (!v11) {
      goto LABEL_12;
    }
    uint64_t v1 = v10;
  }
  if (v2)
  {
    OUTLINED_FUNCTION_79_7();
    *(void *)(v8 + 8 * v1) = v5;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_64_8();
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13);
  }
}

{
  Swift::Int *v0;
  Swift::Int *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  unint64_t v11 = v10;
  uint64_t v12 = *v0;
  specialized __RawDictionaryStorage.find<A>(_:)(v6, v4);
  OUTLINED_FUNCTION_1_126();
  if (v15)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v16 = v13;
  uint64_t v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, String>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v3 & 1, v12))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v7, v5);
    OUTLINED_FUNCTION_18_49();
    if (!v19) {
      goto LABEL_12;
    }
    uint64_t v16 = v18;
  }
  if (v17)
  {
    uint64_t v20 = (void *)(*(void *)(*v1 + 56) + 16 * v16);
    swift_bridgeObjectRelease();
    *uint64_t v20 = v11;
    v20[1] = v9;
    OUTLINED_FUNCTION_28();
  }
  else
  {
    OUTLINED_FUNCTION_71_7();
    specialized _NativeDictionary._insert(at:key:value:)(v21, v22, v23, v24, v25, v26);
    OUTLINED_FUNCTION_28();
    swift_bridgeObjectRetain();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_14();
  uint64_t v8 = OUTLINED_FUNCTION_13_64(v6, v7);
  specialized __RawDictionaryStorage.find<A>(_:)(v8);
  OUTLINED_FUNCTION_1_126();
  if (v9)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<InCallBannerState, [NSLayoutConstraint]>);
  if (OUTLINED_FUNCTION_8_69())
  {
    uint64_t v1 = *v3;
    specialized __RawDictionaryStorage.find<A>(_:)(v2);
    OUTLINED_FUNCTION_7_91();
    if (!v11) {
      goto LABEL_12;
    }
    char v4 = v10;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_79_7();
    *(void *)(v1 + 8 * v4) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_64_8();
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_6_98(v4, v5, v6);
  OUTLINED_FUNCTION_1_126();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_281();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, UIImage?>);
  if (OUTLINED_FUNCTION_12_57())
  {
    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_18_49();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    uint64_t v10 = *(void *)(*(void *)v1 + 56);

    *(void *)(v10 + 8 * v2) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    unint64_t v11 = OUTLINED_FUNCTION_26_36();
    specialized _NativeDictionary._insert(at:key:value:)(v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_15_0();
    swift_bridgeObjectRetain();
  }
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  void *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14();
  char v3 = OUTLINED_FUNCTION_13_64(v1, v2);
  specialized __RawDictionaryStorage.find<A>(_:)(v3);
  OUTLINED_FUNCTION_1_126();
  if (v4)
  {
    __break(1u);
LABEL_13:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UInt64, ParticipantPresentationContext>);
  if (OUTLINED_FUNCTION_8_69())
  {
    char v5 = OUTLINED_FUNCTION_54_12();
    specialized __RawDictionaryStorage.find<A>(_:)(v5);
    OUTLINED_FUNCTION_7_91();
    if (!v6) {
      goto LABEL_13;
    }
  }
  if (v0)
  {
    OUTLINED_FUNCTION_15_0();
    memcpy(v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v11, v12, v13, v14);
  }
}

{
  Swift::Int *v0;
  Swift::Int *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  char v7 = v6;
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  uint64_t v9 = *v0;
  specialized __RawDictionaryStorage.find<A>(_:)(v5);
  OUTLINED_FUNCTION_1_126();
  if (v12)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = v10;
  uint64_t v14 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ObjectTracker.RuleGroup, ObjectTracker.Objects>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v3 & 1, v9))
  {
    uint64_t v15 = OUTLINED_FUNCTION_54_12();
    uint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v15);
    if ((v14 & 1) == (v17 & 1))
    {
      uint64_t v13 = v16;
      goto LABEL_5;
    }
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
LABEL_5:
  if (v14)
  {
    id v18 = *(void *)(*v1 + 56);
    swift_release();
    *(void *)(v18 + 8 * v13) = v7;
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_69_0();
    outlined init with copy of ObjectTracker.RuleGroup(v19, v20, v21);
    OUTLINED_FUNCTION_39_23();
    specialized _NativeDictionary._insert(at:key:value:)(v22, v23, v24, v25);
  }
  OUTLINED_FUNCTION_28();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14();
  uint64_t v6 = OUTLINED_FUNCTION_13_64(v4, v5);
  specialized __RawDictionaryStorage.find<A>(_:)(v6);
  OUTLINED_FUNCTION_1_126();
  if (v7)
  {
    __break(1u);
LABEL_12:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_40_20();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, [InCallControlsState : CGRect]>);
  if (OUTLINED_FUNCTION_8_69())
  {
    uint64_t v8 = OUTLINED_FUNCTION_54_12();
    specialized __RawDictionaryStorage.find<A>(_:)(v8);
    OUTLINED_FUNCTION_7_91();
    if (!v10) {
      goto LABEL_12;
    }
    uint64_t v2 = v9;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_79_7();
    *(void *)(v1 + 8 * v2) = v0;
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    specialized _NativeDictionary._insert(at:key:value:)(v11, v12, v13, v14);
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_17_36(a1, a2, a3, a4);
  outlined init with take of ScreenSharingStateMonitor.Observation();
  OUTLINED_FUNCTION_16_34();
  if (v6) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v5;
  }
}

{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  void (*v7)(void);
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_5_84(a1, a2, a3, a4);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = OUTLINED_FUNCTION_21_29();
  v6(v5);
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_46();
  v7();
  OUTLINED_FUNCTION_16_34();
  if (v9) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v8;
  }
}

{
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_27_27(a1, a2, a3, a4);
  if (v6) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_38_14(v4, v5);
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_5_84(a1, a2, a3, a4);
  OUTLINED_FUNCTION_0();
  char v7 = OUTLINED_FUNCTION_21_29();
  v8(v7);
  outlined init with take of ParticipantGridView.FrozenFrameOverlayState(v5, *(void *)(v4 + 56) + 80 * v6);
  OUTLINED_FUNCTION_16_34();
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v9;
  }
}

{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  long long v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  char v13;

  uint64_t v5 = OUTLINED_FUNCTION_29_24(a1, a2, a3, a4);
  char v7 = v6 + 40 * v5;
  uint64_t v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)char v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  outlined init with take of Any(v11, (_OWORD *)(*(void *)(v10 + 56) + 32 * v5));
  OUTLINED_FUNCTION_16_34();
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v12;
  }
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  long long *v9;
  uint64_t v10;
  char v11;

  uint64_t v5 = OUTLINED_FUNCTION_29_24(a1, a2, a3, a4);
  *(unsigned char *)(v7 + v5) = v6;
  outlined init with take of Notice(v9, *(void *)(v8 + 56) + 40 * v5);
  OUTLINED_FUNCTION_16_34();
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v10;
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_5_84(a1, a2, a3, a4);
  OUTLINED_FUNCTION_0();
  char v7 = OUTLINED_FUNCTION_21_29();
  v8(v7);
  *(void *)(*(void *)(v4 + 56) + 8 * v6) = v5;
  OUTLINED_FUNCTION_16_34();
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v9;
  }
}

{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  char v9;

  uint64_t v5 = OUTLINED_FUNCTION_17_36(a1, a2, a3, a4);
  memcpy((void *)(v6 + 72 * v5), v7, 0x41uLL);
  OUTLINED_FUNCTION_16_34();
  if (v9) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v8;
  }
}

id OUTLINED_FUNCTION_16_8()
{
  return objc_msgSend(v0, (SEL)(v1 + 2328), 0.0, 0.0, v3, v3);
}

uint64_t OUTLINED_FUNCTION_16_9(uint64_t a1)
{
  return outlined init with take of SystemApertureIconFactory.SystemApertureIconSet?(a1, (uint64_t)&STACK[0x260], v1);
}

id OUTLINED_FUNCTION_16_11(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1069), 0.75);
}

void *OUTLINED_FUNCTION_16_12(void *result)
{
  result[2] = v1;
  result[3] = v2;
  result[4] = *(void *)(v4 - 192);
  result[5] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_13(uint64_t result)
{
  *(void *)(v1 + 400) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_15@<X0>(uint64_t a1@<X8>)
{
  *(double *)(v2 - 104) = *(float *)(v1 + a1);
  return v2 - 104;
}

uint64_t OUTLINED_FUNCTION_16_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41856C0](a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_16_19()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t OUTLINED_FUNCTION_16_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_21()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_16_23(uint64_t result)
{
  v1[8] = result;
  v1[4] = v2;
  v1[5] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_24()
{
  return dispatch thunk of Sequence.makeIterator()();
}

void OUTLINED_FUNCTION_16_25(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_16_26()
{
  return swift_unknownObjectRetain();
}

double OUTLINED_FUNCTION_16_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_16_30(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return type metadata accessor for MainActor();
}

uint64_t OUTLINED_FUNCTION_16_31()
{
  return v0;
}

id OUTLINED_FUNCTION_16_35()
{
  return specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_16_37()
{
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_16_38()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_39()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_198()
{
  return v0;
}

id OUTLINED_FUNCTION_16_41(double a1)
{
  double v6 = v5 + a1;
  return objc_msgSend(v1, (SEL)(v3 + 775), v2, v6);
}

uint64_t OUTLINED_FUNCTION_16_42()
{
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t OUTLINED_FUNCTION_16_47()
{
  return String.localizedCallStatus.getter();
}

uint64_t OUTLINED_FUNCTION_16_48()
{
  return outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v1, v0, v2, v3, v6, v5, v4, 0);
}

uint64_t OUTLINED_FUNCTION_16_49@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for RemoteControlResponse(0);
}

unint64_t OUTLINED_FUNCTION_16_50()
{
  return 0xD00000000000001FLL;
}

uint64_t OUTLINED_FUNCTION_16_51(uint64_t result)
{
  void *v1 = result;
  *(void *)(result + 32) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_53(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_16_56()
{
  *(void *)(v1 + 24) = *v0;
}

uint64_t OUTLINED_FUNCTION_16_57()
{
  return type metadata accessor for TranscriptionViewModel.Caption(0);
}

uint64_t OUTLINED_FUNCTION_16_58(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return swift_bridgeObjectRetain();
}

double OUTLINED_FUNCTION_16_59@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 - 104) = 0u;
  *(_OWORD *)(v1 - 88) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_60()
{
  return 0x454D495445434146;
}

double OUTLINED_FUNCTION_16_61()
{
  return 6.0;
}

uint64_t OUTLINED_FUNCTION_16_62(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)a1 + 32);
}

uint64_t closure #1 in RecentsListViewController.dataSource.getter(void *a1)
{
  uint64_t v25 = type metadata accessor for RecentsCollectionViewDataSource();
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v24 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x360))();
  (*(void (**)(void *__return_ptr))((*v2 & *a1) + 0x1A8))(v27);
  uint64_t v3 = v28;
  uint64_t v4 = v29;
  uint64_t v23 = v29;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v27, v28);
  v26[3] = v3;
  v26[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v3 - 8) + 16);
  v7(boxed_opaque_existential_1, v5, v3);
  id v22 = *(id *)((char *)a1 + OBJC_IVAR___FTRecentsListViewController_conversationManager);
  uint64_t v8 = RecentsListViewController.linkController.getter();
  RecentsListViewController.cellProvider.getter();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  RecentsListViewController.supplementaryViewProvider.getter();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v13);
  id v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7((uint64_t *)v18, boxed_opaque_existential_1, v3);
  uint64_t v19 = specialized RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(v24, (uint64_t)v18, (uint64_t)v22, v8, v10, v12, v14, v16, v25, v3, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v19;
}

uint64_t specialized RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  OUTLINED_FUNCTION_5_3();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_21();
  uint64_t v21 = v20 - v19;
  type metadata accessor for RecentsCollectionViewDataSource();
  uint64_t v22 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, a2, a10);
  uint64_t v23 = specialized RecentsCollectionViewDataSource.init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(a1, v21, a3, a4, a5, a6, a7, a8, v22, a10, a11);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, a10);
  return v23;
}

uint64_t type metadata accessor for RecentsCollectionViewDataSource()
{
  return self;
}

uint64_t specialized RecentsCollectionViewDataSource.init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a9 + 48) = a10;
  *(void *)(a9 + 56) = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a9 + 24));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1, a2, a10);
  *(_OWORD *)(a9 + 80) = xmmword_1C376E330;
  *(void *)(a9 + 120) = a8;
  *(void *)(a9 + 128) = 0;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 64) = a3;
  *(void *)(a9 + 72) = a4;
  *(void *)(a9 + 96) = a5;
  *(void *)(a9 + 104) = a6;
  *(void *)(a9 + 112) = a7;
  return a9;
}

void RecentsListViewController.cellProvider.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___cellProvider);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___cellProvider);
  if (!v2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    uint64_t v4 = *v1;
    uint64_t *v1 = (uint64_t)partial apply for closure #1 in RecentsListViewController.cellProvider.getter;
    v1[1] = v3;
    swift_retain();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_15_0();
}

uint64_t RecentsListViewController.linkController.getter()
{
  uint64_t v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___linkController;
  if (*(void *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___linkController))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___linkController);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR___FTRecentsListViewController_conversationManager);
    type metadata accessor for RecentsLinkController();
    OUTLINED_FUNCTION_25_15();
    uint64_t v2 = RecentsLinkController.init(conversationManager:)((uint64_t)v4);
    *(void *)(v3 + v1) = v2;
    id v5 = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t type metadata accessor for RecentsLinkController()
{
  return self;
}

void RecentsListViewController.supplementaryViewProvider.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___supplementaryViewProvider);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___supplementaryViewProvider);
  if (!v2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_20();
    swift_unknownObjectUnownedInit();
    uint64_t v4 = *v1;
    uint64_t *v1 = (uint64_t)partial apply for closure #1 in closure #1 in RecentsListViewController.supplementaryViewProvider.getter;
    v1[1] = v3;
    swift_retain();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_15_0();
}

uint64_t RecentsLinkController.init(conversationManager:)(uint64_t a1)
{
  *(void *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 16) = a1;
  *(_DWORD *)(v1 + 40) = 0;
  *(unsigned char *)(v1 + 44) = 1;
  return v1;
}

id one-time initialization function for sharedMonitor()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ScreenSharingStateMonitor()), sel_init);
  static ScreenSharingStateMonitor.sharedMonitor = result;
  return result;
}

uint64_t ScreenSharingStateMonitor.init()()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(ObjectType + 336))(0, 0, 0);
  swift_deallocPartialClassInstance();
  return v1;
}

id ScreenSharingStateMonitor.__allocating_init(activeCall:conversationControllerProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return ScreenSharingStateMonitor.init(activeCall:conversationControllerProvider:)(a1, a2, a3);
}

uint64_t RecentsListViewController.presentScreenTimeShield.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___FTRecentsListViewController_presentScreenTimeShield);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  v3[1] = v0;
  OUTLINED_FUNCTION_174();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  RecentsListViewController.presentScreenTimeShield.didset();
  uint64_t v5 = OUTLINED_FUNCTION_30_15();
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
}

uint64_t OUTLINED_FUNCTION_278()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(void *)(v1 - 152));
  return specialized >> prefix<A>(_:)();
}

id ScreenSharingStateMonitor.init(activeCall:conversationControllerProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = &v3[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_observations;
  uint64_t v9 = v3;
  *(void *)&v3[v8] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v10 = (uint64_t *)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationControllerProvider];
  *uint64_t v10 = 0;
  v10[1] = 0;
  v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_isBroadcastingScreenSharing] = 0;
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_screenSharingRemoteControllerObservation] = 0;
  uint64_t v11 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_13_18(v11);
  uint64_t v12 = (void **)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call];
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call] = 0;
  OUTLINED_FUNCTION_11_0();
  uint64_t v13 = *v12;
  void *v12 = a1;
  id v14 = a1;

  uint64_t v15 = *v10;
  *uint64_t v10 = a2;
  v10[1] = a3;
  uint64_t v16 = OUTLINED_FUNCTION_30_15();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v16);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v15);

  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for ScreenSharingStateMonitor();
  id v17 = objc_msgSendSuper2(&v20, sel_init);
  ScreenSharingStateMonitor.updateConversationController(using:)(a1);
  uint64_t v18 = OUTLINED_FUNCTION_30_15();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v18);

  return v17;
}

uint64_t outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for Participant(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant);
}

uint64_t type metadata accessor for ScreenSharingStateMonitor()
{
  uint64_t result = type metadata singleton initialization cache for ScreenSharingStateMonitor;
  if (!type metadata singleton initialization cache for ScreenSharingStateMonitor) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Participant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C349F2AC);
}

void ScreenSharingStateMonitor.updateConversationController(using:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  uint64_t v8 = v7 - v6;
  if (a1)
  {
    uint64_t v9 = *(uint64_t (**)(id))(v2
                                      + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationControllerProvider);
    if (v9)
    {
      id v10 = a1;
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v9);
      uint64_t v11 = (void *)v9(v10);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v9);
    }
    else
    {
      uint64_t v45 = 0;
      long long v43 = 0u;
      long long v44 = 0u;
      id v14 = self;
      id v15 = a1;
      id v16 = objc_msgSend(v14, sel_sharedInstance);
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      id v17 = (void *)static PlaceholderCallCenter.shared;
      id v18 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
      uint64_t v19 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v16, v17, 0, 0);
      uint64_t v20 = swift_unknownObjectWeakInit();
      outlined init with take of DefaultParticipantMediaProviderCreator(v20, (uint64_t)v41);
      v40[1] = 0;
      uint64_t v21 = swift_unknownObjectWeakInit();
      outlined init with take of DefaultParticipantCaptionsProviderCreator(v21, (uint64_t)v42);
      id v22 = objc_msgSend(self, sel_sharedManager);
      type metadata accessor for IDSCapabilitiesChecker();
      uint64_t v23 = (void *)swift_allocObject();
      v40[3] = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
      v40[4] = &protocol witness table for TUIDSLookupManager;
      v40[0] = v22;
      type metadata accessor for UUID();
      lazy protocol witness table accessor for type UUID and conformance UUID();
      uint64_t v24 = MEMORY[0x1E4FBC860];
      void v23[2] = Dictionary.init(dictionaryLiteral:)();
      v23[3] = Dictionary.init(dictionaryLiteral:)();
      v23[5] = 0;
      swift_unknownObjectWeakInit();
      v23[6] = v24;
      outlined init with copy of IDSLookupManager((uint64_t)v40, (uint64_t)(v23 + 7));
      id v25 = objc_msgSend(self, sel_defaultCenter);
      objc_msgSend(v25, sel_addObserver_selector_name_object_, v23, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v40[0]);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v26 = static Defaults.shared;
      outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v41, (uint64_t)v39);
      outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v42, (uint64_t)v40);
      swift_retain();
      Class v27 = v19;
      uint64_t v11 = (void *)specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)((uint64_t)v15, (uint64_t)v27, (uint64_t)v39, (uint64_t)v40, 0, (uint64_t)&v43, 2, (uint64_t)v23, v26);
      outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v42);
      outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v41);
    }
    *((void *)&v44 + 1) = type metadata accessor for ConversationController(0);
    uint64_t v45 = &protocol witness table for ConversationController;
    *(void *)&long long v43 = v11;
    uint64_t v28 = v2 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController;
    OUTLINED_FUNCTION_6_1();
    uint64_t v29 = v11;
    outlined assign with take of ScreenSharingStateMonitorConversationProviderProtocol?((uint64_t)&v43, v28);
    swift_endAccess();

    OUTLINED_FUNCTION_7_52();
    OUTLINED_FUNCTION_14_28();
    uint64_t v30 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
    OUTLINED_FUNCTION_11_0();
    uint64_t v31 = *v30;
    *uint64_t v30 = (uint64_t)partial apply for closure #1 in ScreenSharingStateMonitor.updateConversationController(using:);
    v30[1] = v28;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v31);
    OUTLINED_FUNCTION_7_52();
    OUTLINED_FUNCTION_14_28();
    uint64_t v32 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
    OUTLINED_FUNCTION_11_0();
    uint64_t v33 = *v32;
    *uint64_t v32 = (uint64_t)partial apply for closure #2 in ScreenSharingStateMonitor.updateConversationController(using:);
    v32[1] = v28;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v33);
    OUTLINED_FUNCTION_7_52();
    OUTLINED_FUNCTION_14_28();
    uint64_t v34 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
    OUTLINED_FUNCTION_11_0();
    uint64_t v35 = *v34;
    *uint64_t v34 = (uint64_t)partial apply for closure #3 in ScreenSharingStateMonitor.updateConversationController(using:);
    v34[1] = v28;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v35);
    uint64_t v36 = OUTLINED_FUNCTION_7_52();
    swift_unknownObjectWeakInit();
    uint64_t v37 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
    OUTLINED_FUNCTION_11_0();
    uint64_t v38 = *v37;
    uint64_t *v37 = (uint64_t)partial apply for closure #4 in ScreenSharingStateMonitor.updateConversationController(using:);
    v37[1] = v36;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v38);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Participant(0);
    OUTLINED_FUNCTION_13_18(v12);
    ScreenSharingStateMonitor.currentlySharingParticipant.setter(v8);
    uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
    uint64_t v13 = v2 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController;
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of ScreenSharingStateMonitorConversationProviderProtocol?((uint64_t)&v43, v13);
    swift_endAccess();
    ScreenSharingStateMonitor.didChangeScreenSharingState(_:)(0);
    ScreenSharingStateMonitor.didChangeScreenSharingBroadcastingState(_:)(0);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

uint64_t ScreenSharingStateMonitor.didChangeScreenSharingState(_:)(char a1)
{
  uint64_t v4 = ScreenSharingStateMonitor.currentObservers()();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v5 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v5 + 16) = xmmword_1C37696D0;
  String.init<A>(reflecting:)();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_16_23(v9);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 16);
  }
  uint64_t v18 = v11;
  uint64_t v12 = String.init<A>(reflecting:)();
  *(void *)(v5 + 96) = v8;
  *(void *)(v5 + 104) = v2;
  *(void *)(v5 + 72) = v12;
  *(void *)(v5 + 80) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v15 >= 1)
  {
    for (uint64_t i = 0; i != v15; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v17 = (void *)MEMORY[0x1C87744F0](i, v4);
      }
      else
      {
        id v17 = *(void **)(v4 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if (objc_msgSend(v17, sel_respondsToSelector_, sel_screenSharingStateMonitor_didUpdateScreenSharingState_, v18))objc_msgSend(v17, sel_screenSharingStateMonitor_didUpdateScreenSharingState_, v1, a1 & 1); {
      swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t ScreenSharingStateMonitor.currentObservers()()
{
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_observations);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  uint64_t v31 = *v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*v1 + 64);
  int64_t v34 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v30 = v2 + 104;
  uint64_t v33 = v1;
  uint64_t v32 = v2;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_6;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v10 >= v34)
    {
      int64_t v12 = v7;
    }
    else
    {
      unint64_t v11 = *(void *)(v31 + 8 * v10);
      if (v11) {
        goto LABEL_10;
      }
      int64_t v12 = v7 + 1;
      if (v7 + 2 < v34)
      {
        unint64_t v11 = *(void *)(v31 + 8 * (v7 + 2));
        if (v11)
        {
          int64_t v10 = v7 + 2;
          goto LABEL_10;
        }
        int64_t v12 = v7 + 2;
        if (v7 + 3 < v34)
        {
          unint64_t v11 = *(void *)(v31 + 8 * (v7 + 3));
          if (v11)
          {
            int64_t v10 = v7 + 3;
LABEL_10:
            unint64_t v5 = (v11 - 1) & v11;
            unint64_t v9 = __clz(__rbit64(v11)) + (v10 << 6);
            int64_t v7 = v10;
LABEL_6:
            uint64_t v36 = *(void *)(*(void *)(v2 + 48) + 8 * v9);
            outlined init with copy of ScreenSharingStateMonitor.Observation();
            goto LABEL_13;
          }
          int64_t v10 = v7 + 4;
          int64_t v12 = v7 + 3;
          if (v7 + 4 < v34)
          {
            unint64_t v11 = *(void *)(v31 + 8 * v10);
            if (v11) {
              goto LABEL_10;
            }
            while (v7 + 5 < v34)
            {
              unint64_t v11 = *(void *)(v30 + 8 * v7++);
              if (v11)
              {
                int64_t v10 = v7 + 4;
                goto LABEL_10;
              }
            }
            int64_t v12 = v34 - 1;
          }
        }
      }
    }
    unint64_t v5 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    int64_t v7 = v12;
LABEL_13:
    outlined init with take of (key: ObjectIdentifier, value: ScreenSharingStateMonitor.Observation)?((uint64_t)&v36, (uint64_t)&v41);
    uint64_t v13 = v41;
    if (!v41)
    {
      swift_release();
      return v42;
    }
    outlined init with take of ScreenSharingStateMonitor.Observation();
    if (MEMORY[0x1C8776240](v40))
    {
      uint64_t v14 = swift_unknownObjectRetain();
      MEMORY[0x1C87733A0](v14);
      if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_unknownObjectRelease();
      uint64_t result = outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)v40);
    }
    else
    {
      OUTLINED_FUNCTION_6_1();
      specialized __RawDictionaryStorage.find<A>(_:)(v13);
      char v16 = v15;
      if (v15)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v35 = *v1;
        uint64_t v18 = v35;
        uint64_t *v1 = 0x8000000000000000;
        Swift::Int v19 = *(void *)(v18 + 24);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v19);
        uint64_t v20 = v35;
        outlined init with take of ScreenSharingStateMonitor.Observation();
        _NativeDictionary._delete(at:)();
        uint64_t *v1 = v20;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v38 = 0;
      }
      BOOL v39 = (v16 & 1) == 0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v38, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
      swift_endAccess();
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.debug.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v21 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v21 + 16) = xmmword_1C37696D0;
      outlined init with copy of ScreenSharingStateMonitor.Observation();
      LOBYTE(v37) = 0;
      outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)&v36, (uint64_t)&v38, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
      if (v39)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v38, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
        unint64_t v22 = 0xE300000000000000;
        uint64_t v23 = 7104878;
      }
      else
      {
        outlined init with take of ScreenSharingStateMonitor.Observation();
        outlined init with copy of ScreenSharingStateMonitor.Observation();
        uint64_t v23 = String.init<A>(reflecting:)();
        unint64_t v22 = v24;
        outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)&v35);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v36, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
      uint64_t v25 = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v26 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v21 + 64) = v26;
      *(void *)(v21 + 32) = v23;
      *(void *)(v21 + 40) = v22;
      uint64_t v36 = ObjectIdentifier.debugDescription.getter();
      uint64_t v37 = v27;
      uint64_t v28 = String.init<A>(reflecting:)();
      *(void *)(v21 + 96) = v25;
      *(void *)(v21 + 104) = v26;
      *(void *)(v21 + 72) = v28;
      *(void *)(v21 + 80) = v29;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t result = outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)v40);
      uint64_t v1 = v33;
      uint64_t v2 = v32;
    }
  }
  __break(1u);
  return result;
}

uint64_t outlined init with take of (key: ObjectIdentifier, value: ScreenSharingStateMonitor.Observation)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: ObjectIdentifier, value: ScreenSharingStateMonitor.Observation)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ScreenSharingStateMonitor.didChangeScreenSharingBroadcastingState(_:)(char a1)
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xD8))();
  uint64_t v4 = ScreenSharingStateMonitor.currentObservers()();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v5 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v5 + 16) = xmmword_1C37696D0;
  String.init<A>(reflecting:)();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_16_23(v9);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 16);
  }
  uint64_t v18 = v11;
  uint64_t v12 = String.init<A>(reflecting:)();
  *(void *)(v5 + 96) = v8;
  *(void *)(v5 + 104) = v2;
  *(void *)(v5 + 72) = v12;
  *(void *)(v5 + 80) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v15 >= 1)
  {
    for (uint64_t i = 0; i != v15; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v17 = (void *)MEMORY[0x1C87744F0](i, v4);
      }
      else
      {
        id v17 = *(void **)(v4 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if (objc_msgSend(v17, sel_respondsToSelector_, sel_screenSharingStateMonitor_didUpdateScreenSharingBroadcastingState_, v18))objc_msgSend(v17, sel_screenSharingStateMonitor_didUpdateScreenSharingBroadcastingState_, v1, a1 & 1); {
      swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t ScreenSharingStateMonitor.currentlySharingParticipant.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_currentlySharingParticipant;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Environment<DynamicTypeSize>.Content(v8, v7, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_6_1();
  outlined assign with copy of Participant?(a1, v8);
  swift_endAccess();
  ScreenSharingStateMonitor.currentlySharingParticipant.didset(v7);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for Participant?);
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, &demangling cache variable for type metadata for Participant?);
}

uint64_t ScreenSharingStateMonitor.currentlySharingParticipant.didset(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Participant(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v51 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v53 = (uint64_t)&v51 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v52 = (uint64_t)&v51 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v51 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = (uint64_t)&v51 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  Swift::Int v19 = (char *)&v51 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  uint64_t v23 = v22 - 8;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v1;
  uint64_t v26 = v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_currentlySharingParticipant;
  swift_beginAccess();
  uint64_t v27 = (uint64_t)&v25[*(int *)(v23 + 56)];
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)v25, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of Environment<DynamicTypeSize>.Content(v26, v27, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v3) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v27, 1, v3) == 1) {
      return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for Participant?);
    }
  }
  else
  {
    outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v25, (uint64_t)v21, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v27, 1, v3) != 1)
    {
      uint64_t v29 = v54;
      outlined init with take of Participant(v27, v54);
      static Participant.== infix(_:_:)();
      char v31 = v30;
      outlined destroy of Participant(v29);
      outlined destroy of Participant((uint64_t)v21);
      uint64_t result = outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for Participant?);
      if (v31) {
        return result;
      }
      goto LABEL_8;
    }
    outlined destroy of Participant((uint64_t)v21);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for (Participant?, Participant?));
LABEL_8:
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)v19, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
    char v32 = 0;
  }
  else
  {
    char v33 = Participant.screenState.getter();
    outlined init with copy of Participant((uint64_t)v19, (uint64_t)v12);
    if (v33 == 2) {
      char v32 = 0;
    }
    else {
      char v32 = Participant.isReceivingScreenFrames.getter();
    }
    outlined destroy of Participant((uint64_t)v12);
    outlined destroy of Participant((uint64_t)v19);
  }
  if (__swift_getEnumTagSinglePayload(v26, 1, v3))
  {
    char v34 = 0;
  }
  else
  {
    uint64_t v35 = v52;
    outlined init with copy of Participant(v26, v52);
    char v36 = Participant.screenState.getter();
    uint64_t v37 = v35;
    uint64_t v38 = v53;
    outlined init with copy of Participant(v37, v53);
    if (v36 == 2)
    {
      char v34 = 0;
    }
    else
    {
      char v39 = Participant.isReceivingScreenFrames.getter();
      uint64_t v38 = v53;
      char v34 = v39;
    }
    outlined destroy of Participant(v38);
    outlined destroy of Participant(v52);
  }
  if (__swift_getEnumTagSinglePayload(v26, 1, v3))
  {
    char v40 = (v32 ^ 1) & v34;
  }
  else
  {
    uint64_t v41 = v54;
    outlined init with copy of Participant(v26, v54);
    BOOL v42 = Participant.screenState.getter() != 2;
    outlined destroy of Participant(v41);
    if (v32) {
      char v40 = v42;
    }
    else {
      char v40 = v34;
    }
  }
  if ((v32 & 1) != (v40 & 1))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1C3769620;
    char v44 = v40 & 1;
    char v57 = v40 & 1;
    uint64_t v45 = String.init<A>(reflecting:)();
    uint64_t v47 = v46;
    *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v43 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v47;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ScreenSharingStateMonitor.didChangeScreenSharingState(_:)(v44);
  }
  uint64_t v48 = v55;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v26, v55, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v48, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v48, &demangling cache variable for type metadata for Participant?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
  else
  {
    uint64_t v49 = v48;
    uint64_t v50 = v51;
    outlined init with take of Participant(v49, v51);
    ScreenSharingStateMonitor.didUpdateScreenInfoForParticipant(_:)(v50);
    return outlined destroy of Participant(v50);
  }
}

uint64_t getEnumTagSinglePayload for Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C349F1F0);
}

uint64_t ScreenSharingStateMonitor.notifyNewObserverIfScreenSharingIsActive(_:)(void *a1)
{
  void (*v16)(void *__return_ptr);
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  char v22;
  id v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t *v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void v39[2];
  uint64_t v40;
  void v41[3];
  uint64_t v42;

  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v39 - v9;
  uint64_t v11 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_21();
  char v40 = v14 - v13;
  OUTLINED_FUNCTION_0_3();
  uint64_t v16 = *(void (**)(void *__return_ptr))(v15 + 400);
  v16(v41);
  if (v42)
  {
    __swift_project_boxed_opaque_existential_1(v41, v42);
    uint64_t v17 = OUTLINED_FUNCTION_18_3();
    v18(v17);
    uint64_t v20 = v19;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 328))(ObjectType, v20);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
    uint64_t v22 = 0;
  }
  uint64_t v23 = objc_msgSend(a1, sel_respondsToSelector_, sel_screenSharingStateMonitor_didUpdateScreenSharingBroadcastingState_);
  if (v23) {
    uint64_t v23 = objc_msgSend(a1, sel_screenSharingStateMonitor_didUpdateScreenSharingBroadcastingState_, v2, v22 & 1);
  }
  ((void (*)(void *__return_ptr, id))v16)(v41, v23);
  if (!v42)
  {
    uint64_t v26 = (uint64_t *)&demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?;
    uint64_t v27 = v41;
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(v41, v42);
  uint64_t v24 = OUTLINED_FUNCTION_18_3();
  v25(v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  Array<A>.screenSharingParticipant.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    uint64_t v26 = &demangling cache variable for type metadata for Participant?;
    uint64_t v27 = v10;
LABEL_10:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, v26);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
  uint64_t v29 = v40;
  outlined init with take of Participant((uint64_t)v10, v40);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  v39[1] = static OS_os_log.conversationKit;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  char v30 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v30 + 16) = xmmword_1C37696D0;
  v41[0] = a1;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKScreenSharingStateObserving);
  char v31 = String.init<A>(reflecting:)();
  char v33 = v32;
  char v34 = MEMORY[0x1E4FBB1A0];
  *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
  uint64_t v35 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v30 + 64) = v35;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  outlined init with copy of Participant(v29, (uint64_t)v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
  char v36 = specialized >> prefix<A>(_:)();
  uint64_t v38 = v37;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  *(void *)(v30 + 96) = v34;
  *(void *)(v30 + 104) = v35;
  *(void *)(v30 + 72) = v36;
  *(void *)(v30 + 80) = v38;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  outlined init with copy of Participant(v29, (uint64_t)v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
  ScreenSharingStateMonitor.currentlySharingParticipant.setter((uint64_t)v8);
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_screenSharingStateMonitor_didUpdateScreenSharingState_))objc_msgSend(a1, sel_screenSharingStateMonitor_didUpdateScreenSharingState_, v2, 1); {
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_screenSharingStateMonitorDidUpdateScreenInfoForParticipant_))objc_msgSend(a1, sel_screenSharingStateMonitorDidUpdateScreenInfoForParticipant_, v2);
  }
  return outlined destroy of Participant(v29);
}

uint64_t ScreenSharingStateMonitor.activeConversationController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v3, a1, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
}

uint64_t ScreenSharingInteractionController.screenSharingStateMonitor(_:didUpdateScreenSharingBroadcastingState:)(uint64_t a1, char a2)
{
  return ScreenSharingInteractionController.isBroadcastingScreenSharing.setter(a2);
}

uint64_t ScreenSharingInteractionController.isBroadcastingScreenSharing.setter(char a1)
{
  return ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(a1, &OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_isBroadcastingScreenSharing, "Setting isBroadcastingScreenSharing=%{BOOL}d");
}

uint64_t ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(char a1, void *a2, const char *a3)
{
  uint64_t v7 = (char *)(v3 + *a2);
  swift_beginAccess();
  char v8 = *v7;
  *uint64_t v7 = a1;
  return ScreenSharingInteractionController.hasJoinedOneToOneConversation.didset(v8, a2, a3);
}

uint64_t ScreenSharingInteractionController.hasJoinedOneToOneConversation.didset(char a1, void *a2, const char *a3)
{
  int v5 = a1 & 1;
  uint64_t v6 = &v3[*a2];
  uint64_t result = OUTLINED_FUNCTION_2();
  if (*v6 != v5)
  {
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    os_log_type_t v9 = __swift_project_value_buffer(v8, (uint64_t)static Log.screenSharing);
    uint64_t v10 = v3;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_107(v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1C2F90000, v11, v9, a3, v13, 8u);
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    return ScreenSharingInteractionController.updateInteractionSession()();
  }
  return result;
}

uint64_t ScreenSharingStateMonitor.isBroadcastingScreenSharing.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_isBroadcastingScreenSharing);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return result;
}

uint64_t RecentsListViewController.presentScreenTimeShield.didset()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
  uint64_t v4 = (void *)((char *)v1 + OBJC_IVAR___FTRecentsListViewController_presentScreenTimeShield);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)v3 + 104);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v4);
  v7(v5, v6);
  swift_release();
  uint64_t v9 = *v4;
  uint64_t v8 = v4[1];
  uint64_t v10 = *(uint64_t (**)(unsigned char *))((*v2 & *v1) + 0x1B8);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v9);
  uint64_t v11 = (uint64_t (*)(unsigned char *, void))v10(v16);
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t v14 = *(void *)(v12 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 40))(v9, v8, v13, v14);
  return v11(v16, 0);
}

uint64_t _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t (*RecentsListViewController.recentCallProvider.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t RecentsListViewController.callCreator.getter()
{
  uint64_t v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator;
  if (*(void *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator);
  }
  else
  {
    type metadata accessor for PeoplePickerCallCreator();
    uint64_t v2 = PeoplePickerCallCreator.__allocating_init()();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t type metadata accessor for PeoplePickerCallCreator()
{
  return self;
}

uint64_t PeoplePickerCallCreator.__allocating_init()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)static PlaceholderCallCenter.shared;
  uint64_t v4 = (objc_class *)type metadata accessor for CallCenter();
  objc_allocWithZone(v4);
  v6[3] = v4;
  v6[4] = &protocol witness table for CallCenter;
  v6[0] = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v2, v3, 0, 0);
  return (*(uint64_t (**)(void *))(v1 + 120))(v6);
}

uint64_t PeoplePickerCallCreator.presentScreenTimeShield.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
}

uint64_t PeoplePickerCallCreator.__allocating_init(callCenter:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  outlined init with take of Notice(a1, v2 + 32);
  return v2;
}

uint64_t outlined assign with copy of Participant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CallCenter()
{
  return self;
}

char *CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(void *a1, void *a2, char a3, char a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter] = a1;
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit10CallCenter_placeholderCallCenter] = a2;
  v27.receiver = v4;
  v27.super_class = ObjectType;
  id v10 = a1;
  id v11 = a2;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v27, sel_init);
  uint64_t v13 = OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter];
  uint64_t v15 = v12;
  id v16 = objc_msgSend(v14, sel_conversationManager, v27.receiver, v27.super_class);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v17 = v15;
  uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  objc_msgSend(v16, sel_addDelegate_queue_, v17, v18);

  if (a3)
  {
    id v19 = objc_msgSend(*(id *)&v12[v13], sel_conversationManager);
    id v20 = objc_msgSend(v19, sel_mediaController);

    objc_msgSend(v20, sel_addDelegate_, v17);
  }
  if (a4)
  {
    id v21 = objc_msgSend(*(id *)&v12[v13], sel_conversationManager);
    id v22 = objc_msgSend(v21, sel_reactionsController);

    objc_msgSend(v22, sel_addDelegate_, v17);
  }
  id v23 = objc_msgSend(*(id *)&v12[v13], sel_routeController);
  objc_msgSend(v23, sel_addDelegate_, v17);

  id v24 = objc_msgSend(*(id *)&v12[v13], sel_audioDeviceController);
  uint64_t v25 = v17;
  objc_msgSend(v24, sel_addDelegate_, v25);

  return v25;
}

uint64_t outlined assign with take of ScreenSharingStateMonitorConversationProviderProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity()
{
  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity);
  }
  return result;
}

void partial apply for closure #2 in RecentsCollectionViewCollator.doReloadData(completion:)()
{
  closure #2 in RecentsCollectionViewCollator.doReloadData(completion:)(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unint64_t lazy protocol witness table accessor for type RecentsCallHandle and conformance RecentsCallHandle()
{
  unint64_t result = lazy protocol witness table cache variable for type RecentsCallHandle and conformance RecentsCallHandle;
  if (!lazy protocol witness table cache variable for type RecentsCallHandle and conformance RecentsCallHandle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallHandle and conformance RecentsCallHandle);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RecentsCallHandle and conformance RecentsCallHandle;
  if (!lazy protocol witness table cache variable for type RecentsCallHandle and conformance RecentsCallHandle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallHandle and conformance RecentsCallHandle);
  }
  return result;
}

void type metadata completion function for RecentsCallItem()
{
  type metadata accessor for RecentsCallItemType(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, MEMORY[0x1F418B9D8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata completion function for RecentCallRecentItemMetadata()
{
  type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, MEMORY[0x1F418B9D8]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for UUID?, MEMORY[0x1F418BBC0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for Date?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void _s10Foundation4DateVSgMaTm_0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t one-time initialization function for screenSharing()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.screenSharing);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_6_97();
  return Logger.init(subsystem:category:)();
}

uint64_t one-time initialization function for default()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.default);
  OUTLINED_FUNCTION_1_123();
  OUTLINED_FUNCTION_0_95();
  return Logger.init(subsystem:category:)();
}

{
  uint64_t result;
  uint64_t vars8;

  if (one-time initialization token for uniqueGradients != -1) {
    unint64_t result = swift_once();
  }
  if (*((void *)static Colors.ParticipantGradients.uniqueGradients + 2))
  {
    static Colors.ParticipantGradients.default = *((void *)static Colors.ParticipantGradients.uniqueGradients + 4);
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  if (one-time initialization token for waitingForTranscriptionText != -1) {
    swift_once();
  }
  swift_beginAccess();
  static TranscriptionViewModel.Configuration.default = static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText;
  return swift_bridgeObjectRetain();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v1 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_2()
{
  uint64_t v1 = type metadata accessor for RemoteControlOnboardingView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      (*(void (**)(unint64_t))(v4 + 8))(v0 + v2);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v16();
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v18 = v3 + *(int *)(v17 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v18 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v18 + 96);
      }
      if (*(void *)(v18 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v3 + *(int *)(v17 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  uint64_t v5 = (int *)type metadata accessor for Participant(0);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v6();
  uint64_t v7 = (id *)(v3 + v5[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v8 = v3 + v5[14];
  uint64_t v9 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v8 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v10, v9);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DismissAction();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v11();
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
    {
      OUTLINED_FUNCTION_26_2();
      v14();
    }
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t PlaceholderCallCenter.__allocating_init(callCenter:)(void *a1)
{
  uint64_t v3 = (*(uint64_t (**)(id, id))(v1 + 112))(objc_msgSend(a1, sel_conversationManager), objc_msgSend(a1, sel_queue));

  return v3;
}

id PlaceholderCallCenter.__allocating_init(conversationManager:queue:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return PlaceholderCallCenter.init(conversationManager:queue:)(a1, a2);
}

id PlaceholderCallCenter.init(conversationManager:queue:)(void *a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls;
  uint64_t v6 = self;
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_strongToWeakObjectsMapTable);
  *(void *)&v7[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_expectedAVLessConversationUUIDs] = MEMORY[0x1E4FBC870];
  *(void *)&v7[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue] = a2;
  id v8 = a1;
  id v9 = a2;

  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for PlaceholderCallCenter();
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(v8, sel_addDelegate_queue_, v10, v9);

  return v10;
}

uint64_t type metadata accessor for PlaceholderCallCenter()
{
  return self;
}

id RecentsListViewController.init(recentCallProvider:detailControllerFactory:contactStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = v4;
  OUTLINED_FUNCTION_143_0();
  *(void *)&v4[OBJC_IVAR___FTRecentsListViewController_macCatalystDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = (uint64_t)&v4[OBJC_IVAR___FTRecentsListViewController_indexPathForMenu];
  uint64_t v9 = type metadata accessor for IndexPath();
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(void *)&v6[OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator] = 0;
  *(void *)&v6[OBJC_IVAR___FTRecentsListViewController_callItemBlockContactsDelegate] = 0;
  *(void *)&v6[OBJC_IVAR___FTRecentsListViewController_videoMessagesSink] = 0;
  *(void *)&v6[OBJC_IVAR___FTRecentsListViewController_linkCoordinator] = 0;
  uint64_t v10 = OBJC_IVAR___FTRecentsListViewController_faceTimeReportSpamManager;
  type metadata accessor for ReportSpamManager();
  LOBYTE(v35[0]) = 1;
  id v11 = v6;
  *(void *)&v6[v10] = ReportSpamManager.__allocating_init(idsServiceType:)(v35);
  uint64_t v12 = OBJC_IVAR___FTRecentsListViewController_spamAlertBuilder;
  type metadata accessor for SpamAlertBuilder();
  *(void *)&v11[v12] = swift_allocObject();
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___videoMessagingReportSpamManager] = 0;
  OUTLINED_FUNCTION_141(OBJC_IVAR___FTRecentsListViewController_presentScreenTimeShield);
  uint64_t v13 = &v11[OBJC_IVAR___FTRecentsListViewController_setPreventsApplicationTerminationWhenModal];
  *(void *)uint64_t v13 = TPNumberPadCharacter.rawValue.getter;
  *((void *)v13 + 1) = 0;
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController_headerView] = 0;
  v11[OBJC_IVAR___FTRecentsListViewController_headerViewIsPresented] = 0;
  uint64_t v14 = OBJC_IVAR___FTRecentsListViewController_featureFlags;
  *(void *)&v11[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___linkController] = 0;
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___dataSource] = 0;
  OUTLINED_FUNCTION_141(OBJC_IVAR___FTRecentsListViewController____lazy_storage___supplementaryViewProvider);
  OUTLINED_FUNCTION_141(OBJC_IVAR___FTRecentsListViewController____lazy_storage___cellProvider);
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___collectionView] = 0;
  uint64_t v15 = type metadata accessor for UIBackgroundConfiguration();
  OUTLINED_FUNCTION_13_18(v15);
  uint64_t v16 = (uint64_t)&v11[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemCalls];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>);
  __swift_storeEnumTagSinglePayload(v16, 1, 1, v17);
  OUTLINED_FUNCTION_54_3(OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsSensitveCallItemCalls);
  OUTLINED_FUNCTION_54_3(OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemOngoingCalls);
  OUTLINED_FUNCTION_54_3(OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemLinks);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>);
  OUTLINED_FUNCTION_13_18(v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>);
  OUTLINED_FUNCTION_13_18(v19);
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___deleteButtonItem] = 0;
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___flexibleSpaceButtonItem] = 0;
  uint64_t v20 = type metadata accessor for UICollectionLayoutListConfiguration();
  OUTLINED_FUNCTION_13_18(v20);
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___editMenu] = 0;
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate] = 0;
  OUTLINED_FUNCTION_141(OBJC_IVAR___FTRecentsListViewController_pseudonymForDeferredLinkDetailPresentation);
  uint64_t v21 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_13_18(v21);
  uint64_t v22 = OBJC_IVAR___FTRecentsListViewController_onboardingController;
  *(void *)&v11[v22] = objc_msgSend(objc_allocWithZone((Class)CNKCNSharedProfileOnboardingController), sel_init);
  __swift_storeEnumTagSinglePayload((uint64_t)&v11[OBJC_IVAR___FTRecentsListViewController_joinCallThrottlingIndexPath], 1, 1, v9);
  outlined init with copy of RecentCallProviding & RecentsControllable(v3, (uint64_t)&v11[OBJC_IVAR___FTRecentsListViewController_recentCallProvider]);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v5, (uint64_t)&v11[OBJC_IVAR___FTRecentsListViewController_detailControllerFactory], &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  id v23 = objc_msgSend(objc_allocWithZone((Class)CNKCNMeCardSharingSettingsViewControllerObserver), sel_init);
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController_meCardSharingSettingsViewControllerObserver] = v23;
  if (a3) {
    id v24 = objc_msgSend(self, sel_settingsWithContactStore_threeDTouchEnabled_, a3, 1);
  }
  else {
    id v24 = 0;
  }
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController_avatarViewControllerSettings] = v24;
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADB78]), sel_init);
  *(void *)&v11[OBJC_IVAR___FTRecentsListViewController_conversationManager] = v25;

  uint64_t v26 = (objc_class *)type metadata accessor for RecentsListViewController(0);
  v36.receiver = v11;
  v36.super_class = v26;
  id v27 = objc_msgSendSuper2(&v36, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WeakBox<RecentsListViewController>);
  OUTLINED_FUNCTION_20();
  id v29 = v27;
  uint64_t v30 = specialized WeakBox.init(_:)(v27);
  v35[4] = &protocol witness table for <> WeakBox<A>;
  v35[5] = &protocol witness table for WeakBox<A>;
  v35[3] = v28;
  v35[0] = v30;
  uint64_t v31 = (uint64_t)v29 + OBJC_IVAR___FTRecentsListViewController_recentCallProvider;
  OUTLINED_FUNCTION_6_1();
  uint64_t v32 = *(void *)(v31 + 24);
  uint64_t v33 = *(void *)(v31 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v31, v32);
  (*(void (**)(void *, uint64_t, uint64_t))(v33 + 16))(v35, v32, v33);
  swift_endAccess();
  RecentsListViewController.configureCellRegistrations()();

  outlined destroy of SystemUpdateNotice?(v5, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  __swift_destroy_boxed_opaque_existential_1(v3);
  return v29;
}

void OUTLINED_FUNCTION_140()
{
  uint64_t v3 = *(void **)(v1 + *(int *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  return type metadata accessor for AccountUpdateNotice(0);
}

void OUTLINED_FUNCTION_140_1(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_140_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return _s15ConversationKit11ParticipantVSgWOcTm_0(a1, (uint64_t)&a9 - v10, v9);
}

uint64_t OUTLINED_FUNCTION_140_3(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_140_4()
{
  return v0;
}

unint64_t partial apply for closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  return closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(v0);
}

void OUTLINED_FUNCTION_140_5(uint64_t a1, uint64_t a2)
{
  closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_145_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_145_4()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_145_5()
{
  return swift_arrayDestroy();
}

void *OUTLINED_FUNCTION_145_6(void *result)
{
  return outlined consume of Participant.RemoteIdentifiers?(result);
}

void closure #1 in RecentsListViewController.createHeaderButtonsViewRegistration()(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WeakBox<RecentsListViewController>);
    swift_allocObject();
    uint64_t v9 = v8;
    uint64_t v10 = specialized WeakBox.init(_:)(v8);
    uint64_t v11 = (void *)MEMORY[0x1E4FBC8C8];
    (*(void (**)(uint64_t, _UNKNOWN **, _UNKNOWN **))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xA8))(v10, &protocol witness table for <> WeakBox<A>, &protocol witness table for WeakBox<A>);
    uint64_t v12 = *(void (**)(void *))((*v11 & *v9) + 0x2D0);
    uint64_t v13 = a1;
    v12(a1);
  }
}

uint64_t specialized WeakBox.init(_:)(void *a1)
{
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  return v1;
}

void iOSPeoplePickerAddButtonHandler.presenterViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  float *v1 = a1;
}

{
  iOSPeoplePickerAddButtonHandler.presenterViewController.setter(a1);
}

void RecentsListViewController.headerView.setter(void *a1)
{
}

uint64_t RecentsHeaderButtonsView.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_1();
  *uint64_t v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for ReportSpamManager()
{
  return self;
}

void *ReportSpamManager.__allocating_init(idsServiceType:)(unsigned char *a1)
{
  if (*a1) {
    uint64_t v1 = 0xD000000000000026;
  }
  else {
    uint64_t v1 = 0xD00000000000002ALL;
  }
  if (*a1) {
    uint64_t v2 = 0x80000001C3790A90;
  }
  else {
    uint64_t v2 = 0x80000001C3790A60;
  }
  id v3 = objc_allocWithZone(MEMORY[0x1E4F6AB90]);
  unint64_t result = @nonobjc IDSService.init(service:)(v1, v2);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  unint64_t result = objc_msgSend(self, sel_sharedInstance);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = result;
  unint64_t result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v7 = result;
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
    unint64_t result = (void *)swift_allocObject();
    result[2] = v5;
    result[3] = v6;
    result[4] = v7;
    result[5] = v8;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

id @nonobjc IDSService.init(service:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithService_, v3);

  return v4;
}

uint64_t static Platform.current.getter()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if ((unint64_t)v1 >= 6) {
    return 0;
  }
  else {
    return (0x10000020100uLL >> (8 * v1));
  }
}

uint64_t type metadata accessor for iPhoneFeatureSupportChecker()
{
  return self;
}

const char *Features.TelephonyUtilities.feature.getter(char a1)
{
  unint64_t result = "NamePhotoC3";
  switch(a1)
  {
    case 1:
      unint64_t result = "CallManagerEnabled";
      break;
    case 2:
      unint64_t result = "requestToScreenShare";
      break;
    case 3:
      unint64_t result = "oneToOneFaceTimeMyselfEnabled";
      break;
    case 4:
      unint64_t result = "CallRecording";
      break;
    default:
      return result;
  }
  return result;
}

id one-time initialization function for systemGreenWithUserInterfaceStyleLight()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  id result = @nonobjc UIColor.init(dynamicProvider:)((uint64_t)closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight, 0);
  static UIColor.systemGreenWithUserInterfaceStyleLight = (uint64_t)result;
  return result;
}

id @nonobjc UIColor.init(dynamicProvider:)(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  void v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = thunk for @escaping @callee_guaranteed (@guaranteed UICustomViewMenuElement) -> (@owned UIView);
  v6[3] = &block_descriptor_103;
  id v3 = _Block_copy(v6);
  id v4 = objc_msgSend(v2, sel_initWithDynamicProvider_, v3);
  _Block_release(v3);
  swift_release();
  return v4;
}

void type metadata completion function for Participant.CountdownInfo()
{
  type metadata accessor for Date?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata completion function for ScreenSharingInteractionController()
{
  type metadata accessor for Published<ScreenSharingInteractionSession?>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date?();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DeviceRestrictionController();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<RemoteControlState>();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void type metadata accessor for Date?()
{
  if (!lazy cache variable for type metadata for Date?)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Date?);
    }
  }
}

void type metadata accessor for Published<ScreenSharingInteractionSession?>()
{
  if (!lazy cache variable for type metadata for Published<ScreenSharingInteractionSession?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ScreenSharingInteractionSession?);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
    }
  }
}

void type metadata accessor for Published<RemoteControlState>()
{
  if (!lazy cache variable for type metadata for Published<RemoteControlState>)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<RemoteControlState>);
    }
  }
}

void type metadata completion function for ScreenSharingStateMonitor()
{
  type metadata accessor for Participant?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Participant?()
{
  if (!lazy cache variable for type metadata for Participant?)
  {
    type metadata accessor for Participant(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Participant?);
    }
  }
}

void type metadata completion function for RecentsHeaderButtonsView()
{
  type metadata accessor for UIButton.Configuration?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for UIButton.Configuration?()
{
  if (!lazy cache variable for type metadata for UIButton.Configuration?)
  {
    type metadata accessor for UIButton.Configuration();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for UIButton.Configuration?);
    }
  }
}

void type metadata completion function for RecentsCollectionViewCollator()
{
  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Published<Bool>()
{
  if (!lazy cache variable for type metadata for Published<Bool>)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
    }
  }
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  unint64_t v3 = (uint64_t (__cdecl *)())((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu
                             + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu);
  return v3();
}

uint64_t type metadata completion function for RecentOngoingConversationMetadata()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed Set<TUConversationLink>?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    lazy protocol witness table accessor for type SGURL and conformance NSObject(&lazy protocol witness table cache variable for type TUConversationLink and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t lazy protocol witness table accessor for type TUHandle and conformance NSObject(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_1(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_2(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #2 in RecentsLinkController.refreshLinks()(uint64_t a1, void *a2)
{
  return closure #2 in RecentsLinkController.refreshLinks()(a1, a2);
}

uint64_t closure #2 in RecentsLinkController.refreshLinks()(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v5 = RecentsLinkController.modelLocked.getter();
    swift_release();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = a1;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = partial apply for closure #1 in closure #2 in RecentsLinkController.refreshLinks();
    *(void *)(v7 + 24) = v6;
    aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed RecentsLinkControllerModel) -> ();
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
    aBlock[3] = &block_descriptor_169;
    id v8 = _Block_copy(aBlock);
    id v9 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_performWhileLocked_, v8);

    _Block_release(v8);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v5) {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata completion function for Participant.State()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = v3;
    uint64_t v5 = v3;
    uint64_t v6 = v3;
    swift_getTupleTypeLayout3();
    uint64_t v7 = &v2;
    uint64_t v8 = v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata completion function for Participant()
{
  uint64_t result = type metadata accessor for Participant.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Participant.CountdownInfo(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for Participant.CountdownInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant.CountdownInfo);
}

Swift::Void __swiftcall RecentsListViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  unint64_t v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for RecentsListViewController(0);
  objc_msgSendSuper2(&v9, sel_viewDidAppear_, a1);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_30(v4, (uint64_t)static Logger.conversationKit);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v7, v8, "RecentsListViewController viewDidAppear");
    OUTLINED_FUNCTION_3();
  }

  RecentsListViewController.handleDeferredLaunchPresentationIfNecessary()();
}

void RecentsListViewController.handleDeferredLaunchPresentationIfNecessary()()
{
  if (*(void *)(v0 + OBJC_IVAR___FTRecentsListViewController_pseudonymForDeferredLinkDetailPresentation + 8))
  {
    RecentsListViewController.handleDeferredLinkDetailPresentation()();
  }
  else
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v1 - 8);
    unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v4 = v0 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
    swift_beginAccess();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v4, (uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v5 = type metadata accessor for UUID();
    LODWORD(v4) = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v5);
    outlined destroy of SystemUpdateNotice?((uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v4 != 1) {
      RecentsListViewController.handleDeferredVideoMessagePresentation()();
    }
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed [SGURL]?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for SGURL);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t partial apply for closure #2 in RecentsLinkController.refreshSuggestionsURLs()(uint64_t a1, uint64_t a2)
{
  return closure #2 in RecentsLinkController.refreshSuggestionsURLs()(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t closure #2 in RecentsLinkController.refreshSuggestionsURLs()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a1) {
      uint64_t v7 = a1;
    }
    else {
      uint64_t v7 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRetain();
    id v8 = RecentsLinkController.modelLocked.getter();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = a4;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = partial apply for closure #1 in closure #2 in RecentsLinkController.refreshSuggestionsURLs();
    *(void *)(v10 + 24) = v9;
    aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed RecentsLinkControllerModel) -> ();
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
    aBlock[3] = &block_descriptor_156;
    uint64_t v11 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_performWhileLocked_, v11);
    swift_release();

    _Block_release(v11);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = v0;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_10(v3);
  *uint64_t v4 = v5;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TQ0_;
  return v7(v1);
}

uint64_t type metadata completion function for RecentsCallItemType()
{
  uint64_t result = type metadata accessor for RecentCallRecentItemMetadata(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RecentOngoingConversationMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[33];
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity();
  static GroupActivity.sessions()();
  GroupSession.Sessions.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[43] = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_groupSessionStateCancellable;
  OUTLINED_FUNCTION_2();
  v0[44] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator and conformance GroupSession<A>.Sessions.Iterator, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[45] = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:);
  uint64_t v5 = OUTLINED_FUNCTION_45_25();
  return MEMORY[0x1F4187C78](v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v12;

  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 368) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 352);
  if (v0)
  {
    if (v5)
    {
      swift_getObjectType();
      id v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v7;
    }
    else
    {
      id v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v10 = closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:);
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      id v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v9;
    }
    else
    {
      id v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v10 = closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:);
  }
  return MEMORY[0x1F4188298](v10, v6, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  v0[47] = v0[24];
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[42];
  return MEMORY[0x1F4188298](closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:), v1, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t (**v7)(void);
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;

  uint64_t v49 = v0;
  uint64_t v1 = v0[47];
  if (v1)
  {
    outlined init with copy of Environment<DynamicTypeSize>.Content(v0[29] + v0[43], (uint64_t)(v0 + 12), (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
    if (v0[15])
    {
      uint64_t v2 = OUTLINED_FUNCTION_41_0();
      outlined init with copy of IDSLookupManager(v2, v3);
      outlined destroy of SystemUpdateNotice?((uint64_t)(v0 + 12), (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
      __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
      dispatch thunk of Cancellable.cancel()();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)(v0 + 12), (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
    }
    OUTLINED_FUNCTION_0_58();
    v7 += 41;
    uint64_t v8 = *v7;
    if (((*v7)() & 1) != 0
      && (OUTLINED_FUNCTION_0_58(), uint64_t v10 = *(uint64_t (**)(void))(v9 + 248), v11 = v10(), swift_release(), !v11))
    {
      if (one-time initialization token for screenSharing != -1) {
        swift_once();
      }
      id v24 = type metadata accessor for Logger();
      __swift_project_value_buffer(v24, (uint64_t)static Log.screenSharing);
      swift_retain_n();
      id v25 = Logger.logObject.getter();
      uint64_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        id v27 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v48 = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)id v27 = 136315138;
        v0[26] = v1;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
        uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[27] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v25, v26, "Creating screen sharing interaction sesion for group session: %s", v27, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v33 = (void *)v0[29];
      char v34 = self;
      swift_retain();
      uint64_t v35 = v33;
      uint64_t v32 = objc_msgSend(v34, sel_sharedInstance);
      if (!v32)
      {
        __break(1u);
        return MEMORY[0x1F4187C78](v32);
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_init);
      type metadata accessor for ScreenSharingInteractionSession();
      swift_allocObject();
      objc_super v36 = v1;
      ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)();
      uint64_t v37 = ScreenSharingInteractionController.session.setter();
      if (((uint64_t (*)(uint64_t))v10)(v37))
      {
        OUTLINED_FUNCTION_17_8();
        (*(void (**)(void))(v38 + 512))();
        swift_release();
      }
      char v39 = v0[31];
      char v40 = v0[32];
      uint64_t v41 = v0[30];
      BOOL v42 = v0[29] + v0[43];
      GroupSession.$state.getter();
      uint64_t v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      char v44 = swift_allocObject();
      *(void *)(v44 + 16) = v43;
      *(void *)(v44 + 24) = v36;
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher);
      swift_retain();
      uint64_t v45 = Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
      uint64_t v46 = type metadata accessor for AnyCancellable();
      uint64_t v47 = MEMORY[0x1E4F1AB08];
      v0[10] = v46;
      v0[11] = v47;
      v0[7] = v45;
      OUTLINED_FUNCTION_6_1();
      outlined assign with take of CompactPresentable?((uint64_t)(v0 + 7), v42, (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
      swift_endAccess();
    }
    else
    {
      if (one-time initialization token for screenSharing != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)v0[29];
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static Log.screenSharing);
      uint64_t v14 = v12;
      uint64_t v15 = Logger.logObject.getter();
      uint64_t v16 = static os_log_type_t.error.getter();
      uint64_t v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = (void *)v0[29];
      if (v17)
      {
        uint64_t v19 = swift_slowAlloc();
        v0[25] = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)uint64_t v19 = 67109378;
        *(_DWORD *)(v19 + 4) = v8() & 1;
        *(_WORD *)(v19 + 8) = 2080;
        OUTLINED_FUNCTION_0_58();
        uint64_t v21 = (*(uint64_t (**)(void))(v20 + 248))();
        if (v21)
        {
          v0[28] = v21;
          type metadata accessor for ScreenSharingInteractionSession();
          uint64_t v22 = String.init<A>(reflecting:)();
          uint64_t v18 = v23;
        }
        else
        {
          uint64_t v22 = OUTLINED_FUNCTION_41_31();
        }
        uint64_t v30 = (void *)v0[29];
        *(void *)(v19 + 10) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, (unint64_t)v18, v0 + 25);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v15, v16, "Dropping screen sharing interaction session as we aren't expecting a session hasJoinedOneToOneConversation=%{BOOL}d && self.session=%s", (uint8_t *)v19, 0x12u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      GroupSession.end()();
    }
    swift_release();
    v0[44] = static MainActor.shared.getter();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator and conformance GroupSession<A>.Sessions.Iterator, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator);
    uint64_t v31 = (void *)swift_task_alloc();
    v0[45] = v31;
    *uint64_t v31 = v0;
    v31[1] = closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:);
    uint64_t v32 = (id)OUTLINED_FUNCTION_45_25();
    return MEMORY[0x1F4187C78](v32);
  }
  OUTLINED_FUNCTION_15();
  v4();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  *(void *)(v0 + 184) = *(void *)(v0 + 368);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v1 = MEMORY[0x1E4FBC248];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x1E4FBC278];
  return MEMORY[0x1F41868E8](v2, v1, v3);
}

uint64_t partial apply for closure #1 in VideoMessageInboxController.getAllMessages()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = swift_task_alloc();
  id v6 = (void *)OUTLINED_FUNCTION_10(v5);
  *id v6 = v7;
  v6[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in VideoMessageInboxController.getAllMessages()(v4, v2, v0);
}

uint64_t partial apply for closure #1 in VideoMessageInboxController.updateCallItems()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_10(v6);
  *uint64_t v7 = v8;
  v7[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in VideoMessageInboxController.updateCallItems()(v2, v3, v4, v5);
}

uint64_t closure #1 in VideoMessageInboxController.getAllMessages()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_55();
  if (v12[28])
  {
    uint64_t v13 = (void (*)(uint64_t *, uint64_t))v12[21];
    uint64_t v14 = (void (*)(uint64_t *, void, uint64_t))v12[19];
    uint64_t v15 = (uint64_t *)v12[18];
    uint64_t v16 = (uint64_t *)v12[16];
    uint64_t v17 = v12[14];
    uint64_t v18 = OUTLINED_FUNCTION_20();
    *(void *)(v18 + 16) = &outlined read-only object #2 of closure #1 in VideoMessageInboxController.getAllMessages();
    *uint64_t v16 = v18;
    v14(v16, *MEMORY[0x1E4F61800], v17);
    static MessageStoreQuery.&& infix(_:_:)();
    v13(v16, v17);
    v13(v15, v17);
    uint64_t v19 = OUTLINED_FUNCTION_23_0();
    v20(v19);
  }
  uint64_t v21 = v12[9];
  uint64_t v22 = v12[10];
  uint64_t v23 = v12[8];
  uint64_t v39 = v12[5];
  (*(void (**)(void, void, void))(v12[15] + 16))(v12[17], v12[18], v12[14]);
  uint64_t v24 = v22
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: MessageKey, order: MessageSortOrder))
               + 48);
  uint64_t v25 = *MEMORY[0x1E4F617B8];
  type metadata accessor for MessageKey();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v26 + 104))(v22, v25);
  uint64_t v27 = *MEMORY[0x1E4F617C8];
  type metadata accessor for MessageSortOrder();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v28 + 104))(v24, v27);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v22, *MEMORY[0x1E4F617F8], v23);
  v12[2] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type MessageFetchOptions and conformance MessageFetchOptions();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MessageFetchOptions]);
  lazy protocol witness table accessor for type [MessageFetchOptions] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MessageStoreFetchRequest.init(query:sortType:options:pageSize:page:originatingBundleID:)();
  v12[29] = VideoMessageInboxController.messageStoreController.getter();
  id v29 = (void *)swift_task_alloc();
  v12[30] = v29;
  *id v29 = v12;
  v29[1] = closure #1 in VideoMessageInboxController.getAllMessages();
  OUTLINED_FUNCTION_24_5();
  return MEMORY[0x1F41190D8](v30, v31, v32, v33, v34, v35, v36, v37, v39, a10, a11, a12);
}

{
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_55();
  uint64_t v13 = (void (*)(uint64_t, uint64_t))v12[21];
  uint64_t v14 = v12[18];
  uint64_t v15 = v12[14];
  (*(void (**)(void, void))(v12[12] + 8))(v12[13], v12[11]);
  v13(v14, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_24_5();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

unint64_t lazy protocol witness table accessor for type [MessageFetchOptions] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [MessageFetchOptions] and conformance [A];
  if (!lazy protocol witness table cache variable for type [MessageFetchOptions] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MessageFetchOptions]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [MessageFetchOptions] and conformance [A]);
  }
  return result;
}

uint64_t VideoMessageInboxController.messageStoreController.getter()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for MessageStoreController();
    uint64_t v1 = static MessageStoreController.shared.getter();
    MessageStoreController.addDelegate(_:)();
    *(void *)(v2 + 40) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void closure #2 in RecentsCollectionViewCollator.doReloadData(completion:)(uint64_t a1, void (*a2)(void))
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
  swift_bridgeObjectRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_bridgeObjectRelease();
    if (!a2) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v6 = 134217984;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C2F90000, v4, v5, "reloadData done. call items count: %ld", v6, 0xCu);
  MEMORY[0x1C87760E0](v6, -1, -1);

  if (a2) {
LABEL_7:
  }
    a2();
}

uint64_t closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[29] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher);
  v4[30] = v5;
  v4[31] = *(void *)(v5 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions);
  v4[33] = v6;
  v4[34] = *(void *)(v6 - 8);
  v4[35] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator);
  v4[36] = v7;
  v4[37] = *(void *)(v7 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = type metadata accessor for MainActor();
  v4[40] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[41] = v9;
  v4[42] = v8;
  return MEMORY[0x1F4188298](closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:), v9, v8);
}

uint64_t closure #1 in VideoMessageInboxController.getAllMessages()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a1;
  v3[5] = a3;
  v3[6] = type metadata accessor for MessageFetchOptions();
  v3[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MessageStoreFetchRequest.QuerySearchType();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t Request = type metadata accessor for MessageStoreFetchRequest();
  v3[11] = Request;
  v3[12] = *(void *)(Request - 8);
  v3[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MessageStoreQuery();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  unsigned char v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](closure #1 in VideoMessageInboxController.getAllMessages(), 0, 0);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy20FaceTimeMessageStore0F4TypeOSayAF0F0CGG_AH_AKts5NeverOTg5026_s15ConversationKit27Videof74InboxControllerC14getAllMessages33_7171B8C8E05400027B1F97FF317BCE39LLSay08de10D5Store0D4h29O_SayAF0D0CGtGyYaKFALScgyALs5C41_pGzYaKXEfU_AH_AKtAH3key_AK5valuet_tXEfU_Tf1cn_n(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = specialized Dictionary.startIndex.getter(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v6 = v4;
        uint64_t v7 = a1 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v13 = v1;
          __int16 v14 = *(_WORD *)(*(void *)(a1 + 48) + 2 * v5);
          uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
          unint64_t v10 = *(void *)(v15 + 16);
          unint64_t v9 = *(void *)(v15 + 24);
          swift_bridgeObjectRetain();
          if (v10 >= v9 >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          *(void *)(v15 + 16) = v10 + 1;
          uint64_t v11 = v15 + 16 * v10;
          *(_WORD *)(v11 + 32) = v14;
          *(void *)(v11 + 40) = v8;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v12 = _HashTable.occupiedBucket(after:)();
          uint64_t v1 = v13 - 1;
          if (v13 == 1) {
            return;
          }
          unint64_t v5 = v12;
          if ((v12 & 0x8000000000000000) == 0)
          {
            int v6 = *(_DWORD *)(a1 + 36);
            if (v12 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t specialized Dictionary.init<A>(grouping:by:)(unint64_t a1)
{
  uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v4 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x1C87744F0](v4 - 4, a1);
        }
        else {
          id v5 = *(id *)(a1 + 8 * v4);
        }
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v22 = v4 - 3;
        id v6 = v5;
        uint64_t v7 = dispatch thunk of Message.messageType.getter();
        unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(v7);
        uint64_t v10 = v3[2];
        BOOL v11 = (v8 & 1) == 0;
        uint64_t v12 = v10 + v11;
        if (__OFADD__(v10, v11)) {
          goto LABEL_21;
        }
        char v13 = v8;
        if (v3[3] < v12)
        {
          specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, 1);
          uint64_t v3 = v24;
          unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(v7);
          if ((v13 & 1) != (v15 & 1))
          {
            uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          unint64_t v9 = v14;
        }
        if (v13)
        {
          uint64_t v16 = (void *)(v3[7] + 8 * v9);
          MEMORY[0x1C87733A0]();
          if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v17 = swift_allocObject();
          *(_OWORD *)(v17 + 16) = xmmword_1C3769830;
          *(void *)(v17 + 32) = v6;
          uint64_t v23 = v17;
          specialized Array._endMutation()();
          v3[(v9 >> 6) + 8] |= 1 << v9;
          *(_WORD *)(v3[6] + 2 * v9) = v7;
          *(void *)(v3[7] + 8 * v9) = v23;
          uint64_t v18 = v3[2];
          BOOL v19 = __OFADD__(v18, 1);
          uint64_t v20 = v18 + 1;
          if (v19) {
            goto LABEL_22;
          }
          v3[2] = v20;
        }
        ++v4;
        if (v22 == v2) {
          goto LABEL_25;
        }
      }
    }
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
LABEL_25:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

uint64_t specialized closure #1 in closure #1 in VideoMessageInboxController.updateCallItems()(uint64_t a1, uint64_t a2)
{
  v51[1] = a2;
  uint64_t v52 = type metadata accessor for RecentsCallItem(0);
  uint64_t v64 = *(void *)(v52 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v52);
  id v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)v51 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v58 = (uint64_t)v51 - v8;
  uint64_t v54 = *(void *)(a1 + 16);
  if (!v54)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    goto LABEL_49;
  }
  uint64_t v53 = a1 + 32;
  v51[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  char v57 = v5;
  do
  {
    uint64_t v56 = v10;
    BOOL v11 = (unsigned __int16 *)(v53 + 16 * v9);
    int v65 = *v11;
    unint64_t v12 = *((void *)v11 + 1);
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    uint64_t v55 = v9;
    if (v13)
    {
      if (v13 >= 1)
      {
        unint64_t v63 = v12 & 0xC000000000000001;
        id v62 = self;
        uint64_t v14 = 0;
        uint64_t v10 = MEMORY[0x1E4FBC860];
        uint64_t v60 = v13;
        unint64_t v61 = v12;
        while (1)
        {
          id v15 = v63 ? (id)MEMORY[0x1C87744F0](v14, v12) : *(id *)(v12 + 8 * v14 + 32);
          uint64_t v16 = v15;
          uint64_t v17 = dispatch thunk of Message.from.getter();
          uint64_t v18 = (void *)MEMORY[0x1C87730B0](v17);
          swift_bridgeObjectRelease();
          id v19 = objc_msgSend(v62, sel_normalizedHandleWithDestinationID_, v18);

          uint64_t v70 = v10;
          if (!v19) {
            break;
          }
          if (one-time initialization token for faceTime != -1) {
            swift_once();
          }
          swift_retain();
          ParticipantContactDetails.init(from:cache:)(v19, v71);
          uint64_t v20 = v72;
          if (!v72) {
            break;
          }
          uint64_t v21 = (void *)v71[0];
          uint64_t v22 = v71[1];
          uint64_t v68 = v74;
          uint64_t v69 = v73;
          uint64_t v66 = v76;
          uint64_t v67 = v75;
          if (!v71[0])
          {
            swift_bridgeObjectRetain();
            uint64_t v24 = v20;
            uint64_t v25 = v22;
            goto LABEL_18;
          }
          swift_bridgeObjectRetain();
          id v23 = v21;
          uint64_t v24 = v20;
          uint64_t v25 = v22;
LABEL_19:
          uint64_t v30 = v59;
          RecentsCallItem.init(message:title:contact:messageType:)(v16, v22, v24, v23, v65, v59);
          outlined consume of ParticipantContactDetails?(v21, v25, v20);
          uint64_t v31 = v58;
          outlined init with take of RecentCallRecentItemMetadata(v30, v58, (void (*)(void))type metadata accessor for RecentsCallItem);
          uint64_t v32 = (uint64_t)v57;
          outlined init with take of RecentCallRecentItemMetadata(v31, (uint64_t)v57, (void (*)(void))type metadata accessor for RecentsCallItem);
          uint64_t v10 = v70;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v10 + 16) + 1, 1, v10, &demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallItem>, type metadata accessor for RecentsCallItem, (uint64_t)type metadata accessor for RecentsCallItem, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
          }
          uint64_t v33 = v60;
          unint64_t v12 = v61;
          unint64_t v35 = *(void *)(v10 + 16);
          unint64_t v34 = *(void *)(v10 + 24);
          if (v35 >= v34 >> 1) {
            uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1, v10, &demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallItem>, type metadata accessor for RecentsCallItem, (uint64_t)type metadata accessor for RecentsCallItem, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
          }
          ++v14;
          *(void *)(v10 + 16) = v35 + 1;
          outlined init with take of RecentCallRecentItemMetadata(v32, v10+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v35, (void (*)(void))type metadata accessor for RecentsCallItem);
          if (v33 == v14) {
            goto LABEL_27;
          }
        }
        uint64_t v22 = dispatch thunk of Message.from.getter();
        uint64_t v24 = v26;
        uint64_t v25 = 0;
        uint64_t v20 = 0;
        uint64_t v68 = 0;
        uint64_t v69 = 0;
        uint64_t v66 = 0;
        uint64_t v67 = 0;
LABEL_18:
        type metadata accessor for TUHandle();
        uint64_t v27 = dispatch thunk of Message.from.getter();
        id v29 = TUHandle.__allocating_init(type:value:)(1, v27, v28);
        id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA40]), sel__initWithHandle_, v29);

        uint64_t v21 = 0;
        goto LABEL_19;
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)(v56 + 16);
    uint64_t v37 = *(void *)(v10 + 16);
    uint64_t v38 = v37 + v36;
    if (__OFADD__(v37, v36))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v38 > *(void *)(v10 + 24) >> 1)
    {
      if (v37 <= v38) {
        uint64_t v40 = v37 + v36;
      }
      else {
        uint64_t v40 = v37;
      }
      uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v40, 1, v10, &demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallItem>, type metadata accessor for RecentsCallItem, (uint64_t)type metadata accessor for RecentsCallItem, (void (*)(unint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
    }
    if (*(void *)(v56 + 16))
    {
      uint64_t v41 = *(void *)(v10 + 16);
      if ((*(void *)(v10 + 24) >> 1) - v41 < v36) {
        goto LABEL_55;
      }
      unint64_t v42 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      uint64_t v43 = *(void *)(v64 + 72);
      unint64_t v44 = v10 + v42 + v43 * v41;
      if (v56 + v42 < v44 + v43 * v36 && v44 < v56 + v42 + v43 * v36) {
        goto LABEL_57;
      }
      swift_arrayInitWithCopy();
      if (v36)
      {
        uint64_t v46 = *(void *)(v10 + 16);
        BOOL v47 = __OFADD__(v46, v36);
        uint64_t v48 = v46 + v36;
        if (v47) {
          goto LABEL_56;
        }
        *(void *)(v10 + 16) = v48;
      }
    }
    else if (v36)
    {
      goto LABEL_53;
    }
    uint64_t v9 = v55 + 1;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  while (v9 != v54);
  swift_bridgeObjectRelease();
LABEL_49:
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t))(*(void *)Strong + 104))(Strong);
  swift_release();
  uint64_t v77 = v10;
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

id ConversationKitLog()
{
  if (ConversationKitLog_onceToken != -1) {
    dispatch_once(&ConversationKitLog_onceToken, &__block_literal_global_0);
  }
  uint64_t v0 = (void *)ConversationKitLog_ConversationKitLog;
  return v0;
}

void __ConversationKitLog_block_invoke()
{
  os_log_t v0 = os_log_create((const char *)ConversationKitLogSubsystem, "Default");
  uint64_t v1 = (void *)ConversationKitLog_ConversationKitLog;
  ConversationKitLog_ConversationKitLog = (uint64_t)v0;
}

uint64_t consumeSandboxToken(void *a1)
{
  uint64_t v1 = [a1 UTF8String];
  return MEMORY[0x1F40CDDF8](v1);
}

uint64_t static PreCallControlsContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)a2;
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8)) {
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
LABEL_6:
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    outlined copy of PreCallControlsContext(v3);
    outlined copy of PreCallControlsContext(v2);
    char v5 = static NSObject.== infix(_:_:)();
    goto LABEL_7;
  }
  uint64_t v4 = (void *)OUTLINED_FUNCTION_35();
  outlined copy of PreCallControlsContext(v4);
  outlined copy of PreCallControlsContext(v2);
  char v5 = 0;
LABEL_7:
  outlined consume of PreCallControlsContext(v2);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_35();
  outlined consume of PreCallControlsContext(v6);
  return v5 & 1;
}

uint64_t PreCallContextProvider.currentPreCallContext.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t PreCallContextProvider.preCallContexts.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>>);
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  lazy protocol witness table accessor for type PreCallControlsContext? and conformance <A> A?();
  Publisher<>.removeDuplicates()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>>);
  uint64_t v7 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v0);
  return v7;
}

unint64_t lazy protocol witness table accessor for type PreCallControlsContext? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type PreCallControlsContext? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type PreCallControlsContext? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PreCallControlsContext?);
    lazy protocol witness table accessor for type PreCallControlsContext and conformance PreCallControlsContext();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreCallControlsContext? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PreCallControlsContext and conformance PreCallControlsContext()
{
  unint64_t result = lazy protocol witness table cache variable for type PreCallControlsContext and conformance PreCallControlsContext;
  if (!lazy protocol witness table cache variable for type PreCallControlsContext and conformance PreCallControlsContext)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreCallControlsContext and conformance PreCallControlsContext);
  }
  return result;
}

void PreCallContextProvider.setPreCallContext(_:)(id *a1)
{
  id v1 = *a1;
  outlined copy of PreCallControlsContext(*a1);
  CurrentValueSubject.send(_:)();
  outlined consume of PreCallControlsContext(v1);
}

Swift::Void __swiftcall PreCallContextProvider.clearPreCallContext()()
{
}

uint64_t PreCallContextProvider.deinit()
{
  swift_release();
  return v0;
}

uint64_t PreCallContextProvider.__deallocating_deinit()
{
  swift_release();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocClassInstance();
}

uint64_t PreCallContextProvider.__allocating_init()()
{
  OUTLINED_FUNCTION_25_0();
  uint64_t v0 = swift_allocObject();
  PreCallContextProvider.init()();
  return v0;
}

uint64_t PreCallContextProvider.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  swift_allocObject();
  *(void *)(v0 + 16) = CurrentValueSubject.init(_:)();
  return v0;
}

uint64_t protocol witness for PreCallContextProviding.currentPreCallContext.getter in conformance PreCallContextProvider()
{
  return PreCallContextProvider.currentPreCallContext.getter();
}

uint64_t protocol witness for PreCallContextProviding.preCallContexts.getter in conformance PreCallContextProvider()
{
  return PreCallContextProvider.preCallContexts.getter();
}

void protocol witness for PreCallContextProviding.setPreCallContext(_:) in conformance PreCallContextProvider(id *a1)
{
}

void protocol witness for PreCallContextProviding.clearPreCallContext() in conformance PreCallContextProvider()
{
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_7_1();
  Hasher._combine(_:)(qword_1C3768DB8[a1]);
  return Hasher._finalize()();
}

{
  OUTLINED_FUNCTION_7_1();
  if (!a1) {
    OUTLINED_FUNCTION_13();
  }
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return OUTLINED_FUNCTION_5_19();
}

{
  return OUTLINED_FUNCTION_5_19();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return OUTLINED_FUNCTION_19_8();
}

{
  return specialized RawRepresentable<>.hashValue.getter();
}

{
  return OUTLINED_FUNCTION_5_19();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return specialized RawRepresentable<>.hashValue.getter();
}

{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  return OUTLINED_FUNCTION_5_19();
}

{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_30_2();
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_5_19();
}

{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_9_6();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v9;
  char v10;

  uint64_t v0 = OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_34_0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return Hasher._finalize()();
}

{
  return OUTLINED_FUNCTION_19_8();
}

{
  OUTLINED_FUNCTION_7_1();
  String.hash(into:)();
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(uint64_t a1)
{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))ImageNames.ConversationControls.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))ImageNames.ParticipantView.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))ImageNames.Drawer.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))ImageNames.InCall.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))ImageNames.Staging.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))VideoMessageController.State.rawValue.getter);
}

{
  return specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter);
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(double a1)
{
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(uint64_t a1, void (*a2)(uint64_t))
{
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(Swift::UInt32 a1)
{
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))VideoMessageController.State.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ImageNames.Staging.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ImageNames.InCall.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ImageNames.Drawer.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ImageNames.ParticipantView.rawValue.getter);
}

{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))ImageNames.ConversationControls.rawValue.getter);
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(double a1)
{
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

uint64_t default argument 0 of PushToTalkTalkButtonGestureRecognizer.init(interval:maximumVerticalVelocity:target:action:)@<X0>(void *a1@<X8>)
{
  *a1 = 300;
  type metadata accessor for DispatchTimeInterval();
  uint64_t v1 = OUTLINED_FUNCTION_35();
  return v2(v1);
}

double default argument 1 of PushToTalkTalkButtonGestureRecognizer.init(interval:maximumVerticalVelocity:target:action:)()
{
  return OUTLINED_FUNCTION_14_0(100.0);
}

BOOL default argument 7 of CaptionsViewModel.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:allowsSuppression:)()
{
  return static Platform.current.getter() == 2;
}

uint64_t default argument 2 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)()
{
  if (one-time initialization token for callControlBackgroundOff != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t default argument 3 of static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)()
{
  type metadata accessor for Image.Scale();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

double default argument 0 of IconButtonStyle.init(spacing:width:iconPadding:labelColor:labelFont:symbol:)()
{
  return 6.0;
}

uint64_t default argument 4 of IconButtonStyle.init(spacing:width:iconPadding:labelColor:labelFont:symbol:)()
{
  type metadata accessor for Font.Leading();
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.subheadline.getter();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4F3E0F8], v0);
  uint64_t v6 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  return v6;
}

double default argument 1 of UIView.addConstraintsToFill(_:insets:)()
{
  return *MEMORY[0x1E4FB12A8];
}

uint64_t default argument 0 of ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADAC8]), sel_init);
  uint64_t result = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallSoundPlayer);
  a1[3] = result;
  a1[4] = &protocol witness table for TUCallSoundPlayer;
  *a1 = v2;
  return result;
}

uint64_t default argument 1 of ScreeningSoundAndHapticsManager.init(with:ringerStateObserver:feedbackGenerator:)()
{
  OUTLINED_FUNCTION_31_2();
  uint64_t v1 = type metadata accessor for DeviceRingerStateObserver();
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  *(unsigned char *)(result + 20) = 0;
  v0[3] = v1;
  v0[4] = (uint64_t)&protocol witness table for DeviceRingerStateObserver;
  uint64_t *v0 = result;
  return result;
}

float default argument 0 of PipZoomControl.changeZoomFactor(by:direction:)()
{
  return 0.1;
}

uint64_t default argument 0 of DeviceInactivityObserver.init(inactivityTimeout:)()
{
  return 2;
}

id default argument 0 of ScreenSharingInteraction.init(interactionController:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static ScreenSharingInteractionController.shared);
}

id default argument 2 of static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1;
}

uint64_t default argument 4 of SystemApertureElement.init(leadingView:trailingView:minimalView:detachedMinimalView:maximumLayoutMode:alertingStyle:)()
{
  return 4;
}

id default argument 3 of ConversationControlsBadgingAvatarViewController.init(conversation:badgeImage:displayName:badgeBackgroundColor:)()
{
  id v0 = objc_msgSend(self, sel_clearColor);
  return v0;
}

uint64_t default argument 4 of ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)()
{
  return MEMORY[0x1E4FBC860];
}

void default argument 1 of ConversationControlsRecipe.Actions.buttonShelf(_:)(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = xmmword_1C3765400;
  OUTLINED_FUNCTION_33_5(a1);
}

double default argument 3 of InCallControlButton.init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)()
{
  return OUTLINED_FUNCTION_14_0(56.0);
}

void default argument 1 of ParticipantAvatar.init(_:colorStyle:)(unsigned char *a1@<X8>)
{
}

void *default argument 1 of RecentItemContactsViewControllerDelegate.init(_:faceTimeReportSpamManager:)()
{
  type metadata accessor for ReportSpamManager();
  char v1 = 1;
  return ReportSpamManager.__allocating_init(idsServiceType:)(&v1);
}

uint64_t default argument 2 of ConversationControlsPrimaryActionButtonProvider.init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t default argument 1 of IDSCapabilitiesChecker.init(participants:lookupManager:)@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_sharedManager);
  uint64_t result = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  a1[3] = result;
  a1[4] = &protocol witness table for TUIDSLookupManager;
  *a1 = v2;
  return result;
}

uint64_t default argument 2 of localized(_:locale:source:value:comment:_:)()
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.conversationKit;
  id v1 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  return v0;
}

char *default argument 1 of ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)@<X0>(char **a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)static PlaceholderCallCenter.shared;
  uint64_t v4 = (objc_class *)type metadata accessor for CallCenter();
  id v5 = objc_allocWithZone(v4);
  uint64_t result = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v2, v3, 0, 0);
  a1[3] = (char *)v4;
  a1[4] = (char *)&protocol witness table for CallCenter;
  *a1 = result;
  return result;
}

uint64_t default argument 2 of ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for DefaultParticipantMediaProviderCreator;
  a1[4] = (uint64_t)&protocol witness table for DefaultParticipantMediaProviderCreator;
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + 16;
  *a1 = v2;
  swift_unknownObjectWeakInit();
  return outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)v5, v3);
}

uint64_t default argument 3 of ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for DefaultParticipantCaptionsProviderCreator;
  a1[4] = (uint64_t)&protocol witness table for DefaultParticipantCaptionsProviderCreator;
  uint64_t v2 = OUTLINED_FUNCTION_26();
  uint64_t v3 = v2 + 16;
  *a1 = v2;
  v5[1] = 0;
  swift_unknownObjectWeakInit();
  return outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v5, v3);
}

void *default argument 7 of ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  id v0 = objc_msgSend(self, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  id v1 = (void *)swift_allocObject();
  v5[3] = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v5[4] = &protocol witness table for TUIDSLookupManager;
  v5[0] = v0;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  v1[2] = Dictionary.init(dictionaryLiteral:)();
  v1[3] = Dictionary.init(dictionaryLiteral:)();
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  v1[6] = v2;
  outlined init with copy of IDSLookupManager((uint64_t)v5, (uint64_t)(v1 + 7));
  id v3 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v1, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v5[0]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v1;
}

double default argument 1 of View.bezelEffect(_:metrics:)@<D0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for forCurrentDisplay != -1) {
    swift_once();
  }
  char v2 = xmmword_1EA37E020;
  double result = *((double *)&xmmword_1EA37E020 + 1);
  long long v4 = *(_OWORD *)algn_1EA37E010;
  *(_OWORD *)a1 = static BezelMetrics.forCurrentDisplay;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  return result;
}

id default argument 0 of ScreenSharingBroadcasterViewModel.init(interactionController:bannerPresentationManager:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static ScreenSharingInteractionController.shared);
}

uint64_t default argument 2 of TimeToWaitForCallService.init(timeToWaitForCall:defaultTimeToWaitForCall:randomRange:)()
{
  return -3;
}

uint64_t default argument 6 of ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)()
{
  return 3;
}

void default argument 1 of ParticipantGridView.aspectRatio(for:default:)(_OWORD *a1@<X8>)
{
  *a1 = 0u;
  a1[1] = 0u;
  OUTLINED_FUNCTION_33_5((uint64_t)a1);
}

double default argument 3 of InCallControlButton.init(style:imageName:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:)()
{
  return OUTLINED_FUNCTION_14_0(56.0);
}

id default argument 0 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  return default argument 0 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)();
}

{
  id result;

  double result = objc_msgSend(self, sel_sharedInstance);
  if (!result) {
    __break(1u);
  }
  return result;
}

id default argument 1 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static ScreenSharingInteractionController.shared);
}

id default argument 2 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for sharedMonitor, (void **)&static ScreenSharingStateMonitor.sharedMonitor);
}

void default argument 0 of CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(unsigned char *a1@<X8>)
{
}

id default argument 1 of ReportSpamManager.init(idsService:imAccountController:imDaemonController:featureFlags:)()
{
  return default argument 0 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)();
}

id default argument 2 of ReportSpamManager.init(idsService:imAccountController:imDaemonController:featureFlags:)()
{
  return default argument 0 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)();
}

id default argument 1 of CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static PlaceholderCallCenter.shared);
}

id default argument 1 of ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  OUTLINED_FUNCTION_31_2();
  uint64_t v1 = type metadata accessor for EntitlementsChecker();
  uint64_t v2 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  *(void *)(v2 + 16) = result;
  v0[3] = v1;
  v0[4] = (uint64_t)&protocol witness table for EntitlementsChecker;
  uint64_t *v0 = v2;
  return result;
}

id default argument 4 of ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  return objc_msgSend(v0, sel_init);
}

uint64_t default argument 3 of static RecentsCollectionViewModel.section(_:includes:now:calendar:)()
{
  return static Calendar.current.getter();
}

double default argument 3 of InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)()
{
  return OUTLINED_FUNCTION_14_0(56.0);
}

uint64_t default argument 0 of CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationController);
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

id default argument 2 of ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)()
{
  return default argument 0 of ScreenSharingSpectatorViewModel.init(serverBag:interactionController:screenSharingStateMonitor:)();
}

id default argument 3 of ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1B980]);
  return objc_msgSend(v0, sel_init);
}

uint64_t default argument 1 of notifyRegisterDispatch(name:queue:handler:)()
{
  return static OS_dispatch_queue.main.getter();
}

id default argument 9 of SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static Features.shared);
}

uint64_t default argument 11 of SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)()
{
  return UUID.init()();
}

double default argument 1 of CGFloat.isApproximatelyEqual(to:tolerance:)()
{
  return OUTLINED_FUNCTION_14_0(0.0000000149011612);
}

double default argument 0 of CGFloat.isApproximatelyZero(tolerance:)()
{
  return OUTLINED_FUNCTION_14_0(0.0000000149011612);
}

uint64_t default argument 0 of AnsweringMachineComposer.init(config:isEnabled:isEnabledM3:isAnsweringMachineAvailable:timeToWaitForCall:)()
{
  OUTLINED_FUNCTION_31_2();
  type metadata accessor for Defaults();
  OUTLINED_FUNCTION_26();
  Defaults.init()();
  OUTLINED_FUNCTION_2_10();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 800))();
  swift_release();
  OUTLINED_FUNCTION_26();
  Defaults.init()();
  OUTLINED_FUNCTION_2_10();
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 808))();
  uint64_t result = swift_release();
  uint64_t *v0 = v2;
  v0[1] = v4;
  v0[2] = 0x4008000000000000;
  return result;
}

uint64_t default argument 0 of AnsweringMachineComposer.Config.init(defaultSecondsBeforeAnswerAsScreening:maxSecondsForScreening:activityUpdateThrottleSeconds:)()
{
  type metadata accessor for Defaults();
  OUTLINED_FUNCTION_26();
  Defaults.init()();
  OUTLINED_FUNCTION_2_10();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 800))();
  swift_release();
  return v1;
}

uint64_t default argument 1 of AnsweringMachineComposer.Config.init(defaultSecondsBeforeAnswerAsScreening:maxSecondsForScreening:activityUpdateThrottleSeconds:)()
{
  type metadata accessor for Defaults();
  OUTLINED_FUNCTION_26();
  Defaults.init()();
  OUTLINED_FUNCTION_2_10();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 808))();
  swift_release();
  return v1;
}

double default argument 2 of AnsweringMachineComposer.Config.init(defaultSecondsBeforeAnswerAsScreening:maxSecondsForScreening:activityUpdateThrottleSeconds:)()
{
  return 3.0;
}

id default argument 1 of CallStatusService.init(logger:notificationCenter:callCenter:)()
{
  id v0 = objc_msgSend(self, sel_defaultCenter);
  return v0;
}

uint64_t default argument 2 of BannerPresentationManager.presentNewBanner(as:type:activityUUID:fromActivityManager:completion:)()
{
  return UUID.init()();
}

double default argument 5 of AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)()
{
  return 0.0;
}

id default argument 1 of AssetPackageDescriptor.init(packageName:bundle:activeState:)()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  return v0;
}

id default argument 4 of MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (void **)&static Features.shared);
}

id default argument 0 of ScreenSharingInteraction.init(interactionController:)(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

char *default argument 2 of MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for BannerPresentationManager());
  return BannerPresentationManager.init(delegate:)();
}

NSNumber specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()()
{
  return Int._bridgeToObjectiveC()();
}

{
  return Float._bridgeToObjectiveC()();
}

{
  return CGFloat._bridgeToObjectiveC()();
}

id default argument 1 of ConversationStateManager.init(call:callCenter:defaults:)()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  return v0;
}

uint64_t default argument 4 of CaptionsViewModel.init(presentationStateProvider:remoteParticipantsStateProvider:allowsMinimization:layoutIdiom:defaults:)()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1C2FDD744()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t outlined init with take of DefaultParticipantMediaProviderCreator(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C2FDD7D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t outlined init with take of DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

id default argument 1 of ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    return (id)DeviceRestrictionController.init(profileConnection:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t default argument 2 of ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  OUTLINED_FUNCTION_31_2();
  uint64_t v1 = type metadata accessor for FeatureEligibilityChecker();
  uint64_t v2 = MEMORY[0x1E4F617A0];
  v0[3] = v1;
  v0[4] = v2;
  __swift_allocate_boxed_opaque_existential_1(v0);
  return FeatureEligibilityChecker.init()();
}

uint64_t initializeBufferWithCopyOfBuffer for PreCallControlsContext(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  outlined copy of PreCallControlsContext(*(id *)a2);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for PreCallControlsContext(id *a1)
{
}

uint64_t assignWithCopy for PreCallControlsContext(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  outlined copy of PreCallControlsContext(*(id *)a2);
  id v5 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  outlined consume of PreCallControlsContext(v5);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)id result = v2;
  return result;
}

uint64_t assignWithTake for PreCallControlsContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  outlined consume of PreCallControlsContext(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreCallControlsContext(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreCallControlsContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)id result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for PreCallControlsContext(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t destructiveInjectEnumTag for PreCallControlsContext(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PreCallControlsContext()
{
  return &type metadata for PreCallControlsContext;
}

uint64_t dispatch thunk of PreCallContextProviding.currentPreCallContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PreCallContextProviding.preCallContexts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PreCallContextProviding.setPreCallContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PreCallContextProviding.clearPreCallContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for PreCallContextProvider()
{
  return self;
}

uint64_t method lookup function for PreCallContextProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PreCallContextProvider);
}

uint64_t dispatch thunk of PreCallContextProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void type metadata accessor for CFStringRef(uint64_t a1)
{
}

void type metadata accessor for CNKNoticeType(uint64_t a1)
{
}

void type metadata accessor for UIStackViewDistribution(uint64_t a1)
{
}

void type metadata accessor for UIStackViewAlignment(uint64_t a1)
{
}

void type metadata accessor for UILayoutConstraintAxis(uint64_t a1)
{
}

void type metadata accessor for CGImageRef(uint64_t a1)
{
}

void type metadata accessor for UIImageSymbolScale(uint64_t a1)
{
}

void type metadata accessor for TUScreenShareDeviceHomeButtonType(uint64_t a1)
{
}

void type metadata accessor for TUConversationBroadcastingAttributes(uint64_t a1)
{
}

void type metadata accessor for CNKCallParticipantLabelLayoutState(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGVector(uint64_t a1)
{
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureElementIdentifier(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureContentRole(uint64_t a1)
{
}

void type metadata accessor for BNBannerDestination(uint64_t a1)
{
}

void type metadata accessor for UIFontDescriptorSymbolicTraits(uint64_t a1)
{
}

void type metadata accessor for UIViewContentMode(uint64_t a1)
{
}

void type metadata accessor for TUConversationParticipantVideoQuality(uint64_t a1)
{
}

void type metadata accessor for TUCallSoundPlayerSoundType(uint64_t a1)
{
}

void type metadata accessor for TUCallRecordingState(uint64_t a1)
{
}

void type metadata accessor for TUCallRecordingAvailability(uint64_t a1)
{
}

void type metadata accessor for IOHIDEventSystemClientRef(uint64_t a1)
{
}

void type metadata accessor for UIActionIdentifier(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AudioQueueBuffer(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 == 1 || !*(unsigned char *)(a1 + 56))
    {
      if (*(void *)(a1 + 8)) {
        int v2 = -1;
      }
      else {
        int v2 = 0;
      }
    }
    else
    {
      int v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioQueueBuffer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

void type metadata accessor for AudioQueueBuffer(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CMTime(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CMTime(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for CNKPiPState(uint64_t a1)
{
}

void type metadata accessor for AVCaptureReactionType(uint64_t a1)
{
}

void type metadata accessor for CNKSupportedDeviceOrientations(uint64_t a1)
{
}

void type metadata accessor for AVCCaptionsSource(uint64_t a1)
{
}

void type metadata accessor for AVCCaptionsReason(uint64_t a1)
{
}

void type metadata accessor for TURemoteControlStatus(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for TUCallRemoteVideoPresentationState(uint64_t a1)
{
}

void type metadata accessor for TUConversationActivitySessionApplicationState(uint64_t a1)
{
}

void type metadata accessor for CFXEffectsState(uint64_t a1)
{
}

void type metadata accessor for CNKCommand(uint64_t a1)
{
}

void type metadata accessor for CNActionType(uint64_t a1)
{
}

void type metadata accessor for TUScreenShareStyle(uint64_t a1)
{
}

void type metadata accessor for CFUserNotificationRef(uint64_t a1)
{
}

void type metadata accessor for UIActivityType(uint64_t a1)
{
}

void type metadata accessor for STBackgroundActivityIdentifier(uint64_t a1)
{
}

void type metadata accessor for BNBannerRevocationReason(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for UIEdgeInsets(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for UIEdgeInsets(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for UIEdgeInsets(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CHRecentCallMediaType(uint64_t a1)
{
}

void type metadata accessor for CNKInCallControlButtonStyle(uint64_t a1)
{
}

void type metadata accessor for TUConversationAVMode(uint64_t a1)
{
}

void type metadata accessor for TUNearbyConversationPullContext(uint64_t a1)
{
}

void type metadata accessor for TUCallBluetoothAudioFormat(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientationMask(uint64_t a1)
{
}

void type metadata accessor for TUVideoDeviceBackgroundBlurControlMode(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureLayoutMode(uint64_t a1)
{
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CGAffineTransform(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CGAffineTransform(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

void type metadata accessor for CGColorRef(uint64_t a1)
{
}

void type metadata accessor for UIGestureRecognizerState(uint64_t a1)
{
}

void type metadata accessor for NSNotificationName(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for TPNumberPadCharacter(uint64_t a1)
{
}

void type metadata accessor for NSRunLoopMode(uint64_t a1)
{
}

void type metadata accessor for TUScreenShareDeviceFamily(uint64_t a1)
{
}

void type metadata accessor for CNKDeviceOrientation(uint64_t a1)
{
}

void *__swift_memcpy128_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t getEnumTagSinglePayload for CATransform3D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CATransform3D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void type metadata accessor for UIFontDescriptorAttributeName(uint64_t a1)
{
}

void type metadata accessor for UIFontDescriptorFeatureKey(uint64_t a1)
{
}

void type metadata accessor for NSAttributedStringKey(uint64_t a1)
{
}

void type metadata accessor for UIImageSymbolWeight(uint64_t a1)
{
}

void type metadata accessor for UIControlState(uint64_t a1)
{
}

void type metadata accessor for TUCallTransmissionMode(uint64_t a1)
{
}

void type metadata accessor for CLFCommunicationLimit(uint64_t a1)
{
}

void type metadata accessor for TUConversationLetMeInRequestState(uint64_t a1)
{
}

void type metadata accessor for TUConversationState(uint64_t a1)
{
}

void type metadata accessor for TUCallStatus(uint64_t a1)
{
}

void type metadata accessor for UIFontTextStyle(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CHHandleType(uint64_t a1)
{
}

void type metadata accessor for TUHandleType(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1C8773840](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1C8773740](a1, &v6);
  uint64_t v4 = v7;
  char v5 = v6;
  if (v7) {
    char v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1C876F620](a1, &v6);
  uint64_t v4 = v7;
  char v5 = v6;
  if (v7) {
    char v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(uint64_t a1, uint64_t a2)
{
  char v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  char v7 = 0;
  uint64_t v8 = 1;
  char v3 = MEMORY[0x1C8773750](a1, &v7);
  uint64_t v4 = v8;
  char v5 = v7;
  if (v8) {
    char v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  char v7 = 0;
  uint64_t v8 = 1;
  char v3 = MEMORY[0x1C876F630](a1, &v7);
  uint64_t v4 = v8;
  char v5 = v7;
  if (v8) {
    char v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return v3 & 1;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

{
  return MEMORY[0x1C8773760]();
}

{
  return MEMORY[0x1C876F640]();
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v1 = MEMORY[0x1C87730B0](v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t protocol witness for static _ObjectiveCBridgeable._forceBridgeFromObjectiveC(_:result:) in conformance UIApplicationOpenExternalURLOptionsKey(uint64_t a1, id *a2)
{
  return specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2);
}

uint64_t protocol witness for static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:) in conformance UIApplicationOpenExternalURLOptionsKey(uint64_t a1, id *a2)
{
  return specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2) & 1;
}

uint64_t specialized _SwiftNewtypeWrapper<>.hashValue.getter()
{
  return MEMORY[0x1F4184270]();
}

{
  return MEMORY[0x1F41840D0]();
}

{
  return MEMORY[0x1F4184070]();
}

uint64_t specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void specialized _SwiftNewtypeWrapper<>.hash(into:)(int a1, Swift::UInt a2)
{
}

uint64_t specialized _SwiftNewtypeWrapper<>.hash(into:)()
{
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_24_7();
  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)()
{
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_36_0();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance UIGestureRecognizerState()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_4();
  uint64_t result = TPNumberPadCharacter.rawValue.getter(v1);
  uint64_t *v0 = result;
  return result;
}

NSNumber protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UILayoutPriority()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()();
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance UILayoutPriority@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CLFCommunicationLimit(void *a1, void *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance CLFCommunicationLimit()
{
  OUTLINED_FUNCTION_0_4();
  uint64_t result = NSRunLoopMode.rawValue.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TUCallTransmissionMode(uint64_t *a1, uint64_t *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TUCallStatus(int *a1, int *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance FZHandleIDStatus()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_6();
  uint64_t result = TPNumberPadCharacter.rawValue.getter(v1);
  _DWORD *v0 = result;
  return result;
}

void protocol witness for Hashable.hash(into:) in conformance CNKDeviceOrientation(int a1)
{
  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for SetAlgebra.init() in conformance TUConversationBroadcastingAttributes@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized OptionSet<>.init()();
  *a1 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.contains(_:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized SetAlgebra.isSuperset(of:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.union(_:) in conformance TUConversationBroadcastingAttributes@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized OptionSet.union(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.intersection(_:) in conformance TUConversationBroadcastingAttributes(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_3_28(a1);
  uint64_t result = specialized OptionSet.intersection(_:)(v2, v3);
  uint64_t *v1 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.symmetricDifference(_:) in conformance TUConversationBroadcastingAttributes(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_3_28(a1);
  uint64_t result = specialized OptionSet.symmetricDifference(_:)(v2, v3);
  uint64_t *v1 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.insert(_:) in conformance TUConversationBroadcastingAttributes(uint64_t a1, void *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

uint64_t protocol witness for SetAlgebra.remove(_:) in conformance TUConversationBroadcastingAttributes@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.remove(_:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.update(with:) in conformance TUConversationBroadcastingAttributes@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.update(with:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.subtracting(_:) in conformance TUConversationBroadcastingAttributes@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra.subtracting(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.isSubset(of:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.isDisjoint(with:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isEmpty.getter in conformance TUConversationBroadcastingAttributes()
{
  return specialized SetAlgebra.isEmpty.getter(*v0);
}

uint64_t protocol witness for SetAlgebra.init<A>(_:) in conformance TUConversationBroadcastingAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

uint64_t protocol witness for SetAlgebra.subtract(_:) in conformance TUConversationBroadcastingAttributes(void *a1)
{
  return specialized SetAlgebra.subtract(_:)(*a1);
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSRunLoopMode()
{
  return specialized _SwiftNewtypeWrapper<>.hashValue.getter(*v0, MEMORY[0x1F418C100]);
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance TUCallStatus@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = TUCallStatus.init(rawValue:)(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t TUCallStatus.init(rawValue:)(uint64_t result)
{
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance UIActionIdentifier()
{
  return specialized == infix<A>(_:_:)();
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance TUCallSoundPlayerSoundType(uint64_t a1@<X8>)
{
  TUCallSoundPlayerSoundType.init(rawValue:)();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance UIActivityType()
{
  return specialized == infix<A>(_:_:)();
}

NSNumber protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIBackgroundTaskIdentifier()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()();
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance UIBackgroundTaskIdentifier@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CFUserNotificationRef()
{
  return static _CFObject.== infix(_:_:)() & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance UIImageSymbolScale()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance UIImageSymbolScale()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UIFontTextStyle()
{
  return specialized _SwiftNewtypeWrapper<>.hash(into:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance TUCallStatus()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance TUCallStatus(int a1)
{
  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance TUCallStatus()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance CNActionType()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(*v0, MEMORY[0x1F418C108]);
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance CNActionType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

NSNumber protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIWindowLevel()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()();
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance UIWindowLevel@<X0>(void *a1@<X8>)
{
  uint64_t result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

uint64_t protocol witness for SetAlgebra.init() in conformance UIFontDescriptorSymbolicTraits@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = specialized OptionSet<>.init()();
  *a1 = result;
  return result;
}

BOOL protocol witness for SetAlgebra.contains(_:) in conformance UIFontDescriptorSymbolicTraits(int *a1)
{
  return specialized SetAlgebra.isSuperset(of:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.union(_:) in conformance UIFontDescriptorSymbolicTraits@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = specialized OptionSet.union(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.intersection(_:) in conformance UIFontDescriptorSymbolicTraits(unsigned int *a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_22_3(a1);
  uint64_t result = specialized OptionSet.intersection(_:)(v2);
  _DWORD *v1 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.symmetricDifference(_:) in conformance UIFontDescriptorSymbolicTraits(unsigned int *a1)
{
  unsigned int v2 = OUTLINED_FUNCTION_22_3(a1);
  uint64_t result = specialized OptionSet.symmetricDifference(_:)(v2, v3);
  _DWORD *v1 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.insert(_:) in conformance UIFontDescriptorSymbolicTraits(uint64_t a1, unsigned int *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

unint64_t protocol witness for SetAlgebra.remove(_:) in conformance UIFontDescriptorSymbolicTraits@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = specialized OptionSet<>.remove(_:)(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t protocol witness for SetAlgebra.update(with:) in conformance UIFontDescriptorSymbolicTraits@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = specialized OptionSet<>.update(with:)(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance UIFontDescriptorSymbolicTraits(unsigned int *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance UIFontDescriptorSymbolicTraits(unsigned int *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance UIFontDescriptorSymbolicTraits(unsigned int *a1)
{
  return specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.subtracting(_:) in conformance UIFontDescriptorSymbolicTraits@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra.subtracting(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance UIFontDescriptorSymbolicTraits(int *a1)
{
  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isDisjoint(with:) in conformance UIFontDescriptorSymbolicTraits(int *a1)
{
  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isEmpty.getter in conformance UIFontDescriptorSymbolicTraits()
{
  return specialized SetAlgebra.isEmpty.getter(*v0);
}

uint64_t protocol witness for SetAlgebra.subtract(_:) in conformance UIFontDescriptorSymbolicTraits(unsigned int *a1)
{
  return specialized SetAlgebra.subtract(_:)(*a1);
}

_DWORD *protocol witness for OptionSet.init(rawValue:) in conformance CADisableUpdateMask@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance TUConversationBroadcastingAttributes@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized SetAlgebra<>.init(arrayLiteral:)();
  *a1 = result;
  return result;
}

void *protocol witness for OptionSet.init(rawValue:) in conformance CACornerMask@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AVCEffectsMode(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSNotificationName()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance UIFontDescriptorSymbolicTraits@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra<>.init(arrayLiteral:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIApplicationOpenExternalURLOptionsKey()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle((unint64_t *)&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

_DWORD *protocol witness for RawRepresentable.init(rawValue:) in conformance UILayoutPriority@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float protocol witness for RawRepresentable.rawValue.getter in conformance UILayoutPriority@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UILayoutPriority()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance CLFCommunicationLimit()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CLFCommunicationLimit and conformance CLFCommunicationLimit, type metadata accessor for CLFCommunicationLimit);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CLFCommunicationLimit and conformance CLFCommunicationLimit, type metadata accessor for CLFCommunicationLimit);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIFontTextStyle()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontTextStyle and conformance UIFontTextStyle, type metadata accessor for UIFontTextStyle);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontTextStyle and conformance UIFontTextStyle, type metadata accessor for UIFontTextStyle);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t base witness table accessor for RawRepresentable in UIFontTextStyle()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontTextStyle and conformance UIFontTextStyle, type metadata accessor for UIFontTextStyle);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIFontTextStyle()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontTextStyle and conformance UIFontTextStyle, type metadata accessor for UIFontTextStyle);
}

uint64_t lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Equatable in UIFontTextStyle()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontTextStyle and conformance UIFontTextStyle, type metadata accessor for UIFontTextStyle);
}

uint64_t base witness table accessor for Equatable in TUCallStatus()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TUCallStatus and conformance TUCallStatus, type metadata accessor for TUCallStatus);
}

uint64_t base witness table accessor for RawRepresentable in CLFCommunicationLimit()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CLFCommunicationLimit and conformance CLFCommunicationLimit, type metadata accessor for CLFCommunicationLimit);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in CLFCommunicationLimit()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CLFCommunicationLimit and conformance CLFCommunicationLimit, type metadata accessor for CLFCommunicationLimit);
}

uint64_t base witness table accessor for Equatable in CLFCommunicationLimit()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CLFCommunicationLimit and conformance CLFCommunicationLimit, type metadata accessor for CLFCommunicationLimit);
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIActionIdentifier()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActionIdentifier and conformance UIActionIdentifier, type metadata accessor for UIActionIdentifier);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActionIdentifier and conformance UIActionIdentifier, type metadata accessor for UIActionIdentifier);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSAttributedStringKey()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance AVCaptureDeviceType()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureDeviceType and conformance AVCaptureDeviceType, type metadata accessor for AVCaptureDeviceType);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle((unint64_t *)&lazy protocol witness table cache variable for type AVCaptureDeviceType and conformance AVCaptureDeviceType, type metadata accessor for AVCaptureDeviceType);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIFontDescriptorFeatureKey()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, type metadata accessor for UIFontDescriptorFeatureKey);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle((unint64_t *)&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, type metadata accessor for UIFontDescriptorFeatureKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIFontDescriptorAttributeName()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance NSRunLoopMode@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NSRunLoopMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t NSRunLoopMode.rawValue.getter()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSRunLoopMode()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSRunLoopMode and conformance NSRunLoopMode, type metadata accessor for NSRunLoopMode);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSRunLoopMode and conformance NSRunLoopMode, type metadata accessor for NSRunLoopMode);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void protocol witness for RawRepresentable.rawValue.getter in conformance CACornerMask(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance BNBannerRevocationReason()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type BNBannerRevocationReason and conformance BNBannerRevocationReason, type metadata accessor for BNBannerRevocationReason);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type BNBannerRevocationReason and conformance BNBannerRevocationReason, type metadata accessor for BNBannerRevocationReason);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance AVCaptureReactionType()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureReactionType and conformance AVCaptureReactionType, type metadata accessor for AVCaptureReactionType);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureReactionType and conformance AVCaptureReactionType, type metadata accessor for AVCaptureReactionType);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance SBUISystemApertureElementIdentifier()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type SBUISystemApertureElementIdentifier and conformance SBUISystemApertureElementIdentifier, type metadata accessor for SBUISystemApertureElementIdentifier);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type SBUISystemApertureElementIdentifier and conformance SBUISystemApertureElementIdentifier, type metadata accessor for SBUISystemApertureElementIdentifier);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance CLFCommunicationLimit@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = MEMORY[0x1C87730B0](*a1, a1[1]);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance STBackgroundActivityIdentifier()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle((unint64_t *)&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIActivityType()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActivityType and conformance UIActivityType, type metadata accessor for UIActivityType);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle((unint64_t *)&lazy protocol witness table cache variable for type UIActivityType and conformance UIActivityType, type metadata accessor for UIActivityType);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIBackgroundTaskIdentifier()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance CFUserNotificationRef()
{
  return _CFObject.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CFUserNotificationRef()
{
  return _CFObject.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CFUserNotificationRef()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance CNActionType()
{
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CNActionType and conformance CNActionType, type metadata accessor for CNActionType);
  lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CNActionType and conformance CNActionType, type metadata accessor for CNActionType);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void *protocol witness for RawRepresentable.init(rawValue:) in conformance UIWindowLevel@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double protocol witness for RawRepresentable.rawValue.getter in conformance UIWindowLevel@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIWindowLevel()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance UILayoutPriority()
{
  return specialized _SwiftNewtypeWrapper<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance UILayoutPriority()
{
  specialized _SwiftNewtypeWrapper<>.hash(into:)(*v0);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UILayoutPriority()
{
}

uint64_t base witness table accessor for Equatable in UIControlState()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIControlState and conformance UIControlState, type metadata accessor for UIControlState);
}

{
  return lazy protocol witness table accessor for type UIControlState and conformance UIControlState(&lazy protocol witness table cache variable for type UIControlState and conformance UIControlState, type metadata accessor for UIControlState);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in UIControlState()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIControlState and conformance UIControlState, type metadata accessor for UIControlState);
}

uint64_t base witness table accessor for RawRepresentable in UIControlState()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIControlState and conformance UIControlState, type metadata accessor for UIControlState);
}

uint64_t base witness table accessor for SetAlgebra in UIControlState()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIControlState and conformance UIControlState, type metadata accessor for UIControlState);
}

uint64_t base witness table accessor for Equatable in UIImageSymbolWeight()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIImageSymbolWeight and conformance UIImageSymbolWeight, type metadata accessor for UIImageSymbolWeight);
}

uint64_t base witness table accessor for RawRepresentable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for RawRepresentable in UIFontDescriptorFeatureKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, type metadata accessor for UIFontDescriptorFeatureKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIFontDescriptorFeatureKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, type metadata accessor for UIFontDescriptorFeatureKey);
}

uint64_t base witness table accessor for RawRepresentable in UIFontDescriptorAttributeName()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIFontDescriptorAttributeName()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
}

uint64_t base witness table accessor for Equatable in CNKDeviceOrientation()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CNKDeviceOrientation and conformance CNKDeviceOrientation, type metadata accessor for CNKDeviceOrientation);
}

uint64_t base witness table accessor for RawRepresentable in NSRunLoopMode()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSRunLoopMode and conformance NSRunLoopMode, type metadata accessor for NSRunLoopMode);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSRunLoopMode()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSRunLoopMode and conformance NSRunLoopMode, type metadata accessor for NSRunLoopMode);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance NSRunLoopMode()
{
  return specialized _SwiftNewtypeWrapper<>.hashValue.getter(*v0, MEMORY[0x1E4FBB198]);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance NSRunLoopMode()
{
  return specialized _SwiftNewtypeWrapper<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance NSRunLoopMode()
{
  return specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance UIBackgroundTaskIdentifier()
{
  return specialized _SwiftNewtypeWrapper<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance UIBackgroundTaskIdentifier(int a1)
{
  specialized _SwiftNewtypeWrapper<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance UIBackgroundTaskIdentifier(uint64_t a1)
{
  return specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, *v1);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance CNActionType()
{
  return specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(*v0, MEMORY[0x1E4FBB198]);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance UIWindowLevel()
{
  return specialized _SwiftNewtypeWrapper<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance UIWindowLevel()
{
  specialized _SwiftNewtypeWrapper<>.hash(into:)(*v0);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance UIWindowLevel()
{
  return specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance UILayoutPriority(float *a1, float *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance NSRunLoopMode()
{
  return specialized == infix<A>(_:_:)() & 1;
}

uint64_t base witness table accessor for Equatable in NSRunLoopMode()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSRunLoopMode and conformance NSRunLoopMode, type metadata accessor for NSRunLoopMode);
}

uint64_t base witness table accessor for Equatable in TPNumberPadCharacter()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TPNumberPadCharacter and conformance TPNumberPadCharacter, type metadata accessor for TPNumberPadCharacter);
}

uint64_t base witness table accessor for RawRepresentable in UILayoutPriority()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority, type metadata accessor for UILayoutPriority);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UILayoutPriority()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority, type metadata accessor for UILayoutPriority);
}

uint64_t base witness table accessor for Equatable in UILayoutPriority()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority, type metadata accessor for UILayoutPriority);
}

uint64_t base witness table accessor for RawRepresentable in NSNotificationName()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSNotificationName()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
}

uint64_t base witness table accessor for Equatable in NSNotificationName()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
}

uint64_t base witness table accessor for Equatable in CHRecentCallMediaType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CHRecentCallMediaType and conformance CHRecentCallMediaType, type metadata accessor for CHRecentCallMediaType);
}

uint64_t base witness table accessor for RawRepresentable in BNBannerRevocationReason()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type BNBannerRevocationReason and conformance BNBannerRevocationReason, type metadata accessor for BNBannerRevocationReason);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in BNBannerRevocationReason()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type BNBannerRevocationReason and conformance BNBannerRevocationReason, type metadata accessor for BNBannerRevocationReason);
}

uint64_t base witness table accessor for Equatable in BNBannerRevocationReason()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type BNBannerRevocationReason and conformance BNBannerRevocationReason, type metadata accessor for BNBannerRevocationReason);
}

uint64_t base witness table accessor for RawRepresentable in STBackgroundActivityIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in STBackgroundActivityIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t base witness table accessor for RawRepresentable in UIActivityType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActivityType and conformance UIActivityType, type metadata accessor for UIActivityType);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIActivityType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActivityType and conformance UIActivityType, type metadata accessor for UIActivityType);
}

uint64_t base witness table accessor for Equatable in UIActivityType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActivityType and conformance UIActivityType, type metadata accessor for UIActivityType);
}

uint64_t base witness table accessor for Equatable in CFUserNotificationRef()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef, type metadata accessor for CFUserNotificationRef);
}

uint64_t base witness table accessor for RawRepresentable in CNActionType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CNActionType and conformance CNActionType, type metadata accessor for CNActionType);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in CNActionType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CNActionType and conformance CNActionType, type metadata accessor for CNActionType);
}

uint64_t base witness table accessor for Equatable in CNActionType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CNActionType and conformance CNActionType, type metadata accessor for CNActionType);
}

uint64_t base witness table accessor for RawRepresentable in UIBackgroundTaskIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIBackgroundTaskIdentifier and conformance UIBackgroundTaskIdentifier, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIBackgroundTaskIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIBackgroundTaskIdentifier and conformance UIBackgroundTaskIdentifier, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t base witness table accessor for Equatable in UIBackgroundTaskIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIBackgroundTaskIdentifier and conformance UIBackgroundTaskIdentifier, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t base witness table accessor for RawRepresentable in AVCaptureReactionType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureReactionType and conformance AVCaptureReactionType, type metadata accessor for AVCaptureReactionType);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in AVCaptureReactionType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureReactionType and conformance AVCaptureReactionType, type metadata accessor for AVCaptureReactionType);
}

uint64_t base witness table accessor for Equatable in AVCaptureReactionType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureReactionType and conformance AVCaptureReactionType, type metadata accessor for AVCaptureReactionType);
}

uint64_t base witness table accessor for RawRepresentable in UIActionIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActionIdentifier and conformance UIActionIdentifier, type metadata accessor for UIActionIdentifier);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIActionIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActionIdentifier and conformance UIActionIdentifier, type metadata accessor for UIActionIdentifier);
}

uint64_t base witness table accessor for Equatable in UIActionIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIActionIdentifier and conformance UIActionIdentifier, type metadata accessor for UIActionIdentifier);
}

uint64_t base witness table accessor for Equatable in UIFontDescriptorSymbolicTraits()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorSymbolicTraits and conformance UIFontDescriptorSymbolicTraits, type metadata accessor for UIFontDescriptorSymbolicTraits);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in UIFontDescriptorSymbolicTraits()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorSymbolicTraits and conformance UIFontDescriptorSymbolicTraits, type metadata accessor for UIFontDescriptorSymbolicTraits);
}

uint64_t base witness table accessor for RawRepresentable in UIFontDescriptorSymbolicTraits()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorSymbolicTraits and conformance UIFontDescriptorSymbolicTraits, type metadata accessor for UIFontDescriptorSymbolicTraits);
}

uint64_t base witness table accessor for SetAlgebra in UIFontDescriptorSymbolicTraits()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorSymbolicTraits and conformance UIFontDescriptorSymbolicTraits, type metadata accessor for UIFontDescriptorSymbolicTraits);
}

uint64_t base witness table accessor for RawRepresentable in SBUISystemApertureElementIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type SBUISystemApertureElementIdentifier and conformance SBUISystemApertureElementIdentifier, type metadata accessor for SBUISystemApertureElementIdentifier);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in SBUISystemApertureElementIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type SBUISystemApertureElementIdentifier and conformance SBUISystemApertureElementIdentifier, type metadata accessor for SBUISystemApertureElementIdentifier);
}

uint64_t base witness table accessor for Equatable in SBUISystemApertureElementIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type SBUISystemApertureElementIdentifier and conformance SBUISystemApertureElementIdentifier, type metadata accessor for SBUISystemApertureElementIdentifier);
}

uint64_t base witness table accessor for Equatable in TUConversationBroadcastingAttributes()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TUConversationBroadcastingAttributes and conformance TUConversationBroadcastingAttributes, type metadata accessor for TUConversationBroadcastingAttributes);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in TUConversationBroadcastingAttributes()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TUConversationBroadcastingAttributes and conformance TUConversationBroadcastingAttributes, type metadata accessor for TUConversationBroadcastingAttributes);
}

uint64_t base witness table accessor for RawRepresentable in TUConversationBroadcastingAttributes()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TUConversationBroadcastingAttributes and conformance TUConversationBroadcastingAttributes, type metadata accessor for TUConversationBroadcastingAttributes);
}

uint64_t base witness table accessor for SetAlgebra in TUConversationBroadcastingAttributes()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TUConversationBroadcastingAttributes and conformance TUConversationBroadcastingAttributes, type metadata accessor for TUConversationBroadcastingAttributes);
}

uint64_t base witness table accessor for Equatable in UIImageSymbolScale()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIImageSymbolScale and conformance UIImageSymbolScale, type metadata accessor for UIImageSymbolScale);
}

uint64_t base witness table accessor for Hashable in CFUserNotificationRef()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef, type metadata accessor for CFUserNotificationRef);
}

uint64_t base witness table accessor for Equatable in STBackgroundActivityIdentifier()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t base witness table accessor for Equatable in UIFontDescriptorAttributeName()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
}

uint64_t base witness table accessor for Equatable in UIFontDescriptorFeatureKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, type metadata accessor for UIFontDescriptorFeatureKey);
}

uint64_t base witness table accessor for Equatable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance UIWindowLevel(double *a1, double *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

BOOL specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL specialized == infix<A>(_:_:)(float a1, float a2)
{
  return a1 == a2;
}

BOOL specialized == infix<A>(_:_:)(double a1, double a2)
{
  return a1 == a2;
}

uint64_t specialized == infix<A>(_:_:)()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    LOBYTE(v0) = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

{
  char v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  uint64_t v1 = 0xED0000676F64746FLL;
  OUTLINED_FUNCTION_55_2();
  char v4 = v3 & 0xFFFFFFFFFFFFLL | 0x685F000000000000;
  uint64_t v6 = v5;
  char v7 = 0x685F726577617264;
  uint64_t v8 = 0xED0000676F64746FLL;
  uint64_t v9 = "drawer_effects-selected";
  switch(v6)
  {
    case 1:
      char v7 = OUTLINED_FUNCTION_38_1();
      uint64_t v8 = 0xEE00737463656666;
      break;
    case 2:
      char v7 = 0xD000000000000017;
      uint64_t v8 = 0x80000001C3790B00;
      break;
    case 3:
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_70();
      break;
    case 4:
      uint64_t v8 = 0x80000001C3790B30;
      char v7 = 0xD000000000000016;
      break;
    case 5:
      char v7 = 0x615F726577617264;
      uint64_t v10 = 1869177973;
      goto LABEL_9;
    case 6:
      char v7 = 0x675F726577617264;
      uint64_t v8 = 0xEB00000000776F6CLL;
      break;
    case 7:
      char v7 = 0x6C6C61632D646E65;
      uint64_t v10 = 1667329375;
LABEL_9:
      uint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_37_4();
      uint64_t v1 = 0xEE00737463656666;
      break;
    case 2:
      char v4 = 0xD000000000000017;
      uint64_t v1 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      break;
    case 3:
      OUTLINED_FUNCTION_37_4();
      OUTLINED_FUNCTION_71_0();
      break;
    case 4:
      OUTLINED_FUNCTION_80_0();
      char v4 = 0xD000000000000016;
      break;
    case 5:
      OUTLINED_FUNCTION_55_2();
      char v4 = v11 & 0xFFFFFFFFFFFFLL | 0x615F000000000000;
      unint64_t v12 = 1869177973;
      goto LABEL_18;
    case 6:
      OUTLINED_FUNCTION_55_2();
      char v4 = v13 & 0xFFFFFFFFFFFFLL | 0x675F000000000000;
      uint64_t v1 = 0xEB00000000776F6CLL;
      break;
    case 7:
      char v4 = 0x6C6C61632D646E65;
      unint64_t v12 = 1667329375;
LABEL_18:
      uint64_t v1 = v12 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  if (v7 == v4 && v8 == v1) {
    OUTLINED_FUNCTION_66_0();
  }
  else {
    uint64_t v0 = OUTLINED_FUNCTION_33_6();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    char v5 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_30_15();
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)()
{
}

uint64_t specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)()
{
  return static Hasher._hash(seed:_:)();
}

void specialized _SwiftNewtypeWrapper<>.hash(into:)(float a1)
{
  if ((LODWORD(a1) & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = LODWORD(a1);
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

void specialized _SwiftNewtypeWrapper<>.hash(into:)(double a1)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t specialized _SwiftNewtypeWrapper<>.hashValue.getter(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

void type metadata accessor for FZHandleIDStatus(uint64_t a1)
{
}

void type metadata accessor for UIWindowLevel(uint64_t a1)
{
}

void type metadata accessor for TUCallDisconnectedReason(uint64_t a1)
{
}

void type metadata accessor for CFNotificationName(uint64_t a1)
{
}

void type metadata accessor for UIApplicationOpenExternalURLOptionsKey(uint64_t a1)
{
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CAFrameRateRange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CAFrameRateRange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for CAFrameRateRange(uint64_t a1)
{
}

void type metadata accessor for AVCaptureDeviceType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for AudioStreamPacketDescription(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioStreamPacketDescription(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for AudioStreamPacketDescription(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for CFStringRef(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t base witness table accessor for RawRepresentable in AVCaptureDeviceType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureDeviceType and conformance AVCaptureDeviceType, type metadata accessor for AVCaptureDeviceType);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in AVCaptureDeviceType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureDeviceType and conformance AVCaptureDeviceType, type metadata accessor for AVCaptureDeviceType);
}

uint64_t base witness table accessor for Equatable in AVCaptureDeviceType()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type AVCaptureDeviceType and conformance AVCaptureDeviceType, type metadata accessor for AVCaptureDeviceType);
}

uint64_t base witness table accessor for RawRepresentable in UIApplicationOpenExternalURLOptionsKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIApplicationOpenExternalURLOptionsKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
}

uint64_t base witness table accessor for Equatable in TUCallDisconnectedReason()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type TUCallDisconnectedReason and conformance TUCallDisconnectedReason, type metadata accessor for TUCallDisconnectedReason);
}

uint64_t base witness table accessor for RawRepresentable in UIWindowLevel()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel, type metadata accessor for UIWindowLevel);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIWindowLevel()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel, type metadata accessor for UIWindowLevel);
}

uint64_t base witness table accessor for Equatable in UIWindowLevel()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel, type metadata accessor for UIWindowLevel);
}

uint64_t base witness table accessor for Equatable in UIApplicationOpenExternalURLOptionsKey()
{
  return lazy protocol witness table accessor for type UIFontTextStyle and conformance UIFontTextStyle(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
}

unint64_t lazy protocol witness table accessor for type CGFloat and conformance CGFloat()
{
  unint64_t result = lazy protocol witness table cache variable for type CGFloat and conformance CGFloat;
  if (!lazy protocol witness table cache variable for type CGFloat and conformance CGFloat)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CGFloat and conformance CGFloat);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CGFloat and conformance CGFloat;
  if (!lazy protocol witness table cache variable for type CGFloat and conformance CGFloat)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CGFloat and conformance CGFloat);
  }
  return result;
}

void SystemApertureOngoingTelephonyControlsView.leadingView.getter()
{
}

uint64_t ConversationControlsContext.debugDescription.getter(char a1)
{
  if (!a1) {
    return 0x70416D6574737973;
  }
  if (a1 == 1) {
    return 0x72656E6E6162;
  }
  return 0x6C6C61436E69;
}

BOOL static ConversationControlsContext.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ConversationControlsContext.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsContext(char *a1, char *a2)
{
  return static ConversationControlsContext.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ConversationControlsContext()
{
  return ConversationControlsContext.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsContext(uint64_t a1)
{
  ConversationControlsContext.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConversationControlsContext()
{
  return ConversationControlsContext.debugDescription.getter(*v0);
}

uint64_t ConversationControlsSizeClass.description.getter(uint64_t a1)
{
  uint64_t result = 4478280;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6E6F6973736573;
      break;
    case 2:
      uint64_t result = 0x656369746F6ELL;
      break;
    case 3:
      uint64_t result = 0x676F6C616964;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1C2FE1CECLL);
  }
  return result;
}

unint64_t ConversationControlsSizeClass.init(rawValue:)(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  uint64_t v3 = 0x64656E696F6ALL;
  if (a1)
  {
    OUTLINED_FUNCTION_93_0();
    if (v4) {
      uint64_t v6 = 1952867692;
    }
    else {
      uint64_t v6 = 0x6E456172656D6163;
    }
    if (v4) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xED000064656C6261;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
    uint64_t v6 = 0x64656E696F6ALL;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_93_0();
    if (v8) {
      uint64_t v3 = 1952867692;
    }
    else {
      uint64_t v3 = 0x6E456172656D6163;
    }
    if (v8) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = 0xED000064656C6261;
    }
  }
  else
  {
    unint64_t v10 = 0xE600000000000000;
  }
  if (v6 == v3 && v7 == v10) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;

  uint64_t v3 = 1852403562;
  if (a1)
  {
    OUTLINED_FUNCTION_93_0();
    if (v4) {
      uint64_t v6 = 1702260589;
    }
    else {
      uint64_t v6 = 0x50646E416E696F6ALL;
    }
    if (v4) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xEB0000000079616CLL;
    }
  }
  else
  {
    unint64_t v7 = 0xE400000000000000;
    uint64_t v6 = 1852403562;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_93_0();
    if (v8) {
      uint64_t v3 = 1702260589;
    }
    else {
      uint64_t v3 = 0x50646E416E696F6ALL;
    }
    if (v8) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = 0xEB0000000079616CLL;
    }
  }
  else
  {
    unint64_t v10 = 0xE400000000000000;
  }
  if (v6 == v3 && v7 == v10) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  uint64_t v3 = (a1 & 1) == 0;
  if (a1) {
    char v4 = 0xD000000000000026;
  }
  else {
    char v4 = 0xD00000000000002ALL;
  }
  if (v3) {
    unint64_t v5 = 0x80000001C3790A60;
  }
  else {
    unint64_t v5 = 0x80000001C3790A90;
  }
  if (a2) {
    uint64_t v6 = 0xD000000000000026;
  }
  else {
    uint64_t v6 = 0xD00000000000002ALL;
  }
  if (a2) {
    unint64_t v7 = 0x80000001C3790A90;
  }
  else {
    unint64_t v7 = 0x80000001C3790A60;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  uint64_t v3 = VideoReaction.rawValue.getter(a1);
  char v4 = VideoReaction.rawValue.getter(a2);
  unint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8) {
    unint64_t v10 = 1;
  }
  else {
    unint64_t v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10 & 1;
}

{
  char v2;
  BOOL v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  uint64_t v3 = (a1 & 1) == 0;
  if (a1) {
    char v4 = 0x6765746E696E6F6ELL;
  }
  else {
    char v4 = 0x7461726765746E69;
  }
  if (v3) {
    unint64_t v5 = 0xEA00000000006465;
  }
  else {
    unint64_t v5 = 0xED00006465746172;
  }
  if (a2) {
    uint64_t v6 = 0x6765746E696E6F6ELL;
  }
  else {
    uint64_t v6 = 0x7461726765746E69;
  }
  if (a2) {
    unint64_t v7 = 0xED00006465746172;
  }
  else {
    unint64_t v7 = 0xEA00000000006465;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL specialized == infix<A>(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t specialized == infix<A>(_:_:)(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1701736302;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x746365726964;
    }
    else {
      uint64_t v5 = 0x79616C6572;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v5 = 1701736302;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x746365726964;
    }
    else {
      uint64_t v3 = 0x79616C6572;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE600000000000000;
    }
    else {
      unint64_t v7 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v3 = 0x656C746974;
  int v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x656C746974;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x41746E6572727563;
      int v4 = 0xEF79746976697463;
      break;
    case 2:
      unint64_t v6 = 0x7069636974726170;
      unint64_t v7 = 1937010273;
      goto LABEL_8;
    case 3:
      unint64_t v6 = 0x6572616873;
      break;
    case 4:
      unint64_t v6 = 0x6143656C67676F74;
      char v8 = 0x736E6F697470;
      goto LABEL_10;
    case 5:
      int v4 = 0x80000001C3790F10;
      unint64_t v6 = 0xD000000000000017;
      break;
    case 6:
      unint64_t v6 = 0x7373654D6E65706FLL;
      unint64_t v7 = 1936025441;
LABEL_8:
      int v4 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 7:
      unint64_t v6 = 0x646E416B636F6C62;
      char v8 = 0x74726F706552;
LABEL_10:
      int v4 = v8 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    case 8:
      int v4 = 0xE800000000000000;
      unint64_t v6 = 0x656C746954747470;
      break;
    case 9:
      unint64_t v6 = 0x545450657661656CLL;
      int v4 = 0xEF6C656E6E616843;
      break;
    case 10:
      unint64_t v6 = 0x415454506E65706FLL;
      int v4 = 0xEA00000000007070;
      break;
    default:
      break;
  }
  unint64_t v9 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x41746E6572727563;
      unint64_t v9 = 0xEF79746976697463;
      break;
    case 2:
      uint64_t v3 = 0x7069636974726170;
      unint64_t v10 = 1937010273;
      goto LABEL_21;
    case 3:
      uint64_t v3 = 0x6572616873;
      break;
    case 4:
      uint64_t v3 = 0x6143656C67676F74;
      BOOL v11 = 0x736E6F697470;
      goto LABEL_23;
    case 5:
      OUTLINED_FUNCTION_81();
      uint64_t v3 = 0xD000000000000017;
      break;
    case 6:
      uint64_t v3 = 0x7373654D6E65706FLL;
      unint64_t v10 = 1936025441;
LABEL_21:
      unint64_t v9 = v10 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 7:
      uint64_t v3 = 0x646E416B636F6C62;
      BOOL v11 = 0x74726F706552;
LABEL_23:
      unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    case 8:
      unint64_t v9 = 0xE800000000000000;
      uint64_t v3 = 0x656C746954747470;
      break;
    case 9:
      uint64_t v3 = 0x545450657661656CLL;
      unint64_t v9 = 0xEF6C656E6E616843;
      break;
    case 10:
      uint64_t v3 = 0x415454506E65706FLL;
      unint64_t v9 = 0xEA00000000007070;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v9) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0xEF6E6F6973736553;
  int v4 = 0x65756E69746E6F63;
  uint64_t v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0x736553657661656CLL;
    }
    else {
      unint64_t v6 = 0x6E6F697463416F6ELL;
    }
    if (v5 == 1) {
      unint64_t v7 = 0xEC0000006E6F6973;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0x65756E69746E6F63;
    unint64_t v7 = 0xEF6E6F6973736553;
  }
  if (a2)
  {
    if (a2 == 1) {
      int v4 = 0x736553657661656CLL;
    }
    else {
      int v4 = 0x6E6F697463416F6ELL;
    }
    if (a2 == 1) {
      uint64_t v3 = 0xEC0000006E6F6973;
    }
    else {
      uint64_t v3 = 0xE800000000000000;
    }
  }
  if (v6 == v4 && v7 == v3) {
    OUTLINED_FUNCTION_66_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_33_6();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;

  uint64_t v3 = 0xEB00000000656C62;
  int v4 = 0x616C696176616E75;
  uint64_t v5 = a1;
  unint64_t v6 = 0x616C696176616E75;
  unint64_t v7 = 0xEB00000000656C62;
  switch(v5)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v6 = 0x7964616552746F6ELL;
      break;
    case 2:
      unint64_t v6 = 0xD000000000000014;
      unint64_t v7 = 0x80000001C3790E10;
      break;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      unint64_t v6 = 0x7964616572;
      break;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      char v8 = 1836212599;
      goto LABEL_10;
    case 5:
      unint64_t v6 = 0x6552657669746361;
      unint64_t v7 = 0xEF676E6964726F63;
      break;
    case 6:
      unint64_t v7 = 0x80000001C3790E50;
      unint64_t v6 = 0xD000000000000013;
      break;
    case 7:
      unint64_t v6 = 0x6F4364726F636572;
      unint64_t v7 = 0xEE006574656C706DLL;
      break;
    case 8:
      unint64_t v7 = 0xE700000000000000;
      char v8 = 1684956531;
LABEL_10:
      unint64_t v6 = v8 | 0x676E6900000000;
      break;
    case 9:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v6 = 1953391987;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0xE800000000000000;
      int v4 = 0x7964616552746F6ELL;
      break;
    case 2:
      int v4 = 0xD000000000000014;
      uint64_t v3 = 0x80000001C3790E10;
      break;
    case 3:
      uint64_t v3 = 0xE500000000000000;
      int v4 = 0x7964616572;
      break;
    case 4:
      uint64_t v3 = 0xE700000000000000;
      unint64_t v9 = 1836212599;
      goto LABEL_21;
    case 5:
      int v4 = 0x6552657669746361;
      uint64_t v3 = 0xEF676E6964726F63;
      break;
    case 6:
      OUTLINED_FUNCTION_80_0();
      int v4 = 0xD000000000000013;
      break;
    case 7:
      int v4 = 0x6F4364726F636572;
      uint64_t v3 = 0xEE006574656C706DLL;
      break;
    case 8:
      uint64_t v3 = 0xE700000000000000;
      unint64_t v9 = 1684956531;
LABEL_21:
      int v4 = v9 | 0x676E6900000000;
      break;
    case 9:
      uint64_t v3 = 0xE400000000000000;
      int v4 = 1953391987;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    OUTLINED_FUNCTION_66_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_33_6();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  uint64_t v3 = 0xEE00646574616572;
  int v4 = 0x43796C6C61636F6CLL;
  uint64_t v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0x64657469766E69;
    }
    else {
      unint64_t v6 = 0x6574736576726168;
    }
    if (v5 == 1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xE900000000000064;
    }
  }
  else
  {
    unint64_t v6 = 0x43796C6C61636F6CLL;
    unint64_t v7 = 0xEE00646574616572;
  }
  if (a2)
  {
    if (a2 == 1) {
      int v4 = 0x64657469766E69;
    }
    else {
      int v4 = 0x6574736576726168;
    }
    if (a2 == 1) {
      uint64_t v3 = 0xE700000000000000;
    }
    else {
      uint64_t v3 = 0xE900000000000064;
    }
  }
  if (v6 == v4 && v7 == v3) {
    OUTLINED_FUNCTION_66_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_33_6();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const char *v7;
  unint64_t v8;
  const char *v9;
  const char *v10;
  const char *v11;
  unint64_t v12;
  const char *v13;

  uint64_t v3 = 0xD000000000000011;
  int v4 = (unint64_t)"conversationkit-info";
  uint64_t v5 = 0x80000001C3790B90;
  unint64_t v6 = a1;
  unint64_t v7 = "drawer_open-messages";
  char v8 = 0xD000000000000011;
  unint64_t v9 = "drawer_mute-audio";
  unint64_t v10 = "drawer_toggle-video";
  switch(v6)
  {
    case 1:
      char v8 = 0xD000000000000013;
      BOOL v11 = "drawer_leave-call";
      goto LABEL_6;
    case 2:
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_71_0();
      break;
    case 3:
      BOOL v11 = "drawer_toggle-video";
      goto LABEL_6;
    case 4:
      char v8 = 0xD000000000000014;
      BOOL v11 = "drawer_mute-audio";
LABEL_6:
      uint64_t v5 = (unint64_t)v11 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v12 = v4 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      v3 += 2;
      uint64_t v13 = v10 - 32;
      goto LABEL_12;
    case 2:
      OUTLINED_FUNCTION_37_4();
      OUTLINED_FUNCTION_70();
      break;
    case 3:
      uint64_t v13 = v9 - 32;
      goto LABEL_12;
    case 4:
      v3 += 3;
      uint64_t v13 = v7 - 32;
LABEL_12:
      unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v8 == v3 && v5 == v12) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

{
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  const char *v8;

  uint64_t v3 = 0xE900000000000079;
  int v4 = 0x616C706572616873;
  uint64_t v5 = a1;
  unint64_t v6 = 0x616C706572616873;
  unint64_t v7 = 0xE900000000000079;
  char v8 = "shareplay-sharebutton";
  switch(v5)
  {
    case 1:
      unint64_t v7 = 0x80000001C3790C30;
      unint64_t v6 = 0xD000000000000015;
      break;
    case 2:
      unint64_t v6 = OUTLINED_FUNCTION_68_2();
      unint64_t v7 = 0xEB00000000650079;
      break;
    case 3:
      unint64_t v6 = 0xD000000000000017;
      unint64_t v7 = 0x80000001C3790C60;
      break;
    case 4:
      unint64_t v6 = OUTLINED_FUNCTION_68_2();
      unint64_t v7 = 0xEF7070612D650079;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v3 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      int v4 = 0xD000000000000015;
      break;
    case 2:
      OUTLINED_FUNCTION_67();
      uint64_t v3 = 0xEB00000000650079;
      break;
    case 3:
      OUTLINED_FUNCTION_80_0();
      break;
    case 4:
      OUTLINED_FUNCTION_67();
      uint64_t v3 = 0xEF7070612D650079;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    OUTLINED_FUNCTION_66_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_33_6();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))ImageNames.Staging.rawValue.getter);
}

{
  return specialized == infix<A>(_:_:)(a1, a2, (uint64_t (*)(void))ImageNames.ParticipantView.rawValue.getter);
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    OUTLINED_FUNCTION_24_8();
  }
  else {
    LOBYTE(v5) = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ConversationControlsSizeClass()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationControlsSizeClass(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance ConversationControlsSizeClass@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = ConversationControlsSizeClass.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ConversationControlsSizeClass()
{
  return ConversationControlsSizeClass.description.getter(*v0);
}

void RejectedRemoteControlRequesetContext.Reason.hash(into:)()
{
}

Swift::Int RejectedRemoteControlRequesetContext.Reason.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance RejectedRemoteControlRequesetContext.Reason()
{
  return RejectedRemoteControlRequesetContext.Reason.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance RejectedRemoteControlRequesetContext.Reason()
{
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RejectedRemoteControlRequesetContext.Reason()
{
  return Hasher._finalize()();
}

unint64_t RejectedRemoteControlRequesetContext.description.getter()
{
  return 0xD000000000000040;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance RejectedRemoteControlRequesetContext()
{
  return 0xD000000000000040;
}

unint64_t RejectedRemoteControlRequesetContext.Reason.description.getter()
{
  return 0xD000000000000011;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance RejectedRemoteControlRequesetContext.Reason()
{
  return 0xD000000000000011;
}

Swift::Double __swiftcall ConversationControlsType.dismissTimerDuration(inCallControls:)(Swift::Bool inCallControls)
{
  outlined init with copy of ConversationControlsType(v1, (uint64_t)&v19);
  switch(v23)
  {
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:

      goto LABEL_24;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4:
      goto LABEL_9;
    case 5:
      swift_unknownObjectRelease();
      goto LABEL_24;
    case 6:
      if (!(v21 | v22 | (unint64_t)v19 | v20 | *((void *)&v19 + 1))) {
        goto LABEL_24;
      }
      uint64_t v9 = v21 | v22 | v20 | *((void *)&v19 + 1);
      if ((void)v19 == 1 && v9 == 0) {
        goto LABEL_24;
      }
      if ((void)v19 == 2 && v9 == 0)
      {
LABEL_4:
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_50();
        (*(void (**)(void))(v6 + 928))();
        return v7;
      }
      if ((void)v19 == 3 && !v9) {
        goto LABEL_9;
      }
      if ((void)v19 == 4 && !v9) {
        goto LABEL_24;
      }
      if ((void)v19 == 5 && !v9) {
        goto LABEL_9;
      }
      BOOL v13 = (v19 & 0xFFFFFFFFFFFFFFFELL) == 8 || (v19 & 0xFFFFFFFFFFFFFFFELL) == 6;
      if (v13 && !v9) {
        goto LABEL_9;
      }
      if ((void)v19 == 10 && !v9) {
        goto LABEL_24;
      }
      if ((void)v19 != 11 || v9)
      {
        if ((void)v19 == 12 && !v9)
        {
LABEL_24:
          BOOL v8 = one-time initialization token for shared == -1;
          if (inCallControls)
          {
            if (one-time initialization token for shared == -1)
            {
LABEL_26:
              OUTLINED_FUNCTION_50();
              (*(void (**)(void))(v12 + 920))();
              return v7;
            }
LABEL_59:
            swift_once();
            goto LABEL_26;
          }
        }
        else
        {
          if ((unint64_t)(v19 - 13) <= 1 && !v9) {
            goto LABEL_46;
          }
          if ((unint64_t)(v19 - 15) <= 3 && !v9 || (void)v19 == 19 && !v9) {
            goto LABEL_9;
          }
          if ((void)v19 == 20 && !v9)
          {
LABEL_46:
            if (one-time initialization token for shared != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_50();
            (*(void (**)(void))(v15 + 944))();
            return v7;
          }
          if ((unint64_t)(v19 - 21) > 2 || v9)
          {
            BOOL v8 = one-time initialization token for shared == -1;
            if (inCallControls)
            {
              if (one-time initialization token for shared == -1) {
                goto LABEL_26;
              }
              goto LABEL_59;
            }
          }
          else
          {
LABEL_9:
            BOOL v8 = one-time initialization token for shared == -1;
          }
        }
        if (!v8) {
          swift_once();
        }
        OUTLINED_FUNCTION_50();
        return (*(double (**)(void))(v16 + 912))();
      }
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v14 + 968))();
      return v7;
    default:
      outlined init with take of Notice(&v19, (uint64_t)v18);
      __swift_project_boxed_opaque_existential_1(v18, (uint64_t)v18[3]);
      uint64_t v3 = OUTLINED_FUNCTION_92_0();
      double v5 = v4(v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      return v5;
  }
}

uint64_t ConversationControlsType.isInterruptable.getter()
{
  outlined init with copy of ConversationControlsType(v0, (uint64_t)v6);
  int v1 = v7;
  outlined destroy of ConversationControlsType((uint64_t)v6);
  if (v1 == 5)
  {
    char v2 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_76();
    unsigned __int8 v7 = v3;
    char v4 = static ConversationControlsType.== infix(_:_:)(v0);
    outlined destroy of ConversationControlsType((uint64_t)v6);
    char v2 = v4 ^ 1;
  }
  return v2 & 1;
}

uint64_t static ConversationControlsType.== infix(_:_:)(uint64_t a1)
{
  outlined init with copy of ConversationControlsType(a1, (uint64_t)&v32);
  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  outlined init with copy of ConversationControlsType(v1, v2);
  unsigned __int8 v3 = (void *)v32;
  switch(v33)
  {
    case 1:
      if (v37 != 1) {
        goto LABEL_40;
      }
      if (!*((void *)&v32 + 1))
      {
        if (!v35.i64[0]) {
          goto LABEL_65;
        }
        goto LABEL_63;
      }
      if (!v35.i64[0])
      {
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_196;
      }
      BOOL v6 = (void)v32 == v34 && *((void *)&v32 + 1) == v35.i64[0];
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_65:
        unsigned __int8 v5 = 1;
      }
      else
      {
LABEL_21:
        unsigned __int8 v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return v5 & 1;
    case 2:
      if (v37 == 2)
      {
        char v4 = (void *)v34;
        unsigned __int8 v5 = objc_msgSend((id)v32, sel_isEqual_, v34);

        return v5 & 1;
      }

      goto LABEL_195;
    case 3:
      if (v37 != 3)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_195;
      }
      if ((void)v32 != v34 || *((void *)&v32 + 1) != v35.i64[0]) {
        goto LABEL_21;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_65;
    case 4:
      if (v37 != 4) {
        goto LABEL_195;
      }
      goto LABEL_65;
    case 5:
      if (v37 != 5)
      {
        swift_unknownObjectRelease();
        goto LABEL_195;
      }
      uint64_t v8 = *((void *)&v32 + 1);
      uint64_t v9 = v35.i64[0];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(ObjectType, v8);
      uint64_t v13 = v12;
      uint64_t v14 = swift_getObjectType();
      if (v11 == (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v14, v9) && v13 == v15) {
        unsigned __int8 v5 = 1;
      }
      else {
        unsigned __int8 v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v5 & 1;
    case 6:
      OUTLINED_FUNCTION_83_1();
      if (v20)
      {
        uint64_t v21 = v19 | v17 | v18;
        if (v3 == (void *)1 && v21 == 0)
        {
          OUTLINED_FUNCTION_9_7();
          if (!v6 || v34 != 1) {
            goto LABEL_195;
          }
        }
        else if (v3 != (void *)2 || v21)
        {
          if (v3 != (void *)3 || v21)
          {
            if (v3 != (void *)4 || v21)
            {
              if (v3 != (void *)5 || v21)
              {
                if (v3 != (void *)6 || v21)
                {
                  if (v3 != (void *)7 || v21)
                  {
                    if (v3 != (void *)8 || v21)
                    {
                      if (v3 != (void *)9 || v21)
                      {
                        if (v3 != (void *)10 || v21)
                        {
                          if (v3 != (void *)11 || v21)
                          {
                            if (v3 != (void *)12 || v21)
                            {
                              if (v3 != (void *)13 || v21)
                              {
                                if (v3 != (void *)14 || v21)
                                {
                                  if (v3 != (void *)15 || v21)
                                  {
                                    if (v3 != (void *)16 || v21)
                                    {
                                      if (v3 != (void *)17 || v21)
                                      {
                                        if (v3 != (void *)18 || v21)
                                        {
                                          if (v3 != (void *)19 || v21)
                                          {
                                            if (v3 != (void *)20 || v21)
                                            {
                                              if (v3 != (void *)21 || v21)
                                              {
                                                if (v3 != (void *)22 || v21)
                                                {
                                                  if (v3 != (void *)23 || v21)
                                                  {
                                                    if (v3 != (void *)24 || v21)
                                                    {
                                                      OUTLINED_FUNCTION_9_7();
                                                      if (!v6 || v34 != 25) {
                                                        goto LABEL_195;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      OUTLINED_FUNCTION_9_7();
                                                      if (!v6 || v34 != 24) {
                                                        goto LABEL_195;
                                                      }
                                                    }
                                                  }
                                                  else
                                                  {
                                                    OUTLINED_FUNCTION_9_7();
                                                    if (!v6 || v34 != 23) {
                                                      goto LABEL_195;
                                                    }
                                                  }
                                                }
                                                else
                                                {
                                                  OUTLINED_FUNCTION_9_7();
                                                  if (!v6 || v34 != 22) {
                                                    goto LABEL_195;
                                                  }
                                                }
                                              }
                                              else
                                              {
                                                OUTLINED_FUNCTION_9_7();
                                                if (!v6 || v34 != 21) {
                                                  goto LABEL_195;
                                                }
                                              }
                                            }
                                            else
                                            {
                                              OUTLINED_FUNCTION_9_7();
                                              if (!v6 || v34 != 20) {
                                                goto LABEL_195;
                                              }
                                            }
                                          }
                                          else
                                          {
                                            OUTLINED_FUNCTION_9_7();
                                            if (!v6 || v34 != 19) {
                                              goto LABEL_195;
                                            }
                                          }
                                        }
                                        else
                                        {
                                          OUTLINED_FUNCTION_9_7();
                                          if (!v6 || v34 != 18) {
                                            goto LABEL_195;
                                          }
                                        }
                                      }
                                      else
                                      {
                                        OUTLINED_FUNCTION_9_7();
                                        if (!v6 || v34 != 17) {
                                          goto LABEL_195;
                                        }
                                      }
                                    }
                                    else
                                    {
                                      OUTLINED_FUNCTION_9_7();
                                      if (!v6 || v34 != 16) {
                                        goto LABEL_195;
                                      }
                                    }
                                  }
                                  else
                                  {
                                    OUTLINED_FUNCTION_9_7();
                                    if (!v6 || v34 != 15) {
                                      goto LABEL_195;
                                    }
                                  }
                                }
                                else
                                {
                                  OUTLINED_FUNCTION_9_7();
                                  if (!v6 || v34 != 14) {
                                    goto LABEL_195;
                                  }
                                }
                              }
                              else
                              {
                                OUTLINED_FUNCTION_9_7();
                                if (!v6 || v34 != 13) {
                                  goto LABEL_195;
                                }
                              }
                            }
                            else
                            {
                              OUTLINED_FUNCTION_9_7();
                              if (!v6 || v34 != 12) {
                                goto LABEL_195;
                              }
                            }
                          }
                          else
                          {
                            OUTLINED_FUNCTION_9_7();
                            if (!v6 || v34 != 11) {
                              goto LABEL_195;
                            }
                          }
                        }
                        else
                        {
                          OUTLINED_FUNCTION_9_7();
                          if (!v6 || v34 != 10) {
                            goto LABEL_195;
                          }
                        }
                      }
                      else
                      {
                        OUTLINED_FUNCTION_9_7();
                        if (!v6 || v34 != 9) {
                          goto LABEL_195;
                        }
                      }
                    }
                    else
                    {
                      OUTLINED_FUNCTION_9_7();
                      if (!v6 || v34 != 8) {
                        goto LABEL_195;
                      }
                    }
                  }
                  else
                  {
                    OUTLINED_FUNCTION_9_7();
                    if (!v6 || v34 != 7) {
                      goto LABEL_195;
                    }
                  }
                }
                else
                {
                  OUTLINED_FUNCTION_9_7();
                  if (!v6 || v34 != 6) {
                    goto LABEL_195;
                  }
                }
              }
              else
              {
                OUTLINED_FUNCTION_9_7();
                if (!v6 || v34 != 5) {
                  goto LABEL_195;
                }
              }
            }
            else
            {
              OUTLINED_FUNCTION_9_7();
              if (!v6 || v34 != 4) {
                goto LABEL_195;
              }
            }
          }
          else
          {
            OUTLINED_FUNCTION_9_7();
            if (!v6 || v34 != 3) {
              goto LABEL_195;
            }
          }
        }
        else
        {
          OUTLINED_FUNCTION_9_7();
          if (!v6 || v34 != 2) {
            goto LABEL_195;
          }
        }
        OUTLINED_FUNCTION_36_1(v36, v35);
        if (!v26) {
          goto LABEL_65;
        }
        goto LABEL_195;
      }
      OUTLINED_FUNCTION_9_7();
      if (!v6) {
        goto LABEL_195;
      }
      int8x16_t v25 = vorrq_s8(v35, v36);
      if (*(void *)&vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)) | v34) {
        goto LABEL_195;
      }
      goto LABEL_65;
    default:
      if (v37)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_195:
        outlined destroy of ConversationControlsType((uint64_t)&v34);
LABEL_196:
        unsigned __int8 v5 = 0;
      }
      else
      {
        outlined init with take of Notice(&v32, (uint64_t)v29);
        outlined init with take of Notice((long long *)&v34, (uint64_t)v28);
        uint64_t v23 = v30;
        uint64_t v24 = v31;
        __swift_project_boxed_opaque_existential_1(v29, v30);
        unsigned __int8 v5 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v24 + 224))(v28, v23, v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      return v5 & 1;
  }
}

uint64_t ConversationControlsType.exclusiveSizeClass.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v22[0]);
  uint64_t result = 0;
  switch(v23)
  {
    case 3:
    case 5:
      outlined destroy of ConversationControlsType((uint64_t)v22);
      return 0;
    case 4:
      return result;
    case 6:
      OUTLINED_FUNCTION_25_2();
      if (!v13) {
        return 0;
      }
      uint64_t v14 = v12 | v10 | v11;
      if (v9 == 1 && v14 == 0) {
        return 0;
      }
      unint64_t v16 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if (((v9 & 0xFFFFFFFFFFFFFFFELL) == 4 || v16 == 2) && v14 == 0) {
        return 0;
      }
      if ((v9 == 10 || v16 == 8 || v16 == 6) && v14 == 0) {
        return 0;
      }
      if ((unint64_t)(v9 - 11) <= 1 && !v14) {
        return 3;
      }
      if ((unint64_t)(v9 - 13) <= 1 && !v14) {
        return 0;
      }
      if ((unint64_t)(v9 - 15) <= 4 && !v14) {
        return 0;
      }
      if (v9 == 20 && !v14) {
        return 0;
      }
      if ((unint64_t)(v9 - 21) > 2 || v14) {
        return 3;
      }
      return 0;
    default:
      outlined destroy of ConversationControlsType((uint64_t)v22);
      return 0;
  }
}

void ConversationControlsType.canShowOverICS.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_52_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v12 = static Features.shared;
  outlined init with copy of ConversationControlsType(v4, (uint64_t)&v22);
  switch(v25)
  {
    case 0:
      outlined init with take of Notice((long long *)&v22, (uint64_t)v21);
      OUTLINED_FUNCTION_49_3();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
      if (swift_dynamicCast())
      {
        outlined destroy of SystemUpdateNotice((uint64_t)v11, (void (*)(void))type metadata accessor for AccountUpdateNotice);
        OUTLINED_FUNCTION_49_3();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
LABEL_20:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_49_3();
      if (OUTLINED_FUNCTION_48_4())
      {
        outlined destroy of SystemUpdateNotice(v2, (void (*)(void))type metadata accessor for SessionActionNotice);
        goto LABEL_20;
      }
      outlined init with copy of IDSLookupManager((uint64_t)v21, (uint64_t)&v19);
      if (OUTLINED_FUNCTION_58_0())
      {
        OUTLINED_FUNCTION_29_5();
        outlined init with take of SystemUpdateNotice(v3, v0, (void (*)(void))type metadata accessor for SystemUpdateNotice);
        if (!*(void *)(v0 + 16)) {
          OUTLINED_FUNCTION_18_11();
        }
        swift_bridgeObjectRelease();
        outlined destroy of SystemUpdateNotice(v0, (void (*)(void))type metadata accessor for SystemUpdateNotice);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      }
      else
      {
        OUTLINED_FUNCTION_78_2();
        outlined destroy of SystemUpdateNotice?(v3, (uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
      }
LABEL_38:
      OUTLINED_FUNCTION_28();
      return;
    case 2:

      goto LABEL_38;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 4:
      goto LABEL_38;
    case 5:
      uint64_t v13 = swift_unknownObjectRelease();
      (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v12) + 0xD8))(v13);
      goto LABEL_38;
    case 6:
      v16.n128_u64[0] = (unint64_t)OUTLINED_FUNCTION_36_1(v24, v23);
      if (*(void *)&v14 == 5 && !*(void *)&v15) {
        goto LABEL_38;
      }
      BOOL v17 = *(void *)&v14 == 8 || *(void *)&v14 == 6;
      if (v17 && !*(void *)&v15)
      {
        (*(uint64_t (**)(__n128))((*MEMORY[0x1E4FBC8C8] & *v12) + 0xC0))(v16);
        goto LABEL_38;
      }
      if ((unint64_t)(*(void *)&v14 - 13) <= 1 && !*(void *)&v15) {
        goto LABEL_24;
      }
      if ((unint64_t)(*(void *)&v14 - 17) > 2 || *(void *)&v15)
      {
        if (*(void *)&v14 == 20 && !*(void *)&v15)
        {
LABEL_24:
          (*(void (**)(__n128))((*MEMORY[0x1E4FBC8C8] & *v12) + 0xD0))(v16);
        }
        else if (((*(void *)&v14 & 0xFFFFFFFFFFFFFFFELL) != 0x16 || *(void *)&v15) {
               && ((*(void *)&v14 & 0xFFFFFFFFFFFFFFFELL) != 0x18 || *(void *)&v15))
        }
        {
          goto LABEL_37;
        }
      }
      goto LABEL_38;
    default:
LABEL_37:
      outlined destroy of ConversationControlsType((uint64_t)&v22);
      goto LABEL_38;
  }
}

void ConversationControlsType.canShowOverICSAndInCallControls.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_52_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_61();
  outlined init with copy of ConversationControlsType(v1, (uint64_t)v13);
  if (v14)
  {
    ConversationControlsType.canShowOverICS.getter();
    outlined destroy of ConversationControlsType((uint64_t)v13);
    goto LABEL_8;
  }
  outlined init with take of Notice(v13, (uint64_t)v12);
  OUTLINED_FUNCTION_49_3();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (swift_dynamicCast())
  {
    outlined destroy of SystemUpdateNotice(v4, (void (*)(void))type metadata accessor for AccountUpdateNotice);
    OUTLINED_FUNCTION_49_3();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_49_3();
  if (OUTLINED_FUNCTION_48_4())
  {
    outlined destroy of SystemUpdateNotice(v2, (void (*)(void))type metadata accessor for SessionActionNotice);
    goto LABEL_7;
  }
  outlined init with copy of IDSLookupManager((uint64_t)v12, (uint64_t)&v10);
  if (OUTLINED_FUNCTION_58_0())
  {
    OUTLINED_FUNCTION_29_5();
    outlined init with take of SystemUpdateNotice(v3, v0, (void (*)(void))type metadata accessor for SystemUpdateNotice);
    if (!*(void *)(v0 + 16)) {
      OUTLINED_FUNCTION_18_11();
    }
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice(v0, (void (*)(void))type metadata accessor for SystemUpdateNotice);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    OUTLINED_FUNCTION_78_2();
    outlined destroy of SystemUpdateNotice?(v3, (uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  }
LABEL_8:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationControlsType.wantsBannerAndJindo.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v11);
  uint64_t v8 = 1;
  if (v14 == 3) {
    goto LABEL_7;
  }
  if (v14 != 4)
  {
    if (v14 != 6 || v11 != 25 || (OUTLINED_FUNCTION_36_1(v13, v12), v9))
    {
      uint64_t v8 = 0;
LABEL_7:
      outlined destroy of ConversationControlsType((uint64_t)&v11);
    }
  }
  return v8;
}

uint64_t ConversationControlsType.wantsLockScreenPresentation.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v21[0]);
  if (v22 == 4) {
    return 1;
  }
  if (v22 == 6)
  {
    OUTLINED_FUNCTION_34_1(v8, v9, v10, v11, v12, v13, v14, v15, v21[0], v16, v17);
    BOOL v19 = v19 && v18 == 0;
    if (v19) {
      return 1;
    }
  }
  outlined destroy of ConversationControlsType((uint64_t)v21);
  return 0;
}

uint64_t ConversationControlsType.canShowWhileHomedOut.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v24[0]);
  if (v25 == 6)
  {
    OUTLINED_FUNCTION_32_8(v8, v9, v10, v11, v12, v13, v14, v15, v24[0], v16, v17);
    BOOL v21 = !(!v21 & v20) || v18 == 20;
    if (v21 && v19 == 0) {
      return 0;
    }
  }
  outlined destroy of ConversationControlsType((uint64_t)v24);
  return 1;
}

uint64_t ConversationControlsType.isSNaP.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v24[0]);
  if (v25 == 6)
  {
    OUTLINED_FUNCTION_32_8(v8, v9, v10, v11, v12, v13, v14, v15, v24[0], v16, v17);
    BOOL v21 = !(!v21 & v20) || v18 == 20;
    if (v21 && v19 == 0) {
      return 1;
    }
  }
  outlined destroy of ConversationControlsType((uint64_t)v24);
  return 0;
}

BOOL ConversationControlsType.isNotice.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v10[0]);
  BOOL v8 = v11 == 0;
  outlined destroy of ConversationControlsType((uint64_t)v10);
  return v8;
}

uint64_t ConversationControlsType.isFirstOrThirdPartyIncomingCall.getter()
{
  uint64_t v10 = 6;
  long long v11 = 0u;
  long long v12 = 0u;
  char v13 = 6;
  char v1 = static ConversationControlsType.== infix(_:_:)(v0);
  outlined destroy of ConversationControlsType((uint64_t)&v10);
  outlined init with copy of ConversationControlsType(v0, (uint64_t)&v10);
  if (v1)
  {
    outlined destroy of ConversationControlsType((uint64_t)&v10);
    outlined init with copy of ConversationControlsType(v0, (uint64_t)&v6);
  }
  else
  {
    uint64_t v6 = 8;
    long long v7 = 0u;
    long long v8 = 0u;
    char v9 = 6;
    char v2 = static ConversationControlsType.== infix(_:_:)((uint64_t)&v10);
    outlined destroy of ConversationControlsType((uint64_t)&v6);
    outlined destroy of ConversationControlsType((uint64_t)&v10);
    outlined init with copy of ConversationControlsType(v0, (uint64_t)&v6);
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_76();
      v5[40] = 6;
      char v3 = static ConversationControlsType.== infix(_:_:)((uint64_t)&v6);
      outlined destroy of ConversationControlsType((uint64_t)v5);
      outlined destroy of ConversationControlsType((uint64_t)&v6);
      return v3 & 1;
    }
  }
  outlined destroy of ConversationControlsType((uint64_t)&v6);
  char v3 = 1;
  return v3 & 1;
}

uint64_t ConversationControlsType.isShareNameAndPhoto.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v22[0]);
  if (v23 == 6)
  {
    OUTLINED_FUNCTION_21_7(v8, v9, v10, v11, v12, v13, v14, v15, v22[0], v16, v17);
    if (v19 == 13 && v18 == 0) {
      return 1;
    }
  }
  outlined destroy of ConversationControlsType((uint64_t)v22);
  return 0;
}

uint64_t ConversationControlsType.isLaguna.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v23[0]);
  if (v24 == 2)
  {
    uint64_t v21 = 1;
  }
  else
  {
    if (v24 == 6)
    {
      OUTLINED_FUNCTION_21_7(v8, v9, v10, v11, v12, v13, v14, v15, v23[0], v16, v17);
      if (v19 == 5 && v18 == 0) {
        return 1;
      }
    }
    uint64_t v21 = 0;
  }
  outlined destroy of ConversationControlsType((uint64_t)v23);
  return v21;
}

uint64_t ConversationControlsType.wantsSessionSizeClass.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v14);
  if (v17 == 1)
  {
    uint64_t v12 = 1;
  }
  else
  {
    if (v17 == 6)
    {
      BOOL v8 = v14 == 5 || v14 == 2;
      int8x16_t v9 = vorrq_s8(v15, v16);
      int8x8_t v10 = vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL));
      if (v8 && *(void *)&v10 == 0) {
        return 1;
      }
    }
    uint64_t v12 = 0;
  }
  outlined destroy of ConversationControlsType((uint64_t)&v14);
  return v12;
}

BOOL ConversationControlsType.requiresHandedOffCall.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v10[0]);
  BOOL v8 = v11 == 1;
  outlined destroy of ConversationControlsType((uint64_t)v10);
  return v8;
}

uint64_t ConversationControlsType.supportsWaitingConversations.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v23[0]);
  if (v24 == 1)
  {
    uint64_t v21 = 1;
  }
  else
  {
    if (v24 == 6)
    {
      OUTLINED_FUNCTION_21_7(v8, v9, v10, v11, v12, v13, v14, v15, v23[0], v16, v17);
      if (v19 == 4 && v18 == 0) {
        return 1;
      }
    }
    uint64_t v21 = 0;
  }
  outlined destroy of ConversationControlsType((uint64_t)v23);
  return v21;
}

uint64_t ConversationControlsType.associatedNotice.getter@<X0>(uint64_t a1@<X8>)
{
  outlined init with copy of ConversationControlsType(v1, (uint64_t)v4);
  if (!v5) {
    return outlined init with take of Notice(v4, a1);
  }
  *(void *)(a1 + 32) = 0;
  OUTLINED_FUNCTION_75_0();
  return outlined destroy of ConversationControlsType((uint64_t)v4);
}

void ConversationControlsType.wantsUpdateAnimationAfter.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v8[0]);
  switch(v9)
  {
    case 4:
      return;
    case 6:
      OUTLINED_FUNCTION_25_2();
      break;
    default:
      outlined destroy of ConversationControlsType((uint64_t)v8);
      break;
  }
}

void ConversationControlsType.wantsUpdateAnimationBefore.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v8[0]);
  switch(v9)
  {
    case 4:
      return;
    case 6:
      OUTLINED_FUNCTION_25_2();
      break;
    default:
      outlined destroy of ConversationControlsType((uint64_t)v8);
      break;
  }
}

uint64_t ConversationControlsType.shouldUndimScreen.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_1(a1, a2, a3, a4, a5, a6, a7, a8, v22[0]);
  if (v23 == 3)
  {
    uint64_t v20 = 1;
  }
  else
  {
    if (v23 == 6)
    {
      OUTLINED_FUNCTION_34_1(v8, v9, v10, v11, v12, v13, v14, v15, v22[0], v16, v17);
      BOOL v19 = v19 && v18 == 0;
      if (v19) {
        return 1;
      }
    }
    uint64_t v20 = 0;
  }
  outlined destroy of ConversationControlsType((uint64_t)v22);
  return v20;
}

uint64_t ConversationControlsType.debugDescription.getter()
{
  outlined init with copy of ConversationControlsType(v0, (uint64_t)&v25);
  uint64_t v1 = (void *)v25;
  switch(v26)
  {
    case 1:
      unint64_t v10 = *((void *)&v25 + 1);
      OUTLINED_FUNCTION_91();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_0();
      unint64_t v20 = v11;
      unint64_t v21 = 0x80000001C3791C90;
      if (v10)
      {
        uint64_t v23 = (uint64_t)v1;
        unint64_t v24 = v10;
        uint64_t v9 = String.init<A>(reflecting:)();
        unint64_t v13 = v12;
      }
      else
      {
        unint64_t v13 = 0xE300000000000000;
        uint64_t v9 = 7104878;
      }
      unint64_t v8 = v13;
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_91();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000011;
      unint64_t v21 = 0x80000001C3791C70;
      uint64_t v23 = (uint64_t)v1;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
      id v6 = v1;
      v7._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v7);

      goto LABEL_16;
    case 3:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_0();
      goto LABEL_20;
    case 4:
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD00000000000001CLL;
      unint64_t v21 = 0x80000001C3791970;
      RejectedRemoteControlRequesetContext.description.getter();
      uint64_t v9 = 0xD000000000000040;
LABEL_15:
      String.append(_:)(*(Swift::String *)&v9);
LABEL_16:
      swift_bridgeObjectRelease();
      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    case 6:
      OUTLINED_FUNCTION_83_1();
      if (v17)
      {
        if ((uint64_t v18 = v16 | v14 | v15, v1 == (void *)1) && !v18
          || v1 == (void *)2 && !v18
          || (v1 != (void *)3 || v18)
          && (v1 != (void *)4 || v18)
          && (v1 == (void *)5 && !v18
           || (v1 != (void *)6 || v18)
           && (v1 == (void *)7 && !v18
            || v1 == (void *)8 && !v18
            || v1 == (void *)9 && !v18
            || v1 == (void *)10 && !v18
            || v1 == (void *)11 && !v18
            || v1 == (void *)12 && !v18
            || v1 == (void *)13 && !v18
            || v1 != (void *)14
            || v18)))
        {
LABEL_20:
          OUTLINED_FUNCTION_81();
        }
      }
      break;
    default:
      outlined init with take of Notice(&v25, (uint64_t)&v20);
      uint64_t v23 = 0x28656369746F6ELL;
      unint64_t v24 = 0xE700000000000000;
      __swift_project_boxed_opaque_existential_1(&v20, v22);
      uint64_t v2 = OUTLINED_FUNCTION_92_0();
      v4._uint64_t countAndFlagsBits = v3(v2);
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      v5._uint64_t countAndFlagsBits = 41;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      break;
  }
  return OUTLINED_FUNCTION_35();
}

uint64_t specialized >> prefix<A>(_:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for Participant(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for Participant);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantViewModel?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ParticipantViewModel(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ParticipantViewModel?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ParticipantViewModel);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ParticipantViewModel);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ParticipantViewModel);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ConversationControlsAppLaunchButtonType(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAction?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_3_6();
  type metadata accessor for ConversationControlsAction();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_11();
  uint64_t v6 = OUTLINED_FUNCTION_4_26();
  if (v8)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ConversationControlsAction?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    char v9 = OUTLINED_FUNCTION_14_7(v6, v7, (void (*)(void))type metadata accessor for ConversationControlsAction);
    OUTLINED_FUNCTION_13_0(v9, v10, (void (*)(void))type metadata accessor for ConversationControlsAction);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ConversationControlsAction);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_3_6();
  type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_11();
  uint64_t v6 = OUTLINED_FUNCTION_4_26();
  if (v8)
  {
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    char v9 = OUTLINED_FUNCTION_14_7(v6, v7, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_13_0(v9, v10, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for HUDActivityManager.BannerUpdate(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for HUDActivityManager.BannerUpdate);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for HUDActivityManager.BannerUpdate);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for HUDActivityManager.BannerUpdate);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RecentsCallItem(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RecentsCallItem);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RecentsCallItem);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RecentsCallItem);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SharedContentViewModel?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for SharedContentViewModel(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for SharedContentViewModel?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for SharedContentViewModel);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for SharedContentViewModel);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for SharedContentViewModel);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RecentsCallItemType(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for RecentsCallItemType?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RecentsCallItemType);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RecentsCallItemType);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RecentsCallItemType);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RecentOngoingConversationMetadata(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RecentOngoingConversationMetadata);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RecentOngoingConversationMetadata);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RecentOngoingConversationMetadata);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for Collaboration(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Collaboration?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for Collaboration);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for Collaboration);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for Collaboration);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenShareAttributes?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ScreenShareAttributes(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ScreenShareAttributes?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ScreenShareAttributes);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ScreenShareAttributes);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ScreenShareAttributes);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ForegroundCollaborationState(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ForegroundCollaborationState?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantReaction?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ParticipantReaction(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ParticipantReaction?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ParticipantReaction);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ParticipantReaction);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ParticipantReaction);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for Participant.State(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for Participant.State);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlMessage?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RemoteControlMessage(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for RemoteControlMessage?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RemoteControlMessage);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RemoteControlMessage);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RemoteControlMessage);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlRequest?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RemoteControlRequest(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for RemoteControlRequest?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RemoteControlRequest);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RemoteControlRequest);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RemoteControlRequest);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlResponse?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RemoteControlResponse(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for RemoteControlResponse?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RemoteControlResponse);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RemoteControlResponse);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RemoteControlResponse);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for RecentCallRecentItemMetadata(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
  }
  return OUTLINED_FUNCTION_7_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_3_6();
  type metadata accessor for ObjectTracker.RuleGroup(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  uint64_t v7 = OUTLINED_FUNCTION_4_26();
  if (v9)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
    OUTLINED_FUNCTION_6_9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_14_7(v7, v8, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_13_0(v10, v11, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_10_10();
    outlined destroy of SystemUpdateNotice(v1, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
  }
  return OUTLINED_FUNCTION_7_8();
}

uint64_t specialized >> prefix<A>(_:)(uint64_t a1, uint64_t *a2, void (*a3)(void *, unsigned char *), uint64_t *a4)
{
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v8, a2);
  if (v8[3])
  {
    a3(v8, v9);
    outlined init with copy of IDSLookupManager((uint64_t)v9, (uint64_t)v8);
    __swift_instantiateConcreteTypeFromMangledName(a4);
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_10_10();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v8, a2);
    OUTLINED_FUNCTION_6_9();
  }
  return OUTLINED_FUNCTION_23_0();
}

uint64_t specialized >> prefix<A>(_:)(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  uint64_t v8 = a3(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = OUTLINED_FUNCTION_79_0();
  outlined init with copy of FeatureEligibility?(v11, v12, a2);
  if (__swift_getEnumTagSinglePayload(v3, 1, v8) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v3, a2);
    return 7104878;
  }
  else
  {
    OUTLINED_FUNCTION_40_1();
    v14();
    OUTLINED_FUNCTION_39_3();
    v15();
    uint64_t v13 = String.init<A>(reflecting:)();
    uint64_t v16 = OUTLINED_FUNCTION_74();
    v17(v16);
  }
  return v13;
}

BOOL static ConversationControlsType.!= infix(_:_:)(uint64_t a1)
{
  return (static ConversationControlsType.== infix(_:_:)(a1) & 1) == 0;
}

void static ConversationControlsType.firstOrThirdPartyIncomingCall(for:)()
{
  OUTLINED_FUNCTION_86();
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  id v4 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 160))(ObjectType, v0);
  static ConversationControlsType.firstOrThirdPartyIncomingCall(for:)(v4, v2);
}

double static ConversationControlsType.firstOrThirdPartyIncomingCall(for:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_supportsDynamicSystemUI)
    && (id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init),
        unsigned int v5 = objc_msgSend(v4, sel_groupConversations),
        v4,
        v5)
    && (TUDeviceHasChinaSKU() & 1) != 0)
  {
    uint64_t v6 = 22;
  }
  else
  {
    unsigned int v7 = objc_msgSend(a1, sel_isSystemProvider);
    uint64_t v6 = 8;
    if (v7) {
      uint64_t v6 = 6;
    }
  }
  *(void *)a2 = v6;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(unsigned char *)(a2 + 40) = 6;
  return result;
}

ConversationKit::SharePlayAppType_optional __swiftcall SharePlayAppType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (ConversationKit::SharePlayAppType_optional)rawValue;
}

uint64_t SharePlayAppType.rawValue.getter()
{
  return *v0;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SharePlayAppType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

ConversationKit::SharePlayAppType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SharePlayAppType(Swift::Int *a1)
{
  return SharePlayAppType.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SharePlayAppType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SharePlayAppType.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL ConversationControlsAppLaunchButtonType.isSNaP.getter()
{
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_87(v2, v3, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  unsigned int v4 = OUTLINED_FUNCTION_19_9() - 9;
  if (v4 >= 3) {
    outlined destroy of SystemUpdateNotice(v0, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  }
  return v4 < 3;
}

BOOL ConversationControlsAppLaunchButtonType.isCancelScreenSharingRequest.getter()
{
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  uint64_t v2 = OUTLINED_FUNCTION_41_0();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v2, v3, v4);
  BOOL v5 = swift_getEnumCaseMultiPayload() == 1;
  outlined destroy of SystemUpdateNotice(v0, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  return v5;
}

void ConversationControlsAppLaunchButtonType.description.getter()
{
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_87(v2, v3, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  switch(OUTLINED_FUNCTION_19_9())
  {
    case 1u:
      outlined destroy of SystemUpdateNotice((uint64_t)v0, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
      OUTLINED_FUNCTION_43_0();
      goto LABEL_5;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 9u:
    case 0xAu:
      return;
    case 8u:
    case 0xBu:
      OUTLINED_FUNCTION_43_0();
LABEL_5:
      OUTLINED_FUNCTION_47();
      break;
    default:
      unsigned int v4 = *v0;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_0();
      id v5 = objc_msgSend(v4, sel_description);
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      v9._uint64_t countAndFlagsBits = v6;
      v9._object = v8;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._uint64_t countAndFlagsBits = 41;
      v10._object = (void *)0xE100000000000000;
      String.append(_:)(v10);

      break;
  }
}

uint64_t static ConversationControlsAppLaunchButtonType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConversationControlsAppLaunchButtonType, ConversationControlsAppLaunchButtonType));
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_60();
  uint64_t v8 = (void **)((char *)v2 + *(int *)(v7 + 56));
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v2, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v8, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (OUTLINED_FUNCTION_19_9() == 1)
      {
        outlined destroy of SystemUpdateNotice((uint64_t)v8, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
        uint64_t v10 = OUTLINED_FUNCTION_41_0();
        outlined destroy of SystemUpdateNotice(v10, v11);
        goto LABEL_7;
      }
      outlined destroy of SystemUpdateNotice((uint64_t)v2, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
      uint64_t v13 = (uint64_t)v8;
      goto LABEL_10;
    case 2u:
      if (OUTLINED_FUNCTION_19_9() == 2) {
        goto LABEL_7;
      }
      goto LABEL_9;
    case 3u:
      if (OUTLINED_FUNCTION_19_9() != 3) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 4u:
      if (OUTLINED_FUNCTION_19_9() != 4) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 5u:
      if (OUTLINED_FUNCTION_19_9() != 5) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 6u:
      if (OUTLINED_FUNCTION_19_9() != 6) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 7u:
      if (OUTLINED_FUNCTION_19_9() != 7) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 8u:
      if (OUTLINED_FUNCTION_19_9() != 8) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 9u:
      if (OUTLINED_FUNCTION_19_9() != 9) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 0xAu:
      if (OUTLINED_FUNCTION_19_9() != 10) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 0xBu:
      if (OUTLINED_FUNCTION_19_9() != 11) {
        goto LABEL_9;
      }
LABEL_7:
      uint64_t v12 = 1;
      break;
    default:
      Swift::String v9 = *v2;
      if (OUTLINED_FUNCTION_19_9())
      {

LABEL_9:
        uint64_t v13 = (uint64_t)v8;
LABEL_10:
        outlined destroy of SystemUpdateNotice(v13, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v15 = *v8;
        uint64_t v16 = (void *)OUTLINED_FUNCTION_88();
        uint64_t v12 = (uint64_t)[v16 v17];
      }
      break;
  }
  return v12;
}

BOOL static ConversationControlsAppLaunchButtonType.!= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (static ConversationControlsAppLaunchButtonType.== infix(_:_:)(a1, a2) & 1) == 0;
}

uint64_t ForegroundApp.bundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

void ForegroundApp.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type);
}

uint64_t ForegroundApp.AutomaticShareState.title.getter(unsigned __int8 a1)
{
  int v1 = a1;
  id v2 = objc_msgSend(self, sel_conversationKit);
  if (v1 == 1) {
    unint64_t v3 = OUTLINED_FUNCTION_82();
  }
  else {
    OUTLINED_FUNCTION_47();
  }
  OUTLINED_FUNCTION_11_1(v3, v4);

  return OUTLINED_FUNCTION_41_0();
}

uint64_t ForegroundApp.AutomaticShareState.shortTitle.getter(unsigned __int8 a1)
{
  int v1 = a1;
  id v2 = objc_msgSend(self, sel_conversationKit);
  if (v1 == 1)
  {
    uint64_t v3 = 0x7478654E206B7341;
    uint64_t v4 = 0x656D695420;
  }
  else
  {
    uint64_t v3 = 0x6974616D6F747541;
    uint64_t v4 = 0x796C6C6163;
  }
  OUTLINED_FUNCTION_11_1(v3, v4 & 0xFFFFFFFFFFFFLL | 0xED00000000000000);

  return OUTLINED_FUNCTION_41_0();
}

Swift::Int ConversationControlsContext.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationControlsContext()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t ForegroundApp.__allocating_init(bundleIdentifier:type:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 3)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v5 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v3 + 96))(a1, a2, &v5);
  }
}

id ForegroundApp.__allocating_init(bundleIdentifier:type:)(uint64_t a1, uint64_t a2, char *a3)
{
  id v7 = objc_allocWithZone(v3);
  return ForegroundApp.init(bundleIdentifier:type:)(a1, a2, a3);
}

id ForegroundApp.init(bundleIdentifier:type:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v4 = *a3;
  char v5 = &v3[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
  *char v5 = a1;
  v5[1] = a2;
  v3[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type] = v4;
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for ForegroundApp();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t ForegroundApp.appName.getter()
{
  id v0 = ForegroundApp.applicationRecord.getter();
  if (v0)
  {
    Swift::UInt v1 = v0;
    id v2 = objc_msgSend(v0, sel_localizedName);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v2 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_11_1(0xD000000000000010, v3);
  }

  return OUTLINED_FUNCTION_41_0();
}

id ForegroundApp.isGameCenterApplication.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if (((*(uint64_t (**)(void))(v0 + 312))() & 1) == 0) {
    return 0;
  }
  id v1 = ForegroundApp.applicationRecord.getter();
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_entitlements);
  Swift::Bool v4 = LSPropertyList.containsAnyGameCenterEntitlements()();

  if (v4)
  {
    id v5 = objc_msgSend(v2, sel_compatibilityObject);
    id v6 = objc_msgSend(v5, sel_isGameCenterEnabled);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

Swift::Bool __swiftcall LSPropertyList.containsAnyGameCenterEntitlements()()
{
  OUTLINED_FUNCTION_80_0();
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v1._object = v0;
  if (LSPropertyList.contains(entitlement:)(v1)) {
    return 1;
  }
  id v3 = (void *)MEMORY[0x1C87730B0](0xD00000000000001FLL);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSArray);
  swift_getObjCClassFromMetadata();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSString);
  swift_getObjCClassFromMetadata();
  Swift::Bool v4 = (void *)OUTLINED_FUNCTION_88();
  id v6 = [v4 v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10, &demangling cache variable for type metadata for Any?);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    if (swift_dynamicCast())
    {
      uint64_t v7 = *(void *)(v8 + 16);
      swift_bridgeObjectRelease();
      return v7 != 0;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return 0;
}

uint64_t ForegroundApp.automaticShareState.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type) == 2) {
    return 0;
  }
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v1, sel_conversationManager);

  id v3 = objc_msgSend(v2, sel_activityAuthorizedBundleIdentifiers);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8);
  swift_bridgeObjectRetain();
  uint64_t v7 = specialized Dictionary.subscript.getter(v5, v6, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v7) {
    return 0;
  }
  unsigned int v8 = objc_msgSend(v7, sel_BOOLValue);

  if (v8) {
    return 2;
  }
  else {
    return 1;
  }
}

double specialized Dictionary.subscript.getter()
{
  OUTLINED_FUNCTION_45_1();
  if (v3 && (v4 = v2, uint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(v1), (v6 & 1) != 0))
  {
    outlined init with copy of IDSLookupManager(*(void *)(v4 + 56) + 40 * v5, v0);
  }
  else
  {
    *(void *)(v0 + 32) = 0;
    return OUTLINED_FUNCTION_75_0();
  }
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  double result;
  uint64_t vars8;

  OUTLINED_FUNCTION_45_1();
  if (!v3) {
    return OUTLINED_FUNCTION_75_0();
  }
  uint64_t v4 = v2;
  uint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(v1);
  if ((v6 & 1) == 0) {
    return OUTLINED_FUNCTION_75_0();
  }
  uint64_t v7 = *(void *)(v4 + 56) + 32 * v5;
  outlined init with copy of Any(v7, v0);
  return result;
}

void *specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  char v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  id v7 = v6;
  return v6;
}

uint64_t specialized Dictionary.subscript.getter()
{
  OUTLINED_FUNCTION_45_1();
  if (v2 && (uint64_t v3 = v1, v4 = specialized __RawDictionaryStorage.find<A>(_:)(), (v5 & 1) != 0))
  {
    unint64_t v6 = v4;
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v8 = type metadata accessor for Date();
    OUTLINED_FUNCTION_0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v0, v7 + *(void *)(v9 + 72) * v6, v8);
    uint64_t v10 = v0;
    uint64_t v11 = 0;
    uint64_t v12 = v8;
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v10 = v0;
    uint64_t v11 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v10, v11, 1, v12);
}

uint64_t specialized Dictionary.subscript.getter(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16)
    && (specialized __RawDictionaryStorage.find<A>(_:)(a1 & 1, a2, a3 & 0x10101FF01FFFFLL), (v4 & 1) != 0))
  {
    return OUTLINED_FUNCTION_46_1();
  }
  else
  {
    return 0;
  }
}

void specialized Dictionary.subscript.getter()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_45_1();
  if (v3 && (v4 = v2, unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(v1), (v6 & 1) != 0))
  {
    unint64_t v7 = *(void *)(v4 + 56) + (v5 << 6);
    uint64_t v9 = *(void *)v7;
    uint64_t v8 = *(void **)(v7 + 8);
    uint64_t v10 = *(void **)(v7 + 16);
    uint64_t v11 = *(void **)(v7 + 24);
    uint64_t v12 = *(void **)(v7 + 40);
    uint64_t v13 = *(void **)(v7 + 48);
    uint64_t v14 = *(void **)(v7 + 56);
    uint64_t v15 = *(unsigned __int8 *)(v7 + 32);
    outlined copy of InCallControlButtonConfiguration.Regular?(*(id *)v7, v8, v10, v11, *(unsigned char *)(v7 + 32));
    outlined copy of InCallControlButtonConfiguration.Flat?(v12, v13, v14);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v9 = 1;
  }
  uint64_t *v0 = v9;
  v0[1] = (uint64_t)v8;
  v0[2] = (uint64_t)v10;
  v0[3] = (uint64_t)v11;
  v0[4] = v15;
  v0[5] = (uint64_t)v12;
  v0[6] = (uint64_t)v13;
  v0[7] = (uint64_t)v14;
  OUTLINED_FUNCTION_28();
}

{
  void *v0;
  Swift::UInt v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  id v21;

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_45_1();
  if (v3 && (v4 = v2, unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(v1), (v6 & 1) != 0))
  {
    unint64_t v7 = *(void *)(v4 + 56) + (v5 << 6);
    uint64_t v8 = *(void *)v7;
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t v11 = *(void **)(v7 + 24);
    uint64_t v10 = *(void **)(v7 + 32);
    uint64_t v12 = *(void **)(v7 + 40);
    uint64_t v13 = *(void **)(v7 + 56);
    uint64_t v14 = *(unsigned __int8 *)(v7 + 16);
    uint64_t v15 = *(unsigned char *)(v7 + 48);
    uint64_t v16 = v15;
    SEL v17 = (void *)OUTLINED_FUNCTION_41_0();
    outlined copy of ButtonBackgroundStyle(v17, v18, v19);
    unint64_t v20 = v11;
    outlined copy of ButtonBackgroundStyle(v10, v12, v15);
    unint64_t v21 = v13;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v14 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v16 = 0;
    uint64_t v13 = 0;
  }
  uint64_t *v0 = v8;
  v0[1] = v9;
  v0[2] = v14;
  v0[3] = v11;
  v0[4] = v10;
  v0[5] = v12;
  v0[6] = v16;
  v0[7] = v13;
  OUTLINED_FUNCTION_28();
}

{
  uint64_t v0;
  Swift::UInt v1;
  uint64_t v2;
  long long v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  long long *v9;
  long long v10;

  OUTLINED_FUNCTION_45_1();
  uint64_t v3 = 0uLL;
  if (v4)
  {
    unint64_t v5 = v2;
    char v6 = specialized __RawDictionaryStorage.find<A>(_:)(v1);
    if (v7)
    {
      uint64_t v8 = 0;
      uint64_t v9 = (long long *)(*(void *)(v5 + 56) + 32 * v6);
      uint64_t v3 = *v9;
      uint64_t v10 = v9[1];
    }
    else
    {
      uint64_t v8 = 1;
      uint64_t v10 = 0uLL;
      uint64_t v3 = 0uLL;
    }
  }
  else
  {
    uint64_t v8 = 1;
    uint64_t v10 = 0uLL;
  }
  *(_OWORD *)uint64_t v0 = v3;
  *(_OWORD *)(v0 + 16) = v10;
  *(unsigned char *)(v0 + 32) = v8;
}

id specialized Dictionary.subscript.getter(Swift::UInt a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a2 + 56) + 32 * v4;
    id v2 = *(id *)v6;
    unint64_t v7 = *(void **)(v6 + 16);
    id v8 = *(id *)v6;
    id v9 = v7;
  }
  else
  {
    OUTLINED_FUNCTION_69_1();
  }
  return v2;
}

uint64_t specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1, a2), (v3 & 1) != 0)) {
    OUTLINED_FUNCTION_72();
  }
  else {
    OUTLINED_FUNCTION_69_1();
  }
  return OUTLINED_FUNCTION_35();
}

{
  char v3;

  if (*(void *)(a3 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1, a2), (v3 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

{
  unint64_t v4;
  char v5;
  void *v6;
  id v7;

  if (!*(void *)(a3 + 16)) {
    return 1;
  }
  unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  if ((v5 & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  unint64_t v7 = v6;
  return (uint64_t)v6;
}

{
  char v3;

  if (*(void *)(a3 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1, a2), (v3 & 1) != 0)) {
    return OUTLINED_FUNCTION_46_1();
  }
  else {
    return 0;
  }
}

void *specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  char v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

uint64_t specialized Dictionary.subscript.getter(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1 & 1), (v2 & 1) != 0)) {
    return OUTLINED_FUNCTION_46_1();
  }
  else {
    return 0;
  }
}

{
  char v2;

  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1 & 1), (v2 & 1) != 0)) {
    return OUTLINED_FUNCTION_46_1();
  }
  else {
    return 0;
  }
}

unint64_t specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = specialized __RawDictionaryStorage.find<A>(_:)(), (v4 & 1) != 0)) {
    return *(unsigned int *)(*(void *)(a2 + 56) + 6 * v3) | ((unint64_t)*(unsigned __int16 *)(*(void *)(a2 + 56) + 6 * v3 + 4) << 32);
  }
  else {
    return 3;
  }
}

uint64_t specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1), (v2 & 1) != 0)) {
    OUTLINED_FUNCTION_72();
  }
  else {
    OUTLINED_FUNCTION_69_1();
  }
  return OUTLINED_FUNCTION_35();
}

{
  char v2;

  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(), (v2 & 1) != 0)) {
    return OUTLINED_FUNCTION_46_1();
  }
  else {
    return 0;
  }
}

{
  char v2;

  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1), (v2 & 1) != 0)) {
    swift_retain();
  }
  else {
    OUTLINED_FUNCTION_69_1();
  }
  return OUTLINED_FUNCTION_35();
}

{
  char v2;

  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

{
  char v2;

  if (*(void *)(a2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(a1), (v2 & 1) != 0)) {
    return OUTLINED_FUNCTION_46_1();
  }
  else {
    return 0;
  }
}

double specialized Dictionary.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    return OUTLINED_FUNCTION_75_0();
  }
  uint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)();
  if ((v5 & 1) == 0) {
    return OUTLINED_FUNCTION_75_0();
  }
  uint64_t v6 = *(void *)(a1 + 56) + 32 * v4;
  outlined init with copy of Any(v6, a2);
  return result;
}

BOOL ForegroundApp.supportsSharePlay.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type) != 2;
}

id ForegroundApp.applicationRecord.getter()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F223C8]);
  swift_bridgeObjectRetain();
  uint64_t v2 = OUTLINED_FUNCTION_74();
  id result = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v2, v3, 1);
  if (!result)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationControls);
    id v6 = v0;
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v10 = OUTLINED_FUNCTION_74();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v7, v8, "Unable to get app record for bundleIdentifier:%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v13, -1, -1);
      MEMORY[0x1C87760E0](v9, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return result;
}

Swift::Void __swiftcall ForegroundApp.setAutomaticShareState(_:)(Swift::Bool a1)
{
  id v3 = objc_msgSend(self, sel_sharedInstance);
  id v4 = objc_msgSend(v3, sel_conversationManager);

  id v5 = (id)MEMORY[0x1C87730B0](*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier), *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8));
  objc_msgSend(v4, sel_setActivityAuthorization_forBundleIdentifier_, a1, v5);
}

uint64_t ForegroundApp.debugDescription.getter()
{
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_0();
  uint64_t v8 = v1;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x3A65707974202CLL;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return v8;
}

id ForegroundApp.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ForegroundApp.init()()
{
}

id ForegroundApp.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ForegroundApp();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ForegroundCollaborationState.description.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  uint64_t v5 = type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_60();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v0, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = v0
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                   + 48);
      uint64_t v26 = type metadata accessor for URL();
      v66[2] = v66;
      OUTLINED_FUNCTION_5_3();
      uint64_t v28 = v27;
      MEMORY[0x1F4188790](v29);
      OUTLINED_FUNCTION_61();
      v66[0] = v2;
      OUTLINED_FUNCTION_40_1();
      v30();
      uint64_t v31 = type metadata accessor for Date();
      v66[1] = v66;
      OUTLINED_FUNCTION_5_3();
      uint64_t v33 = v32;
      MEMORY[0x1F4188790](v34);
      OUTLINED_FUNCTION_64();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v0, v25, v31);
      OUTLINED_FUNCTION_42_2();
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState.Type);
      v35._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_56_0();
      object = v35._object;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_47();
      v37._uint64_t countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v37);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      uint64_t v39 = OUTLINED_FUNCTION_8(v38);
      MEMORY[0x1F4188790](v39);
      OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_39_3();
      v40();
      OUTLINED_FUNCTION_85();
      specialized >> prefix<A>(_:)((uint64_t)object, MEMORY[0x1F418B838], &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_84();
      swift_bridgeObjectRelease();
      v41._uint64_t countAndFlagsBits = 0x657472617473202CLL;
      v41._object = (void *)0xEB00000000203A64;
      String.append(_:)(v41);
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      uint64_t v43 = OUTLINED_FUNCTION_8(v42);
      MEMORY[0x1F4188790](v43);
      OUTLINED_FUNCTION_16_0();
      uint64_t v44 = OUTLINED_FUNCTION_77();
      v45(v44, v0, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)object, 0, 1, v31);
      specialized >> prefix<A>(_:)((uint64_t)object, MEMORY[0x1F418BA10], (uint64_t *)&demangling cache variable for type metadata for Date?);
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_84();
      swift_bridgeObjectRelease();
      v46._uint64_t countAndFlagsBits = 62;
      v46._object = (void *)0xE100000000000000;
      String.append(_:)(v46);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v0, v31);
      (*(void (**)(void, uint64_t))(v28 + 8))(v66[0], v26);
      break;
    case 2u:
      type metadata accessor for URL();
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v47);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_40_1();
      v48();
      OUTLINED_FUNCTION_42_2();
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState.Type);
      v49._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_56_0();
      uint64_t v50 = v49._object;
      String.append(_:)(v49);
      swift_bridgeObjectRelease();
      v51._uint64_t countAndFlagsBits = 0xD000000000000017;
      v51._object = (void *)0x80000001C3791E30;
      String.append(_:)(v51);
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      uint64_t v53 = OUTLINED_FUNCTION_8(v52);
      MEMORY[0x1F4188790](v53);
      OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_39_3();
      v54();
      OUTLINED_FUNCTION_85();
      uint64_t v55 = specialized >> prefix<A>(_:)((uint64_t)v50, MEMORY[0x1F418B838], &demangling cache variable for type metadata for URL?);
      char v57 = v56;
      outlined destroy of SystemUpdateNotice?((uint64_t)v50, &demangling cache variable for type metadata for URL?);
      v58._uint64_t countAndFlagsBits = v55;
      v58._object = v57;
      String.append(_:)(v58);
      swift_bridgeObjectRelease();
      v59._uint64_t countAndFlagsBits = 62;
      v59._object = (void *)0xE100000000000000;
      String.append(_:)(v59);
      uint64_t v60 = OUTLINED_FUNCTION_74();
      v61(v60);
      break;
    case 3u:
      OUTLINED_FUNCTION_42_2();
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState.Type);
      v62._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_56_0();
      String.append(_:)(v62);
      swift_bridgeObjectRelease();
      uint64_t v63 = 0x707075736E75203ALL;
      unint64_t v64 = 0xEE003E646574726FLL;
      goto LABEL_7;
    case 4u:
      OUTLINED_FUNCTION_27_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState.Type);
      v65._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_56_0();
      String.append(_:)(v65);
      swift_bridgeObjectRelease();
      uint64_t v63 = 0x726F70707573203ALL;
      unint64_t v64 = 0xEC0000003E646574;
LABEL_7:
      String.append(_:)(*(Swift::String *)&v63);
      break;
    default:
      char v11 = *(unsigned char *)(v0
                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                              + 48));
      uint64_t v12 = OUTLINED_FUNCTION_23_0();
      outlined init with take of SystemUpdateNotice(v12, v13, v14);
      OUTLINED_FUNCTION_42_2();
      _StringGuts.grow(_:)(54);
      v15._uint64_t countAndFlagsBits = 60;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      uint64_t v67 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState.Type);
      v16._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_56_0();
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_47();
      v17._uint64_t countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v17);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v8, v1, (void (*)(void))type metadata accessor for StagedCollaboration);
      __swift_storeEnumTagSinglePayload(v1, 0, 1, v5);
      uint64_t v18 = specialized >> prefix<A>(_:)(v1);
      unint64_t v20 = v19;
      outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for StagedCollaboration?);
      v21._uint64_t countAndFlagsBits = v18;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      v22._uint64_t countAndFlagsBits = 0xD000000000000016;
      v22._object = (void *)0x80000001C3791E90;
      String.append(_:)(v22);
      LOBYTE(v67) = v11;
      v23._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = 62;
      v24._object = (void *)0xE100000000000000;
      String.append(_:)(v24);
      outlined destroy of SystemUpdateNotice((uint64_t)v8, (void (*)(void))type metadata accessor for StagedCollaboration);
      break;
  }
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_28();
}

void static ForegroundCollaborationState.== infix(_:_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for StagedCollaboration(0);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_15();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  Swift::String v15 = (char *)&v58 - v14;
  MEMORY[0x1F4188790](v13);
  Swift::String v17 = (char *)&v58 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ForegroundCollaborationState, ForegroundCollaborationState));
  uint64_t v19 = OUTLINED_FUNCTION_8(v18);
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_17_0();
  uint64_t v21 = v0 + *(int *)(v20 + 56);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v5, v0, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v21, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v22 = OUTLINED_FUNCTION_35();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v22, v23, v24);
      uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                   + 48);
      if (OUTLINED_FUNCTION_59_1() != 1)
      {
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v53();
        type metadata accessor for URL();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v54();
        goto LABEL_16;
      }
      uint64_t v67 = v21 + v25;
      uint64_t v26 = type metadata accessor for URL();
      Swift::String v65 = &v58;
      uint64_t v66 = v26;
      OUTLINED_FUNCTION_5_3();
      uint64_t v28 = v27;
      MEMORY[0x1F4188790](v29);
      OUTLINED_FUNCTION_63();
      (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v10, v21);
      uint64_t v30 = type metadata accessor for Date();
      uint64_t v63 = &v58;
      OUTLINED_FUNCTION_5_3();
      uint64_t v32 = v31;
      uint64_t v34 = *(void *)(v33 + 64);
      MEMORY[0x1F4188790](v35);
      unint64_t v36 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v61 = v32;
      Swift::String v37 = *(uint64_t (**)(void))(v32 + 32);
      Swift::String v59 = (char *)&v58 - v36;
      uint64_t v38 = v37();
      uint64_t v60 = &v58;
      MEMORY[0x1F4188790](v38);
      uint64_t v62 = v30;
      ((void (*)(char *, uint64_t, uint64_t))v37)((char *)&v58 - v36, v67, v30);
      uint64_t v39 = v66;
      uint64_t v64 = v10;
      LOBYTE(v36) = MEMORY[0x1C876EE60](v15, v10);
      uint64_t v40 = *(void (**)(char *, uint64_t))(v28 + 8);
      uint64_t v67 = v28 + 8;
      v40(v15, v39);
      if (v36)
      {
        Swift::String v41 = v59;
        static Date.== infix(_:_:)();
        uint64_t v42 = v62;
        uint64_t v43 = *(void (**)(uint64_t))(v61 + 8);
        uint64_t v44 = OUTLINED_FUNCTION_79_0();
        v43(v44);
        ((void (*)(char *, uint64_t))v43)(v41, v42);
      }
      else
      {
        uint64_t v55 = v62;
        uint64_t v56 = *(void (**)(uint64_t))(v61 + 8);
        uint64_t v57 = OUTLINED_FUNCTION_79_0();
        v56(v57);
        ((void (*)(char *, uint64_t))v56)(v59, v55);
      }
      uint64_t v45 = OUTLINED_FUNCTION_54();
      ((void (*)(uint64_t))v40)(v45);
      OUTLINED_FUNCTION_44_2();
      goto LABEL_20;
    case 2u:
      outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v1, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
      int v46 = OUTLINED_FUNCTION_59_1();
      uint64_t v47 = type metadata accessor for URL();
      uint64_t v48 = v47;
      uint64_t v49 = *(void *)(v47 - 8);
      if (v46 == 2)
      {
        MEMORY[0x1F4188790](v47);
        OUTLINED_FUNCTION_64();
        uint64_t v50 = OUTLINED_FUNCTION_79_0();
        v51(v50);
        MEMORY[0x1C876EE60](v1, v9);
        uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
        v52(v9, v48);
        v52((char *)v1, v48);
        goto LABEL_20;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v1, v47);
      goto LABEL_16;
    case 3u:
      if (OUTLINED_FUNCTION_59_1() != 3) {
        goto LABEL_16;
      }
      goto LABEL_20;
    case 4u:
      if (OUTLINED_FUNCTION_59_1() == 4) {
        goto LABEL_20;
      }
      goto LABEL_16;
    default:
      outlined init with copy of ConversationControlsAppLaunchButtonType(v0, (uint64_t)v17, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
      if (OUTLINED_FUNCTION_59_1())
      {
        outlined destroy of SystemUpdateNotice((uint64_t)v17, (void (*)(void))type metadata accessor for StagedCollaboration);
LABEL_16:
        outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for (ForegroundCollaborationState, ForegroundCollaborationState));
      }
      else
      {
        outlined init with take of SystemUpdateNotice(v21, (uint64_t)v9, (void (*)(void))type metadata accessor for StagedCollaboration);
        static StagedCollaboration.== infix(_:_:)((uint64_t)v17, (uint64_t)v9);
        outlined destroy of SystemUpdateNotice((uint64_t)v9, (void (*)(void))type metadata accessor for StagedCollaboration);
        outlined destroy of SystemUpdateNotice((uint64_t)v17, (void (*)(void))type metadata accessor for StagedCollaboration);
LABEL_20:
        outlined destroy of SystemUpdateNotice(v0, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
      }
      OUTLINED_FUNCTION_28();
      return;
  }
}

uint64_t ForegroundCollaborationState.isBannerSuppressed.getter()
{
  type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_87(v2, v3, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  uint64_t v4 = 1;
  switch(OUTLINED_FUNCTION_19_9())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date));
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v6();
      type metadata accessor for URL();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v7();
      uint64_t v4 = 1;
      break;
    case 2u:
      type metadata accessor for URL();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v5();
      break;
    case 3u:
    case 4u:
      return v4;
    default:
      uint64_t v4 = *(unsigned __int8 *)(v0
                              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                                       + 48));
      outlined destroy of SystemUpdateNotice(v0, (void (*)(void))type metadata accessor for StagedCollaboration);
      break;
  }
  return v4;
}

uint64_t ForegroundCollaborationState.isBannerSuppressed.setter(char a1)
{
  type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_87(v5, v6, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v12 = v1
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                   + 48);
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      (*(void (**)(uint64_t))(v13 + 8))(v12);
      goto LABEL_4;
    case 2:
LABEL_4:
      type metadata accessor for URL();
      OUTLINED_FUNCTION_0();
      uint64_t result = (*(uint64_t (**)(uint64_t))(v14 + 8))(v1);
      break;
    case 3:
    case 4:
      return result;
    default:
      outlined destroy of SystemUpdateNotice(v2, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                  + 48);
      uint64_t v9 = OUTLINED_FUNCTION_35();
      outlined init with take of SystemUpdateNotice(v9, v10, v11);
      *(unsigned char *)(v2 + v8) = a1 & 1;
      uint64_t result = swift_storeEnumTagMultiPayload();
      break;
  }
  return result;
}

void (*ForegroundCollaborationState.isBannerSuppressed.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  v3[1] = type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  size_t v5 = *(void *)(v4 + 64);
  v3[2] = malloc(v5);
  uint64_t v6 = malloc(v5);
  v3[3] = v6;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)v6, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
  char v7 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date));
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v9();
      type metadata accessor for URL();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v10();
      char v7 = 1;
      break;
    case 2u:
      type metadata accessor for URL();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v8();
      break;
    case 3u:
    case 4u:
      break;
    default:
      char v7 = v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                     + 48)];
      outlined destroy of SystemUpdateNotice((uint64_t)v6, (void (*)(void))type metadata accessor for StagedCollaboration);
      break;
  }
  *((unsigned char *)v3 + 32) = v7;
  return ForegroundCollaborationState.isBannerSuppressed.modify;
}

void ForegroundCollaborationState.isBannerSuppressed.modify(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)*a1 + 32);
  if (a2)
  {
    size_t v5 = (void *)v2[2];
    uint64_t v4 = (void *)v2[3];
    ForegroundCollaborationState.isBannerSuppressed.setter(*((unsigned char *)*a1 + 32));
  }
  else
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(**a1, v2[2], (void (*)(void))type metadata accessor for ForegroundCollaborationState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = v2[2];
        uint64_t v10 = v9
            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                     + 48);
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        (*(void (**)(uint64_t))(v11 + 8))(v10);
        goto LABEL_7;
      case 2u:
        uint64_t v9 = v2[2];
LABEL_7:
        type metadata accessor for URL();
        OUTLINED_FUNCTION_0();
        (*(void (**)(uint64_t))(v12 + 8))(v9);
        break;
      case 3u:
      case 4u:
        break;
      default:
        uint64_t v6 = v2[2];
        uint64_t v7 = *v2;
        outlined destroy of SystemUpdateNotice(*v2, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
        uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                    + 48);
        outlined init with take of SystemUpdateNotice(v6, v7, (void (*)(void))type metadata accessor for StagedCollaboration);
        *(unsigned char *)(v7 + v8) = v3;
        swift_storeEnumTagMultiPayload();
        break;
    }
    size_t v5 = (void *)v2[2];
    uint64_t v4 = (void *)v2[3];
  }
  free(v4);
  free(v5);
  free(v2);
}

Swift::Void __swiftcall ConversationControlsViewController.updateBackgroundBlur()()
{
  ConversationControlsViewController.updateBackgroundBlur()(v0, v1, "Ignoring request to update background blur");
}

Swift::Void __swiftcall ConversationControlsViewController.updateBackgroundCornerRadius()()
{
  ConversationControlsViewController.updateBackgroundBlur()(v0, v1, "Ignoring request to update background corner radius");
}

void ConversationControlsViewController.updateBackgroundBlur()(uint64_t a1, uint64_t a2, const char *a3)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationControls);
  oslog = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C2F90000, oslog, v5, a3, v6, 2u);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }
}

uint64_t CaptureGroup.name.getter()
{
  return OUTLINED_FUNCTION_23_0();
}

uint64_t CaptureGroup.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CaptureGroup.name.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *CaptureGroup.view.getter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  return a3;
}

void CaptureGroup.view.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*CaptureGroup.view.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void UIVisualEffectView.setCaptureGroup(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    a3 = 0;
  }
  objc_msgSend(v3, sel__setCaptureView_, a3);
  if (a2) {
    uint64_t v6 = MEMORY[0x1C87730B0](a1, a2);
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  objc_msgSend(v3, sel__setGroupName_);
}

uint64_t String.localizedConversationControls.getter()
{
  OUTLINED_FUNCTION_86();
  id v0 = objc_msgSend(self, sel_conversationKit);
  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v2 = (void *)MEMORY[0x1C87730B0](v1);
  char v3 = (void *)MEMORY[0x1C87730B0](0, 0xE000000000000000);
  unint64_t v4 = OUTLINED_FUNCTION_82();
  os_log_type_t v5 = (void *)MEMORY[0x1C87730B0](v4);
  id v6 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v2, v3, v5);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return OUTLINED_FUNCTION_35();
}

id static NSAttributedString.localizedString(_:prefixImage:imageBounds:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  OUTLINED_FUNCTION_86();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  id v8 = NSMutableAttributedString.__allocating_init(string:)(v6, v7);
  if (a3)
  {
    id v9 = objc_allocWithZone(MEMORY[0x1E4F28E50]);
    id v10 = a3;
    id v11 = objc_msgSend(v9, sel_init);
    id v12 = objc_msgSend(self, sel_textAttachmentWithImage_, v10);
    outlined init with take of Any?(a4, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
    if ((v20 & 1) == 0) {
      objc_msgSend(v12, sel_setBounds_, v19[0], v19[1], v19[2], v19[3]);
    }
    type metadata accessor for AppUtilities();
    if (static AppUtilities.isRTL.getter())
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      id v13 = NSMutableAttributedString.__allocating_init(string:)(32, 0xE100000000000000);
      OUTLINED_FUNCTION_65();

      id v14 = objc_msgSend(self, sel_attributedStringWithAttachment_, v12);
      OUTLINED_FUNCTION_65();

      id v15 = objc_msgSend(v8, sel_length);
    }
    else
    {
      id v16 = objc_msgSend(self, sel_attributedStringWithAttachment_, v12);
      objc_msgSend(v11, sel_appendAttributedString_, v16);

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      id v17 = NSMutableAttributedString.__allocating_init(string:)(32, 0xE100000000000000);
      OUTLINED_FUNCTION_65();

      id v15 = 0;
    }
    objc_msgSend(v8, sel_insertAttributedString_atIndex_, v11, v15);
  }
  return v8;
}

id NSMutableAttributedString.__allocating_init(string:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  os_log_type_t v5 = (void *)MEMORY[0x1C87730B0](a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_88();
  id v8 = [v6 v7];

  return v8;
}

Swift::Bool __swiftcall LSPropertyList.contains(entitlement:)(Swift::String entitlement)
{
  uint64_t v1 = (void *)MEMORY[0x1C87730B0](entitlement._countAndFlagsBits, entitlement._object);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  swift_getObjCClassFromMetadata();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_88();
  id v4 = [v2 v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  outlined init with take of Any?((uint64_t)v8, (uint64_t)v9, &demangling cache variable for type metadata for Any?);
  if (!v10)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unsigned __int8 v5 = objc_msgSend(v7, sel_BOOLValue);

  return v5;
}

void protocol witness for ConversationControlsViewController.updateBackgroundBlur() in conformance ConversationNoticeViewController()
{
}

void protocol witness for ConversationControlsViewController.updateBackgroundCornerRadius() in conformance ConversationNoticeViewController()
{
}

uint64_t static String._createEmpty(withInitialCapacity:)(Swift::Int a1)
{
  if (a1 < 16) {
    return 0;
  }
  _StringGuts.grow(_:)(a1);
  return 0;
}

uint64_t outlined init with copy of ConversationControlsType(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined destroy of ConversationControlsType(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of SystemUpdateNotice(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t type metadata accessor for ConversationControlsAppLaunchButtonType(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationControlsAppLaunchButtonType);
}

uint64_t type metadata accessor for ForegroundApp()
{
  return self;
}

uint64_t type metadata accessor for ForegroundCollaborationState(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ForegroundCollaborationState);
}

uint64_t outlined init with copy of ConversationControlsAppLaunchButtonType(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

uint64_t outlined init with take of SystemUpdateNotice(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_90();
  v5(v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsContext and conformance ConversationControlsContext()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationControlsContext and conformance ConversationControlsContext;
  if (!lazy protocol witness table cache variable for type ConversationControlsContext and conformance ConversationControlsContext)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsContext and conformance ConversationControlsContext);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsSizeClass and conformance ConversationControlsSizeClass()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationControlsSizeClass and conformance ConversationControlsSizeClass;
  if (!lazy protocol witness table cache variable for type ConversationControlsSizeClass and conformance ConversationControlsSizeClass)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsSizeClass and conformance ConversationControlsSizeClass);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RejectedRemoteControlRequesetContext.Reason and conformance RejectedRemoteControlRequesetContext.Reason()
{
  unint64_t result = lazy protocol witness table cache variable for type RejectedRemoteControlRequesetContext.Reason and conformance RejectedRemoteControlRequesetContext.Reason;
  if (!lazy protocol witness table cache variable for type RejectedRemoteControlRequesetContext.Reason and conformance RejectedRemoteControlRequesetContext.Reason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RejectedRemoteControlRequesetContext.Reason and conformance RejectedRemoteControlRequesetContext.Reason);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SharePlayAppType and conformance SharePlayAppType()
{
  unint64_t result = lazy protocol witness table cache variable for type SharePlayAppType and conformance SharePlayAppType;
  if (!lazy protocol witness table cache variable for type SharePlayAppType and conformance SharePlayAppType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharePlayAppType and conformance SharePlayAppType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState()
{
  unint64_t result = lazy protocol witness table cache variable for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState;
  if (!lazy protocol witness table cache variable for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState;
  if (!lazy protocol witness table cache variable for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState);
  }
  return result;
}

uint64_t sub_1C2FEB014@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ForegroundCollaborationState.isBannerSuppressed.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C2FEB044(char *a1)
{
  return ForegroundCollaborationState.isBannerSuppressed.setter(*a1);
}

uint64_t getEnumTag for ConversationControlsContext(unsigned __int8 *a1)
{
  return *a1;
}

void type metadata accessor for ConversationControlsContext()
{
}

void type metadata accessor for ConversationControlsSizeClass()
{
}

void type metadata accessor for RejectedRemoteControlRequesetContext()
{
}

uint64_t getEnumTagSinglePayload for RejectedRemoteControlRequesetContext.Reason(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for RejectedRemoteControlRequesetContext.Reason(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2FEB190);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for RejectedRemoteControlRequesetContext.Reason()
{
}

void destroy for ConversationControlsType(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 6) {
    unsigned int v1 = *(_DWORD *)a1 + 6;
  }
  switch(v1)
  {
    case 0u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 1u:
    case 3u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      int v2 = *(void **)a1;

      break;
    case 5u:
      swift_unknownObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ConversationControlsType(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 6) {
    unsigned int v3 = *(_DWORD *)a2 + 6;
  }
  switch(v3)
  {
    case 0u:
      long long v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t))(v4 - 8))(a1);
      *(unsigned char *)(a1 + 40) = 0;
      break;
    case 1u:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      char v7 = 1;
      goto LABEL_9;
    case 2u:
      id v8 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 2;
      id v9 = v8;
      break;
    case 3u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      char v7 = 3;
LABEL_9:
      *(unsigned char *)(a1 + 40) = v7;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      *(unsigned char *)(a1 + 40) = 4;
      break;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  return a1;
}

uint64_t assignWithCopy for ConversationControlsType(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 1u:
      case 3u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 5u:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 6) {
      unsigned int v5 = *(_DWORD *)a2 + 6;
    }
    switch(v5)
    {
      case 0u:
        uint64_t v6 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        break;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v7 = 1;
        goto LABEL_16;
      case 2u:
        id v8 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 2;
        id v9 = v8;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v7 = 3;
LABEL_16:
        *(unsigned char *)(a1 + 40) = v7;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *(unsigned char *)(a1 + 40) = 4;
        break;
      case 5u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v10 = *a2;
        long long v11 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v10;
        *(_OWORD *)(a1 + 16) = v11;
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ConversationControlsType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 1u:
      case 3u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 5u:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 6) {
      unsigned int v5 = *(_DWORD *)a2 + 6;
    }
    switch(v5)
    {
      case 0u:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 1;
        goto LABEL_18;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v7 = 2;
        goto LABEL_18;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 3;
        goto LABEL_18;
      case 4u:
        char v7 = 4;
        goto LABEL_18;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 5;
LABEL_18:
        *(unsigned char *)(a1 + 40) = v7;
        break;
      default:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationControlsType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 7) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConversationControlsType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for ConversationControlsType(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 6) {
    return (*(_DWORD *)a1 + 6);
  }
  return result;
}

uint64_t destructiveInjectEnumTag for ConversationControlsType(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

void type metadata accessor for ConversationControlsType()
{
}

void type metadata accessor for SharePlayAppType()
{
}

void *initializeBufferWithCopyOfBuffer for ConversationControlsAppLaunchButtonType(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v12 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          goto LABEL_22;
        case 4u:
          uint64_t v13 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v15 = *(int *)(v14 + 48);
          id v16 = (char *)a1 + v15;
          id v17 = (char *)a2 + v15;
          *(_OWORD *)id v16 = *(_OWORD *)((char *)a2 + v15);
          uint64_t v18 = *(void *)((char *)a2 + v15 + 16);
          uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
          *((void *)v16 + 2) = v18;
          *((void *)v16 + 3) = v19;
          *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
          *((void *)v16 + 5) = *((void *)v17 + 5);
          v16[48] = v17[48];
          *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
          *(_OWORD *)(v16 + 72) = *(_OWORD *)(v17 + 72);
          v16[88] = v17[88];
          v16[89] = v17[89];
          uint64_t v20 = *((void *)v17 + 15);
          swift_bridgeObjectRetain();
          if (v20)
          {
            if (v20 == 1)
            {
              uint64_t v21 = v16 + 96;
              uint64_t v22 = v17 + 96;
              size_t v23 = 209;
              goto LABEL_16;
            }
            uint64_t v25 = *((void *)v17 + 16);
            *((void *)v16 + 15) = v20;
            *((void *)v16 + 16) = v25;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(v16 + 96), (uint64_t)(v17 + 96), v20);
          }
          else
          {
            long long v24 = *((_OWORD *)v17 + 7);
            *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
            *((_OWORD *)v16 + 7) = v24;
            *((void *)v16 + 16) = *((void *)v17 + 16);
          }
          *((_DWORD *)v16 + 34) = *((_DWORD *)v17 + 34);
          long long v26 = *((_OWORD *)v17 + 10);
          *((_OWORD *)v16 + 9) = *((_OWORD *)v17 + 9);
          *((_OWORD *)v16 + 10) = v26;
          *((_OWORD *)v16 + 11) = *((_OWORD *)v17 + 11);
          v16[192] = v17[192];
          uint64_t v21 = v16 + 208;
          uint64_t v22 = v17 + 208;
          *((void *)v16 + 25) = *((void *)v17 + 25);
          size_t v23 = 97;
LABEL_16:
          memcpy(v21, v22, v23);
          uint64_t v27 = *((void *)v17 + 39);
          if (v27)
          {
            uint64_t v28 = *((void *)v17 + 40);
            uint64_t v29 = *((void *)v17 + 41);
            *((void *)v16 + 39) = v27;
            *((void *)v16 + 40) = v28;
            *((void *)v16 + 41) = v29;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v16 + 312) = *(_OWORD *)(v17 + 312);
            *((void *)v16 + 41) = *((void *)v17 + 41);
          }
          uint64_t v30 = *(int *)(v14 + 64);
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = (char *)a2 + v30;
          uint64_t v33 = *((void *)v32 + 1);
          if (v33)
          {
            *(void *)uint64_t v31 = *(void *)v32;
            *((void *)v31 + 1) = v33;
            uint64_t v34 = *((void *)v32 + 3);
            *((void *)v31 + 2) = *((void *)v32 + 2);
            *((void *)v31 + 3) = v34;
            v31[32] = v32[32];
            *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
            *((void *)v31 + 7) = *((void *)v32 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v35 = *((_OWORD *)v32 + 1);
            *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
            *((_OWORD *)v31 + 1) = v35;
            long long v36 = *((_OWORD *)v32 + 3);
            *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
            *((_OWORD *)v31 + 3) = v36;
          }
LABEL_22:
          swift_storeEnumTagMultiPayload();
LABEL_23:
          Swift::String v37 = (int *)type metadata accessor for Participant(0);
          uint64_t v38 = v37[5];
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          uint64_t v41 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
          uint64_t v42 = v37[6];
          uint64_t v43 = (char *)a1 + v42;
          uint64_t v44 = (char *)a2 + v42;
          void v43[4] = v44[4];
          *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
          uint64_t v45 = v37[7];
          int v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          uint64_t v48 = *(void **)v47;
          if (*(void *)v47)
          {
            uint64_t v49 = *((void *)v47 + 1);
            *(void *)int v46 = v48;
            *((void *)v46 + 1) = v49;
            v46[16] = v47[16];
            uint64_t v50 = *((void *)v47 + 4);
            *((void *)v46 + 3) = *((void *)v47 + 3);
            *((void *)v46 + 4) = v50;
            id v51 = v48;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v52 = *((_OWORD *)v47 + 1);
            *(_OWORD *)int v46 = *(_OWORD *)v47;
            *((_OWORD *)v46 + 1) = v52;
            *((void *)v46 + 4) = *((void *)v47 + 4);
          }
          *(void *)((char *)a1 + v37[8]) = *(void *)((char *)a2 + v37[8]);
          uint64_t v53 = v37[9];
          uint64_t v54 = (void *)((char *)a1 + v53);
          uint64_t v55 = (void *)((char *)a2 + v53);
          uint64_t v56 = v55[1];
          *uint64_t v54 = *v55;
          v54[1] = v56;
          *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
          *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
          uint64_t v57 = v37[12];
          uint64_t v58 = *(void **)((char *)a2 + v57);
          *(void *)((char *)a1 + v57) = v58;
          *((unsigned char *)a1 + v37[13]) = *((unsigned char *)a2 + v37[13]);
          uint64_t v59 = v37[14];
          uint64_t v60 = (char *)a1 + v59;
          uint64_t v61 = (char *)a2 + v59;
          uint64_t v62 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v63 = v58;
          if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
          {
            uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
            __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
          }
          uint64_t v65 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v66 = *(int *)(v65 + 20);
          uint64_t v67 = &v60[v66];
          uint64_t v68 = &v61[v66];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
          {
            uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v67, v68, v62);
            __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
          }
          v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
          *((unsigned char *)a1 + v37[15]) = *((unsigned char *)a2 + v37[15]);
          *(void *)((char *)a1 + v37[16]) = *(void *)((char *)a2 + v37[16]);
          swift_retain();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_23;
      }
      goto LABEL_33;
    }
    if (!EnumCaseMultiPayload)
    {
      id v8 = (void *)*a2;
      *a1 = *a2;
      id v9 = v8;
LABEL_33:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void destroy for ConversationControlsAppLaunchButtonType(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v4 = type metadata accessor for Date();
        (*(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        break;
      case 4u:
        uint64_t v12 = type metadata accessor for Date();
        (*(void (**)(void **, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v14 = (char *)a1 + *(int *)(v13 + 48);
        swift_bridgeObjectRelease();
        if (*((void *)v14 + 15) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v14 + 96));
        }
        if (*((void *)v14 + 39))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void **)((char *)a1 + *(int *)(v13 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    int v5 = (int *)type metadata accessor for Participant(0);
    uint64_t v6 = (char *)a1 + v5[5];
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    id v8 = (void **)((char *)a1 + v5[7]);
    if (*v8)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v9 = (uint64_t)a1 + v5[14];
    uint64_t v10 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v9 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v11, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v11, v10);
    }
    swift_release();
  }
  else if (!EnumCaseMultiPayload)
  {
    unsigned int v3 = *a1;
  }
}

void **initializeWithCopy for ConversationControlsAppLaunchButtonType(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v10 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_20;
      case 4u:
        uint64_t v11 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        *(_OWORD *)uint64_t v14 = *(_OWORD *)((char *)a2 + v13);
        uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 16);
        uint64_t v17 = *(uint64_t *)((char *)a2 + v13 + 24);
        *((void *)v14 + 2) = v16;
        *((void *)v14 + 3) = v17;
        *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
        *((void *)v14 + 5) = *((void *)v15 + 5);
        v14[48] = v15[48];
        *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
        *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
        v14[88] = v15[88];
        v14[89] = v15[89];
        uint64_t v18 = *((void *)v15 + 15);
        swift_bridgeObjectRetain();
        if (v18)
        {
          if (v18 == 1)
          {
            uint64_t v19 = v14 + 96;
            uint64_t v20 = v15 + 96;
            size_t v21 = 209;
            goto LABEL_14;
          }
          uint64_t v23 = *((void *)v15 + 16);
          *((void *)v14 + 15) = v18;
          *((void *)v14 + 16) = v23;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(v14 + 96), (uint64_t)(v15 + 96), v18);
        }
        else
        {
          long long v22 = *((_OWORD *)v15 + 7);
          *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
          *((_OWORD *)v14 + 7) = v22;
          *((void *)v14 + 16) = *((void *)v15 + 16);
        }
        *((_DWORD *)v14 + 34) = *((_DWORD *)v15 + 34);
        long long v24 = *((_OWORD *)v15 + 10);
        *((_OWORD *)v14 + 9) = *((_OWORD *)v15 + 9);
        *((_OWORD *)v14 + 10) = v24;
        *((_OWORD *)v14 + 11) = *((_OWORD *)v15 + 11);
        v14[192] = v15[192];
        uint64_t v19 = v14 + 208;
        uint64_t v20 = v15 + 208;
        *((void *)v14 + 25) = *((void *)v15 + 25);
        size_t v21 = 97;
LABEL_14:
        memcpy(v19, v20, v21);
        uint64_t v25 = *((void *)v15 + 39);
        if (v25)
        {
          uint64_t v26 = *((void *)v15 + 40);
          uint64_t v27 = *((void *)v15 + 41);
          *((void *)v14 + 39) = v25;
          *((void *)v14 + 40) = v26;
          *((void *)v14 + 41) = v27;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v14 + 312) = *(_OWORD *)(v15 + 312);
          *((void *)v14 + 41) = *((void *)v15 + 41);
        }
        uint64_t v28 = *(int *)(v12 + 64);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = *((void *)v30 + 1);
        if (v31)
        {
          *(void *)uint64_t v29 = *(void *)v30;
          *((void *)v29 + 1) = v31;
          uint64_t v32 = *((void *)v30 + 3);
          *((void *)v29 + 2) = *((void *)v30 + 2);
          *((void *)v29 + 3) = v32;
          unsigned char v29[32] = v30[32];
          *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
          *((void *)v29 + 7) = *((void *)v30 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v33 = *((_OWORD *)v30 + 1);
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          *((_OWORD *)v29 + 1) = v33;
          long long v34 = *((_OWORD *)v30 + 3);
          *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
          *((_OWORD *)v29 + 3) = v34;
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
LABEL_21:
        long long v35 = (int *)type metadata accessor for Participant(0);
        uint64_t v36 = v35[5];
        Swift::String v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        uint64_t v40 = v35[6];
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        v41[4] = v42[4];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        uint64_t v43 = v35[7];
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        int v46 = *(void **)v45;
        if (*(void *)v45)
        {
          uint64_t v47 = *((void *)v45 + 1);
          *(void *)uint64_t v44 = v46;
          *((void *)v44 + 1) = v47;
          v44[16] = v45[16];
          uint64_t v48 = *((void *)v45 + 4);
          *((void *)v44 + 3) = *((void *)v45 + 3);
          *((void *)v44 + 4) = v48;
          id v49 = v46;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v50 = *((_OWORD *)v45 + 1);
          *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
          *((_OWORD *)v44 + 1) = v50;
          *((void *)v44 + 4) = *((void *)v45 + 4);
        }
        *(void **)((char *)a1 + v35[8]) = *(void **)((char *)a2 + v35[8]);
        uint64_t v51 = v35[9];
        long long v52 = (void **)((char *)a1 + v51);
        uint64_t v53 = (void **)((char *)a2 + v51);
        uint64_t v54 = v53[1];
        void *v52 = *v53;
        v52[1] = v54;
        *((unsigned char *)a1 + v35[10]) = *((unsigned char *)a2 + v35[10]);
        *(void **)((char *)a1 + v35[11]) = *(void **)((char *)a2 + v35[11]);
        uint64_t v55 = v35[12];
        uint64_t v56 = *(void **)((char *)a2 + v55);
        *(void **)((char *)a1 + v55) = v56;
        *((unsigned char *)a1 + v35[13]) = *((unsigned char *)a2 + v35[13]);
        uint64_t v57 = v35[14];
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v61 = v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        uint64_t v63 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v64 = *(int *)(v63 + 20);
        uint64_t v65 = &v58[v64];
        uint64_t v66 = &v59[v64];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v65, v66, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
        }
        v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
        *((unsigned char *)a1 + v35[15]) = *((unsigned char *)a2 + v35[15]);
        *(void **)((char *)a1 + v35[16]) = *(void **)((char *)a2 + v35[16]);
        swift_retain();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_21;
    }
    goto LABEL_31;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    id v8 = v7;
LABEL_31:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void **assignWithCopy for ConversationControlsAppLaunchButtonType(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice((uint64_t)a1, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v10 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          goto LABEL_21;
        case 4u:
          uint64_t v11 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v13 = *(int *)(v12 + 48);
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          *(_OWORD *)uint64_t v14 = *(_OWORD *)((char *)a2 + v13);
          *((void *)v14 + 2) = *(void **)((char *)a2 + v13 + 16);
          uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
          *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
          *((void *)v14 + 3) = v16;
          *((void *)v14 + 5) = *((void *)v15 + 5);
          v14[48] = v15[48];
          long long v17 = *(_OWORD *)(v15 + 72);
          long long v18 = *(_OWORD *)(v15 + 56);
          v14[88] = v15[88];
          *(_OWORD *)(v14 + 56) = v18;
          *(_OWORD *)(v14 + 72) = v17;
          v14[89] = v15[89];
          uint64_t v19 = *((void *)v15 + 15);
          swift_bridgeObjectRetain();
          if (v19)
          {
            if (v19 == 1)
            {
              uint64_t v20 = v14 + 96;
              size_t v21 = v15 + 96;
              size_t v22 = 209;
              goto LABEL_15;
            }
            *((void *)v14 + 15) = v19;
            *((void *)v14 + 16) = *((void *)v15 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))((uint64_t)(v14 + 96), (uint64_t)(v15 + 96), v19);
          }
          else
          {
            long long v23 = *((_OWORD *)v15 + 6);
            long long v24 = *((_OWORD *)v15 + 7);
            *((void *)v14 + 16) = *((void *)v15 + 16);
            *((_OWORD *)v14 + 6) = v23;
            *((_OWORD *)v14 + 7) = v24;
          }
          *((_DWORD *)v14 + 34) = *((_DWORD *)v15 + 34);
          *((void *)v14 + 18) = *((void *)v15 + 18);
          *((void *)v14 + 19) = *((void *)v15 + 19);
          long long v25 = *((_OWORD *)v15 + 10);
          long long v26 = *((_OWORD *)v15 + 11);
          v14[192] = v15[192];
          *((_OWORD *)v14 + 10) = v25;
          *((_OWORD *)v14 + 11) = v26;
          *((void *)v14 + 25) = *((void *)v15 + 25);
          uint64_t v20 = v14 + 208;
          size_t v21 = v15 + 208;
          size_t v22 = 97;
LABEL_15:
          memcpy(v20, v21, v22);
          uint64_t v27 = *((void *)v15 + 39);
          if (v27)
          {
            uint64_t v28 = *((void *)v15 + 40);
            *((void *)v14 + 39) = v27;
            *((void *)v14 + 40) = v28;
            *((void *)v14 + 41) = *((void *)v15 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v29 = *(_OWORD *)(v15 + 312);
            *((void *)v14 + 41) = *((void *)v15 + 41);
            *(_OWORD *)(v14 + 312) = v29;
          }
          uint64_t v30 = *(int *)(v12 + 64);
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = (char *)a2 + v30;
          if (*((void *)v32 + 1))
          {
            *(void *)uint64_t v31 = *(void *)v32;
            *((void *)v31 + 1) = *((void *)v32 + 1);
            *((void *)v31 + 2) = *((void *)v32 + 2);
            *((void *)v31 + 3) = *((void *)v32 + 3);
            v31[32] = v32[32];
            *((void *)v31 + 5) = *((void *)v32 + 5);
            *((void *)v31 + 6) = *((void *)v32 + 6);
            *((void *)v31 + 7) = *((void *)v32 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v33 = *(_OWORD *)v32;
            long long v34 = *((_OWORD *)v32 + 1);
            long long v35 = *((_OWORD *)v32 + 3);
            *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
            *((_OWORD *)v31 + 3) = v35;
            *(_OWORD *)uint64_t v31 = v33;
            *((_OWORD *)v31 + 1) = v34;
          }
LABEL_21:
          swift_storeEnumTagMultiPayload();
LABEL_22:
          uint64_t v36 = (int *)type metadata accessor for Participant(0);
          uint64_t v37 = v36[5];
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          uint64_t v41 = v36[6];
          uint64_t v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          int v44 = *(_DWORD *)v43;
          v42[4] = v43[4];
          *(_DWORD *)uint64_t v42 = v44;
          uint64_t v45 = v36[7];
          int v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          uint64_t v48 = *(void **)v47;
          if (*(void *)v47)
          {
            *(void *)int v46 = v48;
            uint64_t v49 = *((void *)v47 + 1);
            v46[16] = v47[16];
            *((void *)v46 + 1) = v49;
            *((void *)v46 + 3) = *((void *)v47 + 3);
            *((void *)v46 + 4) = *((void *)v47 + 4);
            id v50 = v48;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v51 = *(_OWORD *)v47;
            long long v52 = *((_OWORD *)v47 + 1);
            *((void *)v46 + 4) = *((void *)v47 + 4);
            *(_OWORD *)int v46 = v51;
            *((_OWORD *)v46 + 1) = v52;
          }
          *(void **)((char *)a1 + v36[8]) = *(void **)((char *)a2 + v36[8]);
          uint64_t v53 = v36[9];
          uint64_t v54 = (void **)((char *)a1 + v53);
          uint64_t v55 = (void **)((char *)a2 + v53);
          *uint64_t v54 = *v55;
          v54[1] = v55[1];
          *((unsigned char *)a1 + v36[10]) = *((unsigned char *)a2 + v36[10]);
          *(void **)((char *)a1 + v36[11]) = *(void **)((char *)a2 + v36[11]);
          uint64_t v56 = v36[12];
          uint64_t v57 = *(void **)((char *)a2 + v56);
          *(void **)((char *)a1 + v56) = v57;
          *((unsigned char *)a1 + v36[13]) = *((unsigned char *)a2 + v36[13]);
          uint64_t v58 = v36[14];
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          uint64_t v61 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v62 = v57;
          if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
          {
            uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
            __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
          }
          uint64_t v64 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v65 = *(int *)(v64 + 20);
          uint64_t v66 = &v59[v65];
          uint64_t v67 = &v60[v65];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v60[v65], 1, v61))
          {
            uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v66, v67, v61);
            __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v61);
          }
          v59[*(int *)(v64 + 24)] = v60[*(int *)(v64 + 24)];
          *((unsigned char *)a1 + v36[15]) = *((unsigned char *)a2 + v36[15]);
          *(void **)((char *)a1 + v36[16]) = *(void **)((char *)a2 + v36[16]);
          swift_retain();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_22;
      }
      goto LABEL_32;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      id v8 = v7;
LABEL_32:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for ConversationControlsAppLaunchButtonType(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_7;
      case 4u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        long long v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        long long v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    uint64_t v15 = (int *)type metadata accessor for Participant(0);
    uint64_t v16 = v15[5];
    long long v17 = &a1[v16];
    long long v18 = &a2[v16];
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    uint64_t v20 = v15[6];
    size_t v21 = &a1[v20];
    size_t v22 = &a2[v20];
    *(_DWORD *)size_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = v15[7];
    long long v24 = &a1[v23];
    long long v25 = &a2[v23];
    long long v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)long long v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    *((void *)v24 + 4) = *((void *)v25 + 4);
    *(void *)&a1[v15[8]] = *(void *)&a2[v15[8]];
    *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
    a1[v15[10]] = a2[v15[10]];
    *(void *)&a1[v15[11]] = *(void *)&a2[v15[11]];
    *(void *)&a1[v15[12]] = *(void *)&a2[v15[12]];
    a1[v15[13]] = a2[v15[13]];
    uint64_t v27 = v15[14];
    uint64_t v28 = &a1[v27];
    long long v29 = &a2[v27];
    uint64_t v30 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v32 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v33 = *(int *)(v32 + 20);
    long long v34 = &v28[v33];
    long long v35 = &v29[v33];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v34, v35, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
    }
    v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
    a1[v15[15]] = a2[v15[15]];
    *(void *)&a1[v15[16]] = *(void *)&a2[v15[16]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ConversationControlsAppLaunchButtonType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice((uint64_t)a1, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v14 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          goto LABEL_8;
        case 4u:
          uint64_t v7 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
          uint64_t v9 = *(int *)(v8 + 64);
          uint64_t v10 = &a1[v9];
          uint64_t v11 = &a2[v9];
          long long v12 = *((_OWORD *)v11 + 1);
          *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v12;
          long long v13 = *((_OWORD *)v11 + 3);
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          *((_OWORD *)v10 + 3) = v13;
LABEL_8:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      uint64_t v15 = (int *)type metadata accessor for Participant(0);
      uint64_t v16 = v15[5];
      long long v17 = &a1[v16];
      long long v18 = &a2[v16];
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      uint64_t v20 = v15[6];
      size_t v21 = &a1[v20];
      size_t v22 = &a2[v20];
      *(_DWORD *)size_t v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      uint64_t v23 = v15[7];
      long long v24 = &a1[v23];
      long long v25 = &a2[v23];
      long long v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)long long v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      *((void *)v24 + 4) = *((void *)v25 + 4);
      *(void *)&a1[v15[8]] = *(void *)&a2[v15[8]];
      *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
      a1[v15[10]] = a2[v15[10]];
      *(void *)&a1[v15[11]] = *(void *)&a2[v15[11]];
      *(void *)&a1[v15[12]] = *(void *)&a2[v15[12]];
      a1[v15[13]] = a2[v15[13]];
      uint64_t v27 = v15[14];
      uint64_t v28 = &a1[v27];
      long long v29 = &a2[v27];
      uint64_t v30 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v32 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v33 = *(int *)(v32 + 20);
      long long v34 = &v28[v33];
      long long v35 = &v29[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v34, v35, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
      }
      v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
      a1[v15[15]] = a2[v15[15]];
      *(void *)&a1[v15[16]] = *(void *)&a2[v15[16]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t destructiveInjectEnumTag for ConversationControlsAppLaunchButtonType()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for ConversationControlsAppLaunchButtonType()
{
  uint64_t result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t method lookup function for ForegroundApp(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ForegroundApp);
}

uint64_t dispatch thunk of ForegroundApp.__allocating_init(bundleIdentifier:type:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ForegroundApp.appName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ForegroundApp.isGameCenterApplication.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ForegroundApp.automaticShareState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ForegroundApp.supportsSharePlay.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ForegroundApp.setAutomaticShareState(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t getEnumTagSinglePayload for ConversationControlsContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConversationControlsContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2FEDFDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ForegroundApp.AutomaticShareState()
{
}

unsigned char *initializeBufferWithCopyOfBuffer for ForegroundCollaborationState(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v32 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v33 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
      uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                   + 48);
      long long v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v9 = (int *)type metadata accessor for StagedCollaboration(0);
      uint64_t v10 = v9[6];
      uint64_t v11 = &a1[v10];
      long long v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16);
      id v15 = v8;
      v14(v11, v12, v13);
      uint64_t v16 = v9[7];
      long long v17 = &a1[v16];
      long long v18 = &a2[v16];
      uint64_t v19 = v18[1];
      *long long v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = v9[8];
      size_t v21 = &a1[v20];
      size_t v22 = &a2[v20];
      uint64_t v23 = v22[1];
      void *v21 = *v22;
      v21[1] = v23;
      uint64_t v24 = v9[9];
      long long v25 = *(void **)&a2[v24];
      *(void *)&a1[v24] = v25;
      uint64_t v26 = v9[10];
      uint64_t v27 = *(void **)&a2[v26];
      *(void *)&a1[v26] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v28 = v25;
      id v29 = v27;
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
      a1[*(int *)(v30 + 48)] = a2[*(int *)(v30 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for ForegroundCollaborationState(id *a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = type metadata accessor for URL();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {

        int v3 = (int *)type metadata accessor for StagedCollaboration(0);
        unsigned int v4 = (char *)a1 + v3[6];
        uint64_t v5 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v6 = *(id *)((char *)a1 + v3[10]);
      }
      return;
    }
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    a1 = (id *)((char *)a1
              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                       + 48));
    uint64_t v7 = type metadata accessor for Date();
  }
  uint64_t v9 = *(void (**)(id *, uint64_t))(*(void *)(v7 - 8) + 8);
  v9(a1, v7);
}

unsigned char *initializeWithCopy for ForegroundCollaborationState(unsigned char *a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v30 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, void **, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v31 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, void **, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
    uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                 + 48);
    uint64_t v33 = &a1[v32];
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v8 = (int *)type metadata accessor for StagedCollaboration(0);
    uint64_t v9 = v8[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    id v14 = v7;
    v13(v10, v11, v12);
    uint64_t v15 = v8[7];
    uint64_t v16 = &a1[v15];
    long long v17 = (void **)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v8[8];
    uint64_t v20 = &a1[v19];
    size_t v21 = (void **)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = v8[9];
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(void *)&a1[v23] = v24;
    uint64_t v25 = v8[10];
    uint64_t v26 = *(void **)((char *)a2 + v25);
    *(void *)&a1[v25] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v24;
    id v28 = v26;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
    a1[*(int *)(v29 + 48)] = *((unsigned char *)a2 + *(int *)(v29 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for ForegroundCollaborationState(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice((uint64_t)a1, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v28 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                   + 48);
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = *a2;
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v8 = (int *)type metadata accessor for StagedCollaboration(0);
      uint64_t v9 = v8[6];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UUID();
      uint64_t v13 = *(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      id v14 = v7;
      v13(v10, v11, v12);
      uint64_t v15 = v8[7];
      uint64_t v16 = (void **)((char *)a1 + v15);
      long long v17 = (void **)((char *)a2 + v15);
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      uint64_t v18 = v8[8];
      uint64_t v19 = (void **)((char *)a1 + v18);
      uint64_t v20 = (void **)((char *)a2 + v18);
      void *v19 = *v20;
      v19[1] = v20[1];
      uint64_t v21 = v8[9];
      uint64_t v22 = *(void **)((char *)a2 + v21);
      *(void **)((char *)a1 + v21) = v22;
      uint64_t v23 = v8[10];
      uint64_t v24 = *(void **)((char *)a2 + v23);
      *(void **)((char *)a1 + v23) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v25 = v22;
      id v26 = v24;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
      *((unsigned char *)a1 + *(int *)(v27 + 48)) = *((unsigned char *)a2 + *(int *)(v27 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for ForegroundCollaborationState(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                 + 48);
    uint64_t v16 = &a1[v15];
    long long v17 = &a2[v15];
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v7 = (int *)type metadata accessor for StagedCollaboration(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
    *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
    a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithTake for ForegroundCollaborationState(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice((uint64_t)a1, (void (*)(void))type metadata accessor for ForegroundCollaborationState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                   + 48);
      uint64_t v16 = &a1[v15];
      long long v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v7 = (int *)type metadata accessor for StagedCollaboration(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
      a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ForegroundCollaborationState()
{
  uint64_t result = type metadata accessor for StagedCollaboration(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v6;
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(result - 8);
      uint64_t result = type metadata accessor for Date();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v8 = &v5;
        uint64_t v9 = v3 + 64;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t dispatch thunk of ConversationControlsViewController.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationControlsViewController.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ConversationControlsViewController.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ConversationControlsViewController.recipe.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConversationControlsViewController.recipe.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ConversationControlsViewController.recipe.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ConversationControlsViewController.presentationSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ConversationControlsViewController.menuPresented.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ConversationControlsViewController.systemApertureElement.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ConversationControlsViewController.systemAperturePreferredContentSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ConversationControlsViewController.controlsManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ConversationControlsViewController.controlsManager.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of ConversationControlsViewController.controlsManager.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of ConversationControlsViewController.updatePresentationSize(to:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ConversationControlsViewController.updatePreferredContentSize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of ConversationControlsViewController.updateBackgroundBlur()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ConversationControlsViewController.updateBackgroundCornerRadius()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

void destroy for CaptureGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 16);
}

void *initializeBufferWithCopyOfBuffer for CaptureGroup(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for CaptureGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)a1[2];
  id v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for CaptureGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for CaptureGroup(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for CaptureGroup()
{
}

uint64_t dispatch thunk of CaptureGroupConfiguringView.setCaptureGroup(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ConversationControlsViewControllerDelegate.controlsPreferredContentSizeChanged(presentingMenu:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ConversationControlsViewControllerDelegate.menuPresented.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationControlsViewControllerDelegate.needsMenuContainerView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ConversationControlsViewControllerDelegate.captureGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConversationControlsViewControllerDelegate.needsBackgroundBlur.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ConversationControlsViewControllerDelegate.eligibleForDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SystemConversationControlsViewControllerDelegate.deepLinkToFullScreenCallUI()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SystemConversationControlsViewControllerDelegate.deepLinkToFullScreenCallDetailsView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SystemConversationControlsViewControllerDelegate.showDefaultSystemHUD()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SystemConversationControlsViewControllerDelegate.deepLinkToFullScreenPTTCallDetailsView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SystemConversationControlsViewControllerDelegate.systemApertureTouchInsetsUpdated(to:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SystemConversationControlsViewControllerDelegate.isSystemAperturePresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InCallConversationControlsViewControllerDelegate.callDetailsGestureRecognizerTapped()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InCallConversationControlsViewControllerDelegate.layoutIdiom.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t outlined init with copy of Participant.ScreenInfo(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined destroy of Participant.ScreenInfo(uint64_t a1)
{
  return a1;
}

uint64_t outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1)
{
  return a1;
}

id outlined copy of ButtonBackgroundStyle(id result, void *a2, char a3)
{
  if (a3 >> 6 == 1) {
    return result;
  }
  if (!(a3 >> 6)) {
    return outlined copy of ButtonBackgroundBlurStyle(result, a2, a3);
  }
  return result;
}

id outlined copy of ButtonBackgroundBlurStyle(id result, void *a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1) {
      return result;
    }
    id v4 = result;
    uint64_t result = a2;
  }
  return result;
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id outlined copy of InCallControlButtonConfiguration.Regular?(id result, void *a2, void *a3, void *a4, char a5)
{
  if (result)
  {
    id v9 = result;
    id v10 = a2;
    return outlined copy of InCallControlButtonConfiguration.DiscConfiguration(a3, a4, a5 & 1);
  }
  return result;
}

id outlined copy of InCallControlButtonConfiguration.DiscConfiguration(void *a1, void *a2, char a3)
{
  if (a3)
  {
    id v5 = a1;
    a1 = a2;
    uint64_t v3 = vars8;
  }
  return a1;
}

id outlined copy of InCallControlButtonConfiguration.Flat?(id result, void *a2, void *a3)
{
  if (result)
  {
    id v4 = result;
    id v5 = a2;
    return a3;
  }
  return result;
}

_OWORD *outlined init with take of ConversationControlsType(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

double OUTLINED_FUNCTION_75_0()
{
  double result = 0.0;
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return result;
}

double OUTLINED_FUNCTION_76()
{
  return 0.0;
}

unint64_t OUTLINED_FUNCTION_82()
{
  return 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_87(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v3, a3);
}

void OUTLINED_FUNCTION_91()
{
  _StringGuts.grow(_:)(19);
}

Swift::Bool __swiftcall CFXEffect.isAnimoji()()
{
  unint64_t v1 = self;
  id v2 = objc_msgSend(self, sel_effectTypeWithIdentifier_, *MEMORY[0x1E4F57D88]);
  id v3 = objc_msgSend(v1, sel_effectIdentifiersForEffectType_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v5 = objc_msgSend(v0, sel_identifier);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  LOBYTE(v5) = specialized Sequence<>.contains(_:)(v6, v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  id v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return OUTLINED_FUNCTION_1_3();
  }
  for (uint64_t i = (unsigned char *)(a2 + 36); (*i & 1) != 0; i += 8)
  {
    if ((a1 & 0x100000000) != 0) {
      return OUTLINED_FUNCTION_4_3();
    }
LABEL_8:
    if (!--v2) {
      return OUTLINED_FUNCTION_1_3();
    }
  }
  if ((a1 & 0x100000000) != 0 || *((_DWORD *)i - 1) != a1) {
    goto LABEL_8;
  }
  return OUTLINED_FUNCTION_4_3();
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, unint64_t a2)
{
  return specialized Sequence<>.contains(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for NSObject);
}

{
  return specialized Sequence<>.contains(_:)(a1, a2, &lazy cache variable for type metadata for UIGestureRecognizer);
}

{
  return specialized Sequence<>.contains(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for AVCaptureDevice);
}

{
  return specialized Sequence<>.contains(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
}

{
  return specialized Sequence<>.contains(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for UIView);
}

uint64_t specialized Sequence<>.contains(_:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return OUTLINED_FUNCTION_1_3();
  }
  uint64_t v3 = (unsigned __int8 *)(a2 + 32);
  while (1)
  {
    unsigned int v5 = *v3++;
    unsigned int v4 = v5;
    unsigned int v6 = v5 >> 6;
    if (!(v5 >> 6)) {
      break;
    }
    if (v6 == 1)
    {
      if ((a1 & 0xC0) == 0x40 && ((v4 ^ a1) & 0x3F) == 0) {
        return OUTLINED_FUNCTION_4_3();
      }
    }
    else if (v4 == 128)
    {
      if (a1 == 128) {
        return OUTLINED_FUNCTION_4_3();
      }
    }
    else if (a1 == 129)
    {
      return OUTLINED_FUNCTION_4_3();
    }
LABEL_18:
    if (!--v2) {
      return OUTLINED_FUNCTION_1_3();
    }
  }
  if (a1 > 0x3Fu || v4 != a1) {
    goto LABEL_18;
  }
  return OUTLINED_FUNCTION_4_3();
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
    while (1)
    {
      id v6 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](0, a2) : *(id *)(a2 + 32);
      uint64_t v7 = v6;
      type metadata accessor for NSObject(0, a3);
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        break;
      }
      if (v5 != 1)
      {
        uint64_t v11 = 5;
        while (1)
        {
          a3 = (unint64_t *)(v11 - 4);
          id v12 = (a2 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1C87744F0](v11 - 4, a2)
              : *(id *)(a2 + 8 * v11);
          uint64_t v13 = v12;
          uint64_t v14 = v11 - 3;
          if (__OFADD__(a3, 1)) {
            break;
          }
          char v9 = static NSObject.== infix(_:_:)();

          if ((v9 & 1) == 0)
          {
            ++v11;
            if (v14 != v5) {
              continue;
            }
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        if (v5) {
          continue;
        }
      }
      goto LABEL_8;
    }
    char v9 = 1;
  }
  else
  {
LABEL_8:
    char v9 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return OUTLINED_FUNCTION_1_3();
  }
  for (uint64_t i = (unsigned char *)(a3 + 41); ; i += 16)
  {
    if (*i)
    {
      if ((a2 & 0x100) != 0) {
        return OUTLINED_FUNCTION_4_3();
      }
      goto LABEL_12;
    }
    if ((a2 & 0x100) != 0) {
      goto LABEL_12;
    }
    if ((*(i - 1) & 1) == 0) {
      break;
    }
    if (a2) {
      return OUTLINED_FUNCTION_4_3();
    }
LABEL_12:
    if (!--v3) {
      return OUTLINED_FUNCTION_1_3();
    }
  }
  if ((a2 & 1) != 0 || *(void *)(i - 9) != a1) {
    goto LABEL_12;
  }
  return OUTLINED_FUNCTION_4_3();
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    goto LABEL_5;
  }
  if ((((result & 1) == 0) ^ *(unsigned __int8 *)(a2 + 32)))
  {
    char v3 = 1;
    return v3 & 1;
  }
  if (v2 == 1)
  {
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  uint64_t v4 = 33;
  while (1)
  {
    uint64_t v5 = v4 - 31;
    if (__OFADD__(v4 - 32, 1)) {
      break;
    }
    char v3 = ((result & 1) == 0) ^ *(unsigned char *)(a2 + v4);
    if ((v3 & 1) == 0)
    {
      ++v4;
      if (v5 != v2) {
        continue;
      }
    }
    return v3 & 1;
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence<>.contains(_:)(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xE500000000000000;
    unint64_t v8 = 0x656C746974;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        unint64_t v8 = 0x41746E6572727563;
        unint64_t v7 = 0xEF79746976697463;
        break;
      case 2:
        unint64_t v8 = 0x7069636974726170;
        uint64_t v9 = 1937010273;
        goto LABEL_10;
      case 3:
        unint64_t v8 = 0x6572616873;
        break;
      case 4:
        unint64_t v8 = 0x6143656C67676F74;
        uint64_t v10 = 0x736E6F697470;
        goto LABEL_12;
      case 5:
        unint64_t v7 = 0x80000001C3790F10;
        unint64_t v8 = 0xD000000000000017;
        break;
      case 6:
        unint64_t v8 = 0x7373654D6E65706FLL;
        uint64_t v9 = 1936025441;
LABEL_10:
        unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      case 7:
        unint64_t v8 = 0x646E416B636F6C62;
        uint64_t v10 = 0x74726F706552;
LABEL_12:
        unint64_t v7 = v10 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
        break;
      case 8:
        unint64_t v7 = 0xE800000000000000;
        unint64_t v8 = 0x656C746954747470;
        break;
      case 9:
        unint64_t v8 = 0x545450657661656CLL;
        unint64_t v7 = 0xEF6C656E6E616843;
        break;
      case 0xA:
        unint64_t v8 = 0x415454506E65706FLL;
        unint64_t v7 = 0xEA00000000007070;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE500000000000000;
    unint64_t v12 = 0x656C746974;
    switch(a1)
    {
      case 1:
        unint64_t v12 = 0x41746E6572727563;
        unint64_t v11 = 0xEF79746976697463;
        break;
      case 2:
        unint64_t v12 = 0x7069636974726170;
        uint64_t v13 = 1937010273;
        goto LABEL_23;
      case 3:
        unint64_t v12 = 0x6572616873;
        break;
      case 4:
        unint64_t v12 = 0x6143656C67676F74;
        uint64_t v14 = 0x736E6F697470;
        goto LABEL_25;
      case 5:
        unint64_t v11 = 0x80000001C3790F10;
        unint64_t v12 = 0xD000000000000017;
        break;
      case 6:
        unint64_t v12 = 0x7373654D6E65706FLL;
        uint64_t v13 = 1936025441;
LABEL_23:
        unint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      case 7:
        unint64_t v12 = 0x646E416B636F6C62;
        uint64_t v14 = 0x74726F706552;
LABEL_25:
        unint64_t v11 = v14 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
        break;
      case 8:
        unint64_t v11 = 0xE800000000000000;
        unint64_t v12 = 0x656C746954747470;
        break;
      case 9:
        unint64_t v12 = 0x545450657661656CLL;
        unint64_t v11 = 0xEF6C656E6E616843;
        break;
      case 10:
        unint64_t v12 = 0x415454506E65706FLL;
        unint64_t v11 = 0xEA00000000007070;
        break;
      default:
        break;
    }
    if (v8 == v12 && v7 == v11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16) {
      break;
    }
    if (v2 == v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

id CallRecordingButtonViewController.button.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___button;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___button);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___button);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for CallRecordingButton();
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v6 = String.localizedCallRecording.getter();
    outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v6, v7, v5);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_addTarget_action_forControlEvents_, v4, sel_buttonTapped, 64);
    swift_beginAccess();
    CallRecordingButton.isEnabled.setter();
    unint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id CallRecordingButtonViewController.__allocating_init(_:_:_:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_4_4());
  OUTLINED_FUNCTION_1_24();
  return CallRecordingButtonViewController.init(_:_:_:)();
}

id CallRecordingButtonViewController.init(_:_:_:)()
{
  OUTLINED_FUNCTION_4_4();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___button] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___educationScreen] = 0;
  type metadata accessor for CallRecordingButtonViewModel();
  swift_allocObject();
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_1_24();
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController_viewModel] = CallRecordingButtonViewModel.init(_:_:_:)();

  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_initWithNibName_bundle_, 0, 0);
}

id CallRecordingButtonViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CallRecordingButtonViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___button] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___educationScreen] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id CallRecordingButtonViewController.educationScreen.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___educationScreen;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___educationScreen);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController____lazy_storage___educationScreen);
  }
  else
  {
    id v4 = closure #1 in CallRecordingButtonViewController.educationScreen.getter();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in CallRecordingButtonViewController.educationScreen.getter()
{
  type metadata accessor for CallRecordingEducationViewController();
  uint64_t v0 = CallRecordingEducationViewController.__allocating_init()();
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *(uint64_t (**)(uint64_t, _UNKNOWN **))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68);
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = v2(v3, &protocol witness table for CallRecordingButtonViewController);
  (*(void (**)(uint64_t))((*v1 & *v0) + 0x90))(v4);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB19E8]), sel_initWithRootViewController_, v0);
  objc_msgSend(v5, sel_setModalPresentationStyle_, 7);

  return v5;
}

Swift::Void __swiftcall CallRecordingButtonViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v38.receiver = v0;
  v38.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController_viewModel];
  swift_beginAccess();
  *(void *)(v2 + 24) = &protocol witness table for CallRecordingButtonViewController;
  swift_unknownObjectWeakAssign();
  id v3 = CallRecordingButtonViewController.button.getter();
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v4 = OUTLINED_FUNCTION_6_10();
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = CallRecordingButtonViewController.button.getter();
  objc_msgSend(v5, sel_addSubview_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3769580;
  id v8 = CallRecordingButtonViewController.button.getter();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = OUTLINED_FUNCTION_6_10();
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_topAnchor);

  id v13 = OUTLINED_FUNCTION_3_29();
  *(void *)(v7 + 32) = v13;
  id v14 = CallRecordingButtonViewController.button.getter();
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = OUTLINED_FUNCTION_6_10();
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  long long v17 = v16;
  id v18 = objc_msgSend(v16, sel_leadingAnchor);

  id v19 = OUTLINED_FUNCTION_3_29();
  *(void *)(v7 + 40) = v19;
  id v20 = CallRecordingButtonViewController.button.getter();
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = OUTLINED_FUNCTION_6_10();
  if (!v22)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_trailingAnchor);

  id v25 = OUTLINED_FUNCTION_3_29();
  *(void *)(v7 + 48) = v25;
  id v26 = CallRecordingButtonViewController.button.getter();
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = OUTLINED_FUNCTION_6_10();
  if (!v28)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v29 = v28;
  uint64_t v30 = self;
  id v31 = objc_msgSend(v29, sel_bottomAnchor);

  id v32 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v31);
  *(void *)(v7 + 56) = v32;
  uint64_t v37 = v7;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_activateConstraints_, isa, v37);

  *(void *)(v2 + 24) = &protocol witness table for CallRecordingButtonViewController;
  swift_unknownObjectWeakAssign();
  id v34 = objc_msgSend(v1, sel_view);
  if (v34)
  {
    uint64_t v35 = v34;
    id v36 = objc_msgSend(self, sel_callDetailsButtonMaxSize);
    objc_msgSend(v35, sel_setMaximumContentSizeCategory_, v36);

    return;
  }
LABEL_13:
  __break(1u);
}

void CallRecordingButtonViewController.buttonTapped()()
{
  if (TUIsCallRecordingStorageDestinationApplicationAvailable())
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController_viewModel);
    swift_beginAccess();
    if (*(_DWORD *)(v1 + 52) == 3) {
      CallRecordingButtonViewModel.startRecordingButtonTapped()();
    }
  }
  else
  {
    v2[0] = 2;
    CallRecordingButtonViewController.showAlert(error:)(v2);
  }
}

void CallRecordingButtonViewController.showAlert(error:)(unsigned char *a1)
{
  if (*a1 == 2)
  {
    uint64_t v2 = v1;
    String.localizedCallRecording.getter();
    id v21 = (id)String.init(format:_:)();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    String.localizedCallRecording.getter();
    uint64_t v5 = String.init(format:_:)();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    String.localizedCallRecording.getter();
    uint64_t v20 = String.init(format:_:)();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    String.localizedCallRecording.getter();
    uint64_t v10 = String.init(format:_:)();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (one-time initialization token for recordingSession != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.recordingSession);
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl(&dword_1C2F90000, v14, v15, "Showing alert for Notes app not installed.", v16, 2u);
      MEMORY[0x1C87760E0](v16, -1, -1);
    }

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)((uint64_t)v21, v4, v5, v7, 1);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIAlertAction);
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    id v19 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v20, v9, 0, (uint64_t)partial apply for closure #1 in CallRecordingButtonViewController.showAlert(error:), v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v22 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v10, v12, 1, 0, 0);
    objc_msgSend(v17, sel_addAction_, v19);
    objc_msgSend(v17, sel_addAction_, v22);
    objc_msgSend(v17, sel_setPreferredAction_, v19);
    objc_msgSend(v2, sel_presentViewController_animated_completion_, v17, 1, 0);
  }
}

Swift::Bool __swiftcall CallRecordingButtonViewController._canShowWhileLocked()()
{
  return 1;
}

void CallRecordingButtonViewController.update(recordingAvailability:)(int a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit33CallRecordingButtonViewController_viewModel);
  swift_beginAccess();
  *(_DWORD *)(v3 + 52) = a1;
  CallRecordingButtonViewModel.updateButtonState()();
}

Swift::Void __swiftcall CallRecordingButtonViewController.update(callUUID:)(Swift::String callUUID)
{
}

Swift::Void __swiftcall CallRecordingButtonViewController.invertColor(_:)(Swift::Bool a1)
{
  id v2 = CallRecordingButtonViewController.button.getter();
  CallRecordingButton.overrideTintColor(_:)(a1);
}

Swift::Void __swiftcall CallRecordingButtonViewController.textSizeDidChange()()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_setNeedsDisplay);
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in CallRecordingButtonViewController.showAlert(error:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    CallRecordingButtonViewController.openNotesInAppStore()();
  }
}

void CallRecordingButtonViewController.openNotesInAppStore()()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  unint64_t v35 = 0xD000000000000017;
  unint64_t v36 = 0x80000001C3792220;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.current.getter();
  uint64_t v11 = Locale.identifier.getter();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14._uint64_t countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._object = (void *)0x80000001C3792240;
  v15._uint64_t countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v15);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v0) == 1)
  {
    outlined destroy of URL?((uint64_t)v6);
    if (one-time initialization token for recordingSession != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.recordingSession);
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_1C2F90000, v17, v18, "Helper app not installed. Unable to show alert due to invalid URL.", v19, 2u);
      MEMORY[0x1C87760E0](v19, -1, -1);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
    uint64_t v20 = self;
    id v21 = objc_msgSend(v20, sel_sharedApplication);
    URL._bridgeToObjectiveC()(v22);
    id v24 = v23;
    unsigned int v25 = objc_msgSend(v21, sel_canOpenURL_, v23);

    if (v25)
    {
      id v26 = objc_msgSend(v20, sel_sharedApplication);
      URL._bridgeToObjectiveC()(v27);
      uint64_t v29 = v28;
      type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
      lazy protocol witness table accessor for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey();
      Dictionary.init(dictionaryLiteral:)();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v26, sel_openURL_options_completionHandler_, v29, isa, 0);
    }
    else
    {
      if (one-time initialization token for recordingSession != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      __swift_project_value_buffer(v31, (uint64_t)static Logger.recordingSession);
      id v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        id v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v34 = 0;
        _os_log_impl(&dword_1C2F90000, v32, v33, "UIApplication cannot open URL.", v34, 2u);
        MEMORY[0x1C87760E0](v34, -1, -1);
      }
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

id CallRecordingButtonViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void CallRecordingButtonViewController.init(nibName:bundle:)()
{
}

id CallRecordingButtonViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CallRecordingButtonViewController.tappedContinue()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.recordingSession);
  uint64_t v3 = (void *)Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v4))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Education screen: Tapped continue recording");
    OUTLINED_FUNCTION_5_20();
  }

  CallRecordingButtonViewModel.educationScreenShown.setter(1);
  id v7 = CallRecordingButtonViewController.educationScreen.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  v11[4] = partial apply for closure #1 in CallRecordingButtonViewController.tappedContinue();
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed () -> ();
  v11[3] = &block_descriptor_4;
  uint64_t v9 = _Block_copy(v11);
  id v10 = v1;
  swift_release();
  objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, v9);
  _Block_release(v9);
}

void closure #1 in CallRecordingButtonViewController.tappedContinue()()
{
}

Swift::Void __swiftcall CallRecordingButtonViewController.tappedCancel()()
{
  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.recordingSession);
  uint64_t v1 = (void *)Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v2))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v3, v4, "Education screen: Tapped cancel recording");
    OUTLINED_FUNCTION_5_20();
  }

  CallRecordingButtonViewModel.educationScreenShown.setter(0);
  id v5 = CallRecordingButtonViewController.educationScreen.getter();
  objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

Swift::Void __swiftcall CallRecordingButtonViewController.configureButton(_:)(ConversationKit::CallRecordingButtonConfiguration a1)
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)&a1.isEnabled + 1);
  id v2 = CallRecordingButtonViewController.button.getter();
  objc_msgSend(v2, sel_setHidden_, v1);

  id v3 = CallRecordingButtonViewController.button.getter();
  CallRecordingButton.isEnabled.setter();

  id v4 = CallRecordingButtonViewController.button.getter();
  objc_msgSend(v4, sel_updateConfiguration);
}

Swift::Void __swiftcall CallRecordingButtonViewController.presentEducationScreen()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.recordingSession);
  id v3 = (void *)Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v4))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Presenting education screen");
    OUTLINED_FUNCTION_5_20();
  }

  id v7 = CallRecordingButtonViewController.educationScreen.getter();
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v7, 1, 0);
}

uint64_t sub_1C2FF18D4()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in CallRecordingButtonViewController.tappedContinue()()
{
}

uint64_t type metadata accessor for CallRecordingButtonViewController()
{
  return self;
}

uint64_t method lookup function for CallRecordingButtonViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallRecordingButtonViewController);
}

uint64_t dispatch thunk of CallRecordingButtonViewController.__allocating_init(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 104))(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32));
}

uint64_t sub_1C2FF1978()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallRecordingButtonViewController.showAlert(error:)(uint64_t a1)
{
  closure #1 in CallRecordingButtonViewController.showAlert(error:)(a1, v1);
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey()
{
  unint64_t result = lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey;
  if (!lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey)
  {
    type metadata accessor for UIApplicationOpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey);
  }
  return result;
}

uint64_t static CallRecordingPillViewController.DisplayStyle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

void CallRecordingPillViewController.displayStyle.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_displayStyle + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_displayStyle);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t CallRecordingPillViewController.cancellable.getter()
{
  return swift_retain();
}

uint64_t CallRecordingPillViewController.cancellable.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_cancellable);
  swift_beginAccess();
  *int v3 = a1;
  return swift_release();
}

uint64_t (*CallRecordingPillViewController.cancellable.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

char *CallRecordingPillViewController.__allocating_init(displayStyle:)(uint64_t *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CallRecordingPillViewController.init(displayStyle:)(a1);
}

char *CallRecordingPillViewController.init(displayStyle:)(uint64_t *a1)
{
  char v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>.Publisher);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  char v9 = *((unsigned char *)a1 + 8);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_viewModel;
  uint64_t v11 = self;
  uint64_t v12 = v2;
  id v13 = objc_msgSend(v11, sel_sharedInstance);
  type metadata accessor for CallRecordingService();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  Swift::String v15 = (char *)objc_allocWithZone((Class)type metadata accessor for CallRecordingViewModel());
  *(void *)&v2[v10] = specialized CallRecordingViewModel.init(service:)(v14, v15);
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_cancellable] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController____lazy_storage___countdownView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController____lazy_storage___recordingView] = 0;
  uint64_t v16 = &v12[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_displayStyle];
  *(void *)uint64_t v16 = v8;
  v16[8] = v9;

  v24.receiver = v12;
  v24.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, 0, 0);
  swift_beginAccess();
  os_log_type_t v18 = (char *)v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type Published<CallRecordingViewModel.PresentedView?>.Publisher and conformance Published<A>.Publisher();
  uint64_t v19 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v20 = (uint64_t *)&v18[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_cancellable];
  swift_beginAccess();
  *uint64_t v20 = v19;
  swift_release();
  char v21 = CallRecordingViewModel.presentedView.getter();
  CallRecordingPillViewController.update(with:)(v21);

  return v18;
}

void closure #1 in CallRecordingPillViewController.init(displayStyle:)(char *a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    CallRecordingPillViewController.update(with:)(v2);
  }
}

void CallRecordingPillViewController.update(with:)(char a1)
{
  char v2 = v1;
  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.recordingSession);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v95 = v8;
    *(_DWORD *)id v7 = 136315138;
    if (a1 == 3)
    {
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 7104878;
    }
    else
    {
      uint64_t v10 = String.init<A>(reflecting:)();
      unint64_t v9 = v11;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v9, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v5, v6, "Updating CallRecordingPillViewController with presented view: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v8, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }

  if (a1 == 3)
  {
    id v94 = CallRecordingPillViewController.countdownView.getter();
    objc_msgSend(v94, sel_removeFromSuperview);

    v93.super.Class isa = (Class)CallRecordingPillViewController.recordingView.getter();
    [(objc_class *)v93.super.isa removeFromSuperview];
    goto LABEL_28;
  }
  if (a1 != 2)
  {
    if (a1 == 1)
    {
      id v12 = CallRecordingPillViewController.countdownView.getter();
      CallRecordingCountdownView.transitionToDisclosingRecording()();
    }
    id v13 = CallRecordingPillViewController.recordingView.getter();
    objc_msgSend(v13, sel_setAlpha_, 0.0);

    id v14 = CallRecordingPillViewController.countdownView.getter();
    objc_msgSend(v14, sel_setAlpha_, 1.0);

    id v15 = CallRecordingPillViewController.recordingView.getter();
    objc_msgSend(v15, sel_removeFromSuperview);

    id v16 = objc_msgSend(v2, sel_view);
    if (v16)
    {
      id v17 = v16;
      id v18 = CallRecordingPillViewController.countdownView.getter();
      objc_msgSend(v17, sel_addSubview_, v18);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C3769600;
      id v20 = CallRecordingPillViewController.countdownView.getter();
      id v21 = objc_msgSend(v20, sel_leadingAnchor);

      id v22 = objc_msgSend(v2, sel_view);
      if (v22)
      {
        uint64_t v23 = v22;
        id v24 = objc_msgSend(v22, sel_layoutMarginsGuide);

        id v25 = objc_msgSend(v24, sel_leadingAnchor);
        id v26 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v25);

        *(void *)(v19 + 32) = v26;
        id v27 = CallRecordingPillViewController.countdownView.getter();
        id v28 = objc_msgSend(v27, sel_trailingAnchor);

        id v29 = objc_msgSend(v2, sel_view);
        if (v29)
        {
          uint64_t v30 = v29;
          id v31 = objc_msgSend(v29, sel_layoutMarginsGuide);

          id v32 = objc_msgSend(v31, sel_trailingAnchor);
          id v33 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v32);

          *(void *)(v19 + 40) = v33;
          id v34 = CallRecordingPillViewController.countdownView.getter();
          id v35 = objc_msgSend(v34, sel_bottomAnchor);

          id v36 = objc_msgSend(v2, sel_view);
          if (v36)
          {
            uint64_t v37 = v36;
            id v38 = objc_msgSend(v36, sel_layoutMarginsGuide);

            id v39 = objc_msgSend(v38, sel_bottomAnchor);
            id v40 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v39);

            *(void *)(v19 + 48) = v40;
            id v41 = CallRecordingPillViewController.countdownView.getter();
            id v42 = objc_msgSend(v41, sel_topAnchor);

            id v43 = objc_msgSend(v2, sel_view);
            if (v43)
            {
              int v44 = v43;
              id v45 = objc_msgSend(v43, sel_layoutMarginsGuide);

              id v46 = objc_msgSend(v45, sel_topAnchor);
              id v47 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v46);

              *(void *)(v19 + 56) = v47;
              id v48 = objc_msgSend(v2, sel_view);
              if (v48)
              {
                uint64_t v49 = v48;
                id v50 = self;
                id v51 = objc_msgSend(v49, sel_heightAnchor);

                id v52 = CallRecordingPillViewController.countdownView.getter();
                id v53 = objc_msgSend(v52, sel_heightAnchor);

                id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
LABEL_26:
                id v92 = v54;

                *(void *)(v19 + 64) = v92;
                uint64_t v95 = v19;
                specialized Array._endMutation()();
                type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                v93.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                objc_msgSend(v50, sel_activateConstraints_, v93.super.isa);
LABEL_28:

                return;
              }
              goto LABEL_34;
            }
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  id v55 = CallRecordingPillViewController.countdownView.getter();
  objc_msgSend(v55, sel_setAlpha_, 0.0);

  id v56 = CallRecordingPillViewController.recordingView.getter();
  objc_msgSend(v56, sel_setAlpha_, 1.0);

  id v57 = CallRecordingPillViewController.countdownView.getter();
  objc_msgSend(v57, sel_removeFromSuperview);

  id v58 = objc_msgSend(v2, sel_view);
  if (!v58)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v59 = v58;
  id v60 = CallRecordingPillViewController.recordingView.getter();
  objc_msgSend(v59, sel_addSubview_, v60);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C3769600;
  id v61 = CallRecordingPillViewController.recordingView.getter();
  id v62 = objc_msgSend(v61, sel_leadingAnchor);

  id v63 = objc_msgSend(v2, sel_view);
  if (!v63)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v64 = v63;
  id v65 = objc_msgSend(v63, sel_layoutMarginsGuide);

  id v66 = objc_msgSend(v65, sel_leadingAnchor);
  id v67 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v66);

  *(void *)(v19 + 32) = v67;
  id v68 = CallRecordingPillViewController.recordingView.getter();
  id v69 = objc_msgSend(v68, sel_trailingAnchor);

  id v70 = objc_msgSend(v2, sel_view);
  if (!v70)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  id v71 = v70;
  id v72 = objc_msgSend(v70, sel_layoutMarginsGuide);

  id v73 = objc_msgSend(v72, sel_trailingAnchor);
  id v74 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v73);

  *(void *)(v19 + 40) = v74;
  id v75 = CallRecordingPillViewController.recordingView.getter();
  id v76 = objc_msgSend(v75, sel_bottomAnchor);

  id v77 = objc_msgSend(v2, sel_view);
  if (!v77)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v78 = v77;
  id v79 = objc_msgSend(v77, sel_layoutMarginsGuide);

  id v80 = objc_msgSend(v79, sel_bottomAnchor);
  id v81 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v80);

  *(void *)(v19 + 48) = v81;
  id v82 = CallRecordingPillViewController.recordingView.getter();
  id v83 = objc_msgSend(v82, sel_topAnchor);

  id v84 = objc_msgSend(v2, sel_view);
  if (!v84)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id v85 = v84;
  id v86 = objc_msgSend(v84, sel_layoutMarginsGuide);

  id v87 = objc_msgSend(v86, sel_topAnchor);
  id v88 = objc_msgSend(v83, sel_constraintEqualToAnchor_, v87);

  *(void *)(v19 + 56) = v88;
  id v89 = objc_msgSend(v2, sel_view);
  if (v89)
  {
    uint64_t v90 = v89;
    id v50 = self;
    id v51 = objc_msgSend(v90, sel_heightAnchor);

    id v91 = CallRecordingPillViewController.recordingView.getter();
    id v53 = objc_msgSend(v91, sel_heightAnchor);

    id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
    goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

id CallRecordingPillViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CallRecordingPillViewController.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_viewModel;
  id v2 = objc_msgSend(self, sel_sharedInstance);
  type metadata accessor for CallRecordingService();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = (char *)objc_allocWithZone((Class)type metadata accessor for CallRecordingViewModel());
  *(void *)&v0[v1] = specialized CallRecordingViewModel.init(service:)(v3, v4);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_cancellable] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController____lazy_storage___countdownView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController____lazy_storage___recordingView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id CallRecordingPillViewController.countdownView.getter()
{
  return CallRecordingPillViewController.countdownView.getter(&OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController____lazy_storage___countdownView, (uint64_t (*)(uint64_t))closure #1 in CallRecordingPillViewController.countdownView.getter);
}

void key path setter for CallRecordingPillViewController.countdownView : CallRecordingPillViewController(id *a1)
{
}

void CallRecordingPillViewController.countdownView.setter(uint64_t a1)
{
}

id closure #1 in CallRecordingPillViewController.countdownView.getter()
{
  uint64_t v0 = type metadata accessor for CallRecordingRecordingView.Options();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = type metadata accessor for CallRecordingViewConfig();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  CallRecordingPillViewController.screenSize.getter((BOOL *)v15);
  static CallRecordingRecordingView.Options.none.getter();
  CallRecordingPillViewController.screenSize.getter((BOOL *)v15);
  CallRecordingPillViewController.screenSize.getter(&v16);
  uint64_t v5 = (void *)*MEMORY[0x1E4FB2790];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3769610;
  id v7 = self;
  id v8 = v5;
  id result = objc_msgSend(v7, sel_effectWithBlurRadius_, 40.0);
  if (result)
  {
    id v10 = result;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
    *(void *)(v6 + 32) = v10;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIColorEffect);
    *(void *)(v6 + 40) = static UIColorEffect.inCallControls.getter();
    v15[0] = v6;
    specialized Array._endMutation()();
    id result = @nonobjc UIVisualEffect.init(combiningEffects:)(v15[0]);
    if (result)
    {
      CallRecordingViewConfig.init(inset:options:interComponentSpacing:maxAXContentSize:backgroundEffect:)();
      v15[3] = v1;
      v15[4] = MEMORY[0x1E4F59E58];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
      (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
      id v12 = objc_allocWithZone((Class)type metadata accessor for CallRecordingCountdownView());
      uint64_t v13 = CallRecordingCountdownView.init(config:)();
      v14.value._uint64_t countAndFlagsBits = String.localizedCallRecording.getter();
      CallRecordingCountdownView.setAXLabelForCloseButton(_:)(v14);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return (id)v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void CallRecordingPillViewController.screenSize.getter(BOOL *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v11.origin.x = v4;
  v11.origin.y = v6;
  v11.size.width = v8;
  v11.size.height = v10;
  *a1 = CGRectGetWidth(v11) > 374.0;
}

void (*CallRecordingPillViewController.countdownView.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = CallRecordingPillViewController.countdownView.getter();
  return CallRecordingPillViewController.countdownView.modify;
}

void CallRecordingPillViewController.countdownView.modify(void **a1, char a2)
{
}

id CallRecordingPillViewController.recordingView.getter()
{
  return CallRecordingPillViewController.countdownView.getter(&OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController____lazy_storage___recordingView, (uint64_t (*)(uint64_t))closure #1 in CallRecordingPillViewController.recordingView.getter);
}

id CallRecordingPillViewController.countdownView.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  CGFloat v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    CGFloat v6 = (void *)a2(v2);
    double v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    CGFloat v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void key path setter for CallRecordingPillViewController.recordingView : CallRecordingPillViewController(id *a1)
{
}

void CallRecordingPillViewController.recordingView.setter(uint64_t a1)
{
}

id closure #1 in CallRecordingPillViewController.recordingView.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CallRecordingRecordingView.Options();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = type metadata accessor for CallRecordingViewConfig();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_displayStyle + 8))
  {
    CallRecordingPillViewController.screenSize.getter((BOOL *)v23);
    static CallRecordingRecordingView.Options.all.getter();
    CallRecordingPillViewController.screenSize.getter((BOOL *)v23);
    CallRecordingPillViewController.screenSize.getter(&v24);
    id v8 = (void *)*MEMORY[0x1E4FB2790];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C3769610;
    CGFloat v10 = self;
    id v11 = v8;
    id result = objc_msgSend(v10, sel_effectWithBlurRadius_, 40.0);
    if (result)
    {
      id v13 = result;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
      *(void *)(v9 + 32) = v13;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIColorEffect);
      *(void *)(v9 + 40) = static UIColorEffect.inCallControls.getter();
      v23[0] = v9;
      specialized Array._endMutation()();
      id result = @nonobjc UIVisualEffect.init(combiningEffects:)(v23[0]);
      if (result) {
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  CallRecordingPillViewController.screenSize.getter((BOOL *)v23);
  static CallRecordingRecordingView.Options.stopButton.getter();
  CallRecordingPillViewController.screenSize.getter((BOOL *)v23);
  CallRecordingPillViewController.screenSize.getter(&v24);
  Swift::String_optional v14 = (void *)*MEMORY[0x1E4FB2790];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C3769610;
  BOOL v16 = self;
  id v17 = v14;
  id result = objc_msgSend(v16, sel_effectWithBlurRadius_, 40.0);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v18 = result;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIVisualEffect);
  *(void *)(v15 + 32) = v18;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIColorEffect);
  *(void *)(v15 + 40) = static UIColorEffect.inCallControls.getter();
  v23[0] = v15;
  specialized Array._endMutation()();
  id result = @nonobjc UIVisualEffect.init(combiningEffects:)(v23[0]);
  if (result)
  {
LABEL_7:
    CallRecordingViewConfig.init(inset:options:interComponentSpacing:maxAXContentSize:backgroundEffect:)();
    v23[3] = v4;
    v23[4] = MEMORY[0x1E4F59E58];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(boxed_opaque_existential_1, v7, v4);
    id v20 = objc_allocWithZone((Class)type metadata accessor for CallRecordingRecordingView());
    uint64_t v21 = CallRecordingRecordingView.init(config:)();
    v22.value._uint64_t countAndFlagsBits = String.localizedCallRecording.getter();
    CallRecordingRecordingView.setAXLabelForStopButton(_:)(v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (id)v21;
  }
LABEL_11:
  __break(1u);
  return result;
}

void (*CallRecordingPillViewController.recordingView.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = CallRecordingPillViewController.recordingView.getter();
  return CallRecordingPillViewController.recordingView.modify;
}

void CallRecordingPillViewController.recordingView.modify(void **a1, char a2)
{
}

void CallRecordingPillViewController.countdownView.modify(void **a1, char a2, void (*a3)(void))
{
  uint64_t v4 = *a1;
  if (a2)
  {
    id v5 = v4;
    a3();
  }
  else
  {
    ((void (*)(void *))a3)(v4);
  }
}

Swift::Void __swiftcall CallRecordingPillViewController.updateBackgroundMaterial(material:)(ConversationKit::CallRecordingViewMaterialType material)
{
  CallRecordingViewMaterialType.effect.getter();
  id v1 = objc_allocWithZone((Class)type metadata accessor for CallRecordingViewBackgroundView());
  uint64_t v2 = (void *)CallRecordingViewBackgroundView.init(effect:)();
  id v3 = CallRecordingPillViewController.countdownView.getter();
  CallRecordingCountdownView.updateBackground(_:)();

  id v4 = CallRecordingPillViewController.recordingView.getter();
  CallRecordingRecordingView.updateBackground(_:)();
}

Swift::Void __swiftcall CallRecordingPillViewController.viewDidLoad()()
{
  id v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    id v4 = *(char **)&v1[OBJC_IVAR____TtC15ConversationKit31CallRecordingPillViewController_viewModel];
    id v5 = CallRecordingPillViewController.countdownView.getter();
    CallRecordingViewModel.countdownDelegate.setter((uint64_t)v5, (uint64_t)&protocol witness table for CallRecordingCountdownView);
    id v6 = CallRecordingPillViewController.recordingView.getter();
    double v7 = &v4[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_recordingDelegate];
    swift_beginAccess();
    *((void *)v7 + 1) = &protocol witness table for CallRecordingRecordingView;
    swift_unknownObjectWeakAssign();

    id v8 = CallRecordingPillViewController.countdownView.getter();
    lazy protocol witness table accessor for type CallRecordingViewModel and conformance CallRecordingViewModel(&lazy protocol witness table cache variable for type CallRecordingViewModel and conformance CallRecordingViewModel);
    uint64_t v9 = v4;
    CallRecordingCountdownView.delegate.setter();

    id v10 = CallRecordingPillViewController.recordingView.getter();
    lazy protocol witness table accessor for type CallRecordingViewModel and conformance CallRecordingViewModel(&lazy protocol witness table cache variable for type CallRecordingViewModel and conformance CallRecordingViewModel);
    id v11 = v9;
    CallRecordingRecordingView.delegate.setter();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CallRecordingCountdownView.transitionToDisclosingRecording()()
{
  OUTLINED_FUNCTION_1_25();
  uint64_t v0 = String.init(format:_:)();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  MEMORY[0x1F4112BF8](v0, v2, 0, 0);
}

Swift::Bool __swiftcall CallRecordingPillViewController._canShowWhileLocked()()
{
  return 1;
}

id CallRecordingPillViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void CallRecordingPillViewController.init(nibName:bundle:)()
{
}

id CallRecordingPillViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CallRecordingCountdownView.updateText(_:)(Swift::Int_optional a1)
{
  Swift::Bool is_nil = a1.is_nil;
  Swift::Int value = a1.value;
  OUTLINED_FUNCTION_1_25();
  uint64_t v3 = String.init(format:_:)();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (is_nil)
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    String.localizedCallRecording.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v6 + 16) = xmmword_1C3769620;
    uint64_t v8 = MEMORY[0x1E4FBB5C8];
    *(void *)(v6 + 56) = v7;
    *(void *)(v6 + 64) = v8;
    *(void *)(v6 + 32) = value;
    uint64_t v9 = String.init(format:_:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4112BF8](v3, v5, v9, v11);
}

void protocol witness for CallRecordingCountdownViewModelDelegate.updateText(_:) in conformance CallRecordingCountdownView(Swift::Int_optional a1)
{
  a1.is_nil &= 1u;
  CallRecordingCountdownView.updateText(_:)(a1);
}

Swift::Void __swiftcall CallRecordingRecordingView.updateRecordingTimeLabel(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.recordingSession);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v4, v5, "Update recording time label: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v7, -1, -1);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  CallRecordingRecordingView.stopwatchTime.setter();
}

Swift::Void __swiftcall CallRecordingRecordingView.updatePowerLevels(latestRemoteSpectrum:latestLocalSpectrum:)(Swift::OpaquePointer latestRemoteSpectrum, Swift::OpaquePointer latestLocalSpectrum)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1F4112B00](latestLocalSpectrum._rawValue, latestRemoteSpectrum._rawValue);
}

uint64_t specialized static Array._adoptStorage(_:count:)(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t specialized static Array._adoptStorage(_:count:)(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  type metadata accessor for UUID();
  return a1;
}

void *specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    id result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  objc_super v12 = v10 + 32;
  id v13 = (char *)(a4 + 32);
  if (v5)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    id result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *specialized CallRecordingViewModel.init(service:)(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22[3] = type metadata accessor for CallRecordingService();
  v22[4] = &protocol witness table for CallRecordingService;
  v22[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_cancellables] = MEMORY[0x1E4FBC870];
  uint64_t v9 = OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_animateUpdatesPassthrough;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  uint64_t v10 = a2;
  *(void *)&a2[v9] = PassthroughSubject.init()();
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_timeSink] = 0;
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_countdownValue] = 3;
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_avAudioPlayer] = 0;
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_countdownDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_recordingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  size_t v11 = &v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_recordingState];
  *(_DWORD *)size_t v11 = 0;
  char v12 = 1;
  v11[4] = 1;
  id v13 = &v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel__presentedView];
  v20[0] = 3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallRecordingViewModel.PresentedView?);
  Published.init(initialValue:)();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 32))(v13, v8, v5);
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_stopwatchValue] = 0;
  *(void *)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel] = 0;
  outlined init with copy of IDSLookupManager((uint64_t)v22, (uint64_t)&v10[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_service]);

  v21.receiver = v10;
  v21.super_class = ObjectType;
  Swift::String_optional v14 = (char *)objc_msgSendSuper2(&v21, sel_init);
  CallRecordingViewModel.observeCountdownNotifications()();
  CallRecordingViewModel.observeRecordingStateNotifications()();
  id v15 = objc_msgSend(self, sel_sharedInstance);
  id v16 = objc_msgSend(v15, sel_frontmostCall);

  if (v16)
  {
    id v17 = objc_msgSend(v16, sel_recordingSession);

    if (v17)
    {
      LODWORD(v16) = objc_msgSend(v17, sel_recordingState);

      char v12 = 0;
    }
    else
    {
      LODWORD(v16) = 0;
    }
  }
  id v18 = &v14[OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_recordingState];
  swift_beginAccess();
  *(_DWORD *)id v18 = v16;
  id v18[4] = v12;
  CallRecordingViewModel.update()();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v14;
}

uint64_t sub_1C2FF4360()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallRecordingPillViewController.init(displayStyle:)(char *a1)
{
  closure #1 in CallRecordingPillViewController.init(displayStyle:)(a1, v1);
}

unint64_t lazy protocol witness table accessor for type Published<CallRecordingViewModel.PresentedView?>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result = lazy protocol witness table cache variable for type Published<CallRecordingViewModel.PresentedView?>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<CallRecordingViewModel.PresentedView?>.Publisher and conformance Published<A>.Publisher)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>.Publisher);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<CallRecordingViewModel.PresentedView?>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type CallRecordingViewModel and conformance CallRecordingViewModel(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CallRecordingViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C2FF4438@<X0>(void *a1@<X8>)
{
  id result = CallRecordingPillViewController.countdownView.getter();
  *a1 = result;
  return result;
}

id sub_1C2FF4468@<X0>(void *a1@<X8>)
{
  id result = CallRecordingPillViewController.recordingView.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CallRecordingPillViewController()
{
  return self;
}

uint64_t method lookup function for CallRecordingPillViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallRecordingPillViewController);
}

uint64_t dispatch thunk of CallRecordingPillViewController.__allocating_init(displayStyle:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t getEnumTagSinglePayload for CallRecordingPillViewController.DisplayStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CallRecordingPillViewController.DisplayStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)id result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)id result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t getEnumTag for CallRecordingPillViewController.DisplayStyle(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t destructiveInjectEnumTag for CallRecordingPillViewController.DisplayStyle(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)id result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingPillViewController.DisplayStyle()
{
  return &type metadata for CallRecordingPillViewController.DisplayStyle;
}

BOOL static CallRecordingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CallRecordingError.alertStrings.getter@<X0>(uint64_t *a1@<X8>)
{
  if (*v1 == 2)
  {
    String.localizedCallRecording.getter();
    uint64_t v3 = String.init(format:_:)();
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    String.localizedCallRecording.getter();
    uint64_t v6 = String.init(format:_:)();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    String.localizedCallRecording.getter();
    uint64_t v9 = String.init(format:_:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    String.localizedCallRecording.getter();
    uint64_t v12 = String.init(format:_:)();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C37696D0;
    *(void *)(result + 32) = v9;
    *(void *)(result + 40) = v11;
    *(void *)(result + 48) = v12;
    *(void *)(result + 56) = v14;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t result = 0;
  }
  *a1 = v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v8;
  a1[4] = result;
  return result;
}

uint64_t CallRecordingService.__allocating_init(callCenter:)(uint64_t a1)
{
  OUTLINED_FUNCTION_25_0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

void CallRecordingError.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int CallRecordingError.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for Error._domain.getter in conformance CallRecordingError()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t protocol witness for Error._code.getter in conformance CallRecordingError()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t protocol witness for Error._userInfo.getter in conformance CallRecordingError()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance CallRecordingError()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t CallRecordingService.init(callCenter:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

void CallRecordingService.startRecording(call:completion:)()
{
  OUTLINED_FUNCTION_19_10();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_62();
  if (objc_msgSend(v2, sel_isRecordingAllowed))
  {
    if (one-time initialization token for recordingSession != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    uint64_t v6 = OUTLINED_FUNCTION_30(v5, (uint64_t)static Logger.recordingSession);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_27_1(&dword_1C2F90000, v8, v9, "Requesting to start a recording session.");
      OUTLINED_FUNCTION_3();
    }

    uint64_t v10 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_24_6(v10);
    swift_allocObject();
    swift_weakInit();
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    id v11 = v2;
    static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    OUTLINED_FUNCTION_21_8(v12, MEMORY[0x1E4FBCFD8]);
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
  }
  else
  {
    (*(void (**)(void))(*(void *)v3 + 128))();
    lazy protocol witness table accessor for type CallRecordingError and conformance CallRecordingError();
    uint64_t v13 = swift_allocError();
    OUTLINED_FUNCTION_20_2(v13, v14);
    v0();
  }
}

uint64_t closure #1 in CallRecordingService.startRecording(call:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  type metadata accessor for MainActor();
  v7[26] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[27] = v9;
  v7[28] = v8;
  return MEMORY[0x1F4188298](closure #1 in CallRecordingService.startRecording(call:completion:), v9, v8);
}

uint64_t closure #1 in CallRecordingService.startRecording(call:completion:)()
{
  OUTLINED_FUNCTION_12_10();
  uint64_t Strong = swift_weakLoadStrong();
  v3[29] = Strong;
  if (Strong)
  {
    OUTLINED_FUNCTION_15_8(Strong);
    id v6 = objc_allocWithZone(MEMORY[0x1E4FADAD8]);
    id v7 = v4;
    id v8 = objc_msgSend(v6, sel_initWithCall_, v2);
    v3[31] = v8;
    v3[2] = v3;
    v3[3] = closure #1 in CallRecordingService.startRecording(call:completion:);
    uint64_t v9 = swift_continuation_init();
    v3[10] = MEMORY[0x1E4F143A8];
    v3[11] = 0x40000000;
    v3[12] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ();
    v3[13] = &block_descriptor_25;
    v3[14] = v9;
    objc_msgSend(v7, sel_performRecordingRequest_completion_, v8, v0);
    return MEMORY[0x1F41881E8](v1);
  }
  else
  {
    swift_release();
    if (one-time initialization token for recordingSession != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = (void *)OUTLINED_FUNCTION_30(v10, (uint64_t)static Logger.recordingSession);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_9_8(v12))
    {
      uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v13);
      OUTLINED_FUNCTION_5_21(&dword_1C2F90000, v14, v15, "self released, cant request start recording");
      OUTLINED_FUNCTION_3();
    }
    id v16 = (void (*)(uint64_t))v3[23];

    uint64_t v17 = OUTLINED_FUNCTION_29_6();
    v16(v17);
    OUTLINED_FUNCTION_6();
    return v18();
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  void *v2 = v1;
  void *v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 256) = v4;
  uint64_t v5 = v3[28];
  id v6 = v3[27];
  if (v4) {
    id v7 = closure #1 in CallRecordingService.startRecording(call:completion:);
  }
  else {
    id v7 = closure #1 in CallRecordingService.startRecording(call:completion:);
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void *)v0[31];
  swift_release();

  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.recordingSession);
  uint64_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_9_8(v5))
  {
    id v6 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_23_1(v6);
    OUTLINED_FUNCTION_5_21(&dword_1C2F90000, v7, v8, "Successfully started recording");
    OUTLINED_FUNCTION_3();
  }
  uint64_t v9 = (void (*)(uint64_t))v0[23];

  uint64_t v10 = OUTLINED_FUNCTION_29_6();
  v9(v10);
  swift_release();
  OUTLINED_FUNCTION_6();
  return v11();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  void (*v16)(void *);
  id v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  void *v21;
  uint64_t v22;

  objc_super v21 = v0;
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[30];
  swift_release();
  swift_willThrow();
  swift_release();

  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[32];
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.recordingSession);
  uint64_t v5 = v3;
  id v6 = v3;
  id v7 = Logger.logObject.getter();
  id v8 = static os_log_type_t.error.getter();
  uint64_t v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[32];
  if (v9)
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_getErrorValue();
    os_log_type_t v12 = Error.localizedDescription.getter();
    v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v7, v8, "Unable to start recording: %s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(void))(*(void *)Strong + 128))(0);
    swift_release();
  }
  uint64_t v15 = (void *)v0[32];
  id v16 = (void (*)(void *))v0[23];
  uint64_t v17 = v15;
  v16(v15);

  OUTLINED_FUNCTION_6();
  return v18();
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5()
{
  uint64_t v3 = OUTLINED_FUNCTION_18_12();
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    outlined destroy of TaskPriority?(v1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_22_4();
    uint64_t v4 = OUTLINED_FUNCTION_25_3();
    v5(v4);
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ()?);
  return swift_task_create();
}

void CallRecordingService.stopRecording(call:completion:)()
{
  OUTLINED_FUNCTION_19_10();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v3 - 8);
  OUTLINED_FUNCTION_62();
  if (objc_msgSend(v2, sel_isRecordingAllowed))
  {
    if (one-time initialization token for recordingSession != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    uint64_t v5 = OUTLINED_FUNCTION_30(v4, (uint64_t)static Logger.recordingSession);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_27_1(&dword_1C2F90000, v7, v8, "Requesting to stop a recording session.");
      OUTLINED_FUNCTION_3();
    }

    uint64_t v9 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_24_6(v9);
    swift_allocObject();
    swift_weakInit();
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    id v10 = v2;
    static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    OUTLINED_FUNCTION_21_8(v11, MEMORY[0x1E4FBCFD8]);
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
  }
  else
  {
    lazy protocol witness table accessor for type CallRecordingError and conformance CallRecordingError();
    uint64_t v12 = swift_allocError();
    OUTLINED_FUNCTION_20_2(v12, v13);
    v0();
  }
}

uint64_t closure #1 in CallRecordingService.stopRecording(call:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  type metadata accessor for MainActor();
  v7[26] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[27] = v9;
  v7[28] = v8;
  return MEMORY[0x1F4188298](closure #1 in CallRecordingService.stopRecording(call:completion:), v9, v8);
}

uint64_t closure #1 in CallRecordingService.stopRecording(call:completion:)()
{
  OUTLINED_FUNCTION_12_10();
  uint64_t Strong = swift_weakLoadStrong();
  v3[29] = Strong;
  if (Strong)
  {
    OUTLINED_FUNCTION_15_8(Strong);
    id v6 = objc_allocWithZone(MEMORY[0x1E4FADAE0]);
    id v7 = v4;
    id v8 = objc_msgSend(v6, sel_initWithCall_, v2);
    v3[31] = v8;
    v3[2] = v3;
    v3[3] = closure #1 in CallRecordingService.stopRecording(call:completion:);
    uint64_t v9 = swift_continuation_init();
    v3[10] = MEMORY[0x1E4F143A8];
    v3[11] = 0x40000000;
    v3[12] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ();
    v3[13] = &block_descriptor;
    v3[14] = v9;
    objc_msgSend(v7, sel_performRecordingRequest_completion_, v8, v0);
    return MEMORY[0x1F41881E8](v1);
  }
  else
  {
    swift_release();
    if (one-time initialization token for recordingSession != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = (void *)OUTLINED_FUNCTION_30(v10, (uint64_t)static Logger.recordingSession);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_9_8(v12))
    {
      uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v13);
      OUTLINED_FUNCTION_5_21(&dword_1C2F90000, v14, v15, "self released, cant request stop recording");
      OUTLINED_FUNCTION_3();
    }
    id v16 = (void (*)(uint64_t))v3[23];

    uint64_t v17 = OUTLINED_FUNCTION_29_6();
    v16(v17);
    OUTLINED_FUNCTION_6();
    return v18();
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  void *v2 = v1;
  void *v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 256) = v4;
  uint64_t v5 = v3[28];
  id v6 = v3[27];
  if (v4) {
    id v7 = closure #1 in CallRecordingService.stopRecording(call:completion:);
  }
  else {
    id v7 = closure #1 in CallRecordingService.stopRecording(call:completion:);
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void *)v0[31];
  swift_release();

  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.recordingSession);
  uint64_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_9_8(v5))
  {
    id v6 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_23_1(v6);
    OUTLINED_FUNCTION_5_21(&dword_1C2F90000, v7, v8, "Successfully stopped recording");
    OUTLINED_FUNCTION_3();
  }
  uint64_t v9 = (void (*)(uint64_t))v0[23];

  uint64_t v10 = OUTLINED_FUNCTION_29_6();
  v9(v10);
  swift_release();
  OUTLINED_FUNCTION_6();
  return v11();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void (*v15)(void *);
  id v16;
  uint64_t (*v17)(void);
  uint64_t v19;
  void *v20;
  uint64_t v21;

  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[30];
  swift_release();
  swift_willThrow();
  swift_release();

  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[32];
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.recordingSession);
  uint64_t v5 = v3;
  id v6 = v3;
  id v7 = Logger.logObject.getter();
  id v8 = static os_log_type_t.error.getter();
  uint64_t v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[32];
  if (v9)
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_getErrorValue();
    os_log_type_t v12 = Error.localizedDescription.getter();
    v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v7, v8, "Unable to stop recording: %s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v14 = (void *)v0[32];
  uint64_t v15 = (void (*)(void *))v0[23];
  id v16 = v14;
  v15(v14);

  OUTLINED_FUNCTION_6();
  return v17();
}

Swift::Void __swiftcall CallRecordingService.updateConversationControlsRecipe()()
{
  uint64_t v0 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v29 - v4;
  if (one-time initialization token for recordingSession != -1) {
    swift_once();
  }
  uint64_t v30 = v5;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v6, (uint64_t)static Logger.recordingSession);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1C2F90000, v7, v8, "Updating conversation controls recipe.", v9, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  char v33 = 6;
  uint64_t v10 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  id v16 = &v3[v0[11]];
  *((void *)v16 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(void *)uint64_t v3 = 0x4082C00000000000;
  outlined init with copy of ConversationControlsType((uint64_t)v31, (uint64_t)(v3 + 8));
  *((void *)v3 + 7) = 0;
  v3[64] = 1;
  *((void *)v16 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v3[65] = 1;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v3[v0[8]], v15, v10);
  uint64_t v17 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  Swift::String_optional v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  outlined destroy of ConversationControlsType((uint64_t)v31);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v3[v0[9]], v22, v17);
  *(void *)&v3[v0[10]] = 0;
  uint64_t v23 = (uint64_t)v30;
  outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v3, (uint64_t)v30);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v24 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)static HUDActivityManager.shared)
                                           + 0xF0))(v23);
  if (v24)
  {
    id v25 = (void *)v24;
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)OUTLINED_FUNCTION_8_0();
      *(_WORD *)id v28 = 0;
      _os_log_impl(&dword_1C2F90000, v26, v27, "Error with HUDActivityManager.shared updateWith(_:)", v28, 2u);
      OUTLINED_FUNCTION_3();
    }

    swift_release();
    outlined destroy of HUDActivityManager.BannerUpdate(v23);
  }
  else
  {
    outlined destroy of HUDActivityManager.BannerUpdate(v23);
    swift_release();
  }
}

uint64_t CallRecordingService.url(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(self, sel_openNoteURLForRecordingSession_, a1);
  if (v3)
  {
    uint64_t v4 = v3;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = type metadata accessor for URL();
  return __swift_storeEnumTagSinglePayload(a2, v5, 1, v6);
}

Swift::Void __swiftcall CallRecordingService.postStartRecordingStateNotification(success:)(Swift::Bool success)
{
  if (!success)
  {
    id v2 = objc_msgSend(self, sel_defaultCenter);
    id v3 = v2;
    if (one-time initialization token for startCallRecordingStateFailedNotification != -1)
    {
      swift_once();
      id v2 = v3;
    }
    objc_msgSend(v2, sel_postNotificationName_object_, static NSNotificationName.startCallRecordingStateFailedNotification, 0);
  }
}

uint64_t CallRecordingService.deinit()
{
  return v0;
}

uint64_t CallRecordingService.__deallocating_deinit()
{
  OUTLINED_FUNCTION_25_0();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallRecordingRequestProtocol.startRecording(call:completion:) in conformance CallRecordingService()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t protocol witness for CallRecordingRequestProtocol.stopRecording(call:completion:) in conformance CallRecordingService()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t protocol witness for CallRecordingRequestProtocol.url(_:) in conformance CallRecordingService()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

unint64_t lazy protocol witness table accessor for type CallRecordingError and conformance CallRecordingError()
{
  unint64_t result = lazy protocol witness table cache variable for type CallRecordingError and conformance CallRecordingError;
  if (!lazy protocol witness table cache variable for type CallRecordingError and conformance CallRecordingError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingError and conformance CallRecordingError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CallRecordingError and conformance CallRecordingError;
  if (!lazy protocol witness table cache variable for type CallRecordingError and conformance CallRecordingError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingError and conformance CallRecordingError);
  }
  return result;
}

uint64_t sub_1C2FF6264()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallRecordingService.startRecording(call:completion:)()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_7_9();
  return closure #1 in CallRecordingService.startRecording(call:completion:)(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallRecordingService.stopRecording(call:completion:)()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.stopRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_7_9();
  return closure #1 in CallRecordingService.stopRecording(call:completion:)(v3, v4, v5, v6, v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_13_1();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

uint64_t outlined init with take of HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of HUDActivityManager.BannerUpdate(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CallRecordingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2FF66D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingError()
{
  return &type metadata for CallRecordingError;
}

uint64_t dispatch thunk of CallRecordingRequestProtocol.startRecording(call:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of CallRecordingRequestProtocol.stopRecording(call:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of CallRecordingRequestProtocol.url(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CallRecordingService()
{
  return self;
}

uint64_t method lookup function for CallRecordingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallRecordingService);
}

uint64_t dispatch thunk of CallRecordingService.__allocating_init(callCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CallRecordingService.startRecording(call:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CallRecordingService.stopRecording(call:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CallRecordingService.updateConversationControlsRecipe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CallRecordingService.url(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CallRecordingService.postStartRecordingStateNotification(success:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1, unint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for NSObject(0, a2);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_26();
    uint64_t result = OUTLINED_FUNCTION_2_13();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      unsigned int v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(v4 + 16) = a1;
    }
    else
    {
      unsigned int v4 = MEMORY[0x1E4FBC860];
    }
    ((uint64_t (*)(void))a2)(0);
    return v4;
  }
  return result;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *int v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TQ0_;
  return v5(v2 + 32);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TQ0_()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_13_1();
  *int v3 = v2;
  uint64_t v5 = *(unsigned char **)(v4 + 16);
  uint64_t v6 = *v0;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  *uint64_t v5 = *(unsigned char *)(v2 + 32);
  OUTLINED_FUNCTION_6();
  return v8();
}

uint64_t sub_1C2FF6E28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TA()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.stopRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_11_4();
  return v4(v3);
}

id CNMutableContact.init(conversationMember:)(void *a1)
{
  return CNMutableContact.init(conversationMember:)(a1, (SEL *)&selRef__initWithConversationMember_);
}

{
  void *v1;
  id v3;
  id v4;

  uint64_t v3 = objc_msgSend(a1, sel_handle);
  uint64_t v4 = objc_msgSend(v1, sel__initWithHandle_, v3);

  return v4;
}

id @objc CNMutableContact.init(conversationMember:)(uint64_t a1, uint64_t a2, void *a3)
{
  return CNMutableContact.init(conversationMember:)(a3);
}

id CNMutableContact.init(handle:)(void *a1)
{
  return CNMutableContact.init(conversationMember:)(a1, (SEL *)&selRef__initWithHandle_);
}

{
  id v2;
  char **v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Class isa;
  id v9;
  id v10;
  char **v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  Class v21;
  Swift::String v23;

  uint64_t v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v3 = &selRef_ringButton;
  switch((unint64_t)objc_msgSend(a1, sel_type))
  {
    case 0uLL:

      return 0;
    case 1uLL:
      id v16 = objc_msgSend(a1, sel_value);
      uint64_t v3 = (char **)static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v17 = objc_allocWithZone(MEMORY[0x1E4F1BAC0]);
      uint64_t v18 = OUTLINED_FUNCTION_1_27();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      *(_OWORD *)(OUTLINED_FUNCTION_3_0() + 16) = xmmword_1C3769830;
      uint64_t v19 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
      uint64_t v20 = OUTLINED_FUNCTION_0_6(v18);
      OUTLINED_FUNCTION_4_27((uint64_t)v20);
      uint64_t v11 = &selRef_setSocialProfiles_;
      goto LABEL_7;
    case 2uLL:
      type metadata accessor for CNPhoneNumber();
      uint64_t v3 = (char **)objc_msgSend(a1, sel_value);
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;

      v7._uint64_t countAndFlagsBits = v4;
      v7._object = v6;
      Class isa = CNPhoneNumber.__allocating_init(stringValue:)(v7).super.isa;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      *(_OWORD *)(OUTLINED_FUNCTION_3_0() + 16) = xmmword_1C3769830;
      uint64_t v9 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
      uint64_t v10 = OUTLINED_FUNCTION_0_6(isa);
      OUTLINED_FUNCTION_4_27((uint64_t)v10);
      uint64_t v11 = &selRef_setPhoneNumbers_;
      goto LABEL_7;
    case 3uLL:
      uint64_t v12 = objc_msgSend(a1, sel_value);
      if (!v12)
      {
        __break(1u);
LABEL_10:
        _StringGuts.grow(_:)(23);
        v23._object = (void *)0x80000001C3792860;
        v23._uint64_t countAndFlagsBits = 0xD000000000000015;
        String.append(_:)(v23);
        objc_msgSend(a1, sel_type);
        type metadata accessor for CHHandleType(0);
        _print_unlocked<A, B>(_:_:)();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1C2FF77F8);
      }
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      *(_OWORD *)(OUTLINED_FUNCTION_3_0() + 16) = xmmword_1C3769830;
      uint64_t v14 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
      uint64_t v15 = OUTLINED_FUNCTION_0_6(v13);
      OUTLINED_FUNCTION_4_27((uint64_t)v15);
      uint64_t v11 = &selRef_setEmailAddresses_;
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNLabeledValue);
      uint64_t v21 = OUTLINED_FUNCTION_6_5().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v2, *v11, v21);

      return v2;
    default:
      goto LABEL_10;
  }
}

id CNMutableContact.init(conversationMember:)(void *a1, SEL *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), *a2, a1);

  return v3;
}

id CNMutableContact.init(handle:)(id a1)
{
  id v4 = objc_msgSend(v1, sel_init);
  id v5 = objc_msgSend(a1, sel_type);
  if (v5 == (id)1)
  {
    id v11 = objc_msgSend(a1, sel_value);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v12 = objc_allocWithZone(MEMORY[0x1E4F1BAC0]);
    id v13 = OUTLINED_FUNCTION_1_27();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(OUTLINED_FUNCTION_3_0() + 16) = xmmword_1C3769830;
    id v14 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
    id v15 = OUTLINED_FUNCTION_2_14(v13);
    OUTLINED_FUNCTION_5_22((uint64_t)v15);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNLabeledValue);
    v10.super.Class isa = OUTLINED_FUNCTION_6_5().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setSocialProfiles_, v10.super.isa);
    goto LABEL_8;
  }
  if (v5 == (id)2)
  {
    type metadata accessor for CNPhoneNumber();
    id v16 = objc_msgSend(a1, sel_value);
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v2 = v18;

    uint64_t v19 = outlined bridged method (pb) of @objc TUHandle.isoCountryCode.getter(a1);
    id v21 = @nonobjc CNPhoneNumber.init(digits:countryCode:)(v17, (uint64_t)v2, v19, v20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(OUTLINED_FUNCTION_3_0() + 16) = xmmword_1C3769830;
    id v22 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
    id v23 = OUTLINED_FUNCTION_2_14(v21);
    OUTLINED_FUNCTION_5_22((uint64_t)v23);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNLabeledValue);
    v10.super.Class isa = OUTLINED_FUNCTION_6_5().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setPhoneNumbers_, v10.super.isa);
    goto LABEL_8;
  }
  if (v5 != (id)3)
  {

    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.conversationControls);
    a1 = a1;
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v31 = v28;
      *(_DWORD *)os_log_type_t v27 = 136446210;
      objc_msgSend(a1, sel_type);
      type metadata accessor for TUHandleType(0);
      uint64_t v29 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v25, v26, "Unknown default: handle type %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v28, -1, -1);
      MEMORY[0x1C87760E0](v27, -1, -1);
    }
    else
    {
    }
    goto LABEL_9;
  }
  id result = objc_msgSend(a1, sel_value);
  if (result)
  {
    uint64_t v7 = result;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(OUTLINED_FUNCTION_3_0() + 16) = xmmword_1C3769830;
    id v8 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
    id v9 = OUTLINED_FUNCTION_2_14(v7);
    OUTLINED_FUNCTION_5_22((uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNLabeledValue);
    v10.super.Class isa = OUTLINED_FUNCTION_6_5().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setEmailAddresses_, v10.super.isa);
LABEL_8:

LABEL_9:
    return v4;
  }
  __break(1u);
  return result;
}

id @nonobjc CNPhoneNumber.init(digits:countryCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v7 = (void *)MEMORY[0x1C87730B0](a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_phoneNumberWithDigits_countryCode_, v6, v7);

  return v8;
}

id @objc CNMutableContact.init(handle:)(uint64_t a1, uint64_t a2, void *a3)
{
  return CNMutableContact.init(handle:)(a3);
}

CNPhoneNumber __swiftcall CNPhoneNumber.__allocating_init(stringValue:)(Swift::String stringValue)
{
  object = stringValue._object;
  uint64_t countAndFlagsBits = stringValue._countAndFlagsBits;
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v4 = (void *)MEMORY[0x1C87730B0](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithStringValue_, v4);

  return (CNPhoneNumber)v5;
}

id specialized @nonobjc CNLabeledValue.init(label:value:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    id v5 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  id v6 = objc_msgSend(v3, sel_initWithLabel_value_, v5, a3);

  return v6;
}

id @nonobjc CNSocialProfile.init(urlString:username:userIdentifier:service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    id v15 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    id v15 = 0;
    if (a4)
    {
LABEL_3:
      id v16 = (void *)MEMORY[0x1C87730B0](a3, a4);
      swift_bridgeObjectRelease();
      if (a6) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v17 = 0;
      if (a8) {
        goto LABEL_5;
      }
LABEL_9:
      uint64_t v18 = 0;
      goto LABEL_10;
    }
  }
  id v16 = 0;
  if (!a6) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v17 = (void *)MEMORY[0x1C87730B0](a5, a6);
  swift_bridgeObjectRelease();
  if (!a8) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v18 = (void *)MEMORY[0x1C87730B0](a7, a8);
  swift_bridgeObjectRelease();
LABEL_10:
  id v19 = objc_msgSend(v8, sel_initWithUrlString_username_userIdentifier_service_, v15, v16, v17, v18);

  return v19;
}

unint64_t type metadata accessor for CNPhoneNumber()
{
  unint64_t result = lazy cache variable for type metadata for CNPhoneNumber;
  if (!lazy cache variable for type metadata for CNPhoneNumber)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNPhoneNumber);
  }
  return result;
}

uint64_t outlined bridged method (pb) of @objc TUHandle.isoCountryCode.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_isoCountryCode);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t TapInteractionHandler.handleTapInteractionOverrideView(_:)()
{
  return 0;
}

uint64_t TapInteraction.view.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  swift_beginAccess();
  return MEMORY[0x1C8776240](v1);
}

void TapInteraction.view.setter(void *a1)
{
}

uint64_t key path getter for TapInteraction.view : TapInteraction@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for TapInteraction.view : TapInteraction()
{
  return swift_unknownObjectWeakAssign();
}

void (*TapInteraction.view.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C8776240](v5);
  return TapInteraction.view.modify;
}

void TapInteraction.view.modify(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

id TapInteraction.numberOfTapsRequired.getter()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer), sel_numberOfTapsRequired);
}

id TapInteraction.numberOfTapsRequired.setter(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer), sel_setNumberOfTapsRequired_, a1);
}

id (*TapInteraction.numberOfTapsRequired.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
  a1[1] = v3;
  *a1 = objc_msgSend(v3, sel_numberOfTapsRequired);
  return TapInteraction.numberOfTapsRequired.modify;
}

id TapInteraction.numberOfTapsRequired.modify(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setNumberOfTapsRequired_, *(void *)a1);
}

char *TapInteraction.__allocating_init(tapCount:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_msgSend(objc_allocWithZone(v1), sel_init);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer], sel_setNumberOfTapsRequired_, a1);
  return v3;
}

id TapInteraction.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *TapInteraction.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1D38]);
  id v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);

  v10.receiver = v4;
  v10.super_class = ObjectType;
  uint64_t v5 = (char *)objc_msgSendSuper2(&v10, sel_init);
  id v6 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer];
  uint64_t v7 = v5;
  objc_msgSend(v6, sel_setDelegate_, v7);
  id v8 = v6;
  objc_msgSend(v8, sel_addTarget_action_, v7, sel_handleRecognizer_);

  return v7;
}

Swift::Void __swiftcall TapInteraction.willMove(to:)(UIView_optional *to)
{
  if (to) {
    [(UIView_optional *)to removeGestureRecognizer:*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer)];
  }
}

Swift::Void __swiftcall TapInteraction.didMove(to:)(UIView_optional *to)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  if (to) {
    [(UIView_optional *)to addGestureRecognizer:*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer)];
  }
}

id TapInteraction.handleRecognizer(_:)(void *a1)
{
  uint64_t v2 = v1;
  id result = objc_msgSend(a1, sel_state);
  if (result == (id)3)
  {
    uint64_t v5 = v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
    swift_beginAccess();
    id result = (id)MEMORY[0x1C8776240](v5);
    if (result)
    {
      id v6 = result;
      v24[0] = result;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      id v7 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TapInteractionHandler);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v28 = 0;
        memset(v27, 0, sizeof(v27));
      }
      outlined init with copy of TapInteractionHandler?((uint64_t)v27, (uint64_t)v24);
      id v8 = v25;
      if (v25)
      {
        uint64_t v9 = v26;
        __swift_project_boxed_opaque_existential_1(v24, (uint64_t)v25);
        id v8 = (void *)(*(uint64_t (**)(uint64_t, void *, uint64_t))(v9 + 24))(v2, v8, v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        if (v8) {
          objc_super v10 = v8;
        }
        else {
          objc_super v10 = v7;
        }
      }
      else
      {
        outlined destroy of TapInteractionHandler?((uint64_t)v24);
        objc_super v10 = v7;
      }
      id v11 = v10;
      objc_msgSend(a1, sel_locationInView_, v11);
      uint64_t v13 = v12;
      uint64_t v15 = v14;
      TapInteraction.findHandler()((uint64_t)&v22);
      if (v23)
      {
        outlined init with take of Notice(&v22, (uint64_t)v24);
        id v21 = v7;
        uint64_t v17 = (uint64_t)v25;
        uint64_t v16 = v26;
        __swift_project_boxed_opaque_existential_1(v24, (uint64_t)v25);
        uint64_t v20 = v8;
        uint64_t v18 = *(void (**)(uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
        id v19 = v11;
        v18(v2, v11, v13, v15, v17, v16);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {

        outlined destroy of TapInteractionHandler?((uint64_t)&v22);
      }
      return (id)outlined destroy of TapInteractionHandler?((uint64_t)v27);
    }
  }
  return result;
}

void TapInteraction.findHandler()(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  swift_beginAccess();
  id v5 = (id)MEMORY[0x1C8776240](v4);
  outlined init with copy of TapInteractionHandler?((uint64_t)v16, (uint64_t)&v13);
  if (*((void *)&v14 + 1))
  {
LABEL_10:
    outlined destroy of TapInteractionHandler?((uint64_t)&v13);
  }
  else
  {
    while (1)
    {
      outlined destroy of TapInteractionHandler?((uint64_t)&v13);
      if (!v5) {
        break;
      }
      v10[0] = v5;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIResponder);
      id v6 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TapInteractionHandler);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v15 = 0;
        long long v13 = 0u;
        long long v14 = 0u;
      }
      outlined init with copy of TapInteractionHandler?((uint64_t)&v13, (uint64_t)v10);
      uint64_t v7 = v11;
      if (v11)
      {
        uint64_t v8 = v12;
        __swift_project_boxed_opaque_existential_1(v10, v11);
        char v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v2, v7, v8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        if (v9)
        {
          outlined destroy of TapInteractionHandler?((uint64_t)v16);
          outlined init with copy of TapInteractionHandler?((uint64_t)&v13, (uint64_t)v16);
        }
      }
      else
      {
        outlined destroy of TapInteractionHandler?((uint64_t)v10);
      }
      id v5 = objc_msgSend(v6, sel_nextResponder);

      outlined destroy of TapInteractionHandler?((uint64_t)&v13);
      outlined init with copy of TapInteractionHandler?((uint64_t)v16, (uint64_t)&v13);
      if (*((void *)&v14 + 1)) {
        goto LABEL_10;
      }
    }
  }
  outlined init with take of TapInteractionHandler?((uint64_t)v16, a1);
}

Swift::Void __swiftcall TapInteraction.triggerInteraction()()
{
  TapInteraction.findHandler()((uint64_t)&v3);
  if (v4)
  {
    outlined init with take of Notice(&v3, (uint64_t)v5);
    uint64_t v1 = v6;
    uint64_t v2 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(uint64_t, void, void, void, uint64_t, uint64_t))(v2 + 16))(v0, 0, 0, 0, v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    outlined destroy of TapInteractionHandler?((uint64_t)&v3);
  }
}

uint64_t outlined destroy of TapInteractionHandler?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TapInteractionHandler?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TapInteraction.findSiblingTapInterations()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit14TapInteraction_view];
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  long long v3 = v2;
  id v4 = objc_msgSend(v2, sel_interactions);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIInteraction);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = specialized Sequence.compactMap<A>(_:)(v5, v0);
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t specialized Sequence.compactMap<A>(_:)(unint64_t a1, void *a2)
{
  swift_getObjectType();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87744F0](v4 - 4, a1);
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v5 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      if (swift_dynamicCastClass()
        && (swift_unknownObjectRetain(),
            char v6 = static NSObject.== infix(_:_:)(),
            uint64_t v7 = swift_unknownObjectRelease(),
            (v6 & 1) == 0))
      {
        MEMORY[0x1C87733A0](v7);
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v4;
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v11;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_19:

  return v8;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      char v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      char v9 = PeoplePickerViewController.pickablePerson(for:)(v6);

      if (v9)
      {
        MEMORY[0x1C87733A0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v5;
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        objc_super v10 = v12;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  objc_super v10 = MEMORY[0x1E4FBC860];
LABEL_17:

  return v10;
}

{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;

  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    long long v22 = v3 & 0xC000000000000001;
    uint64_t v5 = MEMORY[0x1E4FBC860];
    char v6 = 4;
    id v21 = v3;
    while (1)
    {
      uint64_t v7 = v22 ? (id)MEMORY[0x1C87744F0](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      uint64_t v8 = v7;
      char v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      objc_super v10 = v4;
      uint64_t v11 = outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(objc_msgSend(v7, sel_provider), (SEL *)&selRef_bundleIdentifier);
      long long v13 = ConversationControlsManager.phoneToICSBundleID(_:)(v11, v12);
      uint64_t v15 = v14;

      swift_bridgeObjectRelease();
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v5 = v18;
        }
        uint64_t v16 = *(void *)(v5 + 16);
        if (v16 >= *(void *)(v5 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v5 = v19;
        }
        *(void *)(v5 + 16) = v16 + 1;
        uint64_t v17 = v5 + 16 * v16;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = v15;
      }
      uint64_t v4 = v10;
      uint64_t v3 = v21;
      ++v6;
      if (v9 == v4) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_19:

  swift_bridgeObjectRelease();
  return v5;
}

id TapInteraction.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall TapInteraction.gestureRecognizer(_:shouldRequireFailureOf:)(UIGestureRecognizer *_, UIGestureRecognizer *shouldRequireFailureOf)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
  if ((static NSObject.== infix(_:_:)() & 1) != 0 && objc_msgSend(v4, sel_numberOfTapsRequired) == (id)1)
  {
    unint64_t v5 = TapInteraction.findSiblingTapInterations()();
    unint64_t v6 = v5;
    unint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v20 = MEMORY[0x1E4FBC860];
    if (v5 >> 62)
    {
      unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v8 = v5;
      if (v5)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          goto LABEL_32;
        }
        for (uint64_t i = 0; i != v8; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            objc_super v10 = (char *)MEMORY[0x1C87744F0](i, v6);
          }
          else {
            objc_super v10 = (char *)*(id *)(v6 + 8 * i + 32);
          }
          uint64_t v11 = v10;
          if ((uint64_t)objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer], sel_numberOfTapsRequired) < 2)
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            OUTLINED_FUNCTION_0_7();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v12 = v20;
        unint64_t v7 = MEMORY[0x1E4FBC860];
        if (v20 < 0) {
          goto LABEL_29;
        }
LABEL_19:
        if ((v12 & 0x4000000000000000) == 0)
        {
          uint64_t v13 = *(void *)(v12 + 16);
          if (!v13)
          {
LABEL_28:
            swift_release();
            char v18 = specialized Sequence<>.contains(_:)((uint64_t)shouldRequireFailureOf, v7);
            swift_bridgeObjectRelease();
            LOBYTE(v5) = v18 & 1;
            return v5;
          }
          goto LABEL_21;
        }
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (!v13) {
          goto LABEL_28;
        }
LABEL_21:
        unint64_t v21 = v7;
        LOBYTE(v5) = specialized ContiguousArray.reserveCapacity(_:)();
        if ((v13 & 0x8000000000000000) == 0)
        {
          uint64_t v14 = 0;
          do
          {
            if ((v12 & 0xC000000000000001) != 0) {
              uint64_t v15 = (char *)MEMORY[0x1C87744F0](v14, v12);
            }
            else {
              uint64_t v15 = (char *)*(id *)(v12 + 8 * v14 + 32);
            }
            uint64_t v16 = v15;
            ++v14;
            id v17 = *(id *)&v15[OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer];

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            OUTLINED_FUNCTION_0_7();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while (v13 != v14);
          unint64_t v7 = v21;
          goto LABEL_28;
        }
LABEL_32:
        __break(1u);
        return v5;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_19;
  }
  LOBYTE(v5) = 0;
  return v5;
}

Swift::Bool __swiftcall TapInteraction.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer *_, UITouch shouldReceive)
{
  id v2 = [(objc_class *)shouldReceive.super.isa view];
  if (v2)
  {
    uint64_t v3 = v2;
    self;
    id v2 = (id)swift_dynamicCastObjCClass();
    if (!v2)
    {

      id v2 = 0;
    }
  }
  Swift::Bool v4 = v2 == 0;

  return v4;
}

uint64_t UIView.tapInteractions(withTapCount:)(id a1)
{
  id v3 = objc_msgSend(v1, sel_interactions);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIInteraction);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87744F0](i, v4);
      }
      else {
        swift_unknownObjectRetain();
      }
      type metadata accessor for TapInteraction();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8
        && objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer), sel_numberOfTapsRequired) == a1)
      {
        MEMORY[0x1C87733A0]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v10;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TapInteraction()
{
  return self;
}

Swift::Void __swiftcall UIView.removeTapInteractions(withTapCount:)(Swift::Int withTapCount)
{
  unint64_t v2 = UIView.tapInteractions(withTapCount:)((id)withTapCount);
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_9;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1C87744F0](i, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    unint64_t v7 = v6;
    objc_msgSend(v1, sel_removeInteraction_, v6);
  }
LABEL_9:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall UIView.addTapInteraction(withTapCount:)(Swift::Int withTapCount)
{
  unint64_t v3 = UIView.tapInteractions(withTapCount:)((id)withTapCount);
  if (v3 >> 62) {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v4)
  {
    type metadata accessor for TapInteraction();
    uint64_t v5 = TapInteraction.__allocating_init(tapCount:)(withTapCount);
    objc_msgSend(v1, sel_addInteraction_, v5);
  }
}

id sub_1C2FF91C0@<X0>(void *a1@<X8>)
{
  id result = TapInteraction.numberOfTapsRequired.getter();
  *a1 = result;
  return result;
}

id sub_1C2FF91EC(uint64_t *a1)
{
  return TapInteraction.numberOfTapsRequired.setter(*a1);
}

uint64_t dispatch thunk of TapInteractionHandler.handleTapInteractionEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TapInteractionHandler.handleTapInteraction(_:eventType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of TapInteractionHandler.handleTapInteractionOverrideView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t initializeBufferWithCopyOfBuffer for TapInteraction.EventType(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TapInteraction.EventType(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TapInteraction.EventType(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TapInteraction.EventType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TapInteraction.EventType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)id result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)id result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)id result = a2;
    }
  }
  return result;
}

uint64_t getEnumTag for TapInteraction.EventType(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *destructiveInjectEnumTag for TapInteraction.EventType(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *id result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TapInteraction.EventType()
{
  return &type metadata for TapInteraction.EventType;
}

uint64_t protocol witness for TapInteractionHandler.handleTapInteractionOverrideView(_:) in conformance MultiwayViewController()
{
  return OUTLINED_FUNCTION_17_1();
}

uint64_t outlined init with copy of TapInteractionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TapInteractionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of TapInteractionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TapInteractionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ViewModelCallStatusUpdateService.updateViewModel(with:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](ViewModelCallStatusUpdateService.updateViewModel(with:), v4, v3);
}

uint64_t ViewModelCallStatusUpdateService.updateViewModel(with:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  if (v3 == TranscriptionViewModel.callUUID.getter() && v2 == v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v6) {
LABEL_8:
  }
    TranscriptionViewModel.state.setter();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

ValueMetadata *type metadata accessor for ViewModelCallStatusUpdateService()
{
  return &type metadata for ViewModelCallStatusUpdateService;
}

id one-time initialization function for faceTimeTodayFormatter()
{
  id result = closure #1 in variable initialization expression of static Date.faceTimeTodayFormatter();
  static Date.faceTimeTodayFormatter = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static Date.faceTimeTodayFormatter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C08]), sel_init);
  uint64_t v1 = self;
  uint64_t v2 = (void *)MEMORY[0x1C87730B0](7158378, 0xE300000000000000);
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v8 = objc_msgSend(v1, sel_dateFormatFromTemplate_options_locale_, v2, 0, isa);

  objc_msgSend(v0, sel_setDateFormat_, v8);
  return v0;
}

uint64_t *Date.faceTimeTodayFormatter.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTimeTodayFormatter != -1) {
    swift_once();
  }
  return &static Date.faceTimeTodayFormatter;
}

id static Date.faceTimeTodayFormatter.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for faceTimeTodayFormatter, (void **)&static Date.faceTimeTodayFormatter);
}

id one-time initialization function for faceTimeOlderFormatter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C08]), sel_init);
  objc_msgSend(v0, sel_setTimeStyle_, 0);
  id result = objc_msgSend(v0, sel_setDateStyle_, 1);
  static Date.faceTimeOlderFormatter = (uint64_t)v0;
  return result;
}

uint64_t *Date.faceTimeOlderFormatter.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTimeOlderFormatter != -1) {
    swift_once();
  }
  return &static Date.faceTimeOlderFormatter;
}

id static Date.faceTimeOlderFormatter.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for faceTimeOlderFormatter, (void **)&static Date.faceTimeOlderFormatter);
}

Swift::String __swiftcall Date.faceTimeDateString()()
{
  uint64_t v0 = static Date.faceTimeDateString(from:)();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static Date.faceTimeDateString(from:)()
{
  unint64_t v1 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_20();
  static Calendar.current.getter();
  if (Calendar.isDateInToday(_:)())
  {
    if (one-time initialization token for faceTimeTodayFormatter != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)static Date.faceTimeTodayFormatter;
    v6.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v7 = objc_msgSend(v5, sel_stringFromDate_, v6.super.isa);
    goto LABEL_14;
  }
  if (Calendar.isDateInYesterday(_:)())
  {
    id v8 = objc_msgSend(self, sel_conversationKit);
    v43._object = (void *)0xE000000000000000;
    v9._uint64_t countAndFlagsBits = 0x6164726574736559;
    v9._object = (void *)0xE900000000000079;
    v10.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v43._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v43)._countAndFlagsBits;
LABEL_15:
    uint64_t v32 = countAndFlagsBits;

    goto LABEL_16;
  }
  unint64_t v38 = v1;
  id v39 = v3;
  uint64_t v41 = type metadata accessor for Date();
  id v42 = &v35;
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  uint64_t v18 = type metadata accessor for Calendar.Component();
  id v40 = &v35;
  OUTLINED_FUNCTION_4();
  uint64_t v20 = v19;
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x1F4188790](v23);
  unint64_t v36 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v24 = (char *)&v35 - v36;
  uint64_t v25 = *MEMORY[0x1E4F27BC8];
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  v37((char *)&v35 - v36, v25, v18);
  char v26 = Calendar.isDate(_:equalTo:toGranularity:)();
  os_log_type_t v27 = v24;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v27, v18);
  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v41);
  if ((v26 & 1) == 0)
  {
    unint64_t v1 = v38;
    uint64_t v3 = v39;
    if (one-time initialization token for faceTimeOlderFormatter == -1)
    {
LABEL_13:
      char v33 = (void *)static Date.faceTimeOlderFormatter;
      v6.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v7 = objc_msgSend(v33, sel_stringFromDate_, v6.super.isa);
LABEL_14:
      id v8 = v7;

      uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_13;
  }
  MEMORY[0x1F4188790](v29);
  uint64_t v3 = (char *)&v35 - v36;
  v37((char *)&v35 - v36, *MEMORY[0x1E4F27C70], v18);
  uint64_t v30 = Calendar.component(_:from:)();
  v28(v3, v18);
  unint64_t v1 = v30 - 1;
  if (__OFSUB__(v30, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v31 = Calendar.weekdaySymbols.getter();
  uint64_t v3 = v39;
  if ((v1 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v1 >= *(void *)(v31 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v32 = *(void *)(v31 + 16 * v1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v1 = v38;
LABEL_16:
  (*((void (**)(uint64_t, unint64_t))v3 + 1))(v0, v1);
  return v32;
}

id @objc NSDate.faceTimeDateString.getter(void *a1)
{
  id v1 = a1;
  uint64_t v2 = NSDate.faceTimeDateString.getter();
  uint64_t v4 = v3;

  uint64_t v5 = (void *)MEMORY[0x1C87730B0](v2, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t NSDate.faceTimeDateString.getter()
{
  uint64_t v1 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_20();
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = static Date.faceTimeDateString(from:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v5;
}

BOOL static PresentationContext.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void PresentationContext.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int PresentationContext.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PresentationContext(char *a1, char *a2)
{
  return static PresentationContext.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PresentationContext()
{
  return PresentationContext.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance PresentationContext(uint64_t a1)
{
  PresentationContext.hash(into:)(a1, *v1);
}

void *ButtonStyle.Configuration.backgroundStyle.getter(void *a1, void *a2, char a3)
{
  return a1;
}

void ButtonStyle.Configuration.backgroundStyle.setter()
{
  OUTLINED_FUNCTION_6_11();
  outlined consume of ButtonBackgroundStyle(*(void **)v1, *(void **)(v1 + 8), *(unsigned char *)(v1 + 16));
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v0;
}

void outlined consume of ButtonBackgroundStyle(void *a1, void *a2, char a3)
{
  if (a3 >> 6 == 1)
  {
  }
  else if (!(a3 >> 6))
  {
    outlined consume of ButtonBackgroundBlurStyle(a1, a2, a3);
  }
}

void outlined consume of ButtonBackgroundBlurStyle(void *a1, void *a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1) {
      return;
    }

    a1 = a2;
  }
}

uint64_t (*ButtonStyle.Configuration.backgroundStyle.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ButtonStyle.Configuration.foregroundColor.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*ButtonStyle.Configuration.foregroundColor.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ButtonStyle.regular.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  outlined copy of ButtonBackgroundStyle(*(id *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
  id v2 = v1;
  return OUTLINED_FUNCTION_9_9();
}

void ButtonStyle.regular.setter()
{
  OUTLINED_FUNCTION_8_8();
  outlined consume of ButtonBackgroundStyle(*(void **)v1, *(void **)(v1 + 8), *(unsigned char *)(v1 + 16));

  *(void *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
}

uint64_t (*ButtonStyle.regular.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ButtonStyle.flat.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  outlined copy of ButtonBackgroundStyle(*(id *)(v0 + 32), *(void **)(v0 + 40), *(unsigned char *)(v0 + 48));
  id v2 = v1;
  return OUTLINED_FUNCTION_9_9();
}

void ButtonStyle.flat.setter()
{
  OUTLINED_FUNCTION_8_8();
  outlined consume of ButtonBackgroundStyle(*(void **)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48));

  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
}

uint64_t (*ButtonStyle.flat.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *ButtonStyle.current.getter()
{
  uint64_t v1 = v0;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  char v2 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 320))();
  uint64_t v3 = v0 + 32;
  uint64_t v4 = 32;
  if ((v2 & 1) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v3 = v0;
  }
  uint64_t v5 = *(void **)(v3 + 24);
  NSDate v6 = *(void **)(v1 + v4);
  outlined copy of ButtonBackgroundStyle(v6, *(void **)(v3 + 8), *(unsigned char *)(v3 + 16));
  id v7 = v5;
  return v6;
}

uint64_t ButtonStyle.init(regular:flat:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t key path getter for BaseButton.callbackCancellable : BaseButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t key path setter for BaseButton.callbackCancellable : BaseButton(uint64_t a1, void **a2)
{
  char v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x90);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t BaseButton.callbackCancellable.getter()
{
  return swift_retain();
}

uint64_t BaseButton.callbackCancellable.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit10BaseButton_callbackCancellable);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*BaseButton.callbackCancellable.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t BaseButton.shape.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_shape);
}

void key path getter for BaseButton.cnkContentAlpha : BaseButton(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA0))();
}

uint64_t key path setter for BaseButton.cnkContentAlpha : BaseButton(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA8))(*a1);
}

double BaseButton.cnkContentAlpha.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

void BaseButton.cnkContentAlpha.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha);
  swift_beginAccess();
  *uint64_t v3 = a1;
  UIButton.updateContentAlpha(_:)(a1);
}

void (*BaseButton.cnkContentAlpha.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return BaseButton.cnkContentAlpha.modify;
}

void BaseButton.cnkContentAlpha.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0) {
    UIButton.updateContentAlpha(_:)(*(double *)(v3[3] + v3[4]));
  }
  free(v3);
}

void *BaseButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  id v13 = objc_allocWithZone(v6);
  return BaseButton.init(title:symbol:shape:stateConfiguration:context:)(a1, a2, a3, a4, a5, a6);
}

void *BaseButton.init(title:symbol:shape:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_callbackCancellable] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha] = 0x3FF0000000000000;
  uint64_t v16 = (uint64_t *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton__title];
  *uint64_t v16 = a1;
  v16[1] = a2;
  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_symbol]);
  v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_shape] = a4;
  *(void *)&v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_stateConfiguration] = a5;
  v6[OBJC_IVAR____TtC15ConversationKit10BaseButton_context] = a6;
  id v17 = (objc_class *)type metadata accessor for BaseButton();
  v24.receiver = v6;
  v24.super_class = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0xC8);
  uint64_t v20 = v18;
  Swift::UInt v21 = v19();
  BaseButton.style(for:)(v21, v25);
  static UIButton.Configuration.base(title:symbol:shape:style:context:)(a1, a2, a3, a4, (uint64_t)v25, a6, (uint64_t)v15);
  swift_bridgeObjectRelease();
  outlined release of ButtonStyle?((uint64_t)v25);
  uint64_t v22 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v22);
  UIButton.configuration.setter();

  outlined destroy of SymbolImageDescribing?(a3);
  return v20;
}

id BaseButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void BaseButton.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit10BaseButton_callbackCancellable] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit10BaseButton_cnkContentAlpha] = 0x3FF0000000000000;

  OUTLINED_FUNCTION_0_8();
  __break(1u);
}

Swift::UInt BaseButton.style(for:)@<X0>(Swift::UInt result@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit10BaseButton_stateConfiguration);
  if (*(void *)(v4 + 16) && (uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(result), (v5 & 1) != 0))
  {
    Swift::UInt v6 = *(void *)(v4 + 56) + (result << 6);
    id v7 = *(id *)v6;
    id v8 = *(void **)(v6 + 8);
    Swift::String_optional v10 = *(void **)(v6 + 24);
    Swift::String v9 = *(void **)(v6 + 32);
    Swift::String v11 = *(void **)(v6 + 40);
    uint64_t v12 = *(void **)(v6 + 56);
    uint64_t v13 = *(unsigned __int8 *)(v6 + 16);
    unsigned __int8 v14 = *(unsigned char *)(v6 + 48);
    uint64_t v15 = v14;
    outlined copy of ButtonBackgroundStyle(*(id *)v6, v8, *(unsigned char *)(v6 + 16));
    id v16 = v10;
    outlined copy of ButtonBackgroundStyle(v9, v11, v14);
    uint64_t result = v12;
  }
  else
  {
    id v7 = 0;
    id v8 = 0;
    uint64_t v13 = 0;
    Swift::String_optional v10 = 0;
    Swift::String v9 = 0;
    Swift::String v11 = 0;
    uint64_t v15 = 0;
    uint64_t v12 = 0;
  }
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v13;
  a2[3] = v10;
  a2[4] = v9;
  a2[5] = v11;
  a2[6] = v15;
  a2[7] = v12;
  return result;
}

Swift::Void __swiftcall BaseButton.updateConfiguration()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton__title);
  uint64_t v6 = *(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton__title + 8);
  uint64_t v7 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_symbol;
  int v8 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_shape);
  Swift::UInt v9 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))(v2);
  BaseButton.style(for:)(v9, v11);
  static UIButton.Configuration.base(title:symbol:shape:style:context:)(v5, v6, v7, v8, (uint64_t)v11, *((unsigned __int8 *)v0 + OBJC_IVAR____TtC15ConversationKit10BaseButton_context), (uint64_t)v4);
  outlined release of ButtonStyle?((uint64_t)v11);
  uint64_t v10 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v10);
  UIButton.configuration.setter();
}

uint64_t BaseButton.computedState.getter()
{
  if (!objc_msgSend(v0, sel_isEnabled)) {
    return 2;
  }
  unsigned int v1 = objc_msgSend(v0, sel_isHighlighted);
  unsigned int v2 = objc_msgSend(v0, sel_isSelected);
  uint64_t v3 = 4;
  if (!v2) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 5;
  if (!v2) {
    uint64_t v4 = 1;
  }
  if (v1) {
    return v4;
  }
  else {
    return v3;
  }
}

id BaseButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void BaseButton.init(frame:)()
{
}

id BaseButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for BaseButton);
}

uint64_t protocol witness for Control.cnkContentAlpha.getter in conformance BaseButton()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t protocol witness for Control.cnkContentAlpha.setter in conformance BaseButton()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

void (*protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xB0))();
  return protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton;
}

void protocol witness for Control.cnkContentAlpha.modify in conformance BaseButton(void *a1)
{
  unsigned int v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void *BrickButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_4_28();
  uint64_t v0 = OUTLINED_FUNCTION_3_30();
  return BrickButton.init(title:symbol:stateConfiguration:context:)(v0, v1, v2, v3, v4);
}

void *BrickButton.init(title:symbol:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)v12);
  uint64_t v10 = BaseButton.init(title:symbol:shape:stateConfiguration:context:)(a1, a2, (uint64_t)v12, 0, a4, a5);
  outlined destroy of SymbolImageDescribing?(a3);
  return v10;
}

void BrickButton.init(coder:)()
{
}

void BrickButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
}

{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void BrickButton.init(title:symbol:shape:stateConfiguration:context:)()
{
}

id BrickButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for BrickButton);
}

void *PillButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_4_28();
  uint64_t v0 = OUTLINED_FUNCTION_3_30();
  return PillButton.init(title:symbol:stateConfiguration:context:)(v0, v1, v2, v3, v4);
}

void *PillButton.init(title:symbol:stateConfiguration:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit10PillButton_symbol];
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(void *)(v11 + 32) = 0;
  v5[OBJC_IVAR____TtC15ConversationKit10PillButton_context] = a5;
  swift_beginAccess();
  uint64_t v12 = v5;
  outlined assign with copy of SymbolImageDescribing?(a3, v11);
  swift_endAccess();

  outlined init with copy of SymbolImageDescribing?(a3, (uint64_t)v15);
  uint64_t v13 = BaseButton.init(title:symbol:shape:stateConfiguration:context:)(a1, a2, (uint64_t)v15, 2, a4, a5);
  PillButton.setupConstraints()();

  outlined destroy of SymbolImageDescribing?(a3);
  return v13;
}

void PillButton.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit10PillButton_symbol];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  OUTLINED_FUNCTION_0_8();
  __break(1u);
}

void PillButton.setupConstraints()()
{
  unint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_symbol;
  swift_beginAccess();
  outlined init with copy of SymbolImageDescribing?(v2, (uint64_t)v19);
  if (v20) {
    float v3 = 1000.0;
  }
  else {
    float v3 = 750.0;
  }
  outlined destroy of SymbolImageDescribing?((uint64_t)v19);
  if (!*((unsigned char *)v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_context))
  {
    id v9 = objc_msgSend(v0, sel_widthAnchor);
    id v10 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, 72.0);

    *(float *)&double v11 = v3;
    objc_msgSend(v10, sel_setPriority_, v11);
    id v12 = objc_msgSend(v0, sel_heightAnchor);
    id v13 = objc_msgSend(v12, sel_constraintGreaterThanOrEqualToConstant_, 42.0);

    *(float *)&double v14 = v3;
    objc_msgSend(v13, sel_setPriority_, v14);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v15, 2))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v15 + 2, 1);
      specialized Array._endMutation()();
      id v10 = v10;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_13:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v7 = v13;
        MEMORY[0x1C87733A0]();
        OUTLINED_FUNCTION_7_10();
        if (v8) {
          OUTLINED_FUNCTION_1_4();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_16;
      }
    }
    OUTLINED_FUNCTION_1_4();
    goto LABEL_13;
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_context) == 1)
  {
    id v4 = objc_msgSend(v0, sel_heightAnchor);
    static Layout.ConversationControls.values.getter((uint64_t)v19);
    id v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, v21);

    *(float *)&double v6 = v3;
    objc_msgSend(v5, sel_setPriority_, v6);
    id v7 = v5;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_7_10();
    if (v8) {
      OUTLINED_FUNCTION_1_4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_16:
  }
  id v16 = self;
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_activateConstraints_, isa);
}

void PillButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
}

void PillButton.init(title:symbol:shape:stateConfiguration:context:)()
{
}

uint64_t PillButton.__ivar_destroyer()
{
  return outlined destroy of SymbolImageDescribing?(v0 + OBJC_IVAR____TtC15ConversationKit10PillButton_symbol);
}

id PillButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for PillButton);
}

id CircularButton.squareConstraint.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint];
  }
  else
  {
    id v4 = closure #1 in CircularButton.squareConstraint.getter(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in CircularButton.squareConstraint.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_widthAnchor);
  id v3 = objc_msgSend(a1, sel_heightAnchor);
  id v4 = objc_msgSend(v2, sel_constraintEqualToAnchor_, v3);

  LODWORD(v5) = 1148846080;
  objc_msgSend(v4, sel_setPriority_, v5);
  return v4;
}

void *CircularButton.__allocating_init(symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_6_11();
  id v1 = objc_allocWithZone(v0);
  return CircularButton.init(symbol:stateConfiguration:context:)();
}

void *CircularButton.init(symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_6_11();
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint) = 0;
  outlined init with copy of SymbolImageDescribing?(v4, (uint64_t)v8);
  double v5 = BaseButton.init(title:symbol:shape:stateConfiguration:context:)(0, 0, (uint64_t)v8, 1, v2, v0);
  id v6 = CircularButton.squareConstraint.getter();
  objc_msgSend(v6, sel_setActive_, 1);

  outlined destroy of SymbolImageDescribing?(v3);
  return v5;
}

void CircularButton.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit14CircularButton____lazy_storage___squareConstraint] = 0;

  OUTLINED_FUNCTION_0_8();
  __break(1u);
}

void CircularButton.__allocating_init(title:symbol:shape:stateConfiguration:context:)()
{
}

void CircularButton.init(title:symbol:shape:stateConfiguration:context:)()
{
}

void CircularButton.__ivar_destroyer()
{
}

id CircularButton.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for CircularButton);
}

id BaseButton.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t specialized OptionSet<>.formUnion(_:)(uint64_t result)
{
  *v1 |= result;
  return result;
}

{
  _DWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t outlined init with copy of SymbolImageDescribing?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BaseButton()
{
  return self;
}

uint64_t outlined release of ButtonStyle?(uint64_t a1)
{
  return a1;
}

void outlined consume of ButtonStyle?(void *a1, void *a2, char a3, void *a4, void *a5, void *a6, char a7, void *a8)
{
  if (a4)
  {
    outlined consume of ButtonBackgroundStyle(a1, a2, a3);

    outlined consume of ButtonBackgroundStyle(a5, a6, a7);
  }
}

uint64_t outlined destroy of SymbolImageDescribing?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for BrickButton()
{
  return self;
}

uint64_t outlined assign with copy of SymbolImageDescribing?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PillButton()
{
  return self;
}

uint64_t type metadata accessor for CircularButton()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type PresentationContext and conformance PresentationContext()
{
  unint64_t result = lazy protocol witness table cache variable for type PresentationContext and conformance PresentationContext;
  if (!lazy protocol witness table cache variable for type PresentationContext and conformance PresentationContext)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PresentationContext and conformance PresentationContext);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))outlined copy of ButtonBackgroundBlurStyle);
}

void destroy for ButtonBackgroundBlurStyle(uint64_t a1)
{
}

uint64_t *assignWithCopy for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return assignWithCopy for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))outlined copy of ButtonBackgroundBlurStyle, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundBlurStyle);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundBlurStyle);
}

uint64_t getEnumTagSinglePayload for ButtonBackgroundBlurStyle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonBackgroundBlurStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for ButtonBackgroundBlurStyle(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t destructiveInjectEnumTag for ButtonBackgroundBlurStyle(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ButtonBackgroundBlurStyle()
{
}

uint64_t initializeBufferWithCopyOfBuffer for ButtonBackgroundStyle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))outlined copy of ButtonBackgroundStyle);
}

void destroy for ButtonBackgroundStyle(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ButtonBackgroundBlurStyle(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for ButtonBackgroundStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return assignWithCopy for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))outlined copy of ButtonBackgroundStyle, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundStyle);
}

uint64_t *assignWithCopy for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for ButtonBackgroundStyle(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return assignWithTake for ButtonBackgroundBlurStyle(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))outlined consume of ButtonBackgroundStyle);
}

uint64_t *assignWithTake for ButtonBackgroundBlurStyle(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonBackgroundStyle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3E && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 61;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
      if (v2 >= 0x3D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ButtonBackgroundStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 62;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t getEnumTag for ButtonBackgroundStyle(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t destructiveProjectEnumData for ButtonBackgroundStyle(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t destructiveInjectEnumTag for ButtonBackgroundStyle(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 16) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    char v2 = 0x80;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

void type metadata accessor for ButtonBackgroundStyle()
{
}

unsigned char *storeEnumTagSinglePayload for PresentationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2FFC07CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for PresentationContext()
{
}

void destroy for ButtonStyle(uint64_t a1)
{
  outlined consume of ButtonBackgroundStyle(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));

  outlined consume of ButtonBackgroundStyle(*(void **)(a1 + 32), *(void **)(a1 + 40), *(unsigned char *)(a1 + 48));
  char v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for ButtonStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  uint64_t v9 = *(void **)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 48);
  id v11 = v7;
  outlined copy of ButtonBackgroundStyle(v8, v9, v10);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  uint64_t v12 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v12;
  id v13 = v12;
  return a1;
}

uint64_t assignWithCopy for ButtonStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  outlined consume of ButtonBackgroundStyle(v7, v8, v9);
  char v10 = *(void **)(a2 + 24);
  id v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 32);
  double v14 = *(void **)(a2 + 40);
  char v15 = *(unsigned char *)(a2 + 48);
  outlined copy of ButtonBackgroundStyle(v13, v14, v15);
  id v16 = *(void **)(a1 + 32);
  id v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v14;
  char v18 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v15;
  outlined consume of ButtonBackgroundStyle(v16, v17, v18);
  uint64_t v19 = *(void **)(a2 + 56);
  uint64_t v20 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v19;
  id v21 = v19;

  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ButtonStyle(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  char v6 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  outlined consume of ButtonBackgroundStyle(v5, v6, v7);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  char v9 = *(unsigned char *)(a2 + 48);
  char v10 = *(void **)(a1 + 32);
  id v11 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v12 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  outlined consume of ButtonBackgroundStyle(v10, v11, v12);
  id v13 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonStyle(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ButtonStyle()
{
}

void destroy for ButtonStyle.Configuration(uint64_t a1)
{
  outlined consume of ButtonBackgroundStyle(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));
  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for ButtonStyle.Configuration(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  char v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  id v8 = v7;
  return a1;
}

uint64_t assignWithCopy for ButtonStyle.Configuration(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  outlined copy of ButtonBackgroundStyle(*(id *)a2, v5, v6);
  char v7 = *(void **)a1;
  id v8 = *(void **)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  outlined consume of ButtonBackgroundStyle(v7, v8, v9);
  char v10 = *(void **)(a2 + 24);
  id v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for ButtonStyle.Configuration(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  char v6 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  outlined consume of ButtonBackgroundStyle(v5, v6, v7);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonStyle.Configuration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonStyle.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ButtonStyle.Configuration()
{
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.didLayoutSubviews(button:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.movedToWindow(button:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.startedContextMenu(button:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ButtonLifecycleDelegate.endedContextMenu(button:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for BaseButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseButton);
}

uint64_t dispatch thunk of BaseButton.callbackCancellable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BaseButton.callbackCancellable.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BaseButton.callbackCancellable.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BaseButton.cnkContentAlpha.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseButton.cnkContentAlpha.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}