uint64_t static Fence.DaysOfWeek.all.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result;

  if (qword_2698DA680 != -1) {
    result = swift_once();
  }
  *a1 = byte_2698DB968;
  return result;
}

uint64_t Fence.DaysOfWeek.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static Fence.DaysOfWeek.sunday.getter(unsigned char *a1@<X8>)
{
  *a1 = 64;
}

void static Fence.DaysOfWeek.monday.getter(unsigned char *a1@<X8>)
{
  *a1 = 32;
}

void static Fence.DaysOfWeek.tuesday.getter(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

void static Fence.DaysOfWeek.wednesday.getter(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

void static Fence.DaysOfWeek.thursday.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static Fence.DaysOfWeek.friday.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static Fence.DaysOfWeek.saturday.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Fence.DaysOfWeek.rawValue.getter()
{
  return *v0;
}

unsigned char *sub_24E4115A8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24E4115B4()
{
  return sub_24E475268();
}

uint64_t sub_24E4115FC()
{
  return sub_24E475248();
}

uint64_t sub_24E411628()
{
  return sub_24E475268();
}

void sub_24E41166C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_24E411674@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_24E411688@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_24E41169C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24E4116B0(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    unsigned char *v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_24E4116E0@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    unsigned char *v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_24E41170C@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  unsigned char *v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_24E411730(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_24E411744(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_24E411758(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_24E41176C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24E411780(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24E411794(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_24E4117A8(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_24E4117BC()
{
  return *v0 == 0;
}

uint64_t sub_24E4117CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

unsigned char *sub_24E4117E4(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_24E4117F8@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_24E411808(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t Fence.TimeOfDay.hour.getter()
{
  return *(void *)v0;
}

uint64_t Fence.TimeOfDay.minute.getter()
{
  return *(void *)(v0 + 8);
}

FindMyLocate::Fence::TimeOfDay __swiftcall Fence.TimeOfDay.init(hour:minute:)(Swift::UInt hour, Swift::UInt minute)
{
  Swift::UInt *v2 = hour;
  v2[1] = minute;
  result.minute = minute;
  result.hour = hour;
  return result;
}

uint64_t Fence.TimeOfDay.hash(into:)()
{
  return sub_24E475238();
}

BOOL static Fence.TimeOfDay.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_24E411884()
{
  if (*v0) {
    return 0x6574756E696DLL;
  }
  else {
    return 1920298856;
  }
}

uint64_t sub_24E4118B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4231F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E4118DC(uint64_t a1)
{
  unint64_t v2 = sub_24E41B558();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E411918(uint64_t a1)
{
  unint64_t v2 = sub_24E41B558();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Fence.TimeOfDay.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E4119B0()
{
  return sub_24E475268();
}

uint64_t sub_24E411A0C()
{
  return sub_24E475238();
}

uint64_t sub_24E411A48()
{
  return sub_24E475268();
}

BOOL sub_24E411AA0(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

__n128 Fence.Schedule.start.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 Fence.Schedule.end.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

void Fence.Schedule.daysOfWeek.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t Fence.Schedule.timeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v4 = sub_24E4749A8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Fence.Schedule.init(start:end:daysOfWeek:timeZone:)@<X0>(_OWORD *a1@<X0>, long long *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7 = *a3;
  long long v8 = *a2;
  *(_OWORD *)a5 = *a1;
  *(_OWORD *)(a5 + 16) = v8;
  *(unsigned char *)(a5 + 32) = v7;
  uint64_t v9 = a5 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v10 = sub_24E4749A8();
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  return v11(v9, a4, v10);
}

uint64_t Fence.Schedule.hash(into:)()
{
  return sub_24E474A28();
}

uint64_t sub_24E411C9C()
{
  uint64_t result = 0x7472617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6581861;
      break;
    case 2:
      uint64_t result = 0x6557664F73796164;
      break;
    case 3:
      uint64_t result = 0x656E6F5A656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E411D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4232D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E411D4C(uint64_t a1)
{
  unint64_t v2 = sub_24E41B5AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E411D88(uint64_t a1)
{
  unint64_t v2 = sub_24E41B5AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Fence.Schedule.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E411EA4()
{
  return sub_24E475268();
}

uint64_t sub_24E411F80()
{
  return sub_24E474A28();
}

uint64_t sub_24E412034(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E41207C()
{
  return sub_24E475268();
}

uint64_t Fence.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
  MEMORY[0x270FA5388](v1 - 8);
  v33 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for Fence(0);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v34 = 0;
  *((void *)&v34 + 1) = 0xE000000000000000;
  sub_24E474E88();
  long long v46 = v34;
  sub_24E474AF8();
  sub_24E474838();
  sub_24E474AC8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  swift_bridgeObjectRetain();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  Fence.Variant.description.getter();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  uint64_t v9 = (uint64_t)v33;
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  uint64_t v10 = (long long *)(v0 + v6[11]);
  long long v11 = v10[9];
  long long v42 = v10[8];
  long long v43 = v11;
  long long v12 = v10[11];
  long long v44 = v10[10];
  long long v45 = v12;
  long long v13 = v10[5];
  long long v38 = v10[4];
  long long v39 = v13;
  long long v14 = v10[7];
  long long v40 = v10[6];
  long long v41 = v14;
  long long v15 = v10[1];
  long long v34 = *v10;
  long long v35 = v15;
  long long v16 = v10[3];
  long long v36 = v10[2];
  long long v37 = v16;
  PlaceMark.shortDescription.getter();
  uint64_t v18 = v17;
  sub_24E40CFA8(v0, (uint64_t)v8, type metadata accessor for Fence);
  if (!v18)
  {
    v19 = &v8[v6[11]];
    long long v20 = *((_OWORD *)v19 + 9);
    long long v42 = *((_OWORD *)v19 + 8);
    long long v43 = v20;
    long long v21 = *((_OWORD *)v19 + 11);
    long long v44 = *((_OWORD *)v19 + 10);
    long long v45 = v21;
    long long v22 = *((_OWORD *)v19 + 5);
    long long v38 = *((_OWORD *)v19 + 4);
    long long v39 = v22;
    long long v23 = *((_OWORD *)v19 + 7);
    long long v40 = *((_OWORD *)v19 + 6);
    long long v41 = v23;
    long long v24 = *((_OWORD *)v19 + 1);
    long long v34 = *(_OWORD *)v19;
    long long v35 = v24;
    long long v25 = *((_OWORD *)v19 + 3);
    long long v36 = *((_OWORD *)v19 + 2);
    long long v37 = v25;
    PlaceMark.description.getter();
  }
  sub_24E40E710((uint64_t)v8, type metadata accessor for Fence);
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  uint64_t v26 = swift_bridgeObjectRetain();
  MEMORY[0x25333AE40](v26, &type metadata for PersonHandle);
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E381E60(v0 + v6[13], (uint64_t)v5, &qword_26B1B86A0);
  uint64_t v27 = sub_24E474818();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v5, 1, v27) == 1)
  {
    sub_24E379BD4((uint64_t)v5, &qword_26B1B86A0);
  }
  else
  {
    sub_24E474748();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v27);
  }
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474748();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E381E60(v0 + v6[15], v9, &qword_2698DAAC8);
  uint64_t v29 = sub_24E474878();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v9, 1, v29) == 1)
  {
    sub_24E379BD4(v9, &qword_2698DAAC8);
  }
  else
  {
    sub_24E474838();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v9, v29);
  }
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  swift_bridgeObjectRetain();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t Fence.Schedule.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA9D8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24E47EB30;
  uint64_t v2 = MEMORY[0x263F8D9D0];
  uint64_t v3 = MEMORY[0x263F8DA20];
  *(void *)(v1 + 56) = MEMORY[0x263F8D9D0];
  *(void *)(v1 + 64) = v3;
  uint64_t v4 = v0[1];
  *(void *)(v1 + 32) = *v0;
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 72) = v4;
  uint64_t v5 = sub_24E474AA8();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24E47EB30;
  *(void *)(v6 + 56) = v2;
  *(void *)(v6 + 64) = v3;
  uint64_t v7 = v0[3];
  *(void *)(v6 + 32) = v0[2];
  *(void *)(v6 + 96) = v2;
  *(void *)(v6 + 104) = v3;
  *(void *)(v6 + 72) = v7;
  sub_24E474AA8();
  sub_24E474E88();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  Fence.DaysOfWeek.description.getter();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  type metadata accessor for Fence.Schedule(0);
  sub_24E474988();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_24E412CE0()
{
  off_2698DB970 = &unk_270048D58;
}

uint64_t Fence.DaysOfWeek.description.getter()
{
  int v1 = *v0;
  if (qword_2698DA688 != -1) {
    swift_once();
  }
  uint64_t v2 = (char *)off_2698DB970;
  uint64_t v3 = *((void *)off_2698DB970 + 2);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = (uint64_t *)(v2 + 48);
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((*(unsigned __int8 *)(v4 - 2) & ~v1) == 0)
      {
        uint64_t v8 = *(v4 - 1);
        uint64_t v7 = *v4;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_24E41A590(0, v5[2] + 1, 1, v5);
        }
        unint64_t v10 = v5[2];
        unint64_t v9 = v5[3];
        if (v10 >= v9 >> 1) {
          uint64_t v5 = sub_24E41A590((void *)(v9 > 1), v10 + 1, 1, v5);
        }
        v5[2] = v10 + 1;
        uint64_t v6 = &v5[2 * v10];
        v6[4] = v8;
        v6[5] = v7;
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9CA0);
  sub_24E37B038();
  uint64_t v11 = sub_24E474A38();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t Fence.findee.getter@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = type metadata accessor for Fence(0);
  *a1 = (*(unsigned char *)(v1 + *(int *)(result + 28)) & 1) == 0;
  return result;
}

Swift::Void __swiftcall Fence.update(acceptanceStatus:)(FindMyLocate::Fence::AcceptanceStatus acceptanceStatus)
{
  char v2 = *(unsigned char *)acceptanceStatus;
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for Fence(0) + 36)) = v2;
}

uint64_t Fence.update(muteEndDate:)(uint64_t a1)
{
  uint64_t v3 = sub_24E474818();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  long long v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v15 = (char *)&v22 - v14;
  sub_24E381E60(a1, (uint64_t)v13, &qword_26B1B86A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
    sub_24E379BD4((uint64_t)v13, &qword_26B1B86A0);
    uint64_t v16 = 1;
  }
  else
  {
    uint64_t v23 = v1;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v17(v9, v13, v3);
    sub_24E4747E8();
    char v18 = sub_24E474788();
    v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v7, v3);
    if (v18)
    {
      v17(v15, v9, v3);
      uint64_t v16 = 0;
    }
    else
    {
      v19(v9, v3);
      uint64_t v16 = 1;
    }
    uint64_t v1 = v23;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v15, v16, 1, v3);
  uint64_t v20 = type metadata accessor for Fence(0);
  return sub_24E3A392C((uint64_t)v15, v1 + *(int *)(v20 + 52), &qword_26B1B86A0);
}

uint64_t Fence.update(ckRecordIdentifier:owner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Fence(0);
  uint64_t v8 = v3 + *(int *)(v7 + 60);
  sub_24E379BD4(v8, &qword_2698DAAC8);
  uint64_t v9 = sub_24E474878();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v11 = (void *)(v3 + *(int *)(v7 + 64));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v11 = a2;
  v11[1] = a3;
  return result;
}

uint64_t Fence.update(id:)(uint64_t a1)
{
  return sub_24E41B0E8(a1, v1);
}

uint64_t static Fence.isAllowed(at:)(double a1, double a2)
{
  if (qword_2698DA690 != -1) {
    swift_once();
  }
  return objc_msgSend((id)qword_2698DC108, sel_containsCoordinate_, a1, a2) ^ 1;
}

uint64_t Fence.ID.encode(to:)(void *a1)
{
  return sub_24E417350(a1, &qword_2698DB9E0, (void (*)(void))sub_24E41B14C);
}

uint64_t Fence.ID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_24E474878();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB9F8);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Fence.ID(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B14C();
  sub_24E475288();
  if (!v2)
  {
    sub_24E412034(&qword_2698DBA00, MEMORY[0x263F07508]);
    sub_24E475068();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_24E40E9C4((uint64_t)v11, v15, type metadata accessor for Fence.ID);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E4135B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.ID.init(from:)(a1, a2);
}

uint64_t sub_24E4135C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24E417BBC(a1, a2, a3, &qword_2698DB9E0, (void (*)(void))sub_24E41B14C);
}

uint64_t Fence.Participant.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA08);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  char v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA10);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA18);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B1A0();
  sub_24E4752A8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24E41B1F4();
    uint64_t v14 = v18;
    sub_24E475088();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24E41B248();
    sub_24E475088();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t Fence.Participant.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA38);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA40);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA48);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B1A0();
  uint64_t v11 = v32;
  sub_24E475288();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_24E475078();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24E474EC8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    *char v22 = &type metadata for Fence.Participant;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24E41B1F4();
    char v18 = v14;
    sub_24E474FC8();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24E41B248();
    sub_24E474FC8();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24E413D00(void *a1)
{
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC020);
  uint64_t v33 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  long long v40 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24E474818();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  long long v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC028);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  long long v36 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC030);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Fence.TriggerPosition.CodingRepresentation(0);
  MEMORY[0x270FA5388](v10);
  char v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC038);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E423000();
  sub_24E4752A8();
  sub_24E40CFA8(v46, (uint64_t)v12, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v18 = v14;
    uint64_t v19 = v13;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = *v12;
      unint64_t v21 = v12[1];
      LOBYTE(v44) = 1;
      sub_24E4230A8();
      char v22 = v36;
      sub_24E475088();
      uint64_t v44 = v20;
      unint64_t v45 = v21;
      sub_24E4231A4();
      uint64_t v23 = v38;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v23);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v19);
      return sub_24E381E08(v20, v21);
    }
    else
    {
      uint64_t v29 = v41;
      uint64_t v28 = v42;
      uint64_t v30 = v39;
      (*(void (**)(char *, uint64_t *, uint64_t))(v41 + 32))(v39, v12, v42);
      LOBYTE(v44) = 2;
      sub_24E423054();
      v31 = v40;
      uint64_t v46 = v19;
      sub_24E475088();
      sub_24E412034(&qword_26B1B8128, MEMORY[0x263F07490]);
      uint64_t v32 = v43;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v16, v46);
    }
  }
  else
  {
    uint64_t v25 = *v12;
    unint64_t v26 = v12[1];
    LOBYTE(v44) = 0;
    sub_24E423150();
    sub_24E475088();
    uint64_t v44 = v25;
    unint64_t v45 = v26;
    sub_24E4231A4();
    uint64_t v27 = v35;
    sub_24E475118();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v27);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return sub_24E381E08(v25, v26);
  }
}

uint64_t sub_24E4142DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBFD8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v3);
  v62 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBFE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v6);
  v61 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBFE8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v9);
  v59 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBFF0);
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Fence.TriggerPosition.CodingRepresentation(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  char v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v47 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v47 - v24;
  uint64_t v26 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_24E423000();
  uint64_t v27 = v66;
  sub_24E475288();
  if (!v27)
  {
    v48 = v23;
    v49 = v20;
    uint64_t v28 = v59;
    uint64_t v29 = v60;
    v50 = v25;
    v51 = v17;
    v31 = v61;
    uint64_t v30 = v62;
    uint64_t v66 = v14;
    uint64_t v32 = v63;
    uint64_t v33 = sub_24E475078();
    if (*(void *)(v33 + 16) == 1)
    {
      if (*(unsigned char *)(v33 + 32))
      {
        if (*(unsigned char *)(v33 + 32) == 1)
        {
          LOBYTE(v65) = 1;
          sub_24E4230A8();
          sub_24E474FC8();
          sub_24E4230FC();
          uint64_t v34 = v54;
          sub_24E475068();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v29);
          uint64_t v35 = v49;
          _OWORD *v49 = v65;
        }
        else
        {
          LOBYTE(v65) = 2;
          sub_24E423054();
          sub_24E474FC8();
          sub_24E474818();
          uint64_t v42 = v30;
          sub_24E412034(&qword_26B1B7C38, MEMORY[0x263F07490]);
          uint64_t v43 = v56;
          sub_24E475068();
          uint64_t v44 = v58;
          (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v29);
          uint64_t v35 = v51;
        }
      }
      else
      {
        LOBYTE(v65) = 0;
        sub_24E423150();
        sub_24E474FC8();
        sub_24E4230FC();
        uint64_t v40 = v52;
        sub_24E475068();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v40);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v29);
        uint64_t v35 = v48;
        _OWORD *v48 = v65;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = (uint64_t)v35;
      uint64_t v46 = (uint64_t)v50;
      sub_24E40E9C4(v45, (uint64_t)v50, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
      sub_24E40E9C4(v46, v32, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
    }
    else
    {
      uint64_t v36 = sub_24E474EC8();
      swift_allocError();
      uint64_t v37 = v13;
      long long v39 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
      *long long v39 = v66;
      sub_24E474FD8();
      sub_24E474EB8();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v36);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v29);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

uint64_t sub_24E414A68@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Fence.Participant.init(from:)(a1, a2);
}

uint64_t sub_24E414A80(void *a1)
{
  return Fence.Participant.encode(to:)(a1);
}

uint64_t sub_24E414A98()
{
  uint64_t v1 = 0x6564697374756FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D72657465646E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656469736E69;
  }
}

uint64_t sub_24E414AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E423F00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E414B20(uint64_t a1)
{
  unint64_t v2 = sub_24E423000();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E414B5C(uint64_t a1)
{
  unint64_t v2 = sub_24E423000();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E414B98(uint64_t a1)
{
  unint64_t v2 = sub_24E423150();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E414BD4(uint64_t a1)
{
  unint64_t v2 = sub_24E423150();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E414C10(uint64_t a1)
{
  unint64_t v2 = sub_24E4230A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E414C4C(uint64_t a1)
{
  unint64_t v2 = sub_24E4230A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E414C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E414D08(uint64_t a1)
{
  unint64_t v2 = sub_24E423054();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E414D44(uint64_t a1)
{
  unint64_t v2 = sub_24E423054();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E414D80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E4142DC(a1, a2);
}

uint64_t sub_24E414D98(void *a1)
{
  return sub_24E413D00(a1);
}

uint64_t Fence.TriggerPosition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for Fence.TriggerPosition.CodingRepresentation(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for Fence.TriggerPosition(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24E475278();
  if (v2)
  {
    uint64_t v19 = (uint64_t)v29;
  }
  else
  {
    uint64_t v25 = v10;
    uint64_t v26 = (uint64_t *)v12;
    uint64_t v14 = v27;
    __swift_project_boxed_opaque_existential_1(v28, v28[3]);
    sub_24E412034(&qword_2698DBA50, (void (*)(uint64_t))type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
    sub_24E475158();
    uint64_t v15 = (uint64_t)v9;
    sub_24E40CFA8((uint64_t)v9, (uint64_t)v7, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      sub_24E40E710((uint64_t)v9, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
      uint64_t v21 = sub_24E474818();
      uint64_t v22 = (uint64_t)v26;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 32))(v26, v7, v21);
      uint64_t v23 = v14;
      uint64_t v19 = (uint64_t)v29;
    }
    else
    {
      uint64_t v16 = *v7;
      unint64_t v17 = v7[1];
      sub_24E382344(0, &qword_2698DA928);
      sub_24E382344(0, &qword_2698DBA58);
      uint64_t v18 = sub_24E474DB8();
      uint64_t v24 = v18;
      uint64_t v19 = (uint64_t)v29;
      if (!v18)
      {
        sub_24E41B2BC();
        swift_allocError();
        swift_willThrow();
        sub_24E381E08(v16, v17);
        sub_24E40E710(v15, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        return __swift_destroy_boxed_opaque_existential_1(v19);
      }
      sub_24E40E710(v15, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
      sub_24E381E08(v16, v17);
      uint64_t v22 = (uint64_t)v26;
      *uint64_t v26 = v24;
      uint64_t v23 = v14;
    }
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    sub_24E40E9C4(v22, v23, type metadata accessor for Fence.TriggerPosition);
  }
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

void Fence.TriggerPosition.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  v19[5] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for Fence.TriggerPosition(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (id *)((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Fence.TriggerPosition.CodingRepresentation(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E40CFA8(v2, (uint64_t)v6, type metadata accessor for Fence.TriggerPosition);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v17 = sub_24E474818();
    (*(void (**)(uint64_t *, void **, uint64_t))(*(void *)(v17 - 8) + 32))(v9, v6, v17);
    goto LABEL_5;
  }
  uint64_t v10 = *v6;
  uint64_t v11 = self;
  v19[0] = 0;
  id v12 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, v19);
  id v13 = v19[0];
  if (v12)
  {
    uint64_t v14 = sub_24E474728();
    uint64_t v16 = v15;

    *uint64_t v9 = v14;
    v9[1] = v16;
LABEL_5:
    swift_storeEnumTagMultiPayload();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_24E475298();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, (uint64_t)v19[3]);
    sub_24E412034(&qword_2698DBA68, (void (*)(uint64_t))type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
    sub_24E475168();
    sub_24E40E710((uint64_t)v9, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return;
  }
  uint64_t v18 = v13;
  sub_24E4746F8();

  swift_willThrow();
}

uint64_t sub_24E415480@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.TriggerPosition.init(from:)(a1, a2);
}

void sub_24E415498(void *a1)
{
}

uint64_t Fence.Variant.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA70);
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA78);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA80);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Fence.Variant(0);
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBA88);
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B360();
  sub_24E4752A8();
  sub_24E40CFA8(v37, (uint64_t)v13, type metadata accessor for Fence.Variant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      char v18 = *v13;
      char v43 = 1;
      sub_24E41B408();
      uint64_t v19 = v39;
      sub_24E475088();
      char v42 = v18;
      sub_24E41B45C();
      uint64_t v20 = v31;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v19);
    }
    else
    {
      uint64_t v24 = (uint64_t)v13;
      uint64_t v25 = v33;
      sub_24E40E9C4(v24, v33, type metadata accessor for Fence.Schedule);
      char v44 = 2;
      sub_24E41B3B4();
      uint64_t v26 = v34;
      uint64_t v27 = v39;
      sub_24E475088();
      sub_24E412034(&qword_2698DBAA0, (void (*)(uint64_t))type metadata accessor for Fence.Schedule);
      uint64_t v28 = v36;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v28);
      sub_24E40E710(v25, type metadata accessor for Fence.Schedule);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v27);
    }
  }
  else
  {
    char v22 = *v13;
    char v41 = 0;
    sub_24E41B4B0();
    uint64_t v23 = v39;
    sub_24E475088();
    char v40 = v22;
    sub_24E41B45C();
    sub_24E475118();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v23);
  }
}

uint64_t Fence.Variant.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBAC0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v3);
  v61 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBAC8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBAD0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  uint64_t v52 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBAD8);
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  id v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Fence.Variant(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v47 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v47 - v24;
  uint64_t v26 = a1[3];
  uint64_t v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_24E41B360();
  uint64_t v27 = v64;
  sub_24E475288();
  if (!v27)
  {
    uint64_t v47 = v23;
    v48 = v20;
    uint64_t v28 = v58;
    uint64_t v29 = v59;
    v49 = v25;
    v50 = v17;
    uint64_t v31 = v60;
    uint64_t v30 = v61;
    uint64_t v64 = v14;
    uint64_t v32 = v62;
    uint64_t v33 = sub_24E475078();
    if (*(void *)(v33 + 16) == 1)
    {
      if (*(unsigned char *)(v33 + 32))
      {
        if (*(unsigned char *)(v33 + 32) == 1)
        {
          char v68 = 1;
          sub_24E41B408();
          sub_24E474FC8();
          sub_24E41B504();
          uint64_t v34 = v53;
          sub_24E475068();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v29);
          uint64_t v35 = v48;
          unsigned char *v48 = v67;
        }
        else
        {
          char v69 = 2;
          sub_24E41B3B4();
          sub_24E474FC8();
          type metadata accessor for Fence.Schedule(0);
          char v42 = v30;
          sub_24E412034(&qword_2698DBAE0, (void (*)(uint64_t))type metadata accessor for Fence.Schedule);
          uint64_t v43 = v55;
          sub_24E475068();
          uint64_t v44 = v57;
          (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v29);
          uint64_t v35 = v50;
        }
      }
      else
      {
        char v66 = 0;
        sub_24E41B4B0();
        sub_24E474FC8();
        sub_24E41B504();
        uint64_t v40 = v51;
        sub_24E475068();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v40);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v29);
        uint64_t v35 = v47;
        *uint64_t v47 = v65;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = (uint64_t)v35;
      uint64_t v46 = (uint64_t)v49;
      sub_24E40E9C4(v45, (uint64_t)v49, type metadata accessor for Fence.Variant);
      sub_24E40E9C4(v46, v32, type metadata accessor for Fence.Variant);
    }
    else
    {
      uint64_t v36 = sub_24E474EC8();
      swift_allocError();
      uint64_t v37 = v13;
      uint64_t v39 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
      *uint64_t v39 = v64;
      sub_24E474FD8();
      sub_24E474EB8();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v36);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v29);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
}

uint64_t sub_24E4161B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.Variant.init(from:)(a1, a2);
}

uint64_t sub_24E4161CC(void *a1)
{
  return Fence.Variant.encode(to:)(a1);
}

uint64_t sub_24E4161E4()
{
  return sub_24E474B98();
}

uint64_t sub_24E416244()
{
  return sub_24E474B68();
}

uint64_t Fence.TimeOfDay.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBAF0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B558();
  sub_24E4752A8();
  char v11 = 0;
  sub_24E475108();
  if (!v2)
  {
    char v10 = 1;
    sub_24E475108();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Fence.TimeOfDay.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B558();
  sub_24E475288();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_24E475058();
    char v13 = 1;
    uint64_t v10 = sub_24E475058();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E41659C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Fence.TimeOfDay.init(from:)(a1, a2);
}

uint64_t sub_24E4165B4(void *a1)
{
  return Fence.TimeOfDay.encode(to:)(a1);
}

uint64_t Fence.Schedule.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B5AC();
  sub_24E4752A8();
  long long v12 = *v3;
  char v11 = 0;
  sub_24E41B600();
  sub_24E475118();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    sub_24E475118();
    LOBYTE(v12) = *((unsigned char *)v3 + 32);
    char v11 = 2;
    sub_24E41B654();
    sub_24E475118();
    type metadata accessor for Fence.Schedule(0);
    LOBYTE(v12) = 3;
    sub_24E4749A8();
    sub_24E412034(&qword_2698DBB28, MEMORY[0x263F079C8]);
    sub_24E475118();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Fence.Schedule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_24E4749A8();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB30);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B5AC();
  uint64_t v22 = v8;
  long long v12 = v23;
  sub_24E475288();
  if (!v12)
  {
    uint64_t v13 = (uint64_t)v11;
    char v25 = 0;
    sub_24E41B6A8();
    uint64_t v14 = v21;
    sub_24E475068();
    *(_OWORD *)uint64_t v13 = v24;
    char v25 = 1;
    sub_24E475068();
    *(_OWORD *)(v13 + 16) = v24;
    char v25 = 2;
    sub_24E41B6FC();
    sub_24E475068();
    *(unsigned char *)(v13 + 32) = v24;
    LOBYTE(v24) = 3;
    sub_24E412034(&qword_2698DBB48, MEMORY[0x263F079C8]);
    uint64_t v23 = v5;
    uint64_t v16 = v22;
    sub_24E475068();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v14);
    uint64_t v17 = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v13 + *(int *)(v9 + 28), v23, v3);
    sub_24E40E9C4(v13, v17, type metadata accessor for Fence.Schedule);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E416BB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.Schedule.init(from:)(a1, a2);
}

uint64_t sub_24E416BD0(void *a1)
{
  return Fence.Schedule.encode(to:)(a1);
}

uint64_t Fence.Trigger.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB50);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB58);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB60);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B750();
  sub_24E4752A8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24E41B7A4();
    uint64_t v14 = v18;
    sub_24E475088();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24E41B7F8();
    sub_24E475088();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t Fence.Trigger.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB80);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB88);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBB90);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B750();
  char v11 = v32;
  sub_24E475288();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_24E475078();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24E474EC8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    *char v22 = &type metadata for Fence.Trigger;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24E41B7A4();
    uint64_t v18 = v14;
    sub_24E474FC8();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24E41B7F8();
    sub_24E474FC8();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24E4172E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Fence.Trigger.init(from:)(a1, a2);
}

uint64_t sub_24E4172FC(void *a1)
{
  return Fence.Trigger.encode(to:)(a1);
}

uint64_t Fence.TriggerID.encode(to:)(void *a1)
{
  return sub_24E417350(a1, &qword_2698DBB98, (void (*)(void))sub_24E41B84C);
}

uint64_t sub_24E417350(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_24E4752A8();
  sub_24E474878();
  sub_24E412034(&qword_2698DB9F0, MEMORY[0x263F07508]);
  sub_24E475118();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Fence.TriggerID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_24E474878();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBA8);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Fence.TriggerID(0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B84C();
  sub_24E475288();
  if (!v2)
  {
    sub_24E412034(&qword_2698DBA00, MEMORY[0x263F07508]);
    sub_24E475068();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_24E40E9C4((uint64_t)v11, v15, type metadata accessor for Fence.TriggerID);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E417764(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC060);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *(unsigned char *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E423484();
  sub_24E4752A8();
  v10[15] = 0;
  sub_24E4750E8();
  if (!v2)
  {
    v10[14] = 1;
    sub_24E4750E8();
    v10[13] = 2;
    sub_24E4750E8();
    v10[12] = v8;
    v10[11] = 3;
    sub_24E42352C();
    sub_24E475118();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24E417948@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC048);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E423484();
  sub_24E475288();
  if (!v2)
  {
    v17[15] = 0;
    sub_24E475038();
    uint64_t v10 = v9;
    v17[14] = 1;
    sub_24E475038();
    uint64_t v12 = v11;
    v17[13] = 2;
    sub_24E475038();
    uint64_t v15 = v14;
    v17[11] = 3;
    sub_24E4234D8();
    sub_24E475068();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    char v16 = v17[12];
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v15;
    *(unsigned char *)(a2 + 24) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E417B68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.TriggerID.init(from:)(a1, a2);
}

uint64_t sub_24E417B80(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24E417BBC(a1, a2, a3, &qword_2698DBB98, (void (*)(void))sub_24E41B84C);
}

uint64_t sub_24E417BBC(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_24E4752A8();
  sub_24E474878();
  sub_24E412034(&qword_2698DB9F0, MEMORY[0x263F07508]);
  sub_24E475118();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24E417D3C()
{
  uint64_t result = 0x656475746974616CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      uint64_t result = 0x737569646172;
      break;
    case 3:
      uint64_t result = 0x656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E417DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E424068(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E417DF0(uint64_t a1)
{
  unint64_t v2 = sub_24E423484();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E417E2C(uint64_t a1)
{
  unint64_t v2 = sub_24E423484();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E417E68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E417948(a1, a2);
}

uint64_t sub_24E417E80(void *a1)
{
  return sub_24E417764(a1);
}

uint64_t Fence.MonitorRegion.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E475278();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_24E41B8C0();
    sub_24E475158();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *(_OWORD *)a2 = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Fence.MonitorRegion.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E475298();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_24E41B914();
  sub_24E475168();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_24E418058@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.MonitorRegion.init(from:)(a1, a2);
}

uint64_t sub_24E418070(void *a1)
{
  return Fence.MonitorRegion.encode(to:)(a1);
}

uint64_t Fence.MonitorRegion.Source.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBC0);
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x270FA5388](v3);
  v49 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBC8);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBD0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBD8);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBE0);
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBE8);
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  MEMORY[0x270FA5388](v13);
  char v34 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBF0);
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  char v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBBF8);
  uint64_t v31 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC00);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v52 = v20;
  uint64_t v53 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41B968();
  sub_24E4752A8();
  switch(v24)
  {
    case 1:
      char v55 = 1;
      sub_24E41BBB4();
      uint64_t v25 = v52;
      sub_24E475088();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v25);
    case 2:
      char v56 = 2;
      sub_24E41BB60();
      uint64_t v26 = v34;
      uint64_t v25 = v52;
      sub_24E475088();
      uint64_t v28 = v35;
      uint64_t v27 = v36;
      goto LABEL_10;
    case 3:
      char v57 = 3;
      sub_24E41BB0C();
      uint64_t v26 = v37;
      uint64_t v25 = v52;
      sub_24E475088();
      uint64_t v28 = v38;
      uint64_t v27 = v39;
      goto LABEL_10;
    case 4:
      char v58 = 4;
      sub_24E41BAB8();
      uint64_t v26 = v40;
      uint64_t v25 = v52;
      sub_24E475088();
      uint64_t v28 = v41;
      uint64_t v27 = v42;
      goto LABEL_10;
    case 5:
      char v59 = 5;
      sub_24E41BA64();
      uint64_t v26 = v43;
      uint64_t v25 = v52;
      sub_24E475088();
      uint64_t v28 = v44;
      uint64_t v27 = v45;
      goto LABEL_10;
    case 6:
      char v60 = 6;
      sub_24E41BA10();
      uint64_t v26 = v46;
      uint64_t v25 = v52;
      sub_24E475088();
      uint64_t v28 = v47;
      uint64_t v27 = v48;
      goto LABEL_10;
    case 7:
      char v61 = 7;
      sub_24E41B9BC();
      uint64_t v26 = v49;
      uint64_t v25 = v52;
      sub_24E475088();
      uint64_t v28 = v50;
      uint64_t v27 = v51;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
      break;
    default:
      char v54 = 0;
      sub_24E41BC08();
      uint64_t v25 = v52;
      sub_24E475088();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v17);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v25);
}

uint64_t Fence.MonitorRegion.Source.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC50);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  char v65 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC58);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  char v61 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC60);
  uint64_t v56 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v64 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC68);
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC70);
  uint64_t v52 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  char v60 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC78);
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x270FA5388](v10);
  char v59 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC80);
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC88);
  uint64_t v46 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC90);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  char v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24E41B968();
  uint64_t v23 = v67;
  sub_24E475288();
  if (v23) {
    goto LABEL_6;
  }
  uint64_t v43 = v17;
  uint64_t v42 = v15;
  uint64_t v25 = v63;
  uint64_t v24 = v64;
  uint64_t v26 = v65;
  uint64_t v67 = v19;
  uint64_t v27 = v21;
  uint64_t v28 = sub_24E475078();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v31 = sub_24E474EC8();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    void *v33 = &type metadata for Fence.MonitorRegion.Source;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v18);
LABEL_6:
    uint64_t v34 = (uint64_t)v66;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  char v29 = *(unsigned char *)(v28 + 32);
  switch(v29)
  {
    case 1:
      char v69 = 1;
      sub_24E41BBB4();
      sub_24E474FC8();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
      break;
    case 2:
      char v70 = 2;
      sub_24E41BB60();
      uint64_t v36 = v59;
      sub_24E474FC8();
      uint64_t v38 = v50;
      uint64_t v37 = v51;
      goto LABEL_12;
    case 3:
      char v71 = 3;
      sub_24E41BB0C();
      uint64_t v39 = v60;
      sub_24E474FC8();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v47);
      break;
    case 4:
      char v72 = 4;
      sub_24E41BAB8();
      uint64_t v36 = v25;
      sub_24E474FC8();
      uint64_t v38 = v54;
      uint64_t v37 = v55;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
      break;
    case 5:
      char v73 = 5;
      sub_24E41BA64();
      sub_24E474FC8();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v53);
      break;
    case 6:
      char v74 = 6;
      sub_24E41BA10();
      uint64_t v40 = v61;
      sub_24E474FC8();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v45);
      break;
    case 7:
      char v75 = 7;
      sub_24E41B9BC();
      sub_24E474FC8();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
      break;
    default:
      char v68 = 0;
      sub_24E41BC08();
      uint64_t v30 = v43;
      sub_24E474FC8();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v42);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v18);
  uint64_t v34 = (uint64_t)v66;
  unsigned char *v62 = v29;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

uint64_t sub_24E419128@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Fence.MonitorRegion.Source.init(from:)(a1, a2);
}

uint64_t sub_24E419140(void *a1)
{
  return Fence.MonitorRegion.Source.encode(to:)(a1);
}

uint64_t Fence.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBC98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E41BC5C();
  sub_24E4752A8();
  LOBYTE(v23) = 0;
  type metadata accessor for Fence.ID(0);
  sub_24E412034(&qword_2698DBCA8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
  sub_24E475118();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = (int *)type metadata accessor for Fence(0);
  LOBYTE(v23) = 1;
  sub_24E4750C8();
  LOBYTE(v23) = *(unsigned char *)(v3 + v9[6]);
  LOBYTE(v36) = 2;
  sub_24E41BCB0();
  sub_24E475118();
  LOBYTE(v23) = *(unsigned char *)(v3 + v9[7]);
  LOBYTE(v36) = 3;
  sub_24E475118();
  LOBYTE(v23) = 4;
  type metadata accessor for Fence.Variant(0);
  sub_24E412034(&qword_2698DBCB8, (void (*)(uint64_t))type metadata accessor for Fence.Variant);
  sub_24E475118();
  LOBYTE(v23) = *(unsigned char *)(v3 + v9[9]);
  LOBYTE(v36) = 5;
  sub_24E41BD04();
  sub_24E475118();
  uint64_t v10 = (long long *)(v3 + v9[10]);
  uint64_t v11 = *((void *)v10 + 2);
  char v12 = *((unsigned char *)v10 + 24);
  long long v36 = *v10;
  uint64_t v37 = v11;
  char v38 = v12;
  char v35 = 6;
  sub_24E41BD58();
  sub_24E475118();
  uint64_t v13 = (long long *)(v3 + v9[11]);
  long long v14 = v13[9];
  long long v31 = v13[8];
  long long v32 = v14;
  long long v15 = v13[11];
  long long v33 = v13[10];
  long long v34 = v15;
  long long v16 = v13[5];
  long long v27 = v13[4];
  long long v28 = v16;
  long long v17 = v13[7];
  long long v29 = v13[6];
  long long v30 = v17;
  long long v18 = v13[1];
  long long v23 = *v13;
  long long v24 = v18;
  long long v19 = v13[3];
  long long v25 = v13[2];
  long long v26 = v19;
  char v22 = 7;
  sub_24E41BDAC();
  sub_24E475118();
  *(void *)&long long v23 = *(void *)(v3 + v9[12]);
  char v22 = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBCD8);
  sub_24E41BFA4(&qword_2698DBCE0, (void (*)(void))sub_24E41BE00);
  sub_24E475118();
  uint64_t v39 = v6;
  LOBYTE(v23) = 9;
  sub_24E474818();
  sub_24E412034(&qword_26B1B8128, MEMORY[0x263F07490]);
  sub_24E4750B8();
  LOBYTE(v23) = 10;
  sub_24E475118();
  LOBYTE(v23) = 11;
  sub_24E474878();
  sub_24E412034(&qword_2698DB9F0, MEMORY[0x263F07508]);
  sub_24E4750B8();
  LOBYTE(v23) = 12;
  sub_24E475098();
  LOBYTE(v23) = 13;
  sub_24E4750D8();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v8, v5);
}

uint64_t Fence.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E474818();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v56 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for Fence.Variant(0);
  MEMORY[0x270FA5388](v57);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Fence.ID(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v58 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBCF0);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  long long v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Fence(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 52)];
  uint64_t v59 = v6;
  uint64_t v21 = *(void (**)(void))(v6 + 56);
  uint64_t v68 = v20;
  uint64_t v61 = v5;
  v21();
  uint64_t v22 = (uint64_t)&v19[*(int *)(v16 + 60)];
  uint64_t v23 = sub_24E474878();
  long long v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v67 = v22;
  v24(v22, 1, 1, v23);
  v85 = (int *)v16;
  uint64_t v25 = *(int *)(v16 + 64);
  char v69 = v19;
  long long v26 = &v19[v25];
  *(void *)long long v26 = 0;
  *((void *)v26 + 1) = 0;
  char v66 = v26;
  uint64_t v27 = a1[3];
  uint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_24E41BC5C();
  uint64_t v63 = v15;
  uint64_t v28 = v65;
  sub_24E475288();
  if (v28)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    sub_24E379BD4(v68, &qword_26B1B86A0);
    sub_24E379BD4(v67, &qword_2698DAAC8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v65 = v23;
    LOBYTE(v73) = 0;
    sub_24E412034(&qword_2698DBCF8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
    uint64_t v29 = (uint64_t)v58;
    sub_24E475068();
    uint64_t v30 = (uint64_t)v69;
    sub_24E40E9C4(v29, (uint64_t)v69, type metadata accessor for Fence.ID);
    LOBYTE(v73) = 1;
    uint64_t v31 = sub_24E475018();
    long long v32 = v85;
    long long v33 = (uint64_t *)(v30 + v85[5]);
    uint64_t *v33 = v31;
    v33[1] = v34;
    LOBYTE(v71) = 2;
    sub_24E41BE54();
    sub_24E475068();
    *(unsigned char *)(v30 + v32[6]) = v73;
    LOBYTE(v71) = 3;
    sub_24E475068();
    *(unsigned char *)(v30 + v32[7]) = v73;
    LOBYTE(v73) = 4;
    sub_24E412034(&qword_2698DBD08, (void (*)(uint64_t))type metadata accessor for Fence.Variant);
    sub_24E475068();
    sub_24E40E9C4((uint64_t)v11, v30 + v32[8], type metadata accessor for Fence.Variant);
    LOBYTE(v71) = 5;
    sub_24E41BEA8();
    sub_24E475068();
    *(unsigned char *)(v30 + v32[9]) = v73;
    LOBYTE(v71) = 6;
    sub_24E41BEFC();
    sub_24E475068();
    uint64_t v35 = v74;
    char v36 = BYTE8(v74);
    uint64_t v37 = v30 + v32[10];
    *(_OWORD *)uint64_t v37 = v73;
    *(void *)(v37 + 16) = v35;
    *(unsigned char *)(v37 + 24) = v36;
    char v72 = 7;
    sub_24E41BF50();
    sub_24E475068();
    char v38 = (_OWORD *)(v30 + v32[11]);
    long long v39 = v82;
    long long v40 = v83;
    long long v41 = v80;
    v38[8] = v81;
    v38[9] = v39;
    long long v42 = v84;
    v38[10] = v40;
    v38[11] = v42;
    long long v43 = v78;
    v38[4] = v77;
    v38[5] = v43;
    v38[6] = v79;
    v38[7] = v41;
    long long v44 = v74;
    *char v38 = v73;
    v38[1] = v44;
    long long v45 = v76;
    v38[2] = v75;
    v38[3] = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DBCD8);
    char v70 = 8;
    sub_24E41BFA4(&qword_2698DBD28, (void (*)(void))sub_24E41C014);
    sub_24E475068();
    *(void *)(v30 + v32[12]) = v71;
    LOBYTE(v71) = 9;
    sub_24E412034(&qword_26B1B7C38, MEMORY[0x263F07490]);
    sub_24E475008();
    sub_24E3A392C(v56, v68, &qword_26B1B86A0);
    LOBYTE(v71) = 10;
    sub_24E475068();
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v69[v85[14]], v55, v61);
    LOBYTE(v71) = 11;
    sub_24E412034(&qword_2698DBA00, MEMORY[0x263F07508]);
    sub_24E475008();
    sub_24E3A392C(v54, v67, &qword_2698DAAC8);
    LOBYTE(v71) = 12;
    uint64_t v46 = sub_24E474FE8();
    uint64_t v48 = v47;
    uint64_t v49 = (uint64_t *)v66;
    swift_bridgeObjectRelease();
    uint64_t *v49 = v46;
    v49[1] = v48;
    LOBYTE(v71) = 13;
    LOBYTE(v46) = sub_24E475028();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v62);
    char v50 = v46 & 1;
    uint64_t v51 = (uint64_t)v69;
    v69[v85[17]] = v50;
    sub_24E40CFA8(v51, v53, type metadata accessor for Fence);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    return sub_24E40E710(v51, type metadata accessor for Fence);
  }
}

uint64_t sub_24E41A560@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Fence.init(from:)(a1, a2);
}

uint64_t sub_24E41A578(void *a1)
{
  return Fence.encode(to:)(a1);
}

void *sub_24E41A590(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BC8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E42206C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E41A6A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC078);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8B88) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24E474F48();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8B88) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E421F10(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_24E41A910(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E41AA84(a1, a2, a3, a4, &qword_2698DC070, (uint64_t (*)(void))type metadata accessor for Friend, (uint64_t (*)(void))type metadata accessor for Friend);
}

void *sub_24E41A934(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BC0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4]) {
          memmove(v12, a4 + 4, 176 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E422160(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E41AA60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E41AA84(a1, a2, a3, a4, &qword_2698DC080, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_24E41AA84(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24E474F48();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E423580(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t _s12FindMyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    BOOL v3 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v3 && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
    {
      type metadata accessor for Fence.Schedule(0);
      JUMPOUT(0x25333ABF0);
    }
  }
  return 0;
}

uint64_t _s12FindMyLocate5FenceV7VariantO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Fence.Variant(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v26 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC088);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  size_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v20 = &v19[*(int *)(v17 + 56)];
  sub_24E40CFA8(a1, (uint64_t)v19, type metadata accessor for Fence.Variant);
  sub_24E40CFA8(a2, (uint64_t)v20, type metadata accessor for Fence.Variant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24E40CFA8((uint64_t)v19, (uint64_t)v15, type metadata accessor for Fence.Variant);
    if (!swift_getEnumCaseMultiPayload())
    {
      char v22 = *v15;
      goto LABEL_7;
    }
LABEL_11:
    sub_24E379BD4((uint64_t)v19, &qword_2698DC088);
    char MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 = 0;
    return MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_24E40CFA8((uint64_t)v19, (uint64_t)v10, type metadata accessor for Fence.Variant);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24E40E9C4((uint64_t)v20, (uint64_t)v6, type metadata accessor for Fence.Schedule);
      char MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 = _s12FindMyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v6);
      sub_24E40E710((uint64_t)v6, type metadata accessor for Fence.Schedule);
      sub_24E40E710((uint64_t)v10, type metadata accessor for Fence.Schedule);
      sub_24E40E710((uint64_t)v19, type metadata accessor for Fence.Variant);
      return MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 & 1;
    }
    sub_24E40E710((uint64_t)v10, type metadata accessor for Fence.Schedule);
    goto LABEL_11;
  }
  sub_24E40CFA8((uint64_t)v19, (uint64_t)v13, type metadata accessor for Fence.Variant);
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_11;
  }
  char v22 = *v13;
LABEL_7:
  char v23 = v22 ^ *v20;
  sub_24E40E710((uint64_t)v19, type metadata accessor for Fence.Variant);
  char MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 = v23 ^ 1;
  return MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 & 1;
}

uint64_t type metadata accessor for Fence.TriggerPosition(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_26B1B84D8);
}

uint64_t sub_24E41B0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Fence.ID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E41B14C()
{
  unint64_t result = qword_2698DB9E8;
  if (!qword_2698DB9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DB9E8);
  }
  return result;
}

unint64_t sub_24E41B1A0()
{
  unint64_t result = qword_2698DBA20;
  if (!qword_2698DBA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBA20);
  }
  return result;
}

unint64_t sub_24E41B1F4()
{
  unint64_t result = qword_2698DBA28;
  if (!qword_2698DBA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBA28);
  }
  return result;
}

unint64_t sub_24E41B248()
{
  unint64_t result = qword_2698DBA30;
  if (!qword_2698DBA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBA30);
  }
  return result;
}

uint64_t type metadata accessor for Fence.TriggerPosition.CodingRepresentation(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_2698DBDA0);
}

unint64_t sub_24E41B2BC()
{
  unint64_t result = qword_2698DBA60;
  if (!qword_2698DBA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBA60);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_24E41B360()
{
  unint64_t result = qword_2698DBA90;
  if (!qword_2698DBA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBA90);
  }
  return result;
}

unint64_t sub_24E41B3B4()
{
  unint64_t result = qword_2698DBA98;
  if (!qword_2698DBA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBA98);
  }
  return result;
}

unint64_t sub_24E41B408()
{
  unint64_t result = qword_2698DBAA8;
  if (!qword_2698DBAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBAA8);
  }
  return result;
}

unint64_t sub_24E41B45C()
{
  unint64_t result = qword_2698DBAB0;
  if (!qword_2698DBAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBAB0);
  }
  return result;
}

unint64_t sub_24E41B4B0()
{
  unint64_t result = qword_2698DBAB8;
  if (!qword_2698DBAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBAB8);
  }
  return result;
}

unint64_t sub_24E41B504()
{
  unint64_t result = qword_2698DBAE8;
  if (!qword_2698DBAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBAE8);
  }
  return result;
}

unint64_t sub_24E41B558()
{
  unint64_t result = qword_2698DBAF8;
  if (!qword_2698DBAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBAF8);
  }
  return result;
}

unint64_t sub_24E41B5AC()
{
  unint64_t result = qword_2698DBB10;
  if (!qword_2698DBB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB10);
  }
  return result;
}

unint64_t sub_24E41B600()
{
  unint64_t result = qword_2698DBB18;
  if (!qword_2698DBB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB18);
  }
  return result;
}

unint64_t sub_24E41B654()
{
  unint64_t result = qword_2698DBB20;
  if (!qword_2698DBB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB20);
  }
  return result;
}

unint64_t sub_24E41B6A8()
{
  unint64_t result = qword_2698DBB38;
  if (!qword_2698DBB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB38);
  }
  return result;
}

unint64_t sub_24E41B6FC()
{
  unint64_t result = qword_2698DBB40;
  if (!qword_2698DBB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB40);
  }
  return result;
}

unint64_t sub_24E41B750()
{
  unint64_t result = qword_2698DBB68;
  if (!qword_2698DBB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB68);
  }
  return result;
}

unint64_t sub_24E41B7A4()
{
  unint64_t result = qword_2698DBB70;
  if (!qword_2698DBB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB70);
  }
  return result;
}

unint64_t sub_24E41B7F8()
{
  unint64_t result = qword_2698DBB78;
  if (!qword_2698DBB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBB78);
  }
  return result;
}

unint64_t sub_24E41B84C()
{
  unint64_t result = qword_2698DBBA0;
  if (!qword_2698DBBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBBA0);
  }
  return result;
}

uint64_t type metadata accessor for Fence.TriggerID(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_26B1B8508);
}

unint64_t sub_24E41B8C0()
{
  unint64_t result = qword_2698DBBB0;
  if (!qword_2698DBBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBBB0);
  }
  return result;
}

unint64_t sub_24E41B914()
{
  unint64_t result = qword_2698DBBB8;
  if (!qword_2698DBBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBBB8);
  }
  return result;
}

unint64_t sub_24E41B968()
{
  unint64_t result = qword_2698DBC08;
  if (!qword_2698DBC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC08);
  }
  return result;
}

unint64_t sub_24E41B9BC()
{
  unint64_t result = qword_2698DBC10;
  if (!qword_2698DBC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC10);
  }
  return result;
}

unint64_t sub_24E41BA10()
{
  unint64_t result = qword_2698DBC18;
  if (!qword_2698DBC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC18);
  }
  return result;
}

unint64_t sub_24E41BA64()
{
  unint64_t result = qword_2698DBC20;
  if (!qword_2698DBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC20);
  }
  return result;
}

unint64_t sub_24E41BAB8()
{
  unint64_t result = qword_2698DBC28;
  if (!qword_2698DBC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC28);
  }
  return result;
}

unint64_t sub_24E41BB0C()
{
  unint64_t result = qword_2698DBC30;
  if (!qword_2698DBC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC30);
  }
  return result;
}

unint64_t sub_24E41BB60()
{
  unint64_t result = qword_2698DBC38;
  if (!qword_2698DBC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC38);
  }
  return result;
}

unint64_t sub_24E41BBB4()
{
  unint64_t result = qword_2698DBC40;
  if (!qword_2698DBC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC40);
  }
  return result;
}

unint64_t sub_24E41BC08()
{
  unint64_t result = qword_2698DBC48;
  if (!qword_2698DBC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBC48);
  }
  return result;
}

unint64_t sub_24E41BC5C()
{
  unint64_t result = qword_2698DBCA0;
  if (!qword_2698DBCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBCA0);
  }
  return result;
}

unint64_t sub_24E41BCB0()
{
  unint64_t result = qword_2698DBCB0;
  if (!qword_2698DBCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBCB0);
  }
  return result;
}

unint64_t sub_24E41BD04()
{
  unint64_t result = qword_2698DBCC0;
  if (!qword_2698DBCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBCC0);
  }
  return result;
}

unint64_t sub_24E41BD58()
{
  unint64_t result = qword_2698DBCC8;
  if (!qword_2698DBCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBCC8);
  }
  return result;
}

unint64_t sub_24E41BDAC()
{
  unint64_t result = qword_2698DBCD0;
  if (!qword_2698DBCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBCD0);
  }
  return result;
}

unint64_t sub_24E41BE00()
{
  unint64_t result = qword_2698DBCE8;
  if (!qword_2698DBCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBCE8);
  }
  return result;
}

unint64_t sub_24E41BE54()
{
  unint64_t result = qword_2698DBD00;
  if (!qword_2698DBD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD00);
  }
  return result;
}

unint64_t sub_24E41BEA8()
{
  unint64_t result = qword_2698DBD10;
  if (!qword_2698DBD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD10);
  }
  return result;
}

unint64_t sub_24E41BEFC()
{
  unint64_t result = qword_2698DBD18;
  if (!qword_2698DBD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD18);
  }
  return result;
}

unint64_t sub_24E41BF50()
{
  unint64_t result = qword_2698DBD20;
  if (!qword_2698DBD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD20);
  }
  return result;
}

uint64_t sub_24E41BFA4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698DBCD8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E41C014()
{
  unint64_t result = qword_2698DBD30;
  if (!qword_2698DBD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD30);
  }
  return result;
}

uint64_t sub_24E41C068()
{
  return sub_24E412034(&qword_2698DBD38, (void (*)(uint64_t))type metadata accessor for Fence.ID);
}

uint64_t sub_24E41C0B0()
{
  return sub_24E412034(&qword_2698DBD40, (void (*)(uint64_t))type metadata accessor for Fence.TriggerID);
}

unint64_t sub_24E41C0FC()
{
  unint64_t result = qword_2698DBD48;
  if (!qword_2698DBD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD48);
  }
  return result;
}

unint64_t sub_24E41C154()
{
  unint64_t result = qword_2698DBD50;
  if (!qword_2698DBD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD50);
  }
  return result;
}

uint64_t sub_24E41C1A8()
{
  return sub_24E412034(&qword_2698DBD58, (void (*)(uint64_t))type metadata accessor for Fence.Variant);
}

unint64_t sub_24E41C1F4()
{
  unint64_t result = qword_2698DBD60;
  if (!qword_2698DBD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD60);
  }
  return result;
}

unint64_t sub_24E41C24C()
{
  unint64_t result = qword_2698DBD68;
  if (!qword_2698DBD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD68);
  }
  return result;
}

unint64_t sub_24E41C2A4()
{
  unint64_t result = qword_2698DBD70;
  if (!qword_2698DBD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD70);
  }
  return result;
}

unint64_t sub_24E41C2FC()
{
  unint64_t result = qword_2698DBD78;
  if (!qword_2698DBD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD78);
  }
  return result;
}

unint64_t sub_24E41C354()
{
  unint64_t result = qword_2698DBD80;
  if (!qword_2698DBD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD80);
  }
  return result;
}

unint64_t sub_24E41C3AC()
{
  unint64_t result = qword_2698DBD88;
  if (!qword_2698DBD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD88);
  }
  return result;
}

unint64_t sub_24E41C404()
{
  unint64_t result = qword_2698DBD90;
  if (!qword_2698DBD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBD90);
  }
  return result;
}

uint64_t sub_24E41C458()
{
  return sub_24E412034(&qword_2698DBD98, (void (*)(uint64_t))type metadata accessor for Fence.Schedule);
}

char *initializeBufferWithCopyOfBuffer for Fence(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    long long v24 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24E474878();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v61(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    a1[v10] = a2[v10];
    uint64_t v14 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = type metadata accessor for Fence.Variant(0);
    swift_bridgeObjectRetain();
    uint64_t v65 = v8;
    uint64_t v66 = v7;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v18 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v18;
      v15[32] = v16[32];
      uint64_t v19 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      BOOL v20 = &v15[v19];
      uint64_t v21 = &v16[v19];
      uint64_t v22 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    uint64_t v25 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 9) = *(_OWORD *)(v27 + 9);
    uint64_t v28 = a3[11];
    uint64_t v29 = a3[12];
    uint64_t v30 = &a1[v28];
    uint64_t v31 = &a2[v28];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = *((void *)v31 + 3);
    *((void *)v30 + 2) = *((void *)v31 + 2);
    *((void *)v30 + 3) = v33;
    uint64_t v34 = *((void *)v31 + 5);
    *((void *)v30 + 4) = *((void *)v31 + 4);
    *((void *)v30 + 5) = v34;
    uint64_t v35 = *((void *)v31 + 7);
    *((void *)v30 + 6) = *((void *)v31 + 6);
    *((void *)v30 + 7) = v35;
    uint64_t v36 = *((void *)v31 + 9);
    *((void *)v30 + 8) = *((void *)v31 + 8);
    *((void *)v30 + 9) = v36;
    uint64_t v37 = *((void *)v31 + 11);
    *((void *)v30 + 10) = *((void *)v31 + 10);
    *((void *)v30 + 11) = v37;
    uint64_t v38 = *((void *)v31 + 13);
    *((void *)v30 + 12) = *((void *)v31 + 12);
    *((void *)v30 + 13) = v38;
    uint64_t v39 = *((void *)v31 + 15);
    *((void *)v30 + 14) = *((void *)v31 + 14);
    *((void *)v30 + 15) = v39;
    uint64_t v40 = *((void *)v31 + 17);
    *((void *)v30 + 16) = *((void *)v31 + 16);
    *((void *)v30 + 17) = v40;
    uint64_t v41 = *((void *)v31 + 19);
    *((void *)v30 + 18) = *((void *)v31 + 18);
    *((void *)v30 + 19) = v41;
    uint64_t v42 = *((void *)v31 + 21);
    *((void *)v30 + 20) = *((void *)v31 + 20);
    *((void *)v30 + 21) = v42;
    uint64_t v43 = *((void *)v31 + 22);
    uint64_t v44 = *((void *)v31 + 23);
    uint64_t v45 = *(void *)&a2[v29];
    *((void *)v30 + 22) = v43;
    *((void *)v30 + 23) = v44;
    *(void *)&a1[v29] = v45;
    uint64_t v67 = a3;
    uint64_t v46 = a3[13];
    __dst = &a1[v46];
    uint64_t v68 = a2;
    uint64_t v62 = &a2[v46];
    uint64_t v47 = sub_24E474818();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63(v62, 1, v47))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(__dst, v62, *(void *)(*(void *)(v49 - 8) + 64));
      char v50 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    }
    else
    {
      char v50 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
      v50(__dst, v62, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
    }
    long long v24 = a1;
    v50(&a1[v67[14]], &v68[v67[14]], v47);
    uint64_t v51 = v67[15];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &v68[v51];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(&v68[v51], 1, v66))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      v61(v52, v53, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v52, 0, 1, v66);
    }
    uint64_t v55 = v67[16];
    uint64_t v56 = v67[17];
    uint64_t v57 = &a1[v55];
    uint64_t v58 = &v68[v55];
    uint64_t v59 = *((void *)v58 + 1);
    *(void *)uint64_t v57 = *(void *)v58;
    *((void *)v57 + 1) = v59;
    a1[v56] = v68[v56];
    swift_bridgeObjectRetain();
  }
  return v24;
}

uint64_t destroy for Fence(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24E474878();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[8];
  type metadata accessor for Fence.Variant(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v8 = v7 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v9 = sub_24E4749A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[13];
  uint64_t v11 = sub_24E474818();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  if (!v13) {
    v14(v10, v11);
  }
  v14(a1 + a2[14], v11);
  uint64_t v15 = a1 + a2[15];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4)) {
    v6(v15, v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24E474878();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v58(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  uint64_t v16 = type metadata accessor for Fence.Variant(0);
  swift_bridgeObjectRetain();
  uint64_t v62 = v7;
  uint64_t v63 = v6;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v17 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v17;
    *((unsigned char *)v14 + 32) = *((unsigned char *)v15 + 32);
    uint64_t v18 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v19 = (char *)v14 + v18;
    BOOL v20 = (char *)v15 + v18;
    uint64_t v21 = sub_24E4749A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v22 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v23 = (_OWORD *)(a1 + v22);
  long long v24 = (_OWORD *)(a2 + v22);
  *uint64_t v23 = *v24;
  *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)((char *)v24 + 9);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = v28[3];
  v27[2] = v28[2];
  v27[3] = v30;
  uint64_t v31 = v28[5];
  v27[4] = v28[4];
  v27[5] = v31;
  uint64_t v32 = v28[7];
  v27[6] = v28[6];
  v27[7] = v32;
  uint64_t v33 = v28[9];
  v27[8] = v28[8];
  v27[9] = v33;
  uint64_t v34 = v28[11];
  v27[10] = v28[10];
  v27[11] = v34;
  uint64_t v35 = v28[13];
  v27[12] = v28[12];
  v27[13] = v35;
  uint64_t v36 = v28[15];
  v27[14] = v28[14];
  v27[15] = v36;
  uint64_t v37 = v28[17];
  v27[16] = v28[16];
  v27[17] = v37;
  uint64_t v38 = v28[19];
  v27[18] = v28[18];
  v27[19] = v38;
  uint64_t v39 = v28[21];
  v27[20] = v28[20];
  v27[21] = v39;
  uint64_t v40 = v28[22];
  uint64_t v41 = v28[23];
  uint64_t v42 = *(void *)(a2 + v26);
  v27[22] = v40;
  v27[23] = v41;
  *(void *)(a1 + v26) = v42;
  uint64_t v64 = a3;
  uint64_t v43 = a3[13];
  __dst = (void *)(a1 + v43);
  uint64_t v65 = a2;
  uint64_t v59 = (const void *)(a2 + v43);
  uint64_t v44 = sub_24E474818();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v59, 1, v44))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(__dst, v59, *(void *)(*(void *)(v46 - 8) + 64));
    uint64_t v47 = *(void (**)(void *, const void *, uint64_t))(v45 + 16);
  }
  else
  {
    uint64_t v47 = *(void (**)(void *, const void *, uint64_t))(v45 + 16);
    v47(__dst, v59, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
  }
  v47((void *)(a1 + v64[14]), (const void *)(v65 + v64[14]), v44);
  uint64_t v48 = v64[15];
  uint64_t v49 = (void *)(a1 + v48);
  char v50 = (const void *)(v65 + v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v65 + v48, 1, v63))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v58((uint64_t)v49, (uint64_t)v50, v63);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v49, 0, 1, v63);
  }
  uint64_t v52 = v64[16];
  uint64_t v53 = v64[17];
  uint64_t v54 = (void *)(a1 + v52);
  uint64_t v55 = (void *)(v65 + v52);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(v65 + v53);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24E474878();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v45(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[8];
    uint64_t v12 = (_OWORD *)(a1 + v11);
    uint64_t v13 = (_OWORD *)(a2 + v11);
    sub_24E40E710(a1 + v11, type metadata accessor for Fence.Variant);
    uint64_t v14 = type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      *((unsigned char *)v12 + 32) = *((unsigned char *)v13 + 32);
      uint64_t v15 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      uint64_t v16 = (char *)v12 + v15;
      long long v17 = (char *)v13 + v15;
      uint64_t v18 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v46 = v7;
  uint64_t v47 = v6;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(unsigned char *)(v20 + 24) = *(unsigned char *)(v21 + 24);
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  long long v24 = (void *)(a2 + v22);
  *uint64_t v23 = *(void *)(a2 + v22);
  v23[1] = *(void *)(a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[2] = v24[2];
  v23[3] = v24[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[4] = v24[4];
  v23[5] = v24[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[6] = v24[6];
  v23[7] = v24[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[8] = v24[8];
  v23[9] = v24[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[10] = v24[10];
  v23[11] = v24[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[12] = v24[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[13] = v24[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[14] = v24[14];
  v23[15] = v24[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[16] = v24[16];
  v23[17] = v24[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[18] = v24[18];
  v23[19] = v24[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[20] = v24[20];
  v23[21] = v24[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[22] = v24[22];
  v23[23] = v24[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[13];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = sub_24E474818();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
LABEL_10:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v26, v27, v28);
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))(a1 + a3[14], a2 + a3[14], v28);
  uint64_t v34 = a3[15];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  int v38 = v37(a1 + v34, 1, v47);
  int v39 = v37((uint64_t)v36, 1, v47);
  if (!v38)
  {
    if (!v39)
    {
      v45((uint64_t)v35, (uint64_t)v36, v47);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v35, v47);
    goto LABEL_16;
  }
  if (v39)
  {
LABEL_16:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v35, v36, v47);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v35, 0, 1, v47);
LABEL_17:
  uint64_t v41 = a3[16];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24E474878();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v46(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Fence.Variant(0);
  uint64_t v47 = v7;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v13 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v13;
    *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
    uint64_t v14 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v15 = (char *)v10 + v14;
    uint64_t v16 = (char *)v11 + v14;
    uint64_t v17 = sub_24E4749A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v18 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v20 + 9);
  _OWORD *v19 = *v20;
  uint64_t v21 = a3[11];
  uint64_t v22 = a3[12];
  uint64_t v23 = (_OWORD *)(a1 + v21);
  long long v24 = (_OWORD *)(a2 + v21);
  long long v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  long long v26 = v24[3];
  v23[2] = v24[2];
  v23[3] = v26;
  long long v27 = v24[7];
  v23[6] = v24[6];
  v23[7] = v27;
  long long v28 = v24[5];
  v23[4] = v24[4];
  v23[5] = v28;
  long long v29 = v24[11];
  v23[10] = v24[10];
  v23[11] = v29;
  long long v31 = v24[8];
  long long v30 = v24[9];
  uint64_t v32 = *(void *)(a2 + v22);
  v23[8] = v31;
  v23[9] = v30;
  *(void *)(a1 + v22) = v32;
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  uint64_t v36 = sub_24E474818();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(a1 + a3[14], a2 + a3[14], v36);
  }
  else
  {
    int v39 = *(void (**)(void *, const void *, uint64_t))(v37 + 32);
    v39(v34, v35, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    v39((void *)(a1 + a3[14]), (const void *)(a2 + a3[14]), v36);
  }
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(a2 + v40, 1, v6))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    v46((uint64_t)v41, (uint64_t)v42, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v41, 0, 1, v6);
  }
  uint64_t v44 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  return a1;
}

uint64_t assignWithTake for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24E474878();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v62(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[8];
    uint64_t v15 = (_OWORD *)(a1 + v14);
    uint64_t v16 = (_OWORD *)(a2 + v14);
    sub_24E40E710(a1 + v14, type metadata accessor for Fence.Variant);
    uint64_t v17 = type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v18 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v18;
      *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
      uint64_t v19 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      uint64_t v20 = (char *)v15 + v19;
      uint64_t v21 = (char *)v16 + v19;
      uint64_t v22 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  uint64_t v63 = v7;
  uint64_t v64 = v6;
  uint64_t v23 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(unsigned char *)(v24 + 24) = *(unsigned char *)(v25 + 24);
  uint64_t v26 = a3[11];
  long long v27 = (void *)(a1 + v26);
  long long v28 = (void *)(a2 + v26);
  uint64_t v29 = *(void *)(a2 + v26 + 8);
  *long long v27 = *(void *)(a2 + v26);
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = v28[3];
  v27[2] = v28[2];
  v27[3] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v28[5];
  v27[4] = v28[4];
  v27[5] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v28[7];
  v27[6] = v28[6];
  v27[7] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = v28[9];
  v27[8] = v28[8];
  v27[9] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = v28[11];
  v27[10] = v28[10];
  v27[11] = v34;
  swift_bridgeObjectRelease();
  v27[12] = v28[12];
  swift_bridgeObjectRelease();
  v27[13] = v28[13];
  swift_bridgeObjectRelease();
  uint64_t v35 = v28[15];
  v27[14] = v28[14];
  v27[15] = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = v28[17];
  v27[16] = v28[16];
  v27[17] = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = v28[19];
  v27[18] = v28[18];
  v27[19] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = v28[21];
  v27[20] = v28[20];
  v27[21] = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = v28[23];
  v27[22] = v28[22];
  v27[23] = v39;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[13];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = sub_24E474818();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
LABEL_10:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v41, v42, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40))(a1 + a3[14], a2 + a3[14], v43);
  uint64_t v49 = a3[15];
  char v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  int v53 = v52(a1 + v49, 1, v64);
  int v54 = v52((uint64_t)v51, 1, v64);
  if (!v53)
  {
    if (!v54)
    {
      v62((uint64_t)v50, (uint64_t)v51, v64);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v50, v64);
    goto LABEL_16;
  }
  if (v54)
  {
LABEL_16:
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, const void *, uint64_t))(v63 + 32))(v50, v51, v64);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v50, 0, 1, v64);
LABEL_17:
  uint64_t v56 = a3[16];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  *uint64_t v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E41E0E4);
}

uint64_t sub_24E41E0E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Fence.ID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = type metadata accessor for Fence.Variant(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[8];
LABEL_13:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_14;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[13];
    goto LABEL_13;
  }
  uint64_t v17 = sub_24E474818();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[14];
    goto LABEL_13;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[15];
  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for Fence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E41E31C);
}

uint64_t sub_24E41E31C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for Fence.ID(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for Fence.Variant(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[8];
LABEL_11:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_11;
  }
  uint64_t v17 = sub_24E474818();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_11;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[15];
  return v19(v21, a2, a2, v20);
}

void sub_24E41E540()
{
  sub_24E474878();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Fence.Variant(319);
    if (v1 <= 0x3F)
    {
      sub_24E41E740(319, (unint64_t *)&qword_26B1BA080, MEMORY[0x263F07490]);
      if (v2 <= 0x3F)
      {
        sub_24E474818();
        if (v3 <= 0x3F)
        {
          sub_24E41E740(319, &qword_26B1B8388, MEMORY[0x263F07508]);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_24E41E740(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24E474DD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for Fence.ID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm);
}

uint64_t storeEnumTagSinglePayload for Fence.ID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm);
}

uint64_t _s12FindMyLocate5FenceV2IDVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s12FindMyLocate5FenceV2IDVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_24E474878();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s12FindMyLocate5FenceV2IDVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s12FindMyLocate5FenceV2IDVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s12FindMyLocate5FenceV2IDVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s12FindMyLocate5FenceV2IDVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fence.TriggerID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E41EA54);
}

uint64_t __swift_get_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Fence.TriggerID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E41EAD8);
}

uint64_t __swift_store_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24E41EB4C()
{
  uint64_t result = sub_24E474878();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus()
{
  return &type metadata for Fence.AcceptanceStatus;
}

ValueMetadata *type metadata accessor for Fence.Trigger()
{
  return &type metadata for Fence.Trigger;
}

_OWORD *initializeBufferWithCopyOfBuffer for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (_OWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v8 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for Fence.Variant(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v4 = sub_24E4749A8();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

_OWORD *initializeWithCopy for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24E4749A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithCopy for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E40E710((uint64_t)a1, type metadata accessor for Fence.Variant);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v6 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *initializeWithTake for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24E4749A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E40E710((uint64_t)a1, type metadata accessor for Fence.Variant);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24E41F178()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24E41F188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E41F580(a1, a2, a3, (uint64_t)&unk_24E482920, type metadata accessor for Fence.Schedule);
}

char *initializeBufferWithCopyOfBuffer for Fence.TriggerPosition(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v9 = sub_24E474818();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      long long v6 = *a2;
      *(void *)a1 = *a2;
      uint64_t v7 = v6;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for Fence.TriggerPosition(void **a1)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_24E474818();
    int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v3 = *a1;
  }
}

void **initializeWithCopy for Fence.TriggerPosition(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_24E474818();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    uint64_t v4 = *a2;
    *a1 = *a2;
    id v5 = v4;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for Fence.TriggerPosition(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_24E40E710((uint64_t)a1, type metadata accessor for Fence.TriggerPosition);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_24E474818();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v4 = *a2;
      *a1 = *a2;
      id v5 = v4;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for Fence.TriggerPosition(void *a1, const void *a2, uint64_t a3)
{
  return sub_24E4204A8(a1, a2, a3, type metadata accessor for Fence.TriggerPosition);
}

uint64_t sub_24E41F55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E41F580(a1, a2, a3, MEMORY[0x263F8CF48] + 64, MEMORY[0x263F07490]);
}

uint64_t sub_24E41F580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion()
{
  return &type metadata for Fence.MonitorRegion;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source()
{
  return &type metadata for Fence.MonitorRegion.Source;
}

ValueMetadata *type metadata accessor for Fence.Participant()
{
  return &type metadata for Fence.Participant;
}

ValueMetadata *type metadata accessor for Fence.DaysOfWeek()
{
  return &type metadata for Fence.DaysOfWeek;
}

ValueMetadata *type metadata accessor for Fence.TimeOfDay()
{
  return &type metadata for Fence.TimeOfDay;
}

void *initializeBufferWithCopyOfBuffer for Fence.Schedule(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_24E4749A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for Fence.Schedule(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_24E4749A8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E41F9FC);
}

uint64_t sub_24E41F9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_24E4749A8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E41FA80);
}

uint64_t sub_24E41FA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_24E4749A8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_24E41FAF4()
{
  uint64_t result = sub_24E4749A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Fence.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Fence.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E41FCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.CodingKeys()
{
  return &type metadata for Fence.CodingKeys;
}

unsigned char *_s12FindMyLocate5FenceV13MonitorRegionV6SourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E41FDFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.CodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.UnknownCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.CurrentLocationCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.CurrentLocationCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.FriendLocationCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.FriendLocationCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.LabelledLocationCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.LabelledLocationCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.AddressBookCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.AddressBookCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.CustomCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.CustomCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.DroppedPinCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.DroppedPinCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source.ToolCodingKeys()
{
  return &type metadata for Fence.MonitorRegion.Source.ToolCodingKeys;
}

uint64_t _s12FindMyLocate5FenceV13MonitorRegionVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 8;
  int v5 = v3 - 8;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s12FindMyLocate5FenceV13MonitorRegionVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 7;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.CodingRepresentation()
{
  return &type metadata for Fence.MonitorRegion.CodingRepresentation;
}

ValueMetadata *type metadata accessor for Fence.TriggerID.CodingKeys()
{
  return &type metadata for Fence.TriggerID.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Trigger.CodingKeys()
{
  return &type metadata for Fence.Trigger.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Trigger.ArrivingCodingKeys()
{
  return &type metadata for Fence.Trigger.ArrivingCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Trigger.LeavingCodingKeys()
{
  return &type metadata for Fence.Trigger.LeavingCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Schedule.CodingKeys()
{
  return &type metadata for Fence.Schedule.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.TimeOfDay.CodingKeys()
{
  return &type metadata for Fence.TimeOfDay.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Variant.CodingKeys()
{
  return &type metadata for Fence.Variant.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Variant.OneTimeCodingKeys()
{
  return &type metadata for Fence.Variant.OneTimeCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Variant.RecurringCodingKeys()
{
  return &type metadata for Fence.Variant.RecurringCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Variant.ScheduledCodingKeys()
{
  return &type metadata for Fence.Variant.ScheduledCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.TriggerPosition.UnarchivingError()
{
  return &type metadata for Fence.TriggerPosition.UnarchivingError;
}

uint64_t *sub_24E420010(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v9 = sub_24E474818();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      uint64_t v7 = *a2;
      unint64_t v6 = a2[1];
      sub_24E393234(v7, v6);
      *a1 = v7;
      a1[1] = v6;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24E420144(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v5 = sub_24E474818();
    unint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(a1, v5);
  }
  else if (result <= 1)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = a1[1];
    return sub_24E381E08(v3, v4);
  }
  return result;
}

uint64_t *sub_24E4201EC(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_24E474818();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    uint64_t v5 = *a2;
    unint64_t v4 = a2[1];
    sub_24E393234(v5, v4);
    *a1 = v5;
    a1[1] = v4;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_24E4202D0(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_24E40E710((uint64_t)a1, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_24E474818();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v5 = *a2;
      unint64_t v4 = a2[1];
      sub_24E393234(v5, v4);
      *a1 = v5;
      a1[1] = v4;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s12FindMyLocate5FenceV15TriggerPositionOwtk_0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_24E474818();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_24E420490(void *a1, const void *a2, uint64_t a3)
{
  return sub_24E4204A8(a1, a2, a3, type metadata accessor for Fence.TriggerPosition.CodingRepresentation);
}

void *sub_24E4204A8(void *a1, const void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a1 != a2)
  {
    sub_24E40E710((uint64_t)a1, a4);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_24E474818();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s10FenceErrorOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s10FenceErrorOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24E4205C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E41F580(a1, a2, a3, (uint64_t)&unk_24E482C78, MEMORY[0x263F07490]);
}

unsigned char *_s12FindMyLocate5FenceV11ParticipantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4206B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.Participant.CodingKeys()
{
  return &type metadata for Fence.Participant.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Participant.MeCodingKeys()
{
  return &type metadata for Fence.Participant.MeCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.Participant.OtherCodingKeys()
{
  return &type metadata for Fence.Participant.OtherCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.ID.CodingKeys()
{
  return &type metadata for Fence.ID.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.CodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.PendingHiddenCodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.PendingHiddenCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.PendingCodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.PendingCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.AcceptedCodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.AcceptedCodingKeys;
}

unint64_t sub_24E42075C()
{
  unint64_t result = qword_2698DBDB0;
  if (!qword_2698DBDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDB0);
  }
  return result;
}

unint64_t sub_24E4207B4()
{
  unint64_t result = qword_2698DBDB8;
  if (!qword_2698DBDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDB8);
  }
  return result;
}

unint64_t sub_24E42080C()
{
  unint64_t result = qword_2698DBDC0;
  if (!qword_2698DBDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDC0);
  }
  return result;
}

unint64_t sub_24E420864()
{
  unint64_t result = qword_2698DBDC8;
  if (!qword_2698DBDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDC8);
  }
  return result;
}

unint64_t sub_24E4208BC()
{
  unint64_t result = qword_2698DBDD0;
  if (!qword_2698DBDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDD0);
  }
  return result;
}

unint64_t sub_24E420914()
{
  unint64_t result = qword_2698DBDD8;
  if (!qword_2698DBDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDD8);
  }
  return result;
}

unint64_t sub_24E42096C()
{
  unint64_t result = qword_2698DBDE0;
  if (!qword_2698DBDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDE0);
  }
  return result;
}

unint64_t sub_24E4209C4()
{
  unint64_t result = qword_2698DBDE8;
  if (!qword_2698DBDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDE8);
  }
  return result;
}

unint64_t sub_24E420A1C()
{
  unint64_t result = qword_2698DBDF0;
  if (!qword_2698DBDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDF0);
  }
  return result;
}

unint64_t sub_24E420A74()
{
  unint64_t result = qword_2698DBDF8;
  if (!qword_2698DBDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBDF8);
  }
  return result;
}

unint64_t sub_24E420ACC()
{
  unint64_t result = qword_2698DBE00;
  if (!qword_2698DBE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE00);
  }
  return result;
}

unint64_t sub_24E420B24()
{
  unint64_t result = qword_2698DBE08;
  if (!qword_2698DBE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE08);
  }
  return result;
}

unint64_t sub_24E420B7C()
{
  unint64_t result = qword_2698DBE10;
  if (!qword_2698DBE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE10);
  }
  return result;
}

unint64_t sub_24E420BD4()
{
  unint64_t result = qword_2698DBE18;
  if (!qword_2698DBE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE18);
  }
  return result;
}

unint64_t sub_24E420C2C()
{
  unint64_t result = qword_2698DBE20;
  if (!qword_2698DBE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE20);
  }
  return result;
}

unint64_t sub_24E420C84()
{
  unint64_t result = qword_2698DBE28;
  if (!qword_2698DBE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE28);
  }
  return result;
}

unint64_t sub_24E420CDC()
{
  unint64_t result = qword_2698DBE30;
  if (!qword_2698DBE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE30);
  }
  return result;
}

unint64_t sub_24E420D34()
{
  unint64_t result = qword_2698DBE38;
  if (!qword_2698DBE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE38);
  }
  return result;
}

unint64_t sub_24E420D8C()
{
  unint64_t result = qword_2698DBE40;
  if (!qword_2698DBE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE40);
  }
  return result;
}

unint64_t sub_24E420DE4()
{
  unint64_t result = qword_2698DBE48;
  if (!qword_2698DBE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE48);
  }
  return result;
}

unint64_t sub_24E420E3C()
{
  unint64_t result = qword_2698DBE50;
  if (!qword_2698DBE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE50);
  }
  return result;
}

unint64_t sub_24E420E94()
{
  unint64_t result = qword_2698DBE58;
  if (!qword_2698DBE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE58);
  }
  return result;
}

unint64_t sub_24E420EEC()
{
  unint64_t result = qword_2698DBE60;
  if (!qword_2698DBE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE60);
  }
  return result;
}

unint64_t sub_24E420F44()
{
  unint64_t result = qword_2698DBE68;
  if (!qword_2698DBE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE68);
  }
  return result;
}

unint64_t sub_24E420F9C()
{
  unint64_t result = qword_2698DBE70;
  if (!qword_2698DBE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE70);
  }
  return result;
}

unint64_t sub_24E420FF4()
{
  unint64_t result = qword_2698DBE78;
  if (!qword_2698DBE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE78);
  }
  return result;
}

unint64_t sub_24E42104C()
{
  unint64_t result = qword_2698DBE80;
  if (!qword_2698DBE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE80);
  }
  return result;
}

unint64_t sub_24E4210A4()
{
  unint64_t result = qword_2698DBE88;
  if (!qword_2698DBE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE88);
  }
  return result;
}

unint64_t sub_24E4210FC()
{
  unint64_t result = qword_2698DBE90;
  if (!qword_2698DBE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE90);
  }
  return result;
}

unint64_t sub_24E421154()
{
  unint64_t result = qword_2698DBE98;
  if (!qword_2698DBE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBE98);
  }
  return result;
}

unint64_t sub_24E4211AC()
{
  unint64_t result = qword_2698DBEA0;
  if (!qword_2698DBEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEA0);
  }
  return result;
}

unint64_t sub_24E421204()
{
  unint64_t result = qword_2698DBEA8;
  if (!qword_2698DBEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEA8);
  }
  return result;
}

unint64_t sub_24E42125C()
{
  unint64_t result = qword_2698DBEB0;
  if (!qword_2698DBEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEB0);
  }
  return result;
}

unint64_t sub_24E4212B4()
{
  unint64_t result = qword_2698DBEB8;
  if (!qword_2698DBEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEB8);
  }
  return result;
}

unint64_t sub_24E42130C()
{
  unint64_t result = qword_2698DBEC0;
  if (!qword_2698DBEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEC0);
  }
  return result;
}

unint64_t sub_24E421364()
{
  unint64_t result = qword_2698DBEC8;
  if (!qword_2698DBEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEC8);
  }
  return result;
}

unint64_t sub_24E4213BC()
{
  unint64_t result = qword_2698DBED0;
  if (!qword_2698DBED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBED0);
  }
  return result;
}

unint64_t sub_24E421414()
{
  unint64_t result = qword_2698DBED8;
  if (!qword_2698DBED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBED8);
  }
  return result;
}

unint64_t sub_24E42146C()
{
  unint64_t result = qword_2698DBEE0;
  if (!qword_2698DBEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEE0);
  }
  return result;
}

unint64_t sub_24E4214C4()
{
  unint64_t result = qword_2698DBEE8;
  if (!qword_2698DBEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEE8);
  }
  return result;
}

unint64_t sub_24E42151C()
{
  unint64_t result = qword_2698DBEF0;
  if (!qword_2698DBEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEF0);
  }
  return result;
}

unint64_t sub_24E421574()
{
  unint64_t result = qword_2698DBEF8;
  if (!qword_2698DBEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBEF8);
  }
  return result;
}

unint64_t sub_24E4215CC()
{
  unint64_t result = qword_2698DBF00;
  if (!qword_2698DBF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF00);
  }
  return result;
}

unint64_t sub_24E421624()
{
  unint64_t result = qword_2698DBF08;
  if (!qword_2698DBF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF08);
  }
  return result;
}

unint64_t sub_24E42167C()
{
  unint64_t result = qword_2698DBF10;
  if (!qword_2698DBF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF10);
  }
  return result;
}

unint64_t sub_24E4216D4()
{
  unint64_t result = qword_2698DBF18;
  if (!qword_2698DBF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF18);
  }
  return result;
}

unint64_t sub_24E42172C()
{
  unint64_t result = qword_2698DBF20;
  if (!qword_2698DBF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF20);
  }
  return result;
}

unint64_t sub_24E421784()
{
  unint64_t result = qword_2698DBF28;
  if (!qword_2698DBF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF28);
  }
  return result;
}

unint64_t sub_24E4217DC()
{
  unint64_t result = qword_2698DBF30;
  if (!qword_2698DBF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF30);
  }
  return result;
}

unint64_t sub_24E421834()
{
  unint64_t result = qword_2698DBF38;
  if (!qword_2698DBF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF38);
  }
  return result;
}

unint64_t sub_24E42188C()
{
  unint64_t result = qword_2698DBF40;
  if (!qword_2698DBF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF40);
  }
  return result;
}

unint64_t sub_24E4218E4()
{
  unint64_t result = qword_2698DBF48;
  if (!qword_2698DBF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF48);
  }
  return result;
}

unint64_t sub_24E42193C()
{
  unint64_t result = qword_2698DBF50;
  if (!qword_2698DBF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF50);
  }
  return result;
}

unint64_t sub_24E421994()
{
  unint64_t result = qword_2698DBF58;
  if (!qword_2698DBF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF58);
  }
  return result;
}

unint64_t sub_24E4219EC()
{
  unint64_t result = qword_2698DBF60;
  if (!qword_2698DBF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF60);
  }
  return result;
}

unint64_t sub_24E421A44()
{
  unint64_t result = qword_2698DBF68;
  if (!qword_2698DBF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF68);
  }
  return result;
}

unint64_t sub_24E421A9C()
{
  unint64_t result = qword_2698DBF70;
  if (!qword_2698DBF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF70);
  }
  return result;
}

unint64_t sub_24E421AF4()
{
  unint64_t result = qword_2698DBF78;
  if (!qword_2698DBF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF78);
  }
  return result;
}

unint64_t sub_24E421B4C()
{
  unint64_t result = qword_2698DBF80;
  if (!qword_2698DBF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF80);
  }
  return result;
}

unint64_t sub_24E421BA4()
{
  unint64_t result = qword_2698DBF88;
  if (!qword_2698DBF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF88);
  }
  return result;
}

unint64_t sub_24E421BFC()
{
  unint64_t result = qword_2698DBF90;
  if (!qword_2698DBF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF90);
  }
  return result;
}

unint64_t sub_24E421C54()
{
  unint64_t result = qword_2698DBF98;
  if (!qword_2698DBF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBF98);
  }
  return result;
}

unint64_t sub_24E421CAC()
{
  unint64_t result = qword_2698DBFA0;
  if (!qword_2698DBFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFA0);
  }
  return result;
}

unint64_t sub_24E421D04()
{
  unint64_t result = qword_2698DBFA8;
  if (!qword_2698DBFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFA8);
  }
  return result;
}

unint64_t sub_24E421D5C()
{
  unint64_t result = qword_2698DBFB0;
  if (!qword_2698DBFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFB0);
  }
  return result;
}

unint64_t sub_24E421DB4()
{
  unint64_t result = qword_2698DBFB8;
  if (!qword_2698DBFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFB8);
  }
  return result;
}

unint64_t sub_24E421E0C()
{
  unint64_t result = qword_2698DBFC0;
  if (!qword_2698DBFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFC0);
  }
  return result;
}

unint64_t sub_24E421E64()
{
  unint64_t result = qword_2698DBFC8;
  if (!qword_2698DBFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFC8);
  }
  return result;
}

unint64_t sub_24E421EBC()
{
  unint64_t result = qword_2698DBFD0;
  if (!qword_2698DBFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFD0);
  }
  return result;
}

uint64_t sub_24E421F10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8B88) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

uint64_t sub_24E42206C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

uint64_t sub_24E422160(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 176 * a1 + 32;
    unint64_t v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

uint64_t sub_24E422254(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4264657461657263 && a2 == 0xE900000000000079 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E6966 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E6169726176 && a2 == 0xE700000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E477BF0 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72616D6563616C70 && a2 == 0xE90000000000006BLL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73726568746FLL && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x44646E456574756DLL && a2 == 0xEB00000000657461 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4164657461647075 && a2 == 0xE900000000000074 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024E477C10 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024E477C30 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024E477C50)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_24E4227B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x48676E69646E6570 && a2 == 0xED00006E65646469;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E6570 && a2 == 0xE700000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24E422934(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E697669727261 && a2 == 0xE800000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697661656CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E422A28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D6954656E6FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69727275636572 && a2 == 0xE900000000000067 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24E422B94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C746E6572727563 && a2 == 0xEF6E6F697461636FLL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F4C646E65697266 && a2 == 0xEE006E6F69746163 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E477BD0 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4273736572646461 && a2 == 0xEB000000006B6F6FLL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x50646570706F7264 && a2 == 0xEA00000000006E69 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1819242356 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_24E422F2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25965 && a2 == 0xE200000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24E423000()
{
  unint64_t result = qword_2698DBFF8;
  if (!qword_2698DBFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DBFF8);
  }
  return result;
}

unint64_t sub_24E423054()
{
  unint64_t result = qword_2698DC000;
  if (!qword_2698DC000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC000);
  }
  return result;
}

unint64_t sub_24E4230A8()
{
  unint64_t result = qword_2698DC008;
  if (!qword_2698DC008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC008);
  }
  return result;
}

unint64_t sub_24E4230FC()
{
  unint64_t result = qword_2698DC010;
  if (!qword_2698DC010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC010);
  }
  return result;
}

unint64_t sub_24E423150()
{
  unint64_t result = qword_2698DC018;
  if (!qword_2698DC018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC018);
  }
  return result;
}

unint64_t sub_24E4231A4()
{
  unint64_t result = qword_2698DC040;
  if (!qword_2698DC040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC040);
  }
  return result;
}

uint64_t sub_24E4231F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1920298856 && a2 == 0xE400000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574756E696DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E4232D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6557664F73796164 && a2 == 0xEA00000000006B65 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_24E423484()
{
  unint64_t result = qword_2698DC050;
  if (!qword_2698DC050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC050);
  }
  return result;
}

unint64_t sub_24E4234D8()
{
  unint64_t result = qword_2698DC058;
  if (!qword_2698DC058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC058);
  }
  return result;
}

unint64_t sub_24E42352C()
{
  unint64_t result = qword_2698DC068;
  if (!qword_2698DC068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC068);
  }
  return result;
}

uint64_t sub_24E423580(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

unsigned char *_s12FindMyLocate5FenceV8ScheduleV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4237A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.CodingRepresentation.CodingKeys()
{
  return &type metadata for Fence.MonitorRegion.CodingRepresentation.CodingKeys;
}

unsigned char *_s12FindMyLocate5FenceV16AcceptanceStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4238ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.TriggerPosition.CodingRepresentation.CodingKeys()
{
  return &type metadata for Fence.TriggerPosition.CodingRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.TriggerPosition.CodingRepresentation.InsideCodingKeys()
{
  return &type metadata for Fence.TriggerPosition.CodingRepresentation.InsideCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.TriggerPosition.CodingRepresentation.OutsideCodingKeys()
{
  return &type metadata for Fence.TriggerPosition.CodingRepresentation.OutsideCodingKeys;
}

unsigned char *_s12FindMyLocate5FenceV9TriggerIDV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E4239A0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.TriggerPosition.CodingRepresentation.UndeterminedCodingKeys()
{
  return &type metadata for Fence.TriggerPosition.CodingRepresentation.UndeterminedCodingKeys;
}

unint64_t sub_24E4239DC()
{
  unint64_t result = qword_2698DC090;
  if (!qword_2698DC090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC090);
  }
  return result;
}

unint64_t sub_24E423A34()
{
  unint64_t result = qword_2698DC098;
  if (!qword_2698DC098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC098);
  }
  return result;
}

unint64_t sub_24E423A8C()
{
  unint64_t result = qword_2698DC0A0;
  if (!qword_2698DC0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0A0);
  }
  return result;
}

unint64_t sub_24E423AE4()
{
  unint64_t result = qword_2698DC0A8;
  if (!qword_2698DC0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0A8);
  }
  return result;
}

unint64_t sub_24E423B3C()
{
  unint64_t result = qword_2698DC0B0;
  if (!qword_2698DC0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0B0);
  }
  return result;
}

unint64_t sub_24E423B94()
{
  unint64_t result = qword_2698DC0B8;
  if (!qword_2698DC0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0B8);
  }
  return result;
}

unint64_t sub_24E423BEC()
{
  unint64_t result = qword_2698DC0C0;
  if (!qword_2698DC0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0C0);
  }
  return result;
}

unint64_t sub_24E423C44()
{
  unint64_t result = qword_2698DC0C8;
  if (!qword_2698DC0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0C8);
  }
  return result;
}

unint64_t sub_24E423C9C()
{
  unint64_t result = qword_2698DC0D0;
  if (!qword_2698DC0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0D0);
  }
  return result;
}

unint64_t sub_24E423CF4()
{
  unint64_t result = qword_2698DC0D8;
  if (!qword_2698DC0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0D8);
  }
  return result;
}

unint64_t sub_24E423D4C()
{
  unint64_t result = qword_2698DC0E0;
  if (!qword_2698DC0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0E0);
  }
  return result;
}

unint64_t sub_24E423DA4()
{
  unint64_t result = qword_2698DC0E8;
  if (!qword_2698DC0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0E8);
  }
  return result;
}

unint64_t sub_24E423DFC()
{
  unint64_t result = qword_2698DC0F0;
  if (!qword_2698DC0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0F0);
  }
  return result;
}

unint64_t sub_24E423E54()
{
  unint64_t result = qword_2698DC0F8;
  if (!qword_2698DC0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC0F8);
  }
  return result;
}

unint64_t sub_24E423EAC()
{
  unint64_t result = qword_2698DC100;
  if (!qword_2698DC100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC100);
  }
  return result;
}

uint64_t sub_24E423F00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656469736E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564697374756FLL && a2 == 0xE700000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D72657465646E75 && a2 == 0xEC00000064656E69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24E424068(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id sub_24E424244()
{
  id result = sub_24E424264();
  qword_2698DC108 = (uint64_t)result;
  return result;
}

id sub_24E424264()
{
  uint64_t v9 = &unk_2700447E0;
  uint64_t v10 = &unk_270044150;
  uint64_t v11 = &unk_270044360;
  unint64_t v12 = &unk_270044570;
  unint64_t v13 = &unk_270044690;
  uint64_t v14 = &unk_2700446C0;
  uint64_t v15 = &unk_2700446F0;
  uint64_t v16 = &unk_270044720;
  uint64_t v17 = &unk_270044750;
  uint64_t v18 = &unk_270044780;
  uint64_t v19 = &unk_2700447B0;
  uint64_t v20 = &unk_270044180;
  uint64_t v21 = &unk_2700441B0;
  uint64_t v22 = &unk_2700441E0;
  uint64_t v23 = &unk_270044210;
  uint64_t v24 = &unk_270044240;
  uint64_t v25 = &unk_270044270;
  uint64_t v26 = &unk_2700442A0;
  long long v27 = &unk_2700442D0;
  long long v28 = &unk_270044300;
  uint64_t v29 = &unk_270044330;
  uint64_t v30 = &unk_270044390;
  uint64_t v31 = &unk_2700443C0;
  uint64_t v32 = &unk_2700443F0;
  uint64_t v33 = &unk_270044420;
  uint64_t v34 = &unk_270044450;
  uint64_t v35 = &unk_270044480;
  uint64_t v36 = &unk_2700444B0;
  uint64_t v37 = &unk_2700444E0;
  uint64_t v38 = &unk_270044510;
  uint64_t v39 = &unk_270044540;
  uint64_t v40 = &unk_2700445A0;
  uint64_t v41 = &unk_2700445D0;
  uint64_t v42 = &unk_270044600;
  uint64_t v43 = &unk_270044630;
  uint64_t v44 = &unk_270044660;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F41B10]), sel_init);
  if (result)
  {
    unint64_t v1 = result;
    uint64_t v7 = MEMORY[0x263F8EE78];
    id result = (id)sub_24E474F08();
    for (uint64_t i = 32; i != 320; i += 8)
    {
      uint64_t v3 = *(void *)&v8[i];
      if (*(void *)(v3 + 16) < 2uLL)
      {
        __break(1u);
        goto LABEL_10;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F417B8]), sel_initWithLatitude_longitude_, *(double *)(v3 + 40), *(double *)(v3 + 32));
      sub_24E474EE8();
      sub_24E474F18();
      sub_24E474F28();
      id result = (id)sub_24E474EF8();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC110);
    swift_arrayDestroy();
    uint64_t v4 = *(void *)(v7 + 16);
    if (v4)
    {
      uint64_t v5 = (uint64_t *)(v7 + 32);
      do
      {
        uint64_t v6 = *v5++;
        objc_msgSend(v1, sel_addVertex_, v6);
        --v4;
      }
      while (v4);
    }
    swift_release();
    return v1;
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

unint64_t sub_24E424530(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1BA030);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EC8);
  uint64_t v6 = sub_24E474F98();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24E381E60(v12, (uint64_t)v5, &qword_26B1BA030);
    unint64_t result = sub_24E3847C0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24E474878();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8828);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E424768(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7B60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (long long *)((char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB008);
  uint64_t v6 = sub_24E474F98();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v33[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24E381E60(v12, (uint64_t)v5, &qword_26B1B7B60);
    long long v14 = v5[9];
    long long v42 = v5[8];
    long long v43 = v14;
    long long v44 = v5[10];
    long long v15 = v5[5];
    long long v38 = v5[4];
    long long v39 = v15;
    long long v16 = v5[7];
    long long v40 = v5[6];
    long long v41 = v16;
    long long v17 = v5[1];
    long long v34 = *v5;
    long long v18 = v5[2];
    long long v37 = v5[3];
    long long v35 = v17;
    long long v36 = v18;
    unint64_t result = sub_24E384858((uint64_t)&v34);
    if (v20) {
      break;
    }
    unint64_t v21 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v22 = (_OWORD *)(v7[6] + 176 * result);
    long long v23 = v43;
    v22[8] = v42;
    v22[9] = v23;
    v22[10] = v44;
    long long v24 = v39;
    v22[4] = v38;
    v22[5] = v24;
    long long v25 = v41;
    v22[6] = v40;
    v22[7] = v25;
    long long v26 = v35;
    *BOOL v22 = v34;
    v22[1] = v26;
    long long v27 = v37;
    v22[2] = v36;
    v22[3] = v27;
    uint64_t v28 = v7[7];
    uint64_t v29 = type metadata accessor for Location();
    unint64_t result = sub_24E425438(v9, v28 + *(void *)(*(void *)(v29 - 8) + 72) * v21);
    uint64_t v30 = v7[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_11;
    }
    v7[2] = v32;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E4249C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC158);
  uint64_t v2 = sub_24E474F98();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24E381E60(v6, (uint64_t)&v15, &qword_2698DC160);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24E384748(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24E425678(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E424AF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC140);
  uint64_t v2 = (void *)sub_24E474F98();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24E384748(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E424C0C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7ED0);
  uint64_t v2 = sub_24E474F98();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24E381E60(v6, (uint64_t)v17, &qword_2698DC148);
    unsigned __int8 v7 = v17[0];
    uint64_t v8 = v18;
    uint64_t v9 = v19;
    uint64_t v10 = v20;
    unint64_t result = sub_24E38494C(v17[0], v18, v19, v20);
    if (v12) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v13 = v3[6] + 32 * result;
    *(unsigned char *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(void *)(v13 + 16) = v9;
    *(void *)(v13 + 24) = v10;
    unint64_t result = sub_24E3C2AB8((uint64_t)&v21, v3[7] + 8 * result);
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v3[2] = v16;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t Fence.Error.description.getter()
{
  unint64_t result = 0x206E776F6E6B6E55;
  switch(*v0)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000022;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000031;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t static Fence.Error.errorDomain.getter()
{
  return 0xD000000000000029;
}

uint64_t Fence.Error.errorCode.getter()
{
  return *v0 + 1000;
}

uint64_t Fence.Error.rawValue.getter()
{
  return *v0 + 1000;
}

unint64_t Fence.Error.errorUserInfo.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC118);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E47E930;
  *(void *)(inited + 32) = sub_24E474A88();
  *(void *)(inited + 40) = v1;
  unint64_t v2 = Fence.Error.description.getter();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  return sub_24E4249C0(inited);
}

uint64_t Fence.Error.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = result + 24;
  if ((unint64_t)(result - 1000) >= 0xC) {
    char v2 = 12;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_24E424FB4()
{
  unint64_t result = qword_2698DC120;
  if (!qword_2698DC120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC120);
  }
  return result;
}

uint64_t sub_24E425008()
{
  return sub_24E475268();
}

uint64_t sub_24E425050()
{
  return sub_24E475238();
}

uint64_t sub_24E425080()
{
  return sub_24E475268();
}

uint64_t sub_24E4250C4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return Fence.Error.init(rawValue:)(*a1, a2);
}

void sub_24E4250CC(void *a1@<X8>)
{
  *a1 = *v1 + 1000;
}

uint64_t sub_24E4250DC(uint64_t a1)
{
  unint64_t v2 = sub_24E42533C();
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24E425118(uint64_t a1)
{
  unint64_t v2 = sub_24E42533C();
  unint64_t v3 = sub_24E425390();
  unint64_t v4 = sub_24E4253E4();
  return MEMORY[0x270EF2658](a1, v2, v3, v4);
}

unint64_t sub_24E42517C()
{
  return 0xD000000000000029;
}

uint64_t sub_24E425198()
{
  return *v0 + 1000;
}

uint64_t _s5ErrorOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s5ErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E425304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.Error()
{
  return &type metadata for Fence.Error;
}

unint64_t sub_24E42533C()
{
  unint64_t result = qword_2698DC128;
  if (!qword_2698DC128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC128);
  }
  return result;
}

unint64_t sub_24E425390()
{
  unint64_t result = qword_2698DC130;
  if (!qword_2698DC130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC130);
  }
  return result;
}

unint64_t sub_24E4253E4()
{
  unint64_t result = qword_2698DC138;
  if (!qword_2698DC138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC138);
  }
  return result;
}

uint64_t sub_24E425438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E42549C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BB0);
  int v3 = (void *)sub_24E474F98();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_24E377E94(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  int v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    char v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24E377E94(v4);
    int v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_24E4255A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC150);
    int v3 = (void *)sub_24E474F98();
    for (uint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_24E3848E0(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

_OWORD *sub_24E425678(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24E425688(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v41 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24E474818();
  uint64_t v10 = MEMORY[0x270FA5388](v42);
  long long v40 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v32 = (char *)&v31 - v13;
  uint64_t v33 = v12;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v36 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  long long v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int64_t v37 = (unint64_t)(v15 + 63) >> 6;
  long long v38 = (void (**)(char *))(v12 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  unint64_t v20 = MEMORY[0x263F8EE78];
  long long v34 = a1;
  uint64_t v35 = a3;
  if (v17) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v19 >= v37) {
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v19);
  if (v24) {
    goto LABEL_19;
  }
  int64_t v25 = v19 + 1;
  if (v19 + 1 >= v37) {
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v25);
  if (v24)
  {
LABEL_18:
    int64_t v19 = v25;
LABEL_19:
    unint64_t v17 = (v24 - 1) & v24;
    for (unint64_t i = __clz(__rbit64(v24)) + (v19 << 6); ; unint64_t i = v21 | (v19 << 6))
    {
      uint64_t v43 = *(void *)(*(void *)(a3 + 48) + 8 * i);
      a1(&v43);
      if (v4) {
        break;
      }
      uint64_t v26 = v42;
      if ((*v39)(v9, 1, v42) == 1)
      {
        uint64_t result = sub_24E379BD4((uint64_t)v9, &qword_26B1B86A0);
        if (!v17) {
          goto LABEL_7;
        }
      }
      else
      {
        long long v27 = *v38;
        uint64_t v28 = v32;
        (*v38)(v32);
        ((void (*)(char *, char *, uint64_t))v27)(v40, v28, v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v20 = sub_24E41AA60(0, *(void *)(v20 + 16) + 1, 1, v20);
        }
        unint64_t v30 = *(void *)(v20 + 16);
        unint64_t v29 = *(void *)(v20 + 24);
        if (v30 >= v29 >> 1) {
          unint64_t v20 = sub_24E41AA60(v29 > 1, v30 + 1, 1, v20);
        }
        uint64_t v4 = 0;
        *(void *)(v20 + 16) = v30 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v20+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v30, v40, v42);
        a1 = v34;
        a3 = v35;
        if (!v17) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  int64_t v25 = v19 + 2;
  if (v19 + 2 >= v37)
  {
LABEL_33:
    swift_release();
    return v20;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v19 + 3;
  if (v19 + 3 >= v37) {
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v19 + 4;
  if (v19 + 4 >= v37) {
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v19 >= v37) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v36 + 8 * v19);
    ++v25;
    if (v24) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t Fence.Schedule.Matcher.schedule.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E425A9C(v1, a1);
}

uint64_t sub_24E425A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Fence.Schedule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Fence.Schedule.Matcher.init(schedule:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = sub_24E4749A8();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E4748C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E474978();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E425A9C(a1, a2);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F07740], v7);
  sub_24E4748D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = type metadata accessor for Fence.Schedule(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1 + *(int *)(v15 + 28), v19);
  sub_24E474958();
  sub_24E425D78(a1);
  uint64_t v16 = type metadata accessor for Fence.Schedule.Matcher();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18 + *(int *)(v16 + 20), v14, v11);
}

uint64_t sub_24E425D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Fence.Schedule(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Fence.Schedule.Matcher()
{
  uint64_t result = qword_26B1B7D58;
  if (!qword_26B1B7D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Fence.Schedule.Matcher.interval(containingDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_24E4745D8();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E474908();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24E474818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v30 - v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v30 - v19;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F077F0], v5);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, v8, (uint64_t)v20);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v21 = v32;
  sub_24E42667C((uint64_t)v20, (uint64_t)v18);
  BOOL v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v22(v15, v20, v9);
  v22(v31, v18, v9);
  sub_24E4745B8();
  LOBYTE(v8) = sub_24E4745C8();
  long long v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v18, v9);
  v23(v20, v9);
  if (v8)
  {
    uint64_t v25 = v33;
    uint64_t v24 = v34;
    uint64_t v26 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v33, v21, v35);
    uint64_t v27 = 0;
    uint64_t v28 = v25;
  }
  else
  {
    uint64_t v24 = v34;
    uint64_t v26 = v35;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v35);
    uint64_t v27 = 1;
    uint64_t v28 = v33;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v28, v27, 1, v26);
}

uint64_t Fence.Schedule.Matcher.nextStartDate(from:direction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_24E474908();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v41) = *(unsigned char *)(v3 + 32);
  uint64_t v17 = Fence.DaysOfWeek.gregorianCalendarWeekdays.getter();
  uint64_t v37 = v3;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v18 = sub_24E425688((void (*)(void))sub_24E427C64, (uint64_t)v36, v17);
  swift_bridgeObjectRelease();
  if (!*(void *)(v18 + 16))
  {
    uint64_t v35 = a3;
    if (qword_2698DA698 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_24E4749E8();
    __swift_project_value_buffer(v19, (uint64_t)qword_2698ED8A0);
    unint64_t v20 = sub_24E4749C8();
    os_log_type_t v21 = sub_24E474D88();
    if (os_log_type_enabled(v20, v21))
    {
      BOOL v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v41 = v34;
      uint64_t v33 = v22;
      *(_DWORD *)BOOL v22 = 136446210;
      uint64_t v32 = v22 + 4;
      uint64_t v40 = sub_24E37E724(0xD00000000000001ELL, 0x800000024E477F10, &v41);
      sub_24E474DE8();
      long long v23 = v33;
      _os_log_impl(&dword_24E36C000, v20, v21, "%{public}s: Did not find valid trigger dates for fence.", v33, 0xCu);
      uint64_t v24 = v34;
      swift_arrayDestroy();
      MEMORY[0x25333BB40](v24, -1, -1);
      MEMORY[0x25333BB40](v23, -1, -1);
    }

    a3 = v35;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v25 == *MEMORY[0x263F077E0])
  {
    sub_24E428790(v18, v12);
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_24E474818();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v26) == 1)
    {
      sub_24E474758();
      uint64_t v28 = (uint64_t)v12;
      return sub_24E379BD4(v28, &qword_26B1B86A0);
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(a3, v12, v26);
  }
  else if (v25 == *MEMORY[0x263F077F0])
  {
    sub_24E428BB4(v18, v10);
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_24E474818();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v10, 1, v29) == 1)
    {
      sub_24E474758();
      uint64_t v28 = (uint64_t)v10;
      return sub_24E379BD4(v28, &qword_26B1B86A0);
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(a3, v10, v29);
  }
  else
  {
    uint64_t result = sub_24E474F58();
    __break(1u);
  }
  return result;
}

uint64_t sub_24E42667C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v4 = sub_24E474918();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_24E474908();
  uint64_t v58 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v57 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_24E4748E8();
  uint64_t v56 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v60 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v51 - v12;
  uint64_t v14 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC170);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC178);
  MEMORY[0x270FA5388](v20 - 8);
  BOOL v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24E474668();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v63 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v2[2];
  uint64_t v27 = (char *)v2[3];
  if (v28 == *v2 && v27 == (char *)v2[1])
  {
    uint64_t v29 = sub_24E474818();
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
    uint64_t v31 = v66;
    return v30(a2, v31, v29);
  }
  uint64_t v52 = v25;
  uint64_t v53 = v24;
  int v54 = v13;
  uint64_t v55 = a2;
  uint64_t v33 = sub_24E474978();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v22, 1, 1, v33);
  sub_24E425A9C((uint64_t)v2, (uint64_t)v16);
  uint64_t v34 = &v16[*(int *)(v14 + 28)];
  uint64_t v35 = sub_24E4749A8();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v19, v34, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v19, 0, 1, v35);
  if ((((unint64_t)v27 | v28) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_24E474658();
    type metadata accessor for Fence.Schedule.Matcher();
    uint64_t v37 = v56;
    (*(void (**)(char *, void, uint64_t))(v56 + 104))(v8, *MEMORY[0x263F07780], v64);
    uint64_t v39 = v57;
    uint64_t v38 = v58;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F077E0], v65);
    uint64_t v41 = v61;
    uint64_t v40 = v62;
    uint64_t v42 = v59;
    (*(void (**)(char *, void, uint64_t))(v61 + 104))(v59, *MEMORY[0x263F07800], v62);
    uint64_t v35 = (uint64_t)v54;
    sub_24E474948();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v65);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v64);
    uint64_t v43 = v60;
    sub_24E379AA0(v35, v60);
    uint64_t v44 = sub_24E474818();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) != 1)
    {
      sub_24E379BD4(v35, &qword_26B1B86A0);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v63, v53);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v55, v43, v44);
    }
    uint64_t v27 = v63;
    sub_24E379BD4(v43, &qword_26B1B86A0);
    if (qword_2698DA698 == -1) {
      goto LABEL_9;
    }
  }
  swift_once();
LABEL_9:
  uint64_t v46 = sub_24E4749E8();
  __swift_project_value_buffer(v46, (uint64_t)qword_2698ED8A0);
  int v47 = sub_24E4749C8();
  os_log_type_t v48 = sub_24E474D88();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v68 = v50;
    *(_DWORD *)uint64_t v49 = 136446210;
    uint64_t v67 = sub_24E37E724(0xD000000000000017, 0x800000024E478130, &v68);
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v47, v48, "%{public}s: Did not find valid trigger dates for fence.", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v50, -1, -1);
    MEMORY[0x25333BB40](v49, -1, -1);
  }

  sub_24E474758();
  sub_24E379BD4(v35, &qword_26B1B86A0);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v27, v53);
}

uint64_t Fence.Schedule.Matcher.doesMatchSchedule(_:)(uint64_t a1)
{
  uint64_t v2 = sub_24E474908();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E474818();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v25 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F077F0], v2);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v5, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24E42667C((uint64_t)v17, (uint64_t)v15);
  sub_24E42B0E0(&qword_2698DAB00, MEMORY[0x263F07490]);
  char v18 = sub_24E474A48();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v20 = a1;
  uint64_t v21 = v26;
  v19(v12, v20, v6);
  v19(v21, (uint64_t)v15, v6);
  if (v18) {
    char v22 = 0;
  }
  else {
    char v22 = sub_24E474A48() ^ 1;
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v21, v6);
  v23(v12, v6);
  v23(v15, v6);
  v23(v17, v6);
  return v22 & 1;
}

uint64_t Fence.Schedule.Matcher.nextStartOrEndDate(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_24E474908();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24E474818();
  uint64_t v8 = *(void *)(v22 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v22);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *MEMORY[0x263F077F0];
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v20(v7, v14, v4);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v7, (uint64_t)v13);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  uint64_t v21 = v2;
  sub_24E42667C((uint64_t)v13, (uint64_t)v11);
  if (sub_24E474788())
  {
    uint64_t v16 = v22;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v22);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v11, v16);
  }
  else
  {
    v20(v7, *MEMORY[0x263F077E0], v4);
    Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v7, v23);
    v15(v7, v4);
    char v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v19 = v22;
    v18(v11, v22);
    return ((uint64_t (*)(char *, uint64_t))v18)(v13, v19);
  }
}

uint64_t Fence.Schedule.Matcher.previousInterval(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v22[0] = a1;
  v22[1] = a2;
  uint64_t v2 = sub_24E474908();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E474818();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v22 - v15;
  MEMORY[0x270FA5388](v14);
  char v18 = (char *)v22 - v17;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F077F0], v2);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(v22[0], (uint64_t)v5, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24E42667C((uint64_t)v18, (uint64_t)v16);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v19(v13, v18, v6);
  v19(v10, v16, v6);
  sub_24E4745B8();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v16, v6);
  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v6);
}

uint64_t Fence.Schedule.Matcher.previousStartDate(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E474908();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F077F0], v4);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Fence.Schedule.Matcher.previousEndDate(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_24E474908();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E474818();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v19 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F077F0], v3);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v6, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24E42667C((uint64_t)v16, (uint64_t)v14);
  if (sub_24E474788())
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20, v14, v7);
  }
  else
  {
    sub_24E4747F8();
    Fence.Schedule.Matcher.previousEndDate(from:)(v11);
    char v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v11, v7);
    v18(v14, v7);
    return ((uint64_t (*)(char *, uint64_t))v18)(v16, v7);
  }
}

uint64_t Fence.DaysOfWeek.gregorianCalendarWeekdays.getter()
{
  unsigned __int8 v1 = *v0;
  unint64_t v2 = sub_24E4255A0((uint64_t)&unk_270044B20);
  unint64_t v3 = v2;
  uint64_t v17 = MEMORY[0x263F8EE88];
  unint64_t v4 = v2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_24:
    if ((*(unsigned char *)(*(void *)(v3 + 48) + v12) & v1) != 0) {
      uint64_t result = sub_24E4293C0(&v16, *(void *)(*(void *)(v3 + 56) + 8 * v12));
    }
  }
  int64_t v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v13 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  ++v10;
  if (v14) {
    goto LABEL_23;
  }
  int64_t v10 = v13 + 1;
  if (v13 + 1 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14) {
    goto LABEL_23;
  }
  int64_t v10 = v13 + 2;
  if (v13 + 2 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14) {
    goto LABEL_23;
  }
  int64_t v10 = v13 + 3;
  if (v13 + 3 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14) {
    goto LABEL_23;
  }
  int64_t v10 = v13 + 4;
  if (v13 + 4 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_24;
  }
  int64_t v15 = v13 + 5;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return v17;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24E427C64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E427C9C(*a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_24E427C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v96 = a2;
  uint64_t v85 = a1;
  uint64_t v83 = a4;
  uint64_t v5 = sub_24E474918();
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v79 = v5;
  MEMORY[0x270FA5388](v5);
  long long v76 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_24E4748E8();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  long long v74 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_24E474818();
  uint64_t v92 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  char v72 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA960);
  MEMORY[0x270FA5388](v84);
  uint64_t v86 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v73 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v91 = (uint64_t)&v72 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v95 = (uint64_t)&v72 - v15;
  uint64_t v16 = type metadata accessor for Fence.Schedule(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  v90 = (char **)((char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC170);
  MEMORY[0x270FA5388](v19 - 8);
  v89 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC178);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24E474668();
  uint64_t v81 = *(void *)(v24 - 8);
  uint64_t v82 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  v94 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v72 - v27;
  uint64_t v29 = v4 + *(int *)(type metadata accessor for Fence.Schedule.Matcher() + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC180);
  uint64_t v30 = sub_24E474968();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 72);
  unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_24E47EB30;
  unint64_t v35 = v34 + v33;
  uint64_t v36 = *(void (**)(unint64_t, void, uint64_t))(v31 + 104);
  v36(v35, *MEMORY[0x263F078A0], v30);
  v36(v35 + v32, *MEMORY[0x263F07830], v30);
  uint64_t v37 = v28;
  sub_24E42ADC8(v34);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v38 = v89;
  uint64_t v93 = v29;
  sub_24E4748F8();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_24E474978();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v23, 1, 1, v39);
  uint64_t v40 = v88;
  uint64_t v41 = (char *)v90;
  sub_24E425A9C((uint64_t)v88, (uint64_t)v90);
  uint64_t v42 = &v41[*(int *)(v17 + 36)];
  uint64_t v43 = sub_24E4749A8();
  uint64_t v44 = *(void *)(v43 - 8);
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v38, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v43);
  uint64_t result = sub_24E474638();
  if ((*v40 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((v40[1] & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_24E474618();
  sub_24E474658();
  uint64_t v46 = v95;
  sub_24E474928();
  uint64_t v47 = v91;
  uint64_t v48 = v92;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
  uint64_t v50 = v87;
  v49(v91, v96, v87);
  v90 = *(char ***)(v48 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v47, 0, 1, v50);
  uint64_t v51 = v86;
  uint64_t v52 = v86 + *(int *)(v84 + 48);
  sub_24E379AA0(v46, v86);
  sub_24E379AA0(v47, v52);
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v53(v51, 1, v50) != 1)
  {
    uint64_t v54 = v73;
    sub_24E379AA0(v51, v73);
    if (v53(v52, 1, v50) != 1)
    {
      v89 = v37;
      uint64_t v64 = v92;
      uint64_t v65 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v72, v52, v50);
      sub_24E42B0E0(&qword_2698DA968, MEMORY[0x263F07490]);
      char v66 = sub_24E474A58();
      uint64_t v67 = v51;
      uint64_t v68 = *(void (**)(char *, uint64_t))(v64 + 8);
      v68(v65, v50);
      sub_24E379BD4(v91, &qword_26B1B86A0);
      v68((char *)v54, v50);
      uint64_t v37 = v89;
      sub_24E379BD4(v67, &qword_26B1B86A0);
      if (v66) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v55 = v94;
      sub_24E474648();
      sub_24E474628();
      uint64_t v56 = v75;
      uint64_t v57 = v74;
      uint64_t v58 = v77;
      (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, *MEMORY[0x263F07780], v77);
      uint64_t v60 = v78;
      uint64_t v59 = v79;
      uint64_t v61 = v76;
      (*(void (**)(char *, void, uint64_t))(v78 + 104))(v76, *MEMORY[0x263F07800], v79);
      sub_24E474948();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
      sub_24E379BD4(v95, &qword_26B1B86A0);
      uint64_t v62 = v82;
      uint64_t v63 = *(void (**)(char *, uint64_t))(v81 + 8);
      v63(v55, v82);
      return ((uint64_t (*)(char *, uint64_t))v63)(v37, v62);
    }
    sub_24E379BD4(v91, &qword_26B1B86A0);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v54, v50);
LABEL_8:
    sub_24E379BD4(v51, &qword_2698DA960);
    goto LABEL_9;
  }
  sub_24E379BD4(v47, &qword_26B1B86A0);
  if (v53(v52, 1, v50) != 1) {
    goto LABEL_8;
  }
  sub_24E379BD4(v51, &qword_26B1B86A0);
LABEL_11:
  sub_24E379BD4(v95, &qword_26B1B86A0);
  uint64_t v69 = v82;
  char v70 = *(void (**)(char *, uint64_t))(v81 + 8);
  v70(v94, v82);
  v70(v37, v69);
  uint64_t v71 = v83;
  v49(v83, v96, v50);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v90)(v71, 0, 1, v50);
}

uint64_t sub_24E428790@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_24E474818();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_24E379BD4((uint64_t)v9, &qword_26B1B86A0);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  uint64_t v30 = a2;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_24E42B0E0(&qword_2698DAB00, MEMORY[0x263F07490]);
      char v27 = sub_24E474A48();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_24E379BD4((uint64_t)v7, &qword_26B1B86A0);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_24E428BB4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_24E474818();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_24E379BD4((uint64_t)v9, &qword_26B1B86A0);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  uint64_t v30 = a2;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_24E42B0E0(&qword_2698DAB00, MEMORY[0x263F07490]);
      char v27 = sub_24E474A48();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_24E379BD4((uint64_t)v7, &qword_26B1B86A0);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t static Fence.Schedule.Matcher.matchingPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F07780];
  uint64_t v3 = sub_24E4748E8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_24E42904C()
{
  uint64_t v0 = sub_24E4749E8();
  __swift_allocate_value_buffer(v0, qword_2698ED8A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698ED8A0);
  return sub_24E4749D8();
}

uint64_t sub_24E4290C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B1B9D00);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

uint64_t sub_24E429210(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_24E475228();
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  uint64_t v8 = sub_24E475268();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_24E475148() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_24E475148() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24E42A280(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24E4293C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24E475218();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24E42A41C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void *sub_24E4294BC()
{
  unsigned __int8 v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC1A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E474E58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24E429670()
{
  unsigned __int8 v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC168);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E474E58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24E429808()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC1A0);
  uint64_t v3 = sub_24E474E68();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_24E475228();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    uint64_t result = sub_24E475268();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unsigned __int8 v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24E429AB8()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC168);
  uint64_t result = sub_24E474E68();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_24E475218();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unsigned __int8 v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24E429D1C()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC1A0);
  uint64_t v3 = sub_24E474E68();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unsigned __int8 v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_24E475228();
      sub_24E474AD8();
      uint64_t result = sub_24E475268();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_24E429FFC()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC168);
  uint64_t result = sub_24E474E68();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                unsigned __int8 v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_24E475218();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_24E42A280(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_24E429D1C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_24E4294BC();
      goto LABEL_22;
    }
    sub_24E429808();
  }
  uint64_t v11 = *v4;
  sub_24E475228();
  sub_24E474AD8();
  uint64_t result = sub_24E475268();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_24E475148(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24E475188();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_24E475148();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_24E42A41C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_24E429FFC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_24E429670();
      goto LABEL_14;
    }
    sub_24E429AB8();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_24E475218();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_24E475188();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *_s7MatcherVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_24E4749A8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_24E474978();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t _s7MatcherVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v5 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_24E474978();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

uint64_t _s7MatcherVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_24E474978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t _s7MatcherVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_24E474978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t _s7MatcherVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_24E474978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t _s7MatcherVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24E4749A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_24E474978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t _s7MatcherVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E42AAF0);
}

uint64_t sub_24E42AAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Fence.Schedule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24E474978();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t _s7MatcherVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E42ABFC);
}

uint64_t sub_24E42ABFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Fence.Schedule(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24E474978();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_24E42AD00()
{
  uint64_t result = type metadata accessor for Fence.Schedule(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24E474978();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_24E42ADC8(uint64_t a1)
{
  uint64_t v2 = sub_24E474968();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC188);
    uint64_t v9 = sub_24E474E78();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_24E42B0E0(&qword_2698DC190, MEMORY[0x263F07908]);
      uint64_t v16 = sub_24E474A18();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_24E42B0E0(&qword_2698DC198, MEMORY[0x263F07908]);
          char v23 = sub_24E474A58();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24E42B0E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Friend.secureLocationsCapable.getter()
{
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t Friend.shallowOrLiveSecureLocationsCapable.getter()
{
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t Friend.fallbackToLegacyAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + 179);
}

uint64_t Friend.fallbackToLegacy.getter()
{
  return *(unsigned __int8 *)(v0 + 180);
}

uint64_t Friend.expiry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Friend() + 40);
  return sub_24E379AA0(v3, a1);
}

uint64_t Friend.origin.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Friend();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t Friend.hash(into:)()
{
  long long v1 = v0[9];
  v7[8] = v0[8];
  v7[9] = v1;
  v7[10] = v0[10];
  long long v2 = v0[5];
  v7[4] = v0[4];
  v7[5] = v2;
  long long v3 = v0[7];
  v7[6] = v0[6];
  v7[7] = v3;
  long long v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  long long v5 = v0[3];
  v7[2] = v0[2];
  v7[3] = v5;
  sub_24E474AC8();
  sub_24E3776C8((uint64_t)v7);
  sub_24E474AD8();
  swift_bridgeObjectRelease();
  sub_24E377FA0((uint64_t)v7);
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24E42B338(char a1)
{
  unint64_t result = 0x656C646E6168;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x797269707865;
      break;
    case 7:
      unint64_t result = 0x6E696769726FLL;
      break;
    case 8:
      unint64_t result = 0x646574616572635FLL;
      break;
    case 9:
      unint64_t result = 0x614872656E776F5FLL;
      break;
    case 10:
      unint64_t result = 0x6E696769726F5FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24E42B48C()
{
  return sub_24E42B338(*v0);
}

uint64_t sub_24E42B494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E42D9AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E42B4BC(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_24E42B4C8(uint64_t a1)
{
  unint64_t v2 = sub_24E42C278();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42B504(uint64_t a1)
{
  unint64_t v2 = sub_24E42C278();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Friend.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC1A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E42C278();
  sub_24E4752A8();
  long long v8 = *(_OWORD *)(v2 + 144);
  v23[8] = *(_OWORD *)(v2 + 128);
  v23[9] = v8;
  v23[10] = *(_OWORD *)(v2 + 160);
  long long v9 = *(_OWORD *)(v2 + 80);
  v23[4] = *(_OWORD *)(v2 + 64);
  v23[5] = v9;
  long long v10 = *(_OWORD *)(v2 + 112);
  v23[6] = *(_OWORD *)(v2 + 96);
  v23[7] = v10;
  long long v11 = *(_OWORD *)(v2 + 16);
  v23[0] = *(_OWORD *)v2;
  v23[1] = v11;
  long long v12 = *(_OWORD *)(v2 + 48);
  v23[2] = *(_OWORD *)(v2 + 32);
  v23[3] = v12;
  v22[0] = 0;
  sub_24E380588();
  uint64_t v13 = v24;
  sub_24E475118();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  LOBYTE(v23[0]) = *(unsigned char *)(v2 + 176);
  v22[0] = 1;
  sub_24E3BE8E0();
  sub_24E475118();
  LOBYTE(v23[0]) = 2;
  sub_24E4750D8();
  uint64_t v14 = v5;
  LOBYTE(v23[0]) = 3;
  sub_24E4750D8();
  LOBYTE(v23[0]) = 4;
  sub_24E4750D8();
  LOBYTE(v23[0]) = 5;
  sub_24E4750D8();
  uint64_t v20 = (int *)type metadata accessor for Friend();
  LOBYTE(v23[0]) = 6;
  uint64_t v16 = sub_24E474818();
  sub_24E36F6F8(&qword_26B1B8128, MEMORY[0x263F07490]);
  uint64_t v24 = v4;
  sub_24E4750B8();
  v19[2] = v16;
  LOBYTE(v23[0]) = *(unsigned char *)(v2 + v20[11]);
  v22[0] = 7;
  unint64_t v17 = sub_24E381724();
  sub_24E475118();
  v19[1] = v17;
  v22[183] = 8;
  sub_24E4750B8();
  sub_24E37A4CC(v2 + v20[13], (uint64_t)v23, &qword_26B1B7B00);
  sub_24E37A4CC((uint64_t)v23, (uint64_t)v22, &qword_26B1B7B00);
  char v21 = 9;
  uint64_t v18 = v24;
  sub_24E4750B8();
  v22[0] = *(unsigned char *)(v2 + v20[14]);
  char v21 = 10;
  sub_24E475118();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v18);
}

uint64_t Friend.hashValue.getter()
{
  sub_24E475228();
  long long v1 = v0[9];
  v7[8] = v0[8];
  v7[9] = v1;
  v7[10] = v0[10];
  long long v2 = v0[5];
  v7[4] = v0[4];
  v7[5] = v2;
  long long v3 = v0[7];
  v7[6] = v0[6];
  v7[7] = v3;
  long long v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  long long v5 = v0[3];
  v7[2] = v0[2];
  v7[3] = v5;
  sub_24E474AC8();
  sub_24E3776C8((uint64_t)v7);
  sub_24E474AD8();
  swift_bridgeObjectRelease();
  sub_24E377FA0((uint64_t)v7);
  sub_24E474AD8();
  swift_bridgeObjectRelease();
  return sub_24E475268();
}

uint64_t Friend.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)v29 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC1B8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v34 = v10;
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for Friend();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_24E42C278();
  uint64_t v32 = v12;
  unint64_t v17 = v51;
  sub_24E475288();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  uint64_t v30 = v6;
  uint64_t v51 = v15;
  v39[183] = 0;
  unint64_t v18 = sub_24E386370();
  sub_24E475068();
  v29[4] = v18;
  long long v19 = v49;
  uint64_t v20 = v51;
  *((_OWORD *)v51 + 8) = v48;
  *((_OWORD *)v20 + 9) = v19;
  *((_OWORD *)v20 + 10) = v50;
  long long v21 = v45;
  *((_OWORD *)v20 + 4) = v44;
  *((_OWORD *)v20 + 5) = v21;
  long long v22 = v47;
  *((_OWORD *)v20 + 6) = v46;
  *((_OWORD *)v20 + 7) = v22;
  long long v23 = v41;
  *(_OWORD *)uint64_t v20 = v40;
  *((_OWORD *)v20 + 1) = v23;
  long long v24 = v43;
  *((_OWORD *)v20 + 2) = v42;
  *((_OWORD *)v20 + 3) = v24;
  v38[0] = 1;
  sub_24E42C2CC();
  sub_24E475068();
  v20[176] = v39[0];
  v39[0] = 2;
  v20[177] = sub_24E475028() & 1;
  v39[0] = 3;
  v20[178] = sub_24E475028() & 1;
  v39[0] = 4;
  v20[179] = sub_24E475028() & 1;
  v39[0] = 5;
  v20[180] = sub_24E475028() & 1;
  v29[3] = sub_24E474818();
  v39[0] = 6;
  v29[2] = sub_24E36F6F8(&qword_26B1B7C38, MEMORY[0x263F07490]);
  sub_24E475008();
  sub_24E37A4CC((uint64_t)v8, (uint64_t)&v20[v13[10]], &qword_26B1B86A0);
  v38[0] = 7;
  unint64_t v25 = sub_24E3816D0();
  sub_24E475068();
  v29[1] = v25;
  v20[v13[11]] = v39[0];
  v39[0] = 8;
  uint64_t v26 = (uint64_t)v30;
  sub_24E475008();
  sub_24E37A4CC(v26, (uint64_t)&v20[v13[12]], &qword_26B1B86A0);
  v38[183] = 9;
  sub_24E475008();
  sub_24E37A4CC((uint64_t)v39, (uint64_t)v38, &qword_26B1B7B00);
  sub_24E37A4CC((uint64_t)v38, (uint64_t)&v51[v13[13]], &qword_26B1B7B00);
  char v36 = 10;
  sub_24E475068();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
  uint64_t v27 = (uint64_t)v51;
  v51[v13[14]] = v37;
  sub_24E37D7A8(v27, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_24E37CDB8(v27);
}

uint64_t sub_24E42C200@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Friend.init(from:)(a1, a2);
}

uint64_t sub_24E42C218(void *a1)
{
  return Friend.encode(to:)(a1);
}

unint64_t sub_24E42C278()
{
  unint64_t result = qword_2698DC1B0;
  if (!qword_2698DC1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1B0);
  }
  return result;
}

unint64_t sub_24E42C2CC()
{
  unint64_t result = qword_2698DC1C0;
  if (!qword_2698DC1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1C0);
  }
  return result;
}

uint64_t sub_24E42C320()
{
  return sub_24E36F6F8(&qword_26B1B7C68, (void (*)(uint64_t))type metadata accessor for Friend);
}

void *initializeBufferWithCopyOfBuffer for Friend(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = a2[7];
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    uint64_t v9 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v10 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v10;
    uint64_t v11 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v11;
    uint64_t v41 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v41;
    uint64_t v12 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v12;
    *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
    *(unsigned char *)(a1 + 180) = *((unsigned char *)a2 + 180);
    uint64_t v13 = a3[10];
    __dst = (void *)(a1 + v13);
    uint64_t v14 = (char *)a2 + v13;
    uint64_t v15 = sub_24E474818();
    uint64_t v42 = *(void *)(v15 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
      uint64_t v18 = v42;
    }
    else
    {
      uint64_t v18 = v42;
      (*(void (**)(void *, char *, uint64_t))(v42 + 16))(__dst, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v20 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    long long v21 = (char *)v4 + v20;
    long long v22 = (char *)a2 + v20;
    if (v16((char *)a2 + v20, 1, v15))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v22, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v15);
    }
    long long v24 = a3;
    uint64_t v25 = a3[13];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = *(void *)(v27 + 8);
    if (v28)
    {
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = v28;
      uint64_t v29 = *(void *)(v27 + 24);
      *((void *)v26 + 2) = *(void *)(v27 + 16);
      *((void *)v26 + 3) = v29;
      v26[32] = *(unsigned char *)(v27 + 32);
      uint64_t v30 = *(void *)(v27 + 48);
      *((void *)v26 + 5) = *(void *)(v27 + 40);
      *((void *)v26 + 6) = v30;
      *((void *)v26 + 7) = *(void *)(v27 + 56);
      *((_OWORD *)v26 + 4) = *(_OWORD *)(v27 + 64);
      uint64_t v31 = *(void *)(v27 + 88);
      *((void *)v26 + 10) = *(void *)(v27 + 80);
      *((void *)v26 + 11) = v31;
      *((void *)v26 + 12) = *(void *)(v27 + 96);
      v26[104] = *(unsigned char *)(v27 + 104);
      uint64_t v32 = *(void *)(v27 + 120);
      *((void *)v26 + 14) = *(void *)(v27 + 112);
      *((void *)v26 + 15) = v32;
      uint64_t v33 = *(void *)(v27 + 136);
      *((void *)v26 + 16) = *(void *)(v27 + 128);
      *((void *)v26 + 17) = v33;
      uint64_t v34 = *(void *)(v27 + 152);
      *((void *)v26 + 18) = *(void *)(v27 + 144);
      *((void *)v26 + 19) = v34;
      uint64_t v43 = *(void *)(v27 + 168);
      *((void *)v26 + 20) = *(void *)(v27 + 160);
      *((void *)v26 + 21) = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v24 = a3;
    }
    else
    {
      long long v35 = *(_OWORD *)(v27 + 144);
      *((_OWORD *)v26 + 8) = *(_OWORD *)(v27 + 128);
      *((_OWORD *)v26 + 9) = v35;
      *((_OWORD *)v26 + 10) = *(_OWORD *)(v27 + 160);
      long long v36 = *(_OWORD *)(v27 + 80);
      *((_OWORD *)v26 + 4) = *(_OWORD *)(v27 + 64);
      *((_OWORD *)v26 + 5) = v36;
      long long v37 = *(_OWORD *)(v27 + 112);
      *((_OWORD *)v26 + 6) = *(_OWORD *)(v27 + 96);
      *((_OWORD *)v26 + 7) = v37;
      long long v38 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v38;
      long long v39 = *(_OWORD *)(v27 + 48);
      *((_OWORD *)v26 + 2) = *(_OWORD *)(v27 + 32);
      *((_OWORD *)v26 + 3) = v39;
    }
    *((unsigned char *)v4 + v24[14]) = *((unsigned char *)a2 + v24[14]);
  }
  return v4;
}

uint64_t assignWithCopy for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
  *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_24E474818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v15 = a3[12];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  uint64_t v24 = *(void *)(a1 + v21 + 8);
  uint64_t v25 = *(void *)(a2 + v21 + 8);
  if (v24)
  {
    if (v25)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *(void *)(v22 + 8) = *((void *)v23 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 16) = *((void *)v23 + 2);
      *(void *)(v22 + 24) = *((void *)v23 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v22 + 32) = *((unsigned char *)v23 + 32);
      *(void *)(v22 + 40) = *((void *)v23 + 5);
      *(void *)(v22 + 48) = *((void *)v23 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 56) = *((void *)v23 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 64) = *((void *)v23 + 8);
      *(void *)(v22 + 72) = *((void *)v23 + 9);
      *(void *)(v22 + 80) = *((void *)v23 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 88) = *((void *)v23 + 11);
      *(void *)(v22 + 96) = *((void *)v23 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v22 + 104) = *((unsigned char *)v23 + 104);
      *(void *)(v22 + 112) = *((void *)v23 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 120) = *((void *)v23 + 15);
      *(void *)(v22 + 128) = *((void *)v23 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 136) = *((void *)v23 + 17);
      *(void *)(v22 + 144) = *((void *)v23 + 18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 152) = *((void *)v23 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 160) = *((void *)v23 + 20);
      *(void *)(v22 + 168) = *((void *)v23 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24E3FAB00(v22);
      long long v27 = v23[1];
      long long v26 = v23[2];
      *(_OWORD *)uint64_t v22 = *v23;
      *(_OWORD *)(v22 + 16) = v27;
      *(_OWORD *)(v22 + 32) = v26;
      long long v28 = v23[6];
      long long v30 = v23[3];
      long long v29 = v23[4];
      *(_OWORD *)(v22 + 80) = v23[5];
      *(_OWORD *)(v22 + 96) = v28;
      *(_OWORD *)(v22 + 48) = v30;
      *(_OWORD *)(v22 + 64) = v29;
      long long v31 = v23[10];
      long long v33 = v23[7];
      long long v32 = v23[8];
      *(_OWORD *)(v22 + 144) = v23[9];
      *(_OWORD *)(v22 + 160) = v31;
      *(_OWORD *)(v22 + 112) = v33;
      *(_OWORD *)(v22 + 128) = v32;
    }
  }
  else if (v25)
  {
    *(void *)uint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = *((void *)v23 + 1);
    *(void *)(v22 + 16) = *((void *)v23 + 2);
    *(void *)(v22 + 24) = *((void *)v23 + 3);
    *(unsigned char *)(v22 + 32) = *((unsigned char *)v23 + 32);
    *(void *)(v22 + 40) = *((void *)v23 + 5);
    *(void *)(v22 + 48) = *((void *)v23 + 6);
    *(void *)(v22 + 56) = *((void *)v23 + 7);
    *(void *)(v22 + 64) = *((void *)v23 + 8);
    *(void *)(v22 + 72) = *((void *)v23 + 9);
    *(void *)(v22 + 80) = *((void *)v23 + 10);
    *(void *)(v22 + 88) = *((void *)v23 + 11);
    *(void *)(v22 + 96) = *((void *)v23 + 12);
    *(unsigned char *)(v22 + 104) = *((unsigned char *)v23 + 104);
    *(void *)(v22 + 112) = *((void *)v23 + 14);
    *(void *)(v22 + 120) = *((void *)v23 + 15);
    *(void *)(v22 + 128) = *((void *)v23 + 16);
    *(void *)(v22 + 136) = *((void *)v23 + 17);
    *(void *)(v22 + 144) = *((void *)v23 + 18);
    *(void *)(v22 + 152) = *((void *)v23 + 19);
    *(void *)(v22 + 160) = *((void *)v23 + 20);
    *(void *)(v22 + 168) = *((void *)v23 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *v23;
    long long v35 = v23[2];
    *(_OWORD *)(v22 + 16) = v23[1];
    *(_OWORD *)(v22 + 32) = v35;
    *(_OWORD *)uint64_t v22 = v34;
    long long v36 = v23[3];
    long long v37 = v23[4];
    long long v38 = v23[6];
    *(_OWORD *)(v22 + 80) = v23[5];
    *(_OWORD *)(v22 + 96) = v38;
    *(_OWORD *)(v22 + 48) = v36;
    *(_OWORD *)(v22 + 64) = v37;
    long long v39 = v23[7];
    long long v40 = v23[8];
    long long v41 = v23[10];
    *(_OWORD *)(v22 + 144) = v23[9];
    *(_OWORD *)(v22 + 160) = v41;
    *(_OWORD *)(v22 + 112) = v39;
    *(_OWORD *)(v22 + 128) = v40;
  }
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  uint64_t v11 = a3[10];
  int v12 = (void *)(a1 + v11);
  int v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_24E474818();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  int v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  if (v16((const void *)(a2 + v18), 1, v14))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  uint64_t v22 = a3[13];
  uint64_t v23 = a3[14];
  uint64_t v24 = (_OWORD *)(a1 + v22);
  uint64_t v25 = (_OWORD *)(a2 + v22);
  long long v26 = v25[5];
  v24[4] = v25[4];
  v24[5] = v26;
  long long v27 = v25[10];
  long long v28 = v25[8];
  v24[9] = v25[9];
  v24[10] = v27;
  long long v29 = v25[7];
  v24[6] = v25[6];
  v24[7] = v29;
  v24[8] = v28;
  long long v30 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v30;
  long long v31 = v25[3];
  void v24[2] = v25[2];
  v24[3] = v31;
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
  *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  uint64_t v17 = sub_24E474818();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  int v26 = v19((void *)(a1 + v23), 1, v17);
  int v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_13:
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  if (!*(void *)(a1 + v29 + 8))
  {
LABEL_17:
    long long v40 = *(_OWORD *)(v31 + 144);
    *(_OWORD *)(v30 + 128) = *(_OWORD *)(v31 + 128);
    *(_OWORD *)(v30 + 144) = v40;
    *(_OWORD *)(v30 + 160) = *(_OWORD *)(v31 + 160);
    long long v41 = *(_OWORD *)(v31 + 80);
    *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
    *(_OWORD *)(v30 + 80) = v41;
    long long v42 = *(_OWORD *)(v31 + 112);
    *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
    *(_OWORD *)(v30 + 112) = v42;
    long long v43 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v43;
    long long v44 = *(_OWORD *)(v31 + 48);
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    *(_OWORD *)(v30 + 48) = v44;
    goto LABEL_18;
  }
  uint64_t v32 = *(void *)(v31 + 8);
  if (!v32)
  {
    sub_24E3FAB00(v30);
    goto LABEL_17;
  }
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v31 + 24);
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  *(void *)(v30 + 24) = v33;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + 32);
  uint64_t v34 = *(void *)(v31 + 48);
  *(void *)(v30 + 40) = *(void *)(v31 + 40);
  *(void *)(v30 + 48) = v34;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 56) = *(void *)(v31 + 56);
  swift_bridgeObjectRelease();
  *(void *)(v30 + 64) = *(void *)(v31 + 64);
  uint64_t v35 = *(void *)(v31 + 80);
  *(void *)(v30 + 72) = *(void *)(v31 + 72);
  *(void *)(v30 + 80) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v31 + 96);
  *(void *)(v30 + 88) = *(void *)(v31 + 88);
  *(void *)(v30 + 96) = v36;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 104) = *(unsigned char *)(v31 + 104);
  *(void *)(v30 + 112) = *(void *)(v31 + 112);
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v31 + 128);
  *(void *)(v30 + 120) = *(void *)(v31 + 120);
  *(void *)(v30 + 128) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v31 + 144);
  *(void *)(v30 + 136) = *(void *)(v31 + 136);
  *(void *)(v30 + 144) = v38;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 152) = *(void *)(v31 + 152);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v31 + 168);
  *(void *)(v30 + 160) = *(void *)(v31 + 160);
  *(void *)(v30 + 168) = v39;
  swift_bridgeObjectRelease();
LABEL_18:
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_24E42D5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24E42D664(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Friend.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Friend.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E42D86CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Friend.CodingKeys()
{
  return &type metadata for Friend.CodingKeys;
}

unint64_t sub_24E42D8A8()
{
  unint64_t result = qword_2698DC1C8;
  if (!qword_2698DC1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1C8);
  }
  return result;
}

unint64_t sub_24E42D900()
{
  unint64_t result = qword_2698DC1D0;
  if (!qword_2698DC1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1D0);
  }
  return result;
}

unint64_t sub_24E42D958()
{
  unint64_t result = qword_2698DC1D8;
  if (!qword_2698DC1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1D8);
  }
  return result;
}

uint64_t sub_24E42D9AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024E478150 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000024E478170 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024E4781A0 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E4781C0 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646574616572635FLL && a2 == 0xEA00000000007441 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614872656E776F5FLL && a2 == 0xEC000000656C646ELL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E696769726F5FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_24E42DDF8@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = v1;
  uint64_t v59 = a1;
  uint64_t v3 = sub_24E474908();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_24E474918();
  uint64_t v49 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  long long v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E4748E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC170);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC178);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24E474668();
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v52 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24E474818();
  uint64_t v57 = *(void *)(v19 - 8);
  uint64_t v58 = v19;
  MEMORY[0x270FA5388](v19);
  int v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24E474978();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  int v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2)
  {
    if (*v2 == 1)
    {
      uint64_t v27 = v23;
      uint64_t v46 = v23;
      uint64_t v47 = v24;
      uint64_t v28 = v24;
      sub_24E474938();
      sub_24E474808();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v15, 1, 1, v27);
      uint64_t v29 = sub_24E4749A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
      long long v48 = v18;
      sub_24E474658();
      uint64_t v30 = *MEMORY[0x263F07780];
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
      uint64_t v45 = v6;
      v31(v9, v30, v6);
      uint64_t v33 = v49;
      uint64_t v32 = v50;
      uint64_t v34 = v54;
      (*(void (**)(char *, void, uint64_t))(v49 + 104))(v50, *MEMORY[0x263F07800], v54);
      uint64_t v36 = v55;
      uint64_t v35 = v56;
      uint64_t v37 = v53;
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v53, *MEMORY[0x263F077E0], v56);
      sub_24E474948();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v52);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v21, v58);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v26, v46);
    }
    long long v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    uint64_t v41 = v59;
    uint64_t v42 = 1;
  }
  else
  {
    uint64_t v39 = v59;
    sub_24E474798();
    long long v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    uint64_t v41 = v39;
    uint64_t v42 = 0;
  }
  uint64_t v43 = v58;
  return v40(v41, v42, 1, v43);
}

uint64_t FriendshipExpiration.description.getter()
{
  uint64_t v1 = 0x796144664F646E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x72657665726F66;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72756F48656E6FLL;
  }
}

FindMyLocate::FriendshipExpiration_optional __swiftcall FriendshipExpiration.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (FindMyLocate::FriendshipExpiration_optional)rawValue;
}

uint64_t FriendshipExpiration.rawValue.getter()
{
  return *v0;
}

unint64_t sub_24E42E4F8()
{
  unint64_t result = qword_2698DC1E0;
  if (!qword_2698DC1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1E0);
  }
  return result;
}

FindMyLocate::FriendshipExpiration_optional sub_24E42E54C(Swift::Int *a1)
{
  return FriendshipExpiration.init(rawValue:)(*a1);
}

uint64_t sub_24E42E554()
{
  uint64_t v1 = 0x796144664F646E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x72657665726F66;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72756F48656E6FLL;
  }
}

unsigned char *storeEnumTagSinglePayload for FriendshipExpiration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E42E67CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendshipExpiration()
{
  return &type metadata for FriendshipExpiration;
}

uint64_t sub_24E42E6B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_24E474B28();
  }
  else {
    return 0;
  }
}

double Handle.init(with:prettyName:contactIdentifier:siblingIdentifiers:)@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v49 = a4;
  uint64_t v48 = a2;
  uint64_t v11 = sub_24E474818();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a1[9];
  long long v58 = a1[8];
  long long v59 = v15;
  long long v60 = a1[10];
  long long v16 = a1[5];
  long long v54 = a1[4];
  long long v55 = v16;
  long long v17 = a1[7];
  long long v56 = a1[6];
  long long v57 = v17;
  long long v18 = a1[1];
  v52[0] = *a1;
  v52[1] = v18;
  long long v19 = a1[3];
  v52[2] = a1[2];
  long long v53 = v19;
  sub_24E43433C(*(void **)&v52[0], *((void **)&v52[0] + 1));
  uint64_t v47 = sub_24E474AC8();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)&v60 + 1);
  uint64_t v23 = v60;
  uint64_t v24 = *((void *)&v53 + 1);
  swift_bridgeObjectRetain();
  uint64_t v46 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24E474808();
  sub_24E4747C8();
  double v26 = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v27 = v57;
  swift_bridgeObjectRetain();
  sub_24E377FA0((uint64_t)v52);
  int64_t v28 = *(void *)(a6 + 16);
  if (v28)
  {
    uint64_t v42 = v23;
    uint64_t v43 = v22;
    uint64_t v45 = a3;
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_24E3763D0(0, v28, 0);
    uint64_t v29 = v51;
    uint64_t v44 = a6;
    uint64_t v30 = a6 + 40;
    do
    {
      uint64_t v31 = sub_24E474AC8();
      uint64_t v33 = v32;
      uint64_t v51 = v29;
      unint64_t v35 = *(void *)(v29 + 16);
      unint64_t v34 = *(void *)(v29 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_24E3763D0(v34 > 1, v35 + 1, 1);
        uint64_t v29 = v51;
      }
      v30 += 16;
      *(void *)(v29 + 16) = v35 + 1;
      uint64_t v36 = v29 + 16 * v35;
      *(void *)(v36 + 32) = v31;
      *(void *)(v36 + 40) = v33;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v50;
    uint64_t v38 = v49;
    a3 = v45;
    uint64_t v22 = v43;
    uint64_t v23 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x263F8EE78];
    uint64_t v37 = v50;
    uint64_t v38 = v49;
  }
  uint64_t v39 = v47;
  *(void *)a7 = v47;
  *(void *)(a7 + 8) = v21;
  *(void *)(a7 + 16) = v39;
  *(void *)(a7 + 24) = v21;
  *(unsigned char *)(a7 + 32) = 0;
  *(void *)(a7 + 40) = 0;
  *(void *)(a7 + 48) = 0;
  *(void *)(a7 + 56) = v46;
  *(double *)(a7 + 64) = floor(v26 * 1000.0);
  double result = 0.0;
  *(_OWORD *)(a7 + 72) = 0u;
  *(_OWORD *)(a7 + 88) = 0u;
  *(unsigned char *)(a7 + 104) = 1;
  uint64_t v41 = v48;
  *(void *)(a7 + 112) = v27;
  *(void *)(a7 + 120) = v41;
  *(void *)(a7 + 128) = a3;
  *(void *)(a7 + 136) = v38;
  *(void *)(a7 + 144) = v37;
  *(void *)(a7 + 152) = v29;
  *(void *)(a7 + 160) = v23;
  *(void *)(a7 + 168) = v22;
  return result;
}

unint64_t HandleType.description.getter()
{
  unint64_t result = 0x65776F6C6C6F662ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x69776F6C6C6F662ELL;
      break;
    case 2:
      unint64_t result = 0x466572757475662ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x676E69646E65702ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t IDSStatus.rawValue.getter()
{
  return *v0 - 1;
}

uint64_t sub_24E42EB18()
{
  return sub_24E475268();
}

uint64_t sub_24E42EB60()
{
  return sub_24E475238();
}

uint64_t sub_24E42EB90()
{
  return sub_24E475268();
}

uint64_t HandleType.hash(into:)()
{
  return sub_24E475238();
}

void sub_24E42EC14(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24E42EC20(uint64_t a1)
{
  unint64_t v2 = sub_24E377330();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42EC5C(uint64_t a1)
{
  unint64_t v2 = sub_24E377330();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E42EC98(uint64_t a1)
{
  unint64_t v2 = sub_24E377384();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42ECD4(uint64_t a1)
{
  unint64_t v2 = sub_24E377384();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E42ED10(uint64_t a1)
{
  unint64_t v2 = sub_24E3773D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42ED4C(uint64_t a1)
{
  unint64_t v2 = sub_24E3773D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E42ED88(uint64_t a1)
{
  unint64_t v2 = sub_24E43481C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42EDC4(uint64_t a1)
{
  unint64_t v2 = sub_24E43481C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E42EE00(uint64_t a1)
{
  unint64_t v2 = sub_24E4347C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42EE3C(uint64_t a1)
{
  unint64_t v2 = sub_24E4347C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E42EE78(uint64_t a1)
{
  unint64_t v2 = sub_24E434774();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42EEB4(uint64_t a1)
{
  unint64_t v2 = sub_24E434774();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HandleType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87A8);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87B8);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87B0);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86D0);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87A0);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8798);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E377330();
  sub_24E4752A8();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_24E3773D8();
      uint64_t v21 = v39;
      sub_24E475088();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_24E43481C();
      uint64_t v22 = v29;
      uint64_t v21 = v39;
      sub_24E475088();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_24E4347C8();
      uint64_t v22 = v32;
      uint64_t v21 = v39;
      sub_24E475088();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_24E434774();
      uint64_t v22 = v35;
      uint64_t v21 = v39;
      sub_24E475088();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_24E377384();
      uint64_t v19 = v39;
      sub_24E475088();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

uint64_t HandleType.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E42F480(void *a1)
{
  return HandleType.encode(to:)(a1);
}

uint64_t Handle.qualifiedIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void Handle.idsStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t Handle.dsid.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.hashedDSID.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.favoriteOrder.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.reachable.getter()
{
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t Handle.pushIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Handle.prettyName.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.contactIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.siblingIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Handle.serverIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.hash(into:)()
{
  sub_24E474AC8();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E42F6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E435634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E42F6D4(uint64_t a1)
{
  unint64_t v2 = sub_24E37C860();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42F710(uint64_t a1)
{
  unint64_t v2 = sub_24E37C860();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Handle.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E42F7B4()
{
  return sub_24E475268();
}

uint64_t sub_24E42F81C()
{
  sub_24E474AC8();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E42F870()
{
  uint64_t v0 = sub_24E4749E8();
  __swift_allocate_value_buffer(v0, qword_2698ED8B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698ED8B8);
  return sub_24E4749D8();
}

FindMyLocate::PersonHandle __swiftcall PersonHandle.init(id:)(FindMyLocate::PersonHandle id)
{
  FindMyLocate::PersonHandle *v1 = id;
  return id;
}

uint64_t PersonHandle.email.getter()
{
  uint64_t v1 = *v0;
  sub_24E37AFE4();
  if ((sub_24E474E28() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersonHandle.phoneNumber.getter()
{
  v17[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *v0;
  v17[0] = 0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08770]), sel_initWithTypes_error_, 2048, v17);
  if (!v2)
  {
    id v9 = v17[0];
    uint64_t v10 = (void *)sub_24E4746F8();

    swift_willThrow();
    if (qword_2698DA6A0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24E4749E8();
    __swift_project_value_buffer(v11, (uint64_t)qword_2698ED8B8);
    uint64_t v12 = sub_24E4749C8();
    os_log_type_t v13 = sub_24E474D88();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_24E36C000, v12, v13, "Failed to create PhoneNumbersDetector", v14, 2u);
      MEMORY[0x25333BB40](v14, -1, -1);
    }

    return 0;
  }
  uint64_t v3 = v2;
  id v4 = v17[0];
  uint64_t v5 = (void *)sub_24E474A78();
  id v6 = objc_msgSend(v3, sel_matchesInString_options_range_, v5, 0, 0, sub_24E474AE8());

  sub_24E3851A0();
  unint64_t v7 = sub_24E474BD8();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24E474F68();

    swift_bridgeObjectRelease_n();
    if (v16) {
      goto LABEL_4;
    }
    return 0;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();

  if (!v8) {
    return 0;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersonHandle.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t static PersonHandle.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E475148();
  }
}

uint64_t sub_24E42FC54()
{
  return 25705;
}

uint64_t sub_24E42FC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E42FCE0(uint64_t a1)
{
  unint64_t v2 = sub_24E4348C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E42FD1C(uint64_t a1)
{
  unint64_t v2 = sub_24E4348C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PersonHandle.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E42FDB4()
{
  return sub_24E475268();
}

uint64_t sub_24E42FE10()
{
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E42FE68()
{
  return sub_24E475268();
}

uint64_t sub_24E42FEC0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E475148();
  }
}

uint64_t PersonHandle.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC200);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E4348C4();
  sub_24E4752A8();
  sub_24E4750C8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PersonHandle.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC210);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E4348C4();
  sub_24E475288();
  if (!v2)
  {
    uint64_t v9 = sub_24E475018();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E430198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonHandle.init(from:)(a1, a2);
}

uint64_t sub_24E4301B0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC200);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E4348C4();
  sub_24E4752A8();
  sub_24E4750C8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PersonHandle.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24E430318()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24E430348(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC268);
  int v43 = a2;
  uint64_t v9 = sub_24E474F88();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_24E3C2B14(v30, (uint64_t)v7, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    }
    else
    {
      sub_24E435C48(v30, (uint64_t)v7, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      swift_bridgeObjectRetain();
    }
    sub_24E475228();
    sub_24E474AD8();
    uint64_t result = sub_24E475268();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_24E3C2B14((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24E430728(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8828);
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E474878();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EC8);
  int v50 = a2;
  uint64_t v12 = sub_24E474F88();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  char v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  unint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    uint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_24E36F740(&qword_26B1B7E20, MEMORY[0x263F07508]);
    uint64_t result = sub_24E474A18();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_24E430C28(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Location();
  uint64_t v61 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v77 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB008);
  int v62 = a2;
  uint64_t v8 = sub_24E474F88();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    long long v57 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    long long v59 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v58 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    uint64_t v60 = v7;
    while (1)
    {
      if (v13)
      {
        unint64_t v26 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v27 = v26 | (v16 << 6);
      }
      else
      {
        int64_t v28 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v28 >= v58) {
          goto LABEL_34;
        }
        unint64_t v29 = v59[v28];
        ++v16;
        if (!v29)
        {
          int64_t v16 = v28 + 1;
          if (v28 + 1 >= v58) {
            goto LABEL_34;
          }
          unint64_t v29 = v59[v16];
          if (!v29)
          {
            int64_t v30 = v28 + 2;
            if (v30 >= v58)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v57;
              if (v62)
              {
                uint64_t v56 = 1 << *(unsigned char *)(v7 + 32);
                if (v56 >= 64) {
                  bzero(v59, ((unint64_t)(v56 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v59 = -1 << v56;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v29 = v59[v30];
            if (!v29)
            {
              while (1)
              {
                int64_t v16 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v58) {
                  goto LABEL_34;
                }
                unint64_t v29 = v59[v16];
                ++v30;
                if (v29) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v30;
          }
        }
LABEL_21:
        unint64_t v13 = (v29 - 1) & v29;
        unint64_t v27 = __clz(__rbit64(v29)) + (v16 << 6);
      }
      int64_t v76 = v16;
      if (v62)
      {
        uint64_t v31 = *(void *)(v7 + 56);
        uint64_t v32 = *(void *)(v7 + 48) + 176 * v27;
        uint64_t v33 = *(void *)v32;
        uint64_t v34 = *(void *)(v32 + 8);
        uint64_t v36 = *(void *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 24);
        char v37 = *(unsigned char *)(v32 + 32);
        uint64_t v64 = *(void *)(v32 + 40);
        uint64_t v63 = *(void *)(v32 + 48);
        uint64_t v65 = *(void *)(v32 + 56);
        uint64_t v38 = *(void *)(v32 + 64);
        uint64_t v67 = *(void *)(v32 + 72);
        uint64_t v66 = *(void *)(v32 + 80);
        uint64_t v69 = *(void *)(v32 + 88);
        uint64_t v68 = *(void *)(v32 + 96);
        int v70 = *(unsigned __int8 *)(v32 + 104);
        long long v71 = *(_OWORD *)(v32 + 112);
        long long v72 = *(_OWORD *)(v32 + 128);
        long long v73 = *(_OWORD *)(v32 + 144);
        uint64_t v39 = *(void *)(v61 + 72);
        uint64_t v75 = *(void *)(v32 + 160);
        uint64_t v74 = *(void *)(v32 + 168);
        sub_24E3C2B14(v31 + v39 * v27, v77, (uint64_t (*)(void))type metadata accessor for Location);
      }
      else
      {
        uint64_t v40 = (long long *)(*(void *)(v7 + 48) + 176 * v27);
        long long v41 = v40[3];
        long long v42 = v40[4];
        long long v43 = v40[6];
        long long v83 = v40[5];
        long long v84 = v43;
        long long v81 = v41;
        long long v82 = v42;
        long long v44 = v40[7];
        long long v45 = v40[8];
        long long v46 = v40[10];
        long long v87 = v40[9];
        long long v88 = v46;
        long long v85 = v44;
        long long v86 = v45;
        long long v48 = v40[1];
        long long v47 = v40[2];
        long long v78 = *v40;
        long long v79 = v48;
        long long v80 = v47;
        uint64_t v39 = *(void *)(v61 + 72);
        sub_24E435C48(*(void *)(v7 + 56) + v39 * v27, v77, (uint64_t (*)(void))type metadata accessor for Location);
        uint64_t v74 = *((void *)&v88 + 1);
        uint64_t v75 = v88;
        long long v73 = v87;
        long long v72 = v86;
        long long v71 = v85;
        int v70 = BYTE8(v84);
        uint64_t v69 = *((void *)&v83 + 1);
        uint64_t v68 = v84;
        uint64_t v67 = *((void *)&v82 + 1);
        uint64_t v66 = v83;
        uint64_t v38 = v82;
        uint64_t v65 = *((void *)&v81 + 1);
        uint64_t v64 = *((void *)&v80 + 1);
        uint64_t v63 = v81;
        char v37 = v80;
        uint64_t v35 = *((void *)&v79 + 1);
        uint64_t v36 = v79;
        uint64_t v34 = *((void *)&v78 + 1);
        uint64_t v33 = v78;
        sub_24E3776C8((uint64_t)&v78);
      }
      sub_24E475228();
      sub_24E474AC8();
      sub_24E474AD8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24E475268();
      uint64_t v49 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v50 = result & ~v49;
      unint64_t v51 = v50 >> 6;
      if (((-1 << v50) & ~*(void *)(v14 + 8 * (v50 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v50) & ~*(void *)(v14 + 8 * (v50 >> 6)))) | v50 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v52 = 0;
        unint64_t v53 = (unint64_t)(63 - v49) >> 6;
        do
        {
          if (++v51 == v53 && (v52 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v54 = v51 == v53;
          if (v51 == v53) {
            unint64_t v51 = 0;
          }
          v52 |= v54;
          uint64_t v55 = *(void *)(v14 + 8 * v51);
        }
        while (v55 == -1);
        unint64_t v17 = __clz(__rbit64(~v55)) + (v51 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v9 + 48) + 176 * v17;
      *(void *)uint64_t v18 = v33;
      *(void *)(v18 + 8) = v34;
      *(void *)(v18 + 16) = v36;
      *(void *)(v18 + 24) = v35;
      *(unsigned char *)(v18 + 32) = v37;
      uint64_t v19 = v63;
      *(void *)(v18 + 40) = v64;
      *(void *)(v18 + 48) = v19;
      *(void *)(v18 + 56) = v65;
      *(void *)(v18 + 64) = v38;
      uint64_t v20 = v66;
      *(void *)(v18 + 72) = v67;
      *(void *)(v18 + 80) = v20;
      uint64_t v21 = v68;
      *(void *)(v18 + 88) = v69;
      *(void *)(v18 + 96) = v21;
      *(unsigned char *)(v18 + 104) = v70;
      uint64_t v22 = *((void *)&v71 + 1);
      *(void *)(v18 + 112) = v71;
      *(void *)(v18 + 120) = v22;
      uint64_t v23 = *((void *)&v72 + 1);
      *(void *)(v18 + 128) = v72;
      *(void *)(v18 + 136) = v23;
      uint64_t v24 = *((void *)&v73 + 1);
      *(void *)(v18 + 144) = v73;
      *(void *)(v18 + 152) = v24;
      uint64_t v25 = v74;
      *(void *)(v18 + 160) = v75;
      *(void *)(v18 + 168) = v25;
      uint64_t result = sub_24E3C2B14(v77, *(void *)(v9 + 56) + v39 * v17, (uint64_t (*)(void))type metadata accessor for Location);
      ++*(void *)(v9 + 16);
      uint64_t v7 = v60;
      int64_t v16 = v76;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_24E431348(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v84 = sub_24E474818();
  uint64_t v5 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  long long v83 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC260);
  int v67 = a2;
  uint64_t v8 = sub_24E474F88();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v61 = v2;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v63 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v62 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v64 = v5 + 16;
  uint64_t v66 = v5;
  uint64_t v68 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  uint64_t v65 = v7;
  while (1)
  {
    if (v13)
    {
      unint64_t v26 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v27 = v26 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v28 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v62) {
      break;
    }
    unint64_t v29 = v63;
    unint64_t v30 = v63[v28];
    ++v16;
    if (!v30)
    {
      int64_t v16 = v28 + 1;
      if (v28 + 1 >= v62) {
        goto LABEL_34;
      }
      unint64_t v30 = v63[v16];
      if (!v30)
      {
        int64_t v31 = v28 + 2;
        if (v31 >= v62)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v61;
          goto LABEL_36;
        }
        unint64_t v30 = v63[v31];
        if (!v30)
        {
          while (1)
          {
            int64_t v16 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v62) {
              goto LABEL_34;
            }
            unint64_t v30 = v63[v16];
            ++v31;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v31;
      }
    }
LABEL_21:
    unint64_t v13 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v16 << 6);
LABEL_22:
    int64_t v82 = v16;
    if (v67)
    {
      uint64_t v32 = *(void *)(v7 + 56);
      uint64_t v33 = *(void *)(v7 + 48) + 176 * v27;
      uint64_t v35 = *(void *)v33;
      uint64_t v34 = *(void *)(v33 + 8);
      uint64_t v36 = *(void *)(v33 + 16);
      uint64_t v37 = *(void *)(v33 + 24);
      char v38 = *(unsigned char *)(v33 + 32);
      uint64_t v70 = *(void *)(v33 + 40);
      uint64_t v69 = *(void *)(v33 + 48);
      uint64_t v71 = *(void *)(v33 + 56);
      uint64_t v39 = *(void *)(v33 + 64);
      uint64_t v73 = *(void *)(v33 + 72);
      uint64_t v72 = *(void *)(v33 + 80);
      uint64_t v75 = *(void *)(v33 + 88);
      uint64_t v74 = *(void *)(v33 + 96);
      int v76 = *(unsigned __int8 *)(v33 + 104);
      long long v77 = *(_OWORD *)(v33 + 112);
      long long v78 = *(_OWORD *)(v33 + 128);
      long long v79 = *(_OWORD *)(v33 + 144);
      uint64_t v41 = *(void *)(v33 + 160);
      uint64_t v40 = *(void *)(v33 + 168);
      uint64_t v81 = v41;
      uint64_t v80 = v40;
      uint64_t v42 = *(void *)(v66 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 32))(v83, v32 + v42 * v27, v84);
    }
    else
    {
      long long v43 = (long long *)(*(void *)(v7 + 48) + 176 * v27);
      long long v44 = v43[3];
      long long v45 = v43[4];
      long long v46 = v43[6];
      long long v90 = v43[5];
      long long v91 = v46;
      long long v88 = v44;
      long long v89 = v45;
      long long v47 = v43[7];
      long long v48 = v43[8];
      long long v49 = v43[10];
      long long v94 = v43[9];
      long long v95 = v49;
      long long v92 = v47;
      long long v93 = v48;
      long long v51 = v43[1];
      long long v50 = v43[2];
      long long v85 = *v43;
      long long v86 = v51;
      long long v87 = v50;
      uint64_t v42 = *(void *)(v66 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v83, *(void *)(v7 + 56) + v42 * v27, v84);
      uint64_t v80 = *((void *)&v95 + 1);
      uint64_t v81 = v95;
      long long v79 = v94;
      long long v78 = v93;
      long long v77 = v92;
      int v76 = BYTE8(v91);
      uint64_t v75 = *((void *)&v90 + 1);
      uint64_t v74 = v91;
      uint64_t v73 = *((void *)&v89 + 1);
      uint64_t v72 = v90;
      uint64_t v39 = v89;
      uint64_t v71 = *((void *)&v88 + 1);
      uint64_t v70 = *((void *)&v87 + 1);
      uint64_t v69 = v88;
      char v38 = v87;
      uint64_t v37 = *((void *)&v86 + 1);
      uint64_t v36 = v86;
      uint64_t v34 = *((void *)&v85 + 1);
      uint64_t v35 = v85;
      sub_24E3776C8((uint64_t)&v85);
    }
    sub_24E475228();
    sub_24E474AC8();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24E475268();
    uint64_t v52 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v53 = result & ~v52;
    unint64_t v54 = v53 >> 6;
    if (((-1 << v53) & ~*(void *)(v14 + 8 * (v53 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v53) & ~*(void *)(v14 + 8 * (v53 >> 6)))) | v53 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v55 = 0;
      unint64_t v56 = (unint64_t)(63 - v52) >> 6;
      do
      {
        if (++v54 == v56 && (v55 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v57 = v54 == v56;
        if (v54 == v56) {
          unint64_t v54 = 0;
        }
        v55 |= v57;
        uint64_t v58 = *(void *)(v14 + 8 * v54);
      }
      while (v58 == -1);
      unint64_t v17 = __clz(__rbit64(~v58)) + (v54 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v9 + 48) + 176 * v17;
    *(void *)uint64_t v18 = v35;
    *(void *)(v18 + 8) = v34;
    *(void *)(v18 + 16) = v36;
    *(void *)(v18 + 24) = v37;
    *(unsigned char *)(v18 + 32) = v38;
    uint64_t v19 = v69;
    *(void *)(v18 + 40) = v70;
    *(void *)(v18 + 48) = v19;
    *(void *)(v18 + 56) = v71;
    *(void *)(v18 + 64) = v39;
    uint64_t v20 = v72;
    *(void *)(v18 + 72) = v73;
    *(void *)(v18 + 80) = v20;
    uint64_t v21 = v74;
    *(void *)(v18 + 88) = v75;
    *(void *)(v18 + 96) = v21;
    *(unsigned char *)(v18 + 104) = v76;
    uint64_t v22 = *((void *)&v77 + 1);
    *(void *)(v18 + 112) = v77;
    *(void *)(v18 + 120) = v22;
    uint64_t v23 = *((void *)&v78 + 1);
    *(void *)(v18 + 128) = v78;
    *(void *)(v18 + 136) = v23;
    uint64_t v24 = *((void *)&v79 + 1);
    *(void *)(v18 + 144) = v79;
    *(void *)(v18 + 152) = v24;
    uint64_t v25 = v80;
    *(void *)(v18 + 160) = v81;
    *(void *)(v18 + 168) = v25;
    uint64_t result = (*v68)(*(void *)(v9 + 56) + v42 * v17, v83, v84);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v65;
    int64_t v16 = v82;
  }
  swift_release();
  uint64_t v3 = v61;
  unint64_t v29 = v63;
LABEL_36:
  if (v67)
  {
    uint64_t v59 = 1 << *(unsigned char *)(v7 + 32);
    if (v59 >= 64) {
      bzero(v29, ((unint64_t)(v59 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v29 = -1 << v59;
    }
    *(void *)(v7 + 16) = 0;
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_24E431AB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7ED0);
  char v37 = a2;
  uint64_t v6 = sub_24E474F88();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v35) {
          goto LABEL_36;
        }
        unint64_t v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v35) {
            goto LABEL_36;
          }
          unint64_t v19 = v36[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_36:
              swift_release();
              uint64_t v3 = v2;
              if (v37)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v13 >= v35) {
                  goto LABEL_36;
                }
                unint64_t v19 = v36[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48) + 32 * v17;
      char v22 = *(unsigned char *)v21;
      uint64_t v24 = *(void *)(v21 + 8);
      uint64_t v23 = *(void *)(v21 + 16);
      uint64_t v25 = *(void *)(v21 + 24);
      uint64_t v26 = *(void *)(v5 + 56) + 8 * v17;
      if (v37)
      {
        sub_24E3C2AB8(v26, (uint64_t)v38);
      }
      else
      {
        sub_24E435BEC(v26, (uint64_t)v38);
        swift_bridgeObjectRetain();
      }
      sub_24E475228();
      sub_24E475238();
      sub_24E475238();
      sub_24E475248();
      if (v25)
      {
        swift_bridgeObjectRetain();
        sub_24E474AD8();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_24E475268();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v7 + 48) + 32 * v14;
      *(unsigned char *)uint64_t v15 = v22;
      *(void *)(v15 + 8) = v24;
      *(void *)(v15 + 16) = v23;
      *(void *)(v15 + 24) = v25;
      uint64_t result = sub_24E3C2AB8((uint64_t)v38, *(void *)(v7 + 56) + 8 * v14);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_24E431E18(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24E474E48();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24E475228();
        swift_bridgeObjectRetain();
        sub_24E474AD8();
        uint64_t v9 = sub_24E475268();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        int64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0) - 8)
                        + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E432028(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E474878();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_24E474E48();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      char v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      char v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_24E36F740(&qword_26B1B7E20, MEMORY[0x263F07508]);
        uint64_t v19 = sub_24E474A18();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8828) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    unint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *unint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E432374(unint64_t a1, uint64_t a2)
{
  return sub_24E4323A4(a1, a2, (uint64_t (*)(void))type metadata accessor for Location);
}

unint64_t sub_24E43238C(unint64_t a1, uint64_t a2)
{
  return sub_24E4323A4(a1, a2, MEMORY[0x263F07490]);
}

unint64_t sub_24E4323A4(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    unint64_t result = sub_24E474E48();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v9 = (result + 1) & v8;
      while (1)
      {
        uint64_t v10 = (_OWORD *)(*(void *)(a2 + 48) + 176 * v7);
        long long v12 = v10[1];
        long long v11 = v10[2];
        v37[0] = *v10;
        v37[1] = v12;
        v37[2] = v11;
        long long v13 = v10[5];
        long long v14 = v10[6];
        long long v15 = v10[4];
        v37[3] = v10[3];
        v37[5] = v13;
        v37[6] = v14;
        v37[4] = v15;
        long long v16 = v10[10];
        long long v18 = v10[7];
        long long v17 = v10[8];
        v37[9] = v10[9];
        v37[10] = v16;
        v37[7] = v18;
        v37[8] = v17;
        sub_24E475228();
        sub_24E474AC8();
        sub_24E3776C8((uint64_t)v37);
        sub_24E474AD8();
        swift_bridgeObjectRelease();
        uint64_t v19 = sub_24E475268();
        unint64_t result = sub_24E377FA0((uint64_t)v37);
        unint64_t v20 = v19 & v8;
        if (v4 >= (uint64_t)v9) {
          break;
        }
        if (v20 < v9) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v21 = *(void *)(a2 + 48);
        uint64_t v22 = (char *)(v21 + 176 * v4);
        uint64_t v23 = (char *)(v21 + 176 * v7);
        if (v4 != v7 || v22 >= v23 + 176) {
          memmove(v22, v23, 0xB0uLL);
        }
        uint64_t v24 = *(void *)(a2 + 56);
        uint64_t v25 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v26 = v25 * v4;
        unint64_t result = v24 + v25 * v4;
        int64_t v27 = v25 * v7;
        unint64_t v28 = v24 + v25 * v7 + v25;
        if (v26 < v27 || result >= v28)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v26 == v27) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v8;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v20 < v9) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v20) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v30 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << result) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E432618(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24E474E48();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24E475228();
        sub_24E475238();
        unint64_t result = sub_24E475268();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          long long v11 = (unsigned char *)(v10 + v3);
          long long v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *long long v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          long long v14 = (void *)(v13 + 8 * v3);
          long long v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *long long v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    long long v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *long long v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E4327D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24E474E48();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24E475228();
        sub_24E474AD8();
        swift_bridgeObjectRelease();
        unint64_t result = sub_24E475268();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        long long v11 = (unsigned char *)(v10 + v3);
        long long v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *long long v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_24E474818() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E432A38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24E474E48();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      uint64_t v24 = v4;
      while (1)
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 32 * v6 + 24);
        sub_24E475228();
        sub_24E475238();
        sub_24E475238();
        sub_24E475248();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_24E474AD8();
        }
        uint64_t v10 = sub_24E475268();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        uint64_t v4 = v24;
        if (v11 < v8) {
          goto LABEL_13;
        }
LABEL_14:
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (_OWORD *)(v12 + 32 * v3);
        uint64_t v14 = (_OWORD *)(v12 + 32 * v6);
        if (v3 != v6 || v13 >= v14 + 2)
        {
          long long v15 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        unint64_t result = v16 + 8 * v3;
        if (v3 < (uint64_t)v6 || result >= v16 + 8 * v6 + 8)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v17 = v3 == v6;
          int64_t v3 = v6;
          if (v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      uint64_t v4 = v24;
      if (v11 < v8) {
        goto LABEL_6;
      }
LABEL_13:
      if (v3 < (uint64_t)v11) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
LABEL_21:
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_24E432C98()
{
  uint64_t v1 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
  uint64_t v27 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  int64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC268);
  uint64_t v24 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_24E474F78();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *uint64_t v24 = v6;
    return result;
  }
  unint64_t result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v25 = v4 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  int64_t v26 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = *(void *)(v27 + 72) * v14;
    sub_24E435C48(*(void *)(v4 + 56) + v19, (uint64_t)v3, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    uint64_t v20 = (void *)(*(void *)(v6 + 48) + v15);
    *uint64_t v20 = v17;
    v20[1] = v18;
    sub_24E3C2B14((uint64_t)v3, *(void *)(v6 + 56) + v19, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24E432F1C()
{
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8828);
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24E474878();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  unint64_t v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EC8);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_24E474F78();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    unint64_t result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  unint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    uint64_t v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24E4332C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Location();
  uint64_t v42 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB008);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24E474F78();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v41 = v1;
  unint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v38 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v38 >= v15) {
      goto LABEL_23;
    }
    unint64_t v39 = *(void *)(v9 + 8 * v38);
    ++v11;
    if (!v39)
    {
      int64_t v11 = v38 + 1;
      if (v38 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v39 = *(void *)(v9 + 8 * v11);
      if (!v39) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v39 - 1) & v39;
    unint64_t v17 = __clz(__rbit64(v39)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 176 * v17;
    unint64_t v19 = (long long *)(*(void *)(v5 + 48) + 176 * v17);
    long long v20 = v19[3];
    long long v21 = v19[4];
    long long v22 = v19[6];
    long long v48 = v19[5];
    long long v49 = v22;
    long long v46 = v20;
    long long v47 = v21;
    long long v23 = v19[7];
    long long v24 = v19[8];
    long long v25 = v19[10];
    long long v52 = v19[9];
    long long v53 = v25;
    long long v50 = v23;
    long long v51 = v24;
    long long v27 = v19[1];
    long long v26 = v19[2];
    long long v43 = *v19;
    long long v44 = v27;
    long long v45 = v26;
    unint64_t v28 = *(void *)(v42 + 72) * v17;
    sub_24E435C48(*(void *)(v5 + 56) + v28, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Location);
    int64_t v29 = (_OWORD *)(*(void *)(v7 + 48) + v18);
    long long v30 = v50;
    long long v31 = v51;
    long long v32 = v53;
    v29[9] = v52;
    v29[10] = v32;
    v29[7] = v30;
    v29[8] = v31;
    long long v33 = v46;
    long long v34 = v47;
    long long v35 = v49;
    void v29[5] = v48;
    v29[6] = v35;
    v29[3] = v33;
    v29[4] = v34;
    long long v37 = v44;
    long long v36 = v45;
    *int64_t v29 = v43;
    v29[1] = v37;
    v29[2] = v36;
    sub_24E3C2B14((uint64_t)v4, *(void *)(v7 + 56) + v28, (uint64_t (*)(void))type metadata accessor for Location);
    unint64_t result = (void *)sub_24E3776C8((uint64_t)&v43);
  }
  int64_t v40 = v38 + 2;
  if (v40 >= v15)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v41;
    goto LABEL_25;
  }
  unint64_t v39 = *(void *)(v9 + 8 * v40);
  if (v39)
  {
    int64_t v11 = v40;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v39 = *(void *)(v9 + 8 * v11);
    ++v40;
    if (v39) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24E4335C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E474F78();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24E433764()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24E474818();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC260);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24E474F78();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  int64_t v40 = v1;
  unint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    unint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v41 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v43 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v37 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v37 >= v42) {
      goto LABEL_23;
    }
    unint64_t v38 = *(void *)(v41 + 8 * v37);
    ++v11;
    if (!v38)
    {
      int64_t v11 = v37 + 1;
      if (v37 + 1 >= v42) {
        goto LABEL_23;
      }
      unint64_t v38 = *(void *)(v41 + 8 * v11);
      if (!v38) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v38 - 1) & v38;
    unint64_t v16 = __clz(__rbit64(v38)) + (v11 << 6);
LABEL_9:
    uint64_t v17 = 176 * v16;
    unint64_t v18 = (long long *)(*(void *)(v6 + 48) + 176 * v16);
    long long v19 = v18[3];
    long long v20 = v18[4];
    long long v21 = v18[6];
    long long v49 = v18[5];
    long long v50 = v21;
    long long v47 = v19;
    long long v48 = v20;
    long long v22 = v18[7];
    long long v23 = v18[8];
    long long v24 = v18[10];
    long long v53 = v18[9];
    long long v54 = v24;
    long long v51 = v22;
    long long v52 = v23;
    long long v26 = v18[1];
    long long v25 = v18[2];
    long long v44 = *v18;
    long long v45 = v26;
    long long v46 = v25;
    unint64_t v27 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 56) + v27, v2);
    unint64_t v28 = (_OWORD *)(*(void *)(v8 + 48) + v17);
    long long v29 = v51;
    long long v30 = v52;
    long long v31 = v54;
    v28[9] = v53;
    v28[10] = v31;
    v28[7] = v29;
    v28[8] = v30;
    long long v32 = v47;
    long long v33 = v48;
    long long v34 = v50;
    v28[5] = v49;
    v28[6] = v34;
    v28[3] = v32;
    void v28[4] = v33;
    long long v36 = v45;
    long long v35 = v46;
    *unint64_t v28 = v44;
    v28[1] = v36;
    v28[2] = v35;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 56) + v27, v5, v2);
    unint64_t result = (void *)sub_24E3776C8((uint64_t)&v44);
  }
  int64_t v39 = v37 + 2;
  if (v39 >= v42)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v40;
    goto LABEL_25;
  }
  unint64_t v38 = *(void *)(v41 + 8 * v39);
  if (v38)
  {
    int64_t v11 = v39;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v11 >= v42) {
      goto LABEL_23;
    }
    unint64_t v38 = *(void *)(v41 + 8 * v11);
    ++v39;
    if (v38) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24E433A94()
{
  uint64_t v1 = sub_24E474818();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB0C8);
  long long v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24E474F78();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *long long v22 = v7;
    return result;
  }
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24E433D20()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7ED0);
  int64_t v24 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_24E474F78();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v24 = v3;
    return result;
  }
  unint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    unint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  uint64_t v25 = v1 + 64;
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v26) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v7;
    if (!v22)
    {
      int64_t v7 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v7);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v12 = __clz(__rbit64(v22)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 32 * v12;
    uint64_t v14 = *(void *)(v1 + 48) + 32 * v12;
    char v15 = *(unsigned char *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    uint64_t v19 = 8 * v12;
    sub_24E435BEC(*(void *)(v1 + 56) + 8 * v12, (uint64_t)v27);
    uint64_t v20 = *(void *)(v3 + 48) + v13;
    *(unsigned char *)uint64_t v20 = v15;
    *(void *)(v20 + 8) = v16;
    *(void *)(v20 + 16) = v17;
    *(void *)(v20 + 24) = v18;
    sub_24E3C2AB8((uint64_t)v27, *(void *)(v3 + 56) + v19);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v7 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v7 >= v26) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v7);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24E433F18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E433F58(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E433F38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E434198(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E433F58(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC070);
  uint64_t v10 = *(void *)(type metadata accessor for Friend() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for Friend() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  int64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

uint64_t sub_24E434198(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA9D8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC258);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E474FA8();
  __break(1u);
  return result;
}

uint64_t sub_24E43433C(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24E474598();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v35 - v9;
  uint64_t v36 = (uint64_t)a1;
  unint64_t v37 = (unint64_t)a2;
  id v11 = objc_allocWithZone(MEMORY[0x263F08770]);
  v35[0] = 0;
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v11, sel_initWithTypes_error_, 2048, v35);
  if (v12)
  {
    unint64_t v13 = v12;
    id v14 = v35[0];
    char v15 = (void *)sub_24E474A78();
    id v16 = objc_msgSend(v13, sel_matchesInString_options_range_, v15, 0, 0, sub_24E474AE8());

    sub_24E3851A0();
    unint64_t v17 = sub_24E474BD8();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_24E474F68();

      swift_bridgeObjectRelease_n();
      if (!v34) {
        return v36;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

      if (!v18) {
        return v36;
      }
    }
    v35[0] = a1;
    v35[1] = a2;
    sub_24E474578();
    sub_24E474588();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v10, v4);
    sub_24E37AFE4();
    uint64_t v20 = (void *)sub_24E474E08();
    v19(v8, v4);
    swift_bridgeObjectRelease();
    v35[0] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9CA0);
    sub_24E37B038();
    uint64_t v21 = sub_24E474A38();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v36 = v21;
    unint64_t v37 = v23;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_24E42E6B4(v21, v23);
    if (v25)
    {
      if (v24 == 43 && v25 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v32 = sub_24E475148();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0) {
          sub_24E474B08();
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v26 = v35[0];
    unint64_t v27 = (void *)sub_24E4746F8();

    swift_willThrow();
    if (qword_2698DA6A0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_24E4749E8();
    __swift_project_value_buffer(v28, (uint64_t)qword_2698ED8B8);
    long long v29 = sub_24E4749C8();
    os_log_type_t v30 = sub_24E474D88();
    if (os_log_type_enabled(v29, v30))
    {
      long long v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v31 = 0;
      _os_log_impl(&dword_24E36C000, v29, v30, "Failed to create PhoneNumbersDetector", v31, 2u);
      MEMORY[0x25333BB40](v31, -1, -1);
    }
  }
  return v36;
}

unint64_t sub_24E434774()
{
  unint64_t result = qword_2698DC1E8;
  if (!qword_2698DC1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1E8);
  }
  return result;
}

unint64_t sub_24E4347C8()
{
  unint64_t result = qword_2698DC1F0;
  if (!qword_2698DC1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1F0);
  }
  return result;
}

unint64_t sub_24E43481C()
{
  unint64_t result = qword_2698DC1F8;
  if (!qword_2698DC1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC1F8);
  }
  return result;
}

unint64_t sub_24E434870()
{
  unint64_t result = qword_26B1B7C70;
  if (!qword_26B1B7C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B7C70);
  }
  return result;
}

unint64_t sub_24E4348C4()
{
  unint64_t result = qword_2698DC208;
  if (!qword_2698DC208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC208);
  }
  return result;
}

unint64_t sub_24E43491C()
{
  unint64_t result = qword_2698DC218;
  if (!qword_2698DC218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC218);
  }
  return result;
}

unint64_t sub_24E434974()
{
  unint64_t result = qword_2698DC220;
  if (!qword_2698DC220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC220);
  }
  return result;
}

unint64_t sub_24E4349CC()
{
  unint64_t result = qword_2698DC228;
  if (!qword_2698DC228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC228);
  }
  return result;
}

uint64_t assignWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeBufferWithCopyOfBuffer for PersonHandle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PersonHandle()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PersonHandle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PersonHandle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonHandle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonHandle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHandle()
{
  return &type metadata for PersonHandle;
}

unsigned char *storeEnumTagSinglePayload for PersonHandle.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E434EA8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHandle.CodingKeys()
{
  return &type metadata for PersonHandle.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Handle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E434FACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandleType.CodingKeys()
{
  return &type metadata for HandleType.CodingKeys;
}

ValueMetadata *type metadata accessor for HandleType.FollowerCodingKeys()
{
  return &type metadata for HandleType.FollowerCodingKeys;
}

ValueMetadata *type metadata accessor for HandleType.FollowingCodingKeys()
{
  return &type metadata for HandleType.FollowingCodingKeys;
}

ValueMetadata *type metadata accessor for HandleType.FutureFollowerCodingKeys()
{
  return &type metadata for HandleType.FutureFollowerCodingKeys;
}

ValueMetadata *type metadata accessor for HandleType.FutureFollowingCodingKeys()
{
  return &type metadata for HandleType.FutureFollowingCodingKeys;
}

ValueMetadata *type metadata accessor for HandleType.PendingOfferCodingKeys()
{
  return &type metadata for HandleType.PendingOfferCodingKeys;
}

unint64_t sub_24E435060()
{
  unint64_t result = qword_2698DC230;
  if (!qword_2698DC230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC230);
  }
  return result;
}

unint64_t sub_24E4350B8()
{
  unint64_t result = qword_2698DC238;
  if (!qword_2698DC238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC238);
  }
  return result;
}

unint64_t sub_24E435110()
{
  unint64_t result = qword_2698DC240;
  if (!qword_2698DC240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC240);
  }
  return result;
}

unint64_t sub_24E435168()
{
  unint64_t result = qword_2698DC248;
  if (!qword_2698DC248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC248);
  }
  return result;
}

unint64_t sub_24E4351C0()
{
  unint64_t result = qword_2698DC250;
  if (!qword_2698DC250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC250);
  }
  return result;
}

unint64_t sub_24E435218()
{
  unint64_t result = qword_26B1B8AA0;
  if (!qword_26B1B8AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AA0);
  }
  return result;
}

unint64_t sub_24E435270()
{
  unint64_t result = qword_26B1B8A98;
  if (!qword_26B1B8A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8A98);
  }
  return result;
}

unint64_t sub_24E4352C8()
{
  unint64_t result = qword_26B1B8AB0;
  if (!qword_26B1B8AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AB0);
  }
  return result;
}

unint64_t sub_24E435320()
{
  unint64_t result = qword_26B1B8AA8;
  if (!qword_26B1B8AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AA8);
  }
  return result;
}

unint64_t sub_24E435378()
{
  unint64_t result = qword_26B1B8AD0;
  if (!qword_26B1B8AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AD0);
  }
  return result;
}

unint64_t sub_24E4353D0()
{
  unint64_t result = qword_26B1B8AC8;
  if (!qword_26B1B8AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AC8);
  }
  return result;
}

unint64_t sub_24E435428()
{
  unint64_t result = qword_26B1B8AE0;
  if (!qword_26B1B8AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AE0);
  }
  return result;
}

unint64_t sub_24E435480()
{
  unint64_t result = qword_26B1B8AD8;
  if (!qword_26B1B8AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AD8);
  }
  return result;
}

unint64_t sub_24E4354D8()
{
  unint64_t result = qword_26B1B8AC0;
  if (!qword_26B1B8AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AC0);
  }
  return result;
}

unint64_t sub_24E435530()
{
  unint64_t result = qword_26B1B8AB8;
  if (!qword_26B1B8AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AB8);
  }
  return result;
}

unint64_t sub_24E435588()
{
  unint64_t result = qword_26B1B8A90;
  if (!qword_26B1B8A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8A90);
  }
  return result;
}

unint64_t sub_24E4355E0()
{
  unint64_t result = qword_26B1B8A88;
  if (!qword_26B1B8A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8A88);
  }
  return result;
}

uint64_t sub_24E435634(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024E4781E0 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7574617453736469 && a2 == 0xE900000000000073 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684632420 && a2 == 0xE400000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E478200 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024E478220 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5344646568736168 && a2 == 0xEA00000000004449 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xED0000726564724FLL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C62616863616572 && a2 == 0xE900000000000065 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E65644968737570 && a2 == 0xEF73726569666974 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x614E797474657270 && a2 == 0xEA0000000000656DLL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024E478240 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024E478260 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E478280)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v5 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v5) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_24E435BEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24E435C48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void LocatePriority.schedulePriority.getter(char *a1@<X8>)
{
  if (*v1 == 2) {
    char v2 = 2;
  }
  else {
    char v2 = 1;
  }
  *a1 = v2;
}

unint64_t LocatePriority.description.getter()
{
  unint64_t result = 0x776F6C6C6168732ELL;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6576696C2ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      unint64_t result = 0xD000000000000015;
      break;
  }
  return result;
}

void *static LocatePriority.allCases.getter()
{
  return &unk_270043F98;
}

unint64_t sub_24E435D78()
{
  unint64_t result = qword_2698DC270;
  if (!qword_2698DC270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698DC278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC270);
  }
  return result;
}

void sub_24E435DD4(void *a1@<X8>)
{
  *a1 = &unk_270043FC0;
}

uint64_t Location.date.getter()
{
  type metadata accessor for Location();
  return sub_24E4747B8();
}

uint64_t Location.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void *Location.address.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Location();
  sub_24E382FF0(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_24E382FF0((uint64_t)v5, a1);
  return sub_24E3DC514(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24E3830C4);
}

double Location.altitude.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 24));
}

uint64_t Location.floorLevel.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Location() + 28));
}

double Location.horizontalAccuracy.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 32));
}

uint64_t Location.labels.getter()
{
  type metadata accessor for Location();
  return swift_bridgeObjectRetain();
}

double Location.latitude.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 40));
}

double Location.longitude.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 44));
}

double Location.speed.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 48));
}

double Location.timestamp.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 52));
}

double Location.verticalAccuracy.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 56));
}

uint64_t Location.locationType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Location();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t Location.motionActivityState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Location();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t sub_24E4360F4()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Location() + 36));
  if (!v1[2]) {
    return 0;
  }
  uint64_t v3 = v1[4];
  char v2 = (void *)v1[5];
  swift_bridgeObjectRetain_n();
  v4._countAndFlagsBits = v3;
  v4._object = v2;
  DefaultCustomLabel.init(rawValue:)(v4);
  if (v6 != 5)
  {
    uint64_t v3 = DefaultCustomLabel.localizedLabel.getter();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t Location.description.getter()
{
  uint64_t v8 = sub_24E474818();
  uint64_t v1 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v23[0] = 0;
  *((void *)&v23[0] + 1) = 0xE000000000000000;
  sub_24E474E88();
  long long v21 = v23[0];
  sub_24E474AF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  sub_24E43812C(&qword_2698DC280);
  sub_24E475128();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  uint64_t v4 = type metadata accessor for Location();
  sub_24E382FF0(v0 + *(int *)(v4 + 20), (uint64_t)v22);
  sub_24E382FF0((uint64_t)v22, (uint64_t)v23);
  if (sub_24E3DC4F0((uint64_t)v23) != 1)
  {
    long long v17 = v23[8];
    long long v18 = v23[9];
    long long v19 = v23[10];
    long long v20 = v23[11];
    long long v13 = v23[4];
    long long v14 = v23[5];
    long long v15 = v23[6];
    long long v16 = v23[7];
    long long v9 = v23[0];
    long long v10 = v23[1];
    long long v11 = v23[2];
    long long v12 = v23[3];
    PlaceMark.description.getter();
  }
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  *(void *)&long long v9 = *(void *)(v0 + *(int *)(v4 + 28));
  sub_24E475128();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  uint64_t v5 = swift_bridgeObjectRetain();
  MEMORY[0x25333AE40](v5, MEMORY[0x263F8D310]);
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474D38();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  sub_24E474AF8();
  sub_24E4747B8();
  sub_24E474738();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v8);
  sub_24E474AF8();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t Location.coarseAddressLabel.getter()
{
  char v1 = 0;
  return Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(0, 0, 1, (FindMyLocate::Location::LabelLength)&v1).value._countAndFlagsBits;
}

Swift::String_optional __swiftcall Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(Swift::Bool includeCustomLabel, Swift::Bool includePointsOfInterest, Swift::Bool wantsCoarseAddress, FindMyLocate::Location::LabelLength maxLength)
{
  uint64_t v5 = (unsigned __int8 *)maxLength;
  long long v9 = (int *)type metadata accessor for Location();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *v5;
  int v14 = *(unsigned __int8 *)(v4 + *(int *)(v10 + 64));
  sub_24E3831BC(v4, (uint64_t)v12);
  if (v14 != 1) {
    int v14 = v12[v9[16]] == 2;
  }
  sub_24E383220((uint64_t)v12);
  if (*(unsigned char *)(v4 + v9[15]) != 2) {
    int v14 = 1;
  }
  sub_24E382FF0(v4 + v9[5], (uint64_t)v34);
  sub_24E382FF0((uint64_t)v34, (uint64_t)v35);
  if (sub_24E3DC4F0((uint64_t)v35) == 1)
  {
    uint64_t v15 = 0;
    long long v16 = 0;
    if (!v14) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v15 = v35[14];
    long long v16 = (void *)v35[15];
    swift_bridgeObjectRetain();
    if (!v14) {
      goto LABEL_17;
    }
  }
  if (includeCustomLabel)
  {
    uint64_t v17 = sub_24E4360F4();
    if (v18)
    {
      uint64_t v19 = v17;
      long long v20 = v18;
      goto LABEL_30;
    }
  }
  if (includePointsOfInterest)
  {
    sub_24E382FF0((uint64_t)v34, (uint64_t)v30);
    if (sub_24E3DC4F0((uint64_t)v30) != 1)
    {
      long long v20 = v31;
      if (v31)
      {
        uint64_t v19 = v30[16];
        swift_bridgeObjectRetain();
        goto LABEL_30;
      }
    }
  }
  if (!wantsCoarseAddress)
  {
    sub_24E382FF0((uint64_t)v34, (uint64_t)v30);
    if (sub_24E3DC4F0((uint64_t)v30) == 1)
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v19 = 0;
      long long v20 = 0;
      if (v13) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v19 = v32;
      long long v20 = v33;
      sub_24E382FF0((uint64_t)v34, (uint64_t)v29);
      uint64_t v23 = v29[20];
      uint64_t v24 = (void *)v29[21];
      uint64_t v21 = v29[22];
      unint64_t v22 = (void *)v29[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_20:
        if (v13 == 1)
        {
          swift_bridgeObjectRelease();
          if (v24)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v19 = v23;
            long long v20 = v24;
            goto LABEL_31;
          }
        }
        else
        {
          if (v22)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v19 = v21;
            long long v20 = v22;
            goto LABEL_31;
          }
          if (v24) {
            goto LABEL_22;
          }
        }
        if (v20) {
          goto LABEL_30;
        }
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_17;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_17:
  uint64_t v19 = v15;
  long long v20 = v16;
LABEL_31:
  uint64_t v25 = v19;
  id v26 = v20;
  result.value._object = v26;
  result.value._countAndFlagsBits = v25;
  return result;
}

uint64_t Location.displayAddress.getter()
{
  char v1 = 1;
  return Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(1, 1, 0, (FindMyLocate::Location::LabelLength)&v1).value._countAndFlagsBits;
}

uint64_t Location.fullAddress.getter()
{
  char v1 = 2;
  return Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(1, 1, 0, (FindMyLocate::Location::LabelLength)&v1).value._countAndFlagsBits;
}

BOOL static Location.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  return *(double *)(a1 + *(int *)(v4 + 52)) < *(double *)(a2 + *(int *)(v4 + 52));
}

uint64_t Location.hash(into:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  sub_24E43812C(&qword_2698DC288);
  sub_24E474A28();
  uint64_t v1 = type metadata accessor for Location();
  sub_24E382FF0(v0 + *(int *)(v1 + 20), (uint64_t)v7);
  sub_24E382FF0((uint64_t)v7, (uint64_t)v8);
  if (sub_24E3DC4F0((uint64_t)v8) == 1)
  {
    sub_24E475248();
  }
  else
  {
    sub_24E382FF0((uint64_t)v7, (uint64_t)&v6);
    sub_24E475248();
    PlaceMark.hash(into:)();
  }
  sub_24E475258();
  sub_24E475238();
  sub_24E475258();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 36));
  sub_24E475238();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24E474AD8();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_24E475258();
  sub_24E475258();
  sub_24E475258();
  sub_24E475258();
  sub_24E475258();
  sub_24E475238();
  return sub_24E475238();
}

unint64_t sub_24E436E2C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73736572646461;
      break;
    case 2:
      unint64_t result = 0x6564757469746C61;
      break;
    case 3:
      unint64_t result = 0x76654C726F6F6C66;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 6:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 8:
      unint64_t result = 0x6465657073;
      break;
    case 9:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24E436FE4()
{
  return sub_24E436E2C(*v0);
}

uint64_t sub_24E436FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4395D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E437014(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_24E437020(uint64_t a1)
{
  unint64_t v2 = sub_24E438030();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43705C(uint64_t a1)
{
  unint64_t v2 = sub_24E438030();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Location.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC290);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E438030();
  sub_24E4752A8();
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  sub_24E43812C(&qword_2698DC2A0);
  sub_24E475118();
  if (!v2)
  {
    long long v9 = (int *)type metadata accessor for Location();
    sub_24E382FF0(v3 + v9[5], (uint64_t)v13);
    sub_24E382FF0((uint64_t)v13, (uint64_t)v12);
    char v14 = 1;
    sub_24E41BDAC();
    sub_24E4750B8();
    LOBYTE(v12[0]) = 2;
    sub_24E4750E8();
    LOBYTE(v12[0]) = 3;
    sub_24E4750F8();
    LOBYTE(v12[0]) = 4;
    sub_24E4750E8();
    v12[0] = *(void *)(v3 + v9[9]);
    char v14 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9CA0);
    sub_24E37C7FC(&qword_26B1B8160);
    sub_24E475118();
    LOBYTE(v12[0]) = 6;
    sub_24E4750E8();
    LOBYTE(v12[0]) = 7;
    sub_24E4750E8();
    LOBYTE(v12[0]) = 8;
    sub_24E4750E8();
    LOBYTE(v12[0]) = 9;
    sub_24E4750E8();
    LOBYTE(v12[0]) = 10;
    sub_24E4750E8();
    LOBYTE(v12[0]) = *(unsigned char *)(v3 + v9[15]);
    char v14 = 11;
    sub_24E438084();
    sub_24E475118();
    LOBYTE(v12[0]) = *(unsigned char *)(v3 + v9[16]);
    char v14 = 12;
    sub_24E4380D8();
    sub_24E475118();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Location.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t Location.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC2B8);
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  long long v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v31 = (int *)type metadata accessor for Location();
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  os_log_type_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24E438030();
  id v26 = v9;
  sub_24E475288();
  uint64_t v28 = v4;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  uint64_t v24 = v7;
  v35[0] = 0;
  sub_24E43812C(&qword_2698DC2C0);
  sub_24E475068();
  long long v12 = v32;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v32, v6, v4);
  char v37 = 1;
  sub_24E41BF50();
  sub_24E475008();
  sub_24E382FF0((uint64_t)v35, (uint64_t)v34);
  int v13 = v31;
  sub_24E382FF0((uint64_t)v34, (uint64_t)&v12[v31[5]]);
  LOBYTE(v33) = 2;
  sub_24E475038();
  *(void *)&v12[v13[6]] = v14;
  LOBYTE(v33) = 3;
  *(void *)&v12[v13[7]] = sub_24E475048();
  LOBYTE(v33) = 4;
  sub_24E475038();
  *(void *)&v12[v13[8]] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9CA0);
  char v36 = 5;
  sub_24E37C7FC(&qword_26B1B7C90);
  sub_24E475068();
  *(void *)&v12[v13[9]] = v33;
  LOBYTE(v33) = 6;
  sub_24E475038();
  *(void *)&v12[v13[10]] = v16;
  LOBYTE(v33) = 7;
  sub_24E475038();
  *(void *)&v12[v13[11]] = v17;
  LOBYTE(v33) = 8;
  sub_24E475038();
  *(void *)&v12[v13[12]] = v18;
  LOBYTE(v33) = 9;
  sub_24E475038();
  *(void *)&v32[v31[13]] = v19;
  LOBYTE(v33) = 10;
  sub_24E475038();
  *(void *)&v32[v31[14]] = v20;
  char v36 = 11;
  sub_24E438174();
  sub_24E475068();
  v32[v31[15]] = v33;
  char v36 = 12;
  sub_24E4381C8();
  sub_24E475068();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
  uint64_t v21 = (uint64_t)v32;
  v32[v31[16]] = v33;
  sub_24E3831BC(v21, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_24E383220(v21);
}

uint64_t sub_24E437B98()
{
  return sub_24E475268();
}

uint64_t sub_24E437BDC()
{
  return sub_24E475268();
}

uint64_t sub_24E437C18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Location.init(from:)(a1, a2);
}

uint64_t sub_24E437C30(void *a1)
{
  return Location.encode(to:)(a1);
}

BOOL sub_24E437C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 52)) < *(double *)(a2 + *(int *)(a3 + 52));
}

BOOL sub_24E437C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 52)) >= *(double *)(a1 + *(int *)(a3 + 52));
}

BOOL sub_24E437C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 52)) >= *(double *)(a2 + *(int *)(a3 + 52));
}

BOOL sub_24E437C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 52)) < *(double *)(a1 + *(int *)(a3 + 52));
}

BOOL static Location.LabelLength.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Location.LabelLength.hash(into:)()
{
  return sub_24E475238();
}

uint64_t Location.LabelLength.hashValue.getter()
{
  return sub_24E475268();
}

BOOL _s12FindMyLocate8LocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for Location();
  if ((_s12FindMyLocate5FenceV2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  sub_24E382FF0(a1 + v4[5], (uint64_t)v36);
  sub_24E382FF0(a2 + v4[5], (uint64_t)v37);
  sub_24E382FF0((uint64_t)v36, (uint64_t)v38);
  if (sub_24E3DC4F0((uint64_t)v38) != 1)
  {
    sub_24E382FF0((uint64_t)v36, (uint64_t)&v22);
    sub_24E382FF0((uint64_t)v37, (uint64_t)v34);
    if (sub_24E3DC4F0((uint64_t)v34) != 1)
    {
      sub_24E382FF0((uint64_t)v37, (uint64_t)v8);
      v7[8] = v8[8];
      v7[9] = v8[9];
      v7[10] = v8[10];
      _OWORD v7[11] = v8[11];
      v7[4] = v8[4];
      v7[5] = v8[5];
      v7[6] = v8[6];
      v7[7] = v8[7];
      v7[0] = v8[0];
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      BOOL MyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0 = _s12FindMyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0(&v22, v7);
      long long v17 = v30;
      long long v18 = v31;
      long long v19 = v32;
      long long v20 = v33;
      long long v13 = v26;
      long long v14 = v27;
      long long v15 = v28;
      long long v16 = v29;
      long long v9 = v22;
      long long v10 = v23;
      long long v11 = v24;
      long long v12 = v25;
      sub_24E382FF0((uint64_t)v36, (uint64_t)v21);
      sub_24E40D1F4((uint64_t)v21);
      sub_24E40D37C((uint64_t)&v9);
      if (!MyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0) {
        return 0;
      }
      goto LABEL_9;
    }
    long long v17 = v30;
    long long v18 = v31;
    long long v19 = v32;
    long long v20 = v33;
    long long v13 = v26;
    long long v14 = v27;
    long long v15 = v28;
    long long v16 = v29;
    long long v9 = v22;
    long long v10 = v23;
    long long v11 = v24;
    long long v12 = v25;
    sub_24E382FF0((uint64_t)v36, (uint64_t)v21);
    sub_24E40D1F4((uint64_t)v21);
    sub_24E40D1F4((uint64_t)v21);
    sub_24E40D37C((uint64_t)&v9);
LABEL_7:
    sub_24E382FF0((uint64_t)v36, (uint64_t)v34);
    sub_24E382FF0((uint64_t)v37, (uint64_t)&v35);
    sub_24E3DC514(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24E3830C4);
    sub_24E439AFC(v34);
    return 0;
  }
  sub_24E382FF0((uint64_t)v37, (uint64_t)v34);
  if (sub_24E3DC4F0((uint64_t)v34) != 1) {
    goto LABEL_7;
  }
LABEL_9:
  if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])
    && *(void *)(a1 + v4[7]) == *(void *)(a2 + v4[7])
    && *(double *)(a1 + v4[8]) == *(double *)(a2 + v4[8])
    && (sub_24E43B2AC(*(void **)(a1 + v4[9]), *(void **)(a2 + v4[9])) & 1) != 0
    && *(double *)(a1 + v4[10]) == *(double *)(a2 + v4[10])
    && *(double *)(a1 + v4[11]) == *(double *)(a2 + v4[11])
    && *(double *)(a1 + v4[12]) == *(double *)(a2 + v4[12])
    && *(double *)(a1 + v4[13]) == *(double *)(a2 + v4[13])
    && *(double *)(a1 + v4[14]) == *(double *)(a2 + v4[14])
    && *(unsigned __int8 *)(a1 + v4[15]) == *(unsigned __int8 *)(a2 + v4[15]))
  {
    return *(unsigned __int8 *)(a1 + v4[16]) == *(unsigned __int8 *)(a2 + v4[16]);
  }
  return 0;
}

unint64_t sub_24E438030()
{
  unint64_t result = qword_2698DC298;
  if (!qword_2698DC298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC298);
  }
  return result;
}

unint64_t sub_24E438084()
{
  unint64_t result = qword_2698DC2A8;
  if (!qword_2698DC2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2A8);
  }
  return result;
}

unint64_t sub_24E4380D8()
{
  unint64_t result = qword_2698DC2B0;
  if (!qword_2698DC2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2B0);
  }
  return result;
}

uint64_t sub_24E43812C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698DA950);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E438174()
{
  unint64_t result = qword_2698DC2C8;
  if (!qword_2698DC2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2C8);
  }
  return result;
}

unint64_t sub_24E4381C8()
{
  unint64_t result = qword_2698DC2D0;
  if (!qword_2698DC2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2D0);
  }
  return result;
}

unint64_t sub_24E438220()
{
  unint64_t result = qword_2698DC2D8;
  if (!qword_2698DC2D8)
  {
    type metadata accessor for Location();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2D8);
  }
  return result;
}

unint64_t sub_24E43827C()
{
  unint64_t result = qword_2698DC2E0;
  if (!qword_2698DC2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2E0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Location(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    long long v9 = (char *)a1 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    if (v11 == 1)
    {
      long long v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      long long v13 = *((_OWORD *)v10 + 11);
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      *((_OWORD *)v9 + 11) = v13;
      long long v14 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v14;
      long long v15 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v15;
      long long v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)long long v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v16;
      long long v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
    }
    else
    {
      *(void *)long long v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      uint64_t v19 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v19;
      uint64_t v20 = *((void *)v10 + 5);
      *((void *)v9 + 4) = *((void *)v10 + 4);
      *((void *)v9 + 5) = v20;
      uint64_t v21 = *((void *)v10 + 7);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *((void *)v9 + 7) = v21;
      uint64_t v22 = *((void *)v10 + 9);
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v22;
      uint64_t v23 = *((void *)v10 + 11);
      *((void *)v9 + 10) = *((void *)v10 + 10);
      *((void *)v9 + 11) = v23;
      uint64_t v24 = *((void *)v10 + 13);
      *((void *)v9 + 12) = *((void *)v10 + 12);
      *((void *)v9 + 13) = v24;
      uint64_t v25 = *((void *)v10 + 15);
      *((void *)v9 + 14) = *((void *)v10 + 14);
      *((void *)v9 + 15) = v25;
      uint64_t v26 = *((void *)v10 + 17);
      *((void *)v9 + 16) = *((void *)v10 + 16);
      *((void *)v9 + 17) = v26;
      uint64_t v27 = *((void *)v10 + 19);
      *((void *)v9 + 18) = *((void *)v10 + 18);
      *((void *)v9 + 19) = v27;
      uint64_t v28 = *((void *)v10 + 21);
      *((void *)v9 + 20) = *((void *)v10 + 20);
      *((void *)v9 + 21) = v28;
      uint64_t v35 = *((void *)v10 + 23);
      *((void *)v9 + 22) = *((void *)v10 + 22);
      *((void *)v9 + 23) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v29 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
    uint64_t v30 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
    uint64_t v31 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
    uint64_t v32 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
    uint64_t v33 = a3[15];
    *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    *((unsigned char *)a1 + v33) = *((unsigned char *)a2 + v33);
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(a2 + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 144) = v11;
    long long v12 = *(_OWORD *)(v9 + 176);
    *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
    *(_OWORD *)(v8 + 176) = v12;
    long long v13 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v13;
    long long v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    long long v15 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v15;
    long long v16 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v16;
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    uint64_t v17 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v17;
    uint64_t v18 = *(void *)(v9 + 40);
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(void *)(v8 + 40) = v18;
    uint64_t v19 = *(void *)(v9 + 56);
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = v19;
    uint64_t v20 = *(void *)(v9 + 72);
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = v20;
    uint64_t v21 = *(void *)(v9 + 88);
    *(void *)(v8 + 80) = *(void *)(v9 + 80);
    *(void *)(v8 + 88) = v21;
    uint64_t v22 = *(void *)(v9 + 104);
    *(void *)(v8 + 96) = *(void *)(v9 + 96);
    *(void *)(v8 + 104) = v22;
    uint64_t v23 = *(void *)(v9 + 120);
    *(void *)(v8 + 112) = *(void *)(v9 + 112);
    *(void *)(v8 + 120) = v23;
    uint64_t v24 = *(void *)(v9 + 136);
    *(void *)(v8 + 128) = *(void *)(v9 + 128);
    *(void *)(v8 + 136) = v24;
    uint64_t v25 = *(void *)(v9 + 152);
    *(void *)(v8 + 144) = *(void *)(v9 + 144);
    *(void *)(v8 + 152) = v25;
    uint64_t v26 = *(void *)(v9 + 168);
    *(void *)(v8 + 160) = *(void *)(v9 + 160);
    *(void *)(v8 + 168) = v26;
    uint64_t v33 = *(void *)(v9 + 184);
    *(void *)(v8 + 176) = *(void *)(v9 + 176);
    *(void *)(v8 + 184) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  uint64_t v28 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v29 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  uint64_t v31 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  uint64_t v10 = *(void *)(a1 + v7 + 8);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *v9;
      long long v13 = v9[1];
      long long v14 = v9[3];
      *(_OWORD *)(v8 + 32) = v9[2];
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)uint64_t v8 = v12;
      *(_OWORD *)(v8 + 16) = v13;
      long long v15 = v9[4];
      long long v16 = v9[5];
      long long v17 = v9[7];
      *(_OWORD *)(v8 + 96) = v9[6];
      *(_OWORD *)(v8 + 112) = v17;
      *(_OWORD *)(v8 + 64) = v15;
      *(_OWORD *)(v8 + 80) = v16;
      long long v18 = v9[8];
      long long v19 = v9[9];
      long long v20 = v9[11];
      *(_OWORD *)(v8 + 160) = v9[10];
      *(_OWORD *)(v8 + 176) = v20;
      *(_OWORD *)(v8 + 128) = v18;
      *(_OWORD *)(v8 + 144) = v19;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *((void *)v9 + 1);
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      *(void *)(v8 + 24) = *((void *)v9 + 3);
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      *(void *)(v8 + 40) = *((void *)v9 + 5);
      *(void *)(v8 + 48) = *((void *)v9 + 6);
      *(void *)(v8 + 56) = *((void *)v9 + 7);
      *(void *)(v8 + 64) = *((void *)v9 + 8);
      *(void *)(v8 + 72) = *((void *)v9 + 9);
      *(void *)(v8 + 80) = *((void *)v9 + 10);
      *(void *)(v8 + 88) = *((void *)v9 + 11);
      *(void *)(v8 + 96) = *((void *)v9 + 12);
      *(void *)(v8 + 104) = *((void *)v9 + 13);
      *(void *)(v8 + 112) = *((void *)v9 + 14);
      *(void *)(v8 + 120) = *((void *)v9 + 15);
      *(void *)(v8 + 128) = *((void *)v9 + 16);
      *(void *)(v8 + 136) = *((void *)v9 + 17);
      *(void *)(v8 + 144) = *((void *)v9 + 18);
      *(void *)(v8 + 152) = *((void *)v9 + 19);
      *(void *)(v8 + 160) = *((void *)v9 + 20);
      *(void *)(v8 + 168) = *((void *)v9 + 21);
      *(void *)(v8 + 176) = *((void *)v9 + 22);
      *(void *)(v8 + 184) = *((void *)v9 + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_24E38CB9C(v8);
    long long v21 = v9[3];
    long long v23 = *v9;
    long long v22 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v21;
    *(_OWORD *)uint64_t v8 = v23;
    *(_OWORD *)(v8 + 16) = v22;
    long long v24 = v9[7];
    long long v26 = v9[4];
    long long v25 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v24;
    *(_OWORD *)(v8 + 64) = v26;
    *(_OWORD *)(v8 + 80) = v25;
    long long v27 = v9[11];
    long long v29 = v9[8];
    long long v28 = v9[9];
    *(_OWORD *)(v8 + 160) = v9[10];
    *(_OWORD *)(v8 + 176) = v27;
    *(_OWORD *)(v8 + 128) = v29;
    *(_OWORD *)(v8 + 144) = v28;
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    *(void *)(v8 + 24) = *((void *)v9 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(void *)(v8 + 40) = *((void *)v9 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 48) = *((void *)v9 + 6);
    *(void *)(v8 + 56) = *((void *)v9 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 64) = *((void *)v9 + 8);
    *(void *)(v8 + 72) = *((void *)v9 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 80) = *((void *)v9 + 10);
    *(void *)(v8 + 88) = *((void *)v9 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 96) = *((void *)v9 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 104) = *((void *)v9 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 112) = *((void *)v9 + 14);
    *(void *)(v8 + 120) = *((void *)v9 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 128) = *((void *)v9 + 16);
    *(void *)(v8 + 136) = *((void *)v9 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 144) = *((void *)v9 + 18);
    *(void *)(v8 + 152) = *((void *)v9 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 160) = *((void *)v9 + 20);
    *(void *)(v8 + 168) = *((void *)v9 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 176) = *((void *)v9 + 22);
    *(void *)(v8 + 184) = *((void *)v9 + 23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t initializeWithTake for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[3];
  void v9[2] = v10[2];
  v9[3] = v11;
  long long v12 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v12;
  long long v13 = v10[7];
  v9[6] = v10[6];
  v9[7] = v13;
  long long v14 = v10[5];
  void v9[4] = v10[4];
  v9[5] = v14;
  long long v15 = v10[11];
  v9[10] = v10[10];
  v9[11] = v15;
  long long v16 = v10[9];
  v9[8] = v10[8];
  v9[9] = v16;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t assignWithTake for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*(void *)(a1 + v7 + 8) != 1)
  {
    uint64_t v10 = v9[1];
    if (v10 != 1)
    {
      *uint64_t v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRelease();
      uint64_t v17 = v9[3];
      v8[2] = v9[2];
      v8[3] = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = v9[5];
      v8[4] = v9[4];
      v8[5] = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = v9[7];
      v8[6] = v9[6];
      v8[7] = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = v9[9];
      v8[8] = v9[8];
      v8[9] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = v9[11];
      v8[10] = v9[10];
      v8[11] = v21;
      swift_bridgeObjectRelease();
      _OWORD v8[12] = v9[12];
      swift_bridgeObjectRelease();
      v8[13] = v9[13];
      swift_bridgeObjectRelease();
      uint64_t v22 = v9[15];
      v8[14] = v9[14];
      v8[15] = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = v9[17];
      v8[16] = v9[16];
      v8[17] = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = v9[19];
      v8[18] = v9[18];
      v8[19] = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = v9[21];
      v8[20] = v9[20];
      v8[21] = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = v9[23];
      v8[22] = v9[22];
      v8[23] = v26;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24E38CB9C((uint64_t)v8);
  }
  long long v11 = *((_OWORD *)v9 + 9);
  *((_OWORD *)v8 + 8) = *((_OWORD *)v9 + 8);
  *((_OWORD *)v8 + 9) = v11;
  long long v12 = *((_OWORD *)v9 + 11);
  *((_OWORD *)v8 + 10) = *((_OWORD *)v9 + 10);
  *((_OWORD *)v8 + 11) = v12;
  long long v13 = *((_OWORD *)v9 + 5);
  *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
  *((_OWORD *)v8 + 5) = v13;
  long long v14 = *((_OWORD *)v9 + 7);
  *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
  *((_OWORD *)v8 + 7) = v14;
  long long v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  long long v16 = *((_OWORD *)v9 + 3);
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  *((_OWORD *)v8 + 3) = v16;
LABEL_6:
  uint64_t v27 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  uint64_t v28 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  uint64_t v31 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Location(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E439048);
}

uint64_t sub_24E439048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Location(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E439120);
}

uint64_t sub_24E439120(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

void sub_24E4391E0()
{
  if (!qword_26B1B9858[0])
  {
    type metadata accessor for Location();
    unint64_t v0 = sub_24E4743E8();
    if (!v1) {
      atomic_store(v0, qword_26B1B9858);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Location.LabelLength(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E439304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Location.LabelLength()
{
  return &type metadata for Location.LabelLength;
}

uint64_t getEnumTagSinglePayload for Location.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Location.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E439498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Location.CodingKeys()
{
  return &type metadata for Location.CodingKeys;
}

unint64_t sub_24E4394D4()
{
  unint64_t result = qword_2698DC2E8;
  if (!qword_2698DC2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2E8);
  }
  return result;
}

unint64_t sub_24E43952C()
{
  unint64_t result = qword_2698DC2F0;
  if (!qword_2698DC2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2F0);
  }
  return result;
}

unint64_t sub_24E439584()
{
  unint64_t result = qword_2698DC2F8;
  if (!qword_2698DC2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC2F8);
  }
  return result;
}

uint64_t sub_24E4395D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x76654C726F6F6C66 && a2 == 0xEA00000000006C65 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024E4782E0 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E478300 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024E478320)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v5 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v5) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t *sub_24E439AFC(uint64_t *a1)
{
  uint64_t v2 = a1[25];
  uint64_t v4 = a1[24];
  sub_24E3DC588(*a1, a1[1]);
  sub_24E3DC588(v4, v2);
  return a1;
}

uint64_t LocationShiftingRequest.__allocating_init(location:)(uint64_t a1)
{
  uint64_t v2 = sub_24E474878();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_allocObject();
  _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
  uint64_t v7 = sub_24E474838();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  unint64_t v10 = (uint64_t *)(v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *unint64_t v10 = v7;
  v10[1] = v9;
  sub_24E425438(a1, v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  return v6;
}

uint64_t LocationShiftingRequest.location.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E3831BC(v1 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, a1);
}

uint64_t LocationShiftingRequest.__allocating_init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_24E425438(a3, v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  uint64_t v7 = (void *)(v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *uint64_t v7 = a1;
  v7[1] = a2;
  return v6;
}

uint64_t LocationShiftingRequest.init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24E425438(a3, v3 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  void *v6 = a1;
  v6[1] = a2;
  return v3;
}

uint64_t LocationShiftingRequest.init(location:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24E474878();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
  uint64_t v8 = sub_24E474838();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  long long v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *long long v11 = v8;
  v11[1] = v10;
  sub_24E425438(a1, v2 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  return v2;
}

uint64_t LocationShiftingRequest.deinit()
{
  sub_24E383220(v0 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocationShiftingRequest.__deallocating_deinit()
{
  sub_24E383220(v0 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24E439FE8()
{
  return type metadata accessor for LocationShiftingRequest();
}

uint64_t type metadata accessor for LocationShiftingRequest()
{
  uint64_t result = qword_2698DC300;
  if (!qword_2698DC300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E43A03C()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for LocationShiftingRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocationShiftingRequest);
}

uint64_t dispatch thunk of LocationShiftingRequest.__allocating_init(identifier:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of LocationShiftingRequest.__allocating_init(location:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t LocationType.description.getter()
{
  unint64_t result = 0x79636167656C2ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x6576696C2ELL;
      break;
    case 3:
      unint64_t result = 0x696C6C657461732ELL;
      break;
    default:
      return result;
  }
  return result;
}

FindMyLocate::LocationType_optional __swiftcall LocationType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (FindMyLocate::LocationType_optional)rawValue;
}

void *static LocationType.allCases.getter()
{
  return &unk_270043FE8;
}

uint64_t LocationType.rawValue.getter()
{
  return *v0;
}

unint64_t sub_24E43A1D4()
{
  unint64_t result = qword_2698DC310;
  if (!qword_2698DC310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC310);
  }
  return result;
}

FindMyLocate::LocationType_optional sub_24E43A228(Swift::Int *a1)
{
  return LocationType.init(rawValue:)(*a1);
}

uint64_t sub_24E43A230()
{
  return sub_24E474B88();
}

uint64_t sub_24E43A290()
{
  return sub_24E474B58();
}

unint64_t sub_24E43A2E4()
{
  unint64_t result = qword_2698DC318;
  if (!qword_2698DC318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698DC320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC318);
  }
  return result;
}

void sub_24E43A340(void *a1@<X8>)
{
  *a1 = &unk_270044010;
}

unint64_t sub_24E43A350()
{
  unint64_t result = 0x79636167656C2ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x6576696C2ELL;
      break;
    case 3:
      unint64_t result = 0x696C6C657461732ELL;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E43A4B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unint64_t sub_24E43A4D8()
{
  unint64_t result = qword_2698DC328;
  if (!qword_2698DC328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC328);
  }
  return result;
}

uint64_t MotionActivityState.description.getter()
{
  uint64_t result = 0x6E776F6E6B6E752ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F69746174732ELL;
      break;
    case 2:
      uint64_t result = 0x676E696B6C61772ELL;
      break;
    case 3:
      uint64_t result = 0x676E696E6E75722ELL;
      break;
    case 4:
      uint64_t result = 0x676E696C6379632ELL;
      break;
    case 5:
      uint64_t result = 0x746F6D6F7475612ELL;
      break;
    default:
      return result;
  }
  return result;
}

FindMyLocate::MotionActivityState_optional __swiftcall MotionActivityState.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 6;
  if ((unint64_t)rawValue < 6) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (FindMyLocate::MotionActivityState_optional)rawValue;
}

void *static MotionActivityState.allCases.getter()
{
  return &unk_2700449A8;
}

uint64_t MotionActivityState.rawValue.getter()
{
  return *v0;
}

unint64_t sub_24E43A624()
{
  unint64_t result = qword_2698DC330;
  if (!qword_2698DC330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC330);
  }
  return result;
}

FindMyLocate::MotionActivityState_optional sub_24E43A678(Swift::Int *a1)
{
  return MotionActivityState.init(rawValue:)(*a1);
}

uint64_t sub_24E43A680()
{
  return sub_24E474B88();
}

uint64_t sub_24E43A6E0()
{
  return sub_24E474B58();
}

unint64_t sub_24E43A734()
{
  unint64_t result = qword_2698DC338;
  if (!qword_2698DC338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698DC340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC338);
  }
  return result;
}

void sub_24E43A790(void *a1@<X8>)
{
  *a1 = &unk_2700449A8;
}

uint64_t sub_24E43A7A0()
{
  uint64_t result = 0x6E776F6E6B6E752ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F69746174732ELL;
      break;
    case 2:
      uint64_t result = 0x676E696B6C61772ELL;
      break;
    case 3:
      uint64_t result = 0x676E696E6E75722ELL;
      break;
    case 4:
      uint64_t result = 0x676E696C6379632ELL;
      break;
    case 5:
      uint64_t result = 0x746F6D6F7475612ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MotionActivityState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MotionActivityState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E43A9C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unint64_t sub_24E43A9F0()
{
  unint64_t result = qword_2698DC348;
  if (!qword_2698DC348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC348);
  }
  return result;
}

double PlaceMark.init(address:)@<D0>(void *__src@<X0>, _OWORD *a2@<X8>)
{
  memcpy(__dst, __src, 0x110uLL);
  uint64_t v2 = __dst[12];
  if (__dst[12]) {
    unint64_t v3 = __dst[12];
  }
  else {
    unint64_t v3 = 0xE000000000000000;
  }
  uint64_t v4 = __dst[4];
  uint64_t v5 = __dst[8];
  if (__dst[4]) {
    unint64_t v6 = __dst[4];
  }
  else {
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = __dst[14];
  uint64_t v36 = __dst[13];
  uint64_t v38 = __dst[15];
  if (__dst[14]) {
    unint64_t v8 = __dst[14];
  }
  else {
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v39 = __dst[9];
  unint64_t v40 = v3;
  if (__dst[8]) {
    unint64_t v9 = __dst[8];
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v46 = __dst[16];
  unint64_t v47 = v9;
  uint64_t v42 = __dst[7];
  uint64_t v44 = __dst[11];
  uint64_t v33 = __dst[3];
  uint64_t v48 = __dst[2];
  uint64_t v41 = __dst[10];
  if (*(void *)(__dst[2] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_24E43C87C(1, v48);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24E47E930;
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_24E47E930;
    uint64_t v13 = v44;
    if (!v2) {
      uint64_t v13 = 0;
    }
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v3;
    uint64_t v35 = v12;
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = v11;
    swift_bridgeObjectRetain();
  }
  if (v5) {
    uint64_t v14 = v42;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v30 = __dst[24];
  uint64_t v31 = v14;
  uint64_t v43 = __dst[25];
  if (v7) {
    uint64_t v15 = v36;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v4) {
    uint64_t v16 = v33;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v2) {
    uint64_t v17 = v44;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = __dst[27];
  uint64_t v28 = __dst[26];
  uint64_t v29 = __dst[28];
  uint64_t v19 = __dst[29];
  uint64_t v37 = __dst[30];
  uint64_t v20 = __dst[31];
  uint64_t v34 = __dst[32];
  uint64_t v45 = __dst[33];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_24E38AD68((uint64_t)__dst);
  *(void *)&long long v49 = v17;
  *((void *)&v49 + 1) = v40;
  *(void *)&long long v50 = v38;
  *((void *)&v50 + 1) = v46;
  *(void *)&long long v51 = v16;
  *((void *)&v51 + 1) = v10;
  *(void *)&long long v52 = v15;
  *((void *)&v52 + 1) = v8;
  *(void *)&long long v53 = v39;
  *((void *)&v53 + 1) = v41;
  *(void *)&long long v54 = v31;
  *((void *)&v54 + 1) = v47;
  *(void *)&long long v55 = v48;
  *((void *)&v55 + 1) = v35;
  *(void *)&long long v56 = v30;
  *((void *)&v56 + 1) = v43;
  *(void *)&long long v57 = v28;
  *((void *)&v57 + 1) = v18;
  *(void *)&long long v58 = v29;
  *((void *)&v58 + 1) = v19;
  *(void *)&long long v59 = v37;
  *((void *)&v59 + 1) = v20;
  *(void *)&long long v60 = v34;
  *((void *)&v60 + 1) = v45;
  sub_24E40D1F4((uint64_t)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E40D37C((uint64_t)&v49);
  long long v21 = v58;
  a2[8] = v57;
  a2[9] = v21;
  long long v22 = v60;
  a2[10] = v59;
  a2[11] = v22;
  long long v23 = v54;
  a2[4] = v53;
  a2[5] = v23;
  long long v24 = v56;
  a2[6] = v55;
  a2[7] = v24;
  long long v25 = v50;
  *a2 = v49;
  a2[1] = v25;
  double result = *(double *)&v51;
  long long v27 = v52;
  a2[2] = v51;
  a2[3] = v27;
  return result;
}

uint64_t PlaceMark.shortDescription.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  long long v14 = *((_OWORD *)v0 + 1);
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  long long v17 = *((_OWORD *)v0 + 3);
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  long long v7 = *((_OWORD *)v0 + 10);
  long long v24 = *((_OWORD *)v0 + 9);
  long long v25 = v7;
  long long v26 = *((_OWORD *)v0 + 11);
  long long v8 = *((_OWORD *)v0 + 6);
  long long v20 = *((_OWORD *)v0 + 5);
  long long v21 = v8;
  long long v9 = *((_OWORD *)v0 + 8);
  long long v22 = *((_OWORD *)v0 + 7);
  long long v23 = v9;
  uint64_t v12 = v1;
  uint64_t v13 = v2;
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  uint64_t v18 = v6;
  uint64_t v19 = v5;
  memset(v11, 0, sizeof(v11));
  if (_s12FindMyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0(&v12, v11)) {
    return 10536;
  }
  uint64_t result = 0;
  if (v5 && v2)
  {
    if (v4)
    {
      uint64_t v12 = v6;
      uint64_t v13 = v5;
      swift_bridgeObjectRetain();
      sub_24E474AF8();
      sub_24E474AF8();
      sub_24E474AF8();
      sub_24E474AF8();
      return v12;
    }
  }
  return result;
}

uint64_t PlaceMark.description.getter()
{
  return 0;
}

uint64_t sub_24E43B2AC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_24E475148(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    long long v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_24E475148() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t PlaceMark.locality.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.administrativeArea.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.country.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.stateCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.streetAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.streetName.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.formattedAddressLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaceMark.formattedAddressLinesWithoutCountry.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaceMark.coarseAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.poiAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.smallAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.mediumAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.largeAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24E43B594(char a1)
{
  uint64_t result = 0x7974696C61636F6CLL;
  switch(a1)
  {
    case 1:
      return 0xD000000000000012;
    case 2:
      return 0x7972746E756F63;
    case 3:
      return 0x646F436574617473;
    case 4:
      uint64_t v3 = 0x746565727473;
      goto LABEL_12;
    case 5:
      return 0x614E746565727473;
    case 6:
      return 0xD000000000000015;
    case 7:
      uint64_t v3 = 0x657372616F63;
      goto LABEL_12;
    case 8:
      return 0x6572646441696F70;
    case 9:
      uint64_t v4 = 0x416C6C616D73;
      goto LABEL_14;
    case 10:
      uint64_t v3 = 0x6D756964656DLL;
LABEL_12:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6441000000000000;
      break;
    case 11:
      uint64_t v4 = 0x41656772616CLL;
LABEL_14:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x6464000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E43B720(char a1)
{
  uint64_t result = 0x7974696C61636F6CLL;
  switch(a1)
  {
    case 1:
      return 0xD000000000000012;
    case 2:
      return 0x7972746E756F63;
    case 3:
      return 0x646F436574617473;
    case 4:
      uint64_t v3 = 0x746565727473;
      goto LABEL_12;
    case 5:
      return 0x614E746565727473;
    case 6:
      return 0xD000000000000015;
    case 7:
      uint64_t v3 = 0x657372616F63;
      goto LABEL_12;
    case 8:
      return 0x6572646441696F70;
    case 9:
      uint64_t v4 = 0x416C6C616D73;
      goto LABEL_14;
    case 10:
      uint64_t v3 = 0x6D756964656DLL;
LABEL_12:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6441000000000000;
      break;
    case 11:
      uint64_t v4 = 0x41656772616CLL;
LABEL_14:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x6464000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E43B8AC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_24E43B594(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_24E43B594(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24E475148();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24E43B938()
{
  char v1 = *v0;
  sub_24E475228();
  sub_24E43B594(v1);
  sub_24E474AD8();
  swift_bridgeObjectRelease();
  return sub_24E475268();
}

uint64_t sub_24E43B99C()
{
  sub_24E43B594(*v0);
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E43B9F0()
{
  char v1 = *v0;
  sub_24E475228();
  sub_24E43B594(v1);
  sub_24E474AD8();
  swift_bridgeObjectRelease();
  return sub_24E475268();
}

uint64_t sub_24E43BA50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24E43E920();
  *a1 = result;
  return result;
}

uint64_t sub_24E43BA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E43B594(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24E43BAAC()
{
  return sub_24E43B720(*v0);
}

uint64_t sub_24E43BAB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24E43E920();
  *a1 = result;
  return result;
}

void sub_24E43BADC(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_24E43BAE8(uint64_t a1)
{
  unint64_t v2 = sub_24E43E1BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43BB24(uint64_t a1)
{
  unint64_t v2 = sub_24E43E1BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PlaceMark.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  v97 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC350);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E43E1BC();
  sub_24E475288();
  v99 = a1;
  if (v2)
  {
    uint64_t v105 = v2;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v100 = 0;
    uint64_t v101 = 0;
    uint64_t v102 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v98 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    uint64_t v11 = 0;
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v112 = 0;
    uint64_t v113 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    LOBYTE(v126) = 0;
    uint64_t v8 = sub_24E474FE8();
    uint64_t v19 = v18;
    uint64_t v96 = v8;
    LOBYTE(v126) = 1;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_24E474FE8();
    uint64_t v113 = v19;
    uint64_t v95 = v20;
    LOBYTE(v126) = 2;
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_24E474FE8();
    uint64_t v112 = v22;
    uint64_t v93 = v23;
    LOBYTE(v126) = 3;
    uint64_t v111 = v24;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24E474FE8();
    uint64_t v27 = v26;
    uint64_t v94 = v25;
    LOBYTE(v126) = 4;
    swift_bridgeObjectRetain();
    uint64_t v92 = sub_24E474FE8();
    LOBYTE(v126) = 5;
    uint64_t v110 = v28;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_24E474FE8();
    uint64_t v109 = v27;
    uint64_t v91 = v29;
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9CA0);
    LOBYTE(v114) = 6;
    sub_24E37C7FC(&qword_26B1B7C90);
    uint64_t v108 = v31;
    swift_bridgeObjectRetain();
    sub_24E475008();
    uint64_t v32 = v126;
    uint64_t v107 = v126;
    uint64_t v33 = v109;
    if (v126)
    {
      if (*(void *)(v126 + 16))
      {
        swift_bridgeObjectRetain_n();
        uint64_t v90 = sub_24E43C87C(1, v32);
      }
      else
      {
        long long v88 = v7;
        if (v108)
        {
          uint64_t v34 = v4;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_24E41A590(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v37 = v35[2];
          unint64_t v36 = v35[3];
          if (v37 >= v36 >> 1) {
            uint64_t v35 = sub_24E41A590((void *)(v36 > 1), v37 + 1, 1, v35);
          }
          uint64_t v38 = v91;
          v35[2] = v37 + 1;
          uint64_t v39 = &v35[2 * v37];
          uint64_t v40 = v108;
          uint64_t v33 = v109;
          v39[4] = v38;
          v39[5] = v40;
          uint64_t v4 = v34;
          long long v7 = v88;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = (void *)MEMORY[0x263F8EE78];
        }
        if (v113)
        {
          swift_bridgeObjectRetain();
          uint64_t v41 = v35;
          uint64_t v42 = v4;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v41 = sub_24E41A590(0, v35[2] + 1, 1, v35);
          }
          uint64_t v35 = v41;
          unint64_t v44 = v41[2];
          unint64_t v43 = v41[3];
          if (v44 >= v43 >> 1) {
            uint64_t v35 = sub_24E41A590((void *)(v43 > 1), v44 + 1, 1, v41);
          }
          v35[2] = v44 + 1;
          uint64_t v45 = &v35[2 * v44];
          uint64_t v46 = v113;
          v45[4] = v96;
          v45[5] = v46;
          uint64_t v33 = v109;
          uint64_t v4 = v42;
          long long v7 = v88;
        }
        if (v33)
        {
          swift_bridgeObjectRetain();
          unint64_t v47 = v35;
          uint64_t v48 = v4;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v47 = sub_24E41A590(0, v35[2] + 1, 1, v35);
          }
          uint64_t v35 = v47;
          unint64_t v50 = v47[2];
          unint64_t v49 = v47[3];
          if (v50 >= v49 >> 1) {
            uint64_t v35 = sub_24E41A590((void *)(v49 > 1), v50 + 1, 1, v47);
          }
          v35[2] = v50 + 1;
          long long v51 = &v35[2 * v50];
          uint64_t v52 = v109;
          v51[4] = v94;
          v51[5] = v52;
          uint64_t v4 = v48;
          long long v7 = v88;
        }
        uint64_t v90 = (uint64_t)v35;
      }
    }
    else
    {
      uint64_t v90 = 0;
    }
    LOBYTE(v126) = 7;
    uint64_t v53 = sub_24E474FE8();
    uint64_t v55 = v54;
    uint64_t v89 = v53;
    LOBYTE(v126) = 8;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_24E474FE8();
    uint64_t v98 = v55;
    uint64_t v58 = v57;
    uint64_t v101 = v56;
    LOBYTE(v126) = 9;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_24E474FE8();
    uint64_t v106 = v58;
    uint64_t v102 = v59;
    uint64_t v60 = v111;
    LOBYTE(v126) = 10;
    uint64_t v62 = v61;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_24E474FE8();
    uint64_t v104 = v62;
    uint64_t v105 = 0;
    uint64_t v100 = v63;
    char v150 = 11;
    uint64_t v103 = v64;
    swift_bridgeObjectRetain();
    uint64_t v65 = v4;
    uint64_t v66 = v7;
    uint64_t v67 = v105;
    uint64_t v68 = sub_24E474FE8();
    uint64_t v105 = v67;
    if (!v67)
    {
      uint64_t v70 = v68;
      uint64_t v71 = v69;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v66, v65);
      uint64_t v72 = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v114 = v96;
      *((void *)&v114 + 1) = v113;
      *(void *)&long long v115 = v95;
      *((void *)&v115 + 1) = v112;
      *(void *)&long long v116 = v93;
      *((void *)&v116 + 1) = v60;
      *(void *)&long long v117 = v94;
      *((void *)&v117 + 1) = v109;
      *(void *)&long long v118 = v92;
      *((void *)&v118 + 1) = v110;
      uint64_t v73 = v108;
      *(void *)&long long v119 = v91;
      *((void *)&v119 + 1) = v108;
      *(void *)&long long v120 = v107;
      *((void *)&v120 + 1) = v90;
      *(void *)&long long v121 = v89;
      *((void *)&v121 + 1) = v55;
      *(void *)&long long v122 = v101;
      *((void *)&v122 + 1) = v106;
      *(void *)&long long v123 = v102;
      *((void *)&v123 + 1) = v104;
      *(void *)&long long v124 = v100;
      *((void *)&v124 + 1) = v103;
      uint64_t v87 = v70;
      *(void *)&long long v125 = v70;
      *((void *)&v125 + 1) = v71;
      uint64_t v74 = v90;
      swift_bridgeObjectRetain();
      sub_24E40D1F4((uint64_t)&v114);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = v106;
      swift_bridgeObjectRelease();
      uint64_t v77 = v104;
      swift_bridgeObjectRelease();
      uint64_t v78 = v103;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v79 = v107;
      swift_bridgeObjectRelease();
      long long v80 = v123;
      uint64_t v81 = v97;
      v97[8] = v122;
      v81[9] = v80;
      long long v82 = v125;
      v81[10] = v124;
      v81[11] = v82;
      long long v83 = v119;
      v81[4] = v118;
      v81[5] = v83;
      long long v84 = v121;
      v81[6] = v120;
      v81[7] = v84;
      long long v85 = v115;
      *uint64_t v81 = v114;
      v81[1] = v85;
      long long v86 = v117;
      v81[2] = v116;
      v81[3] = v86;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      uint64_t v126 = v96;
      uint64_t v127 = v113;
      uint64_t v128 = v95;
      uint64_t v129 = v112;
      uint64_t v130 = v93;
      uint64_t v131 = v111;
      uint64_t v132 = v94;
      uint64_t v133 = v109;
      uint64_t v134 = v92;
      uint64_t v135 = v110;
      uint64_t v136 = v91;
      uint64_t v137 = v73;
      uint64_t v138 = v79;
      uint64_t v139 = v75;
      uint64_t v140 = v89;
      uint64_t v141 = v55;
      uint64_t v142 = v101;
      uint64_t v143 = v76;
      uint64_t v144 = v102;
      uint64_t v145 = v77;
      uint64_t v146 = v100;
      uint64_t v147 = v78;
      uint64_t v148 = v87;
      uint64_t v149 = v72;
      return sub_24E40D37C((uint64_t)&v126);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v95;
    uint64_t v16 = v96;
    uint64_t v14 = v93;
    uint64_t v13 = v94;
    uint64_t v11 = v91;
    uint64_t v12 = v92;
    uint64_t v9 = v89;
    uint64_t v10 = v90;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  uint64_t v126 = v16;
  uint64_t v127 = v113;
  uint64_t v128 = v15;
  uint64_t v129 = v112;
  uint64_t v130 = v14;
  uint64_t v131 = v111;
  uint64_t v132 = v13;
  uint64_t v133 = v109;
  uint64_t v134 = v12;
  uint64_t v135 = v110;
  uint64_t v136 = v11;
  uint64_t v137 = v108;
  uint64_t v138 = v107;
  uint64_t v139 = v10;
  uint64_t v140 = v9;
  uint64_t v141 = v98;
  uint64_t v142 = v101;
  uint64_t v143 = v106;
  uint64_t v144 = v102;
  uint64_t v145 = v104;
  uint64_t v146 = v100;
  uint64_t v147 = v103;
  uint64_t v149 = 0;
  uint64_t v148 = 0;
  return sub_24E40D37C((uint64_t)&v126);
}

uint64_t sub_24E43C87C(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_30;
  }
  uint64_t v2 = a2;
  if (!result) {
    return v2;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  unint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(a2 + 40);
  uint64_t v25 = v3 - 1;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v24 = result;
  do
  {
    uint64_t v14 = *(v6 - 1);
    uint64_t v13 = *v6;
    uint64_t v15 = *(void *)(v7 + 16);
    if (v15 < result)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24E3763D0(0, v15 + 1, 1);
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1) {
        sub_24E3763D0(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v7 + 16) = v10 + 1;
      uint64_t v11 = v7 + 16 * v10;
      *(void *)(v11 + 32) = v14;
      *(void *)(v11 + 40) = v13;
      uint64_t result = v24;
      uint64_t v12 = a2;
LABEL_8:
      if (v25 == v4) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    if (v5 >= v15) {
      goto LABEL_28;
    }
    uint64_t v23 = *(v6 - 1);
    uint64_t v16 = v7 + 16 * v5;
    uint64_t v17 = *(void *)(v16 + 32);
    uint64_t v18 = *(void *)(v16 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_24E3763D0(0, *(void *)(v8 + 16) + 1, 1);
    }
    unint64_t v20 = *(void *)(v8 + 16);
    unint64_t v19 = *(void *)(v8 + 24);
    if (v20 >= v19 >> 1) {
      sub_24E3763D0(v19 > 1, v20 + 1, 1);
    }
    *(void *)(v8 + 16) = v20 + 1;
    uint64_t v21 = v8 + 16 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_24E43D804(v7);
      uint64_t v7 = result;
    }
    uint64_t v12 = a2;
    if (v5 >= *(void *)(v7 + 16)) {
      goto LABEL_29;
    }
    uint64_t v22 = v7 + 16 * v5;
    swift_bridgeObjectRelease();
    uint64_t result = v24;
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v13;
    if ((uint64_t)++v5 < v24) {
      goto LABEL_8;
    }
    if (v25 == v4) {
      goto LABEL_25;
    }
    unint64_t v5 = 0;
LABEL_9:
    ++v4;
    v6 += 2;
  }
  while (v4 < *(void *)(v12 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t PlaceMark.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC360);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v28 = v1[3];
  uint64_t v29 = v7;
  uint64_t v8 = v1[4];
  uint64_t v26 = v1[5];
  uint64_t v27 = v8;
  uint64_t v9 = v1[6];
  uint64_t v24 = v1[7];
  uint64_t v25 = v9;
  uint64_t v10 = v1[9];
  uint64_t v22 = v1[8];
  uint64_t v23 = v10;
  uint64_t v11 = v1[11];
  uint64_t v20 = v1[10];
  uint64_t v21 = v11;
  uint64_t v12 = v1[12];
  v18[9] = v1[14];
  uint64_t v19 = v12;
  uint64_t v13 = v1[15];
  v18[7] = v1[16];
  v18[8] = v13;
  uint64_t v14 = v1[17];
  v18[5] = v1[18];
  v18[6] = v14;
  uint64_t v15 = v1[19];
  v18[3] = v1[20];
  v18[4] = v15;
  v18[2] = v1[21];
  v18[0] = v1[22];
  v18[1] = v1[23];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E43E1BC();
  sub_24E4752A8();
  LOBYTE(v32) = 0;
  uint64_t v16 = v30;
  sub_24E475098();
  if (!v16)
  {
    LOBYTE(v32) = 1;
    sub_24E475098();
    LOBYTE(v32) = 2;
    sub_24E475098();
    uint64_t v30 = v4;
    LOBYTE(v32) = 3;
    sub_24E475098();
    LOBYTE(v32) = 4;
    sub_24E475098();
    LOBYTE(v32) = 5;
    sub_24E475098();
    uint64_t v32 = v19;
    char v31 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9CA0);
    sub_24E37C7FC(&qword_26B1B8160);
    sub_24E4750B8();
    LOBYTE(v32) = 7;
    sub_24E475098();
    LOBYTE(v32) = 8;
    sub_24E475098();
    LOBYTE(v32) = 9;
    sub_24E475098();
    LOBYTE(v32) = 10;
    sub_24E475098();
    LOBYTE(v32) = 11;
    sub_24E475098();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

double PlaceMark.init()@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

__n128 PlaceMark.init(locality:administrativeArea:country:stateCode:streetAddress:streetName:formattedAddressLines:formattedAddressLinesWithoutCountry:coarseAddress:poiAddress:smallAddress:mediumAddress:largeAddress:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, __n128 a16, uint64_t a17, uint64_t a18)
{
  __n128 result = a16;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(__n128 *)(a9 + 160) = a16;
  *(void *)(a9 + 176) = a17;
  *(void *)(a9 + 184) = a18;
  return result;
}

double PlaceMark.init(locality:administrativeArea:country:state:streetAddress:streetName:formattedAddress:coarseAddress:poiAddress:smallAddress:mediumAddress:largeAddress:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, long long a10, long long a11, uint64_t a12, long long a13, long long a14, long long a15, long long a16, uint64_t a17, uint64_t a18)
{
  uint64_t v23 = a18;
  uint64_t v24 = a12;
  if (*(void *)(a12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24E43C87C(1, a12);
    uint64_t v26 = a7;
    uint64_t v27 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BC8);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_24E47EEE0;
    *(_OWORD *)(v28 + 32) = a11;
    *(void *)(v28 + 48) = a1;
    *(void *)(v28 + 56) = a2;
    *(void *)(v28 + 64) = a7;
    *(void *)(v28 + 72) = a8;
    *(void *)(v28 + 80) = a5;
    *(void *)(v28 + 88) = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_24E47EB50;
    *(_OWORD *)(v25 + 32) = a11;
    uint64_t v27 = a1;
    *(void *)(v25 + 48) = a1;
    *(void *)(v25 + 56) = a2;
    *(void *)(v25 + 64) = a7;
    *(void *)(v25 + 72) = a8;
    uint64_t v24 = v28;
    uint64_t v23 = a18;
    uint64_t v26 = a7;
  }
  *(void *)&long long v40 = v27;
  *((void *)&v40 + 1) = a2;
  *(void *)&long long v41 = a3;
  *((void *)&v41 + 1) = a4;
  *(void *)&long long v42 = a5;
  *((void *)&v42 + 1) = a6;
  *(void *)&long long v43 = v26;
  *((void *)&v43 + 1) = a8;
  long long v44 = a10;
  long long v45 = a11;
  *(void *)&long long v46 = v24;
  *((void *)&v46 + 1) = v25;
  long long v47 = a13;
  long long v48 = a14;
  long long v49 = a15;
  long long v50 = a16;
  *(void *)&long long v51 = a17;
  *((void *)&v51 + 1) = v23;
  sub_24E40D1F4((uint64_t)&v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E40D37C((uint64_t)&v40);
  long long v29 = v49;
  a9[8] = v48;
  a9[9] = v29;
  long long v30 = v51;
  a9[10] = v50;
  a9[11] = v30;
  long long v31 = v45;
  a9[4] = v44;
  a9[5] = v31;
  long long v32 = v47;
  a9[6] = v46;
  a9[7] = v32;
  long long v33 = v41;
  *a9 = v40;
  a9[1] = v33;
  double result = *(double *)&v42;
  long long v35 = v43;
  a9[2] = v42;
  a9[3] = v35;
  return result;
}

uint64_t PlaceMark.hash(into:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[11];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[13];
  uint64_t v19 = v0[15];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[19];
  uint64_t v20 = v0[21];
  uint64_t v21 = v0[23];
  if (v0[1])
  {
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5;
    if (v1)
    {
LABEL_3:
      sub_24E475248();
      swift_bridgeObjectRetain();
      sub_24E474AD8();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E475248();
    uint64_t v6 = v5;
    if (v1) {
      goto LABEL_3;
    }
  }
  sub_24E475248();
LABEL_6:
  if (v2)
  {
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    uint64_t v7 = v16;
    if (v3) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_24E475248();
    uint64_t v7 = v16;
    if (v3)
    {
LABEL_8:
      sub_24E475248();
      swift_bridgeObjectRetain();
      sub_24E474AD8();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
  }
  sub_24E475248();
  if (v15)
  {
LABEL_9:
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  sub_24E475248();
  if (v7)
  {
LABEL_10:
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_11;
    }
LABEL_32:
    sub_24E475248();
    if (v18) {
      goto LABEL_16;
    }
LABEL_33:
    sub_24E475248();
    if (v19) {
      goto LABEL_21;
    }
    goto LABEL_34;
  }
LABEL_31:
  sub_24E475248();
  if (!v17) {
    goto LABEL_32;
  }
LABEL_11:
  sub_24E475248();
  sub_24E475238();
  uint64_t v8 = *(void *)(v17 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = v17 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24E474AD8();
      swift_bridgeObjectRelease();
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  if (!v18) {
    goto LABEL_33;
  }
LABEL_16:
  sub_24E475248();
  sub_24E475238();
  uint64_t v10 = *(void *)(v18 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = v18 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24E474AD8();
      swift_bridgeObjectRelease();
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  if (v19)
  {
LABEL_21:
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    uint64_t v13 = v20;
    uint64_t v12 = v21;
    if (v4) {
      goto LABEL_22;
    }
    goto LABEL_35;
  }
LABEL_34:
  sub_24E475248();
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  if (v4)
  {
LABEL_22:
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_23;
    }
    goto LABEL_36;
  }
LABEL_35:
  sub_24E475248();
  if (v6)
  {
LABEL_23:
    sub_24E475248();
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_24;
    }
LABEL_37:
    sub_24E475248();
    if (v12) {
      goto LABEL_25;
    }
    return sub_24E475248();
  }
LABEL_36:
  sub_24E475248();
  if (!v13) {
    goto LABEL_37;
  }
LABEL_24:
  sub_24E475248();
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  swift_bridgeObjectRelease();
  if (!v12) {
    return sub_24E475248();
  }
LABEL_25:
  sub_24E475248();
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t PlaceMark.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E43D74C()
{
  return sub_24E475268();
}

uint64_t sub_24E43D790()
{
  return sub_24E475268();
}

uint64_t sub_24E43D7CC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return PlaceMark.init(from:)(a1, a2);
}

uint64_t sub_24E43D7E4(void *a1)
{
  return PlaceMark.encode(to:)(a1);
}

uint64_t sub_24E43D804(uint64_t a1)
{
  return sub_24E3763F0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

BOOL _s12FindMyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v245 = a1[2];
  uint64_t v241 = a1[4];
  uint64_t v252 = a1[5];
  uint64_t v253 = a1[3];
  uint64_t v237 = a1[6];
  uint64_t v243 = a1[7];
  uint64_t v235 = a1[8];
  uint64_t v4 = a1[10];
  uint64_t v239 = a1[9];
  uint64_t v6 = a1[11];
  uint64_t v5 = (void *)a1[12];
  uint64_t v7 = (void *)a1[13];
  uint64_t v8 = a1[14];
  uint64_t v9 = a1[15];
  uint64_t v10 = a1[16];
  uint64_t v11 = a1[17];
  uint64_t v231 = a1[18];
  uint64_t v232 = a1[19];
  uint64_t v12 = a1[20];
  uint64_t v13 = a1[21];
  uint64_t v14 = a1[22];
  uint64_t v15 = a1[23];
  uint64_t v16 = a2[1];
  uint64_t v244 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v240 = a2[4];
  uint64_t v251 = a2[5];
  uint64_t v236 = a2[6];
  uint64_t v242 = a2[7];
  uint64_t v234 = a2[8];
  uint64_t v238 = a2[9];
  uint64_t v233 = a2[10];
  uint64_t v19 = (void *)a2[12];
  uint64_t v18 = (void *)a2[13];
  uint64_t v21 = a2[14];
  uint64_t v20 = a2[15];
  uint64_t v23 = a2[16];
  uint64_t v22 = a2[17];
  uint64_t v24 = a2[19];
  uint64_t v230 = a2[18];
  uint64_t v25 = a2[20];
  uint64_t v26 = a2[21];
  uint64_t v28 = a2[22];
  uint64_t v27 = a2[23];
  if (!v3)
  {
    uint64_t v229 = a2[11];
    if (v16) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v16) {
    return 0;
  }
  uint64_t v229 = a2[11];
  if (*a1 == *a2 && v3 == v16) {
    goto LABEL_8;
  }
  uint64_t v166 = a1[15];
  uint64_t v172 = a1[22];
  uint64_t v204 = a2[23];
  uint64_t v213 = a2[22];
  uint64_t v188 = a2[21];
  uint64_t v180 = a1[21];
  uint64_t v29 = a1[20];
  uint64_t v150 = a1[11];
  uint64_t v155 = a1[10];
  uint64_t v30 = a2[20];
  uint64_t v31 = a2[19];
  uint64_t v146 = a2[17];
  uint64_t v147 = a1[16];
  uint64_t v32 = a1[17];
  uint64_t v33 = a2[16];
  uint64_t v34 = a1[14];
  v160 = (void *)a1[12];
  uint64_t v35 = a2[15];
  uint64_t v148 = a2[14];
  v222 = (void *)a2[13];
  unint64_t v36 = (void *)a1[13];
  char v37 = sub_24E475148();
  uint64_t v7 = v36;
  uint64_t v20 = v35;
  uint64_t v5 = v160;
  uint64_t v9 = v166;
  uint64_t v8 = v34;
  uint64_t v23 = v33;
  uint64_t v22 = v146;
  uint64_t v10 = v147;
  uint64_t v11 = v32;
  uint64_t v21 = v148;
  uint64_t v6 = v150;
  uint64_t v24 = v31;
  uint64_t v25 = v30;
  uint64_t v4 = v155;
  uint64_t v12 = v29;
  uint64_t v13 = v180;
  uint64_t v26 = v188;
  uint64_t v14 = v172;
  uint64_t v27 = v204;
  uint64_t v28 = v213;
  uint64_t v18 = v222;
  char v38 = v37;
  BOOL result = 0;
  if (v38)
  {
LABEL_8:
    if (v253)
    {
      if (!v17) {
        return 0;
      }
      if (v245 != v244 || v253 != v17)
      {
        uint64_t v167 = v9;
        uint64_t v173 = v14;
        v223 = v18;
        uint64_t v40 = v12;
        uint64_t v246 = v25;
        uint64_t v196 = v15;
        uint64_t v205 = v27;
        uint64_t v181 = v13;
        uint64_t v189 = v26;
        uint64_t v41 = v24;
        uint64_t v214 = v28;
        uint64_t v42 = v10;
        uint64_t v43 = v11;
        uint64_t v44 = v22;
        uint64_t v151 = v6;
        uint64_t v156 = v4;
        uint64_t v45 = v23;
        uint64_t v46 = v8;
        uint64_t v47 = v20;
        v161 = v5;
        uint64_t v48 = v21;
        v254 = v7;
        char v49 = sub_24E475148();
        uint64_t v7 = v254;
        uint64_t v21 = v48;
        uint64_t v5 = v161;
        uint64_t v9 = v167;
        uint64_t v20 = v47;
        uint64_t v8 = v46;
        uint64_t v23 = v45;
        uint64_t v6 = v151;
        uint64_t v4 = v156;
        uint64_t v22 = v44;
        uint64_t v11 = v43;
        uint64_t v10 = v42;
        uint64_t v27 = v205;
        uint64_t v28 = v214;
        uint64_t v24 = v41;
        uint64_t v13 = v181;
        uint64_t v26 = v189;
        uint64_t v15 = v196;
        uint64_t v25 = v246;
        uint64_t v12 = v40;
        uint64_t v18 = v223;
        uint64_t v14 = v173;
        char v50 = v49;
        BOOL result = 0;
        if ((v50 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v252)
    {
      if (!v251) {
        return 0;
      }
      if (v241 != v240 || v252 != v251)
      {
        uint64_t v168 = v9;
        uint64_t v174 = v14;
        v224 = v18;
        uint64_t v51 = v12;
        uint64_t v247 = v25;
        uint64_t v197 = v15;
        uint64_t v206 = v27;
        uint64_t v182 = v13;
        uint64_t v190 = v26;
        uint64_t v52 = v24;
        uint64_t v215 = v28;
        uint64_t v53 = v10;
        uint64_t v54 = v11;
        uint64_t v55 = v22;
        uint64_t v152 = v6;
        uint64_t v157 = v4;
        uint64_t v56 = v23;
        uint64_t v57 = v8;
        uint64_t v58 = v20;
        v162 = v5;
        uint64_t v59 = v21;
        v255 = v7;
        char v60 = sub_24E475148();
        uint64_t v7 = v255;
        uint64_t v21 = v59;
        uint64_t v5 = v162;
        uint64_t v9 = v168;
        uint64_t v20 = v58;
        uint64_t v8 = v57;
        uint64_t v23 = v56;
        uint64_t v6 = v152;
        uint64_t v4 = v157;
        uint64_t v22 = v55;
        uint64_t v11 = v54;
        uint64_t v10 = v53;
        uint64_t v27 = v206;
        uint64_t v28 = v215;
        uint64_t v24 = v52;
        uint64_t v13 = v182;
        uint64_t v26 = v190;
        uint64_t v15 = v197;
        uint64_t v25 = v247;
        uint64_t v12 = v51;
        uint64_t v18 = v224;
        uint64_t v14 = v174;
        char v61 = v60;
        BOOL result = 0;
        if ((v61 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v251)
    {
      return 0;
    }
    if (v243)
    {
      if (!v242) {
        return 0;
      }
      if (v237 != v236 || v243 != v242)
      {
        uint64_t v169 = v9;
        uint64_t v175 = v14;
        v225 = v18;
        uint64_t v62 = v12;
        uint64_t v248 = v25;
        uint64_t v198 = v15;
        uint64_t v207 = v27;
        uint64_t v183 = v13;
        uint64_t v191 = v26;
        uint64_t v63 = v24;
        uint64_t v216 = v28;
        uint64_t v64 = v10;
        uint64_t v65 = v11;
        uint64_t v66 = v22;
        uint64_t v153 = v6;
        uint64_t v158 = v4;
        uint64_t v67 = v23;
        uint64_t v68 = v8;
        uint64_t v69 = v20;
        v163 = v5;
        uint64_t v70 = v21;
        v256 = v7;
        char v71 = sub_24E475148();
        uint64_t v7 = v256;
        uint64_t v21 = v70;
        uint64_t v5 = v163;
        uint64_t v9 = v169;
        uint64_t v20 = v69;
        uint64_t v8 = v68;
        uint64_t v23 = v67;
        uint64_t v6 = v153;
        uint64_t v4 = v158;
        uint64_t v22 = v66;
        uint64_t v11 = v65;
        uint64_t v10 = v64;
        uint64_t v27 = v207;
        uint64_t v28 = v216;
        uint64_t v24 = v63;
        uint64_t v13 = v183;
        uint64_t v26 = v191;
        uint64_t v15 = v198;
        uint64_t v25 = v248;
        uint64_t v12 = v62;
        uint64_t v18 = v225;
        uint64_t v14 = v175;
        char v72 = v71;
        BOOL result = 0;
        if ((v72 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v242)
    {
      return 0;
    }
    if (v239)
    {
      if (!v238) {
        return 0;
      }
      if (v235 != v234 || v239 != v238)
      {
        uint64_t v170 = v9;
        uint64_t v176 = v14;
        v226 = v18;
        uint64_t v73 = v12;
        uint64_t v249 = v25;
        uint64_t v199 = v15;
        uint64_t v208 = v27;
        uint64_t v184 = v13;
        uint64_t v192 = v26;
        uint64_t v74 = v24;
        uint64_t v217 = v28;
        uint64_t v75 = v10;
        uint64_t v76 = v11;
        uint64_t v77 = v22;
        uint64_t v154 = v6;
        uint64_t v159 = v4;
        uint64_t v78 = v23;
        uint64_t v79 = v8;
        uint64_t v80 = v20;
        v164 = v5;
        uint64_t v81 = v21;
        v257 = v7;
        char v82 = sub_24E475148();
        uint64_t v7 = v257;
        uint64_t v21 = v81;
        uint64_t v5 = v164;
        uint64_t v9 = v170;
        uint64_t v20 = v80;
        uint64_t v8 = v79;
        uint64_t v23 = v78;
        uint64_t v6 = v154;
        uint64_t v4 = v159;
        uint64_t v22 = v77;
        uint64_t v11 = v76;
        uint64_t v10 = v75;
        uint64_t v27 = v208;
        uint64_t v28 = v217;
        uint64_t v24 = v74;
        uint64_t v13 = v184;
        uint64_t v26 = v192;
        uint64_t v15 = v199;
        uint64_t v25 = v249;
        uint64_t v12 = v73;
        uint64_t v18 = v226;
        uint64_t v14 = v176;
        char v83 = v82;
        BOOL result = 0;
        if ((v83 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v238)
    {
      return 0;
    }
    if (v6)
    {
      if (!v229) {
        return 0;
      }
      if (v4 != v233 || v6 != v229)
      {
        uint64_t v171 = v9;
        uint64_t v177 = v14;
        v227 = v18;
        uint64_t v84 = v12;
        uint64_t v250 = v25;
        uint64_t v200 = v15;
        uint64_t v209 = v27;
        uint64_t v185 = v13;
        uint64_t v193 = v26;
        uint64_t v85 = v24;
        uint64_t v218 = v28;
        uint64_t v86 = v10;
        uint64_t v87 = v11;
        uint64_t v88 = v22;
        uint64_t v89 = v23;
        uint64_t v90 = v8;
        uint64_t v91 = v20;
        v165 = v5;
        uint64_t v92 = v21;
        v258 = v7;
        char v93 = sub_24E475148();
        uint64_t v7 = v258;
        uint64_t v21 = v92;
        uint64_t v5 = v165;
        uint64_t v9 = v171;
        uint64_t v20 = v91;
        uint64_t v8 = v90;
        uint64_t v23 = v89;
        uint64_t v22 = v88;
        uint64_t v11 = v87;
        uint64_t v10 = v86;
        uint64_t v27 = v209;
        uint64_t v28 = v218;
        uint64_t v24 = v85;
        uint64_t v13 = v185;
        uint64_t v26 = v193;
        uint64_t v15 = v200;
        uint64_t v25 = v250;
        uint64_t v12 = v84;
        uint64_t v18 = v227;
        uint64_t v14 = v177;
        char v94 = v93;
        BOOL result = 0;
        if ((v94 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v229)
    {
      return 0;
    }
    if (v5)
    {
      if (!v19) {
        return 0;
      }
      uint64_t v219 = v28;
      v228 = v18;
      uint64_t v95 = v5;
      uint64_t v178 = v14;
      uint64_t v186 = v13;
      uint64_t v96 = v12;
      uint64_t v97 = v25;
      uint64_t v201 = v15;
      uint64_t v210 = v27;
      uint64_t v98 = v24;
      uint64_t v99 = v10;
      uint64_t v194 = v26;
      uint64_t v100 = v11;
      uint64_t v101 = v22;
      uint64_t v102 = v23;
      uint64_t v103 = v8;
      uint64_t v104 = v9;
      uint64_t v105 = v20;
      uint64_t v149 = v21;
      v259 = v7;
      char v106 = sub_24E43B2AC(v95, v19);
      uint64_t v7 = v259;
      uint64_t v21 = v149;
      uint64_t v20 = v105;
      uint64_t v9 = v104;
      uint64_t v8 = v103;
      uint64_t v23 = v102;
      uint64_t v22 = v101;
      uint64_t v11 = v100;
      uint64_t v10 = v99;
      uint64_t v27 = v210;
      uint64_t v28 = v219;
      uint64_t v24 = v98;
      uint64_t v13 = v186;
      uint64_t v26 = v194;
      uint64_t v15 = v201;
      uint64_t v25 = v97;
      uint64_t v12 = v96;
      uint64_t v14 = v178;
      if ((v106 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      v228 = v18;
      if (v19) {
        return 0;
      }
    }
    if (v7)
    {
      if (!v228) {
        return 0;
      }
      uint64_t v260 = v20;
      uint64_t v179 = v14;
      uint64_t v187 = v13;
      uint64_t v107 = v12;
      uint64_t v108 = v25;
      uint64_t v202 = v15;
      uint64_t v211 = v27;
      uint64_t v109 = v24;
      uint64_t v220 = v28;
      uint64_t v110 = v10;
      uint64_t v195 = v26;
      uint64_t v111 = v11;
      uint64_t v112 = v22;
      uint64_t v113 = v23;
      uint64_t v114 = v8;
      uint64_t v115 = v9;
      uint64_t v116 = v21;
      char v117 = sub_24E43B2AC(v7, v228);
      uint64_t v21 = v116;
      uint64_t v9 = v115;
      uint64_t v8 = v114;
      uint64_t v23 = v113;
      uint64_t v22 = v112;
      uint64_t v11 = v111;
      uint64_t v10 = v110;
      uint64_t v27 = v211;
      uint64_t v28 = v220;
      uint64_t v24 = v109;
      uint64_t v13 = v187;
      uint64_t v26 = v195;
      uint64_t v15 = v202;
      uint64_t v25 = v108;
      uint64_t v12 = v107;
      uint64_t v14 = v179;
      if ((v117 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v260 = v20;
      if (v228) {
        return 0;
      }
    }
    if (v9)
    {
      if (!v260) {
        return 0;
      }
      if (v8 != v21 || v9 != v260)
      {
        uint64_t v118 = v14;
        uint64_t v119 = v12;
        uint64_t v120 = v25;
        uint64_t v203 = v15;
        uint64_t v212 = v27;
        uint64_t v121 = v13;
        uint64_t v122 = v24;
        uint64_t v221 = v28;
        uint64_t v123 = v10;
        uint64_t v124 = v26;
        uint64_t v125 = v11;
        uint64_t v126 = v22;
        uint64_t v127 = v23;
        char v128 = sub_24E475148();
        uint64_t v23 = v127;
        uint64_t v22 = v126;
        uint64_t v11 = v125;
        uint64_t v26 = v124;
        uint64_t v10 = v123;
        uint64_t v27 = v212;
        uint64_t v28 = v221;
        uint64_t v24 = v122;
        uint64_t v13 = v121;
        uint64_t v15 = v203;
        uint64_t v25 = v120;
        uint64_t v12 = v119;
        uint64_t v14 = v118;
        char v129 = v128;
        BOOL result = 0;
        if ((v129 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v260)
    {
      return 0;
    }
    if (v11)
    {
      if (!v22) {
        return 0;
      }
      if (v10 != v23 || v11 != v22)
      {
        uint64_t v130 = v14;
        uint64_t v131 = v12;
        uint64_t v132 = v25;
        uint64_t v133 = v15;
        uint64_t v134 = v13;
        uint64_t v135 = v24;
        char v136 = sub_24E475148();
        uint64_t v24 = v135;
        uint64_t v13 = v134;
        uint64_t v15 = v133;
        uint64_t v25 = v132;
        uint64_t v12 = v131;
        uint64_t v14 = v130;
        char v137 = v136;
        BOOL result = 0;
        if ((v137 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v232)
    {
      if (!v24) {
        return 0;
      }
      if (v231 != v230 || v232 != v24)
      {
        uint64_t v138 = v14;
        uint64_t v139 = v12;
        uint64_t v140 = v25;
        char v141 = sub_24E475148();
        uint64_t v25 = v140;
        uint64_t v12 = v139;
        uint64_t v14 = v138;
        char v142 = v141;
        BOOL result = 0;
        if ((v142 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    uint64_t v143 = v14;
    if (v13)
    {
      if (!v26) {
        return 0;
      }
      uint64_t v144 = v15;
      if (v12 != v25 || v13 != v26)
      {
        char v145 = sub_24E475148();
        BOOL result = 0;
        if ((v145 & 1) == 0) {
          return result;
        }
      }
    }
    else
    {
      uint64_t v144 = v15;
      if (v26) {
        return 0;
      }
    }
    if (v144) {
      return v27 && (v143 == v28 && v15 == v27 || (sub_24E475148() & 1) != 0);
    }
    return !v27;
  }
  return result;
}

unint64_t sub_24E43E1BC()
{
  unint64_t result = qword_2698DC358;
  if (!qword_2698DC358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC358);
  }
  return result;
}

unint64_t sub_24E43E214()
{
  unint64_t result = qword_2698DC368;
  if (!qword_2698DC368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC368);
  }
  return result;
}

uint64_t destroy for PlaceMark()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PlaceMark(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PlaceMark(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for PlaceMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PlaceMark()
{
  return &type metadata for PlaceMark;
}

unsigned char *storeEnumTagSinglePayload for PlaceMark.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E43E7E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceMark.CodingKeys()
{
  return &type metadata for PlaceMark.CodingKeys;
}

unint64_t sub_24E43E81C()
{
  unint64_t result = qword_2698DC370;
  if (!qword_2698DC370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC370);
  }
  return result;
}

unint64_t sub_24E43E874()
{
  unint64_t result = qword_2698DC378;
  if (!qword_2698DC378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC378);
  }
  return result;
}

unint64_t sub_24E43E8CC()
{
  unint64_t result = qword_2698DC380;
  if (!qword_2698DC380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC380);
  }
  return result;
}

uint64_t sub_24E43E920()
{
  unint64_t v0 = sub_24E474FB8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

BOOL static ClientOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GroupID.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x46746C7561666564;
  }
}

uint64_t ClientOrigin.description.getter()
{
  uint64_t v1 = 0x6567617373656D2ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x726568746F2ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x41794D646E69662ELL;
  }
}

uint64_t ClientOrigin.hash(into:)()
{
  return sub_24E475238();
}

uint64_t sub_24E43EA7C(uint64_t a1)
{
  unint64_t v2 = sub_24E376B2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43EAB8(uint64_t a1)
{
  unint64_t v2 = sub_24E376B2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E43EAF4(uint64_t a1)
{
  unint64_t v2 = sub_24E376B80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43EB30(uint64_t a1)
{
  unint64_t v2 = sub_24E376B80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E43EB6C(uint64_t a1)
{
  unint64_t v2 = sub_24E43ECB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43EBA8(uint64_t a1)
{
  unint64_t v2 = sub_24E43ECB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E43EBE4(uint64_t a1)
{
  unint64_t v2 = sub_24E43EC5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43EC20(uint64_t a1)
{
  unint64_t v2 = sub_24E43EC5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24E43EC5C()
{
  unint64_t result = qword_26B1B8058;
  if (!qword_26B1B8058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8058);
  }
  return result;
}

unint64_t sub_24E43ECB0()
{
  unint64_t result = qword_26B1B81B0;
  if (!qword_26B1B81B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B81B0);
  }
  return result;
}

uint64_t ClientOrigin.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t sub_24E43ED4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24E385848(*a1, *a2);
}

uint64_t sub_24E43ED58()
{
  return sub_24E4598CC();
}

uint64_t sub_24E43ED60()
{
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

void sub_24E43EE00(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA0000000000464DLL;
  unint64_t v4 = 0xD000000000000013;
  unint64_t v5 = 0x800000024E475C50;
  if (v2 != 1)
  {
    unint64_t v4 = 0xD000000000000010;
    unint64_t v5 = 0x800000024E475C70;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x46746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v5;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24E43EE70()
{
  return sub_24E474B48();
}

void RequestOrigin.origin.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t RequestOrigin.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E475238();
  sub_24E475238();
  if (!v1) {
    return sub_24E475248();
  }
  sub_24E475248();
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E43EF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E43F648(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E43EF8C(uint64_t a1)
{
  unint64_t v2 = sub_24E381654();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E43EFC8(uint64_t a1)
{
  unint64_t v2 = sub_24E381654();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RequestOrigin.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E475228();
  sub_24E475238();
  sub_24E475238();
  sub_24E475248();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
  }
  return sub_24E475268();
}

uint64_t sub_24E43F0B0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E475228();
  sub_24E475238();
  sub_24E475238();
  sub_24E475248();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
  }
  return sub_24E475268();
}

uint64_t sub_24E43F158()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E475238();
  sub_24E475238();
  if (!v1) {
    return sub_24E475248();
  }
  sub_24E475248();
  swift_bridgeObjectRetain();
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E43F1EC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E475228();
  sub_24E475238();
  sub_24E475238();
  sub_24E475248();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24E474AD8();
    swift_bridgeObjectRelease();
  }
  return sub_24E475268();
}

FindMyLocate::RequestOrigin __swiftcall RequestOrigin.init(_:fakeBundleIdBasedOnOrigin:)(FindMyLocate::ClientOrigin _, Swift::Bool fakeBundleIdBasedOnOrigin)
{
  uint64_t v4 = v2;
  int v5 = *(unsigned __int8 *)_;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB0]), sel_init);
  signed int v7 = objc_msgSend(v6, sel_processIdentifier);

  if (fakeBundleIdBasedOnOrigin)
  {
    uint64_t v12 = 0xD000000000000010;
    if (!v5)
    {
      uint64_t v13 = "com.apple.findmy";
      goto LABEL_9;
    }
    if (v5 == 1)
    {
      uint64_t v12 = 0xD000000000000013;
      uint64_t v13 = "com.apple.MobileSMS";
LABEL_9:
      unint64_t v17 = (unint64_t)(v13 - 32) | 0x8000000000000000;
      goto LABEL_10;
    }
  }
  id v14 = objc_msgSend(self, sel_mainBundle);
  id v15 = objc_msgSend(v14, sel_bundleIdentifier);

  if (v15)
  {
    uint64_t v12 = sub_24E474A88();
    unint64_t v17 = v16;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v17 = 0;
  }
LABEL_10:
  *(unsigned char *)uint64_t v4 = v5;
  *(void *)(v4 + 8) = v7;
  *(void *)(v4 + 16) = v12;
  *(void *)(v4 + 24) = v17;
  result.clientBundleIdentifier.value._object = v11;
  result.clientBundleIdentifier.value._countAndFlagsBits = v10;
  result.clientPid = v9;
  result.origin = v8;
  return result;
}

uint64_t _s12FindMyLocate13RequestOriginV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || a1[1] != a2[1]) {
    return 0;
  }
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[3];
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    BOOL v7 = a1[2] == a2[2] && v5 == v6;
    if (!v7 && (sub_24E475148() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_24E43F42C()
{
  unint64_t result = qword_2698DC390;
  if (!qword_2698DC390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC390);
  }
  return result;
}

unint64_t sub_24E43F484()
{
  unint64_t result = qword_26B1B7E38;
  if (!qword_26B1B7E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B7E38);
  }
  return result;
}

uint64_t assignWithCopy for RequestOrigin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RequestOrigin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24E43F59C()
{
  unint64_t result = qword_2698DC398;
  if (!qword_2698DC398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC398);
  }
  return result;
}

unint64_t sub_24E43F5F4()
{
  unint64_t result = qword_2698DC3A0;
  if (!qword_2698DC3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC3A0);
  }
  return result;
}

uint64_t sub_24E43F648(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E696769726FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6950746E65696C63 && a2 == 0xE900000000000064 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024E478420)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void destroy for SessionData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  BOOL v2 = *(void **)(a1 + 184);
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  id v14 = *(void **)(a2 + 176);
  id v15 = *(void **)(a2 + 184);
  *(void *)(a1 + 176) = v14;
  *(void *)(a1 + 184) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v14;
  id v12 = v15;
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 176);
  uint64_t v5 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 184);
  uint64_t v8 = *(void **)(a2 + 184);
  *(void *)(a1 + 184) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  id v9 = *(void **)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);

  uint64_t v10 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);

  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData()
{
  return &type metadata for SessionData;
}

uint64_t LocationShifter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  if (qword_2698DA6A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E4749E8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698ED8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F417D8]), sel_init);
  *(void *)(v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_shifter) = v4;
  return v0;
}

BOOL static LocationShifter.LocationShifterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LocationShifter.LocationShifterError.hash(into:)()
{
  return sub_24E475238();
}

uint64_t LocationShifter.LocationShifterError.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t LocationShifter.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  if (qword_2698DA6A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E4749E8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698ED8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F417D8]), sel_init);
  *(void *)(v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_shifter) = v4;
  return v0;
}

uint64_t sub_24E43FF30(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for Location();
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E43FFC8, 0, 0);
}

uint64_t sub_24E43FFC8()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = self;
  uint64_t v4 = v2 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location;
  unsigned int v5 = objc_msgSend(v3, sel_isLocationShiftRequiredForCoordinate_, *(double *)(v4 + *(int *)(v1 + 40)), *(double *)(v4 + *(int *)(v1 + 44)));
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  if (v5)
  {
    uint64_t v8 = swift_task_alloc();
    v0[9] = v8;
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    id v9 = (void *)swift_task_alloc();
    v0[10] = v9;
    *id v9 = v0;
    v9[1] = sub_24E4402C0;
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    return MEMORY[0x270FA2360](v10, 0, 0, 0x6572287466696873, 0xEF293A7473657571, sub_24E440998, v8, v11);
  }
  else
  {
    swift_retain_n();
    id v12 = sub_24E4749C8();
    os_log_type_t v13 = sub_24E474D78();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = v15;
      *(_DWORD *)uint64_t v14 = 141558275;
      v0[2] = 1752392040;
      sub_24E474DE8();
      *(_WORD *)(v14 + 12) = 2081;
      uint64_t v16 = Location.description.getter();
      v0[3] = sub_24E37E724(v16, v17, &v20);
      sub_24E474DE8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E36C000, v12, v13, "LocationShifter: shifting not required for location %{private,mask.hash}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25333BB40](v15, -1, -1);
      MEMORY[0x25333BB40](v14, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    sub_24E3831BC(v4, v0[4]);
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_24E4402C0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E44044C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24E4403DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E4403DC()
{
  sub_24E425438(v0[8], v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E44044C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E4404B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC3E0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_24E3824A4(a3, (uint64_t)sub_24E440DBC, v9);
  return swift_release();
}

uint64_t sub_24E440600(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7B08);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Location();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = (char *)&v18 - v12;
  if (a2)
  {
    uint64_t v19 = (uint64_t)a2;
    id v14 = a2;
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC3E0);
    return sub_24E474C38();
  }
  sub_24E440E40(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24E382F90((uint64_t)v6);
    sub_24E440EA8();
    uint64_t v15 = swift_allocError();
    *uint64_t v16 = 2;
    uint64_t v19 = v15;
    goto LABEL_5;
  }
  sub_24E425438((uint64_t)v6, (uint64_t)v13);
  sub_24E3831BC((uint64_t)v13, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC3E0);
  sub_24E474C48();
  return sub_24E383220((uint64_t)v13);
}

uint64_t LocationShifter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  uint64_t v2 = sub_24E4749E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t LocationShifter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  uint64_t v2 = sub_24E4749E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_24E440914()
{
  uint64_t v0 = sub_24E4749E8();
  __swift_allocate_value_buffer(v0, qword_2698ED8E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698ED8E0);
  return sub_24E4749D8();
}

uint64_t sub_24E440998(uint64_t a1)
{
  return sub_24E4404B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_24E4409A4()
{
  unint64_t result = qword_2698DC3C0;
  if (!qword_2698DC3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC3C0);
  }
  return result;
}

uint64_t sub_24E4409F8()
{
  return type metadata accessor for LocationShifter();
}

uint64_t type metadata accessor for LocationShifter()
{
  uint64_t result = qword_2698DC3C8;
  if (!qword_2698DC3C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E440A4C()
{
  uint64_t result = sub_24E4749E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for LocationShifter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocationShifter);
}

uint64_t dispatch thunk of LocationShifter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LocationShifter.shift(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 104) + **(int **)(*(void *)v2 + 104));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_24E3801B0;
  return v8(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for LocationShifter.LocationShifterError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E440CF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationShifter.LocationShifterError()
{
  return &type metadata for LocationShifter.LocationShifterError;
}

uint64_t sub_24E440D28()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC3E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E440DBC(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC3E0);
  return sub_24E440600(a1, a2);
}

uint64_t sub_24E440E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E440EA8()
{
  unint64_t result = qword_2698DC3E8;
  if (!qword_2698DC3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2698DC3E8);
  }
  return result;
}

uint64_t sub_24E440EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B99D0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E381E60(a1, (uint64_t)v8, &qword_26B1B99D0);
  uint64_t v9 = sub_24E474C78();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24E379BD4((uint64_t)v8, &qword_26B1B99D0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_24E474C28();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E474C68();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_24E4410F0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B99F8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E474898();
  uint64_t v3 = sub_24E4748B8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  type metadata accessor for ReverseGeocoder(0);
  uint64_t v4 = swift_allocObject();
  uint64_t result = ReverseGeocoder.init(preferredLocale:)((uint64_t)v2);
  qword_26B1B9F08 = v4;
  return result;
}

uint64_t ReverseGeocoder.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ReverseGeocoder.init(preferredLocale:)(a1);
  return v2;
}

uint64_t static ReverseGeocoder.shared.getter()
{
  if (qword_26B1B9F10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ReverseGeocoder.shared.setter(uint64_t a1)
{
  if (qword_26B1B9F10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26B1B9F08 = a1;
  return swift_release();
}

uint64_t (*static ReverseGeocoder.shared.modify())()
{
  if (qword_26B1B9F10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL static ReverseGeocoder.ReverseGeocodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ReverseGeocoder.ReverseGeocodingError.hash(into:)()
{
  return sub_24E475238();
}

uint64_t ReverseGeocoder.ReverseGeocodingError.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t ReverseGeocoder.deinit()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B99D0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_workItemQueue);
  uint64_t v5 = sub_24E474C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  swift_retain();
  sub_24E440EFC((uint64_t)v3, (uint64_t)&unk_2698DC3F8, (uint64_t)v6);
  swift_release();
  sub_24E379BD4((uint64_t)v3, &qword_26B1B99D0);
  uint64_t v7 = v0 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_startDate;
  uint64_t v8 = sub_24E474818();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E379BD4(v0 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_locale, &qword_26B1B99F8);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ReverseGeocoder.__deallocating_deinit()
{
  ReverseGeocoder.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E4415EC(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 24) = a3;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 120) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 40) = type metadata accessor for ReverseGeocodingRequest();
  *(void *)(v5 + 48) = swift_task_alloc();
  *(void *)(v5 + 56) = type metadata accessor for Location();
  *(void *)(v5 + 64) = swift_task_alloc();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = v8;
  *(void *)(v5 + 88) = v9;
  return MEMORY[0x270FA2498](sub_24E4416DC, v4, 0);
}

uint64_t sub_24E4416DC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 24);
  double v3 = *(double *)(v2 + *(int *)(v1 + 32));
  BOOL v4 = v3 >= 200.0 || v3 < 0.0;
  int v5 = *(unsigned __int8 *)(v2 + *(int *)(v1 + 60));
  sub_24E444534(v2, *(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for Location);
  uint64_t v6 = *(void *)(v0 + 72);
  if (v5 == 2)
  {
    uint64_t v7 = *(void *)(v0 + 56);
    int v8 = *(unsigned __int8 *)(v6 + *(int *)(v7 + 64));
    sub_24E444534(v6, *(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for Location);
    uint64_t v9 = *(void *)(v0 + 64);
    BOOL v10 = v8 != 1 && *(unsigned char *)(v9 + *(int *)(v7 + 64)) != 2;
    uint64_t v13 = *(void *)(v0 + 72);
    char v14 = *(unsigned char *)(v0 + 120);
    sub_24E4425F0(v9, (uint64_t (*)(void))type metadata accessor for Location);
    sub_24E4425F0(v13, (uint64_t (*)(void))type metadata accessor for Location);
    char v12 = 1;
    if ((v14 & 1) != 0 || v10) {
      goto LABEL_13;
    }
  }
  else
  {
    char v11 = *(unsigned char *)(v0 + 120);
    sub_24E4425F0(v6, (uint64_t (*)(void))type metadata accessor for Location);
    if (v11)
    {
      char v12 = 1;
      goto LABEL_13;
    }
  }
  char v12 = v4;
LABEL_13:
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v18 = *(int **)(v0 + 40);
  unint64_t v17 = *(void **)(v0 + 48);
  uint64_t v19 = *(void *)(v0 + 32);
  sub_24E444534(*(void *)(v0 + 24), (uint64_t)v17 + v18[5], (uint64_t (*)(void))type metadata accessor for Location);
  sub_24E381E60(v19 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_locale, (uint64_t)v17 + v18[6], &qword_26B1B99F8);
  *unint64_t v17 = v16;
  v17[1] = v15;
  *((unsigned char *)v17 + v18[7]) = v12;
  unint64_t v20 = sub_24E38A660();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 96) = v21;
  *(void *)(v21 + 16) = v19;
  *(void *)(v21 + 24) = v17;
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_24E44194C;
  uint64_t v23 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v23, v19, v20, 0xD000000000000033, 0x800000024E478480, sub_24E4425E8, v21, &type metadata for Address);
}

uint64_t sub_24E44194C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    BOOL v4 = sub_24E441B34;
  }
  else {
    BOOL v4 = sub_24E441A94;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E441A94()
{
  sub_24E4425F0(*(void *)(v0 + 48), (uint64_t (*)(void))type metadata accessor for ReverseGeocodingRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E441B34()
{
  sub_24E4425F0(*(void *)(v0 + 48), (uint64_t (*)(void))type metadata accessor for ReverseGeocodingRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E441BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a1;
  uint64_t v5 = sub_24E474878();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698DA9E0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = type metadata accessor for ReverseGeocodingRequest();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  char v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24E474458();
  sub_24E444534(a3, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ReverseGeocodingRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_24E444858((uint64_t)v12, v15 + v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
  sub_24E474448();
  sub_24E474478();
  return swift_release();
}

uint64_t sub_24E441E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[209] = a3;
  v3[208] = a2;
  v3[207] = a1;
  return MEMORY[0x270FA2498](sub_24E441E98, a1, 0);
}

uint64_t sub_24E441E98()
{
  sub_24E388904(*(uint64_t **)(v0 + 1664), v0 + 560);
  return MEMORY[0x270FA2498](sub_24E441F08, 0, 0);
}

uint64_t sub_24E441F08()
{
  sub_24E37A4CC((uint64_t)(v0 + 70), (uint64_t)(v0 + 36), &qword_2698DA9F8);
  sub_24E37A4CC((uint64_t)(v0 + 36), (uint64_t)(v0 + 2), &qword_2698DA9F8);
  if (sub_24E38AE90((uint64_t)(v0 + 2)) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[210] = v1;
    void *v1 = v0;
    v1[1] = sub_24E442058;
    uint64_t v2 = v0[208];
    return sub_24E386A20((uint64_t)(v0 + 104), v2);
  }
  else
  {
    memcpy(v0 + 138, v0 + 2, 0x110uLL);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698DA9E0);
    sub_24E474C48();
    BOOL v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_24E442058()
{
  *(void *)(*(void *)v1 + 1688) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E4421F8;
  }
  else {
    uint64_t v2 = sub_24E44216C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E44216C()
{
  memcpy(v0 + 172, v0 + 104, 0x110uLL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698DA9E0);
  sub_24E474C48();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E4421F8()
{
  v0[206] = v0[211];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698DA9E0);
  sub_24E474C38();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E44227C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v4 + 192) = v3;
  long long v7 = a2[9];
  *(_OWORD *)(v4 + 144) = a2[8];
  *(_OWORD *)(v4 + 160) = v7;
  *(_OWORD *)(v4 + 176) = a2[10];
  long long v8 = a2[5];
  *(_OWORD *)(v4 + 80) = a2[4];
  *(_OWORD *)(v4 + 96) = v8;
  long long v9 = a2[7];
  *(_OWORD *)(v4 + 112) = a2[6];
  *(_OWORD *)(v4 + 128) = v9;
  long long v10 = a2[1];
  *(_OWORD *)(v4 + 16) = *a2;
  *(_OWORD *)(v4 + 32) = v10;
  long long v11 = a2[3];
  *(_OWORD *)(v4 + 48) = a2[2];
  *(_OWORD *)(v4 + 64) = v11;
  char v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 200) = v12;
  *char v12 = v4;
  v12[1] = sub_24E442364;
  return sub_24E4415EC(a1, (uint64_t *)(v4 + 16), a3, 0);
}

uint64_t sub_24E442364()
{
  uint64_t v2 = (void *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[24];
    return MEMORY[0x270FA2498](sub_24E442498, v3, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_24E442498()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ReverseGeocoder.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E4424BC()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E4424FC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3801B0;
  uint64_t v4 = (uint64_t (*)(void))((int)*MEMORY[0x263F3C9C8] + MEMORY[0x263F3C9C8]);
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_24E380080;
  return v4();
}

uint64_t sub_24E4425E8(uint64_t a1)
{
  return sub_24E441BD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24E4425F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24E442654()
{
  unint64_t result = qword_2698DC410;
  if (!qword_2698DC410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC410);
  }
  return result;
}

uint64_t sub_24E4426A8()
{
  return type metadata accessor for ReverseGeocoder(0);
}

uint64_t method lookup function for ReverseGeocoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ReverseGeocoder);
}

uint64_t dispatch thunk of ReverseGeocoder.__allocating_init(preferredLocale:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ReverseGeocoder.reverseGeocode(for:location:onlyNeedCoarseAddress:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 256)
                                                                   + **(int **)(*(void *)v4 + 256));
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *long long v10 = v5;
  v10[1] = sub_24E3801B0;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ReverseGeocoder.reverseGeocode(for:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 264)
                                                          + **(int **)(*(void *)v3 + 264));
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *long long v8 = v4;
  v8[1] = sub_24E380080;
  return v10(a1, a2, a3);
}

unsigned char *storeEnumTagSinglePayload for ReverseGeocoder.ReverseGeocodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E442A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReverseGeocoder.ReverseGeocodingError()
{
  return &type metadata for ReverseGeocoder.ReverseGeocodingError;
}

uint64_t *sub_24E442A38(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v25 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    long long v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for Location();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = *((void *)v16 + 1);
    uint64_t v63 = a1;
    if (v17 == 1)
    {
      long long v18 = *((_OWORD *)v16 + 9);
      *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
      *((_OWORD *)v15 + 9) = v18;
      long long v19 = *((_OWORD *)v16 + 11);
      *((_OWORD *)v15 + 10) = *((_OWORD *)v16 + 10);
      *((_OWORD *)v15 + 11) = v19;
      long long v20 = *((_OWORD *)v16 + 5);
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      *((_OWORD *)v15 + 5) = v20;
      long long v21 = *((_OWORD *)v16 + 7);
      *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
      *((_OWORD *)v15 + 7) = v21;
      long long v22 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v22;
      long long v23 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v23;
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v17;
      uint64_t v26 = *((void *)v16 + 3);
      *((void *)v15 + 2) = *((void *)v16 + 2);
      *((void *)v15 + 3) = v26;
      uint64_t v27 = *((void *)v16 + 5);
      *((void *)v15 + 4) = *((void *)v16 + 4);
      *((void *)v15 + 5) = v27;
      uint64_t v28 = *((void *)v16 + 7);
      *((void *)v15 + 6) = *((void *)v16 + 6);
      *((void *)v15 + 7) = v28;
      uint64_t v29 = *((void *)v16 + 9);
      *((void *)v15 + 8) = *((void *)v16 + 8);
      *((void *)v15 + 9) = v29;
      uint64_t v30 = *((void *)v16 + 11);
      *((void *)v15 + 10) = *((void *)v16 + 10);
      *((void *)v15 + 11) = v30;
      uint64_t v62 = *((void *)v16 + 13);
      *((void *)v15 + 12) = *((void *)v16 + 12);
      *((void *)v15 + 13) = v62;
      uint64_t v31 = *((void *)v16 + 15);
      *((void *)v15 + 14) = *((void *)v16 + 14);
      *((void *)v15 + 15) = v31;
      uint64_t v32 = *((void *)v16 + 17);
      *((void *)v15 + 16) = *((void *)v16 + 16);
      *((void *)v15 + 17) = v32;
      uint64_t v33 = *((void *)v16 + 19);
      *((void *)v15 + 18) = *((void *)v16 + 18);
      *((void *)v15 + 19) = v33;
      uint64_t v34 = *((void *)v16 + 21);
      *((void *)v15 + 20) = *((void *)v16 + 20);
      *((void *)v15 + 21) = v34;
      uint64_t v61 = *((void *)v16 + 23);
      *((void *)v15 + 22) = *((void *)v16 + 22);
      *((void *)v15 + 23) = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)&v10[v13[6]] = *(void *)&v11[v13[6]];
    *(void *)&v10[v13[7]] = *(void *)&v11[v13[7]];
    *(void *)&v10[v13[8]] = *(void *)&v11[v13[8]];
    *(void *)&v10[v13[9]] = *(void *)&v11[v13[9]];
    *(void *)&v10[v13[10]] = *(void *)&v11[v13[10]];
    *(void *)&v10[v13[11]] = *(void *)&v11[v13[11]];
    *(void *)&v10[v13[12]] = *(void *)&v11[v13[12]];
    *(void *)&v10[v13[13]] = *(void *)&v11[v13[13]];
    *(void *)&v10[v13[14]] = *(void *)&v11[v13[14]];
    v10[v13[15]] = v11[v13[15]];
    v10[v13[16]] = v11[v13[16]];
    uint64_t v35 = a3[7];
    unint64_t v36 = (char *)a1 + v35;
    char v37 = (char *)a2 + v35;
    uint64_t v38 = sub_24E474818();
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    swift_bridgeObjectRetain();
    v39(v36, v37, v38);
    uint64_t v40 = a3[8];
    uint64_t v41 = (uint64_t *)((char *)a1 + v40);
    uint64_t v42 = (uint64_t *)((char *)a2 + v40);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = v42[3];
    v41[2] = v42[2];
    v41[3] = v44;
    uint64_t v45 = v42[5];
    v41[4] = v42[4];
    v41[5] = v45;
    uint64_t v46 = v42[7];
    v41[6] = v42[6];
    v41[7] = v46;
    uint64_t v47 = v42[9];
    v41[8] = v42[8];
    v41[9] = v47;
    uint64_t v48 = v42[11];
    v41[10] = v42[10];
    v41[11] = v48;
    uint64_t v49 = v42[13];
    v41[12] = v42[12];
    v41[13] = v49;
    uint64_t v50 = v42[15];
    v41[14] = v42[14];
    v41[15] = v50;
    uint64_t v51 = v42[17];
    v41[16] = v42[16];
    v41[17] = v51;
    uint64_t v52 = v42[19];
    v41[18] = v42[18];
    v41[19] = v52;
    uint64_t v53 = v42[21];
    v41[20] = v42[20];
    v41[21] = v53;
    uint64_t v54 = v42[23];
    v41[22] = v42[22];
    v41[23] = v54;
    uint64_t v55 = v42[25];
    v41[24] = v42[24];
    v41[25] = v55;
    uint64_t v56 = v42[27];
    v41[26] = v42[26];
    v41[27] = v56;
    uint64_t v57 = v42[29];
    v41[28] = v42[28];
    v41[29] = v57;
    uint64_t v58 = v42[31];
    v41[30] = v42[30];
    v41[31] = v58;
    uint64_t v60 = v42[33];
    v41[32] = v42[32];
    v41[33] = v60;
    swift_bridgeObjectRetain();
    uint64_t v25 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v25;
}

uint64_t sub_24E442E94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(void *)(v4 + *(int *)(type metadata accessor for Location() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_24E474818();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_24E443090(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v61 = a1;
  uint64_t v9 = (char *)a1 + v8;
  long long v10 = (char *)a2 + v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for Location();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = *((void *)v15 + 1);
  if (v16 == 1)
  {
    long long v17 = *((_OWORD *)v15 + 9);
    *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
    *((_OWORD *)v14 + 9) = v17;
    long long v18 = *((_OWORD *)v15 + 11);
    *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
    *((_OWORD *)v14 + 11) = v18;
    long long v19 = *((_OWORD *)v15 + 5);
    *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
    *((_OWORD *)v14 + 5) = v19;
    long long v20 = *((_OWORD *)v15 + 7);
    *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
    *((_OWORD *)v14 + 7) = v20;
    long long v21 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v21;
    long long v22 = *((_OWORD *)v15 + 3);
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 3) = v22;
  }
  else
  {
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v23 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v23;
    uint64_t v24 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v24;
    uint64_t v60 = v3;
    uint64_t v25 = *((void *)v15 + 7);
    *((void *)v14 + 6) = *((void *)v15 + 6);
    *((void *)v14 + 7) = v25;
    uint64_t v26 = *((void *)v15 + 9);
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((void *)v14 + 9) = v26;
    uint64_t v27 = *((void *)v15 + 11);
    *((void *)v14 + 10) = *((void *)v15 + 10);
    *((void *)v14 + 11) = v27;
    uint64_t v28 = *((void *)v15 + 13);
    *((void *)v14 + 12) = *((void *)v15 + 12);
    *((void *)v14 + 13) = v28;
    uint64_t v29 = *((void *)v15 + 15);
    *((void *)v14 + 14) = *((void *)v15 + 14);
    *((void *)v14 + 15) = v29;
    uint64_t v30 = *((void *)v15 + 17);
    *((void *)v14 + 16) = *((void *)v15 + 16);
    *((void *)v14 + 17) = v30;
    uint64_t v31 = *((void *)v15 + 19);
    *((void *)v14 + 18) = *((void *)v15 + 18);
    *((void *)v14 + 19) = v31;
    uint64_t v32 = *((void *)v15 + 21);
    *((void *)v14 + 20) = *((void *)v15 + 20);
    *((void *)v14 + 21) = v32;
    uint64_t v58 = *((void *)v15 + 23);
    *((void *)v14 + 22) = *((void *)v15 + 22);
    *((void *)v14 + 23) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v3 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
  *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
  *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
  *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
  *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
  *(void *)&v9[v12[13]] = *(void *)&v10[v12[13]];
  *(void *)&v9[v12[14]] = *(void *)&v10[v12[14]];
  v9[v12[15]] = v10[v12[15]];
  v9[v12[16]] = v10[v12[16]];
  uint64_t v33 = *(int *)(v3 + 28);
  uint64_t v34 = (char *)v61 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_24E474818();
  char v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  uint64_t v38 = *(int *)(v3 + 32);
  uint64_t v39 = (void *)((char *)v61 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v40[3];
  v39[2] = v40[2];
  v39[3] = v42;
  uint64_t v43 = v40[5];
  v39[4] = v40[4];
  v39[5] = v43;
  uint64_t v44 = v40[7];
  v39[6] = v40[6];
  v39[7] = v44;
  uint64_t v45 = v40[9];
  v39[8] = v40[8];
  v39[9] = v45;
  uint64_t v46 = v40[11];
  v39[10] = v40[10];
  v39[11] = v46;
  uint64_t v47 = v40[13];
  v39[12] = v40[12];
  v39[13] = v47;
  uint64_t v48 = v40[15];
  v39[14] = v40[14];
  v39[15] = v48;
  uint64_t v49 = v40[17];
  v39[16] = v40[16];
  v39[17] = v49;
  uint64_t v50 = v40[19];
  v39[18] = v40[18];
  v39[19] = v50;
  uint64_t v51 = v40[21];
  v39[20] = v40[20];
  v39[21] = v51;
  uint64_t v52 = v40[23];
  v39[22] = v40[22];
  v39[23] = v52;
  uint64_t v53 = v40[25];
  v39[24] = v40[24];
  v39[25] = v53;
  uint64_t v54 = v40[27];
  v39[26] = v40[26];
  v39[27] = v54;
  uint64_t v55 = v40[29];
  v39[28] = v40[28];
  v39[29] = v55;
  uint64_t v56 = v40[31];
  v39[30] = v40[30];
  v39[31] = v56;
  uint64_t v59 = v40[33];
  v39[32] = v40[32];
  v39[33] = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v61;
}

void *sub_24E4434A0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  long long v10 = (int *)type metadata accessor for Location();
  uint64_t v11 = v10[5];
  uint64_t v12 = (uint64_t)&v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = *(void *)&v7[v11 + 8];
  uint64_t v15 = *(void *)&v8[v11 + 8];
  if (v14 == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *(_OWORD *)v13;
      long long v17 = *((_OWORD *)v13 + 1);
      long long v18 = *((_OWORD *)v13 + 3);
      *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
      *(_OWORD *)(v12 + 48) = v18;
      *(_OWORD *)uint64_t v12 = v16;
      *(_OWORD *)(v12 + 16) = v17;
      long long v19 = *((_OWORD *)v13 + 4);
      long long v20 = *((_OWORD *)v13 + 5);
      long long v21 = *((_OWORD *)v13 + 7);
      *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
      *(_OWORD *)(v12 + 112) = v21;
      *(_OWORD *)(v12 + 64) = v19;
      *(_OWORD *)(v12 + 80) = v20;
      long long v22 = *((_OWORD *)v13 + 8);
      long long v23 = *((_OWORD *)v13 + 9);
      long long v24 = *((_OWORD *)v13 + 11);
      *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
      *(_OWORD *)(v12 + 176) = v24;
      *(_OWORD *)(v12 + 128) = v22;
      *(_OWORD *)(v12 + 144) = v23;
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      *(void *)(v12 + 24) = *((void *)v13 + 3);
      *(void *)(v12 + 32) = *((void *)v13 + 4);
      *(void *)(v12 + 40) = *((void *)v13 + 5);
      *(void *)(v12 + 48) = *((void *)v13 + 6);
      *(void *)(v12 + 56) = *((void *)v13 + 7);
      *(void *)(v12 + 64) = *((void *)v13 + 8);
      *(void *)(v12 + 72) = *((void *)v13 + 9);
      *(void *)(v12 + 80) = *((void *)v13 + 10);
      *(void *)(v12 + 88) = *((void *)v13 + 11);
      *(void *)(v12 + 96) = *((void *)v13 + 12);
      *(void *)(v12 + 104) = *((void *)v13 + 13);
      *(void *)(v12 + 112) = *((void *)v13 + 14);
      *(void *)(v12 + 120) = *((void *)v13 + 15);
      *(void *)(v12 + 128) = *((void *)v13 + 16);
      *(void *)(v12 + 136) = *((void *)v13 + 17);
      *(void *)(v12 + 144) = *((void *)v13 + 18);
      *(void *)(v12 + 152) = *((void *)v13 + 19);
      *(void *)(v12 + 160) = *((void *)v13 + 20);
      *(void *)(v12 + 168) = *((void *)v13 + 21);
      *(void *)(v12 + 176) = *((void *)v13 + 22);
      *(void *)(v12 + 184) = *((void *)v13 + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_24E38CB9C(v12);
    long long v25 = *((_OWORD *)v13 + 3);
    long long v27 = *(_OWORD *)v13;
    long long v26 = *((_OWORD *)v13 + 1);
    *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
    *(_OWORD *)(v12 + 48) = v25;
    *(_OWORD *)uint64_t v12 = v27;
    *(_OWORD *)(v12 + 16) = v26;
    long long v28 = *((_OWORD *)v13 + 7);
    long long v30 = *((_OWORD *)v13 + 4);
    long long v29 = *((_OWORD *)v13 + 5);
    *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
    *(_OWORD *)(v12 + 112) = v28;
    *(_OWORD *)(v12 + 64) = v30;
    *(_OWORD *)(v12 + 80) = v29;
    long long v31 = *((_OWORD *)v13 + 11);
    long long v33 = *((_OWORD *)v13 + 8);
    long long v32 = *((_OWORD *)v13 + 9);
    *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
    *(_OWORD *)(v12 + 176) = v31;
    *(_OWORD *)(v12 + 128) = v33;
    *(_OWORD *)(v12 + 144) = v32;
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = *((void *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 16) = *((void *)v13 + 2);
    *(void *)(v12 + 24) = *((void *)v13 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 32) = *((void *)v13 + 4);
    *(void *)(v12 + 40) = *((void *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 48) = *((void *)v13 + 6);
    *(void *)(v12 + 56) = *((void *)v13 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 64) = *((void *)v13 + 8);
    *(void *)(v12 + 72) = *((void *)v13 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 80) = *((void *)v13 + 10);
    *(void *)(v12 + 88) = *((void *)v13 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 96) = *((void *)v13 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 104) = *((void *)v13 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 112) = *((void *)v13 + 14);
    *(void *)(v12 + 120) = *((void *)v13 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 128) = *((void *)v13 + 16);
    *(void *)(v12 + 136) = *((void *)v13 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 144) = *((void *)v13 + 18);
    *(void *)(v12 + 152) = *((void *)v13 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 160) = *((void *)v13 + 20);
    *(void *)(v12 + 168) = *((void *)v13 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 176) = *((void *)v13 + 22);
    *(void *)(v12 + 184) = *((void *)v13 + 23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  *(void *)&v7[v10[9]] = *(void *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[10]] = *(void *)&v8[v10[10]];
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  *(void *)&v7[v10[12]] = *(void *)&v8[v10[12]];
  *(void *)&v7[v10[13]] = *(void *)&v8[v10[13]];
  *(void *)&v7[v10[14]] = *(void *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  v7[v10[16]] = v8[v10[16]];
  uint64_t v34 = a3[7];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_24E474818();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  uint64_t v38 = a3[8];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  *uint64_t v39 = *(void *)((char *)a2 + v38);
  v39[1] = *(void *)((char *)a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[2] = v40[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[3] = v40[3];
  v39[4] = v40[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[5] = v40[5];
  v39[6] = v40[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[7] = v40[7];
  v39[8] = v40[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[9] = v40[9];
  v39[10] = v40[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[11] = v40[11];
  v39[12] = v40[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[13] = v40[13];
  v39[14] = v40[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[15] = v40[15];
  v39[16] = v40[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[17] = v40[17];
  v39[18] = v40[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[19] = v40[19];
  v39[20] = v40[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[21] = v40[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[22] = v40[22];
  v39[23] = v40[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[24] = v40[24];
  v39[25] = v40[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[26] = v40[26];
  v39[27] = v40[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[28] = v40[28];
  v39[29] = v40[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[30] = v40[30];
  v39[31] = v40[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39[32] = v40[32];
  v39[33] = v40[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_24E443C1C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for Location();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  long long v16 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v16;
  long long v17 = *((_OWORD *)v14 + 7);
  *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
  *((_OWORD *)v13 + 7) = v17;
  long long v18 = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((_OWORD *)v13 + 5) = v18;
  long long v19 = *((_OWORD *)v14 + 11);
  *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
  *((_OWORD *)v13 + 11) = v19;
  long long v20 = *((_OWORD *)v14 + 9);
  *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
  *((_OWORD *)v13 + 9) = v20;
  *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
  *(void *)&v8[v11[7]] = *(void *)&v9[v11[7]];
  *(void *)&v8[v11[8]] = *(void *)&v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  *(void *)&v8[v11[10]] = *(void *)&v9[v11[10]];
  *(void *)&v8[v11[11]] = *(void *)&v9[v11[11]];
  *(void *)&v8[v11[12]] = *(void *)&v9[v11[12]];
  *(void *)&v8[v11[13]] = *(void *)&v9[v11[13]];
  *(void *)&v8[v11[14]] = *(void *)&v9[v11[14]];
  v8[v11[15]] = v9[v11[15]];
  v8[v11[16]] = v9[v11[16]];
  uint64_t v21 = a3[7];
  long long v22 = (char *)a1 + v21;
  long long v23 = (char *)a2 + v21;
  uint64_t v24 = sub_24E474818();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  memcpy((char *)a1 + a3[8], (char *)a2 + a3[8], 0x110uLL);
  return a1;
}

void *sub_24E443DD0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for Location();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  long long v15 = &v10[v13];
  if (*(void *)&v9[v13 + 8] != 1)
  {
    uint64_t v16 = *((void *)v15 + 1);
    if (v16 != 1)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v16;
      swift_bridgeObjectRelease();
      uint64_t v23 = *((void *)v15 + 3);
      *((void *)v14 + 2) = *((void *)v15 + 2);
      *((void *)v14 + 3) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *((void *)v15 + 5);
      *((void *)v14 + 4) = *((void *)v15 + 4);
      *((void *)v14 + 5) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *((void *)v15 + 7);
      *((void *)v14 + 6) = *((void *)v15 + 6);
      *((void *)v14 + 7) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *((void *)v15 + 9);
      *((void *)v14 + 8) = *((void *)v15 + 8);
      *((void *)v14 + 9) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *((void *)v15 + 11);
      *((void *)v14 + 10) = *((void *)v15 + 10);
      *((void *)v14 + 11) = v27;
      swift_bridgeObjectRelease();
      *((void *)v14 + 12) = *((void *)v15 + 12);
      swift_bridgeObjectRelease();
      *((void *)v14 + 13) = *((void *)v15 + 13);
      swift_bridgeObjectRelease();
      uint64_t v28 = *((void *)v15 + 15);
      *((void *)v14 + 14) = *((void *)v15 + 14);
      *((void *)v14 + 15) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *((void *)v15 + 17);
      *((void *)v14 + 16) = *((void *)v15 + 16);
      *((void *)v14 + 17) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *((void *)v15 + 19);
      *((void *)v14 + 18) = *((void *)v15 + 18);
      *((void *)v14 + 19) = v30;
      swift_bridgeObjectRelease();
      uint64_t v31 = *((void *)v15 + 21);
      *((void *)v14 + 20) = *((void *)v15 + 20);
      *((void *)v14 + 21) = v31;
      swift_bridgeObjectRelease();
      uint64_t v32 = *((void *)v15 + 23);
      *((void *)v14 + 22) = *((void *)v15 + 22);
      *((void *)v14 + 23) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24E38CB9C((uint64_t)v14);
  }
  long long v17 = *((_OWORD *)v15 + 9);
  *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
  *((_OWORD *)v14 + 9) = v17;
  long long v18 = *((_OWORD *)v15 + 11);
  *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
  *((_OWORD *)v14 + 11) = v18;
  long long v19 = *((_OWORD *)v15 + 5);
  *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
  *((_OWORD *)v14 + 5) = v19;
  long long v20 = *((_OWORD *)v15 + 7);
  *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
  *((_OWORD *)v14 + 7) = v20;
  long long v21 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v21;
  long long v22 = *((_OWORD *)v15 + 3);
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *((_OWORD *)v14 + 3) = v22;
LABEL_6:
  *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
  *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
  *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  swift_bridgeObjectRelease();
  *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
  *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
  *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
  *(void *)&v9[v12[13]] = *(void *)&v10[v12[13]];
  *(void *)&v9[v12[14]] = *(void *)&v10[v12[14]];
  v9[v12[15]] = v10[v12[15]];
  v9[v12[16]] = v10[v12[16]];
  uint64_t v33 = a3[7];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_24E474818();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  uint64_t v37 = a3[8];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v38[2] = v39[2];
  swift_bridgeObjectRelease();
  uint64_t v41 = v39[4];
  v38[3] = v39[3];
  v38[4] = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = v39[6];
  v38[5] = v39[5];
  v38[6] = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = v39[8];
  v38[7] = v39[7];
  char v38[8] = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = v39[10];
  v38[9] = v39[9];
  v38[10] = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = v39[12];
  v38[11] = v39[11];
  v38[12] = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v39[14];
  v38[13] = v39[13];
  v38[14] = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = v39[16];
  v38[15] = v39[15];
  v38[16] = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = v39[18];
  v38[17] = v39[17];
  v38[18] = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = v39[20];
  v38[19] = v39[19];
  v38[20] = v49;
  swift_bridgeObjectRelease();
  v38[21] = v39[21];
  swift_bridgeObjectRelease();
  uint64_t v50 = v39[23];
  v38[22] = v39[22];
  v38[23] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = v39[25];
  v38[24] = v39[24];
  v38[25] = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = v39[27];
  v38[26] = v39[26];
  v38[27] = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = v39[29];
  v38[28] = v39[28];
  v38[29] = v53;
  swift_bridgeObjectRelease();
  uint64_t v54 = v39[31];
  v38[30] = v39[30];
  v38[31] = v54;
  swift_bridgeObjectRelease();
  uint64_t v55 = v39[33];
  v38[32] = v39[32];
  v38[33] = v55;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24E4441B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E4441CC);
}

uint64_t sub_24E4441CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Location();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24E474818();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_24E4442F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E44430C);
}

uint64_t sub_24E44430C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Location();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24E474818();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_2698DC428);
}

uint64_t sub_24E444458()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24E474818();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_24E444534(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E44459C()
{
  uint64_t v1 = type metadata accessor for ReverseGeocodingRequest();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698DA9E0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = *(void *)(v4 + 64);
  swift_release();
  uint64_t v6 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(v1 + 20);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  if (*(void *)(v7 + *(int *)(type metadata accessor for Location() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v6 + *(int *)(v1 + 24);
  uint64_t v10 = sub_24E4748B8();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = (((v2 + 24) & ~v2) + v16 + v5) & ~v5;
  uint64_t v13 = v12 + v15;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v12, v3);
  return MEMORY[0x270FA0238](v0, v13, v2 | v5 | 7);
}

uint64_t sub_24E444858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReverseGeocodingRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E4448BC()
{
  uint64_t v2 = *(void *)(type metadata accessor for ReverseGeocodingRequest() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698DA9E0) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_24E380080;
  v10[209] = v9;
  v10[208] = v8;
  v10[207] = v7;
  return MEMORY[0x270FA2498](sub_24E441E98, v7, 0);
}

uint64_t sub_24E444A14()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E444A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E474C78();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24E474C68();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24E379BD4(a1, &qword_26B1B99D0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24E474C28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

FindMyLocate::ClientSessionError __swiftcall ClientSessionError.init(type:)(FindMyLocate::ClientSessionError type)
{
  unsigned char *v1 = *(unsigned char *)type.type;
  return type;
}

unint64_t sub_24E444C04()
{
  unint64_t result = sub_24E424C0C(MEMORY[0x263F8EE78]);
  dword_26B1B7E80 = 0;
  qword_26B1B7E88 = result;
  return result;
}

uint64_t static Session.sharedSession(origin:)(unsigned char *a1)
{
  LOBYTE(v6) = *a1;
  RequestOrigin.init(_:)((FindMyLocate::ClientOrigin)&v6);
  char v1 = v7;
  uint64_t v2 = v8;
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  if (qword_26B1B7D40 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_26B1B7E80);
  sub_24E444DC8(&qword_26B1B7E88, v1, v2, v3, v4, &v6);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_26B1B7E80);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static Session.sharedSession(_:)(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  if (qword_26B1B7D40 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_26B1B7E80);
  sub_24E444DC8(&qword_26B1B7E88, v1, v2, v3, v4, &v6);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_26B1B7E80);
  return v6;
}

uint64_t sub_24E444DC8@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    uint64_t v17 = 0;
    LOBYTE(v18) = 1;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_24E38494C(a2, a3, a4, a5);
  if ((v13 & 1) == 0)
  {
    uint64_t v17 = 0;
    LOBYTE(v18) = 1;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_24E435BEC(*(void *)(v11 + 56) + 8 * v12, (uint64_t)&v17);
  LOBYTE(v18) = 0;
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_8:
    sub_24E379BD4((uint64_t)&v17, &qword_26B1B7E78);
    goto LABEL_9;
  }
  sub_24E3C2AB8((uint64_t)&v17, (uint64_t)v21);
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t result = sub_24E448B48((uint64_t)v21);
  if (Strong)
  {
    *a6 = Strong;
    return result;
  }
LABEL_9:
  LOBYTE(v17) = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  type metadata accessor for Session();
  uint64_t v16 = swift_allocObject();
  swift_bridgeObjectRetain();
  Session.init(_:)((uint64_t)&v17);
  swift_weakInit();
  LOBYTE(v18) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E3C313C((uint64_t)&v17, a2, a3, a4, a5);
  *a6 = v16;
  return result;
}

uint64_t Session.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Session.init(_:)(a1);
  return v2;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_24E446424;
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 88) = *(unsigned char *)a1;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 8);
  *(void *)(v4 + 40) = *(void *)(a1 + 24);
  return MEMORY[0x270FA2498](sub_24E372074, 0, 0);
}

uint64_t sub_24E444F88()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E444FA8, 0, 0);
}

uint64_t sub_24E444FA8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (os_unfair_lock_s *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 16));
  uint64_t v3 = *(void *)(v1 + 24);
  v0[3] = v3;
  swift_retain();
  os_unfair_lock_unlock(v2);
  if (v3)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[4] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_24E4450A4;
    return MEMORY[0x270FA1FD0]();
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_24E4450A4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4451A0, 0, 0);
}

uint64_t sub_24E4451A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 16));
  swift_release();
  *(void *)(v1 + 24) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 16));
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E445438()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E445470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x270FA2498](sub_24E445490, 0, 0);
}

uint64_t sub_24E445490()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + 56);
    v0[7] = v2;
    swift_retain();
    return MEMORY[0x270FA2498](sub_24E445560, v2, 0);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_24E445560()
{
  swift_weakAssign();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E4455E0, 0, 0);
}

uint64_t sub_24E4455E0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 40);
  *(void *)(v0 + 64) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E445658, v1, 0);
}

uint64_t sub_24E445658()
{
  swift_weakAssign();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E4456DC, 0, 0);
}

uint64_t sub_24E4456DC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 48);
  *(void *)(v0 + 72) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E445754, v1, 0);
}

uint64_t sub_24E445754()
{
  swift_weakAssign();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E4457D8, 0, 0);
}

uint64_t sub_24E4457D8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 32);
  *(void *)(v0 + 80) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E445850, v1, 0);
}

uint64_t sub_24E445850()
{
  swift_weakAssign();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_24E445904;
  return sub_24E445B14();
}

uint64_t sub_24E445904()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E445A00, 0, 0);
}

uint64_t sub_24E445A00()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E445A60()
{
  return objectdestroy_2Tm(40);
}

uint64_t sub_24E445A68()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E3801B0;
  v3[5] = v2;
  return MEMORY[0x270FA2498](sub_24E445490, 0, 0);
}

uint64_t sub_24E445B14()
{
  v1[2] = v0;
  v1[3] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B99D0);
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E445BD0, 0, 0);
}

uint64_t sub_24E445BD0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E445C6C;
  return sub_24E370BE8(0, 0);
}

uint64_t sub_24E445C6C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E445D68, 0, 0);
}

uint64_t sub_24E445D68()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E445E04;
  return sub_24E370920(0, 0);
}

uint64_t sub_24E445E04()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E445F00, 0, 0);
}

uint64_t sub_24E445F00()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_24E445F9C;
  return sub_24E371D0C(0, 0);
}

uint64_t sub_24E445F9C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E446098, 0, 0);
}

uint64_t sub_24E446098()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_24E446134;
  return sub_24E38DA78(0, 0);
}

uint64_t sub_24E446134()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E446230, 0, 0);
}

uint64_t sub_24E446230()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_24E474C78();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v6[5] = v2;
  *(void *)(v3 + 64) = sub_24E448BE4(v1, (uint64_t)&unk_2698DC4A0, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24E446424(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_24E446520()
{
  swift_weakAssign();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_24E4465D4;
  return sub_24E445B14();
}

uint64_t sub_24E4465D4()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  return v2(v3);
}

uint64_t Session.deinit()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 64))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1B9840);
    sub_24E474D08();
    swift_release();
  }
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E4749E8();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1C0ED0);
  uint64_t v3 = sub_24E4749C8();
  os_log_type_t v4 = sub_24E474DA8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24E36C000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x25333BB40](v5, -1, -1);
  }

  sub_24E379BD4(v1 + 16, qword_26B1B8278);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Session.__deallocating_deinit()
{
  Session.deinit();
  return swift_deallocClassInstance();
}

uint64_t Session.processLocationPayload(_:)()
{
  return sub_24E44849C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24E4468B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_24E4744B8();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9EE0);
  v4[10] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9EF0);
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B9EE8);
  v4[14] = v7;
  v4[15] = *(void *)(v7 - 8);
  v4[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E446A74, 0, 0);
}

uint64_t sub_24E446A74()
{
  sub_24E474D28();
  v0[17] = 0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  uint64_t v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl(&dword_24E36C000, v2, v3, "Registering listener for daemon ready Darwin notification", v4, 2u);
    MEMORY[0x25333BB40](v4, -1, -1);
  }

  sub_24E474528();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24E446C78;
  uint64_t v6 = v0[13];
  return MEMORY[0x270F28DA0](v6, 0xD000000000000023, 0x800000024E475B70);
}

uint64_t sub_24E446C78()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E446D74, 0, 0);
}

uint64_t sub_24E446D74()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  sub_24E474CB8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[20] = v0[17];
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_24E446E80;
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[10];
  return MEMORY[0x270FA1F68](v6, 0, 0, v5);
}

uint64_t sub_24E446E80()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E446F7C, 0, 0);
}

uint64_t sub_24E446F7C()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1) {
    goto LABEL_2;
  }
  uint64_t v5 = v0[20];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
  sub_24E474D28();
  v0[22] = v5;
  if (v5)
  {
    uint64_t v7 = v0[15];
    uint64_t v6 = v0[16];
    uint64_t v8 = v0[14];
    (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v4 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  uint64_t Strong = swift_weakLoadStrong();
  v0[23] = Strong;
  if (!Strong)
  {
    (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
LABEL_2:
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v4 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v4();
  }
  uint64_t v11 = Strong;
  (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[9], v0[6]);
  unint64_t v12 = sub_24E4749C8();
  os_log_type_t v13 = sub_24E474D78();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = v0[8];
  uint64_t v16 = v0[6];
  uint64_t v17 = (void (**)(uint64_t, uint64_t))(v0[7] + 8);
  if (v14)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_24E448AB4(&qword_2698DC4B0, MEMORY[0x263F3C9E8]);
    uint64_t v20 = sub_24E475128();
    *(void *)(v18 + 4) = sub_24E37E724(v20, v21, &v24);
    swift_bridgeObjectRelease();
    long long v22 = *v17;
    (*v17)(v15, v16);
    _os_log_impl(&dword_24E36C000, v12, v13, "Process daemon ready notification: %s", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v19, -1, -1);
    MEMORY[0x25333BB40](v18, -1, -1);
  }
  else
  {
    long long v22 = *v17;
    (*v17)(v0[8], v0[6]);
  }

  v0[24] = v22;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[25] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_24E447348;
  v23[3] = v11;
  return MEMORY[0x270FA2498](sub_24E447544, 0, 0);
}

uint64_t sub_24E447348()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E447444, 0, 0);
}

uint64_t sub_24E447444()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  swift_release();
  v1(v2, v3);
  v0[20] = v0[22];
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_24E446E80;
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[10];
  return MEMORY[0x270FA1F68](v6, 0, 0, v5);
}

uint64_t sub_24E447524()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24E447544, 0, 0);
}

uint64_t sub_24E447544()
{
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  *(void *)(v0 + 32) = __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  uint64_t v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl(&dword_24E36C000, v2, v3, "Received daemon ready notification, re-establishing connection...", v4, 2u);
    MEMORY[0x25333BB40](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 24);

  uint64_t v6 = *(void *)(v5 + 56);
  *(void *)(v0 + 40) = v6;
  *(unsigned char *)(v0 + 128) = *(unsigned char *)(v5 + 72);
  *(void *)(v0 + 48) = *(void *)(v5 + 80);
  *(void *)(v0 + 56) = *(void *)(v5 + 88);
  *(void *)(v0 + 64) = *(void *)(v5 + 96);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E447698, v6, 0);
}

uint64_t sub_24E447698()
{
  uint64_t v1 = *(void *)(v0 + 64);
  long long v9 = *(_OWORD *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = sub_24E448AB4((unint64_t *)&qword_26B1B9F00, (void (*)(uint64_t))_s18LocationConnectionCMa);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 24) = v2;
  *(_OWORD *)(v5 + 32) = v9;
  *(void *)(v5 + 48) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  void *v6 = v0;
  uint64_t v7 = MEMORY[0x263F8EE60];
  v6[1] = sub_24E4477EC;
  return MEMORY[0x270FA2360](v6, v3, v4, 0xD000000000000020, 0x800000024E4788D0, sub_24E448AFC, v5, v7 + 8);
}

uint64_t sub_24E4477EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = sub_24E447B24;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    uint64_t v4 = sub_24E447914;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E447914()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24E44797C, 0, 0);
}

uint64_t sub_24E44797C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  void *v1 = v0;
  v1[1] = sub_24E447A10;
  return sub_24E3995D0();
}

uint64_t sub_24E447A10()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E447F08;
  }
  else {
    uint64_t v2 = sub_24E447D40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E447B24()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E447B94, 0, 0);
}

uint64_t sub_24E447B94()
{
  uint64_t v1 = (void *)v0[11];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E4749C8();
  os_log_type_t v5 = sub_24E474D88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    id v8 = v1;
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    sub_24E474DE8();
    *uint64_t v7 = v9;

    _os_log_impl(&dword_24E36C000, v4, v5, "Error re-establishing service: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8218);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v7, -1, -1);
    MEMORY[0x25333BB40](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24E447D40()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  void *v1 = v0;
  v1[1] = sub_24E447DD4;
  return sub_24E3EB528();
}

uint64_t sub_24E447DD4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E4480B4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E447F08()
{
  uint64_t v1 = (void *)v0[13];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E4749C8();
  os_log_type_t v5 = sub_24E474D88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    id v8 = v1;
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    sub_24E474DE8();
    *uint64_t v7 = v9;

    _os_log_impl(&dword_24E36C000, v4, v5, "Error re-establishing service: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8218);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v7, -1, -1);
    MEMORY[0x25333BB40](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24E4480B4()
{
  uint64_t v1 = (void *)v0[15];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E4749C8();
  os_log_type_t v5 = sub_24E474D88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    id v8 = v1;
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    sub_24E474DE8();
    *uint64_t v7 = v9;

    _os_log_impl(&dword_24E36C000, v4, v5, "Error re-establishing service: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8218);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v7, -1, -1);
    MEMORY[0x25333BB40](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

BOOL static ClientSessionError.Category.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClientSessionError.Category.hash(into:)()
{
  return sub_24E475238();
}

uint64_t ClientSessionError.Category.hashValue.getter()
{
  return sub_24E475268();
}

unint64_t ClientSessionError.description.getter()
{
  unint64_t result = 0xD00000000000001DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0x6F6C6C6F466F6E2ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000023;
      break;
    case 6:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD00000000000003CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000028;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E448404(uint64_t a1)
{
  return sub_24E37E148(a1, qword_26B1C0EF8);
}

uint64_t sub_24E448430(uint64_t a1)
{
  return sub_24E37E148(a1, qword_2698ED900);
}

uint64_t sub_24E448454(uint64_t a1)
{
  return sub_24E37E148(a1, qword_26B1C0D00);
}

uint64_t sub_24E448478(uint64_t a1)
{
  return sub_24E37E148(a1, qword_2698ED918);
}

uint64_t sub_24E44849C(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_24E4484AC()
{
  unint64_t result = qword_2698DC488;
  if (!qword_2698DC488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC488);
  }
  return result;
}

uint64_t method lookup function for Session(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Session);
}

uint64_t dispatch thunk of Session.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of Session.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 144) + **(int **)(v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E448BDC;
  return v6(a1);
}

uint64_t sub_24E448618()
{
  if (MEMORY[0x263F8EEE0]) {
    return __swift_instantiateConcreteTypeFromMangledName(qword_26B1B8278);
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t _s12FindMyLocate18ClientSessionErrorV8CategoryOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12FindMyLocate18ClientSessionErrorV8CategoryOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4487A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_24E4487CC()
{
  return objectdestroy_2Tm(48);
}

uint64_t objectdestroy_2Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24E448820(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *BOOL v7 = v2;
  v7[1] = sub_24E3801B0;
  return sub_24E4468B4(a1, v4, v5, v6);
}

uint64_t sub_24E4488E0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E4489BC;
  return v6(a1);
}

uint64_t sub_24E4489BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E448AB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E448AFC(uint64_t a1)
{
  return sub_24E3C9400(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_24E448B10()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E448B48(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for Session.WeakSessionBox()
{
  return MEMORY[0x270FA0640]();
}

uint64_t assignWithCopy for Session.WeakSessionBox()
{
  return MEMORY[0x270FA0638]();
}

uint64_t initializeWithTake for Session.WeakSessionBox()
{
  return MEMORY[0x270FA0668]();
}

uint64_t assignWithTake for Session.WeakSessionBox()
{
  return MEMORY[0x270FA0660]();
}

uint64_t getEnumTagSinglePayload for Session.WeakSessionBox(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Session.WeakSessionBox(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Session.WeakSessionBox()
{
  return &type metadata for Session.WeakSessionBox;
}

uint64_t sub_24E448BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24E474C78();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_24E474C68();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24E379BD4(a1, &qword_26B1B99D0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24E474C28();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t Session.forceRefreshClient()()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for FenceClientRequest(0);
  v1[4] = swift_task_alloc();
  type metadata accessor for FenceResponse(0);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E448E2C, 0, 0);
}

uint64_t sub_24E448E2C()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E448EC8;
  return sub_24E444F88();
}

uint64_t sub_24E448EC8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E448FC4, 0, 0);
}

uint64_t sub_24E448FC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 32);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E44903C, v1, 0);
}

uint64_t sub_24E44903C()
{
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_24E4490E0;
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  return sub_24E38F0C0(v2, v3);
}

uint64_t sub_24E4490E0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = (*v1)[4];
  v2[9] = v0;
  swift_task_dealloc();
  sub_24E44B874(v3, type metadata accessor for FenceClientRequest);
  uint64_t v4 = v2[7];
  if (v0)
  {
    uint64_t v5 = sub_24E4492DC;
  }
  else
  {
    sub_24E44B874(v2[5], type metadata accessor for FenceResponse);
    uint64_t v5 = sub_24E449264;
  }
  return MEMORY[0x270FA2498](v5, v4, 0);
}

uint64_t sub_24E449264()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E4492DC()
{
  return MEMORY[0x270FA2498](sub_24E4492F8, 0, 0);
}

uint64_t sub_24E4492F8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.addFence(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E449394, 0, 0);
}

uint64_t sub_24E449394()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E449430;
  return sub_24E444F88();
}

uint64_t sub_24E449430()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44952C, 0, 0);
}

uint64_t sub_24E44952C()
{
  v0[6] = *(void *)(v0[4] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3C00AC;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return sub_24E38F5B8(v2, v3);
}

uint64_t Session.updateFence(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E449394, 0, 0);
}

uint64_t Session.saveFence(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E449394, 0, 0);
}

uint64_t Session.deleteFence(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E449640, 0, 0);
}

uint64_t sub_24E449640()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_24E4496DC;
  return sub_24E444F88();
}

uint64_t sub_24E4496DC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4497D8, 0, 0);
}

uint64_t sub_24E4497D8()
{
  v0[5] = *(void *)(v0[3] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E566C;
  uint64_t v2 = v0[2];
  return sub_24E38F8FC(v2);
}

uint64_t Session.fences()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E4498A4, 0, 0);
}

uint64_t sub_24E4498A4()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E449940;
  return sub_24E444F88();
}

uint64_t sub_24E449940()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E449A3C, 0, 0);
}

uint64_t sub_24E449A3C()
{
  v0[4] = *(void *)(v0[2] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3C10FC;
  return sub_24E38FE80();
}

uint64_t Session.acceptFence(id:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E449B04, 0, 0);
}

uint64_t sub_24E449B04()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E449BA0;
  return sub_24E444F88();
}

uint64_t sub_24E449BA0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E449C9C, 0, 0);
}

uint64_t sub_24E449C9C()
{
  v0[6] = *(void *)(v0[4] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3C092C;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return sub_24E390400(v2, v3);
}

uint64_t Session.muteFences(for:untilDate:)(uint64_t *a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  v3[6] = v5;
  v3[7] = v6;
  v3[8] = v7;
  return MEMORY[0x270FA2498](sub_24E449DE8, 0, 0);
}

uint64_t sub_24E449DE8()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_24E449E84;
  return sub_24E444F88();
}

uint64_t sub_24E449E84()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E449F80, 0, 0);
}

uint64_t sub_24E449F80()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  v0[10] = *(void *)(v0[5] + 32);
  swift_retain();
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v5 = sub_24E474818();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v4, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E44A0C4;
  uint64_t v8 = v0[6];
  return sub_24E390998(v0 + 2, v8);
}

uint64_t sub_24E44A0C4()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *v1;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  sub_24E379BD4(v2, &qword_26B1B86A0);
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E44A24C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_24E44A24C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.unmuteFences(for:)(uint64_t *a1)
{
  v2[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  v2[5] = v4;
  v2[6] = v5;
  v2[7] = v6;
  return MEMORY[0x270FA2498](sub_24E44A350, 0, 0);
}

uint64_t sub_24E44A350()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44A3EC;
  return sub_24E444F88();
}

uint64_t sub_24E44A3EC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44A4E8, 0, 0);
}

uint64_t sub_24E44A4E8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  v0[9] = *(void *)(v0[4] + 32);
  swift_retain();
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v4 = sub_24E474818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24E44A5F4;
  uint64_t v6 = v0[5];
  return sub_24E390998(v0 + 2, v6);
}

uint64_t sub_24E44A5F4()
{
  uint64_t v2 = *(void *)(*v1 + 40);
  uint64_t v3 = *v1;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_24E379BD4(v2, &qword_26B1B86A0);
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E44A77C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_24E44A77C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.triggerFence(id:position:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24E44A804, 0, 0);
}

uint64_t sub_24E44A804()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44A8A0;
  return sub_24E444F88();
}

uint64_t sub_24E44A8A0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44A99C, 0, 0);
}

uint64_t sub_24E44A99C()
{
  v0[7] = *(void *)(v0[5] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_24E44AA4C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_24E390D90(v4, v2, v3);
}

uint64_t sub_24E44AA4C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E44AB88, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E44AB88()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.fenceUpdateStream()()
{
  v1[2] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EA0);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B99D0);
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E44ACE0, 0, 0);
}

uint64_t sub_24E44ACE0()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44AD7C;
  return sub_24E444F88();
}

uint64_t sub_24E44AD7C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44AE78, 0, 0);
}

uint64_t sub_24E44AE78()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(v0[2] + 32);
  uint64_t v6 = sub_24E474C78();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  swift_retain();
  v7(v2, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  swift_retain();
  sub_24E448BE4(v2, (uint64_t)&unk_2698DC520, (uint64_t)v8);
  swift_release();
  void *v1 = 1;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v1, *MEMORY[0x263F8F570], v3);
  uint64_t v9 = sub_24E38E290();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_24E44B018()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E44B058()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3801B0;
  return sub_24E391844();
}

_OWORD *_s10FenceErrorOwCP(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (_OWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v11 = type metadata accessor for Fence.Variant(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v13 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        BOOL v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for Fence.TriggerPosition(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v17 = sub_24E474818();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      }
      else
      {
        uint64_t v8 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v9 = v8;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void _s10FenceErrorOwxx(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() != 2) {
      return;
    }
    a1 = (void **)((char *)a1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28));
    uint64_t v5 = sub_24E4749A8();
  }
  else
  {
    if (EnumCaseMultiPayload != 2) {
      return;
    }
    type metadata accessor for Fence.TriggerPosition(0);
    unsigned int v3 = swift_getEnumCaseMultiPayload();
    if (v3 != 2)
    {
      if (v3 <= 1)
      {
        uint64_t v4 = *a1;
      }
      return;
    }
    uint64_t v5 = sub_24E474818();
  }
  uint64_t v6 = *(void (**)(void **, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(a1, v5);
}

_OWORD *_s10FenceErrorOwcp(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v11 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      long long v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for Fence.TriggerPosition(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v15 = sub_24E474818();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
    }
    else
    {
      uint64_t v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s10FenceErrorOwca(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E44B874((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Session.FenceError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = type metadata accessor for Fence.Variant(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v10 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v11 = (char *)a1 + v10;
        long long v12 = (char *)a2 + v10;
        uint64_t v13 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for Fence.TriggerPosition(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v14 = sub_24E474818();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      }
      else
      {
        uint64_t v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v8 = v7;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_12;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24E44B874(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for Session.FenceError()
{
  uint64_t result = qword_2698DC528;
  if (!qword_2698DC528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *_s10FenceErrorOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v11 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      long long v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = type metadata accessor for Fence.TriggerPosition(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = sub_24E474818();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s10FenceErrorOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E44B874((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Session.FenceError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = type metadata accessor for Fence.Variant(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v11 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        long long v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = type metadata accessor for Fence.TriggerPosition(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v8 = sub_24E474818();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24E44BD04()
{
  uint64_t result = type metadata accessor for Fence.TriggerPosition(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Fence.Variant(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t Session.sendFriendshipOffer(to:from:end:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, char a5)
{
  *(void *)(v6 + 200) = a2;
  *(void *)(v6 + 208) = v5;
  *(unsigned char *)(v6 + 272) = a5;
  *(void *)(v6 + 192) = a1;
  sub_24E474878();
  *(void *)(v6 + 216) = swift_task_alloc();
  *(void *)(v6 + 224) = type metadata accessor for FriendshipRequest();
  *(void *)(v6 + 232) = swift_task_alloc();
  sub_24E3F7840(a3, v6 + 16);
  *(unsigned char *)(v6 + 273) = *a4;
  return MEMORY[0x270FA2498](sub_24E44BECC, 0, 0);
}

uint64_t sub_24E44BECC()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = *(int **)(v0 + 224);
    uint64_t v2 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 208);
    char v14 = *(unsigned char *)(v0 + 272);
    uint64_t v5 = v2 + v3[7];
    swift_bridgeObjectRetain();
    sub_24E397AE0((uint64_t *)(v0 + 16));
    sub_24E42DDF8(v5);
    LOBYTE(v5) = *(unsigned char *)(v4 + 72);
    uint64_t v7 = *(void *)(v4 + 80);
    uint64_t v6 = *(void *)(v4 + 88);
    uint64_t v8 = *(void *)(v4 + 96);
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
    sub_24E4743F8();
    uint64_t v9 = v2 + v3[10];
    *(unsigned char *)uint64_t v9 = v5;
    *(void *)(v9 + 8) = v7;
    *(void *)(v9 + 16) = v6;
    *(void *)(v9 + 24) = v8;
    *(void *)(v2 + v3[5]) = v1;
    sub_24E3F7840(v0 + 16, v2 + v3[6]);
    *(unsigned char *)(v2 + v3[8]) = 0;
    *(unsigned char *)(v2 + v3[9]) = 3;
    *(unsigned char *)(v2 + v3[11]) = v14;
    v15[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v15);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_24E44C0D8;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *long long v12 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_24E44C0D8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44C1D4, 0, 0);
}

uint64_t sub_24E44C1D4()
{
  v0[31] = *(void *)(v0[26] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  void *v1 = v0;
  v1[1] = sub_24E44C284;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[24];
  return sub_24E3B4800(v3, v2);
}

uint64_t sub_24E44C284()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E44C41C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_24E44C3A0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E44C3A0()
{
  sub_24E3F78A8(*(void *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E44C41C()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  sub_24E3F78A8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t Session.sendFriendshipInvite(to:from:isFromGroup:)(uint64_t a1, _OWORD *a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 440) = a4;
  *(void *)(v5 + 368) = a1;
  *(void *)(v5 + 376) = v4;
  sub_24E474878();
  *(void *)(v5 + 384) = swift_task_alloc();
  *(void *)(v5 + 392) = type metadata accessor for FriendshipRequest();
  *(void *)(v5 + 400) = swift_task_alloc();
  long long v8 = a2[9];
  *(_OWORD *)(v5 + 320) = a2[8];
  *(_OWORD *)(v5 + 336) = v8;
  *(_OWORD *)(v5 + 352) = a2[10];
  long long v9 = a2[5];
  *(_OWORD *)(v5 + 256) = a2[4];
  *(_OWORD *)(v5 + 272) = v9;
  long long v10 = a2[7];
  *(_OWORD *)(v5 + 288) = a2[6];
  *(_OWORD *)(v5 + 304) = v10;
  long long v11 = a2[1];
  *(_OWORD *)(v5 + 192) = *a2;
  *(_OWORD *)(v5 + 208) = v11;
  long long v12 = a2[3];
  *(_OWORD *)(v5 + 224) = a2[2];
  *(_OWORD *)(v5 + 240) = v12;
  sub_24E3F7840(a3, v5 + 16);
  return MEMORY[0x270FA2498](sub_24E44C5B4, 0, 0);
}

uint64_t sub_24E44C5B4()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(int **)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 376);
  char v23 = *(unsigned char *)(v0 + 440);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BC0);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 320);
  long long v6 = *(_OWORD *)(v0 + 336);
  long long v7 = *(_OWORD *)(v0 + 288);
  v4[9] = *(_OWORD *)(v0 + 304);
  v4[10] = v5;
  long long v8 = *(_OWORD *)(v0 + 352);
  v4[11] = v6;
  v4[12] = v8;
  long long v9 = *(_OWORD *)(v0 + 256);
  long long v10 = *(_OWORD *)(v0 + 272);
  long long v11 = *(_OWORD *)(v0 + 224);
  v4[5] = *(_OWORD *)(v0 + 240);
  v4[6] = v9;
  v4[7] = v10;
  v4[8] = v7;
  long long v12 = *(_OWORD *)(v0 + 192);
  long long v13 = *(_OWORD *)(v0 + 208);
  v4[1] = xmmword_24E47E930;
  v4[2] = v12;
  v4[3] = v13;
  v4[4] = v11;
  uint64_t v14 = v2 + v1[7];
  uint64_t v15 = sub_24E474818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  char v16 = *(unsigned char *)(v3 + 72);
  uint64_t v18 = *(void *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 88);
  uint64_t v19 = *(void *)(v3 + 96);
  sub_24E3776C8(v0 + 192);
  sub_24E397AE0((uint64_t *)(v0 + 16));
  swift_bridgeObjectRetain();
  _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
  sub_24E4743F8();
  uint64_t v20 = v2 + v1[10];
  *(unsigned char *)uint64_t v20 = v16;
  *(void *)(v20 + 8) = v18;
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v19;
  *(void *)(v2 + v1[5]) = v4;
  sub_24E3F7840(v0 + 16, v2 + v1[6]);
  *(unsigned char *)(v2 + v1[8]) = 1;
  *(unsigned char *)(v2 + v1[9]) = 3;
  *(unsigned char *)(v2 + v1[11]) = v23;
  unsigned __int8 v24 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v24);
  unint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_24E44C7B8;
  return sub_24E444F88();
}

uint64_t sub_24E44C7B8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44C8B4, 0, 0);
}

uint64_t sub_24E44C8B4()
{
  v0[52] = *(void *)(v0[47] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[53] = v1;
  void *v1 = v0;
  v1[1] = sub_24E44C964;
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[46];
  return sub_24E3B5350(v3, v2);
}

uint64_t sub_24E44C964()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E44CAFC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_24E44CA80;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E44CA80()
{
  sub_24E3F78A8(*(void *)(v0 + 400));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E44CAFC()
{
  uint64_t v1 = *(void *)(v0 + 400);
  swift_release();
  sub_24E3F78A8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t Session.stopSharingMyLocation(with:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 200) = a2;
  *(void *)(v5 + 208) = v4;
  *(unsigned char *)(v5 + 272) = a4;
  *(void *)(v5 + 192) = a1;
  sub_24E474878();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(void *)(v5 + 232) = swift_task_alloc();
  sub_24E3F7840(a3, v5 + 16);
  return MEMORY[0x270FA2498](sub_24E44CC5C, 0, 0);
}

uint64_t sub_24E44CC5C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(int **)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 208);
    char v16 = *(unsigned char *)(v0 + 272);
    uint64_t v5 = v3 + v2[7];
    uint64_t v6 = sub_24E474818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    char v7 = *(unsigned char *)(v4 + 72);
    uint64_t v9 = *(void *)(v4 + 80);
    uint64_t v8 = *(void *)(v4 + 88);
    uint64_t v10 = *(void *)(v4 + 96);
    swift_bridgeObjectRetain();
    sub_24E397AE0((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
    sub_24E4743F8();
    uint64_t v11 = v3 + v2[10];
    *(unsigned char *)uint64_t v11 = v7;
    *(void *)(v11 + 8) = v9;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v10;
    *(void *)(v3 + v2[5]) = v1;
    sub_24E3F7840(v0 + 16, v3 + v2[6]);
    *(unsigned char *)(v3 + v2[8]) = 2;
    *(unsigned char *)(v3 + v2[9]) = 3;
    *(unsigned char *)(v3 + v2[11]) = v16;
    v17[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v17);
    long long v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v12;
    *long long v12 = v0;
    v12[1] = sub_24E44CE9C;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v14 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_24E44CE9C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44CF98, 0, 0);
}

uint64_t sub_24E44CF98()
{
  v0[31] = *(void *)(v0[26] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  void *v1 = v0;
  v1[1] = sub_24E44C284;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[24];
  return sub_24E3B7C0C(v3, v2);
}

uint64_t Session.sendNotNow(to:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 200) = a2;
  *(void *)(v5 + 208) = v4;
  *(unsigned char *)(v5 + 272) = a4;
  *(void *)(v5 + 192) = a1;
  sub_24E474878();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(void *)(v5 + 232) = swift_task_alloc();
  sub_24E3F7840(a3, v5 + 16);
  return MEMORY[0x270FA2498](sub_24E44D124, 0, 0);
}

uint64_t sub_24E44D124()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(int **)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 208);
    char v16 = *(unsigned char *)(v0 + 272);
    uint64_t v5 = v3 + v2[7];
    uint64_t v6 = sub_24E474818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    char v7 = *(unsigned char *)(v4 + 72);
    uint64_t v9 = *(void *)(v4 + 80);
    uint64_t v8 = *(void *)(v4 + 88);
    uint64_t v10 = *(void *)(v4 + 96);
    swift_bridgeObjectRetain();
    sub_24E397AE0((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
    sub_24E4743F8();
    uint64_t v11 = v3 + v2[10];
    *(unsigned char *)uint64_t v11 = v7;
    *(void *)(v11 + 8) = v9;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v10;
    *(void *)(v3 + v2[5]) = v1;
    sub_24E3F7840(v0 + 16, v3 + v2[6]);
    *(unsigned char *)(v3 + v2[8]) = 2;
    *(unsigned char *)(v3 + v2[9]) = 2;
    *(unsigned char *)(v3 + v2[11]) = v16;
    v17[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v17);
    long long v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v12;
    *long long v12 = v0;
    v12[1] = sub_24E44D360;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v14 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_24E44D360()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44D45C, 0, 0);
}

uint64_t sub_24E44D45C()
{
  v0[31] = *(void *)(v0[26] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  void *v1 = v0;
  v1[1] = sub_24E44D50C;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[24];
  return sub_24E3B67C8(v3, v2);
}

uint64_t sub_24E44D50C()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E4500D4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_24E4500D0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t Session.approveFriendship(handles:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 200) = a2;
  *(void *)(v5 + 208) = v4;
  *(unsigned char *)(v5 + 272) = a4;
  *(void *)(v5 + 192) = a1;
  sub_24E474878();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(void *)(v5 + 232) = swift_task_alloc();
  sub_24E3F7840(a3, v5 + 16);
  return MEMORY[0x270FA2498](sub_24E44D704, 0, 0);
}

uint64_t sub_24E44D704()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(int **)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 208);
    char v16 = *(unsigned char *)(v0 + 272);
    uint64_t v5 = v3 + v2[7];
    uint64_t v6 = sub_24E474818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    char v7 = *(unsigned char *)(v4 + 72);
    uint64_t v9 = *(void *)(v4 + 80);
    uint64_t v8 = *(void *)(v4 + 88);
    uint64_t v10 = *(void *)(v4 + 96);
    swift_bridgeObjectRetain();
    sub_24E397AE0((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
    sub_24E4743F8();
    uint64_t v11 = v3 + v2[10];
    *(unsigned char *)uint64_t v11 = v7;
    *(void *)(v11 + 8) = v9;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v10;
    *(void *)(v3 + v2[5]) = v1;
    sub_24E3F7840(v0 + 16, v3 + v2[6]);
    *(unsigned char *)(v3 + v2[8]) = 2;
    *(unsigned char *)(v3 + v2[9]) = 0;
    *(unsigned char *)(v3 + v2[11]) = v16;
    v17[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v17);
    long long v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v12;
    *long long v12 = v0;
    v12[1] = sub_24E44D360;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v14 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t Session.declineFriendship(handles:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 200) = a2;
  *(void *)(v5 + 208) = v4;
  *(unsigned char *)(v5 + 272) = a4;
  *(void *)(v5 + 192) = a1;
  sub_24E474878();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(void *)(v5 + 232) = swift_task_alloc();
  sub_24E3F7840(a3, v5 + 16);
  return MEMORY[0x270FA2498](sub_24E44DA1C, 0, 0);
}

uint64_t sub_24E44DA1C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(int **)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 208);
    char v16 = *(unsigned char *)(v0 + 272);
    uint64_t v5 = v3 + v2[7];
    uint64_t v6 = sub_24E474818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    char v7 = *(unsigned char *)(v4 + 72);
    uint64_t v9 = *(void *)(v4 + 80);
    uint64_t v8 = *(void *)(v4 + 88);
    uint64_t v10 = *(void *)(v4 + 96);
    swift_bridgeObjectRetain();
    sub_24E397AE0((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0();
    sub_24E4743F8();
    uint64_t v11 = v3 + v2[10];
    *(unsigned char *)uint64_t v11 = v7;
    *(void *)(v11 + 8) = v9;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v10;
    *(void *)(v3 + v2[5]) = v1;
    sub_24E3F7840(v0 + 16, v3 + v2[6]);
    *(unsigned char *)(v3 + v2[8]) = 2;
    *(unsigned char *)(v3 + v2[9]) = 1;
    *(unsigned char *)(v3 + v2[11]) = v16;
    v17[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v17);
    long long v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v12;
    *long long v12 = v0;
    v12[1] = sub_24E44D360;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v14 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_24E44DC58()
{
  *(void *)(v0 + 40) = *(void *)(*(void *)(v0 + 24) + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E566C;
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 16);
  return sub_24E37F828(v3, v2);
}

uint64_t Session.stopUpdatingFriends()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E44DD28, 0, 0);
}

uint64_t sub_24E44DD28()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44DDC8;
  return sub_24E444F88();
}

uint64_t sub_24E44DDC8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44DEC4, 0, 0);
}

uint64_t sub_24E44DEC4()
{
  v0[4] = *(void *)(v0[2] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E9670;
  return sub_24E39AA1C();
}

uint64_t Session.friendsSharingLocationsWithMe()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E817C;
  return sub_24E3C0ACC();
}

uint64_t Session.cachedFriendsSharingLocationsWithMe()()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_24E44E014, 0, 0);
}

uint64_t sub_24E44E014()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44E0B4;
  return sub_24E444F88();
}

uint64_t sub_24E44E0B4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44E1B0, 0, 0);
}

uint64_t sub_24E44E1B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 40);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E44E228, v1, 0);
}

uint64_t sub_24E44E228()
{
  uint64_t v6 = v0;
  swift_beginAccess();
  unsigned __int8 v5 = 1;
  uint64_t v1 = swift_bridgeObjectRetain();
  unint64_t v2 = sub_24E396514(v1, &v5);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t Session.friendsSharingLocationsWithMe(filter:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E44E308, 0, 0);
}

uint64_t sub_24E44E308()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44E3A8;
  return sub_24E444F88();
}

uint64_t sub_24E44E3A8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44E4A4, 0, 0);
}

uint64_t sub_24E44E4A4()
{
  v0[6] = *(void *)(v0[4] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_24E44E550;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return sub_24E3A0898(v3, v2);
}

uint64_t sub_24E44E550(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E3C0A68, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t Session.friendsFollowingMyLocation()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E4CE8;
  return sub_24E3C0E90();
}

uint64_t Session.cachedFriendsFollowingMyLocation()()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_24E44E754, 0, 0);
}

uint64_t sub_24E44E754()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44E7F4;
  return sub_24E444F88();
}

uint64_t sub_24E44E7F4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44E8F0, 0, 0);
}

uint64_t sub_24E44E8F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 40);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E44E968, v1, 0);
}

uint64_t sub_24E44E968()
{
  uint64_t v6 = v0;
  swift_beginAccess();
  unsigned __int8 v5 = 0;
  uint64_t v1 = swift_bridgeObjectRetain();
  unint64_t v2 = sub_24E396514(v1, &v5);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t Session.friendsRequestedMyLocation()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E817C;
  return sub_24E3C12B8();
}

uint64_t Session.cachedFriendsRequestedMyLocation()()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_24E44EACC, 0, 0);
}

uint64_t sub_24E44EACC()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44EB6C;
  return sub_24E444F88();
}

uint64_t sub_24E44EB6C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44EC68, 0, 0);
}

uint64_t sub_24E44EC68()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 40);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E44ECE0, v1, 0);
}

uint64_t sub_24E44ECE0()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 56) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t Session.friendsRequestedToShareLocationWithMe()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E817C;
  return sub_24E3C1524();
}

uint64_t Session.cachedFriendsRequestedToShareLocationWithMe()()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_24E44EE24, 0, 0);
}

uint64_t sub_24E44EE24()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44EEC4;
  return sub_24E444F88();
}

uint64_t sub_24E44EEC4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44EFC0, 0, 0);
}

uint64_t sub_24E44EFC0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 40);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E44F038, v1, 0);
}

uint64_t sub_24E44F038()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 56) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowings);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t Session.friendsWithPendingOffers()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E817C;
  return sub_24E3C1790();
}

uint64_t Session.cachedFriendsWithPendingOffers()()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_24E44F17C, 0, 0);
}

uint64_t sub_24E44F17C()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44F21C;
  return sub_24E444F88();
}

uint64_t sub_24E44F21C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44F318, 0, 0);
}

uint64_t sub_24E44F318()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 40);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E44F390, v1, 0);
}

uint64_t sub_24E44F390()
{
  uint64_t v6 = v0;
  swift_beginAccess();
  unsigned __int8 v5 = 4;
  uint64_t v1 = swift_bridgeObjectRetain();
  unint64_t v2 = sub_24E396514(v1, &v5);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t Session.friendshipState(for:isFromGroup:)(uint64_t a1, _OWORD *a2, char a3)
{
  long long v6 = a2[9];
  *(_OWORD *)(v3 + 144) = a2[8];
  *(_OWORD *)(v3 + 160) = v6;
  *(_OWORD *)(v3 + 176) = a2[10];
  long long v7 = a2[5];
  *(_OWORD *)(v3 + 80) = a2[4];
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = a2[7];
  *(_OWORD *)(v3 + 112) = a2[6];
  *(_OWORD *)(v3 + 128) = v8;
  long long v9 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v9;
  long long v10 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 192) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_24E44F530;
  return Session.friendshipState(with:isFromGroup:)(a1, (_OWORD *)(v3 + 16), a3);
}

uint64_t sub_24E44F530()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E44F664, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E44F664()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.offerExpiration(for:groupId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[27] = a4;
  v5[28] = v4;
  v5[25] = a2;
  v5[26] = a3;
  void v5[24] = a1;
  return MEMORY[0x270FA2498](sub_24E44F6A4, 0, 0);
}

uint64_t sub_24E44F6A4()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44F744;
  return sub_24E444F88();
}

uint64_t sub_24E44F744()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44F840, 0, 0);
}

uint64_t sub_24E44F840()
{
  uint64_t v1 = *(long long **)(v0 + 200);
  *(void *)(v0 + 240) = *(void *)(*(void *)(v0 + 224) + 40);
  swift_retain();
  long long v2 = *v1;
  long long v3 = v1[2];
  *(_OWORD *)(v0 + 32) = v1[1];
  *(_OWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v0 + 16) = v2;
  long long v4 = v1[3];
  long long v5 = v1[4];
  long long v6 = v1[6];
  *(_OWORD *)(v0 + 96) = v1[5];
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v0 + 80) = v5;
  long long v7 = v1[7];
  long long v8 = v1[8];
  long long v9 = v1[10];
  *(_OWORD *)(v0 + 160) = v1[9];
  *(_OWORD *)(v0 + 176) = v9;
  *(_OWORD *)(v0 + 128) = v7;
  *(_OWORD *)(v0 + 144) = v8;
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v10;
  *long long v10 = v0;
  v10[1] = sub_24E44F934;
  uint64_t v11 = *(void *)(v0 + 208);
  uint64_t v12 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 192);
  return sub_24E3B35E8(v13, (_OWORD *)(v0 + 16), v11, v12);
}

uint64_t sub_24E44F934()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 256) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E44FA84, 0, 0);
  }
  else
  {
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E44FA84()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.cachedOfferExpiration(for:groupId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[27] = a4;
  v5[28] = v4;
  v5[25] = a2;
  v5[26] = a3;
  void v5[24] = a1;
  return MEMORY[0x270FA2498](sub_24E44FAC4, 0, 0);
}

uint64_t sub_24E44FAC4()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v1;
  void *v1 = v0;
  v1[1] = sub_24E44FB64;
  return sub_24E444F88();
}

uint64_t sub_24E44FB64()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E44FC60, 0, 0);
}

uint64_t sub_24E44FC60()
{
  uint64_t v1 = *(long long **)(v0 + 200);
  uint64_t v2 = *(void *)(*(void *)(v0 + 224) + 40);
  *(void *)(v0 + 240) = v2;
  swift_retain();
  long long v3 = *v1;
  long long v4 = v1[2];
  *(_OWORD *)(v0 + 32) = v1[1];
  *(_OWORD *)(v0 + 48) = v4;
  *(_OWORD *)(v0 + 16) = v3;
  long long v5 = v1[3];
  long long v6 = v1[4];
  long long v7 = v1[6];
  *(_OWORD *)(v0 + 96) = v1[5];
  *(_OWORD *)(v0 + 112) = v7;
  *(_OWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v0 + 80) = v6;
  long long v8 = v1[7];
  long long v9 = v1[8];
  long long v10 = v1[10];
  *(_OWORD *)(v0 + 160) = v1[9];
  *(_OWORD *)(v0 + 176) = v10;
  *(_OWORD *)(v0 + 128) = v8;
  *(_OWORD *)(v0 + 144) = v9;
  return MEMORY[0x270FA2498](sub_24E44FD08, v2, 0);
}

uint64_t sub_24E44FD08()
{
  sub_24E39F9EC((long long *)(v0 + 16), *(void *)(v0 + 208), *(void **)(v0 + 216), *(void *)(v0 + 192));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.handlesRecentlyViewed(recency:)()
{
  return sub_24E44FF70(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x263F8EE78]);
}

uint64_t static Session.fmfIsAllowedInRegion.getter()
{
  uint64_t v0 = (void *)sub_24E474A78();
  uint64_t v1 = MGGetBoolAnswer();

  return v1;
}

id static Session.fmfIsRestrictedInScreenTime.getter()
{
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = (id)*MEMORY[0x263F538C8];
    unsigned int v3 = objc_msgSend(v1, sel_effectiveBoolValueForSetting_, v2);

    return (id)(v3 == 2);
  }
  return result;
}

id static Session.hasCorrectPermissionsForLocationSharing.getter()
{
  uint64_t v0 = (void *)sub_24E474A78();
  int v1 = MGGetBoolAnswer();

  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(self, sel_sharedConnection);
  if (v2)
  {
    unsigned int v3 = v2;
    id v4 = (id)*MEMORY[0x263F538C8];
    unsigned int v5 = objc_msgSend(v3, sel_effectiveBoolValueForSetting_, v4);

    if (v5 == 2) {
      return 0;
    }
  }
  return _s12FindMyLocate7SessionC37isiCloudProvisionedForLocationSharingSbvgZ_0();
}

uint64_t sub_24E44FF70(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

id _s12FindMyLocate7SessionC37isiCloudProvisionedForLocationSharingSbvgZ_0()
{
  id v0 = objc_msgSend(self, sel_defaultStore);
  if (v0)
  {
    int v1 = v0;
    id v2 = objc_msgSend(v0, sel_aa_primaryAppleAccountWithPreloadedDataclasses);
    if (v2)
    {
      unsigned int v3 = v2;
      id v4 = [v2 isProvisionedForDataclass:*MEMORY[0x263EFAD20]];

      goto LABEL_10;
    }
  }
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24E4749E8();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B1C0ED0);
  unsigned int v3 = sub_24E4749C8();
  os_log_type_t v6 = sub_24E474D88();
  if (os_log_type_enabled(v3, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v7 = 0;
    _os_log_impl(&dword_24E36C000, v3, v6, "Missing primary account!", v7, 2u);
    MEMORY[0x25333BB40](v7, -1, -1);
  }
  id v4 = 0;
LABEL_10:

  return v4;
}

uint64_t Session.includeDeviceInHomeKitAutomations()()
{
  return sub_24E44FF70(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_24E450128()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v0 + 80) = v2;
  *(unsigned char *)(v0 + 142) = *(unsigned char *)(v1 + 72);
  *(void *)(v0 + 88) = *(void *)(v1 + 80);
  *(void *)(v0 + 96) = *(void *)(v1 + 88);
  *(void *)(v0 + 104) = *(void *)(v1 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E4501D0, v2, 0);
}

uint64_t sub_24E4501D0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  long long v13 = *(_OWORD *)(v0 + 88);
  char v2 = *(unsigned char *)(v0 + 142);
  uint64_t v3 = *(void *)(v0 + 80);
  char v4 = *(unsigned char *)(v0 + 141);
  char v5 = *(unsigned char *)(v0 + 140);
  uint64_t v6 = *(void *)(v0 + 56);
  unint64_t v7 = sub_24E3E8CF4();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v6;
  *(unsigned char *)(v8 + 32) = v4;
  *(unsigned char *)(v8 + 33) = v5;
  *(unsigned char *)(v8 + 40) = v2;
  *(_OWORD *)(v8 + 48) = v13;
  *(void *)(v8 + 64) = v1;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7B10);
  *long long v9 = v0;
  v9[1] = sub_24E450324;
  uint64_t v11 = *(void *)(v0 + 48);
  return MEMORY[0x270FA2360](v11, v3, v7, 0xD000000000000040, 0x800000024E478900, sub_24E455900, v8, v10);
}

uint64_t sub_24E450324()
{
  char v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[10];
    return MEMORY[0x270FA2498](sub_24E450484, v3, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    char v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_24E450484()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.addHandlesToLocationStream(_:priority:reverseGeocode:)(uint64_t a1, unsigned char *a2, char a3)
{
  *(unsigned char *)(v4 + 132) = a3;
  *(void *)(v4 + 48) = a1;
  *(void *)(v4 + 56) = v3;
  *(unsigned char *)(v4 + 133) = *a2;
  return MEMORY[0x270FA2498](sub_24E450528, 0, 0);
}

uint64_t sub_24E450528()
{
  uint64_t v34 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (uint64_t *)(v0 + 48);
  uint64_t v2 = sub_24E4749E8();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1C0ED0);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_24E4749C8();
  os_log_type_t v4 = sub_24E474DA8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 48);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v7 = 136447235;
    *(void *)(v0 + 16) = sub_24E37E724(0xD000000000000036, 0x800000024E4789E0, &v32);
    sub_24E474DE8();
    *(_WORD *)(v7 + 12) = 2160;
    *(void *)(v0 + 24) = 1752392040;
    sub_24E474DE8();
    uint64_t v31 = v7;
    *(_WORD *)(v7 + 22) = 2081;
    int64_t v8 = *(void *)(v6 + 16);
    uint64_t v9 = MEMORY[0x263F8EE78];
    os_log_type_t v30 = v4;
    if (v8)
    {
      uint64_t v10 = *v1;
      *(void *)uint64_t v33 = MEMORY[0x263F8EE78];
      sub_24E3763D0(0, v8, 0);
      uint64_t v9 = *(void *)v33;
      unint64_t v11 = *(void *)(*(void *)v33 + 16);
      uint64_t v12 = 16 * v11;
      long long v13 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        *(void *)uint64_t v33 = v9;
        unint64_t v16 = *(void *)(v9 + 24);
        swift_bridgeObjectRetain();
        if (v11 >= v16 >> 1)
        {
          sub_24E3763D0(v16 > 1, v11 + 1, 1);
          uint64_t v9 = *(void *)v33;
        }
        *(void *)(v9 + 16) = v11 + 1;
        uint64_t v17 = v9 + v12;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v15;
        v12 += 16;
        v13 += 22;
        ++v11;
        --v8;
      }
      while (v8);
    }
    uint64_t v18 = *(unsigned __int8 *)(v0 + 133);
    uint64_t v19 = MEMORY[0x25333AE40](v9, MEMORY[0x263F8D310]);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_24E37E724(v19, v21, &v32);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 32) = 2082;
    unint64_t v22 = 0xE800000000000000;
    uint64_t v23 = 0x776F6C6C6168732ELL;
    uint64_t v1 = (uint64_t *)(v0 + 48);
    switch(v18)
    {
      case 1:
        break;
      case 2:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v23 = 0x6576696C2ELL;
        break;
      case 3:
        unint64_t v22 = 0x800000024E476450;
        uint64_t v23 = 0xD000000000000014;
        break;
      default:
        uint64_t v23 = 0xD000000000000015;
        unint64_t v22 = 0x800000024E4764E0;
        break;
    }
    int v24 = *(unsigned __int8 *)(v0 + 132);
    *(void *)(v0 + 40) = sub_24E37E724(v23, v22, &v32);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 42) = 1024;
    *(_DWORD *)(v0 + 128) = v24;
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v3, v30, "%{public}s for %{private,mask.hash}s priority: %{public}s reverseGeocode: %{BOOL}d", (uint8_t *)v31, 0x30u);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v29, -1, -1);
    MEMORY[0x25333BB40](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (*(void *)(*v1 + 16))
  {
    v33[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v33);
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_24E450A38;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v27 = 3;
    swift_willThrow();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_24E450A38()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E450B34, 0, 0);
}

uint64_t sub_24E450B34()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v0 + 72) = v2;
  *(unsigned char *)(v0 + 134) = *(unsigned char *)(v1 + 72);
  *(void *)(v0 + 80) = *(void *)(v1 + 80);
  *(void *)(v0 + 88) = *(void *)(v1 + 88);
  *(void *)(v0 + 96) = *(void *)(v1 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E450BDC, v2, 0);
}

uint64_t sub_24E450BDC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  long long v12 = *(_OWORD *)(v0 + 80);
  char v2 = *(unsigned char *)(v0 + 134);
  uint64_t v3 = *(void *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 133);
  char v5 = *(unsigned char *)(v0 + 132);
  uint64_t v6 = *(void *)(v0 + 48);
  unint64_t v7 = sub_24E3E8CF4();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 104) = v8;
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v6;
  *(unsigned char *)(v8 + 32) = v4;
  *(unsigned char *)(v8 + 40) = v2;
  *(_OWORD *)(v8 + 48) = v12;
  *(void *)(v8 + 64) = v1;
  *(unsigned char *)(v8 + 72) = v5;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v9;
  *uint64_t v9 = v0;
  uint64_t v10 = MEMORY[0x263F8EE60];
  v9[1] = sub_24E450D24;
  return MEMORY[0x270FA2360](v9, v3, v7, 0xD000000000000043, 0x800000024E478990, sub_24E455904, v8, v10 + 8);
}

uint64_t sub_24E450D24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    char v4 = sub_24E450EBC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 72);
    swift_task_dealloc();
    char v4 = sub_24E450E4C;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E450E4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E450EBC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.stopRefreshingLocation(forHandles:priority:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  *(unsigned char *)(v3 + 104) = *a2;
  return MEMORY[0x270FA2498](sub_24E450F5C, 0, 0);
}

uint64_t sub_24E450F5C()
{
  uint64_t v33 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (uint64_t *)(v0 + 48);
  uint64_t v2 = sub_24E4749E8();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1C0ED0);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_24E4749C8();
  os_log_type_t v4 = sub_24E474DA8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 48);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v31 = v29;
    *(_DWORD *)uint64_t v7 = 136446979;
    *(void *)(v0 + 16) = sub_24E37E724(0xD00000000000002CLL, 0x800000024E478A50, &v31);
    sub_24E474DE8();
    *(_WORD *)(v7 + 12) = 2160;
    *(void *)(v0 + 24) = 1752392040;
    sub_24E474DE8();
    *(_WORD *)(v7 + 22) = 2081;
    int64_t v8 = *(void *)(v6 + 16);
    uint64_t v9 = MEMORY[0x263F8EE78];
    os_log_type_t v30 = v4;
    if (v8)
    {
      uint64_t v28 = v7;
      uint64_t v10 = *v1;
      *(void *)uint64_t v32 = MEMORY[0x263F8EE78];
      sub_24E3763D0(0, v8, 0);
      uint64_t v9 = *(void *)v32;
      unint64_t v11 = *(void *)(*(void *)v32 + 16);
      uint64_t v12 = 16 * v11;
      uint64_t v13 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        *(void *)uint64_t v32 = v9;
        unint64_t v16 = *(void *)(v9 + 24);
        swift_bridgeObjectRetain();
        if (v11 >= v16 >> 1)
        {
          sub_24E3763D0(v16 > 1, v11 + 1, 1);
          uint64_t v9 = *(void *)v32;
        }
        *(void *)(v9 + 16) = v11 + 1;
        uint64_t v17 = v9 + v12;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v15;
        v12 += 16;
        v13 += 22;
        ++v11;
        --v8;
      }
      while (v8);
      uint64_t v1 = (uint64_t *)(v0 + 48);
      uint64_t v7 = v28;
    }
    uint64_t v18 = *(unsigned __int8 *)(v0 + 104);
    uint64_t v19 = MEMORY[0x25333AE40](v9, MEMORY[0x263F8D310]);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_24E37E724(v19, v21, &v31);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 32) = 2082;
    unint64_t v22 = 0xE800000000000000;
    uint64_t v23 = 0x776F6C6C6168732ELL;
    switch(v18)
    {
      case 1:
        break;
      case 2:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v23 = 0x6576696C2ELL;
        break;
      case 3:
        unint64_t v22 = 0x800000024E476450;
        uint64_t v23 = 0xD000000000000014;
        break;
      default:
        uint64_t v23 = 0xD000000000000015;
        unint64_t v22 = 0x800000024E4764E0;
        break;
    }
    *(void *)(v0 + 40) = sub_24E37E724(v23, v22, &v31);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E36C000, v3, v30, "%{public}s for %{private,mask.hash}s priority: %{public}s", (uint8_t *)v7, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v29, -1, -1);
    MEMORY[0x25333BB40](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (*(void *)(*v1 + 16))
  {
    v32[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v32);
    int v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v24;
    *int v24 = v0;
    v24[1] = sub_24E451430;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v26 = 3;
    swift_willThrow();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_24E451430()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E45152C, 0, 0);
}

uint64_t sub_24E45152C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 56);
  *(void *)(v0 + 72) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E4515A4, v1, 0);
}

uint64_t sub_24E4515A4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  char v2 = *(unsigned char *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 48);
  unint64_t v4 = sub_24E3E8CF4();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 32) = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  void *v6 = v0;
  uint64_t v7 = MEMORY[0x263F8EE60];
  v6[1] = sub_24E4516B4;
  return MEMORY[0x270FA2360](v6, v1, v4, 0xD000000000000029, 0x800000024E478A20, sub_24E455908, v5, v7 + 8);
}

uint64_t sub_24E4516B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    unint64_t v4 = sub_24E45183C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 72);
    swift_task_dealloc();
    unint64_t v4 = sub_24E4517D8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E4517D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E45183C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.stopRefreshingLocation()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24E4518C8, 0, 0);
}

uint64_t sub_24E4518C8()
{
  uint64_t v10 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  uint64_t v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    *(_DWORD *)unint64_t v4 = 136446210;
    *(void *)(v0 + 16) = sub_24E37E724(0xD000000000000018, 0x800000024E478A80, &v9);
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }

  unsigned __int8 v8 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v6;
  void *v6 = v0;
  v6[1] = sub_24E451ABC;
  return sub_24E444F88();
}

uint64_t sub_24E451ABC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E451BB8, 0, 0);
}

uint64_t sub_24E451BB8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 56);
  *(void *)(v0 + 40) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E451C30, v1, 0);
}

uint64_t sub_24E451C30()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = sub_24E3E8CF4();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E451D10;
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v3, v1, v2, 0xD000000000000018, 0x800000024E478A80, sub_24E455914, v4, v5);
}

uint64_t sub_24E451D10()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v4 = sub_24E451EA0;
  }
  else {
    uint64_t v4 = sub_24E451E3C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E451E3C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E451EA0()
{
  return MEMORY[0x270FA2498](sub_24E3E57A8, 0, 0);
}

uint64_t Session.cachedLocation(for:includeAddress:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 76) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = v2;
  return MEMORY[0x270FA2498](sub_24E451EE0, 0, 0);
}

uint64_t sub_24E451EE0()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0 + 4;
  int64_t v2 = *(void *)(v0[4] + 16);
  if (v2)
  {
    if (qword_26B1B99B8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E4749E8();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1C0ED0);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_24E4749C8();
    os_log_type_t v5 = sub_24E474DA8();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *v1;
    if (v6)
    {
      os_log_type_t v26 = v5;
      log = v4;
      uint64_t v29 = v0;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v30 = v25;
      *(_DWORD *)uint64_t v8 = 141558531;
      *(v1 - 2) = 1752392040;
      sub_24E474DE8();
      uint64_t v27 = v8;
      *(_WORD *)(v8 + 12) = 2081;
      *(void *)uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24E3763D0(0, v2, 0);
      uint64_t v9 = *(void *)v31;
      unint64_t v10 = *(void *)(*(void *)v31 + 16);
      uint64_t v11 = 16 * v10;
      uint64_t v12 = (uint64_t *)(v7 + 40);
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        *(void *)uint64_t v31 = v9;
        unint64_t v15 = *(void *)(v9 + 24);
        swift_bridgeObjectRetain();
        if (v10 >= v15 >> 1)
        {
          sub_24E3763D0(v15 > 1, v10 + 1, 1);
          uint64_t v9 = *(void *)v31;
        }
        *(void *)(v9 + 16) = v10 + 1;
        uint64_t v16 = v9 + v11;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = v14;
        v11 += 16;
        v12 += 22;
        ++v10;
        --v2;
      }
      while (v2);
      uint64_t v0 = v29;
      int v20 = *((unsigned __int8 *)v29 + 76);
      uint64_t v21 = MEMORY[0x25333AE40](v9, MEMORY[0x263F8D310]);
      unint64_t v23 = v22;
      swift_release();
      v29[3] = sub_24E37E724(v21, v23, &v30);
      sub_24E474DE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 22) = 1024;
      *((_DWORD *)v29 + 18) = v20;
      sub_24E474DE8();
      uint64_t v4 = log;
      _os_log_impl(&dword_24E36C000, log, v26, "cachedLocation for %{private,mask.hash}s, includeAddress: %{BOOL}d", (uint8_t *)v27, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x25333BB40](v25, -1, -1);
      MEMORY[0x25333BB40](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v31[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v31);
    int v24 = (void *)swift_task_alloc();
    v0[6] = v24;
    *int v24 = v0;
    v24[1] = sub_24E4522B8;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v17 = 3;
    swift_willThrow();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_24E4522B8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4523B4, 0, 0);
}

uint64_t sub_24E4523B4()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 40) + 56);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_24E452468;
  char v2 = *(unsigned char *)(v0 + 76);
  uint64_t v3 = *(void *)(v0 + 32);
  return sub_24E3CE0A8(v3, v2, 1);
}

uint64_t sub_24E452468(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t Session.locations(for:reverseGeocode:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 164) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  return MEMORY[0x270FA2498](sub_24E4525A8, 0, 0);
}

uint64_t sub_24E4525A8()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (_OWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      long long v4 = v3[9];
      v11[8] = v3[8];
      v11[9] = v4;
      v11[10] = v3[10];
      long long v5 = v3[5];
      v11[4] = v3[4];
      v11[5] = v5;
      long long v6 = v3[7];
      v11[6] = v3[6];
      v11[7] = v6;
      long long v7 = v3[1];
      v11[0] = *v3;
      v11[1] = v7;
      long long v8 = v3[3];
      v11[2] = v3[2];
      v11[3] = v8;
      sub_24E45591C(v11);
      v3 += 11;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  LOBYTE(v11[0]) = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0((unsigned __int8 *)v11);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24E4526B4;
  return sub_24E444F88();
}

uint64_t sub_24E4526B4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4527B0, 0, 0);
}

uint64_t sub_24E4527B0()
{
  v0[9] = *(void *)(v0[7] + 56);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  void *v1 = v0;
  v1[1] = sub_24E45285C;
  uint64_t v2 = v0[6];
  return sub_24E3E2E98(v2);
}

uint64_t sub_24E45285C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_24E4534E0;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 96) = a1;
    long long v5 = sub_24E45298C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E45298C()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  void *v1 = v0;
  v1[1] = sub_24E452A28;
  return sub_24E444F88();
}

uint64_t sub_24E452A28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E452B24, 0, 0);
}

uint64_t sub_24E452B24()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  void *v1 = v0;
  v1[1] = sub_24E452BC8;
  uint64_t v2 = *(void *)(v0 + 96);
  return sub_24E3D46D4(v2);
}

uint64_t sub_24E452BC8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E452D04, 0, 0);
}

uint64_t sub_24E452D04()
{
  uint64_t v13 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136446466;
    v0[4] = sub_24E37E724(0xD00000000000001ELL, 0x800000024E476FB0, &v12);
    sub_24E474DE8();
    *(_WORD *)(v4 + 12) = 2080;
    type metadata accessor for Location();
    sub_24E3DC49C();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24E474A08();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[5] = sub_24E37E724(v6, v8, &v12);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E36C000, v2, v3, "%{public}s Cached (on-disk) locations: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unsigned __int8 v11 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v11);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[17] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24E452FB0;
  return sub_24E444F88();
}

uint64_t sub_24E452FB0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4530AC, 0, 0);
}

uint64_t sub_24E4530AC()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  void *v1 = v0;
  v1[1] = sub_24E453154;
  uint64_t v2 = *(void *)(v0 + 120);
  char v3 = *(unsigned char *)(v0 + 164);
  return sub_24E3D5C94(v2, v3);
}

uint64_t sub_24E453154(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E453290, 0, 0);
}

uint64_t sub_24E453290()
{
  uint64_t v13 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_24E4749C8();
  os_log_type_t v2 = sub_24E474DA8();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = *(unsigned __int8 *)(v0 + 164);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136446722;
    *(void *)(v0 + 16) = sub_24E37E724(0xD00000000000001ELL, 0x800000024E476FB0, &v12);
    sub_24E474DE8();
    *(_WORD *)(v4 + 12) = 1024;
    *(_DWORD *)(v0 + 160) = v3;
    sub_24E474DE8();
    *(_WORD *)(v4 + 18) = 2080;
    type metadata accessor for Location();
    sub_24E3DC49C();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24E474A08();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = sub_24E37E724(v6, v8, &v12);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E36C000, v1, v2, "%{public}s reverseGeocode:%{BOOL}d:  location:%s", (uint8_t *)v4, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v10 = *(void *)(v0 + 152);
  return v9(v10);
}

uint64_t sub_24E4534E0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.latestLocations(for:includeAddress:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 176) = a2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v2;
  return MEMORY[0x270FA2498](sub_24E453568, 0, 0);
}

uint64_t sub_24E453568()
{
  uint64_t v30 = v0;
  uint64_t v1 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v2 = (uint64_t *)(v0 + 56);
  uint64_t v3 = sub_24E4749E8();
  *(void *)(v0 + 72) = __swift_project_value_buffer(v3, (uint64_t)qword_26B1C0ED0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_24E4749C8();
  os_log_type_t v5 = sub_24E474DA8();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *v2;
  if (v6)
  {
    os_log_type_t v27 = v5;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v8 = 136446979;
    *(void *)(v1 + 40) = sub_24E37E724(0xD000000000000024, 0x800000024E478AA0, &v28);
    sub_24E474DE8();
    *(_WORD *)(v8 + 12) = 2160;
    *(void *)(v1 + 48) = 1752392040;
    sub_24E474DE8();
    *(_WORD *)(v8 + 22) = 2081;
    int64_t v9 = *(void *)(v7 + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (v9)
    {
      uint64_t v25 = v4;
      uint64_t v11 = *v2;
      uint64_t v29 = MEMORY[0x263F8EE78];
      sub_24E3763D0(0, v9, 0);
      uint64_t v10 = v29;
      unint64_t v12 = *(void *)(v29 + 16);
      uint64_t v13 = 16 * v12;
      uint64_t v14 = (uint64_t *)(v11 + 40);
      do
      {
        uint64_t v15 = *(v14 - 1);
        uint64_t v16 = *v14;
        uint64_t v29 = v10;
        unint64_t v17 = *(void *)(v10 + 24);
        swift_bridgeObjectRetain();
        if (v12 >= v17 >> 1)
        {
          sub_24E3763D0(v17 > 1, v12 + 1, 1);
          uint64_t v10 = v29;
        }
        *(void *)(v10 + 16) = v12 + 1;
        uint64_t v18 = v10 + v13;
        *(void *)(v18 + 32) = v15;
        *(void *)(v18 + 40) = v16;
        v13 += 16;
        v14 += 22;
        ++v12;
        --v9;
      }
      while (v9);
      uint64_t v4 = v25;
    }
    int v19 = *(unsigned __int8 *)(v1 + 176);
    uint64_t v20 = MEMORY[0x25333AE40](v10, MEMORY[0x263F8D310]);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 24) = sub_24E37E724(v20, v22, &v28);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 32) = 1024;
    *(_DWORD *)(v1 + 172) = v19;
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v4, v27, "%{public}s handles: %{private,mask.hash}s includeAddress: %{BOOL}d", (uint8_t *)v8, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v26, -1, -1);
    MEMORY[0x25333BB40](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  LOBYTE(v29) = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0((unsigned __int8 *)&v29);
  unint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v1 + 80) = v23;
  *unint64_t v23 = v1;
  v23[1] = sub_24E453910;
  return sub_24E444F88();
}

uint64_t sub_24E453910()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E453A0C, 0, 0);
}

uint64_t sub_24E453A0C()
{
  v0[11] = *(void *)(v0[8] + 56);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  void *v1 = v0;
  v1[1] = sub_24E453AB8;
  uint64_t v2 = v0[7];
  return sub_24E3DF874(v2);
}

uint64_t sub_24E453AB8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v5 = sub_24E454520;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 112) = a1;
    os_log_type_t v5 = sub_24E453BE8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E453BE8()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  void *v1 = v0;
  v1[1] = sub_24E453C84;
  return sub_24E444F88();
}

uint64_t sub_24E453C84()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E453D80, 0, 0);
}

uint64_t sub_24E453D80()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  void *v1 = v0;
  v1[1] = sub_24E453E24;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_24E3D46D4(v2);
}

uint64_t sub_24E453E24(uint64_t a1)
{
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E453F60, 0, 0);
}

uint64_t sub_24E453F60()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  void *v1 = v0;
  v1[1] = sub_24E453FFC;
  return sub_24E444F88();
}

uint64_t sub_24E453FFC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4540F8, 0, 0);
}

uint64_t sub_24E4540F8()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  void *v1 = v0;
  v1[1] = sub_24E4541A0;
  uint64_t v2 = *(void *)(v0 + 136);
  char v3 = *(unsigned char *)(v0 + 176);
  return sub_24E3D5C94(v2, v3);
}

uint64_t sub_24E4541A0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E4542DC, 0, 0);
}

uint64_t sub_24E4542DC()
{
  uint64_t v13 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_24E4749C8();
  os_log_type_t v2 = sub_24E474DA8();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = *(unsigned __int8 *)(v0 + 176);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136446722;
    *(void *)(v0 + 16) = sub_24E37E724(0xD000000000000024, 0x800000024E478AA0, &v12);
    sub_24E474DE8();
    *(_WORD *)(v4 + 12) = 1024;
    *(_DWORD *)(v0 + 168) = v3;
    sub_24E474DE8();
    *(_WORD *)(v4 + 18) = 2080;
    type metadata accessor for Location();
    sub_24E3DC49C();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24E474A08();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_24E37E724(v6, v8, &v12);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E36C000, v1, v2, "%{public}s includeAddress:%{BOOL}d:  location:%s", (uint8_t *)v4, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  int64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v10 = *(void *)(v0 + 160);
  return v9(v10);
}

uint64_t sub_24E454520()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.subscribeToBackgroundProactiveLocations()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E4545A4, 0, 0);
}

uint64_t sub_24E4545A4()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E454640;
  return sub_24E444F88();
}

uint64_t sub_24E454640()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E45473C, 0, 0);
}

uint64_t sub_24E45473C()
{
  v0[4] = *(void *)(v0[2] + 56);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E9670;
  return sub_24E3CA658();
}

uint64_t Session.locationStream(handles:priority:reverseGeocode:)(uint64_t a1, uint64_t a2, unsigned char *a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 80) = a4;
  *(void *)(v5 + 16) = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7BA0);
  *(void *)(v5 + 40) = v7;
  *(void *)(v5 + 48) = *(void *)(v7 - 8);
  *(void *)(v5 + 56) = swift_task_alloc();
  *(unsigned char *)(v5 + 81) = *a3;
  return MEMORY[0x270FA2498](sub_24E4548B8, 0, 0);
}

uint64_t sub_24E4548B8()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_24E454954;
  return sub_24E444F88();
}

uint64_t sub_24E454954()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E454A50, 0, 0);
}

uint64_t sub_24E454A50()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 56);
  *(void *)(v0 + 72) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E454AC8, v1, 0);
}

uint64_t sub_24E454AC8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  char v2 = *(unsigned char *)(v0 + 81);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 24);
  type metadata accessor for LocationStreamChange();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v7;
  *(unsigned char *)(v8 + 32) = v2;
  *(unsigned char *)(v8 + 33) = v6;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, *MEMORY[0x263F8F580], v5);
  sub_24E474CF8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t Session.startRefreshingLocation(forHandles:priority:)(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 104) = *a3;
  return MEMORY[0x270FA2498](sub_24E454C14, 0, 0);
}

uint64_t sub_24E454C14()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E454CB0;
  return sub_24E444F88();
}

uint64_t sub_24E454CB0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E454DAC, 0, 0);
}

uint64_t sub_24E454DAC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v0 + 48) = v2;
  *(unsigned char *)(v0 + 105) = *(unsigned char *)(v1 + 72);
  *(void *)(v0 + 56) = *(void *)(v1 + 80);
  *(void *)(v0 + 64) = *(void *)(v1 + 88);
  *(void *)(v0 + 72) = *(void *)(v1 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E454E54, v2, 0);
}

uint64_t sub_24E454E54()
{
  uint64_t v1 = *(void *)(v0 + 72);
  long long v12 = *(_OWORD *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 105);
  uint64_t v3 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 24);
  unint64_t v6 = sub_24E3E8CF4();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v5;
  *(unsigned char *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 33) = 0;
  *(unsigned char *)(v7 + 40) = v2;
  *(_OWORD *)(v7 + 48) = v12;
  *(void *)(v7 + 64) = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7B10);
  *uint64_t v8 = v0;
  v8[1] = sub_24E454F9C;
  uint64_t v10 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v10, v3, v6, 0xD000000000000040, 0x800000024E478900, sub_24E455900, v7, v9);
}

uint64_t sub_24E454F9C()
{
  char v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    return MEMORY[0x270FA2498](sub_24E4550FC, v3, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    char v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_24E4550FC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.addHandlesToLocationStream(_:priority:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 96) = *a2;
  return MEMORY[0x270FA2498](sub_24E45519C, 0, 0);
}

uint64_t sub_24E45519C()
{
  uint64_t v6 = v0;
  if (*(void *)(v0[2] + 16))
  {
    v5[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v5);
    uint64_t v1 = (void *)swift_task_alloc();
    v0[4] = v1;
    void *v1 = v0;
    v1[1] = sub_24E4552B0;
    return sub_24E444F88();
  }
  else
  {
    sub_24E3BD4D0();
    swift_allocError();
    *uint64_t v3 = 3;
    swift_willThrow();
    char v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_24E4552B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4553AC, 0, 0);
}

uint64_t sub_24E4553AC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 97) = *(unsigned char *)(v1 + 72);
  *(void *)(v0 + 48) = *(void *)(v1 + 80);
  *(void *)(v0 + 56) = *(void *)(v1 + 88);
  *(void *)(v0 + 64) = *(void *)(v1 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E455454, v2, 0);
}

uint64_t sub_24E455454()
{
  uint64_t v1 = *(void *)(v0 + 64);
  long long v11 = *(_OWORD *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 97);
  uint64_t v3 = *(void *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 16);
  unint64_t v6 = sub_24E3E8CF4();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v5;
  *(unsigned char *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 40) = v2;
  *(_OWORD *)(v7 + 48) = v11;
  *(void *)(v7 + 64) = v1;
  *(unsigned char *)(v7 + 72) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  *uint64_t v8 = v0;
  uint64_t v9 = MEMORY[0x263F8EE60];
  v8[1] = sub_24E455590;
  return MEMORY[0x270FA2360](v8, v3, v6, 0xD000000000000043, 0x800000024E478990, sub_24E455904, v7, v9 + 8);
}

uint64_t sub_24E455590()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    char v4 = sub_24E455728;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    char v4 = sub_24E4556B8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E4556B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E455728()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.cachedLocation(for:)(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24E3E4CE8;
  *(unsigned char *)(v4 + 76) = 0;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = v1;
  return MEMORY[0x270FA2498](sub_24E451EE0, 0, 0);
}

uint64_t Session.locations(for:)(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24E3E817C;
  *(unsigned char *)(v4 + 164) = 0;
  *(void *)(v4 + 48) = a1;
  *(void *)(v4 + 56) = v1;
  return MEMORY[0x270FA2498](sub_24E4525A8, 0, 0);
}

uint64_t sub_24E455908(uint64_t a1)
{
  return sub_24E3C6E54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_24E455914(uint64_t a1)
{
  return sub_24E3C7C00(a1, v1);
}

void sub_24E45591C(_OWORD *a1)
{
  long long v1 = a1[9];
  v12[8] = a1[8];
  v12[9] = v1;
  v12[10] = a1[10];
  long long v2 = a1[5];
  v12[4] = a1[4];
  v12[5] = v2;
  long long v3 = a1[7];
  v12[6] = a1[6];
  v12[7] = v3;
  long long v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  long long v5 = a1[3];
  v12[2] = a1[2];
  v12[3] = v5;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24E4749E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B1C0ED0);
  sub_24E3776C8((uint64_t)v12);
  uint64_t v7 = sub_24E4749C8();
  os_log_type_t v8 = sub_24E474DA8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)uint64_t v9 = 136446979;
    sub_24E37E724(0xD00000000000001ELL, 0x800000024E476FB0, &v13);
    sub_24E474DE8();
    *(_WORD *)(v9 + 12) = 2160;
    sub_24E474DE8();
    *(_WORD *)(v9 + 22) = 2081;
    long long v11 = v12[0];
    swift_bridgeObjectRetain();
    sub_24E37E724(v11, *((unint64_t *)&v11 + 1), &v13);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    sub_24E377FA0((uint64_t)v12);
    *(_WORD *)(v9 + 32) = 1024;
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v7, v8, "%{public}s handle: %{private,mask.hash}s reverseGeocode: %{BOOL}d", (uint8_t *)v9, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v10, -1, -1);
    MEMORY[0x25333BB40](v9, -1, -1);
  }
  else
  {
    sub_24E377FA0((uint64_t)v12);
  }
}

uint64_t sub_24E455B8C(uint64_t a1)
{
  return sub_24E3C3230(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33));
}

uint64_t sub_24E455B9C(uint64_t a1)
{
  return sub_24E3C58E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_24E455BD8(uint64_t a1)
{
  return sub_24E3C5D08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72));
}

uint64_t Session.data(for:)(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
  return MEMORY[0x270FA2498](sub_24E455C34, 0, 0);
}

uint64_t sub_24E455C34()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = MEMORY[0x263F8EE78];
  unint64_t v3 = sub_24E424AF8(MEMORY[0x263F8EE78]);
  Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)((void *)0x7461642074736554, (void *)0xEF293A726F662861, 0, 0, v2, v3, v2, (uint64_t *)(v0 + 16));
  long long v4 = *(_OWORD *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)uint64_t v1 = v4;
  long long v6 = *(_OWORD *)(v0 + 64);
  long long v7 = *(_OWORD *)(v0 + 80);
  long long v8 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 96) = v8;
  *(_OWORD *)(v1 + 48) = v6;
  *(_OWORD *)(v1 + 64) = v7;
  long long v9 = *(_OWORD *)(v0 + 128);
  long long v10 = *(_OWORD *)(v0 + 144);
  long long v11 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v1 + 160) = v11;
  *(_OWORD *)(v1 + 112) = v9;
  *(_OWORD *)(v1 + 128) = v10;
  *(void *)(v1 + 176) = 0;
  *(void *)(v1 + 184) = 0;
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t Session.peerToken(peer:)(_OWORD *a1)
{
  *(void *)(v2 + 392) = v1;
  long long v3 = a1[9];
  *(_OWORD *)(v2 + 144) = a1[8];
  *(_OWORD *)(v2 + 160) = v3;
  *(_OWORD *)(v2 + 176) = a1[10];
  long long v4 = a1[5];
  *(_OWORD *)(v2 + 80) = a1[4];
  *(_OWORD *)(v2 + 96) = v4;
  long long v5 = a1[7];
  *(_OWORD *)(v2 + 112) = a1[6];
  *(_OWORD *)(v2 + 128) = v5;
  long long v6 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v6;
  long long v7 = a1[3];
  *(_OWORD *)(v2 + 48) = a1[2];
  *(_OWORD *)(v2 + 64) = v7;
  return MEMORY[0x270FA2498](sub_24E455D70, 0, 0);
}

uint64_t sub_24E455D70()
{
  uint64_t v12 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  sub_24E3776C8((uint64_t)(v0 + 2));
  uint64_t v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136446723;
    v0[46] = sub_24E37E724(0xD000000000000010, 0x800000024E478AD0, &v11);
    sub_24E474DE8();
    *(_WORD *)(v4 + 12) = 2160;
    v0[47] = 1752392040;
    sub_24E474DE8();
    *(_WORD *)(v4 + 22) = 2081;
    uint64_t v6 = v0[2];
    unint64_t v7 = v0[3];
    swift_bridgeObjectRetain();
    v0[48] = sub_24E37E724(v6, v7, &v11);
    sub_24E474DE8();
    swift_bridgeObjectRelease();
    sub_24E377FA0((uint64_t)(v0 + 2));
    _os_log_impl(&dword_24E36C000, v2, v3, "%{public}s for %{private,mask.hash}s!", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }
  else
  {
    sub_24E377FA0((uint64_t)(v0 + 2));
  }

  unsigned __int8 v10 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v10);
  long long v8 = (void *)swift_task_alloc();
  v0[50] = v8;
  *long long v8 = v0;
  v8[1] = sub_24E456000;
  return sub_24E444F88();
}

uint64_t sub_24E456000()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4560FC, 0, 0);
}

uint64_t sub_24E4560FC()
{
  *(void *)(v0 + 408) = *(void *)(*(void *)(v0 + 392) + 40);
  swift_retain();
  long long v1 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v1;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  long long v2 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v2;
  long long v3 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v3;
  long long v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v4;
  long long v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v6;
  void *v6 = v0;
  v6[1] = sub_24E4561D8;
  return sub_24E3AC854((_OWORD *)(v0 + 192));
}

uint64_t sub_24E4561D8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 424) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E45633C, 0, 0);
  }
  else
  {
    long long v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_24E45633C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.ownerToken()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24E456374, 0, 0);
}

uint64_t sub_24E456374()
{
  uint64_t v10 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  long long v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    *(void *)(v0 + 16) = sub_24E37E724(0x6B6F5472656E776FLL, 0xEC00000029286E65, &v9);
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }

  unsigned __int8 v8 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v6;
  void *v6 = v0;
  v6[1] = sub_24E456570;
  return sub_24E444F88();
}

uint64_t sub_24E456570()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E45666C, 0, 0);
}

uint64_t sub_24E45666C()
{
  v0[5] = *(void *)(v0[3] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24E456710;
  return sub_24E3ADFC0();
}

uint64_t sub_24E456710(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E3E57A8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t Session.stopConfigRangingSession()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24E456888, 0, 0);
}

uint64_t sub_24E456888()
{
  uint64_t v10 = v0;
  if (qword_26B1B99B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E4749E8();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1C0ED0);
  long long v2 = sub_24E4749C8();
  os_log_type_t v3 = sub_24E474DA8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    *(void *)(v0 + 16) = sub_24E37E724(0xD00000000000001ALL, 0x800000024E476AF0, &v9);
    sub_24E474DE8();
    _os_log_impl(&dword_24E36C000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25333BB40](v5, -1, -1);
    MEMORY[0x25333BB40](v4, -1, -1);
  }

  unsigned __int8 v8 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v6;
  void *v6 = v0;
  v6[1] = sub_24E456A80;
  return sub_24E444F88();
}

uint64_t sub_24E456A80()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E456B7C, 0, 0);
}

uint64_t sub_24E456B7C()
{
  v0[5] = *(void *)(v0[3] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E566C;
  return sub_24E3AA0B0();
}

uint64_t static PreferenceError.== infix(_:_:)()
{
  return 1;
}

uint64_t PreferenceError.hash(into:)()
{
  return sub_24E475238();
}

uint64_t sub_24E456C50()
{
  return 0x4D676E697373696DLL;
}

uint64_t sub_24E456C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4D676E697373696DLL && a2 == 0xEF65636976654465)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E456D30(uint64_t a1)
{
  unint64_t v2 = sub_24E456FF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E456D6C(uint64_t a1)
{
  unint64_t v2 = sub_24E456FF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E456DA8(uint64_t a1)
{
  unint64_t v2 = sub_24E457044();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E456DE4(uint64_t a1)
{
  unint64_t v2 = sub_24E457044();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PreferenceError.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC688);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC690);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E456FF0();
  sub_24E4752A8();
  sub_24E457044();
  sub_24E475088();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_24E456FF0()
{
  unint64_t result = qword_2698DC698;
  if (!qword_2698DC698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC698);
  }
  return result;
}

unint64_t sub_24E457044()
{
  unint64_t result = qword_2698DC6A0;
  if (!qword_2698DC6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC6A0);
  }
  return result;
}

uint64_t PreferenceError.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t PreferenceError.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC6A8);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC6B0);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E456FF0();
  sub_24E475288();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_24E475078() + 16) == 1)
    {
      sub_24E457044();
      sub_24E474FC8();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_24E474EC8();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
      *uint64_t v13 = &type metadata for PreferenceError;
      sub_24E474FD8();
      sub_24E474EB8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E4573C4(void *a1)
{
  return PreferenceError.init(from:)(a1);
}

uint64_t sub_24E4573DC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC688);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC690);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E456FF0();
  sub_24E4752A8();
  sub_24E457044();
  sub_24E475088();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Session.setActiveLocationSharingDevice(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E4575D0, 0, 0);
}

uint64_t sub_24E4575D0()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E457670;
  return sub_24E444F88();
}

uint64_t sub_24E457670()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E45776C, 0, 0);
}

uint64_t sub_24E45776C()
{
  v0[6] = *(void *)(v0[4] + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3C092C;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return sub_24E3ECE18(v3, v2);
}

uint64_t Session.hideMyLocation(hidden:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 56) = a1;
  return MEMORY[0x270FA2498](sub_24E45783C, 0, 0);
}

uint64_t sub_24E45783C()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E4578DC;
  return sub_24E444F88();
}

uint64_t sub_24E4578DC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4579D8, 0, 0);
}

uint64_t sub_24E4579D8()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E9670;
  char v2 = *(unsigned char *)(v0 + 56);
  return sub_24E3ED9C0(v2);
}

uint64_t Session.allowFriendshipRequests(allowed:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 56) = a1;
  return MEMORY[0x270FA2498](sub_24E457AA8, 0, 0);
}

uint64_t sub_24E457AA8()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E457B48;
  return sub_24E444F88();
}

uint64_t sub_24E457B48()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E457C44, 0, 0);
}

uint64_t sub_24E457C44()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E9A0C;
  char v2 = *(unsigned char *)(v0 + 56);
  return sub_24E3EE0FC(v2);
}

uint64_t Session.activeLocationSharingDevice(cached:)(uint64_t a1, char a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  if (a2) {
    uint64_t v4 = sub_24E457D24;
  }
  else {
    uint64_t v4 = sub_24E4580D0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24E457D24()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_24E457DC4;
  return sub_24E444F88();
}

uint64_t sub_24E457DC4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E457EC0, 0, 0);
}

uint64_t sub_24E457EC0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 48);
  *(void *)(v0 + 40) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E457F38, v1, 0);
}

uint64_t sub_24E457F38()
{
  uint64_t v1 = *(void *)(v0 + 40) + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice;
  uint64_t v2 = *(void *)v1;
  *(void *)(v0 + 48) = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = *(void *)(v1 + 16);
  *(void *)(v0 + 72) = *(void *)(v1 + 24);
  *(void *)(v0 + 80) = *(void *)(v1 + 32);
  *(void *)(v0 + 88) = *(void *)(v1 + 40);
  *(_DWORD *)(v0 + 128) = *(_DWORD *)(v1 + 48);
  sub_24E3EC8C8(v2, v3);
  swift_release();
  return MEMORY[0x270FA2498](sub_24E457FF0, 0, 0);
}

uint64_t sub_24E457FF0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1)
  {
    int v2 = *(_DWORD *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    long long v5 = *(_OWORD *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 16);
    *(void *)uint64_t v6 = *(void *)(v0 + 48);
    *(void *)(v6 + 8) = v1;
    *(_OWORD *)(v6 + 16) = v5;
    *(void *)(v6 + 32) = v4;
    *(void *)(v6 + 40) = v3;
    *(unsigned char *)(v6 + 48) = v2 & 1;
    *(unsigned char *)(v6 + 49) = BYTE1(v2) & 1;
    *(unsigned char *)(v6 + 50) = BYTE2(v2) & 1;
    *(unsigned char *)(v6 + 51) = HIBYTE(v2) & 1;
  }
  else
  {
    sub_24E4593D4();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_24E4580D0()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  void *v1 = v0;
  v1[1] = sub_24E458170;
  return sub_24E444F88();
}

uint64_t sub_24E458170()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E45826C, 0, 0);
}

uint64_t sub_24E45826C()
{
  v0[13] = *(void *)(v0[3] + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  void *v1 = v0;
  v1[1] = sub_24E45831C;
  uint64_t v2 = v0[2];
  return sub_24E3EE9AC(v2, 0);
}

uint64_t sub_24E45831C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E458458, 0, 0);
  }
  else
  {
    swift_release();
    unsigned __int8 v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E458458()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session.thisDeviceWithCompanion()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E4584DC, 0, 0);
}

uint64_t sub_24E4584DC()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_24E45857C;
  return sub_24E444F88();
}

uint64_t sub_24E45857C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E458678, 0, 0);
}

uint64_t sub_24E458678()
{
  v0[5] = *(void *)(v0[3] + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E566C;
  uint64_t v2 = v0[2];
  return sub_24E3EF600(v2);
}

uint64_t Session.isMyLocationEnabled(cached:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 56) = a1;
  return MEMORY[0x270FA2498](sub_24E458748, 0, 0);
}

uint64_t sub_24E458748()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E4587E8;
  return sub_24E444F88();
}

uint64_t sub_24E4587E8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4588E4, 0, 0);
}

uint64_t sub_24E4588E4()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E458990;
  char v2 = *(unsigned char *)(v0 + 56);
  return sub_24E3F02A8(v2);
}

uint64_t sub_24E458990(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E458AE0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_24E458AE0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t Session.areFriendshipRequestsAllowed(cached:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 56) = a1;
  return MEMORY[0x270FA2498](sub_24E458B6C, 0, 0);
}

uint64_t sub_24E458B6C()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_24E458C0C;
  return sub_24E444F88();
}

uint64_t sub_24E458C0C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E458D08, 0, 0);
}

uint64_t sub_24E458D08()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_24E458DB4;
  char v2 = *(unsigned char *)(v0 + 56);
  return sub_24E3F0C18(v2);
}

uint64_t sub_24E458DB4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E459730, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t Session.startMonitoringActiveLocationSharingDeviceChange()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E458F24, 0, 0);
}

uint64_t sub_24E458F24()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_24E458FC4;
  return sub_24E444F88();
}

uint64_t sub_24E458FC4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E4590C0, 0, 0);
}

uint64_t sub_24E4590C0()
{
  v0[5] = *(void *)(v0[3] + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E5A70;
  uint64_t v2 = v0[2];
  return sub_24E3EA3A4(v2);
}

uint64_t Session.startMonitoringPreferencesChange()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E45918C, 0, 0);
}

uint64_t sub_24E45918C()
{
  uint64_t v4 = v0;
  unsigned __int8 v3 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_24E45922C;
  return sub_24E444F88();
}

uint64_t sub_24E45922C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E459328, 0, 0);
}

uint64_t sub_24E459328()
{
  v0[5] = *(void *)(v0[3] + 48);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24E3E5A70;
  uint64_t v2 = v0[2];
  return sub_24E3EAB6C(v2);
}

unint64_t sub_24E4593D4()
{
  unint64_t result = qword_26B1B7F28[0];
  if (!qword_26B1B7F28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1B7F28);
  }
  return result;
}

unint64_t sub_24E45942C()
{
  unint64_t result = qword_2698DC700;
  if (!qword_2698DC700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC700);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferenceError()
{
  return &type metadata for PreferenceError;
}

unsigned char *_s12FindMyLocate15PreferenceErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E459530);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferenceError.CodingKeys()
{
  return &type metadata for PreferenceError.CodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceError.MissingMeDeviceCodingKeys()
{
  return &type metadata for PreferenceError.MissingMeDeviceCodingKeys;
}

unint64_t sub_24E45957C()
{
  unint64_t result = qword_2698DC708;
  if (!qword_2698DC708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC708);
  }
  return result;
}

unint64_t sub_24E4595D4()
{
  unint64_t result = qword_2698DC710;
  if (!qword_2698DC710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC710);
  }
  return result;
}

unint64_t sub_24E45962C()
{
  unint64_t result = qword_2698DC718;
  if (!qword_2698DC718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC718);
  }
  return result;
}

unint64_t sub_24E459684()
{
  unint64_t result = qword_2698DC720;
  if (!qword_2698DC720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC720);
  }
  return result;
}

unint64_t sub_24E4596DC()
{
  unint64_t result = qword_2698DC728;
  if (!qword_2698DC728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC728);
  }
  return result;
}

uint64_t sub_24E459734()
{
  return sub_24E475268();
}

uint64_t sub_24E459824()
{
  return sub_24E475268();
}

uint64_t sub_24E4598CC()
{
  return sub_24E475268();
}

uint64_t sub_24E459980()
{
  return sub_24E475268();
}

uint64_t sub_24E459A64()
{
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E459B2C()
{
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E459BBC()
{
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E459C8C()
{
  return sub_24E475268();
}

uint64_t sub_24E459D78()
{
  return sub_24E475268();
}

uint64_t sub_24E459E1C()
{
  return sub_24E475268();
}

FindMyLocate::LocalUserNotificationCategory_optional __swiftcall LocalUserNotificationCategory.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24E474FB8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t LocalUserNotificationCategory.rawValue.getter()
{
  unint64_t result = 0xD00000000000002DLL;
  switch(*v0)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E459FE8(char *a1, char *a2)
{
  return sub_24E385954(*a1, *a2);
}

unint64_t sub_24E459FF8()
{
  unint64_t result = qword_2698DC730;
  if (!qword_2698DC730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC730);
  }
  return result;
}

uint64_t sub_24E45A04C()
{
  return sub_24E459980();
}

uint64_t sub_24E45A054()
{
  return sub_24E459A64();
}

uint64_t sub_24E45A05C()
{
  return sub_24E459E1C();
}

FindMyLocate::LocalUserNotificationCategory_optional sub_24E45A064(Swift::String *a1)
{
  return LocalUserNotificationCategory.init(rawValue:)(*a1);
}

unint64_t sub_24E45A070@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LocalUserNotificationCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24E45A098()
{
  return sub_24E474B78();
}

uint64_t sub_24E45A0F8()
{
  return sub_24E474B48();
}

unsigned char *storeEnumTagSinglePayload for LocalUserNotificationCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E45A214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalUserNotificationCategory()
{
  return &type metadata for LocalUserNotificationCategory;
}

unint64_t sub_24E45A24C()
{
  unint64_t result = qword_2698DC738;
  if (!qword_2698DC738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC738);
  }
  return result;
}

uint64_t destroy for DeviceStreamChange(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DeviceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    uint64_t v5 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for DeviceStreamChange(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
      *(unsigned char *)(a1 + 50) = *((unsigned char *)a2 + 50);
      *(unsigned char *)(a1 + 51) = *((unsigned char *)a2 + 51);
    }
    else
    {
      sub_24E40C804(a1);
      long long v6 = a2[1];
      long long v5 = a2[2];
      long long v7 = *a2;
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = v5;
      *(_OWORD *)a1 = v7;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
    *(unsigned char *)(a1 + 50) = *((unsigned char *)a2 + 50);
    *(unsigned char *)(a1 + 51) = *((unsigned char *)a2 + 51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[2];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v8;
  }
  return a1;
}

uint64_t assignWithTake for DeviceStreamChange(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_24E40C804(a1);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceStreamChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 52)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceStreamChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 52) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 52) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_24E45A648(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for Fence.UpdateStream.AsyncIterator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t type metadata accessor for Fence.UpdateStream.AsyncIterator(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_26B1B7E48);
}

Swift::Void __swiftcall Fence.UpdateStream.close()()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    MEMORY[0x270FA5388](Strong);
    uint64_t v2 = (uint64_t)&v1[4];
    unint64_t v3 = v1 + 8;
    os_unfair_lock_lock(v1 + 8);
    sub_24E45A788(v2);
    os_unfair_lock_unlock(v3);
    swift_release();
  }
  swift_weakAssign();
}

uint64_t sub_24E45A788(uint64_t a1)
{
  return sub_24E38EF14(a1, *(void *)(v1 + 16));
}

uint64_t Fence.UpdateStream.deinit()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    MEMORY[0x270FA5388](Strong);
    uint64_t v4 = (uint64_t)&v3[4];
    uint64_t v5 = v3 + 8;
    os_unfair_lock_lock(v3 + 8);
    sub_24E45B2E0(v4);
    os_unfair_lock_unlock(v5);
    swift_release();
  }
  swift_weakDestroy();
  uint64_t v6 = v0 + OBJC_IVAR____TtCV12FindMyLocate5Fence12UpdateStream_id;
  uint64_t v7 = sub_24E474878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_24E45A8BC(v1 + OBJC_IVAR____TtCV12FindMyLocate5Fence12UpdateStream_iterator);
  return v1;
}

uint64_t sub_24E45A8BC(uint64_t a1)
{
  uint64_t updated = type metadata accessor for Fence.UpdateStream.AsyncIterator(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t Fence.UpdateStream.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    MEMORY[0x270FA5388](Strong);
    uint64_t v4 = (uint64_t)&v3[4];
    uint64_t v5 = v3 + 8;
    os_unfair_lock_lock(v3 + 8);
    sub_24E45B2E0(v4);
    os_unfair_lock_unlock(v5);
    swift_release();
  }
  swift_weakDestroy();
  uint64_t v6 = v0 + OBJC_IVAR____TtCV12FindMyLocate5Fence12UpdateStream_id;
  uint64_t v7 = sub_24E474878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_24E45A8BC(v1 + OBJC_IVAR____TtCV12FindMyLocate5Fence12UpdateStream_iterator);
  return swift_deallocClassInstance();
}

uint64_t Fence.UpdateStream.Snapshot.fences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Fence.UpdateStream.AsyncIterator.next()(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  *unint64_t v3 = v1;
  v3[1] = sub_24E3801B0;
  return MEMORY[0x270FA1F70](a1, v4);
}

uint64_t sub_24E45AB1C(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  *unint64_t v3 = v1;
  v3[1] = sub_24E4489BC;
  return MEMORY[0x270FA1F70](a1, v4);
}

uint64_t sub_24E45ABD0(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  *unint64_t v3 = v1;
  v3[1] = sub_24E45B2DC;
  return MEMORY[0x270FA1F70](a1, v4);
}

uint64_t Fence.UpdateStream.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  return sub_24E45A648(v1 + OBJC_IVAR____TtCV12FindMyLocate5Fence12UpdateStream_iterator, a1);
}

uint64_t sub_24E45AC98()
{
  return MEMORY[0x263F8E658];
}

unint64_t sub_24E45ACA8()
{
  unint64_t result = qword_2698DC758;
  if (!qword_2698DC758)
  {
    type metadata accessor for Fence.UpdateStream.AsyncIterator(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC758);
  }
  return result;
}

uint64_t sub_24E45AD00@<X0>(uint64_t a1@<X8>)
{
  sub_24E45A648(*v1 + OBJC_IVAR____TtCV12FindMyLocate5Fence12UpdateStream_iterator, a1);
  return swift_release();
}

uint64_t sub_24E45AD48()
{
  return type metadata accessor for Fence.UpdateStream(0);
}

uint64_t type metadata accessor for Fence.UpdateStream(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_26B1B7E60);
}

void sub_24E45AD70()
{
  sub_24E474878();
  if (v0 <= 0x3F)
  {
    sub_24E45AE60();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for Fence.UpdateStream(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Fence.UpdateStream);
}

void sub_24E45AE60()
{
  if (!qword_26B1B7EB8)
  {
    unint64_t v0 = sub_24E474CE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1B7EB8);
    }
  }
}

ValueMetadata *type metadata accessor for Fence.UpdateStream.Snapshot()
{
  return &type metadata for Fence.UpdateStream.Snapshot;
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwxx(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E45B154);
}

uint64_t sub_24E45B154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s12UpdateStreamC13AsyncIteratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E45B1D8);
}

uint64_t sub_24E45B1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_24E45B24C()
{
  sub_24E45AE60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_24E45B2E0(uint64_t a1)
{
  return sub_24E45A788(a1);
}

void *initializeBufferWithCopyOfBuffer for FriendshipRequestStreamChange(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DADB0);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    long long v8 = (int *)type metadata accessor for FriendshipRequest();
    *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
    uint64_t v9 = v8[6];
    long long v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v12)
      {
        *(void *)long long v10 = *(void *)v11;
        *((void *)v10 + 1) = v12;
        uint64_t v13 = *((void *)v11 + 3);
        *((void *)v10 + 2) = *((void *)v11 + 2);
        *((void *)v10 + 3) = v13;
        v10[32] = v11[32];
        uint64_t v14 = *((void *)v11 + 6);
        *((void *)v10 + 5) = *((void *)v11 + 5);
        *((void *)v10 + 6) = v14;
        *((void *)v10 + 7) = *((void *)v11 + 7);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        uint64_t v15 = *((void *)v11 + 11);
        *((void *)v10 + 10) = *((void *)v11 + 10);
        *((void *)v10 + 11) = v15;
        *((void *)v10 + 12) = *((void *)v11 + 12);
        v10[104] = v11[104];
        uint64_t v16 = *((void *)v11 + 15);
        *((void *)v10 + 14) = *((void *)v11 + 14);
        *((void *)v10 + 15) = v16;
        uint64_t v17 = *((void *)v11 + 17);
        *((void *)v10 + 16) = *((void *)v11 + 16);
        *((void *)v10 + 17) = v17;
        uint64_t v49 = *((void *)v11 + 19);
        *((void *)v10 + 18) = *((void *)v11 + 18);
        *((void *)v10 + 19) = v49;
        uint64_t v18 = *((void *)v11 + 20);
        uint64_t v19 = *((void *)v11 + 21);
        *((void *)v10 + 20) = v18;
        *((void *)v10 + 21) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v28 = *((_OWORD *)v11 + 9);
        *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        *((_OWORD *)v10 + 9) = v28;
        *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
        long long v29 = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        *((_OWORD *)v10 + 5) = v29;
        long long v30 = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 7) = v30;
        long long v31 = *((_OWORD *)v11 + 1);
        *(_OWORD *)long long v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v31;
        long long v32 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v32;
      }
      uint64_t v33 = v8[7];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_24E474818();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
LABEL_13:
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v34, v35, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_15:
        *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
        *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
        uint64_t v45 = v8[10];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        *uint64_t v46 = *v47;
        *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
        *((void *)v46 + 3) = *((void *)v47 + 3);
        *((unsigned char *)a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v12)
      {
        *(void *)long long v10 = *(void *)v11;
        *((void *)v10 + 1) = v12;
        uint64_t v21 = *((void *)v11 + 3);
        *((void *)v10 + 2) = *((void *)v11 + 2);
        *((void *)v10 + 3) = v21;
        v10[32] = v11[32];
        uint64_t v22 = *((void *)v11 + 6);
        *((void *)v10 + 5) = *((void *)v11 + 5);
        *((void *)v10 + 6) = v22;
        *((void *)v10 + 7) = *((void *)v11 + 7);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        uint64_t v23 = *((void *)v11 + 11);
        *((void *)v10 + 10) = *((void *)v11 + 10);
        *((void *)v10 + 11) = v23;
        *((void *)v10 + 12) = *((void *)v11 + 12);
        v10[104] = v11[104];
        uint64_t v24 = *((void *)v11 + 15);
        *((void *)v10 + 14) = *((void *)v11 + 14);
        *((void *)v10 + 15) = v24;
        uint64_t v25 = *((void *)v11 + 17);
        *((void *)v10 + 16) = *((void *)v11 + 16);
        *((void *)v10 + 17) = v25;
        uint64_t v50 = *((void *)v11 + 19);
        *((void *)v10 + 18) = *((void *)v11 + 18);
        *((void *)v10 + 19) = v50;
        uint64_t v26 = *((void *)v11 + 20);
        uint64_t v27 = *((void *)v11 + 21);
        *((void *)v10 + 20) = v26;
        *((void *)v10 + 21) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v38 = *((_OWORD *)v11 + 9);
        *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        *((_OWORD *)v10 + 9) = v38;
        *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
        long long v39 = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        *((_OWORD *)v10 + 5) = v39;
        long long v40 = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 7) = v40;
        long long v41 = *((_OWORD *)v11 + 1);
        *(_OWORD *)long long v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v41;
        long long v42 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v42;
      }
      uint64_t v43 = v8[7];
      uint64_t v34 = (char *)a1 + v43;
      uint64_t v35 = (char *)a2 + v43;
      uint64_t v36 = sub_24E474818();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
        goto LABEL_13;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    goto LABEL_15;
  }
  uint64_t v20 = *a2;
  *a1 = *a2;
  a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for FriendshipRequestStreamChange(uint64_t a1)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DADB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for FriendshipRequest();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v3 + 24) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(v3 + 28);
  uint64_t v5 = sub_24E474818();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for FriendshipRequest();
  *(void *)(a1 + v6[5]) = *(void *)(a2 + v6[5]);
  uint64_t v7 = v6[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  if (EnumCaseMultiPayload != 1)
  {
    if (v10)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = v10;
      uint64_t v18 = *(void *)(v9 + 24);
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = v18;
      *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
      uint64_t v19 = *(void *)(v9 + 48);
      *(void *)(v8 + 40) = *(void *)(v9 + 40);
      *(void *)(v8 + 48) = v19;
      *(void *)(v8 + 56) = *(void *)(v9 + 56);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      uint64_t v20 = *(void *)(v9 + 88);
      *(void *)(v8 + 80) = *(void *)(v9 + 80);
      *(void *)(v8 + 88) = v20;
      *(void *)(v8 + 96) = *(void *)(v9 + 96);
      *(unsigned char *)(v8 + 104) = *(unsigned char *)(v9 + 104);
      uint64_t v21 = *(void *)(v9 + 120);
      *(void *)(v8 + 112) = *(void *)(v9 + 112);
      *(void *)(v8 + 120) = v21;
      uint64_t v22 = *(void *)(v9 + 136);
      *(void *)(v8 + 128) = *(void *)(v9 + 128);
      *(void *)(v8 + 136) = v22;
      uint64_t v47 = *(void *)(v9 + 152);
      *(void *)(v8 + 144) = *(void *)(v9 + 144);
      *(void *)(v8 + 152) = v47;
      uint64_t v23 = *(void *)(v9 + 160);
      uint64_t v24 = *(void *)(v9 + 168);
      *(void *)(v8 + 160) = v23;
      *(void *)(v8 + 168) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v35 = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
      *(_OWORD *)(v8 + 144) = v35;
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
      long long v36 = *(_OWORD *)(v9 + 80);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 80) = v36;
      long long v37 = *(_OWORD *)(v9 + 112);
      *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
      *(_OWORD *)(v8 + 112) = v37;
      long long v38 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v38;
      long long v39 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = v39;
    }
    uint64_t v40 = v6[7];
    long long v31 = (void *)(a1 + v40);
    long long v32 = (const void *)(a2 + v40);
    uint64_t v33 = sub_24E474818();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
      goto LABEL_11;
    }
LABEL_12:
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    goto LABEL_13;
  }
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    uint64_t v11 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v11;
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    uint64_t v12 = *(void *)(v9 + 48);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(void *)(v8 + 48) = v12;
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    uint64_t v13 = *(void *)(v9 + 88);
    *(void *)(v8 + 80) = *(void *)(v9 + 80);
    *(void *)(v8 + 88) = v13;
    *(void *)(v8 + 96) = *(void *)(v9 + 96);
    *(unsigned char *)(v8 + 104) = *(unsigned char *)(v9 + 104);
    uint64_t v14 = *(void *)(v9 + 120);
    *(void *)(v8 + 112) = *(void *)(v9 + 112);
    *(void *)(v8 + 120) = v14;
    uint64_t v15 = *(void *)(v9 + 136);
    *(void *)(v8 + 128) = *(void *)(v9 + 128);
    *(void *)(v8 + 136) = v15;
    uint64_t v46 = *(void *)(v9 + 152);
    *(void *)(v8 + 144) = *(void *)(v9 + 144);
    *(void *)(v8 + 152) = v46;
    uint64_t v16 = *(void *)(v9 + 160);
    uint64_t v17 = *(void *)(v9 + 168);
    *(void *)(v8 + 160) = v16;
    *(void *)(v8 + 168) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 144) = v25;
    *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
    long long v26 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v26;
    long long v27 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v27;
    long long v28 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v28;
    long long v29 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v29;
  }
  uint64_t v30 = v6[7];
  long long v31 = (void *)(a1 + v30);
  long long v32 = (const void *)(a2 + v30);
  uint64_t v33 = sub_24E474818();
  uint64_t v34 = *(void *)(v33 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  memcpy(v31, v32, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_13:
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v42 = v6[10];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
  *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
  *(void *)(v43 + 24) = *(void *)(v44 + 24);
  *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24E45C5FC(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DADB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = (int *)type metadata accessor for FriendshipRequest();
    *(void *)(a1 + v6[5]) = *(void *)(a2 + v6[5]);
    uint64_t v7 = v6[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (long long *)(a2 + v7);
    uint64_t v10 = *(void *)(a2 + v7 + 8);
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
        *(void *)uint64_t v8 = *(void *)v9;
        *(void *)(v8 + 8) = *((void *)v9 + 1);
        *(void *)(v8 + 16) = *((void *)v9 + 2);
        *(void *)(v8 + 24) = *((void *)v9 + 3);
        *(unsigned char *)(v8 + 32) = *((unsigned char *)v9 + 32);
        *(void *)(v8 + 40) = *((void *)v9 + 5);
        *(void *)(v8 + 48) = *((void *)v9 + 6);
        *(void *)(v8 + 56) = *((void *)v9 + 7);
        *(void *)(v8 + 64) = *((void *)v9 + 8);
        *(void *)(v8 + 72) = *((void *)v9 + 9);
        *(void *)(v8 + 80) = *((void *)v9 + 10);
        *(void *)(v8 + 88) = *((void *)v9 + 11);
        *(void *)(v8 + 96) = *((void *)v9 + 12);
        *(unsigned char *)(v8 + 104) = *((unsigned char *)v9 + 104);
        *(void *)(v8 + 112) = *((void *)v9 + 14);
        *(void *)(v8 + 120) = *((void *)v9 + 15);
        *(void *)(v8 + 128) = *((void *)v9 + 16);
        *(void *)(v8 + 136) = *((void *)v9 + 17);
        *(void *)(v8 + 144) = *((void *)v9 + 18);
        *(void *)(v8 + 152) = *((void *)v9 + 19);
        *(void *)(v8 + 160) = *((void *)v9 + 20);
        *(void *)(v8 + 168) = *((void *)v9 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v11 = *v9;
        long long v12 = v9[2];
        *(_OWORD *)(v8 + 16) = v9[1];
        *(_OWORD *)(v8 + 32) = v12;
        *(_OWORD *)uint64_t v8 = v11;
        long long v13 = v9[3];
        long long v14 = v9[4];
        long long v15 = v9[6];
        *(_OWORD *)(v8 + 80) = v9[5];
        *(_OWORD *)(v8 + 96) = v15;
        *(_OWORD *)(v8 + 48) = v13;
        *(_OWORD *)(v8 + 64) = v14;
        long long v16 = v9[7];
        long long v17 = v9[8];
        long long v18 = v9[10];
        *(_OWORD *)(v8 + 144) = v9[9];
        *(_OWORD *)(v8 + 160) = v18;
        *(_OWORD *)(v8 + 112) = v16;
        *(_OWORD *)(v8 + 128) = v17;
      }
      uint64_t v19 = v6[7];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (const void *)(a2 + v19);
      uint64_t v22 = sub_24E474818();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
LABEL_12:
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v20, v21, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_14:
        *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
        *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
        uint64_t v34 = v6[10];
        uint64_t v35 = a1 + v34;
        uint64_t v36 = a2 + v34;
        *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
        *(void *)(v35 + 8) = *(void *)(v36 + 8);
        *(void *)(v35 + 16) = *(void *)(v36 + 16);
        *(void *)(v35 + 24) = *(void *)(v36 + 24);
        *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v10)
      {
        *(void *)uint64_t v8 = *(void *)v9;
        *(void *)(v8 + 8) = *((void *)v9 + 1);
        *(void *)(v8 + 16) = *((void *)v9 + 2);
        *(void *)(v8 + 24) = *((void *)v9 + 3);
        *(unsigned char *)(v8 + 32) = *((unsigned char *)v9 + 32);
        *(void *)(v8 + 40) = *((void *)v9 + 5);
        *(void *)(v8 + 48) = *((void *)v9 + 6);
        *(void *)(v8 + 56) = *((void *)v9 + 7);
        *(void *)(v8 + 64) = *((void *)v9 + 8);
        *(void *)(v8 + 72) = *((void *)v9 + 9);
        *(void *)(v8 + 80) = *((void *)v9 + 10);
        *(void *)(v8 + 88) = *((void *)v9 + 11);
        *(void *)(v8 + 96) = *((void *)v9 + 12);
        *(unsigned char *)(v8 + 104) = *((unsigned char *)v9 + 104);
        *(void *)(v8 + 112) = *((void *)v9 + 14);
        *(void *)(v8 + 120) = *((void *)v9 + 15);
        *(void *)(v8 + 128) = *((void *)v9 + 16);
        *(void *)(v8 + 136) = *((void *)v9 + 17);
        *(void *)(v8 + 144) = *((void *)v9 + 18);
        *(void *)(v8 + 152) = *((void *)v9 + 19);
        *(void *)(v8 + 160) = *((void *)v9 + 20);
        *(void *)(v8 + 168) = *((void *)v9 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v24 = *v9;
        long long v25 = v9[2];
        *(_OWORD *)(v8 + 16) = v9[1];
        *(_OWORD *)(v8 + 32) = v25;
        *(_OWORD *)uint64_t v8 = v24;
        long long v26 = v9[3];
        long long v27 = v9[4];
        long long v28 = v9[6];
        *(_OWORD *)(v8 + 80) = v9[5];
        *(_OWORD *)(v8 + 96) = v28;
        *(_OWORD *)(v8 + 48) = v26;
        *(_OWORD *)(v8 + 64) = v27;
        long long v29 = v9[7];
        long long v30 = v9[8];
        long long v31 = v9[10];
        *(_OWORD *)(v8 + 144) = v9[9];
        *(_OWORD *)(v8 + 160) = v31;
        *(_OWORD *)(v8 + 112) = v29;
        *(_OWORD *)(v8 + 128) = v30;
      }
      uint64_t v32 = v6[7];
      uint64_t v20 = (void *)(a1 + v32);
      uint64_t v21 = (const void *)(a2 + v32);
      uint64_t v22 = sub_24E474818();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
        goto LABEL_12;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    goto LABEL_14;
  }
  return a1;
}

uint64_t sub_24E45C5FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FriendshipRequestStreamChange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FriendshipRequestStreamChange()
{
  uint64_t result = qword_2698DC760;
  if (!qword_2698DC760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithTake for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for FriendshipRequest();
  *(void *)(a1 + v6[5]) = *(void *)(a2 + v6[5]);
  uint64_t v7 = v6[6];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  long long v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  long long v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  long long v13 = v9[10];
  long long v14 = v9[8];
  v8[9] = v9[9];
  v8[10] = v13;
  long long v15 = v9[7];
  v8[6] = v9[6];
  v8[7] = v15;
  v8[8] = v14;
  uint64_t v16 = v6[7];
  long long v17 = (void *)(a1 + v16);
  long long v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_24E474818();
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  if (EnumCaseMultiPayload != 1)
  {
    if (v21) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    goto LABEL_6;
  }
  if (!v21) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_6:
  *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v23 = v6[10];
  long long v24 = (_OWORD *)(a1 + v23);
  long long v25 = (_OWORD *)(a2 + v23);
  long long v26 = v25[1];
  *long long v24 = *v25;
  v24[1] = v26;
  *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24E45C5FC(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DADB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = (int *)type metadata accessor for FriendshipRequest();
    *(void *)(a1 + v6[5]) = *(void *)(a2 + v6[5]);
    uint64_t v7 = v6[6];
    uint64_t v8 = (_OWORD *)(a1 + v7);
    uint64_t v9 = (_OWORD *)(a2 + v7);
    long long v10 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v10;
    long long v11 = v9[5];
    v8[4] = v9[4];
    v8[5] = v11;
    long long v12 = v9[3];
    v8[2] = v9[2];
    v8[3] = v12;
    long long v13 = v9[10];
    long long v14 = v9[8];
    v8[9] = v9[9];
    v8[10] = v13;
    long long v15 = v9[7];
    v8[6] = v9[6];
    v8[7] = v15;
    v8[8] = v14;
    uint64_t v16 = v6[7];
    long long v17 = (void *)(a1 + v16);
    long long v18 = (const void *)(a2 + v16);
    uint64_t v19 = sub_24E474818();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (v21)
      {
LABEL_4:
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_7:
        *(unsigned char *)(a1 + v6[8]) = *(unsigned char *)(a2 + v6[8]);
        *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
        uint64_t v23 = v6[10];
        long long v24 = (_OWORD *)(a1 + v23);
        long long v25 = (_OWORD *)(a2 + v23);
        long long v26 = v25[1];
        *long long v24 = *v25;
        v24[1] = v26;
        *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v21)
    {
      goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_24E45CBEC()
{
  uint64_t result = type metadata accessor for FriendshipRequest();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FriendshipAction.rawValue.getter()
{
  uint64_t result = 6579297;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65766F6D6572;
      break;
    case 2:
      uint64_t result = 0x796669646F6DLL;
      break;
    case 3:
      uint64_t result = 0x726566666FLL;
      break;
    case 4:
      uint64_t result = 0x657469766E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FriendshipAction.description.getter()
{
  uint64_t result = 1684300078;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65766F6D65722ELL;
      break;
    case 2:
      uint64_t result = 0x796669646F6D2ELL;
      break;
    case 3:
      uint64_t result = 0x726566666F2ELL;
      break;
    case 4:
      uint64_t result = 0x657469766E692ELL;
      break;
    default:
      return result;
  }
  return result;
}

FindMyLocate::FriendshipAction_optional __swiftcall FriendshipAction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24E474FB8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_24E45CE04(unsigned __int8 *a1, char *a2)
{
  return sub_24E385EFC(*a1, *a2);
}

uint64_t sub_24E45CE10()
{
  return sub_24E475268();
}

uint64_t sub_24E45CEF0()
{
  sub_24E474AD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E45CFB8()
{
  return sub_24E475268();
}

FindMyLocate::FriendshipAction_optional sub_24E45D094(Swift::String *a1)
{
  return FriendshipAction.init(rawValue:)(*a1);
}

void sub_24E45D0A0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 6579297;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x65766F6D6572;
      goto LABEL_3;
    case 2:
      *a1 = 0x796669646F6DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x726566666FLL;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x657469766E69;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_24E45D144()
{
  return sub_24E474B78();
}

uint64_t sub_24E45D1A4()
{
  return sub_24E474B48();
}

uint64_t sub_24E45D1F4()
{
  uint64_t result = 1684300078;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65766F6D65722ELL;
      break;
    case 2:
      uint64_t result = 0x796669646F6D2ELL;
      break;
    case 3:
      uint64_t result = 0x726566666F2ELL;
      break;
    case 4:
      uint64_t result = 0x657469766E692ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E45D294(uint64_t a1)
{
  unint64_t v2 = sub_24E45DC48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E45D2D0(uint64_t a1)
{
  unint64_t v2 = sub_24E45DC48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E45D30C()
{
  uint64_t v1 = 0x6465766F6D6572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465696669646F6DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465646461;
  }
}

uint64_t sub_24E45D364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E460B00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E45D38C(uint64_t a1)
{
  unint64_t v2 = sub_24E45DAE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E45D3C8(uint64_t a1)
{
  unint64_t v2 = sub_24E45DAE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E45D404(uint64_t a1)
{
  unint64_t v2 = sub_24E45DBA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E45D440(uint64_t a1)
{
  unint64_t v2 = sub_24E45DBA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E45D47C(uint64_t a1)
{
  unint64_t v2 = sub_24E45DBF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E45D4B8(uint64_t a1)
{
  unint64_t v2 = sub_24E45DBF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FriendStreamChange.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC770);
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  long long v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC778);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC780);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Friend();
  uint64_t v8 = MEMORY[0x270FA5388](v43);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  long long v13 = (char *)&v33 - v12;
  MEMORY[0x270FA5388](v11);
  long long v15 = (char *)&v33 - v14;
  uint64_t v16 = type metadata accessor for FriendStreamChange();
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC788);
  uint64_t v44 = *(void *)(v19 - 8);
  uint64_t v45 = v19;
  MEMORY[0x270FA5388](v19);
  int v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E45DAE8();
  sub_24E4752A8();
  sub_24E45DB3C(v42, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24E45E4DC((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Friend);
    char v46 = 0;
    sub_24E45DC48();
    long long v27 = v33;
    uint64_t v24 = v45;
    sub_24E475088();
    sub_24E45E498(&qword_2698DC7A0);
    uint64_t v28 = v35;
    sub_24E475118();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
    uint64_t v26 = (uint64_t)v15;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24E45E4DC((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Friend);
    char v47 = 1;
    sub_24E45DBF4();
    uint64_t v23 = v36;
    uint64_t v24 = v45;
    sub_24E475088();
    sub_24E45E498(&qword_2698DC7A0);
    uint64_t v25 = v38;
    sub_24E475118();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v25);
    uint64_t v26 = (uint64_t)v13;
LABEL_5:
    sub_24E3A32E8(v26, (uint64_t (*)(void))type metadata accessor for Friend);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v24);
  }
  sub_24E45E4DC((uint64_t)v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Friend);
  char v48 = 2;
  sub_24E45DBA0();
  long long v30 = v39;
  uint64_t v31 = v45;
  sub_24E475088();
  sub_24E45E498(&qword_2698DC7A0);
  uint64_t v32 = v41;
  sub_24E475118();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v32);
  sub_24E3A32E8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Friend);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v31);
}

unint64_t sub_24E45DAE8()
{
  unint64_t result = qword_2698DC790;
  if (!qword_2698DC790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC790);
  }
  return result;
}

uint64_t sub_24E45DB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FriendStreamChange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E45DBA0()
{
  unint64_t result = qword_2698DC798;
  if (!qword_2698DC798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC798);
  }
  return result;
}

unint64_t sub_24E45DBF4()
{
  unint64_t result = qword_2698DC7A8;
  if (!qword_2698DC7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7A8);
  }
  return result;
}

unint64_t sub_24E45DC48()
{
  unint64_t result = qword_2698DC7B0;
  if (!qword_2698DC7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7B0);
  }
  return result;
}

uint64_t FriendStreamChange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC7B8);
  uint64_t v58 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v64 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC7C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v63 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC7C8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC7D0);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FriendStreamChange();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  long long v18 = (char *)&v49 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  int v21 = (char *)&v49 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_24E45DAE8();
  uint64_t v25 = v66;
  sub_24E475288();
  if (v25) {
    goto LABEL_9;
  }
  uint64_t v50 = v18;
  uint64_t v51 = v15;
  uint64_t v66 = v21;
  uint64_t v26 = v61;
  uint64_t v27 = v62;
  uint64_t v28 = v63;
  long long v29 = v64;
  uint64_t v52 = v23;
  uint64_t v30 = sub_24E475078();
  uint64_t v31 = v30;
  uint64_t v32 = v27;
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v38 = sub_24E474EC8();
    swift_allocError();
    long long v39 = v11;
    uint64_t v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    *uint64_t v41 = v12;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v41, *MEMORY[0x263F8DCB0], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v27);
LABEL_9:
    uint64_t v36 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  if (*(unsigned char *)(v30 + 32))
  {
    if (*(unsigned char *)(v30 + 32) == 1)
    {
      char v68 = 1;
      sub_24E45DBF4();
      uint64_t v33 = v28;
      sub_24E474FC8();
      uint64_t v66 = (char *)v12;
      type metadata accessor for Friend();
      sub_24E45E498(&qword_26B1B86A8);
      uint64_t v34 = (uint64_t)v50;
      uint64_t v35 = v56;
      sub_24E475068();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v32);
      uint64_t v36 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v34;
    }
    else
    {
      char v69 = 2;
      sub_24E45DBA0();
      sub_24E474FC8();
      uint64_t v66 = (char *)v31;
      type metadata accessor for Friend();
      sub_24E45E498(&qword_26B1B86A8);
      uint64_t v45 = (uint64_t)v51;
      uint64_t v46 = v55;
      sub_24E475068();
      uint64_t v47 = v60;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v45;
      uint64_t v36 = (uint64_t)v65;
    }
  }
  else
  {
    char v67 = 0;
    sub_24E45DC48();
    sub_24E474FC8();
    type metadata accessor for Friend();
    sub_24E45E498(&qword_26B1B86A8);
    uint64_t v42 = v53;
    sub_24E475068();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v27);
    uint64_t v36 = (uint64_t)v65;
    uint64_t v43 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = v43;
  }
  uint64_t v48 = (uint64_t)v52;
  sub_24E45E4DC(v37, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FriendStreamChange);
  sub_24E45E4DC(v48, v59, (uint64_t (*)(void))type metadata accessor for FriendStreamChange);
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t sub_24E45E498(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Friend();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E45E4DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24E45E548()
{
  unint64_t result = qword_2698DC7D8;
  if (!qword_2698DC7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7D8);
  }
  return result;
}

uint64_t sub_24E45E59C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FriendStreamChange.init(from:)(a1, a2);
}

uint64_t sub_24E45E5B4(void *a1)
{
  return FriendStreamChange.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FriendshipAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E45E698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FriendStreamChange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v22;
      uint64_t v23 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v23;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v24 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v24;
      *(void *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      uint64_t v25 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v25;
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      uint64_t v26 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v26;
      uint64_t v27 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v27;
      uint64_t v115 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v115;
      uint64_t v28 = a2[21];
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v28;
      *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
      *(unsigned char *)(a1 + 180) = *((unsigned char *)a2 + 180);
      uint64_t v29 = type metadata accessor for Friend();
      uint64_t v30 = *(int *)(v29 + 40);
      __dsta = (void *)(a1 + v30);
      uint64_t v123 = (int *)v29;
      uint64_t v31 = (char *)a2 + v30;
      uint64_t v32 = sub_24E474818();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34(v31, 1, v32))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(__dsta, v31, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 16))(__dsta, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(__dsta, 0, 1, v32);
      }
      uint64_t v56 = v33;
      uint64_t v57 = v123;
      *(unsigned char *)(a1 + v123[11]) = *((unsigned char *)a2 + v123[11]);
      uint64_t v58 = v123[12];
      uint64_t v59 = (void *)(a1 + v58);
      uint64_t v60 = (char *)a2 + v58;
      if (v34((char *)a2 + v58, 1, v32))
      {
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v56 + 16))(v59, v60, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v59, 0, 1, v32);
      }
      uint64_t v72 = v123[13];
      uint64_t v73 = a1 + v72;
      uint64_t v74 = (uint64_t)a2 + v72;
      uint64_t v75 = *(void *)(v74 + 8);
      if (v75)
      {
        *(void *)uint64_t v73 = *(void *)v74;
        *(void *)(v73 + 8) = v75;
        uint64_t v76 = *(void *)(v74 + 24);
        *(void *)(v73 + 16) = *(void *)(v74 + 16);
        *(void *)(v73 + 24) = v76;
        *(unsigned char *)(v73 + 32) = *(unsigned char *)(v74 + 32);
        uint64_t v77 = *(void *)(v74 + 48);
        *(void *)(v73 + 40) = *(void *)(v74 + 40);
        *(void *)(v73 + 48) = v77;
        *(void *)(v73 + 56) = *(void *)(v74 + 56);
        *(_OWORD *)(v73 + 64) = *(_OWORD *)(v74 + 64);
        uint64_t v78 = *(void *)(v74 + 88);
        *(void *)(v73 + 80) = *(void *)(v74 + 80);
        *(void *)(v73 + 88) = v78;
        *(void *)(v73 + 96) = *(void *)(v74 + 96);
        *(unsigned char *)(v73 + 104) = *(unsigned char *)(v74 + 104);
        uint64_t v79 = *(void *)(v74 + 120);
        *(void *)(v73 + 112) = *(void *)(v74 + 112);
        *(void *)(v73 + 120) = v79;
        uint64_t v80 = *(void *)(v74 + 136);
        *(void *)(v73 + 128) = *(void *)(v74 + 128);
        *(void *)(v73 + 136) = v80;
        uint64_t v81 = *(void *)(v74 + 152);
        *(void *)(v73 + 144) = *(void *)(v74 + 144);
        *(void *)(v73 + 152) = v81;
        uint64_t v117 = *(void *)(v74 + 168);
        *(void *)(v73 + 160) = *(void *)(v74 + 160);
        *(void *)(v73 + 168) = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v57 = v123;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v87 = *(_OWORD *)(v74 + 144);
        *(_OWORD *)(v73 + 128) = *(_OWORD *)(v74 + 128);
        *(_OWORD *)(v73 + 144) = v87;
        *(_OWORD *)(v73 + 160) = *(_OWORD *)(v74 + 160);
        long long v88 = *(_OWORD *)(v74 + 80);
        *(_OWORD *)(v73 + 64) = *(_OWORD *)(v74 + 64);
        *(_OWORD *)(v73 + 80) = v88;
        long long v89 = *(_OWORD *)(v74 + 112);
        *(_OWORD *)(v73 + 96) = *(_OWORD *)(v74 + 96);
        *(_OWORD *)(v73 + 112) = v89;
        long long v90 = *(_OWORD *)(v74 + 16);
        *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
        *(_OWORD *)(v73 + 16) = v90;
        long long v91 = *(_OWORD *)(v74 + 48);
        *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
        *(_OWORD *)(v73 + 48) = v91;
      }
      *(unsigned char *)(a1 + v57[14]) = *((unsigned char *)a2 + v57[14]);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v9 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      *(void *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      uint64_t v10 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v10;
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      uint64_t v11 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v11;
      uint64_t v12 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v12;
      uint64_t v114 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v114;
      uint64_t v13 = a2[21];
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v13;
      *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
      *(unsigned char *)(a1 + 180) = *((unsigned char *)a2 + 180);
      uint64_t v14 = type metadata accessor for Friend();
      uint64_t v15 = *(int *)(v14 + 40);
      __dst = (void *)(a1 + v15);
      uint64_t v122 = (int *)v14;
      uint64_t v16 = (char *)a2 + v15;
      uint64_t v17 = sub_24E474818();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      uint64_t v50 = v18;
      uint64_t v51 = v122;
      *(unsigned char *)(a1 + v122[11]) = *((unsigned char *)a2 + v122[11]);
      uint64_t v52 = v122[12];
      uint64_t v53 = (void *)(a1 + v52);
      uint64_t v54 = (char *)a2 + v52;
      if (v19((char *)a2 + v52, 1, v17))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v53, v54, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v17);
      }
      uint64_t v62 = v122[13];
      uint64_t v63 = a1 + v62;
      uint64_t v64 = (uint64_t)a2 + v62;
      uint64_t v65 = *(void *)(v64 + 8);
      if (v65)
      {
        *(void *)uint64_t v63 = *(void *)v64;
        *(void *)(v63 + 8) = v65;
        uint64_t v66 = *(void *)(v64 + 24);
        *(void *)(v63 + 16) = *(void *)(v64 + 16);
        *(void *)(v63 + 24) = v66;
        *(unsigned char *)(v63 + 32) = *(unsigned char *)(v64 + 32);
        uint64_t v67 = *(void *)(v64 + 48);
        *(void *)(v63 + 40) = *(void *)(v64 + 40);
        *(void *)(v63 + 48) = v67;
        *(void *)(v63 + 56) = *(void *)(v64 + 56);
        *(_OWORD *)(v63 + 64) = *(_OWORD *)(v64 + 64);
        uint64_t v68 = *(void *)(v64 + 88);
        *(void *)(v63 + 80) = *(void *)(v64 + 80);
        *(void *)(v63 + 88) = v68;
        *(void *)(v63 + 96) = *(void *)(v64 + 96);
        *(unsigned char *)(v63 + 104) = *(unsigned char *)(v64 + 104);
        uint64_t v69 = *(void *)(v64 + 120);
        *(void *)(v63 + 112) = *(void *)(v64 + 112);
        *(void *)(v63 + 120) = v69;
        uint64_t v70 = *(void *)(v64 + 136);
        *(void *)(v63 + 128) = *(void *)(v64 + 128);
        *(void *)(v63 + 136) = v70;
        uint64_t v71 = *(void *)(v64 + 152);
        *(void *)(v63 + 144) = *(void *)(v64 + 144);
        *(void *)(v63 + 152) = v71;
        uint64_t v116 = *(void *)(v64 + 168);
        *(void *)(v63 + 160) = *(void *)(v64 + 160);
        *(void *)(v63 + 168) = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v51 = v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v82 = *(_OWORD *)(v64 + 144);
        *(_OWORD *)(v63 + 128) = *(_OWORD *)(v64 + 128);
        *(_OWORD *)(v63 + 144) = v82;
        *(_OWORD *)(v63 + 160) = *(_OWORD *)(v64 + 160);
        long long v83 = *(_OWORD *)(v64 + 80);
        *(_OWORD *)(v63 + 64) = *(_OWORD *)(v64 + 64);
        *(_OWORD *)(v63 + 80) = v83;
        long long v84 = *(_OWORD *)(v64 + 112);
        *(_OWORD *)(v63 + 96) = *(_OWORD *)(v64 + 96);
        *(_OWORD *)(v63 + 112) = v84;
        long long v85 = *(_OWORD *)(v64 + 16);
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
        *(_OWORD *)(v63 + 16) = v85;
        long long v86 = *(_OWORD *)(v64 + 48);
        *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
        *(_OWORD *)(v63 + 48) = v86;
      }
      *(unsigned char *)(a1 + v51[14]) = *((unsigned char *)a2 + v51[14]);
    }
    else
    {
      uint64_t v36 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v36;
      uint64_t v37 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v37;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v38 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v38;
      *(void *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      uint64_t v39 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v39;
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      uint64_t v40 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v40;
      uint64_t v41 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v41;
      __dstb = (void *)a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = __dstb;
      uint64_t v42 = a2[21];
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v42;
      *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
      *(unsigned char *)(a1 + 180) = *((unsigned char *)a2 + 180);
      uint64_t v124 = type metadata accessor for Friend();
      uint64_t v43 = *(int *)(v124 + 40);
      uint64_t v113 = (void *)(a1 + v43);
      uint64_t v44 = (char *)a2 + v43;
      uint64_t v45 = sub_24E474818();
      uint64_t v112 = *(void *)(v45 - 8);
      uint64_t v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46(v44, 1, v45))
      {
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v113, v44, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = (int *)v124;
        uint64_t v49 = v112;
      }
      else
      {
        uint64_t v49 = v112;
        (*(void (**)(void *, char *, uint64_t))(v112 + 16))(v113, v44, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v113, 0, 1, v45);
        uint64_t v48 = (int *)v124;
      }
      *(unsigned char *)(a1 + v48[11]) = *((unsigned char *)a2 + v48[11]);
      uint64_t v92 = v48[12];
      char v93 = (void *)(a1 + v92);
      char v94 = (char *)a2 + v92;
      if (v46((char *)a2 + v92, 1, v45))
      {
        uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v93, v94, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v93, 0, 1, v45);
      }
      uint64_t v96 = v48[13];
      uint64_t v97 = a1 + v96;
      uint64_t v98 = (uint64_t)a2 + v96;
      uint64_t v99 = *(void *)(v98 + 8);
      if (v99)
      {
        *(void *)uint64_t v97 = *(void *)v98;
        *(void *)(v97 + 8) = v99;
        uint64_t v100 = *(void *)(v98 + 24);
        *(void *)(v97 + 16) = *(void *)(v98 + 16);
        *(void *)(v97 + 24) = v100;
        *(unsigned char *)(v97 + 32) = *(unsigned char *)(v98 + 32);
        uint64_t v101 = *(void *)(v98 + 48);
        *(void *)(v97 + 40) = *(void *)(v98 + 40);
        *(void *)(v97 + 48) = v101;
        *(void *)(v97 + 56) = *(void *)(v98 + 56);
        *(_OWORD *)(v97 + 64) = *(_OWORD *)(v98 + 64);
        uint64_t v102 = *(void *)(v98 + 88);
        *(void *)(v97 + 80) = *(void *)(v98 + 80);
        *(void *)(v97 + 88) = v102;
        *(void *)(v97 + 96) = *(void *)(v98 + 96);
        *(unsigned char *)(v97 + 104) = *(unsigned char *)(v98 + 104);
        uint64_t v103 = *(void *)(v98 + 120);
        *(void *)(v97 + 112) = *(void *)(v98 + 112);
        *(void *)(v97 + 120) = v103;
        uint64_t v104 = *(void *)(v98 + 136);
        *(void *)(v97 + 128) = *(void *)(v98 + 128);
        *(void *)(v97 + 136) = v104;
        uint64_t v105 = *(void *)(v98 + 152);
        *(void *)(v97 + 144) = *(void *)(v98 + 144);
        *(void *)(v97 + 152) = v105;
        uint64_t v118 = *(void *)(v98 + 168);
        *(void *)(v97 + 160) = *(void *)(v98 + 160);
        *(void *)(v97 + 168) = v118;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v48 = (int *)v124;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v106 = *(_OWORD *)(v98 + 144);
        *(_OWORD *)(v97 + 128) = *(_OWORD *)(v98 + 128);
        *(_OWORD *)(v97 + 144) = v106;
        *(_OWORD *)(v97 + 160) = *(_OWORD *)(v98 + 160);
        long long v107 = *(_OWORD *)(v98 + 80);
        *(_OWORD *)(v97 + 64) = *(_OWORD *)(v98 + 64);
        *(_OWORD *)(v97 + 80) = v107;
        long long v108 = *(_OWORD *)(v98 + 112);
        *(_OWORD *)(v97 + 96) = *(_OWORD *)(v98 + 96);
        *(_OWORD *)(v97 + 112) = v108;
        long long v109 = *(_OWORD *)(v98 + 16);
        *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
        *(_OWORD *)(v97 + 16) = v109;
        long long v110 = *(_OWORD *)(v98 + 48);
        *(_OWORD *)(v97 + 32) = *(_OWORD *)(v98 + 32);
        *(_OWORD *)(v97 + 48) = v110;
      }
      *(unsigned char *)(a1 + v48[14]) = *((unsigned char *)a2 + v48[14]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FriendStreamChange(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v3 = (int *)type metadata accessor for Friend();
    uint64_t v4 = a1 + v3[10];
    uint64_t v5 = sub_24E474818();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v8 = a1 + v3[12];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t result = *(void *)(a1 + v3[13] + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    uint64_t v9 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v9;
    uint64_t v10 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v10;
    uint64_t v52 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v52;
    uint64_t v11 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v11;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
    uint64_t v56 = type metadata accessor for Friend();
    uint64_t v12 = *(int *)(v56 + 40);
    __dst = (void *)(a1 + v12);
    uint64_t v13 = (const void *)(a2 + v12);
    uint64_t v14 = sub_24E474818();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v29 = v15;
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v18;
    uint64_t v19 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v19;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v20 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v20;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    uint64_t v21 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    uint64_t v22 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v22;
    uint64_t v23 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v23;
    __dsta = *(void **)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = __dsta;
    uint64_t v24 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v24;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
    uint64_t v56 = type metadata accessor for Friend();
    uint64_t v25 = *(int *)(v56 + 40);
    uint64_t v51 = (void *)(a1 + v25);
    uint64_t v26 = (const void *)(a2 + v25);
    uint64_t v14 = sub_24E474818();
    uint64_t v50 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v26, 1, v14))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(v51, v26, *(void *)(*(void *)(v27 - 8) + 64));
      uint64_t v28 = (int *)v56;
      uint64_t v29 = v50;
      goto LABEL_10;
    }
    uint64_t v29 = v50;
    (*(void (**)(void *, const void *, uint64_t))(v50 + 16))(v51, v26, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v14);
  }
  uint64_t v28 = (int *)v56;
LABEL_10:
  *(unsigned char *)(a1 + v28[11]) = *(unsigned char *)(a2 + v28[11]);
  uint64_t v30 = v28[12];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  if (v16((const void *)(a2 + v30), 1, v14))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v31, v32, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v14);
  }
  uint64_t v34 = v28[13];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(v36 + 8);
  if (v37)
  {
    *(void *)uint64_t v35 = *(void *)v36;
    *(void *)(v35 + 8) = v37;
    uint64_t v38 = *(void *)(v36 + 24);
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    *(void *)(v35 + 24) = v38;
    *(unsigned char *)(v35 + 32) = *(unsigned char *)(v36 + 32);
    uint64_t v39 = *(void *)(v36 + 48);
    *(void *)(v35 + 40) = *(void *)(v36 + 40);
    *(void *)(v35 + 48) = v39;
    *(void *)(v35 + 56) = *(void *)(v36 + 56);
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
    uint64_t v40 = *(void *)(v36 + 88);
    *(void *)(v35 + 80) = *(void *)(v36 + 80);
    *(void *)(v35 + 88) = v40;
    *(void *)(v35 + 96) = *(void *)(v36 + 96);
    *(unsigned char *)(v35 + 104) = *(unsigned char *)(v36 + 104);
    uint64_t v41 = *(void *)(v36 + 120);
    *(void *)(v35 + 112) = *(void *)(v36 + 112);
    *(void *)(v35 + 120) = v41;
    uint64_t v42 = *(void *)(v36 + 136);
    *(void *)(v35 + 128) = *(void *)(v36 + 128);
    *(void *)(v35 + 136) = v42;
    uint64_t v43 = *(void *)(v36 + 152);
    *(void *)(v35 + 144) = *(void *)(v36 + 144);
    *(void *)(v35 + 152) = v43;
    uint64_t v53 = *(void *)(v36 + 168);
    *(void *)(v35 + 160) = *(void *)(v36 + 160);
    *(void *)(v35 + 168) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = (int *)v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *(_OWORD *)(v36 + 144);
    *(_OWORD *)(v35 + 128) = *(_OWORD *)(v36 + 128);
    *(_OWORD *)(v35 + 144) = v44;
    *(_OWORD *)(v35 + 160) = *(_OWORD *)(v36 + 160);
    long long v45 = *(_OWORD *)(v36 + 80);
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
    *(_OWORD *)(v35 + 80) = v45;
    long long v46 = *(_OWORD *)(v36 + 112);
    *(_OWORD *)(v35 + 96) = *(_OWORD *)(v36 + 96);
    *(_OWORD *)(v35 + 112) = v46;
    long long v47 = *(_OWORD *)(v36 + 16);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(_OWORD *)(v35 + 16) = v47;
    long long v48 = *(_OWORD *)(v36 + 48);
    *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
    *(_OWORD *)(v35 + 48) = v48;
  }
  *(unsigned char *)(a1 + v28[14]) = *(unsigned char *)(a2 + v28[14]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24E3A32E8(a1, (uint64_t (*)(void))type metadata accessor for FriendStreamChange);
    swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
    *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
    *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
    *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
    uint64_t v29 = (int *)type metadata accessor for Friend();
    uint64_t v4 = v29[10];
    __dst = (void *)(a1 + v4);
    uint64_t v5 = (const void *)(a2 + v4);
    uint64_t v6 = sub_24E474818();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8(v5, 1, v6))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(__dst, v5, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v5, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    uint64_t v10 = v7;
    uint64_t v11 = v29;
    *(unsigned char *)(a1 + v29[11]) = *(unsigned char *)(a2 + v29[11]);
    uint64_t v12 = v29[12];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    if (v8((const void *)(a2 + v12), 1, v6))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v13, v14, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v6);
    }
    uint64_t v16 = v29[13];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (long long *)(a2 + v16);
    if (*((void *)v18 + 1))
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *(void *)(v17 + 8) = *((void *)v18 + 1);
      *(void *)(v17 + 16) = *((void *)v18 + 2);
      *(void *)(v17 + 24) = *((void *)v18 + 3);
      *(unsigned char *)(v17 + 32) = *((unsigned char *)v18 + 32);
      *(void *)(v17 + 40) = *((void *)v18 + 5);
      *(void *)(v17 + 48) = *((void *)v18 + 6);
      *(void *)(v17 + 56) = *((void *)v18 + 7);
      *(void *)(v17 + 64) = *((void *)v18 + 8);
      *(void *)(v17 + 72) = *((void *)v18 + 9);
      *(void *)(v17 + 80) = *((void *)v18 + 10);
      *(void *)(v17 + 88) = *((void *)v18 + 11);
      *(void *)(v17 + 96) = *((void *)v18 + 12);
      *(unsigned char *)(v17 + 104) = *((unsigned char *)v18 + 104);
      *(void *)(v17 + 112) = *((void *)v18 + 14);
      *(void *)(v17 + 120) = *((void *)v18 + 15);
      *(void *)(v17 + 128) = *((void *)v18 + 16);
      *(void *)(v17 + 136) = *((void *)v18 + 17);
      *(void *)(v17 + 144) = *((void *)v18 + 18);
      *(void *)(v17 + 152) = *((void *)v18 + 19);
      *(void *)(v17 + 160) = *((void *)v18 + 20);
      *(void *)(v17 + 168) = *((void *)v18 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v19 = *v18;
      long long v20 = v18[2];
      *(_OWORD *)(v17 + 16) = v18[1];
      *(_OWORD *)(v17 + 32) = v20;
      *(_OWORD *)uint64_t v17 = v19;
      long long v21 = v18[3];
      long long v22 = v18[4];
      long long v23 = v18[6];
      *(_OWORD *)(v17 + 80) = v18[5];
      *(_OWORD *)(v17 + 96) = v23;
      *(_OWORD *)(v17 + 48) = v21;
      *(_OWORD *)(v17 + 64) = v22;
      long long v24 = v18[7];
      long long v25 = v18[8];
      long long v26 = v18[10];
      *(_OWORD *)(v17 + 144) = v18[9];
      *(_OWORD *)(v17 + 160) = v26;
      *(_OWORD *)(v17 + 112) = v24;
      *(_OWORD *)(v17 + 128) = v25;
    }
    *(unsigned char *)(a1 + v11[14]) = *(unsigned char *)(a2 + v11[14]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  long long v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  uint64_t v9 = (int *)type metadata accessor for Friend();
  uint64_t v10 = v9[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_24E474818();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(unsigned char *)(a1 + v9[11]) = *(unsigned char *)(a2 + v9[11]);
  uint64_t v17 = v9[12];
  uint64_t v18 = (void *)(a1 + v17);
  long long v19 = (const void *)(a2 + v17);
  if (v15((const void *)(a2 + v17), 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = v9[13];
  long long v22 = (_OWORD *)(a1 + v21);
  long long v23 = (_OWORD *)(a2 + v21);
  long long v24 = v23[5];
  v22[4] = v23[4];
  v22[5] = v24;
  long long v25 = v23[10];
  long long v26 = v23[8];
  v22[9] = v23[9];
  v22[10] = v25;
  long long v27 = v23[7];
  v22[6] = v23[6];
  v22[7] = v27;
  v22[8] = v26;
  long long v28 = v23[1];
  *long long v22 = *v23;
  v22[1] = v28;
  long long v29 = v23[3];
  uint64_t v22[2] = v23[2];
  v22[3] = v29;
  *(unsigned char *)(a1 + v9[14]) = *(unsigned char *)(a2 + v9[14]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24E3A32E8(a1, (uint64_t (*)(void))type metadata accessor for FriendStreamChange);
    swift_getEnumCaseMultiPayload();
    long long v4 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v4;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    long long v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    long long v6 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v6;
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
    uint64_t v9 = (int *)type metadata accessor for Friend();
    uint64_t v10 = v9[10];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = sub_24E474818();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(unsigned char *)(a1 + v9[11]) = *(unsigned char *)(a2 + v9[11]);
    uint64_t v17 = v9[12];
    uint64_t v18 = (void *)(a1 + v17);
    long long v19 = (const void *)(a2 + v17);
    if (v15((const void *)(a2 + v17), 1, v13))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    uint64_t v21 = v9[13];
    long long v22 = (_OWORD *)(a1 + v21);
    long long v23 = (_OWORD *)(a2 + v21);
    long long v24 = v23[5];
    v22[4] = v23[4];
    v22[5] = v24;
    long long v25 = v23[10];
    long long v26 = v23[8];
    v22[9] = v23[9];
    v22[10] = v25;
    long long v27 = v23[7];
    v22[6] = v23[6];
    v22[7] = v27;
    v22[8] = v26;
    long long v28 = v23[1];
    *long long v22 = *v23;
    v22[1] = v28;
    long long v29 = v23[3];
    uint64_t v22[2] = v23[2];
    v22[3] = v29;
    *(unsigned char *)(a1 + v9[14]) = *(unsigned char *)(a2 + v9[14]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FriendStreamChange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4605B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendStreamChange.CodingKeys()
{
  return &type metadata for FriendStreamChange.CodingKeys;
}

ValueMetadata *type metadata accessor for FriendStreamChange.AddedCodingKeys()
{
  return &type metadata for FriendStreamChange.AddedCodingKeys;
}

ValueMetadata *type metadata accessor for FriendStreamChange.RemovedCodingKeys()
{
  return &type metadata for FriendStreamChange.RemovedCodingKeys;
}

unsigned char *_s12FindMyLocate18FriendStreamChangeO15AddedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E4606A8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendStreamChange.ModifiedCodingKeys()
{
  return &type metadata for FriendStreamChange.ModifiedCodingKeys;
}

unint64_t sub_24E4606E4()
{
  unint64_t result = qword_2698DC7E0;
  if (!qword_2698DC7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7E0);
  }
  return result;
}

unint64_t sub_24E46073C()
{
  unint64_t result = qword_2698DC7E8;
  if (!qword_2698DC7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7E8);
  }
  return result;
}

unint64_t sub_24E460794()
{
  unint64_t result = qword_2698DC7F0;
  if (!qword_2698DC7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7F0);
  }
  return result;
}

unint64_t sub_24E4607EC()
{
  unint64_t result = qword_2698DC7F8;
  if (!qword_2698DC7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC7F8);
  }
  return result;
}

unint64_t sub_24E460844()
{
  unint64_t result = qword_2698DC800;
  if (!qword_2698DC800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC800);
  }
  return result;
}

unint64_t sub_24E46089C()
{
  unint64_t result = qword_2698DC808;
  if (!qword_2698DC808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC808);
  }
  return result;
}

unint64_t sub_24E4608F4()
{
  unint64_t result = qword_2698DC810;
  if (!qword_2698DC810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC810);
  }
  return result;
}

unint64_t sub_24E46094C()
{
  unint64_t result = qword_2698DC818;
  if (!qword_2698DC818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC818);
  }
  return result;
}

unint64_t sub_24E4609A4()
{
  unint64_t result = qword_2698DC820;
  if (!qword_2698DC820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC820);
  }
  return result;
}

unint64_t sub_24E4609FC()
{
  unint64_t result = qword_2698DC828;
  if (!qword_2698DC828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC828);
  }
  return result;
}

unint64_t sub_24E460A54()
{
  unint64_t result = qword_2698DC830;
  if (!qword_2698DC830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC830);
  }
  return result;
}

unint64_t sub_24E460AAC()
{
  unint64_t result = qword_2698DC838;
  if (!qword_2698DC838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC838);
  }
  return result;
}

uint64_t sub_24E460B00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465646461 && a2 == 0xE500000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465696669646F6DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_24E460C50()
{
  unint64_t result = qword_2698DC840;
  if (!qword_2698DC840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC840);
  }
  return result;
}

uint64_t sub_24E460CA4()
{
  if (*v0) {
    return 0x6465766F6D6572;
  }
  else {
    return 0x64657461647075;
  }
}

uint64_t sub_24E460CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4635D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E460D00(uint64_t a1)
{
  unint64_t v2 = sub_24E461458();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E460D3C(uint64_t a1)
{
  unint64_t v2 = sub_24E461458();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E460D78(uint64_t a1)
{
  unint64_t v2 = sub_24E461510();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E460DB4(uint64_t a1)
{
  unint64_t v2 = sub_24E461510();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E460DF0()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_24E460E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4636C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E460E34(uint64_t a1)
{
  unint64_t v2 = sub_24E461564();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E460E70(uint64_t a1)
{
  unint64_t v2 = sub_24E461564();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocationStreamChange.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC848);
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC850);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Location();
  MEMORY[0x270FA5388](v32);
  uint64_t v40 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationStreamChange();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (long long *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC858);
  uint64_t v10 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E461458();
  sub_24E4752A8();
  sub_24E4614AC(v39, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v13 = v9[9];
    long long v62 = v9[8];
    long long v63 = v13;
    long long v64 = v9[10];
    long long v14 = v9[5];
    long long v58 = v9[4];
    long long v59 = v14;
    long long v15 = v9[7];
    long long v60 = v9[6];
    long long v61 = v15;
    long long v16 = v9[1];
    long long v54 = *v9;
    long long v55 = v16;
    long long v17 = v9[3];
    long long v56 = v9[2];
    long long v57 = v17;
    LOBYTE(v43) = 1;
    sub_24E461510();
    uint64_t v18 = v33;
    uint64_t v19 = v65;
    sub_24E475088();
    long long v51 = v62;
    long long v52 = v63;
    long long v53 = v64;
    long long v47 = v58;
    long long v48 = v59;
    long long v49 = v60;
    long long v50 = v61;
    long long v43 = v54;
    long long v44 = v55;
    long long v45 = v56;
    long long v46 = v57;
    sub_24E380588();
    uint64_t v20 = v35;
    sub_24E475118();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v20);
  }
  else
  {
    uint64_t v21 = (long long *)((char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050) + 48));
    long long v22 = v21[9];
    long long v62 = v21[8];
    long long v63 = v22;
    long long v64 = v21[10];
    long long v23 = v21[5];
    long long v58 = v21[4];
    long long v59 = v23;
    long long v24 = v21[7];
    long long v60 = v21[6];
    long long v61 = v24;
    long long v25 = v21[1];
    long long v54 = *v21;
    long long v55 = v25;
    long long v26 = v21[3];
    long long v56 = v21[2];
    long long v57 = v26;
    sub_24E461D60((uint64_t)v9, v40, (uint64_t (*)(void))type metadata accessor for Location);
    LOBYTE(v43) = 0;
    sub_24E461564();
    long long v27 = v36;
    uint64_t v19 = v65;
    sub_24E475088();
    LOBYTE(v43) = 0;
    sub_24E461DC8(&qword_2698DC878);
    uint64_t v28 = v38;
    uint64_t v29 = v41;
    sub_24E475118();
    if (v29)
    {
      sub_24E377FA0((uint64_t)&v54);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v28);
      sub_24E462CBC(v40, (uint64_t (*)(void))type metadata accessor for Location);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
    }
    long long v51 = v62;
    long long v52 = v63;
    long long v53 = v64;
    long long v47 = v58;
    long long v48 = v59;
    long long v49 = v60;
    long long v50 = v61;
    long long v43 = v54;
    long long v44 = v55;
    long long v45 = v56;
    long long v46 = v57;
    char v42 = 1;
    sub_24E380588();
    sub_24E475118();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v28);
    sub_24E462CBC(v40, (uint64_t (*)(void))type metadata accessor for Location);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  return sub_24E377FA0((uint64_t)&v54);
}

unint64_t sub_24E461458()
{
  unint64_t result = qword_2698DC860;
  if (!qword_2698DC860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC860);
  }
  return result;
}

uint64_t sub_24E4614AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationStreamChange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E461510()
{
  unint64_t result = qword_2698DC868;
  if (!qword_2698DC868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC868);
  }
  return result;
}

unint64_t sub_24E461564()
{
  unint64_t result = qword_2698DC870;
  if (!qword_2698DC870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC870);
  }
  return result;
}

uint64_t LocationStreamChange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC880);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  long long v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC888);
  uint64_t v46 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  long long v49 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DC890);
  uint64_t v48 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationStreamChange();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  long long v14 = (char *)&v41 - v13;
  MEMORY[0x270FA5388](v12);
  long long v16 = (char *)&v41 - v15;
  uint64_t v17 = a1[3];
  long long v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24E461458();
  uint64_t v18 = v63;
  sub_24E475288();
  if (!v18)
  {
    uint64_t v41 = v11;
    long long v63 = v14;
    uint64_t v19 = v49;
    uint64_t v20 = v50;
    char v42 = v16;
    uint64_t v21 = sub_24E475078();
    uint64_t v22 = v5;
    long long v23 = v7;
    if (*(void *)(v21 + 16) == 1)
    {
      if (*(unsigned char *)(v21 + 32))
      {
        LOBYTE(v52) = 1;
        sub_24E461510();
        long long v24 = v47;
        sub_24E474FC8();
        sub_24E386370();
        uint64_t v30 = v45;
        sub_24E475068();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v22);
        long long v31 = v61;
        uint64_t v32 = v41;
        v41[8] = v60;
        v32[9] = v31;
        v32[10] = v62;
        long long v33 = v57;
        v32[4] = v56;
        v32[5] = v33;
        long long v34 = v59;
        v32[6] = v58;
        v32[7] = v34;
        long long v35 = v53;
        *uint64_t v32 = v52;
        v32[1] = v35;
        long long v36 = v55;
        v32[2] = v54;
        v32[3] = v36;
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = (uint64_t)v32;
      }
      else
      {
        long long v47 = (char *)v8;
        LOBYTE(v52) = 0;
        sub_24E461564();
        uint64_t v28 = v19;
        uint64_t v29 = v5;
        sub_24E474FC8();
        type metadata accessor for Location();
        LOBYTE(v52) = 0;
        sub_24E461DC8(&qword_26B1B7B70);
        uint64_t v38 = (uint64_t)v63;
        sub_24E475068();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050);
        LOBYTE(v52) = 1;
        sub_24E386370();
        sub_24E475068();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v29);
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = v38;
      }
      uint64_t v40 = (uint64_t)v42;
      sub_24E461D60(v37, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for LocationStreamChange);
      sub_24E461D60(v40, v43, (uint64_t (*)(void))type metadata accessor for LocationStreamChange);
    }
    else
    {
      uint64_t v25 = sub_24E474EC8();
      swift_allocError();
      long long v27 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
      *long long v27 = v8;
      sub_24E474FD8();
      sub_24E474EB8();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v5);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
}

uint64_t sub_24E461D60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E461DC8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Location();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E461E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LocationStreamChange.init(from:)(a1, a2);
}

uint64_t sub_24E461E24(void *a1)
{
  return LocationStreamChange.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for LocationStreamChange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v8 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v8;
      *(void *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      uint64_t v9 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v9;
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      uint64_t v10 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v10;
      uint64_t v11 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v11;
      uint64_t v12 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v12;
      uint64_t v13 = a2[20];
      uint64_t v14 = a2[21];
      *(void *)(a1 + 160) = v13;
      *(void *)(a1 + 168) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      uint64_t v17 = (int *)type metadata accessor for Location();
      uint64_t v18 = v17[5];
      uint64_t v19 = a1 + v18;
      uint64_t v20 = (uint64_t)a2 + v18;
      uint64_t v21 = *(void *)(v20 + 8);
      if (v21 == 1)
      {
        long long v22 = *(_OWORD *)(v20 + 144);
        *(_OWORD *)(v19 + 128) = *(_OWORD *)(v20 + 128);
        *(_OWORD *)(v19 + 144) = v22;
        long long v23 = *(_OWORD *)(v20 + 176);
        *(_OWORD *)(v19 + 160) = *(_OWORD *)(v20 + 160);
        *(_OWORD *)(v19 + 176) = v23;
        long long v24 = *(_OWORD *)(v20 + 80);
        *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
        *(_OWORD *)(v19 + 80) = v24;
        long long v25 = *(_OWORD *)(v20 + 112);
        *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
        *(_OWORD *)(v19 + 112) = v25;
        long long v26 = *(_OWORD *)(v20 + 16);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *(_OWORD *)(v19 + 16) = v26;
        long long v27 = *(_OWORD *)(v20 + 48);
        *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
        *(_OWORD *)(v19 + 48) = v27;
      }
      else
      {
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = v21;
        uint64_t v28 = *(void *)(v20 + 24);
        *(void *)(v19 + 16) = *(void *)(v20 + 16);
        *(void *)(v19 + 24) = v28;
        uint64_t v29 = *(void *)(v20 + 40);
        *(void *)(v19 + 32) = *(void *)(v20 + 32);
        *(void *)(v19 + 40) = v29;
        uint64_t v30 = *(void *)(v20 + 56);
        *(void *)(v19 + 48) = *(void *)(v20 + 48);
        *(void *)(v19 + 56) = v30;
        uint64_t v31 = *(void *)(v20 + 72);
        *(void *)(v19 + 64) = *(void *)(v20 + 64);
        *(void *)(v19 + 72) = v31;
        uint64_t v32 = *(void *)(v20 + 88);
        *(void *)(v19 + 80) = *(void *)(v20 + 80);
        *(void *)(v19 + 88) = v32;
        uint64_t v33 = *(void *)(v20 + 104);
        *(void *)(v19 + 96) = *(void *)(v20 + 96);
        *(void *)(v19 + 104) = v33;
        uint64_t v34 = *(void *)(v20 + 120);
        *(void *)(v19 + 112) = *(void *)(v20 + 112);
        *(void *)(v19 + 120) = v34;
        uint64_t v35 = *(void *)(v20 + 136);
        *(void *)(v19 + 128) = *(void *)(v20 + 128);
        *(void *)(v19 + 136) = v35;
        uint64_t v36 = *(void *)(v20 + 152);
        *(void *)(v19 + 144) = *(void *)(v20 + 144);
        *(void *)(v19 + 152) = v36;
        uint64_t v37 = *(void *)(v20 + 168);
        *(void *)(v19 + 160) = *(void *)(v20 + 160);
        *(void *)(v19 + 168) = v37;
        uint64_t v49 = *(void *)(v20 + 184);
        *(void *)(v19 + 176) = *(void *)(v20 + 176);
        *(void *)(v19 + 184) = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(void *)(a1 + v17[6]) = *(uint64_t *)((char *)a2 + v17[6]);
      *(void *)(a1 + v17[7]) = *(uint64_t *)((char *)a2 + v17[7]);
      *(void *)(a1 + v17[8]) = *(uint64_t *)((char *)a2 + v17[8]);
      *(void *)(a1 + v17[9]) = *(uint64_t *)((char *)a2 + v17[9]);
      *(void *)(a1 + v17[10]) = *(uint64_t *)((char *)a2 + v17[10]);
      *(void *)(a1 + v17[11]) = *(uint64_t *)((char *)a2 + v17[11]);
      *(void *)(a1 + v17[12]) = *(uint64_t *)((char *)a2 + v17[12]);
      *(void *)(a1 + v17[13]) = *(uint64_t *)((char *)a2 + v17[13]);
      *(void *)(a1 + v17[14]) = *(uint64_t *)((char *)a2 + v17[14]);
      *(unsigned char *)(a1 + v17[15]) = *((unsigned char *)a2 + v17[15]);
      *(unsigned char *)(a1 + v17[16]) = *((unsigned char *)a2 + v17[16]);
      swift_bridgeObjectRetain();
      uint64_t v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050) + 48);
      uint64_t v39 = a1 + v38;
      uint64_t v40 = (uint64_t)a2 + v38;
      uint64_t v41 = *(void *)(v40 + 8);
      *(void *)uint64_t v39 = *(void *)v40;
      *(void *)(v39 + 8) = v41;
      uint64_t v42 = *(void *)(v40 + 24);
      *(void *)(v39 + 16) = *(void *)(v40 + 16);
      *(void *)(v39 + 24) = v42;
      *(unsigned char *)(v39 + 32) = *(unsigned char *)(v40 + 32);
      uint64_t v43 = *(void *)(v40 + 48);
      *(void *)(v39 + 40) = *(void *)(v40 + 40);
      *(void *)(v39 + 48) = v43;
      *(void *)(v39 + 56) = *(void *)(v40 + 56);
      *(_OWORD *)(v39 + 64) = *(_OWORD *)(v40 + 64);
      uint64_t v44 = *(void *)(v40 + 88);
      *(void *)(v39 + 80) = *(void *)(v40 + 80);
      *(void *)(v39 + 88) = v44;
      *(void *)(v39 + 96) = *(void *)(v40 + 96);
      *(unsigned char *)(v39 + 104) = *(unsigned char *)(v40 + 104);
      uint64_t v45 = *(void *)(v40 + 120);
      *(void *)(v39 + 112) = *(void *)(v40 + 112);
      *(void *)(v39 + 120) = v45;
      uint64_t v46 = *(void *)(v40 + 136);
      *(void *)(v39 + 128) = *(void *)(v40 + 128);
      *(void *)(v39 + 136) = v46;
      uint64_t v47 = *(void *)(v40 + 152);
      *(void *)(v39 + 144) = *(void *)(v40 + 144);
      *(void *)(v39 + 152) = v47;
      uint64_t v50 = *(void *)(v40 + 168);
      *(void *)(v39 + 160) = *(void *)(v40 + 160);
      *(void *)(v39 + 168) = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LocationStreamChange(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    if (*(void *)(a1 + *(int *)(type metadata accessor for Location() + 20) + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationStreamChange(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    uint64_t v7 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v7;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    uint64_t v8 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v8;
    uint64_t v9 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v9;
    uint64_t v10 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v10;
    uint64_t v11 = *(void *)(a2 + 160);
    uint64_t v12 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v11;
    *(void *)(a1 + 168) = v12;
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    uint64_t v14 = (int *)type metadata accessor for Location();
    uint64_t v15 = v14[5];
    uint64_t v16 = a1 + v15;
    uint64_t v17 = a2 + v15;
    uint64_t v18 = *(void *)(v17 + 8);
    if (v18 == 1)
    {
      long long v19 = *(_OWORD *)(v17 + 144);
      *(_OWORD *)(v16 + 128) = *(_OWORD *)(v17 + 128);
      *(_OWORD *)(v16 + 144) = v19;
      long long v20 = *(_OWORD *)(v17 + 176);
      *(_OWORD *)(v16 + 160) = *(_OWORD *)(v17 + 160);
      *(_OWORD *)(v16 + 176) = v20;
      long long v21 = *(_OWORD *)(v17 + 80);
      *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
      *(_OWORD *)(v16 + 80) = v21;
      long long v22 = *(_OWORD *)(v17 + 112);
      *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
      *(_OWORD *)(v16 + 112) = v22;
      long long v23 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v23;
      long long v24 = *(_OWORD *)(v17 + 48);
      *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v16 + 48) = v24;
    }
    else
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v18;
      uint64_t v25 = *(void *)(v17 + 24);
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      *(void *)(v16 + 24) = v25;
      uint64_t v26 = *(void *)(v17 + 40);
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
      *(void *)(v16 + 40) = v26;
      uint64_t v27 = *(void *)(v17 + 56);
      *(void *)(v16 + 48) = *(void *)(v17 + 48);
      *(void *)(v16 + 56) = v27;
      uint64_t v28 = *(void *)(v17 + 72);
      *(void *)(v16 + 64) = *(void *)(v17 + 64);
      *(void *)(v16 + 72) = v28;
      uint64_t v29 = *(void *)(v17 + 88);
      *(void *)(v16 + 80) = *(void *)(v17 + 80);
      *(void *)(v16 + 88) = v29;
      uint64_t v30 = *(void *)(v17 + 104);
      *(void *)(v16 + 96) = *(void *)(v17 + 96);
      *(void *)(v16 + 104) = v30;
      uint64_t v31 = *(void *)(v17 + 120);
      *(void *)(v16 + 112) = *(void *)(v17 + 112);
      *(void *)(v16 + 120) = v31;
      uint64_t v32 = *(void *)(v17 + 136);
      *(void *)(v16 + 128) = *(void *)(v17 + 128);
      *(void *)(v16 + 136) = v32;
      uint64_t v33 = *(void *)(v17 + 152);
      *(void *)(v16 + 144) = *(void *)(v17 + 144);
      *(void *)(v16 + 152) = v33;
      uint64_t v34 = *(void *)(v17 + 168);
      *(void *)(v16 + 160) = *(void *)(v17 + 160);
      *(void *)(v16 + 168) = v34;
      uint64_t v47 = *(void *)(v17 + 184);
      *(void *)(v16 + 176) = *(void *)(v17 + 176);
      *(void *)(v16 + 184) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + v14[6]) = *(void *)(a2 + v14[6]);
    *(void *)(a1 + v14[7]) = *(void *)(a2 + v14[7]);
    *(void *)(a1 + v14[8]) = *(void *)(a2 + v14[8]);
    *(void *)(a1 + v14[9]) = *(void *)(a2 + v14[9]);
    *(void *)(a1 + v14[10]) = *(void *)(a2 + v14[10]);
    *(void *)(a1 + v14[11]) = *(void *)(a2 + v14[11]);
    *(void *)(a1 + v14[12]) = *(void *)(a2 + v14[12]);
    *(void *)(a1 + v14[13]) = *(void *)(a2 + v14[13]);
    *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
    *(unsigned char *)(a1 + v14[15]) = *(unsigned char *)(a2 + v14[15]);
    *(unsigned char *)(a1 + v14[16]) = *(unsigned char *)(a2 + v14[16]);
    swift_bridgeObjectRetain();
    uint64_t v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050) + 48);
    uint64_t v36 = a1 + v35;
    uint64_t v37 = a2 + v35;
    uint64_t v38 = *(void *)(v37 + 8);
    *(void *)uint64_t v36 = *(void *)v37;
    *(void *)(v36 + 8) = v38;
    uint64_t v39 = *(void *)(v37 + 24);
    *(void *)(v36 + 16) = *(void *)(v37 + 16);
    *(void *)(v36 + 24) = v39;
    *(unsigned char *)(v36 + 32) = *(unsigned char *)(v37 + 32);
    uint64_t v40 = *(void *)(v37 + 48);
    *(void *)(v36 + 40) = *(void *)(v37 + 40);
    *(void *)(v36 + 48) = v40;
    *(void *)(v36 + 56) = *(void *)(v37 + 56);
    *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
    uint64_t v41 = *(void *)(v37 + 88);
    *(void *)(v36 + 80) = *(void *)(v37 + 80);
    *(void *)(v36 + 88) = v41;
    *(void *)(v36 + 96) = *(void *)(v37 + 96);
    *(unsigned char *)(v36 + 104) = *(unsigned char *)(v37 + 104);
    uint64_t v42 = *(void *)(v37 + 120);
    *(void *)(v36 + 112) = *(void *)(v37 + 112);
    *(void *)(v36 + 120) = v42;
    uint64_t v43 = *(void *)(v37 + 136);
    *(void *)(v36 + 128) = *(void *)(v37 + 128);
    *(void *)(v36 + 136) = v43;
    uint64_t v44 = *(void *)(v37 + 152);
    *(void *)(v36 + 144) = *(void *)(v37 + 144);
    *(void *)(v36 + 152) = v44;
    uint64_t v45 = *(void *)(v37 + 168);
    *(void *)(v36 + 160) = *(void *)(v37 + 160);
    *(void *)(v36 + 168) = v45;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for LocationStreamChange(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24E462CBC(a1, (uint64_t (*)(void))type metadata accessor for LocationStreamChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
    }
    else
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = (int *)type metadata accessor for Location();
      uint64_t v6 = v5[5];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = (long long *)(a2 + v6);
      if (*((void *)v8 + 1) == 1)
      {
        long long v9 = *v8;
        long long v10 = v8[1];
        long long v11 = v8[3];
        *(_OWORD *)(v7 + 32) = v8[2];
        *(_OWORD *)(v7 + 48) = v11;
        *(_OWORD *)uint64_t v7 = v9;
        *(_OWORD *)(v7 + 16) = v10;
        long long v12 = v8[4];
        long long v13 = v8[5];
        long long v14 = v8[7];
        *(_OWORD *)(v7 + 96) = v8[6];
        *(_OWORD *)(v7 + 112) = v14;
        *(_OWORD *)(v7 + 64) = v12;
        *(_OWORD *)(v7 + 80) = v13;
        long long v15 = v8[8];
        long long v16 = v8[9];
        long long v17 = v8[11];
        *(_OWORD *)(v7 + 160) = v8[10];
        *(_OWORD *)(v7 + 176) = v17;
        *(_OWORD *)(v7 + 128) = v15;
        *(_OWORD *)(v7 + 144) = v16;
      }
      else
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *((void *)v8 + 1);
        *(void *)(v7 + 16) = *((void *)v8 + 2);
        *(void *)(v7 + 24) = *((void *)v8 + 3);
        *(void *)(v7 + 32) = *((void *)v8 + 4);
        *(void *)(v7 + 40) = *((void *)v8 + 5);
        *(void *)(v7 + 48) = *((void *)v8 + 6);
        *(void *)(v7 + 56) = *((void *)v8 + 7);
        *(void *)(v7 + 64) = *((void *)v8 + 8);
        *(void *)(v7 + 72) = *((void *)v8 + 9);
        *(void *)(v7 + 80) = *((void *)v8 + 10);
        *(void *)(v7 + 88) = *((void *)v8 + 11);
        *(void *)(v7 + 96) = *((void *)v8 + 12);
        *(void *)(v7 + 104) = *((void *)v8 + 13);
        *(void *)(v7 + 112) = *((void *)v8 + 14);
        *(void *)(v7 + 120) = *((void *)v8 + 15);
        *(void *)(v7 + 128) = *((void *)v8 + 16);
        *(void *)(v7 + 136) = *((void *)v8 + 17);
        *(void *)(v7 + 144) = *((void *)v8 + 18);
        *(void *)(v7 + 152) = *((void *)v8 + 19);
        *(void *)(v7 + 160) = *((void *)v8 + 20);
        *(void *)(v7 + 168) = *((void *)v8 + 21);
        *(void *)(v7 + 176) = *((void *)v8 + 22);
        *(void *)(v7 + 184) = *((void *)v8 + 23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
      *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
      *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
      *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
      *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
      *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
      *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
      *(void *)(a1 + v5[14]) = *(void *)(a2 + v5[14]);
      *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
      *(unsigned char *)(a1 + v5[16]) = *(unsigned char *)(a2 + v5[16]);
      swift_bridgeObjectRetain();
      uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050) + 48);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      *(void *)(v19 + 16) = *(void *)(v20 + 16);
      *(void *)(v19 + 24) = *(void *)(v20 + 24);
      *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
      *(void *)(v19 + 40) = *(void *)(v20 + 40);
      *(void *)(v19 + 48) = *(void *)(v20 + 48);
      *(void *)(v19 + 56) = *(void *)(v20 + 56);
      *(void *)(v19 + 64) = *(void *)(v20 + 64);
      *(void *)(v19 + 72) = *(void *)(v20 + 72);
      *(void *)(v19 + 80) = *(void *)(v20 + 80);
      *(void *)(v19 + 88) = *(void *)(v20 + 88);
      *(void *)(v19 + 96) = *(void *)(v20 + 96);
      *(unsigned char *)(v19 + 104) = *(unsigned char *)(v20 + 104);
      *(void *)(v19 + 112) = *(void *)(v20 + 112);
      *(void *)(v19 + 120) = *(void *)(v20 + 120);
      *(void *)(v19 + 128) = *(void *)(v20 + 128);
      *(void *)(v19 + 136) = *(void *)(v20 + 136);
      *(void *)(v19 + 144) = *(void *)(v20 + 144);
      *(void *)(v19 + 152) = *(void *)(v20 + 152);
      *(void *)(v19 + 160) = *(void *)(v20 + 160);
      *(void *)(v19 + 168) = *(void *)(v20 + 168);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24E462CBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for LocationStreamChange(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for Location();
    uint64_t v8 = v7[5];
    long long v9 = &a1[v8];
    long long v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)long long v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    long long v12 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v12;
    long long v13 = *((_OWORD *)v10 + 7);
    *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
    *((_OWORD *)v9 + 7) = v13;
    long long v14 = *((_OWORD *)v10 + 5);
    *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
    *((_OWORD *)v9 + 5) = v14;
    long long v15 = *((_OWORD *)v10 + 11);
    *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
    *((_OWORD *)v9 + 11) = v15;
    long long v16 = *((_OWORD *)v10 + 9);
    *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
    *((_OWORD *)v9 + 9) = v16;
    *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
    *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
    *(void *)&a1[v7[11]] = *(void *)&a2[v7[11]];
    *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
    *(void *)&a1[v7[13]] = *(void *)&a2[v7[13]];
    *(void *)&a1[v7[14]] = *(void *)&a2[v7[14]];
    a1[v7[15]] = a2[v7[15]];
    a1[v7[16]] = a2[v7[16]];
    uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050) + 48);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    long long v20 = *((_OWORD *)v19 + 9);
    *((_OWORD *)v18 + 8) = *((_OWORD *)v19 + 8);
    *((_OWORD *)v18 + 9) = v20;
    *((_OWORD *)v18 + 10) = *((_OWORD *)v19 + 10);
    long long v21 = *((_OWORD *)v19 + 5);
    *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
    *((_OWORD *)v18 + 5) = v21;
    long long v22 = *((_OWORD *)v19 + 7);
    *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
    *((_OWORD *)v18 + 7) = v22;
    long long v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v23;
    long long v24 = *((_OWORD *)v19 + 3);
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    *((_OWORD *)v18 + 3) = v24;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for LocationStreamChange(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E462CBC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for LocationStreamChange);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DA950);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Location();
      uint64_t v8 = v7[5];
      long long v9 = &a1[v8];
      long long v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)long long v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      long long v12 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v12;
      long long v13 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v13;
      long long v14 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v14;
      long long v15 = *((_OWORD *)v10 + 11);
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      *((_OWORD *)v9 + 11) = v15;
      long long v16 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v16;
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
      *(void *)&a1[v7[11]] = *(void *)&a2[v7[11]];
      *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
      *(void *)&a1[v7[13]] = *(void *)&a2[v7[13]];
      *(void *)&a1[v7[14]] = *(void *)&a2[v7[14]];
      a1[v7[15]] = a2[v7[15]];
      a1[v7[16]] = a2[v7[16]];
      uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8050) + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      long long v20 = *((_OWORD *)v19 + 9);
      *((_OWORD *)v18 + 8) = *((_OWORD *)v19 + 8);
      *((_OWORD *)v18 + 9) = v20;
      *((_OWORD *)v18 + 10) = *((_OWORD *)v19 + 10);
      long long v21 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v21;
      long long v22 = *((_OWORD *)v19 + 7);
      *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
      *((_OWORD *)v18 + 7) = v22;
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      long long v24 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v24;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for LocationStreamChange.CodingKeys()
{
  return &type metadata for LocationStreamChange.CodingKeys;
}

unsigned char *_s12FindMyLocate20LocationStreamChangeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4631B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationStreamChange.UpdatedCodingKeys()
{
  return &type metadata for LocationStreamChange.UpdatedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationStreamChange.RemovedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E463284);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationStreamChange.RemovedCodingKeys()
{
  return &type metadata for LocationStreamChange.RemovedCodingKeys;
}

unint64_t sub_24E4632C0()
{
  unint64_t result = qword_2698DC898;
  if (!qword_2698DC898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC898);
  }
  return result;
}

unint64_t sub_24E463318()
{
  unint64_t result = qword_2698DC8A0;
  if (!qword_2698DC8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8A0);
  }
  return result;
}

unint64_t sub_24E463370()
{
  unint64_t result = qword_2698DC8A8;
  if (!qword_2698DC8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8A8);
  }
  return result;
}

unint64_t sub_24E4633C8()
{
  unint64_t result = qword_2698DC8B0;
  if (!qword_2698DC8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8B0);
  }
  return result;
}

unint64_t sub_24E463420()
{
  unint64_t result = qword_2698DC8B8;
  if (!qword_2698DC8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8B8);
  }
  return result;
}

unint64_t sub_24E463478()
{
  unint64_t result = qword_2698DC8C0;
  if (!qword_2698DC8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8C0);
  }
  return result;
}

unint64_t sub_24E4634D0()
{
  unint64_t result = qword_2698DC8C8;
  if (!qword_2698DC8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8C8);
  }
  return result;
}

unint64_t sub_24E463528()
{
  unint64_t result = qword_2698DC8D0;
  if (!qword_2698DC8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8D0);
  }
  return result;
}

unint64_t sub_24E463580()
{
  unint64_t result = qword_2698DC8D8;
  if (!qword_2698DC8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8D8);
  }
  return result;
}

uint64_t sub_24E4635D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657461647075 && a2 == 0xE700000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E4636C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t PreferenceStreamChange.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  int v7 = *((_DWORD *)v0 + 12);
  uint64_t result = 0x6C616974696E692ELL;
  switch(*((unsigned char *)v0 + 52))
  {
    case 1:
      strcpy((char *)v9, ".myLocation(");
      BYTE5(v9[1]) = 0;
      HIWORD(v9[1]) = -5120;
      goto LABEL_6;
    case 2:
      sub_24E474E88();
      swift_bridgeObjectRelease();
      v9[0] = 0xD000000000000010;
      v9[1] = 0x800000024E478B30;
LABEL_6:
      sub_24E474AF8();
      swift_bridgeObjectRelease();
      sub_24E474AF8();
      uint64_t result = v9[0];
      break;
    case 3:
      return result;
    default:
      uint64_t v13 = 0x6369766544656D2ELL;
      unint64_t v14 = 0xEA00000000002865;
      if (v1)
      {
        v9[0] = v2;
        v9[1] = v1;
        void v9[2] = v3;
        v9[3] = v4;
        void v9[4] = v5;
        v9[5] = v6;
        __int16 v10 = v7 & 0x101;
        char v11 = BYTE2(v7) & 1;
        char v12 = HIBYTE(v7) & 1;
        Device.description.getter();
      }
      sub_24E474AF8();
      swift_bridgeObjectRelease();
      sub_24E474AF8();
      uint64_t result = v13;
      break;
  }
  return result;
}

uint64_t sub_24E46394C()
{
  uint64_t result = 0x696C616974696E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656369766544656DLL;
      break;
    case 2:
      uint64_t result = 0x697461636F4C796DLL;
      break;
    case 3:
      uint64_t result = 0x6552646E65697266;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E4639F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4656D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E463A1C(uint64_t a1)
{
  unint64_t v2 = sub_24E4643E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E463A58(uint64_t a1)
{
  unint64_t v2 = sub_24E4643E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E463A94()
{
  return 0x6465776F6C6C61;
}

uint64_t sub_24E463AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6465776F6C6C61 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E463B44(uint64_t a1)
{
  unint64_t v2 = sub_24E464434();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E463B80(uint64_t a1)
{
  unint64_t v2 = sub_24E464434();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E463BBC(uint64_t a1)
{
  unint64_t v2 = sub_24E464530();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E463BF8(uint64_t a1)
{
  unint64_t v2 = sub_24E464530();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E463C34()
{
  return 0x656369766564;
}

uint64_t sub_24E463C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656369766564 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E463CD8(uint64_t a1)
{
  unint64_t v2 = sub_24E4644DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E463D14(uint64_t a1)
{
  unint64_t v2 = sub_24E4644DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E463D50()
{
  return 0x64656C62616E65;
}

uint64_t sub_24E463D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E463E00(uint64_t a1)
{
  unint64_t v2 = sub_24E464488();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E463E3C(uint64_t a1)
{
  unint64_t v2 = sub_24E464488();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PreferenceStreamChange.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D18);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7CF8);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D08);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v31 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D10);
  uint64_t v37 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D00);
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v29 = v1[2];
  uint64_t v30 = v15;
  uint64_t v28 = v1[3];
  uint64_t v27 = v1[4];
  uint64_t v26 = v1[5];
  int v25 = *((_DWORD *)v1 + 12);
  uint64_t v17 = *((unsigned __int8 *)v1 + 52);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E4643E0();
  sub_24E4752A8();
  switch(v17)
  {
    case 1:
      LOBYTE(v43) = 2;
      sub_24E464488();
      uint64_t v18 = v32;
      uint64_t v19 = v42;
      sub_24E475088();
      uint64_t v20 = v36;
      sub_24E4750D8();
      uint64_t v21 = v35;
      goto LABEL_6;
    case 2:
      LOBYTE(v43) = 3;
      sub_24E464434();
      uint64_t v18 = v38;
      uint64_t v19 = v42;
      sub_24E475088();
      uint64_t v20 = v40;
      sub_24E4750D8();
      uint64_t v21 = v39;
      goto LABEL_6;
    case 3:
      LOBYTE(v43) = 0;
      sub_24E464530();
      uint64_t v22 = v42;
      sub_24E475088();
      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v11, v9);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v14, v22);
    default:
      LOBYTE(v43) = 1;
      sub_24E4644DC();
      uint64_t v18 = v31;
      uint64_t v19 = v42;
      sub_24E475088();
      uint64_t v43 = v16;
      uint64_t v44 = v30;
      uint64_t v45 = v29;
      uint64_t v46 = v28;
      uint64_t v47 = v27;
      uint64_t v48 = v26;
      int v49 = v25;
      sub_24E40C01C();
      uint64_t v20 = v34;
      sub_24E4750B8();
      uint64_t v21 = v33;
LABEL_6:
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v18, v20);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v14, v19);
  }
}

unint64_t sub_24E4643E0()
{
  unint64_t result = qword_26B1B8AF8;
  if (!qword_26B1B8AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AF8);
  }
  return result;
}

unint64_t sub_24E464434()
{
  unint64_t result = qword_26B1B8B58;
  if (!qword_26B1B8B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B58);
  }
  return result;
}

unint64_t sub_24E464488()
{
  unint64_t result = qword_26B1B8B48;
  if (!qword_26B1B8B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B48);
  }
  return result;
}

unint64_t sub_24E4644DC()
{
  unint64_t result = qword_26B1B8B50;
  if (!qword_26B1B8B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B50);
  }
  return result;
}

unint64_t sub_24E464530()
{
  unint64_t result = qword_26B1B8B20;
  if (!qword_26B1B8B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B20);
  }
  return result;
}

uint64_t PreferenceStreamChange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87F8);
  uint64_t v56 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  long long v58 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87D8);
  uint64_t v55 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  long long v57 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87E8);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87F0);
  uint64_t v51 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B87E0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  long long v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24E4643E0();
  uint64_t v16 = v65;
  sub_24E475288();
  if (v16) {
    goto LABEL_14;
  }
  uint64_t v17 = v10;
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v18 = v7;
  uint64_t v19 = v57;
  uint64_t v20 = v58;
  uint64_t v65 = v12;
  uint64_t v21 = v59;
  uint64_t v22 = sub_24E475078();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v28 = sub_24E474EC8();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    *uint64_t v30 = &type metadata for PreferenceStreamChange;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v11);
LABEL_14:
    uint64_t v40 = (uint64_t)v60;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v61) = 1;
      sub_24E4644DC();
      uint64_t v31 = v49;
      sub_24E474FC8();
      if (v31) {
        goto LABEL_13;
      }
      sub_24E3F5A68();
      uint64_t v32 = v54;
      sub_24E475008();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v11);
      char v26 = 0;
      long long v25 = v61;
      long long v27 = v62;
      long long v33 = v63;
      int v24 = v64;
      goto LABEL_18;
    case 2:
      LOBYTE(v61) = 2;
      sub_24E464488();
      uint64_t v34 = v19;
      uint64_t v35 = v49;
      sub_24E474FC8();
      if (v35) {
        goto LABEL_13;
      }
      uint64_t v36 = v50;
      char v37 = sub_24E475028();
      uint64_t v38 = v65;
      char v45 = v37;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v11);
      int v24 = 0;
      long long v27 = 0uLL;
      long long v25 = v45 & 1;
      char v26 = 1;
      goto LABEL_17;
    case 3:
      LOBYTE(v61) = 3;
      sub_24E464434();
      uint64_t v39 = v49;
      sub_24E474FC8();
      if (v39) {
        goto LABEL_13;
      }
      uint64_t v42 = v52;
      char v43 = sub_24E475028();
      uint64_t v44 = v65;
      char v46 = v43;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v11);
      int v24 = 0;
      long long v27 = 0uLL;
      long long v25 = v46 & 1;
      char v26 = 2;
      goto LABEL_17;
    default:
      LOBYTE(v61) = 0;
      sub_24E464530();
      uint64_t v23 = v49;
      sub_24E474FC8();
      if (v23)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v11);
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v11);
      int v24 = 0;
      long long v25 = 0uLL;
      char v26 = 3;
      long long v27 = 0uLL;
LABEL_17:
      long long v33 = 0uLL;
LABEL_18:
      uint64_t v40 = (uint64_t)v60;
      *(_OWORD *)uint64_t v21 = v25;
      *(_OWORD *)(v21 + 16) = v27;
      *(_OWORD *)(v21 + 32) = v33;
      *(_DWORD *)(v21 + 48) = v24;
      *(unsigned char *)(v21 + 52) = v26;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_24E464D30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PreferenceStreamChange.init(from:)(a1, a2);
}

uint64_t sub_24E464D48(void *a1)
{
  return PreferenceStreamChange.encode(to:)(a1);
}

uint64_t destroy for PreferenceStreamChange(uint64_t a1)
{
  return sub_24E3EC918(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned int *)(a1 + 48), *(unsigned char *)(a1 + 52));
}

uint64_t initializeWithCopy for PreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(unsigned int *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 52);
  sub_24E3EC8B8(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 52) = v10;
  return a1;
}

uint64_t assignWithCopy for PreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(unsigned int *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 52);
  sub_24E3EC8B8(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(unsigned int *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  char v18 = *(unsigned char *)(a1 + 52);
  *(unsigned char *)(a1 + 52) = v10;
  sub_24E3EC918(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for PreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 52);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(unsigned int *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = v3;
  char v13 = *(unsigned char *)(a1 + 52);
  *(unsigned char *)(a1 + 52) = v4;
  sub_24E3EC918(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreferenceStreamChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 53)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 52);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PreferenceStreamChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 53) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 52) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24E464FBC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 52) <= 2u) {
    return *(unsigned __int8 *)(a1 + 52);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24E464FD4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 36) = 0u;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 52) = a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreferenceStreamChange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E4650C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.CodingKeys()
{
  return &type metadata for PreferenceStreamChange.CodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.InitializedCodingKeys()
{
  return &type metadata for PreferenceStreamChange.InitializedCodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.MeDeviceCodingKeys()
{
  return &type metadata for PreferenceStreamChange.MeDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.MyLocationCodingKeys()
{
  return &type metadata for PreferenceStreamChange.MyLocationCodingKeys;
}

unsigned char *_s12FindMyLocate22PreferenceStreamChangeO18MeDeviceCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E4651D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.FriendRequestsCodingKeys()
{
  return &type metadata for PreferenceStreamChange.FriendRequestsCodingKeys;
}

unint64_t sub_24E46520C()
{
  unint64_t result = qword_2698DC8E0;
  if (!qword_2698DC8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8E0);
  }
  return result;
}

unint64_t sub_24E465264()
{
  unint64_t result = qword_2698DC8E8;
  if (!qword_2698DC8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8E8);
  }
  return result;
}

unint64_t sub_24E4652BC()
{
  unint64_t result = qword_2698DC8F0;
  if (!qword_2698DC8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8F0);
  }
  return result;
}

unint64_t sub_24E465314()
{
  unint64_t result = qword_2698DC8F8;
  if (!qword_2698DC8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC8F8);
  }
  return result;
}

unint64_t sub_24E46536C()
{
  unint64_t result = qword_26B1B8B30;
  if (!qword_26B1B8B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B30);
  }
  return result;
}

unint64_t sub_24E4653C4()
{
  unint64_t result = qword_26B1B8B28;
  if (!qword_26B1B8B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B28);
  }
  return result;
}

unint64_t sub_24E46541C()
{
  unint64_t result = qword_26B1B8B18;
  if (!qword_26B1B8B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B18);
  }
  return result;
}

unint64_t sub_24E465474()
{
  unint64_t result = qword_26B1B8B10;
  if (!qword_26B1B8B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B10);
  }
  return result;
}

unint64_t sub_24E4654CC()
{
  unint64_t result = qword_26B1B8AF0;
  if (!qword_26B1B8AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AF0);
  }
  return result;
}

unint64_t sub_24E465524()
{
  unint64_t result = qword_26B1B8AE8;
  if (!qword_26B1B8AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8AE8);
  }
  return result;
}

unint64_t sub_24E46557C()
{
  unint64_t result = qword_26B1B8B40;
  if (!qword_26B1B8B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B40);
  }
  return result;
}

unint64_t sub_24E4655D4()
{
  unint64_t result = qword_26B1B8B38;
  if (!qword_26B1B8B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B38);
  }
  return result;
}

unint64_t sub_24E46562C()
{
  unint64_t result = qword_26B1B8B08;
  if (!qword_26B1B8B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B08);
  }
  return result;
}

unint64_t sub_24E465684()
{
  unint64_t result = qword_26B1B8B00;
  if (!qword_26B1B8B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8B00);
  }
  return result;
}

uint64_t sub_24E4656D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696C616974696E69 && a2 == 0xEB0000000064657ALL;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656369766544656DLL && a2 == 0xE800000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697461636F4C796DLL && a2 == 0xEA00000000006E6FLL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6552646E65697266 && a2 == 0xEE00737473657571)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RangingStreamChange(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for RangingStreamChange(id *a1)
{
}

uint64_t assignWithCopy for RangingStreamChange(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for RangingStreamChange(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for RangingStreamChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RangingStreamChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24E465A38(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24E465A40(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

uint64_t static LocalizationUtility.localizedString(key:table:)()
{
  type metadata accessor for BundleHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_24E474678();

  swift_bridgeObjectRelease();
  return v2;
}

uint64_t type metadata accessor for BundleHelper()
{
  return self;
}

uint64_t sub_24E465B58()
{
  return swift_deallocClassInstance();
}

BOOL static LocalizationUtility.Table.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocalizationUtility.Table.hash(into:)()
{
  return sub_24E475238();
}

uint64_t LocalizationUtility.Table.hashValue.getter()
{
  return sub_24E475268();
}

uint64_t static LocalizationUtility.localizedString(key:table:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for BundleHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24E474678();

  swift_bridgeObjectRelease();
  sub_24E465D10(a4);
  uint64_t v7 = sub_24E474A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24E465D10(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24E433F38(0, v1, 0);
    uint64_t v2 = v14;
    int v4 = (uint64_t *)(a1 + 40);
    uint64_t v5 = MEMORY[0x263F8D310];
    do
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v14 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_24E433F38(v9 > 1, v8 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 2;
      uint64_t v12 = v5;
      unint64_t v13 = sub_24E409FF8();
      *(void *)&long long v11 = v7;
      *((void *)&v11 + 1) = v6;
      *(void *)(v2 + 16) = v8 + 1;
      sub_24E465F78(&v11, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_24E465E10()
{
  unint64_t result = qword_2698DC900;
  if (!qword_2698DC900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC900);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationUtility()
{
  return &type metadata for LocalizationUtility;
}

unsigned char *storeEnumTagSinglePayload for LocalizationUtility.Table(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E465F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationUtility.Table()
{
  return &type metadata for LocalizationUtility.Table;
}

uint64_t sub_24E465F78(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24E465F90(char a1)
{
  uint64_t result = 0x636E654665766173;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x6574656C6564;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x7365636E6566;
      break;
    case 3:
      uint64_t v3 = 0x747065636361;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6546000000000000;
      break;
    case 4:
      uint64_t result = 0x636E65466574756DLL;
      break;
    case 5:
      uint64_t result = 0x4672656767697274;
      break;
    case 6:
      uint64_t result = 0x7274537472617473;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E4660B4(uint64_t a1)
{
  unint64_t v2 = sub_24E467724();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E4660F0(uint64_t a1)
{
  unint64_t v2 = sub_24E467724();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E46612C()
{
  return sub_24E465F90(*v0);
}

uint64_t sub_24E466134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E470FF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E46615C(uint64_t a1)
{
  unint64_t v2 = sub_24E4674B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E466198(uint64_t a1)
{
  unint64_t v2 = sub_24E4674B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E4661D4(uint64_t a1)
{
  unint64_t v2 = sub_24E4677CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E466210(uint64_t a1)
{
  unint64_t v2 = sub_24E4677CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E46624C(uint64_t a1)
{
  unint64_t v2 = sub_24E467778();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E466288(uint64_t a1)
{
  unint64_t v2 = sub_24E467778();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E4662C4(uint64_t a1)
{
  unint64_t v2 = sub_24E46750C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E466300(uint64_t a1)
{
  unint64_t v2 = sub_24E46750C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E46633C()
{
  if (*v0) {
    return 0x7461446C69746E75;
  }
  else {
    return 0x656C646E6168;
  }
}

uint64_t sub_24E466378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4713B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E4663A0(uint64_t a1)
{
  unint64_t v2 = sub_24E4676D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E4663DC(uint64_t a1)
{
  unint64_t v2 = sub_24E4676D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E466418(uint64_t a1)
{
  unint64_t v2 = sub_24E467820();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E466454(uint64_t a1)
{
  unint64_t v2 = sub_24E467820();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E466490(uint64_t a1)
{
  unint64_t v2 = sub_24E467560();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E4664CC(uint64_t a1)
{
  unint64_t v2 = sub_24E467560();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E466508()
{
  if (*v0) {
    return 0x6E6F697469736F70;
  }
  else {
    return 25705;
  }
}

uint64_t sub_24E466538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E4714A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E466560(uint64_t a1)
{
  unint64_t v2 = sub_24E46761C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E46659C(uint64_t a1)
{
  unint64_t v2 = sub_24E46761C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FenceClientRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EE8);
  uint64_t v82 = *(void *)(v2 - 8);
  uint64_t v83 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v80 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7F20);
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v78 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v76 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7F00);
  uint64_t v89 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  long long v86 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Fence.TriggerPosition(0);
  MEMORY[0x270FA5388](v61);
  uint64_t v85 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7F18);
  uint64_t v88 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v81 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v79 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EF8);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v72 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7F10);
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v66 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D50);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v67 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Fence.ID(0);
  uint64_t v14 = MEMORY[0x270FA5388](v90);
  uint64_t v75 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v65 = (uint64_t)&v61 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v64 = (uint64_t)&v61 - v18;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EF0);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Fence(0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for FenceClientRequest(0);
  MEMORY[0x270FA5388](v24);
  char v26 = (uint64_t *)((char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7F08);
  uint64_t v94 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E4674B8();
  long long v91 = v28;
  sub_24E4752A8();
  sub_24E469E38(v95, (uint64_t)v26, type metadata accessor for FenceClientRequest);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = v64;
      sub_24E4675B4((uint64_t)v26, v64, type metadata accessor for Fence.ID);
      LOBYTE(v96) = 1;
      sub_24E4677CC();
      uint64_t v34 = v67;
      uint64_t v36 = v91;
      uint64_t v35 = v92;
      sub_24E475088();
      sub_24E46AA0C(&qword_2698DBCA8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
      uint64_t v37 = v71;
      sub_24E475118();
      uint64_t v38 = &v99;
      goto LABEL_5;
    case 2u:
      uint64_t v33 = v65;
      sub_24E4675B4((uint64_t)v26, v65, type metadata accessor for Fence.ID);
      LOBYTE(v96) = 3;
      sub_24E467724();
      uint64_t v34 = v72;
      uint64_t v36 = v91;
      uint64_t v35 = v92;
      sub_24E475088();
      sub_24E46AA0C(&qword_2698DBCA8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
      uint64_t v37 = v74;
      sub_24E475118();
      uint64_t v38 = &v100;
LABEL_5:
      (*(void (**)(char *, uint64_t))(*(v38 - 32) + 8))(v34, v37);
      uint64_t v39 = v33;
      goto LABEL_11;
    case 3u:
      uint64_t v41 = *v26;
      uint64_t v40 = v26[1];
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88);
      uint64_t v43 = v79;
      sub_24E37A4CC((uint64_t)v26 + *(int *)(v42 + 48), v79, &qword_26B1B86A0);
      LOBYTE(v96) = 4;
      sub_24E4676D0();
      uint64_t v44 = v81;
      char v46 = v91;
      uint64_t v45 = v92;
      sub_24E475088();
      uint64_t v96 = v41;
      uint64_t v97 = v40;
      char v98 = 0;
      sub_24E41BE00();
      uint64_t v47 = v84;
      uint64_t v48 = v93;
      sub_24E475118();
      if (v48)
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))(v44, v47);
        sub_24E379BD4(v43, &qword_26B1B86A0);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v46, v45);
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        LOBYTE(v96) = 1;
        sub_24E474818();
        sub_24E46AA0C(&qword_26B1B8128, MEMORY[0x263F07490]);
        sub_24E4750B8();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v44, v47);
        sub_24E379BD4(v43, &qword_26B1B86A0);
        return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v46, v45);
      }
    case 4u:
      uint64_t v49 = (uint64_t)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48);
      uint64_t v50 = v75;
      sub_24E4675B4((uint64_t)v26, v75, type metadata accessor for Fence.ID);
      uint64_t v51 = v85;
      sub_24E4675B4(v49, v85, type metadata accessor for Fence.TriggerPosition);
      LOBYTE(v96) = 5;
      sub_24E46761C();
      uint64_t v52 = v86;
      uint64_t v36 = v91;
      uint64_t v35 = v92;
      sub_24E475088();
      LOBYTE(v96) = 0;
      sub_24E46AA0C(&qword_2698DBCA8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
      uint64_t v53 = v87;
      uint64_t v54 = v93;
      sub_24E475118();
      if (!v54)
      {
        LOBYTE(v96) = 1;
        sub_24E46AA0C(&qword_2698DC918, (void (*)(uint64_t))type metadata accessor for Fence.TriggerPosition);
        sub_24E475118();
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v52, v53);
      sub_24E467670(v51, type metadata accessor for Fence.TriggerPosition);
      uint64_t v39 = v50;
LABEL_11:
      sub_24E467670(v39, type metadata accessor for Fence.ID);
      return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v36, v35);
    case 5u:
      LOBYTE(v96) = 2;
      sub_24E467778();
      uint64_t v55 = v66;
      long long v57 = v91;
      uint64_t v56 = v92;
      sub_24E475088();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v55, v69);
      goto LABEL_16;
    case 6u:
      LOBYTE(v96) = 6;
      sub_24E467560();
      long long v58 = v76;
      long long v57 = v91;
      uint64_t v56 = v92;
      sub_24E475088();
      uint64_t v60 = v77;
      uint64_t v59 = v78;
      goto LABEL_15;
    case 7u:
      LOBYTE(v96) = 7;
      sub_24E46750C();
      long long v58 = v80;
      long long v57 = v91;
      uint64_t v56 = v92;
      sub_24E475088();
      uint64_t v60 = v82;
      uint64_t v59 = v83;
LABEL_15:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
LABEL_16:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v57, v56);
      break;
    default:
      sub_24E4675B4((uint64_t)v26, (uint64_t)v23, type metadata accessor for Fence);
      LOBYTE(v96) = 0;
      sub_24E467820();
      uint64_t v29 = v91;
      uint64_t v30 = v92;
      sub_24E475088();
      sub_24E46AA0C(&qword_26B1B7D68, (void (*)(uint64_t))type metadata accessor for Fence);
      uint64_t v31 = v63;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v31);
      sub_24E467670((uint64_t)v23, type metadata accessor for Fence);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v29, v30);
      break;
  }
  return result;
}

uint64_t type metadata accessor for FenceClientRequest(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_26B1B8258);
}

unint64_t sub_24E4674B8()
{
  unint64_t result = qword_26B1B8450;
  if (!qword_26B1B8450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8450);
  }
  return result;
}

unint64_t sub_24E46750C()
{
  unint64_t result = qword_2698DC908;
  if (!qword_2698DC908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC908);
  }
  return result;
}

unint64_t sub_24E467560()
{
  unint64_t result = qword_26B1B8490;
  if (!qword_26B1B8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8490);
  }
  return result;
}

uint64_t sub_24E4675B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24E46761C()
{
  unint64_t result = qword_2698DC910;
  if (!qword_2698DC910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC910);
  }
  return result;
}

uint64_t sub_24E467670(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24E4676D0()
{
  unint64_t result = qword_2698DC920;
  if (!qword_2698DC920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC920);
  }
  return result;
}

unint64_t sub_24E467724()
{
  unint64_t result = qword_2698DC928;
  if (!qword_2698DC928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC928);
  }
  return result;
}

unint64_t sub_24E467778()
{
  unint64_t result = qword_26B1B8468;
  if (!qword_26B1B8468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8468);
  }
  return result;
}

unint64_t sub_24E4677CC()
{
  unint64_t result = qword_2698DC930;
  if (!qword_2698DC930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC930);
  }
  return result;
}

unint64_t sub_24E467820()
{
  unint64_t result = qword_2698DC938;
  if (!qword_2698DC938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC938);
  }
  return result;
}

uint64_t FenceClientRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D78);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v105 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7DB8);
  uint64_t v87 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v97 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D98);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  uint64_t v93 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v99 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7DB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  uint64_t v91 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v103 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D88);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  char v98 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7DA8);
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v95 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D90);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v96 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D80);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7DA0);
  uint64_t v101 = *(void *)(v15 - 8);
  uint64_t v102 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for FenceClientRequest(0);
  uint64_t v18 = MEMORY[0x270FA5388](v106);
  uint64_t v84 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v73 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v73 - v32;
  uint64_t v34 = a1[3];
  long long v107 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v34);
  sub_24E4674B8();
  uint64_t v35 = v108;
  sub_24E475288();
  if (v35) {
    goto LABEL_24;
  }
  uint64_t v74 = v31;
  uint64_t v75 = v28;
  uint64_t v76 = v25;
  uint64_t v77 = v22;
  uint64_t v108 = 0;
  uint64_t v37 = v104;
  uint64_t v36 = v105;
  uint64_t v39 = v102;
  uint64_t v38 = v103;
  uint64_t v40 = v106;
  uint64_t v41 = sub_24E475078();
  if (*(void *)(v41 + 16) != 1)
  {
    uint64_t v47 = sub_24E474EC8();
    swift_allocError();
    uint64_t v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    uint64_t *v49 = v40;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x263F8DCB0], v47);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
LABEL_24:
    uint64_t v46 = (uint64_t)v107;
    return __swift_destroy_boxed_opaque_existential_1(v46);
  }
  switch(*(unsigned char *)(v41 + 32))
  {
    case 1:
      char v110 = 1;
      sub_24E4677CC();
      uint64_t v50 = v96;
      uint64_t v51 = v108;
      sub_24E474FC8();
      if (v51) {
        goto LABEL_23;
      }
      type metadata accessor for Fence.ID(0);
      sub_24E46AA0C(&qword_2698DBCF8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
      uint64_t v44 = (uint64_t)v75;
      uint64_t v52 = v83;
      sub_24E475068();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
      uint64_t v46 = (uint64_t)v107;
      goto LABEL_9;
    case 2:
      char v111 = 2;
      sub_24E467778();
      uint64_t v53 = v95;
      uint64_t v54 = v108;
      sub_24E474FC8();
      if (v54) {
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v80 + 8))(v53, v81);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
      goto LABEL_27;
    case 3:
      char v112 = 3;
      sub_24E467724();
      uint64_t v55 = v108;
      sub_24E474FC8();
      if (v55) {
        goto LABEL_23;
      }
      type metadata accessor for Fence.ID(0);
      sub_24E46AA0C(&qword_2698DBCF8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
      uint64_t v56 = (uint64_t)v76;
      uint64_t v57 = v86;
      long long v58 = v98;
      sub_24E475068();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
      goto LABEL_30;
    case 4:
      uint64_t v105 = (char *)v41;
      char v115 = 4;
      sub_24E4676D0();
      uint64_t v59 = v38;
      uint64_t v60 = v108;
      sub_24E474FC8();
      if (v60) {
        goto LABEL_23;
      }
      char v114 = 0;
      sub_24E41C014();
      uint64_t v56 = (uint64_t)v77;
      uint64_t v61 = v90;
      sub_24E475068();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88);
      sub_24E474818();
      char v113 = 1;
      sub_24E46AA0C(&qword_26B1B7C38, MEMORY[0x263F07490]);
      sub_24E475008();
      uint64_t v70 = v101;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v39);
LABEL_30:
      swift_storeEnumTagMultiPayload();
      uint64_t v72 = v56;
      goto LABEL_31;
    case 5:
      uint64_t v105 = (char *)v41;
      char v118 = 5;
      sub_24E46761C();
      uint64_t v62 = v108;
      sub_24E474FC8();
      if (v62) {
        goto LABEL_23;
      }
      type metadata accessor for Fence.ID(0);
      char v117 = 0;
      sub_24E46AA0C(&qword_2698DBCF8, (void (*)(uint64_t))type metadata accessor for Fence.ID);
      uint64_t v63 = v84;
      uint64_t v64 = v92;
      uint64_t v65 = v99;
      sub_24E475068();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78);
      type metadata accessor for Fence.TriggerPosition(0);
      char v116 = 1;
      sub_24E46AA0C(&qword_2698DC940, (void (*)(uint64_t))type metadata accessor for Fence.TriggerPosition);
      sub_24E475068();
      uint64_t v71 = v101;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v65, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v39);
      swift_storeEnumTagMultiPayload();
      uint64_t v72 = (uint64_t)v63;
LABEL_31:
      sub_24E4675B4(v72, (uint64_t)v33, type metadata accessor for FenceClientRequest);
      goto LABEL_28;
    case 6:
      char v119 = 6;
      sub_24E467560();
      uint64_t v66 = v97;
      uint64_t v67 = v108;
      sub_24E474FC8();
      if (v67) {
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v87 + 8))(v66, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
      goto LABEL_27;
    case 7:
      char v120 = 7;
      sub_24E46750C();
      uint64_t v68 = v108;
      sub_24E474FC8();
      if (v68) {
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v36, v89);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
LABEL_27:
      swift_storeEnumTagMultiPayload();
LABEL_28:
      uint64_t v46 = (uint64_t)v107;
      goto LABEL_29;
    default:
      char v109 = 0;
      sub_24E467820();
      uint64_t v42 = v94;
      uint64_t v43 = v108;
      sub_24E474FC8();
      if (v43)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
        goto LABEL_24;
      }
      type metadata accessor for Fence(0);
      sub_24E46AA0C(&qword_26B1B7E70, (void (*)(uint64_t))type metadata accessor for Fence);
      uint64_t v44 = (uint64_t)v74;
      uint64_t v45 = v79;
      sub_24E475068();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v17, v39);
      uint64_t v46 = (uint64_t)v107;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      sub_24E4675B4(v44, (uint64_t)v33, type metadata accessor for FenceClientRequest);
LABEL_29:
      sub_24E4675B4((uint64_t)v33, v100, type metadata accessor for FenceClientRequest);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v46);
}

uint64_t sub_24E4689AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FenceClientRequest.init(from:)(a1, a2);
}

uint64_t sub_24E4689C4(void *a1)
{
  return FenceClientRequest.encode(to:)(a1);
}

uint64_t sub_24E4689DC()
{
  return 0x70557365636E6566;
}

uint64_t sub_24E468A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x70557365636E6566 && a2 == 0xED00006465746164)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24E475148();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24E468ABC(uint64_t a1)
{
  unint64_t v2 = sub_24E468DF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E468AF8(uint64_t a1)
{
  unint64_t v2 = sub_24E468DF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E468B34(uint64_t a1)
{
  unint64_t v2 = sub_24E468E4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E468B70(uint64_t a1)
{
  unint64_t v2 = sub_24E468E4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FenceDaemonRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7DC0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7D30);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E468DF8();
  sub_24E4752A8();
  sub_24E468E4C();
  sub_24E475088();
  uint64_t v17 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8538);
  sub_24E469260(&qword_26B1B7D70, &qword_26B1B7D68);
  uint64_t v12 = v15;
  sub_24E475118();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_24E468DF8()
{
  unint64_t result = qword_26B1B84A8;
  if (!qword_26B1B84A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84A8);
  }
  return result;
}

unint64_t sub_24E468E4C()
{
  unint64_t result = qword_26B1B84C0;
  if (!qword_26B1B84C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84C0);
  }
  return result;
}

uint64_t FenceDaemonRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7EE0);
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B7ED8);
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E468DF8();
  sub_24E475288();
  if (v2) {
    goto LABEL_5;
  }
  uint64_t v19 = a1;
  uint64_t v20 = v7;
  uint64_t v10 = v23;
  if (*(void *)(sub_24E475078() + 16) != 1)
  {
    uint64_t v12 = sub_24E474EC8();
    swift_allocError();
    uint64_t v13 = v10;
    uint64_t v15 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    *uint64_t v15 = &type metadata for FenceDaemonRequest;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v15, *MEMORY[0x263F8DCB0], v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v13);
    a1 = v19;
LABEL_5:
    uint64_t v17 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v17);
  }
  sub_24E468E4C();
  sub_24E474FC8();
  uint64_t v11 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8538);
  sub_24E469260(&qword_26B1B7E90, &qword_26B1B7E70);
  sub_24E475068();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  *uint64_t v21 = v24;
  uint64_t v17 = (uint64_t)v19;
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

uint64_t sub_24E469260(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1B8538);
    sub_24E46AA0C(a2, (void (*)(uint64_t))type metadata accessor for Fence);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E4692F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FenceDaemonRequest.init(from:)(a1, a2);
}

uint64_t sub_24E46930C(void *a1)
{
  return FenceDaemonRequest.encode(to:)(a1);
}

uint64_t sub_24E469324()
{
  uint64_t result = 1684631414;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65636E6566;
      break;
    case 2:
      uint64_t result = 0x7365636E6566;
      break;
    case 3:
      uint64_t result = 0x4972656767697274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E4693A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E471584(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E4693D0(uint64_t a1)
{
  unint64_t v2 = sub_24E469DE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E46940C(uint64_t a1)
{
  unint64_t v2 = sub_24E469DE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E469448(uint64_t a1)
{
  unint64_t v2 = sub_24E469F48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E469484(uint64_t a1)
{
  unint64_t v2 = sub_24E469F48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E4694C0(uint64_t a1)
{
  unint64_t v2 = sub_24E469EF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E4694FC(uint64_t a1)
{
  unint64_t v2 = sub_24E469EF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E469538(uint64_t a1)
{
  unint64_t v2 = sub_24E469EA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E469574(uint64_t a1)
{
  unint64_t v2 = sub_24E469EA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E4695B0(uint64_t a1)
{
  unint64_t v2 = sub_24E469F9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E4695EC(uint64_t a1)
{
  unint64_t v2 = sub_24E469F9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FenceResponse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8588);
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8518);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v43 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8580);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8568);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v36 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Fence(0);
  MEMORY[0x270FA5388](v35);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8578);
  uint64_t v42 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FenceResponse(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8570);
  uint64_t v47 = *(void *)(v18 - 8);
  uint64_t v48 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E469DE4();
  sub_24E4752A8();
  sub_24E469E38(v49, (uint64_t)v17, type metadata accessor for FenceResponse);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = *v17;
      char v53 = 2;
      sub_24E469EF4();
      uint64_t v31 = v39;
      uint64_t v32 = v48;
      sub_24E475088();
      uint64_t v50 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8538);
      sub_24E469260(&qword_26B1B7D70, &qword_26B1B7D68);
      uint64_t v33 = v41;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v33);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v32);
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2u:
      uint64_t v25 = v43;
      sub_24E37A4CC((uint64_t)v17, v43, &qword_26B1B8518);
      char v54 = 3;
      sub_24E469EA0();
      uint64_t v26 = v44;
      uint64_t v27 = v48;
      sub_24E475088();
      type metadata accessor for Fence.TriggerID(0);
      sub_24E46AA0C(&qword_2698DC950, (void (*)(uint64_t))type metadata accessor for Fence.TriggerID);
      uint64_t v28 = v46;
      sub_24E4750B8();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v28);
      sub_24E379BD4(v25, &qword_26B1B8518);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v27);
      break;
    case 3u:
      char v51 = 0;
      sub_24E469F9C();
      uint64_t v29 = v48;
      sub_24E475088();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v29);
      break;
    default:
      sub_24E4675B4((uint64_t)v17, (uint64_t)v11, type metadata accessor for Fence);
      char v52 = 1;
      sub_24E469F48();
      uint64_t v21 = v36;
      uint64_t v22 = v48;
      sub_24E475088();
      sub_24E46AA0C(&qword_26B1B7D68, (void (*)(uint64_t))type metadata accessor for Fence);
      uint64_t v23 = v38;
      sub_24E475118();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v23);
      sub_24E467670((uint64_t)v11, type metadata accessor for Fence);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v22);
      break;
  }
  return result;
}

uint64_t type metadata accessor for FenceResponse(uint64_t a1)
{
  return sub_24E381170(a1, (uint64_t *)&unk_26B1B83F8);
}

unint64_t sub_24E469DE4()
{
  unint64_t result = qword_26B1B83A0;
  if (!qword_26B1B83A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83A0);
  }
  return result;
}

uint64_t sub_24E469E38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24E469EA0()
{
  unint64_t result = qword_2698DC948;
  if (!qword_2698DC948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC948);
  }
  return result;
}

unint64_t sub_24E469EF4()
{
  unint64_t result = qword_26B1B83D0;
  if (!qword_26B1B83D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83D0);
  }
  return result;
}

unint64_t sub_24E469F48()
{
  unint64_t result = qword_2698DC958;
  if (!qword_2698DC958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC958);
  }
  return result;
}

unint64_t sub_24E469F9C()
{
  unint64_t result = qword_26B1B83B8;
  if (!qword_26B1B83B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83B8);
  }
  return result;
}

uint64_t FenceResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8560);
  uint64_t v63 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v71 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8558);
  uint64_t v62 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v70 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8540);
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8550);
  uint64_t v69 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v67 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8548);
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FenceResponse(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v52 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = a1[3];
  uint64_t v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24E469DE4();
  uint64_t v23 = v73;
  sub_24E475288();
  if (v23) {
    goto LABEL_13;
  }
  uint64_t v24 = v67;
  char v54 = v19;
  uint64_t v25 = v69;
  char v53 = v16;
  uint64_t v55 = v13;
  uint64_t v56 = v21;
  uint64_t v26 = v70;
  uint64_t v27 = v71;
  uint64_t v73 = 0;
  uint64_t v28 = v68;
  uint64_t v29 = sub_24E475078();
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v31 = sub_24E474EC8();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698DB5A8);
    uint64_t *v33 = v10;
    sub_24E474FD8();
    sub_24E474EB8();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v28);
LABEL_13:
    uint64_t v39 = (uint64_t)v72;
    return __swift_destroy_boxed_opaque_existential_1(v39);
  }
  switch(*(unsigned char *)(v29 + 32))
  {
    case 1:
      char v76 = 1;
      sub_24E469F48();
      uint64_t v34 = v65;
      uint64_t v35 = v28;
      uint64_t v36 = v73;
      sub_24E474FC8();
      if (v36) {
        goto LABEL_12;
      }
      type metadata accessor for Fence(0);
      sub_24E46AA0C(&qword_26B1B7E70, (void (*)(uint64_t))type metadata accessor for Fence);
      uint64_t v37 = (uint64_t)v54;
      uint64_t v38 = v59;
      sub_24E475068();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v35);
      uint64_t v39 = (uint64_t)v72;
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = (uint64_t)v56;
      sub_24E4675B4(v37, (uint64_t)v56, type metadata accessor for FenceResponse);
      goto LABEL_19;
    case 2:
      char v77 = 2;
      sub_24E469EF4();
      uint64_t v41 = v26;
      uint64_t v35 = v28;
      uint64_t v42 = v73;
      sub_24E474FC8();
      if (v42) {
        goto LABEL_12;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8538);
      sub_24E469260(&qword_26B1B7E90, &qword_26B1B7E70);
      uint64_t v43 = v60;
      sub_24E475068();
      uint64_t v44 = v66;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v28);
      uint64_t v50 = v53;
      *char v53 = v74;
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = (uint64_t)v50;
      goto LABEL_17;
    case 3:
      uint64_t v70 = (char *)v10;
      char v78 = 3;
      sub_24E469EA0();
      uint64_t v45 = v27;
      uint64_t v35 = v28;
      uint64_t v46 = v73;
      sub_24E474FC8();
      if (v46)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v35);
        goto LABEL_13;
      }
      type metadata accessor for Fence.TriggerID(0);
      sub_24E46AA0C(&qword_2698DC960, (void (*)(uint64_t))type metadata accessor for Fence.TriggerID);
      uint64_t v48 = (uint64_t)v55;
      uint64_t v49 = v61;
      sub_24E475008();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v28);
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = v48;
LABEL_17:
      uint64_t v40 = (uint64_t)v56;
      sub_24E4675B4(v51, (uint64_t)v56, type metadata accessor for FenceResponse);
      goto LABEL_18;
    default:
      char v75 = 0;
      sub_24E469F9C();
      uint64_t v30 = v73;
      sub_24E474FC8();
      if (v30)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v28);
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v28);
      uint64_t v40 = (uint64_t)v56;
      swift_storeEnumTagMultiPayload();
LABEL_18:
      uint64_t v39 = (uint64_t)v72;
LABEL_19:
      sub_24E4675B4(v40, v64, type metadata accessor for FenceResponse);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v39);
}

uint64_t sub_24E46AA0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E46AA54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FenceResponse.init(from:)(a1, a2);
}

uint64_t sub_24E46AA6C(void *a1)
{
  return FenceResponse.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for FenceClientRequest(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_24E474878();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v69(a1, a2, v7);
        uint64_t v9 = (int *)type metadata accessor for Fence(0);
        uint64_t v10 = v9[5];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = *((void *)v12 + 1);
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = v13;
        a1[v9[6]] = a2[v9[6]];
        a1[v9[7]] = a2[v9[7]];
        uint64_t v14 = v9[8];
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = type metadata accessor for Fence.Variant(0);
        swift_bridgeObjectRetain();
        uint64_t v71 = v8;
        uint64_t v72 = v7;
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          long long v18 = *((_OWORD *)v16 + 1);
          *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          *((_OWORD *)v15 + 1) = v18;
          v15[32] = v16[32];
          uint64_t v19 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
          uint64_t v20 = &v15[v19];
          uint64_t v21 = &v16[v19];
          uint64_t v22 = sub_24E4749A8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        a1[v9[9]] = a2[v9[9]];
        uint64_t v39 = v9[10];
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        *(_OWORD *)(v40 + 9) = *(_OWORD *)(v41 + 9);
        uint64_t v42 = v9[11];
        uint64_t v43 = &a1[v42];
        uint64_t v44 = &a2[v42];
        uint64_t v45 = *((void *)v44 + 1);
        *(void *)uint64_t v43 = *(void *)v44;
        *((void *)v43 + 1) = v45;
        uint64_t v46 = *((void *)v44 + 3);
        *((void *)v43 + 2) = *((void *)v44 + 2);
        *((void *)v43 + 3) = v46;
        uint64_t v47 = *((void *)v44 + 5);
        *((void *)v43 + 4) = *((void *)v44 + 4);
        *((void *)v43 + 5) = v47;
        uint64_t v48 = *((void *)v44 + 7);
        *((void *)v43 + 6) = *((void *)v44 + 6);
        *((void *)v43 + 7) = v48;
        uint64_t v49 = *((void *)v44 + 9);
        *((void *)v43 + 8) = *((void *)v44 + 8);
        *((void *)v43 + 9) = v49;
        uint64_t v50 = *((void *)v44 + 11);
        *((void *)v43 + 10) = *((void *)v44 + 10);
        *((void *)v43 + 11) = v50;
        uint64_t v76 = *((void *)v44 + 13);
        *((void *)v43 + 12) = *((void *)v44 + 12);
        *((void *)v43 + 13) = v76;
        uint64_t v75 = *((void *)v44 + 15);
        *((void *)v43 + 14) = *((void *)v44 + 14);
        *((void *)v43 + 15) = v75;
        uint64_t v51 = *((void *)v44 + 17);
        *((void *)v43 + 16) = *((void *)v44 + 16);
        *((void *)v43 + 17) = v51;
        uint64_t v52 = *((void *)v44 + 19);
        *((void *)v43 + 18) = *((void *)v44 + 18);
        *((void *)v43 + 19) = v52;
        uint64_t v53 = *((void *)v44 + 21);
        *((void *)v43 + 20) = *((void *)v44 + 20);
        *((void *)v43 + 21) = v53;
        uint64_t v74 = *((void *)v44 + 23);
        *((void *)v43 + 22) = *((void *)v44 + 22);
        *((void *)v43 + 23) = v74;
        *(void *)&a1[v9[12]] = *(void *)&a2[v9[12]];
        uint64_t v54 = v9[13];
        __dst = &a1[v54];
        uint64_t v55 = &a2[v54];
        uint64_t v56 = sub_24E474818();
        uint64_t v57 = *(void *)(v56 - 8);
        uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v73(v55, 1, v56))
        {
          uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
          memcpy(__dst, v55, *(void *)(*(void *)(v58 - 8) + 64));
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
        }
        else
        {
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
          v59(__dst, v55, v56);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v56);
        }
        v59(&a1[v9[14]], &a2[v9[14]], v56);
        uint64_t v61 = v9[15];
        uint64_t v62 = &a1[v61];
        uint64_t v63 = &a2[v61];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(&a2[v61], 1, v72))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
          memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          v69(v62, v63, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v62, 0, 1, v72);
        }
        uint64_t v65 = v9[16];
        uint64_t v66 = &a1[v65];
        uint64_t v67 = &a2[v65];
        uint64_t v68 = *((void *)v67 + 1);
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = v68;
        a1[v9[17]] = a2[v9[17]];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        uint64_t v25 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v26 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v26;
        swift_bridgeObjectRetain();
        uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88) + 48);
        uint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        uint64_t v30 = sub_24E474818();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
          memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v33 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48);
        uint64_t v35 = (void **)&a1[v34];
        uint64_t v36 = (void **)&a2[v34];
        type metadata accessor for Fence.TriggerPosition(0);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v60 = sub_24E474818();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v60 - 8) + 16))(v35, v36, v60);
        }
        else
        {
          uint64_t v37 = *v36;
          *uint64_t v35 = *v36;
          id v38 = v37;
        }
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FenceClientRequest(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24E474878();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void (**)(void **, uint64_t))(v7 + 8);
      v8(a1, v6);
      uint64_t v9 = (int *)type metadata accessor for Fence(0);
      swift_bridgeObjectRelease();
      uint64_t v10 = (char *)a1 + v9[8];
      type metadata accessor for Fence.Variant(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v11 = &v10[*(int *)(type metadata accessor for Fence.Schedule(0) + 28)];
        uint64_t v12 = sub_24E4749A8();
        (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = (char *)a1 + v9[13];
      uint64_t v14 = sub_24E474818();
      uint64_t v15 = *(void *)(v14 - 8);
      int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
      uint64_t v17 = *(void (**)(char *, uint64_t))(v15 + 8);
      if (!v16) {
        v17(v13, v14);
      }
      v17((char *)a1 + v9[14], v14);
      long long v18 = (char *)a1 + v9[15];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6)) {
        v8((void **)v18, v6);
      }
      swift_bridgeObjectRelease();
      return;
    case 1u:
    case 2u:
      uint64_t v2 = sub_24E474878();
      goto LABEL_3;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v19 = (void **)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88) + 48));
      uint64_t v20 = sub_24E474818();
      uint64_t v24 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48))(v19, 1, v20)) {
        return;
      }
      uint64_t v3 = *(void (**)(void **, uint64_t))(v24 + 8);
      int v5 = v19;
      uint64_t v4 = v20;
      goto LABEL_4;
    case 4u:
      uint64_t v21 = sub_24E474878();
      (*(void (**)(void **, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
      a1 = (void **)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48));
      type metadata accessor for Fence.TriggerPosition(0);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v2 = sub_24E474818();
LABEL_3:
        uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
        uint64_t v4 = v2;
        int v5 = a1;
LABEL_4:
        v3(v5, v4);
      }
      else if (EnumCaseMultiPayload <= 1)
      {
        uint64_t v23 = *a1;
      }
      return;
    default:
      return;
  }
}

char *initializeWithCopy for FenceClientRequest(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24E474878();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v67(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for Fence(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v12;
      a1[v8[6]] = a2[v8[6]];
      a1[v8[7]] = a2[v8[7]];
      uint64_t v13 = v8[8];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = type metadata accessor for Fence.Variant(0);
      swift_bridgeObjectRetain();
      uint64_t v70 = v6;
      uint64_t v69 = v7;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v17 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v17;
        v14[32] = v15[32];
        uint64_t v18 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v19 = &v14[v18];
        uint64_t v20 = &v15[v18];
        uint64_t v21 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      a1[v8[9]] = a2[v8[9]];
      uint64_t v36 = v8[10];
      uint64_t v37 = &a1[v36];
      id v38 = &a2[v36];
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
      uint64_t v39 = v8[11];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = *((void *)v41 + 1);
      *(void *)uint64_t v40 = *(void *)v41;
      *((void *)v40 + 1) = v42;
      uint64_t v43 = *((void *)v41 + 3);
      *((void *)v40 + 2) = *((void *)v41 + 2);
      *((void *)v40 + 3) = v43;
      uint64_t v44 = *((void *)v41 + 5);
      *((void *)v40 + 4) = *((void *)v41 + 4);
      *((void *)v40 + 5) = v44;
      uint64_t v45 = *((void *)v41 + 7);
      *((void *)v40 + 6) = *((void *)v41 + 6);
      *((void *)v40 + 7) = v45;
      uint64_t v46 = *((void *)v41 + 9);
      *((void *)v40 + 8) = *((void *)v41 + 8);
      *((void *)v40 + 9) = v46;
      uint64_t v47 = *((void *)v41 + 11);
      *((void *)v40 + 10) = *((void *)v41 + 10);
      *((void *)v40 + 11) = v47;
      uint64_t v74 = *((void *)v41 + 13);
      *((void *)v40 + 12) = *((void *)v41 + 12);
      *((void *)v40 + 13) = v74;
      uint64_t v73 = *((void *)v41 + 15);
      *((void *)v40 + 14) = *((void *)v41 + 14);
      *((void *)v40 + 15) = v73;
      uint64_t v48 = *((void *)v41 + 17);
      *((void *)v40 + 16) = *((void *)v41 + 16);
      *((void *)v40 + 17) = v48;
      uint64_t v49 = *((void *)v41 + 19);
      *((void *)v40 + 18) = *((void *)v41 + 18);
      *((void *)v40 + 19) = v49;
      uint64_t v50 = *((void *)v41 + 21);
      *((void *)v40 + 20) = *((void *)v41 + 20);
      *((void *)v40 + 21) = v50;
      uint64_t v72 = *((void *)v41 + 23);
      *((void *)v40 + 22) = *((void *)v41 + 22);
      *((void *)v40 + 23) = v72;
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      uint64_t v51 = v8[13];
      __dst = &a1[v51];
      uint64_t v52 = &a2[v51];
      uint64_t v53 = sub_24E474818();
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71(v52, 1, v53))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(__dst, v52, *(void *)(*(void *)(v55 - 8) + 64));
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
      }
      else
      {
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
        v56(__dst, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v53);
      }
      v56(&a1[v8[14]], &a2[v8[14]], v53);
      uint64_t v58 = v8[15];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(&a2[v58], 1, v70))
      {
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        v67(v59, v60, v70);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v59, 0, 1, v70);
      }
      uint64_t v62 = v8[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      a1[v8[17]] = a2[v8[17]];
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 1u:
    case 2u:
      uint64_t v22 = sub_24E474878();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_21;
    case 3u:
      uint64_t v23 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v23;
      swift_bridgeObjectRetain();
      uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88) + 48);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_24E474818();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      goto LABEL_21;
    case 4u:
      uint64_t v30 = sub_24E474878();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48);
      uint64_t v32 = (void **)&a1[v31];
      uint64_t v33 = (void **)&a2[v31];
      type metadata accessor for Fence.TriggerPosition(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v57 = sub_24E474818();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v57 - 8) + 16))(v32, v33, v57);
      }
      else
      {
        uint64_t v34 = *v33;
        *uint64_t v32 = *v33;
        id v35 = v34;
      }
      swift_storeEnumTagMultiPayload();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for FenceClientRequest(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E467670((uint64_t)a1, type metadata accessor for FenceClientRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24E474878();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v55(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for Fence(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = *((void *)v11 + 1);
        a1[v8[6]] = a2[v8[6]];
        a1[v8[7]] = a2[v8[7]];
        uint64_t v12 = v8[8];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = type metadata accessor for Fence.Variant(0);
        swift_bridgeObjectRetain();
        uint64_t v57 = v7;
        uint64_t v58 = v6;
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
          v13[32] = v14[32];
          uint64_t v16 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
          long long v17 = &v13[v16];
          uint64_t v18 = &v14[v16];
          uint64_t v19 = sub_24E4749A8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        }
        a1[v8[9]] = a2[v8[9]];
        uint64_t v33 = v8[10];
        uint64_t v34 = &a1[v33];
        id v35 = (long long *)&a2[v33];
        long long v36 = *v35;
        *(_OWORD *)(v34 + 9) = *(long long *)((char *)v35 + 9);
        *(_OWORD *)uint64_t v34 = v36;
        uint64_t v37 = v8[11];
        id v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        *(void *)id v38 = *(void *)v39;
        *((void *)v38 + 1) = *((void *)v39 + 1);
        *((void *)v38 + 2) = *((void *)v39 + 2);
        *((void *)v38 + 3) = *((void *)v39 + 3);
        *((void *)v38 + 4) = *((void *)v39 + 4);
        *((void *)v38 + 5) = *((void *)v39 + 5);
        *((void *)v38 + 6) = *((void *)v39 + 6);
        *((void *)v38 + 7) = *((void *)v39 + 7);
        *((void *)v38 + 8) = *((void *)v39 + 8);
        *((void *)v38 + 9) = *((void *)v39 + 9);
        *((void *)v38 + 10) = *((void *)v39 + 10);
        *((void *)v38 + 11) = *((void *)v39 + 11);
        *((void *)v38 + 12) = *((void *)v39 + 12);
        *((void *)v38 + 13) = *((void *)v39 + 13);
        *((void *)v38 + 14) = *((void *)v39 + 14);
        *((void *)v38 + 15) = *((void *)v39 + 15);
        *((void *)v38 + 16) = *((void *)v39 + 16);
        *((void *)v38 + 17) = *((void *)v39 + 17);
        *((void *)v38 + 18) = *((void *)v39 + 18);
        *((void *)v38 + 19) = *((void *)v39 + 19);
        *((void *)v38 + 20) = *((void *)v39 + 20);
        *((void *)v38 + 21) = *((void *)v39 + 21);
        *((void *)v38 + 22) = *((void *)v39 + 22);
        *((void *)v38 + 23) = *((void *)v39 + 23);
        *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
        uint64_t v40 = v8[13];
        __dst = &a1[v40];
        uint64_t v41 = &a2[v40];
        uint64_t v42 = sub_24E474818();
        uint64_t v43 = *(void *)(v42 - 8);
        uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v59(v41, 1, v42))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
          memcpy(__dst, v41, *(void *)(*(void *)(v44 - 8) + 64));
          uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
        }
        else
        {
          uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
          v45(__dst, v41, v42);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
        }
        v45(&a1[v8[14]], &a2[v8[14]], v42);
        uint64_t v47 = v8[15];
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(&a2[v47], 1, v58))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          v55(v48, v49, v58);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v48, 0, 1, v58);
        }
        uint64_t v51 = v8[16];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        *(void *)uint64_t v52 = *(void *)v53;
        *((void *)v52 + 1) = *((void *)v53 + 1);
        a1[v8[17]] = a2[v8[17]];
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 1u:
      case 2u:
        uint64_t v20 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_22;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88) + 48);
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        uint64_t v24 = sub_24E474818();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        goto LABEL_22;
      case 4u:
        uint64_t v27 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48);
        uint64_t v29 = (void **)&a1[v28];
        uint64_t v30 = (void **)&a2[v28];
        type metadata accessor for Fence.TriggerPosition(0);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v46 = sub_24E474818();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v46 - 8) + 16))(v29, v30, v46);
        }
        else
        {
          uint64_t v31 = *v30;
          *uint64_t v29 = *v30;
          id v32 = v31;
        }
        swift_storeEnumTagMultiPayload();
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for FenceClientRequest(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24E474878();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v55(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for Fence(0);
      *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
      a1[v8[6]] = a2[v8[6]];
      a1[v8[7]] = a2[v8[7]];
      uint64_t v9 = v8[8];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for Fence.Variant(0);
      uint64_t v56 = v7;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v13 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v13;
        v10[32] = v11[32];
        uint64_t v14 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v15 = &v10[v14];
        uint64_t v16 = &v11[v14];
        uint64_t v17 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      a1[v8[9]] = a2[v8[9]];
      uint64_t v31 = v8[10];
      id v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      *(_OWORD *)id v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 9) = *(_OWORD *)(v33 + 9);
      uint64_t v34 = v8[11];
      id v35 = &a1[v34];
      long long v36 = &a2[v34];
      long long v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)id v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      long long v38 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v38;
      long long v39 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v39;
      long long v40 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v40;
      long long v41 = *((_OWORD *)v36 + 11);
      *((_OWORD *)v35 + 10) = *((_OWORD *)v36 + 10);
      *((_OWORD *)v35 + 11) = v41;
      long long v42 = *((_OWORD *)v36 + 9);
      *((_OWORD *)v35 + 8) = *((_OWORD *)v36 + 8);
      *((_OWORD *)v35 + 9) = v42;
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      uint64_t v43 = v8[13];
      uint64_t v44 = &a1[v43];
      uint64_t v45 = &a2[v43];
      uint64_t v46 = sub_24E474818();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&a1[v8[14]], &a2[v8[14]], v46);
      }
      else
      {
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        v49(v44, v45, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        v49(&a1[v8[14]], &a2[v8[14]], v46);
      }
      uint64_t v50 = v8[15];
      uint64_t v51 = &a1[v50];
      uint64_t v52 = &a2[v50];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(&a2[v50], 1, v6))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v55(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v51, 0, 1, v6);
      }
      *(_OWORD *)&a1[v8[16]] = *(_OWORD *)&a2[v8[16]];
      a1[v8[17]] = a2[v8[17]];
      goto LABEL_20;
    case 1u:
    case 2u:
      uint64_t v18 = sub_24E474878();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_20;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88) + 48);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_24E474818();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      goto LABEL_20;
    case 4u:
      uint64_t v25 = sub_24E474878();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = type metadata accessor for Fence.TriggerPosition(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v30 = sub_24E474818();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for FenceClientRequest(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E467670((uint64_t)a1, type metadata accessor for FenceClientRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24E474878();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v55(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for Fence(0);
        *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
        a1[v8[6]] = a2[v8[6]];
        a1[v8[7]] = a2[v8[7]];
        uint64_t v9 = v8[8];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = type metadata accessor for Fence.Variant(0);
        uint64_t v56 = v7;
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          long long v13 = *((_OWORD *)v11 + 1);
          *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v13;
          v10[32] = v11[32];
          uint64_t v14 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
          uint64_t v15 = &v10[v14];
          uint64_t v16 = &v11[v14];
          uint64_t v17 = sub_24E4749A8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        a1[v8[9]] = a2[v8[9]];
        uint64_t v31 = v8[10];
        id v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        *(_OWORD *)id v32 = *(_OWORD *)v33;
        *(_OWORD *)(v32 + 9) = *(_OWORD *)(v33 + 9);
        uint64_t v34 = v8[11];
        id v35 = &a1[v34];
        long long v36 = &a2[v34];
        long long v37 = *((_OWORD *)v36 + 1);
        *(_OWORD *)id v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v37;
        long long v38 = *((_OWORD *)v36 + 3);
        *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
        *((_OWORD *)v35 + 3) = v38;
        long long v39 = *((_OWORD *)v36 + 7);
        *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
        *((_OWORD *)v35 + 7) = v39;
        long long v40 = *((_OWORD *)v36 + 5);
        *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
        *((_OWORD *)v35 + 5) = v40;
        long long v41 = *((_OWORD *)v36 + 11);
        *((_OWORD *)v35 + 10) = *((_OWORD *)v36 + 10);
        *((_OWORD *)v35 + 11) = v41;
        long long v42 = *((_OWORD *)v36 + 9);
        *((_OWORD *)v35 + 8) = *((_OWORD *)v36 + 8);
        *((_OWORD *)v35 + 9) = v42;
        *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
        uint64_t v43 = v8[13];
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        uint64_t v46 = sub_24E474818();
        uint64_t v47 = *(void *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&a1[v8[14]], &a2[v8[14]], v46);
        }
        else
        {
          uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
          v49(v44, v45, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          v49(&a1[v8[14]], &a2[v8[14]], v46);
        }
        uint64_t v50 = v8[15];
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(&a2[v50], 1, v6))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          v55(v51, v52, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v51, 0, 1, v6);
        }
        *(_OWORD *)&a1[v8[16]] = *(_OWORD *)&a2[v8[16]];
        a1[v8[17]] = a2[v8[17]];
        goto LABEL_21;
      case 1u:
      case 2u:
        uint64_t v18 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        goto LABEL_21;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA88) + 48);
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_24E474818();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        goto LABEL_21;
      case 4u:
        uint64_t v25 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698DAA78) + 48);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = type metadata accessor for Fence.TriggerPosition(0);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v30 = sub_24E474818();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_24E46D620()
{
  uint64_t v0 = type metadata accessor for Fence(319);
  if (v1 <= 0x3F)
  {
    uint64_t v8 = *(void *)(v0 - 8) + 64;
    uint64_t v2 = sub_24E474878();
    if (v3 <= 0x3F)
    {
      uint64_t v9 = *(void *)(v2 - 8) + 64;
      uint64_t v10 = v9;
      sub_24E46FBD4(319, (unint64_t *)&qword_26B1BA080, MEMORY[0x263F07490]);
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v11 = &v7;
        type metadata accessor for Fence.TriggerPosition(319);
        if (v5 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v12 = &v6;
          swift_initEnumMetadataMultiPayload();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for FenceDaemonRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FenceDaemonRequest()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for FenceDaemonRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for FenceDaemonRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FenceDaemonRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FenceDaemonRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FenceDaemonRequest()
{
  return &type metadata for FenceDaemonRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for FenceResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v26 = type metadata accessor for Fence.TriggerID(0);
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48))(a2, 1, v26))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8518);
        memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v51 = sub_24E474878();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24E474878();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v60 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16);
      v60(a1, a2, v8);
      uint64_t v10 = (int *)type metadata accessor for Fence(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (uint64_t *)((char *)a1 + v11);
      long long v13 = (uint64_t *)((char *)a2 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      *((unsigned char *)a1 + v10[7]) = *((unsigned char *)a2 + v10[7]);
      uint64_t v15 = v10[8];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for Fence.Variant(0);
      swift_bridgeObjectRetain();
      uint64_t v65 = v9;
      uint64_t v66 = v8;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v19 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v19;
        v16[32] = v17[32];
        uint64_t v20 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v21 = &v16[v20];
        uint64_t v22 = &v17[v20];
        uint64_t v23 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      *((unsigned char *)a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
      uint64_t v29 = v10[10];
      uint64_t v30 = (_OWORD *)((char *)a1 + v29);
      uint64_t v31 = (_OWORD *)((char *)a2 + v29);
      *uint64_t v30 = *v31;
      *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)v31 + 9);
      uint64_t v32 = v10[11];
      uint64_t v33 = (uint64_t *)((char *)a1 + v32);
      uint64_t v34 = (uint64_t *)((char *)a2 + v32);
      uint64_t v35 = v34[1];
      void *v33 = *v34;
      v33[1] = v35;
      uint64_t v36 = v34[3];
      void v33[2] = v34[2];
      v33[3] = v36;
      uint64_t v37 = v34[5];
      v33[4] = v34[4];
      v33[5] = v37;
      uint64_t v38 = v34[7];
      v33[6] = v34[6];
      v33[7] = v38;
      uint64_t v39 = v34[9];
      v33[8] = v34[8];
      v33[9] = v39;
      uint64_t v40 = v34[11];
      v33[10] = v34[10];
      v33[11] = v40;
      uint64_t v63 = v34[13];
      v33[12] = v34[12];
      v33[13] = v63;
      uint64_t v41 = v34[15];
      v33[14] = v34[14];
      v33[15] = v41;
      uint64_t v42 = v34[17];
      unsigned __int8 v33[16] = v34[16];
      v33[17] = v42;
      uint64_t v43 = v34[19];
      v33[18] = v34[18];
      v33[19] = v43;
      uint64_t v44 = v34[21];
      v33[20] = v34[20];
      v33[21] = v44;
      uint64_t v62 = v34[23];
      v33[22] = v34[22];
      v33[23] = v62;
      *(uint64_t *)((char *)a1 + v10[12]) = *(uint64_t *)((char *)a2 + v10[12]);
      uint64_t v45 = v10[13];
      uint64_t v64 = (char *)a1 + v45;
      uint64_t v46 = (char *)a2 + v45;
      uint64_t v47 = sub_24E474818();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v61(v46, 1, v47))
      {
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v64, v46, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
      }
      else
      {
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
        v50(v64, v46, v47);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v64, 0, 1, v47);
      }
      v50((char *)a1 + v10[14], (char *)a2 + v10[14], v47);
      uint64_t v52 = v10[15];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))((char *)a2 + v52, 1, v66))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        v60((uint64_t *)v53, (uint64_t *)v54, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v53, 0, 1, v66);
      }
      uint64_t v56 = v10[16];
      uint64_t v57 = (uint64_t *)((char *)a1 + v56);
      uint64_t v58 = (uint64_t *)((char *)a2 + v56);
      uint64_t v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      *((unsigned char *)a1 + v10[17]) = *((unsigned char *)a2 + v10[17]);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for FenceResponse(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v16 = type metadata accessor for Fence.TriggerID(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(a1, 1, v16);
    if (!result)
    {
      uint64_t v17 = sub_24E474878();
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
      return v18(a1, v17);
    }
  }
  else
  {
    if (result != 1)
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_24E474878();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v5(a1, v3);
      uint64_t v6 = (int *)type metadata accessor for Fence(0);
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + v6[8];
      type metadata accessor for Fence.Variant(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v8 = v7 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v9 = sub_24E4749A8();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + v6[13];
      uint64_t v11 = sub_24E474818();
      uint64_t v12 = *(void *)(v11 - 8);
      int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      if (!v13) {
        v14(v10, v11);
      }
      v14(a1 + v6[14], v11);
      uint64_t v15 = a1 + v6[15];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3)) {
        v5(v15, v3);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for FenceResponse(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v23 = type metadata accessor for Fence.TriggerID(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(a2, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8518);
        memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v48 = sub_24E474878();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
      }
      goto LABEL_20;
    case 1:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0:
      uint64_t v7 = sub_24E474878();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v58((char *)a1, (char *)a2, v7);
      uint64_t v9 = (int *)type metadata accessor for Fence(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (void *)((char *)a1 + v10);
      uint64_t v12 = (void *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v13;
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
      uint64_t v14 = v9[8];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for Fence.Variant(0);
      swift_bridgeObjectRetain();
      uint64_t v62 = v7;
      uint64_t v64 = v8;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v18 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v18;
        v15[32] = v16[32];
        uint64_t v19 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v20 = &v15[v19];
        uint64_t v21 = &v16[v19];
        uint64_t v22 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
      uint64_t v26 = v9[10];
      uint64_t v27 = (_OWORD *)((char *)a1 + v26);
      uint64_t v28 = (_OWORD *)((char *)a2 + v26);
      *uint64_t v27 = *v28;
      *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v28 + 9);
      uint64_t v29 = v9[11];
      uint64_t v30 = (void *)((char *)a1 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v31[3];
      v30[2] = v31[2];
      v30[3] = v33;
      uint64_t v34 = v31[5];
      v30[4] = v31[4];
      v30[5] = v34;
      uint64_t v35 = v31[7];
      v30[6] = v31[6];
      v30[7] = v35;
      uint64_t v36 = v31[9];
      v30[8] = v31[8];
      v30[9] = v36;
      uint64_t v37 = v31[11];
      v30[10] = v31[10];
      v30[11] = v37;
      uint64_t v61 = v31[13];
      v30[12] = v31[12];
      v30[13] = v61;
      uint64_t v38 = v31[15];
      v30[14] = v31[14];
      v30[15] = v38;
      uint64_t v39 = v31[17];
      v30[16] = v31[16];
      void v30[17] = v39;
      uint64_t v40 = v31[19];
      v30[18] = v31[18];
      v30[19] = v40;
      uint64_t v41 = v31[21];
      v30[20] = v31[20];
      v30[21] = v41;
      uint64_t v60 = v31[23];
      v30[22] = v31[22];
      v30[23] = v60;
      *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
      uint64_t v42 = v9[13];
      uint64_t v63 = (char *)a1 + v42;
      uint64_t v43 = (char *)a2 + v42;
      uint64_t v44 = sub_24E474818();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59(v43, 1, v44))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v63, v43, *(void *)(*(void *)(v46 - 8) + 64));
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      }
      else
      {
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
        v47(v63, v43, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v63, 0, 1, v44);
      }
      v47((char *)a1 + v9[14], (char *)a2 + v9[14], v44);
      uint64_t v49 = v9[15];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))((char *)a2 + v49, 1, v62))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        v58(v50, v51, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v50, 0, 1, v62);
      }
      uint64_t v53 = v9[16];
      uint64_t v54 = (void *)((char *)a1 + v53);
      uint64_t v55 = (void *)((char *)a2 + v53);
      uint64_t v56 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v56;
      *((unsigned char *)a1 + v9[17]) = *((unsigned char *)a2 + v9[17]);
      swift_bridgeObjectRetain();
      goto LABEL_20;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for FenceResponse(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_24E467670((uint64_t)a1, type metadata accessor for FenceResponse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v21 = type metadata accessor for Fence.TriggerID(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(a2, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8518);
        memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v37 = sub_24E474878();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
      }
      goto LABEL_21;
    case 1:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0:
      uint64_t v7 = sub_24E474878();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v46((char *)a1, (char *)a2, v7);
      uint64_t v9 = (int *)type metadata accessor for Fence(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (void *)((char *)a1 + v10);
      uint64_t v12 = (void *)((char *)a2 + v10);
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
      uint64_t v13 = v9[8];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for Fence.Variant(0);
      swift_bridgeObjectRetain();
      uint64_t v49 = v7;
      uint64_t v48 = v8;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        v14[32] = v15[32];
        uint64_t v17 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        long long v18 = &v14[v17];
        uint64_t v19 = &v15[v17];
        uint64_t v20 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
      uint64_t v24 = v9[10];
      uint64_t v25 = (_OWORD *)((char *)a1 + v24);
      uint64_t v26 = (long long *)((char *)a2 + v24);
      long long v27 = *v26;
      *(_OWORD *)((char *)v25 + 9) = *(long long *)((char *)v26 + 9);
      *uint64_t v25 = v27;
      uint64_t v28 = v9[11];
      uint64_t v29 = (void *)((char *)a1 + v28);
      uint64_t v30 = (void *)((char *)a2 + v28);
      *uint64_t v29 = *v30;
      v29[1] = v30[1];
      v29[2] = v30[2];
      v29[3] = v30[3];
      v29[4] = v30[4];
      void v29[5] = v30[5];
      v29[6] = v30[6];
      v29[7] = v30[7];
      v29[8] = v30[8];
      v29[9] = v30[9];
      v29[10] = v30[10];
      v29[11] = v30[11];
      v29[12] = v30[12];
      v29[13] = v30[13];
      v29[14] = v30[14];
      v29[15] = v30[15];
      v29[16] = v30[16];
      v29[17] = v30[17];
      v29[18] = v30[18];
      v29[19] = v30[19];
      v29[20] = v30[20];
      v29[21] = v30[21];
      v29[22] = v30[22];
      v29[23] = v30[23];
      *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
      uint64_t v31 = v9[13];
      __dst = (char *)a1 + v31;
      uint64_t v32 = (char *)a2 + v31;
      uint64_t v33 = sub_24E474818();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50(v32, 1, v33))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      }
      else
      {
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
        v36(__dst, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
      }
      v36((char *)a1 + v9[14], (char *)a2 + v9[14], v33);
      uint64_t v38 = v9[15];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))((char *)a2 + v38, 1, v49))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v46(v39, v40, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v39, 0, 1, v49);
      }
      uint64_t v42 = v9[16];
      uint64_t v43 = (void *)((char *)a1 + v42);
      uint64_t v44 = (void *)((char *)a2 + v42);
      *uint64_t v43 = *v44;
      v43[1] = v44[1];
      *((unsigned char *)a1 + v9[17]) = *((unsigned char *)a2 + v9[17]);
      swift_bridgeObjectRetain();
      goto LABEL_21;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *initializeWithTake for FenceResponse(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v19 = type metadata accessor for Fence.TriggerID(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8518);
      memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v40 = sub_24E474878();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
    }
LABEL_18:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_24E474878();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v47(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for Fence(0);
    *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
    a1[v9[6]] = a2[v9[6]];
    a1[v9[7]] = a2[v9[7]];
    uint64_t v10 = v9[8];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Fence.Variant(0);
    uint64_t v48 = v8;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v14 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v14;
      v11[32] = v12[32];
      uint64_t v15 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      uint64_t v16 = &v11[v15];
      uint64_t v17 = &v12[v15];
      uint64_t v18 = sub_24E4749A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    a1[v9[9]] = a2[v9[9]];
    uint64_t v22 = v9[10];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    uint64_t v25 = v9[11];
    uint64_t v26 = &a1[v25];
    long long v27 = &a2[v25];
    long long v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v28;
    long long v29 = *((_OWORD *)v27 + 3);
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    *((_OWORD *)v26 + 3) = v29;
    long long v30 = *((_OWORD *)v27 + 7);
    *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
    *((_OWORD *)v26 + 7) = v30;
    long long v31 = *((_OWORD *)v27 + 5);
    *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
    *((_OWORD *)v26 + 5) = v31;
    long long v32 = *((_OWORD *)v27 + 11);
    *((_OWORD *)v26 + 10) = *((_OWORD *)v27 + 10);
    *((_OWORD *)v26 + 11) = v32;
    long long v33 = *((_OWORD *)v27 + 9);
    *((_OWORD *)v26 + 8) = *((_OWORD *)v27 + 8);
    *((_OWORD *)v26 + 9) = v33;
    *(void *)&a1[v9[12]] = *(void *)&a2[v9[12]];
    uint64_t v34 = v9[13];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = sub_24E474818();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&a1[v9[14]], &a2[v9[14]], v37);
    }
    else
    {
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v41(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      v41(&a1[v9[14]], &a2[v9[14]], v37);
    }
    uint64_t v42 = v9[15];
    uint64_t v43 = &a1[v42];
    uint64_t v44 = &a2[v42];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(&a2[v42], 1, v7))
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      v47(v43, v44, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v43, 0, 1, v7);
    }
    *(_OWORD *)&a1[v9[16]] = *(_OWORD *)&a2[v9[16]];
    a1[v9[17]] = a2[v9[17]];
    goto LABEL_18;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for FenceResponse(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E467670((uint64_t)a1, type metadata accessor for FenceResponse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v19 = type metadata accessor for Fence.TriggerID(0);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B8518);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v40 = sub_24E474878();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      }
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_24E474878();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v47(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for Fence(0);
      *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
      a1[v9[6]] = a2[v9[6]];
      a1[v9[7]] = a2[v9[7]];
      uint64_t v10 = v9[8];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for Fence.Variant(0);
      uint64_t v48 = v8;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v14 = *((_OWORD *)v12 + 1);
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v14;
        v11[32] = v12[32];
        uint64_t v15 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
        uint64_t v16 = &v11[v15];
        uint64_t v17 = &v12[v15];
        uint64_t v18 = sub_24E4749A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
      a1[v9[9]] = a2[v9[9]];
      uint64_t v22 = v9[10];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
      uint64_t v25 = v9[11];
      uint64_t v26 = &a1[v25];
      long long v27 = &a2[v25];
      long long v28 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v28;
      long long v29 = *((_OWORD *)v27 + 3);
      *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
      *((_OWORD *)v26 + 3) = v29;
      long long v30 = *((_OWORD *)v27 + 7);
      *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
      *((_OWORD *)v26 + 7) = v30;
      long long v31 = *((_OWORD *)v27 + 5);
      *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
      *((_OWORD *)v26 + 5) = v31;
      long long v32 = *((_OWORD *)v27 + 11);
      *((_OWORD *)v26 + 10) = *((_OWORD *)v27 + 10);
      *((_OWORD *)v26 + 11) = v32;
      long long v33 = *((_OWORD *)v27 + 9);
      *((_OWORD *)v26 + 8) = *((_OWORD *)v27 + 8);
      *((_OWORD *)v26 + 9) = v33;
      *(void *)&a1[v9[12]] = *(void *)&a2[v9[12]];
      uint64_t v34 = v9[13];
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = sub_24E474818();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&a1[v9[14]], &a2[v9[14]], v37);
      }
      else
      {
        uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v41(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        v41(&a1[v9[14]], &a2[v9[14]], v37);
      }
      uint64_t v42 = v9[15];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(&a2[v42], 1, v7))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698DAAC8);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        v47(v43, v44, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v43, 0, 1, v7);
      }
      *(_OWORD *)&a1[v9[16]] = *(_OWORD *)&a2[v9[16]];
      a1[v9[17]] = a2[v9[17]];
      goto LABEL_19;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_24E46FAE8()
{
  type metadata accessor for Fence(319);
  if (v0 <= 0x3F)
  {
    sub_24E46FBD4(319, &qword_26B1B8520, (void (*)(uint64_t))type metadata accessor for Fence.TriggerID);
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_24E46FBD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24E474DD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FenceResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E46FCF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FenceResponse.CodingKeys()
{
  return &type metadata for FenceResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FenceResponse.VoidCodingKeys()
{
  return &type metadata for FenceResponse.VoidCodingKeys;
}

ValueMetadata *type metadata accessor for FenceResponse.FenceCodingKeys()
{
  return &type metadata for FenceResponse.FenceCodingKeys;
}

ValueMetadata *type metadata accessor for FenceResponse.FencesCodingKeys()
{
  return &type metadata for FenceResponse.FencesCodingKeys;
}

ValueMetadata *type metadata accessor for FenceResponse.TriggerIDCodingKeys()
{
  return &type metadata for FenceResponse.TriggerIDCodingKeys;
}

ValueMetadata *type metadata accessor for FenceDaemonRequest.CodingKeys()
{
  return &type metadata for FenceDaemonRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FenceDaemonRequest.FencesUpdatedCodingKeys()
{
  return &type metadata for FenceDaemonRequest.FencesUpdatedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FenceClientRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E46FE5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FenceClientRequest.CodingKeys()
{
  return &type metadata for FenceClientRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FenceClientRequest.SaveFenceCodingKeys()
{
  return &type metadata for FenceClientRequest.SaveFenceCodingKeys;
}

ValueMetadata *type metadata accessor for FenceClientRequest.DeleteFenceCodingKeys()
{
  return &type metadata for FenceClientRequest.DeleteFenceCodingKeys;
}

ValueMetadata *type metadata accessor for FenceClientRequest.FencesCodingKeys()
{
  return &type metadata for FenceClientRequest.FencesCodingKeys;
}

unsigned char *_s12FindMyLocate13FenceResponseO15FenceCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E46FF60);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FenceClientRequest.AcceptFenceCodingKeys()
{
  return &type metadata for FenceClientRequest.AcceptFenceCodingKeys;
}

ValueMetadata *type metadata accessor for FenceClientRequest.MuteFencesCodingKeys()
{
  return &type metadata for FenceClientRequest.MuteFencesCodingKeys;
}

unsigned char *_s12FindMyLocate18FenceClientRequestO20MuteFencesCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E470078);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FenceClientRequest.TriggerFenceCodingKeys()
{
  return &type metadata for FenceClientRequest.TriggerFenceCodingKeys;
}

ValueMetadata *type metadata accessor for FenceClientRequest.StartStreamingCodingKeys()
{
  return &type metadata for FenceClientRequest.StartStreamingCodingKeys;
}

ValueMetadata *type metadata accessor for FenceClientRequest.ForceRefreshClientCodingKeys()
{
  return &type metadata for FenceClientRequest.ForceRefreshClientCodingKeys;
}

unint64_t sub_24E4700D4()
{
  unint64_t result = qword_2698DC968;
  if (!qword_2698DC968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC968);
  }
  return result;
}

unint64_t sub_24E47012C()
{
  unint64_t result = qword_2698DC970;
  if (!qword_2698DC970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC970);
  }
  return result;
}

unint64_t sub_24E470184()
{
  unint64_t result = qword_2698DC978;
  if (!qword_2698DC978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC978);
  }
  return result;
}

unint64_t sub_24E4701DC()
{
  unint64_t result = qword_2698DC980;
  if (!qword_2698DC980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC980);
  }
  return result;
}

unint64_t sub_24E470234()
{
  unint64_t result = qword_2698DC988;
  if (!qword_2698DC988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC988);
  }
  return result;
}

unint64_t sub_24E47028C()
{
  unint64_t result = qword_2698DC990;
  if (!qword_2698DC990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC990);
  }
  return result;
}

unint64_t sub_24E4702E4()
{
  unint64_t result = qword_2698DC998;
  if (!qword_2698DC998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC998);
  }
  return result;
}

unint64_t sub_24E47033C()
{
  unint64_t result = qword_2698DC9A0;
  if (!qword_2698DC9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC9A0);
  }
  return result;
}

unint64_t sub_24E470394()
{
  unint64_t result = qword_2698DC9A8;
  if (!qword_2698DC9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC9A8);
  }
  return result;
}

unint64_t sub_24E4703EC()
{
  unint64_t result = qword_2698DC9B0;
  if (!qword_2698DC9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC9B0);
  }
  return result;
}

unint64_t sub_24E470444()
{
  unint64_t result = qword_2698DC9B8;
  if (!qword_2698DC9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC9B8);
  }
  return result;
}

unint64_t sub_24E47049C()
{
  unint64_t result = qword_2698DC9C0;
  if (!qword_2698DC9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698DC9C0);
  }
  return result;
}

unint64_t sub_24E4704F4()
{
  unint64_t result = qword_26B1B83C8;
  if (!qword_26B1B83C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83C8);
  }
  return result;
}

unint64_t sub_24E47054C()
{
  unint64_t result = qword_26B1B83C0;
  if (!qword_26B1B83C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83C0);
  }
  return result;
}

unint64_t sub_24E4705A4()
{
  unint64_t result = qword_26B1B8398;
  if (!qword_26B1B8398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8398);
  }
  return result;
}

unint64_t sub_24E4705FC()
{
  unint64_t result = qword_26B1B8390;
  if (!qword_26B1B8390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8390);
  }
  return result;
}

unint64_t sub_24E470654()
{
  unint64_t result = qword_26B1B83E0;
  if (!qword_26B1B83E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83E0);
  }
  return result;
}

unint64_t sub_24E4706AC()
{
  unint64_t result = qword_26B1B83D8;
  if (!qword_26B1B83D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83D8);
  }
  return result;
}

unint64_t sub_24E470704()
{
  unint64_t result = qword_26B1B83F0;
  if (!qword_26B1B83F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83F0);
  }
  return result;
}

unint64_t sub_24E47075C()
{
  unint64_t result = qword_26B1B83E8;
  if (!qword_26B1B83E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83E8);
  }
  return result;
}

unint64_t sub_24E4707B4()
{
  unint64_t result = qword_26B1B83B0;
  if (!qword_26B1B83B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83B0);
  }
  return result;
}

unint64_t sub_24E47080C()
{
  unint64_t result = qword_26B1B83A8;
  if (!qword_26B1B83A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B83A8);
  }
  return result;
}

unint64_t sub_24E470864()
{
  unint64_t result = qword_26B1B84D0;
  if (!qword_26B1B84D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84D0);
  }
  return result;
}

unint64_t sub_24E4708BC()
{
  unint64_t result = qword_26B1B84C8;
  if (!qword_26B1B84C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84C8);
  }
  return result;
}

unint64_t sub_24E470914()
{
  unint64_t result = qword_26B1B84B8;
  if (!qword_26B1B84B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84B8);
  }
  return result;
}

unint64_t sub_24E47096C()
{
  unint64_t result = qword_26B1B84B0;
  if (!qword_26B1B84B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84B0);
  }
  return result;
}

unint64_t sub_24E4709C4()
{
  unint64_t result = qword_26B1B8418;
  if (!qword_26B1B8418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8418);
  }
  return result;
}

unint64_t sub_24E470A1C()
{
  unint64_t result = qword_26B1B8410;
  if (!qword_26B1B8410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8410);
  }
  return result;
}

unint64_t sub_24E470A74()
{
  unint64_t result = qword_26B1B8438;
  if (!qword_26B1B8438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8438);
  }
  return result;
}

unint64_t sub_24E470ACC()
{
  unint64_t result = qword_26B1B8430;
  if (!qword_26B1B8430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8430);
  }
  return result;
}

unint64_t sub_24E470B24()
{
  unint64_t result = qword_26B1B8478;
  if (!qword_26B1B8478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8478);
  }
  return result;
}

unint64_t sub_24E470B7C()
{
  unint64_t result = qword_26B1B8470;
  if (!qword_26B1B8470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8470);
  }
  return result;
}

unint64_t sub_24E470BD4()
{
  unint64_t result = qword_26B1B8428;
  if (!qword_26B1B8428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8428);
  }
  return result;
}

unint64_t sub_24E470C2C()
{
  unint64_t result = qword_26B1B8420;
  if (!qword_26B1B8420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8420);
  }
  return result;
}

unint64_t sub_24E470C84()
{
  unint64_t result = qword_26B1B8488;
  if (!qword_26B1B8488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8488);
  }
  return result;
}

unint64_t sub_24E470CDC()
{
  unint64_t result = qword_26B1B8480;
  if (!qword_26B1B8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8480);
  }
  return result;
}

unint64_t sub_24E470D34()
{
  unint64_t result = qword_26B1B8448;
  if (!qword_26B1B8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8448);
  }
  return result;
}

unint64_t sub_24E470D8C()
{
  unint64_t result = qword_26B1B8440;
  if (!qword_26B1B8440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8440);
  }
  return result;
}

unint64_t sub_24E470DE4()
{
  unint64_t result = qword_26B1B84A0;
  if (!qword_26B1B84A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B84A0);
  }
  return result;
}

unint64_t sub_24E470E3C()
{
  unint64_t result = qword_26B1B8498;
  if (!qword_26B1B8498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8498);
  }
  return result;
}

unint64_t sub_24E470E94()
{
  unint64_t result = qword_26B1B8250;
  if (!qword_26B1B8250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8250);
  }
  return result;
}

unint64_t sub_24E470EEC()
{
  unint64_t result = qword_26B1B8408;
  if (!qword_26B1B8408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8408);
  }
  return result;
}

unint64_t sub_24E470F44()
{
  unint64_t result = qword_26B1B8460;
  if (!qword_26B1B8460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8460);
  }
  return result;
}

unint64_t sub_24E470F9C()
{
  unint64_t result = qword_26B1B8458;
  if (!qword_26B1B8458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1B8458);
  }
  return result;
}

uint64_t sub_24E470FF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E654665766173 && a2 == 0xE900000000000065;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65466574656C6564 && a2 == 0xEB0000000065636ELL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365636E6566 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6546747065636361 && a2 == 0xEB0000000065636ELL || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x636E65466574756DLL && a2 == 0xEA00000000007365 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4672656767697274 && a2 == 0xEC00000065636E65 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7274537472617473 && a2 == 0xEE00676E696D6165 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024E478BC0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_24E4713B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446C69746E75 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E4714A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E471584(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684631414 && a2 == 0xE400000000000000;
  if (v2 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6566 && a2 == 0xE500000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365636E6566 && a2 == 0xE600000000000000 || (sub_24E475148() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656767697274 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24E475148();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t dispatch thunk of FriendshipProtocol.respondToInviteRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E380080;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.friends(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E472C94;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.friendshipState(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E380080;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.offerExpiration(for:fromHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 40) + **(int **)(a5 + 40));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_24E380080;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of FriendshipProtocol.offerExpiration(for:groupId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 48)
                                                                                     + **(int **)(a6 + 48));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_24E380080;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of FriendshipProtocol.sendFriendshipOffer(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 56) + **(int **)(a4 + 56));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E380080;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.sendFriendshipInvite(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E380080;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.stopSharingMyLocation(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 72) + **(int **)(a4 + 72));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E3801B0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.peerToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 80) + **(int **)(a3 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E472C94;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.ownerToken()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 88) + **(int **)(a2 + 88));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E4721C0;
  return v7(a1, a2);
}

uint64_t sub_24E4721C0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of FriendshipProtocol.startRanging(handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 96) + **(int **)(a3 + 96));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.startOwnerRanging()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 104) + **(int **)(a2 + 104));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E380080;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.stopRanging()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 112) + **(int **)(a2 + 112));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E380080;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.resetTokenDatabase()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 120) + **(int **)(a2 + 120));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E380080;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.removePeerToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 128) + **(int **)(a3 + 128));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.requestOwnerToken(force:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 136) + **(int **)(a3 + 136));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.stopConfigRangingSession()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 144) + **(int **)(a2 + 144));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E380080;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipServiceClientProtocol.updateFriends(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipServiceClientProtocol.didDiscover(nearbyObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipServiceClientProtocol.didUpdate(nearbyObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationProtocol.stopRefreshingLocation(for:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E3801B0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of LocationProtocol.stopRefreshingAllLocations()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E380080;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LocationProtocol.locations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E472C94;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationProtocol.subscribeToBackgroundProactiveLocations()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E472C94;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LocationProtocol.latestLocations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E472C94;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationServiceClientProtocol.locationsForHandles(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationServiceClientProtocol.locationsUnavailable(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.setActiveLocationSharingDevice(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E380080;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SettingsProtocol.hideMyLocation(hidden:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E3801B0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.allowFriendshipRequests(allowed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.activeLocationSharingDevice(cached:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24E380080;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SettingsProtocol.thisDeviceWithCompanion()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.isMyLocationEnabled(cached:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E4721C0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.areFriendshipRequestsAllowed(cached:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E472C94;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.startMonitoringPreferencesChangeForClient()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 64) + **(int **)(a2 + 64));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E380080;
  return v7(a1, a2);
}

uint64_t dispatch thunk of SettingsProtocol.allDevices(cached:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E4721C0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsServiceClientProtocol.meDeviceUpdated(meDevice:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsServiceClientProtocol.preferencesUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24E380080;
  return v9(a1, a2, a3);
}

uint64_t static Date.trustedNow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (MEMORY[0x25333A660](v3))
  {
    if (qword_2698DA6D0 != -1) {
      swift_once();
    }
    uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_2698DCB08);
    swift_beginAccess();
    sub_24E379AA0(v6, (uint64_t)v5);
    uint64_t v7 = sub_24E474818();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1) {
      return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(a1, v5, v7);
    }
    sub_24E379BD4((uint64_t)v5, &qword_26B1B86A0);
  }
  else
  {
    sub_24E474558();
    if (v16)
    {
      if ((swift_dynamicCast() & 1) != 0 && v14[15] == 1) {
        return sub_24E4749B8();
      }
    }
    else
    {
      sub_24E379BD4((uint64_t)v15, &qword_26B1B81A0);
    }
    if (qword_26B1B7A68 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24E4749E8();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B1C0CE0);
    uint64_t v11 = sub_24E4749C8();
    os_log_type_t v12 = sub_24E474D78();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_24E36C000, v11, v12, "Queried trustedNow but falling back to normal Date()", v13, 2u);
      MEMORY[0x25333BB40](v13, -1, -1);
    }
  }
  return sub_24E474808();
}

uint64_t sub_24E47417C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  __swift_allocate_value_buffer(v0, qword_2698DCB08);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2698DCB08);
  uint64_t v2 = sub_24E474818();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 1, 1, v2);
}

uint64_t static Date.testSetNow(date:)(uint64_t a1)
{
  if (MEMORY[0x25333A660]())
  {
    if (qword_2698DA6D0 != -1) {
      swift_once();
    }
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
    uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698DCB08);
    swift_beginAccess();
    sub_24E474370(a1, v3);
    return swift_endAccess();
  }
  else
  {
    uint64_t result = sub_24E474F58();
    __break(1u);
  }
  return result;
}

uint64_t sub_24E474300()
{
  uint64_t v0 = sub_24E4749E8();
  __swift_allocate_value_buffer(v0, qword_26B1C0CE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1C0CE0);
  return sub_24E4749D8();
}

uint64_t sub_24E474370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1B86A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t _s12FindMyLocate5FenceV2IDV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x270F28BB0]();
}

uint64_t sub_24E4743E8()
{
  return MEMORY[0x270F28BC0]();
}

uint64_t sub_24E4743F8()
{
  return MEMORY[0x270F28BC8]();
}

uint64_t sub_24E474408()
{
  return MEMORY[0x270F28C40]();
}

uint64_t sub_24E474418()
{
  return MEMORY[0x270F28C68]();
}

uint64_t sub_24E474428()
{
  return MEMORY[0x270F28C70]();
}

uint64_t sub_24E474438()
{
  return MEMORY[0x270F28C88]();
}

uint64_t sub_24E474448()
{
  return MEMORY[0x270F28C98]();
}

uint64_t sub_24E474458()
{
  return MEMORY[0x270F28CA0]();
}

uint64_t sub_24E474468()
{
  return MEMORY[0x270F28CA8]();
}

uint64_t sub_24E474478()
{
  return MEMORY[0x270F28CC0]();
}

uint64_t sub_24E474488()
{
  return MEMORY[0x270F28CC8]();
}

uint64_t sub_24E474498()
{
  return MEMORY[0x270F28CE8]();
}

uint64_t sub_24E4744A8()
{
  return MEMORY[0x270F28CF0]();
}

uint64_t sub_24E4744B8()
{
  return MEMORY[0x270F28D48]();
}

uint64_t sub_24E4744C8()
{
  return MEMORY[0x270F28D70]();
}

uint64_t sub_24E4744D8()
{
  return MEMORY[0x270F28D78]();
}

uint64_t sub_24E4744E8()
{
  return MEMORY[0x270F28D80]();
}

uint64_t sub_24E4744F8()
{
  return MEMORY[0x270F28D88]();
}

uint64_t sub_24E474508()
{
  return MEMORY[0x270F28D90]();
}

uint64_t sub_24E474528()
{
  return MEMORY[0x270F28DA8]();
}

uint64_t sub_24E474538()
{
  return MEMORY[0x270F28DB8]();
}

uint64_t sub_24E474558()
{
  return MEMORY[0x270F28DD8]();
}

uint64_t sub_24E474578()
{
  return MEMORY[0x270EEE0D0]();
}

uint64_t sub_24E474588()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_24E474598()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24E4745A8()
{
  return MEMORY[0x270F28E00]();
}

uint64_t sub_24E4745B8()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_24E4745C8()
{
  return MEMORY[0x270EEE318]();
}

uint64_t sub_24E4745D8()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_24E4745E8()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_24E4745F8()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_24E474608()
{
  return MEMORY[0x270EEE440]();
}

uint64_t sub_24E474618()
{
  return MEMORY[0x270EEE6D0]();
}

uint64_t sub_24E474628()
{
  return MEMORY[0x270EEE6E0]();
}

uint64_t sub_24E474638()
{
  return MEMORY[0x270EEE7D8]();
}

uint64_t sub_24E474648()
{
  return MEMORY[0x270EEE7F0]();
}

uint64_t sub_24E474658()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_24E474668()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_24E474678()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_24E474688()
{
  return MEMORY[0x270EEF238]();
}

uint64_t sub_24E474698()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_24E4746A8()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_24E4746B8()
{
  return MEMORY[0x270EEF288]();
}

uint64_t sub_24E4746C8()
{
  return MEMORY[0x270EEF2A8]();
}

uint64_t sub_24E4746D8()
{
  return MEMORY[0x270EEF2B8]();
}

uint64_t sub_24E4746E8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_24E4746F8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24E474708()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24E474718()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_24E474728()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24E474738()
{
  return MEMORY[0x270F28E40]();
}

uint64_t sub_24E474748()
{
  return MEMORY[0x270F28E50]();
}

uint64_t sub_24E474758()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_24E474768()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_24E474788()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_24E474798()
{
  return MEMORY[0x270EF09D8]();
}

uint64_t sub_24E4747A8()
{
  return MEMORY[0x270EF09E0]();
}

uint64_t sub_24E4747B8()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_24E4747C8()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24E4747D8()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24E4747E8()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24E4747F8()
{
  return MEMORY[0x270EF0BD8]();
}

uint64_t sub_24E474808()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24E474818()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24E474828()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_24E474838()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24E474848()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24E474858()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t _s12FindMyLocate5FenceV9TriggerIDVAEycfC_0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24E474878()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24E474888()
{
  return MEMORY[0x270EF0D80]();
}

uint64_t sub_24E474898()
{
  return MEMORY[0x270EF0EF8]();
}

uint64_t sub_24E4748A8()
{
  return MEMORY[0x270EF0F20]();
}

uint64_t sub_24E4748B8()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24E4748C8()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_24E4748D8()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_24E4748E8()
{
  return MEMORY[0x270EF1160]();
}

uint64_t sub_24E4748F8()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_24E474908()
{
  return MEMORY[0x270EF1280]();
}

uint64_t sub_24E474918()
{
  return MEMORY[0x270EF12C0]();
}

uint64_t sub_24E474928()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_24E474938()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_24E474948()
{
  return MEMORY[0x270EF13F0]();
}

uint64_t sub_24E474958()
{
  return MEMORY[0x270EF1410]();
}

uint64_t sub_24E474968()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_24E474978()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_24E474988()
{
  return MEMORY[0x270EF1580]();
}

uint64_t sub_24E474998()
{
  return MEMORY[0x270EF15E0]();
}

uint64_t sub_24E4749A8()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_24E4749B8()
{
  return MEMORY[0x270F28F10]();
}

uint64_t sub_24E4749C8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24E4749D8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24E4749E8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24E4749F8()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_24E474A08()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24E474A18()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24E474A28()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24E474A38()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24E474A48()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_24E474A58()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24E474A68()
{
  return MEMORY[0x270F28E80]();
}

uint64_t sub_24E474A78()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24E474A88()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24E474A98()
{
  return MEMORY[0x270EF1A38]();
}

uint64_t sub_24E474AA8()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_24E474AB8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24E474AC8()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24E474AD8()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24E474AE8()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24E474AF8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24E474B08()
{
  return MEMORY[0x270F9D7B0]();
}

uint64_t sub_24E474B18()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24E474B28()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_24E474B38()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24E474B48()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24E474B58()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_24E474B68()
{
  return MEMORY[0x270F9DAC8]();
}

uint64_t sub_24E474B78()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24E474B88()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_24E474B98()
{
  return MEMORY[0x270F9DB48]();
}

uint64_t sub_24E474BA8()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24E474BB8()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24E474BC8()
{
  return MEMORY[0x270EF1BA8]();
}

uint64_t sub_24E474BD8()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24E474BE8()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24E474BF8()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24E474C08()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24E474C18()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24E474C28()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24E474C38()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24E474C48()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24E474C58()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_24E474C68()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24E474C78()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24E474C88()
{
  return MEMORY[0x270FA1F18]();
}

uint64_t sub_24E474C98()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_24E474CA8()
{
  return MEMORY[0x270FA1F50]();
}

uint64_t sub_24E474CB8()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_24E474CE8()
{
  return MEMORY[0x270FA1F78]();
}

uint64_t sub_24E474CF8()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_24E474D08()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_24E474D28()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_24E474D38()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_24E474D48()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_24E474D58()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24E474D68()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24E474D78()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24E474D88()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24E474D98()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24E474DA8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24E474DB8()
{
  return MEMORY[0x270EF1F60]();
}

uint64_t sub_24E474DC8()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_24E474DD8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24E474DE8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24E474DF8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24E474E08()
{
  return MEMORY[0x270EF23D8]();
}

uint64_t sub_24E474E18()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_24E474E28()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24E474E48()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24E474E58()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24E474E68()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24E474E78()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24E474E88()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24E474E98()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24E474EA8()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24E474EB8()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24E474EC8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24E474ED8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24E474EE8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_24E474EF8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_24E474F08()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_24E474F18()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_24E474F28()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_24E474F38()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24E474F48()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24E474F58()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24E474F68()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24E474F78()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24E474F88()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24E474F98()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24E474FA8()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24E474FB8()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24E474FC8()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24E474FD8()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24E474FE8()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24E474FF8()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_24E475008()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24E475018()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24E475028()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24E475038()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_24E475048()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_24E475058()
{
  return MEMORY[0x270F9F310]();
}

uint64_t sub_24E475068()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24E475078()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24E475088()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24E475098()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24E4750A8()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_24E4750B8()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24E4750C8()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24E4750D8()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24E4750E8()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_24E4750F8()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_24E475108()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_24E475118()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24E475128()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24E475148()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24E475158()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_24E475168()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_24E475188()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24E475198()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24E4751C8()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24E4751D8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24E4751E8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24E4751F8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24E475208()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24E475218()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24E475228()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24E475238()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24E475248()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24E475258()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24E475268()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24E475278()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_24E475288()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24E475298()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_24E4752A8()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24E4752B8()
{
  return MEMORY[0x270F28EE0]();
}

uint64_t sub_24E4752E8()
{
  return MEMORY[0x270FA0128]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x270F95FB8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x270FA0468]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}