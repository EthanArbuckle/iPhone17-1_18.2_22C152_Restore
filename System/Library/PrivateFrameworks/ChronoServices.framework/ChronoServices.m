uint64_t destroy for DeviceIdentifier()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_190C72390@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_190C723CC();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190C723CC()
{
  return *(void *)v0;
}

uint64_t sub_190C723D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_190C7249C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_190C7250C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

void *initializeBufferWithCopyOfBuffer for DeviceIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

id sub_190C72774(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_190D41978();
  uint64_t v8 = v7;
  id v9 = a1;
  id v10 = objc_msgSend(v9, sel_widgetExtensionContainers);
  type metadata accessor for CHSWidgetExtensionContainer(0);
  uint64_t v11 = sub_190D41BE8();

  swift_bridgeObjectRetain();
  v12 = (void *)a4(v11, v6, v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v12;
}

uint64_t CHSWidgetExtensionContainer.localExtensions.getter()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_190D420B8();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x192FD6450](i, v1);
      }
      else {
        id v5 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_identity);
      unsigned __int8 v8 = objc_msgSend(v7, sel_isRemote);

      if (v8)
      {
      }
      else
      {
        sub_190D41FF8();
        sub_190D42028();
        sub_190D42038();
        sub_190D42008();
      }
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t type metadata accessor for CHSWidgetExtensionContainer(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AA6B8);
}

uint64_t sub_190C72A84@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_widgetExtensionContainers);
  type metadata accessor for CHSWidgetExtensionContainer(0);
  uint64_t v5 = sub_190D41BE8();

  id v6 = objc_msgSend(v2, sel_allExtensions);
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
  sub_190C73688();
  uint64_t v7 = sub_190D41CA8();

  unsigned __int8 v8 = *(void **)&v2[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver];
  uint64_t v9 = *(void *)&v2[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver];
  id v10 = (char *)objc_allocWithZone((Class)CHSWidgetExtensionSet);
  uint64_t v11 = OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver;
  *(void *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver] = 0;
  if (v8)
  {
    swift_unknownObjectRetain();
    v12 = v10;
    id v13 = v8;
  }
  else
  {
    v14 = self;
    swift_unknownObjectRetain();
    v15 = v10;
    id v13 = objc_msgSend(v14, sel_defaultResolver);
  }
  *(void *)&v10[v11] = v13;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  *(void *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_allExtensions] = v7;
  *(void *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver] = v9;
  *(void *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_widgetExtensionContainers] = v5;
  swift_unknownObjectRetain();

  v19.receiver = v10;
  v19.super_class = (Class)CHSWidgetExtensionSet;
  id v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_unknownObjectRelease();
  uint64_t v17 = swift_unknownObjectRelease();
  uint64_t result = type metadata accessor for CHSWidgetExtensionSet(v17);
  a1[3] = result;
  *a1 = v16;
  return result;
}

uint64_t sub_190C72C5C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_190C72C98(unint64_t a1, id a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_190D420B8();
  if (!v6) {
    goto LABEL_40;
  }
LABEL_3:
  uint64_t v7 = 0;
  unint64_t v8 = v5 & 0xC000000000000001;
  unint64_t v28 = v5 + 32;
  unint64_t v29 = v5 & 0xC000000000000001;
  unint64_t v32 = v5;
  id v30 = a2;
  uint64_t v31 = a3;
  while (1)
  {
    if (v8) {
      uint64_t v9 = (char *)MEMORY[0x192FD6450](v7, v5);
    }
    else {
      uint64_t v9 = (char *)*(id *)(v28 + 8 * v7);
    }
    a2 = v9;
    BOOL v10 = __OFADD__(v7, 1);
    uint64_t v11 = v7 + 1;
    if (v10)
    {
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v12 = *(void *)&v9[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_190D420B8();
      uint64_t v13 = result;
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
    }
    uint64_t v33 = v11;
    v34 = a2;
    if (v13)
    {
      if (v13 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v15 = 0;
      id v16 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if ((v12 & 0xC000000000000001) != 0) {
          id v18 = (id)MEMORY[0x192FD6450](v15, v12);
        }
        else {
          id v18 = *(id *)(v12 + 8 * v15 + 32);
        }
        objc_super v19 = v18;
        v20 = (char *)objc_msgSend(v18, sel_identity);
        v21 = &v20[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
        swift_beginAccess();
        uint64_t v22 = *(void *)v21;
        uint64_t v23 = *((void *)v21 + 1);
        swift_bridgeObjectRetain();

        if (v23)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v16 = sub_190C72FA0(0, v16[2] + 1, 1, v16);
          }
          unint64_t v25 = v16[2];
          unint64_t v24 = v16[3];
          if (v25 >= v24 >> 1) {
            id v16 = sub_190C72FA0((void *)(v24 > 1), v25 + 1, 1, v16);
          }
          v16[2] = v25 + 1;
          uint64_t v17 = &v16[2 * v25];
          v17[4] = v22;
          v17[5] = v23;
        }
        ++v15;
      }
      while (v13 != v15);
    }
    else
    {
      id v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease_n();
    a3 = v16[2];
    if (a3) {
      break;
    }

    swift_bridgeObjectRelease();
    unint64_t v5 = v32;
LABEL_34:
    uint64_t v7 = v33;
    unint64_t v8 = v29;
    if (v33 == v6) {
      goto LABEL_40;
    }
  }
  v26 = v16 + 5;
  unint64_t v5 = v32;
  while (1)
  {
    BOOL v27 = (id)*(v26 - 1) == v30 && *v26 == v31;
    if (v27 || (sub_190D422D8() & 1) != 0) {
      break;
    }
    v26 += 2;
    if (!--a3)
    {

      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v34;
}

void *sub_190C72FA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6D8);
    BOOL v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    BOOL v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB280720);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_190C73130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_190C73344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_190C735E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t TypedIdentifier.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t CHSIsWidgetExtensionPoint()
{
  return BSEqualObjects();
}

uint64_t type metadata accessor for CHSWidgetExtensionSet(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AA7D8);
}

unint64_t sub_190C73688()
{
  unint64_t result = qword_1E92AA8B0;
  if (!qword_1E92AA8B0)
  {
    sub_190C72C5C(255, (unint64_t *)&qword_1E92AA8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA8B0);
  }
  return result;
}

uint64_t sub_190C736F0()
{
  uint64_t v0 = sub_190C723CC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t TypedIdentifier.description.getter()
{
  uint64_t v0 = sub_190C723CC();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_190C737CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C73848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7390C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C739D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C73C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C73CFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C73DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C73FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C74028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C74104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C742DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C74780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_190C74AA4(_Unwind_Exception *a1)
{
  int64_t v7 = v6;

  _Unwind_Resume(a1);
}

void sub_190C74BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C74C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C74C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C74DA4(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190C74EA4(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190C75060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C7519C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C75280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)CHSWidgetDescriptorProvider;
  [(_Unwind_Exception *)&a10 dealloc];
  _Unwind_Resume(a1);
}

void sub_190C753C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_190C75494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C75528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C75654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C75758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C7588C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C75998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_190C75A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C75A8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C75B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C75C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C75CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C75DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C75F6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C76030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C76184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  objc_destroyWeak(v18);
  objc_destroyWeak((id *)(v19 - 56));

  _Unwind_Resume(a1);
}

void sub_190C763AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C765E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C766E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7687C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7699C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C76A18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C76B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C76C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C76D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C76E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C76F00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C770BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C77380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C77490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C77588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7777C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7794C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C779B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C77A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C77B34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C77B90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C77C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C780F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C781F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7831C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C784BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C78C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_190C78E48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C78F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C79098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C79174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C7922C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C792C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79428(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7962C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C796A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7988C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7996C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C799F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C79FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7A278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7A5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7A6EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7A7F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7A8A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7A90C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7AA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7AAFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7AB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7AD74(_Unwind_Exception *a1)
{
  char v5 = v3;

  _Unwind_Resume(a1);
}

void sub_190C7AEE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7AFDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7B0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C7B838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7B8D0()
{
}

void sub_190C7B8D8()
{
}

void sub_190C7B8E0()
{
}

void sub_190C7B8E8()
{
}

void sub_190C7B8F0()
{
}

void sub_190C7B8F8()
{
}

void sub_190C7B900()
{
}

void sub_190C7B908()
{
}

void sub_190C7B910()
{
}

void sub_190C7B918()
{
}

void sub_190C7B920()
{
}

void sub_190C7BABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7BC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7BEE0(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190C7C054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7C228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7C304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7C454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7C5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7C664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7C6FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7C7E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7C9BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7CABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7CBBC(_Unwind_Exception *a1)
{
  char v5 = v4;

  _Unwind_Resume(a1);
}

void sub_190C7CCAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7CDBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7D13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7D1B4()
{
}

void sub_190C7D1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  JUMPOUT(0x190C7D198);
}

void sub_190C7D1D0()
{
}

void sub_190C7D1D8()
{
  JUMPOUT(0x190C7D1A0);
}

void sub_190C7D1EC()
{
}

void sub_190C7D1F4()
{
}

void sub_190C7D1FC()
{
}

void sub_190C7D330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7D3A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7D4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7D550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7D62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C7D75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7D828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7DB68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7DCC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7DE58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7DE9C()
{
}

void sub_190C7E05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7E1D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7E2D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t CHSDefaultTestFamilyMaskSingle()
{
  return 2;
}

uint64_t CHSDefaultTestFamilyMaskMultiple()
{
  return 14;
}

uint64_t CHSDefaultTestFamily()
{
  return 1;
}

BOOL CHSTintFilterStyleSupportsVibrancy(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void sub_190C7E4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7E5A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7E980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7E9F0()
{
}

void sub_190C7E9F8()
{
}

void sub_190C7EA00()
{
}

void sub_190C7EA08()
{
}

void sub_190C7EA10()
{
}

void sub_190C7EA18()
{
}

void sub_190C7EB28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7ECA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C7EDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7EF10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7EFA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F168(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_190C7F1E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F26C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id __plistableTypes()
{
  if (__plistableTypes_onceToken != -1) {
    dispatch_once(&__plistableTypes_onceToken, &__block_literal_global_0);
  }
  uint64_t v0 = (void *)__plistableTypes___plistableTypes;
  return v0;
}

void sub_190C7F404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ____plistableTypes_block_invoke()
{
  id v0 = objc_alloc(MEMORY[0x1E4F1CAD0]);
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_msgSend(v0, "initWithObjects:", v1, v2, v3, v4, v5, objc_opt_class(), 0);
  int64_t v7 = (void *)__plistableTypes___plistableTypes;
  __plistableTypes___plistableTypes = v6;
}

void sub_190C7F6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F7F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7F89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7FAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  _Unwind_Resume(a1);
}

void sub_190C7FC4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7FD48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C7FDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSWidgetBackgroundViewPolicy(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Include";
  }
  else {
    return off_1E56C8570[a1 - 1];
  }
}

void sub_190C7FF00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C80040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_190C800FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C801A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C80390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C804E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)CHSWidgetExtensionProvider;
  [(_Unwind_Exception *)&a10 dealloc];
  _Unwind_Resume(a1);
}

void sub_190C80594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C805FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C80758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C808FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C809C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C80A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C80BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C80CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C80DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C80F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8110C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v16 - 96), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_190C811E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C812B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C81450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_190C81548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C81620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C817F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C818DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C81ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

Class __getUMUserManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  v7[0] = 0;
  if (!UserManagementLibraryCore_frameworkLibrary)
  {
    v7[1] = (void *)MEMORY[0x1E4F143A8];
    v7[2] = (void *)3221225472;
    v7[3] = __UserManagementLibraryCore_block_invoke;
    v7[4] = &__block_descriptor_40_e5_v8__0l;
    v7[5] = v7;
    long long v8 = xmmword_1E56C8648;
    uint64_t v9 = 0;
    UserManagementLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!UserManagementLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *UserManagementLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"CHSWidgetExtensionProvider.m", 21, @"%s", v7[0]);

    goto LABEL_10;
  }
  if (v7[0]) {
    free(v7[0]);
  }
  Class result = objc_getClass("UMUserManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v6 = [NSString stringWithUTF8String:"Class getUMUserManagerClass(void)_block_invoke"];
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, @"CHSWidgetExtensionProvider.m", 22, @"Unable to find class %s", "UMUserManager");

LABEL_10:
    __break(1u);
  }
  getUMUserManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_190C81D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t __UserManagementLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UserManagementLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2114;
  *(void *)(a3 + 14) = a2;
  return result;
}

__CFString *NSStringFromCHSWidgetRenderingMode(unint64_t a1)
{
  if (a1 > 2) {
    return @"unknown";
  }
  else {
    return off_1E56C8660[a1];
  }
}

void sub_190C81EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CHSWidgetEventServicePublisher;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_190C820E8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190C821D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C82434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a15, 8);
  _Block_object_dispose(&a21, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_190C8266C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_190C82888(_Unwind_Exception *a1)
{
  int64_t v7 = v5;
  objc_destroyWeak(v7);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak((id *)(v6 - 72));

  _Unwind_Resume(a1);
}

void sub_190C829E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C82B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v3);

  _Unwind_Resume(a1);
}

void sub_190C82C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v2);

  _Unwind_Resume(a1);
}

void sub_190C82CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  _Unwind_Resume(a1);
}

void sub_190C82E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C82F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C83290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8334C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C83550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C83760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C83964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C83B98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C83E1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C83F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C841F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C843CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C846E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84B1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84D88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C84E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C850A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C85154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C85268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C853B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C854A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C855BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C856AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8581C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8590C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C85B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C85C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_2(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x2Au);
}

void CHSFlushPowerlog()
{
  id v0 = +[CHSChronoServicesConnection sharedInstance];
  [v0 flushPowerlog];
}

void sub_190C85D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id CHSWidgetEnvironmentDataForBundleIdentifier(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[CHSChronoServicesConnection sharedInstance];
  uint64_t v3 = [v2 widgetEnvironmentDataForBundleIdentifier:v1];

  return v3;
}

void sub_190C85E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C861B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C864E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_190C86590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C86810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_190C868C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C869C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C86AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C86C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C86EE8(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;

  _Unwind_Resume(a1);
}

void sub_190C870E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C873E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C874F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C87554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C87628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C87714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C87770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8784C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C87A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C87AA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C87B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C87B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C87BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C87C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C87CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C87D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C87E34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C87F70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8804C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C881AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C88258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C883F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C884E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C88544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C88608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C8868C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C88768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C88940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C88AE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C88B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C88F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8900C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C890EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C891F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8928C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C89360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8945C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8957C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C89654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C89810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8991C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C899CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C89AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C89C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C89DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C89E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8A39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8A4BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8A5E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8A828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8AC50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8ACBC()
{
}

void sub_190C8ACC4()
{
}

void sub_190C8ACCC()
{
}

void sub_190C8ADCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8AE30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8AEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C8B010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8B07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8B158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C8B280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8B35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8B52C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8B6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8B830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8B904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8B9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8BA8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8BBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8BCC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8BD34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8BDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

__CFString *CHSScreenshotColorSchemeDescription(uint64_t a1)
{
  if (a1) {
    return @"light";
  }
  else {
    return @"dark";
  }
}

void sub_190C8C260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
  _Unwind_Resume(a1);
}

void sub_190C8C400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8C520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8C5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8C680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C8C750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8C7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8C868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8CA20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8CC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C8D314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8D3AC()
{
}

void sub_190C8D3B4()
{
}

void sub_190C8D3BC()
{
}

void sub_190C8D3C4()
{
}

void sub_190C8D3CC()
{
}

void sub_190C8D3D4()
{
}

void sub_190C8D3DC()
{
}

void sub_190C8D3E4()
{
}

void sub_190C8D3EC()
{
}

void sub_190C8D3F4()
{
}

void sub_190C8D3FC()
{
}

void sub_190C8D5C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8D7A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8DA08(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190C8DC7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8DFFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8E064()
{
}

void sub_190C8E06C()
{
}

void sub_190C8E074()
{
}

void sub_190C8E07C()
{
}

void sub_190C8E084()
{
}

void sub_190C8E178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8E24C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8E408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8E534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8E5F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8E6EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8E768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSControlType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Unknown";
  }
  else {
    return off_1E56C89F0[a1 - 1];
  }
}

__CFString *NSStringFromCHSControlContentType(uint64_t a1)
{
  if (a1 == 1) {
    return @"Preview";
  }
  else {
    return @"Live";
  }
}

__CFString *NSStringFromCHSControlVisibility(uint64_t a1)
{
  id v1 = @"NotVisible";
  if (a1 == 2) {
    id v1 = @"VisibleSettled";
  }
  if (a1 == 1) {
    return @"VisibleNotSettled";
  }
  else {
    return v1;
  }
}

void sub_190C8E8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8EA20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8EAA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8EBBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8EC44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSColorScheme(uint64_t a1)
{
  id v1 = @"default";
  if (a1 == 1) {
    id v1 = @"light";
  }
  if (a1 == 2) {
    return @"dark";
  }
  else {
    return v1;
  }
}

BOOL CHSColorSchemesIsValid(char a1)
{
  return (a1 & 3) != 0;
}

id NSStringFromCHSColorSchemes(uint64_t a1)
{
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  uint64_t v2 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithString:@"["];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  uint64_t v10 = __NSStringFromCHSColorSchemes_block_invoke;
  int64_t v11 = &unk_1E56C8A10;
  uint64_t v13 = v14;
  id v3 = v2;
  id v12 = v3;
  uint64_t v4 = v9;
  if (a1)
  {
    char v15 = 0;
    uint8x8_t v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v5.i16[0] = vaddlv_u8(v5);
    int v6 = v5.i32[0];
    if (v5.i32[0])
    {
      unint64_t v7 = 0;
      do
      {
        if (((1 << v7) & a1) != 0)
        {
          ((void (*)(void *))v10)(v4);
          if (v15) {
            break;
          }
          --v6;
        }
        if (v7 > 0x3E) {
          break;
        }
        ++v7;
      }
      while (v6 > 0);
    }
  }

  [v3 appendString:@"]"];
  _Block_object_dispose(v14, 8);
  return v3;
}

void sub_190C8EE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, ...)
{
  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __NSStringFromCHSColorSchemes_block_invoke(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(void *)(*(void *)(*(void *)(result + 40) + 8) + 24)) {
    uint64_t result = [*(id *)(result + 32) appendString:@", "];
  }
  if (a2 == 1)
  {
    uint64_t v4 = @"light";
    goto LABEL_7;
  }
  if (a2 == 2)
  {
    uint64_t v4 = @"dark";
LABEL_7:
    uint64_t result = [*(id *)(v3 + 32) appendString:v4];
  }
  ++*(void *)(*(void *)(*(void *)(v3 + 40) + 8) + 24);
  return result;
}

__CFString *NSStringFromCHSControlSize(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"1x1";
  }
  else {
    return off_1E56C8A30[a1 - 1];
  }
}

void sub_190C8F06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C8F254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8F31C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8F49C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8F548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8F75C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8F850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C8FA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8FB7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8FC74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8FD48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8FE44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8FF1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C8FFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C9008C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C90184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C90238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C90354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSWidgetHostActivationState(uint64_t a1)
{
  if (a1) {
    return @"activated";
  }
  else {
    return @"deactivated";
  }
}

void sub_190C90468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C904E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9056C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C90614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9082C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C90904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C909A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  uint64_t v10 = v9;

  a9.super_class = (Class)CHSWidgetHost;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_190C90B20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C90EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C90F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C90FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9105C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C910C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C911FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _CHSRestartChronod()
{
  return +[CHSChronoServicesConnection _debugRestartServer];
}

void sub_190C91330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C913A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C91560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C91B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41)
{
  _Unwind_Resume(a1);
}

void sub_190C91CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CHSChronoServicesConnection;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_190C91EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_190C922A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C924DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C927C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C92ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C92D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C92EA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C92FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C930BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C93268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C933BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9356C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C93728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C93958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C93B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C93D60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C93EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C940B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9429C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C94450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C94610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C947B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C94A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,void *a31)
{
  objc_destroyWeak(v36);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);

  _Block_object_dispose((const void *)(v38 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190C94B08()
{
}

void sub_190C94C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9565C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C956FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C959D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C95FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9624C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_190C963B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9643C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C964FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C965E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C966E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C96860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C969AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C96BBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C96E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190C971DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36)
{
  _Unwind_Resume(a1);
}

void sub_190C97424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C97570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C976F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C97844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C979EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C97B30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C97D0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C97EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9817C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32)
{
  _Unwind_Resume(a1);
}

void sub_190C9834C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9855C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C98718(_Unwind_Exception *exception_object)
{
}

void sub_190C98858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9893C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C98A44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C98D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_190C98F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C991E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C992C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C99534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9961C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C99888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C99924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C99B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C99C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t __ProactiveSuggestionClientModelLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ProactiveSuggestionClientModelLibraryCore_frameworkLibrary = result;
  return result;
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_3_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_190C99E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9A104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_190C9A1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9A348(_Unwind_Exception *a1)
{
  uint8x8_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_190C9A4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9A62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_190C9A6E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9A770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9A80C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9A918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9A994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9AA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9AB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9AD44(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_190C9ADE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9AE74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9AF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C9AFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9B10C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9B30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9B438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9B550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9B69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C9B72C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9B848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9B8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C9B9B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9BAE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9BCBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9BE04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9BF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190C9BFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C34C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9C5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9C730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9C9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9CAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_190C9CF7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9CFF4()
{
}

void sub_190C9CFFC()
{
}

void sub_190C9D004()
{
}

void sub_190C9D00C()
{
}

void sub_190C9D014()
{
}

void sub_190C9D01C()
{
}

void sub_190C9D024()
{
}

void sub_190C9D1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9D244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9D2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9D334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9D438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9D580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9D704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9D80C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9DB84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9DCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9DD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9DE0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9DF94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9E098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_190C9E174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9E2B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9E3FC(_Unwind_Exception *a1)
{
  MEMORY[0x192FD6D90](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable(apple::aiml::flatbuffers2::FlatBufferBuilder *this, int a2)
{
  if (!*((unsigned char *)this + 70)) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  }
  uint64_t v4 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, 0);
  if ((unsigned __int16)(*((_WORD *)this + 34) + 2) <= 4u) {
    unint64_t v5 = 4;
  }
  else {
    unint64_t v5 = (unsigned __int16)(*((_WORD *)this + 34) + 2);
  }
  *((_WORD *)this + 34) = v5;
  int v6 = (void *)(*((void *)this + 6) - apple::aiml::flatbuffers2::vector_downward::ensure_space(this, v5));
  *((void *)this + 6) = v6;
  bzero(v6, v5);
  unsigned __int16 v7 = v4 - a2;
  if ((v4 - a2) >= 0x10000) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  }
  long long v8 = (unsigned __int16 *)*((void *)this + 6);
  if (!v8) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  }
  v8[1] = v7;
  *long long v8 = *((_WORD *)this + 34);
  unint64_t v9 = *((void *)this + 7);
  if (!v9) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  }
  uint64_t v10 = *((unsigned int *)this + 16);
  unint64_t v11 = v9 - 8 * v10;
  if (v10)
  {
    id v12 = (int *)(v9 - 8 * v10);
    do
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (*(unsigned __int16 *)((char *)v8 + v13)) {
        apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
      }
      int v14 = *v12;
      v12 += 2;
      *(unsigned __int16 *)((char *)v8 + v13) = v4 - v14;
    }
    while ((unint64_t)v12 < v9);
  }
  *((void *)this + 7) = v11;
  *((_DWORD *)this + 16) = 0;
  *((_WORD *)this + 34) = 0;
  uint64_t v16 = *((void *)this + 4);
  unint64_t v15 = *((void *)this + 5);
  int v17 = v16 - v8 + v15;
  if (*((unsigned char *)this + 81))
  {
    if (!v15) {
      apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
    }
    if (v15 < v11)
    {
      size_t v18 = *v8;
      uint64_t v19 = v15 + v16;
      v20 = (unsigned int *)*((void *)this + 5);
      while (1)
      {
        uint64_t v21 = *v20;
        if (v18 == *(unsigned __int16 *)(v19 - v21) && !memcmp((const void *)(v19 - v21), v8, v18)) {
          break;
        }
        if ((unint64_t)++v20 >= v11)
        {
          int v17 = v16 - v8 + v15;
          goto LABEL_21;
        }
      }
      long long v8 = (unsigned __int16 *)((char *)v8 + (v16 - v8 + v15 - v4));
      *((void *)this + 6) = v8;
      int v17 = v21;
    }
  }
LABEL_21:
  if (v17 == v16 + v15 - v8)
  {
    apple::aiml::flatbuffers2::vector_downward::ensure_space(this, 4uLL);
    uint64_t v22 = (_DWORD *)*((void *)this + 7);
    *uint64_t v22 = v17;
    *((void *)this + 7) = v22 + 1;
    uint64_t v16 = *((void *)this + 4);
    unint64_t v15 = *((void *)this + 5);
  }
  *(_DWORD *)(v15 + v16 - v4) = v17 - v4;
  *((unsigned char *)this + 70) = 0;
  return v4;
}

void sub_190C9E7EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void sub_190C9EA48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9ECA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9EE4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<apple::aiml::flatbuffers2::Offset<void>>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, unint64_t a2, uint64_t a3)
{
  std::vector<apple::aiml::flatbuffers2::Offset<void>>::vector(&__p, a2);
  if (a2)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = std::function<apple::aiml::flatbuffers2::Offset<void> ()(unsigned long)>::operator()(a3, v6);
      long long v8 = __p;
      *((_DWORD *)__p + v6++) = v7;
    }
    while (a2 != v6);
  }
  else
  {
    long long v8 = __p;
  }
  if (v13 == v8) {
    unint64_t v9 = &apple::aiml::flatbuffers2::data<apple::aiml::flatbuffers2::Offset<void>,std::allocator<apple::aiml::flatbuffers2::Offset<void>>>(std::vector<apple::aiml::flatbuffers2::Offset<void>> const&)::t;
  }
  else {
    unint64_t v9 = v8;
  }
  uint64_t v10 = apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<void>(a1, (uint64_t)v9, (v13 - v8) >> 2);
  if (__p)
  {
    uint64_t v13 = __p;
    operator delete(__p);
  }
  return v10;
}

void sub_190C9F050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_190C9F2E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double apple::aiml::flatbuffers2::FlatBufferBuilder::Release@<D0>(apple::aiml::flatbuffers2::FlatBufferBuilder *this@<X0>, uint64_t a2@<X8>)
{
  if (!*((unsigned char *)this + 71)) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::Release();
  }
  return apple::aiml::flatbuffers2::vector_downward::release(this, a2);
}

void sub_190C9F580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::GetBufferPointer(apple::aiml::flatbuffers2::FlatBufferBuilder *this)
{
  if (!*((unsigned char *)this + 71)) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::Release();
  }
  uint64_t result = *((void *)this + 6);
  if (!result) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  }
  return result;
}

void sub_190C9F690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9F774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190C9F840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *makeNSString(NSString *a1, AFBBufRef *a2, const char *a3)
{
  unint64_t v5 = a1;
  uint64_t v6 = a2;
  [(AFBBufRef *)v6 retainBuf];
  int v7 = (__CFString *)CFStringCreateWithCStringNoCopy(0, a3, 0x8000100u, (CFAllocatorRef)[(AFBBufRef *)v6 deallocator]);
  if (!v7)
  {
    [(AFBBufRef *)v6 releaseBuf];
    uint64_t v9 = [[NSString alloc] initWithFormat:@"%@ unable to decode null-terminated string as UTF-8", v5];
    id v10 = [MEMORY[0x1E4F1CA00] exceptionWithName:*MEMORY[0x1E4F4D890] reason:v9 userInfo:0];
    objc_exception_throw(v10);
  }

  return v7;
}

void sub_190C9F934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FA6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FB18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FC38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FCE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FE04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190C9FFD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA0388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA053C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA05CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA0754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA097C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA0B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA0CAC(_Unwind_Exception *a1)
{
  MEMORY[0x192FD6D90](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_190CA0E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA1088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA12D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA1518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA1778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA191C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA1CF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA1F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA203C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA2120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA2204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA22E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA2430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA2550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA2780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA2BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA2CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA2E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA2F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA30A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA3214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA336C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA354C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA36A4(_Unwind_Exception *a1)
{
  MEMORY[0x192FD6D90](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_190CA3838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA3A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA3C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 == 1)
  {
    id v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E4F28568];
    uint64_t v13 = (void *)[[NSString alloc] initWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v12 + 16))(v12)];
    a11 = (uint64_t)v13;
    int v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&a11 forKeys:&a10 count:1];

    id v15 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v16 = (void *)[v15 initWithDomain:*MEMORY[0x1E4F4D888] code:3 userInfo:v14];
    [*(id *)(v11 + 8) setError:v16];

    __cxa_end_catch();
    JUMPOUT(0x190CA3C2CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_190CA3E18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 == 1)
  {
    id v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E4F28568];
    uint64_t v13 = (void *)[[NSString alloc] initWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v12 + 16))(v12)];
    a11 = (uint64_t)v13;
    int v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&a11 forKeys:&a10 count:1];

    id v15 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v16 = (void *)[v15 initWithDomain:*MEMORY[0x1E4F4D888] code:3 userInfo:v14];
    [*(id *)(v11 + 8) setError:v16];

    __cxa_end_catch();
    JUMPOUT(0x190CA3DE8);
  }
  _Unwind_Resume(exception_object);
}

void sub_190CA3FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 == 1)
  {
    id v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E4F28568];
    uint64_t v13 = (void *)[[NSString alloc] initWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v12 + 16))(v12)];
    a11 = (uint64_t)v13;
    int v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&a11 forKeys:&a10 count:1];

    id v15 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v16 = (void *)[v15 initWithDomain:*MEMORY[0x1E4F4D888] code:3 userInfo:v14];
    [*(id *)(v11 + 8) setError:v16];

    __cxa_end_catch();
    JUMPOUT(0x190CA3FA8);
  }
  _Unwind_Resume(exception_object);
}

void sub_190CA4204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA4464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA4608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA49DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA4C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA4D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA4E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA4F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA5028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA5148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA543C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA54F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA5588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA5710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA57DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA5868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA59A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA5AF0(_Unwind_Exception *a1)
{
  MEMORY[0x192FD6D90](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_190CA5C84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA5ECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA612C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA62D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA66A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA690C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA69F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA6AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA6C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA6DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA6F24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA702C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA72F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA76CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA79D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA7BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7D34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA7FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA8124(_Unwind_Exception *a1)
{
  MEMORY[0x192FD6D90](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_190CA824C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 == 1)
  {
    id v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E4F28568];
    uint64_t v13 = (void *)[[NSString alloc] initWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v12 + 16))(v12)];
    a11 = (uint64_t)v13;
    int v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&a11 forKeys:&a10 count:1];

    id v15 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v16 = (void *)[v15 initWithDomain:*MEMORY[0x1E4F4D888] code:3 userInfo:v14];
    [*(id *)(v11 + 8) setError:v16];

    __cxa_end_catch();
    JUMPOUT(0x190CA821CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_190CA8474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA86BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA8904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA8B64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA8D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA90DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA9344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CA944C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA9530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CA9614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested(uint64_t this)
{
  if (*(unsigned char *)(this + 70)) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested();
  }
  if (*(_DWORD *)(this + 64)) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested();
  }
  return this;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>(uint64_t a1, int a2)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 4uLL);
  uint64_t v4 = (_DWORD *)(*(void *)(a1 + 48)
                - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 4uLL));
  *(void *)(a1 + 48) = v4;
  *uint64_t v4 = a2;
  return (*(_DWORD *)(a1 + 32) - v4 + *(_DWORD *)(a1 + 40));
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::Align(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unint64_t a2)
{
  if (*((void *)this + 9) < a2) {
    *((void *)this + 9) = a2;
  }
  return apple::aiml::flatbuffers2::vector_downward::fill(this, (a2 - 1) & -(uint64_t)(*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10)));
}

unint64_t apple::aiml::flatbuffers2::vector_downward::fill(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  unint64_t result = apple::aiml::flatbuffers2::vector_downward::ensure_space(this, a2);
  *((void *)this + 6) -= result;
  if (a2)
  {
    uint64_t v5 = 0;
    do
      *(unsigned char *)(*((void *)this + 6) + v5++) = 0;
    while (a2 != v5);
  }
  return result;
}

unint64_t apple::aiml::flatbuffers2::vector_downward::ensure_space(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  unint64_t v2 = *((void *)this + 6);
  unint64_t v3 = *((void *)this + 7);
  if (v2 < v3 || (unint64_t v5 = *((void *)this + 5), v3 < v5)) {
    apple::aiml::flatbuffers2::vector_downward::ensure_space();
  }
  if (v2 - v3 < a2)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate(this, a2);
    unint64_t v5 = *((void *)this + 5);
    unint64_t v2 = *((void *)this + 6);
  }
  if ((*((_DWORD *)this + 8) - v2 + v5) >= 0x7FFFFFFF) {
    apple::aiml::flatbuffers2::vector_downward::ensure_space();
  }
  return a2;
}

char *apple::aiml::flatbuffers2::vector_downward::reallocate(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  unint64_t v5 = *((void *)this + 4);
  uint64_t v4 = (unsigned __int8 *)*((void *)this + 5);
  uint64_t v6 = &v4[v5 - *((void *)this + 6)];
  uint64_t v7 = *((void *)this + 7) - (void)v4;
  if (v5) {
    unint64_t v8 = v5 >> 1;
  }
  else {
    unint64_t v8 = *((void *)this + 2);
  }
  if (v8 > a2) {
    a2 = v8;
  }
  unint64_t v9 = (*((void *)this + 3) + v5 + a2 - 1) & -*((void *)this + 3);
  *((void *)this + 4) = v9;
  uint64_t v10 = *(void *)this;
  if (v4)
  {
    if (v10)
    {
      unint64_t result = (char *)(*(uint64_t (**)(uint64_t))(*(void *)v10 + 32))(v10);
    }
    else
    {
      uint64_t v13 = &unk_1EE09E390;
      unint64_t result = apple::aiml::flatbuffers2::Allocator::reallocate_downward((apple::aiml::flatbuffers2::Allocator *)&v13, v4, v5, v9, v6, v7);
    }
  }
  else
  {
    if (!v10)
    {
      uint64_t v13 = &unk_1EE09E390;
      operator new[]();
    }
    unint64_t result = (char *)(*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v10 + 16))(v10, v9);
  }
  uint64_t v12 = (uint64_t)&result[*((void *)this + 4) - v6];
  *((void *)this + 5) = result;
  *((void *)this + 6) = v12;
  *((void *)this + 7) = &result[v7];
  return result;
}

char *apple::aiml::flatbuffers2::Allocator::reallocate_downward(apple::aiml::flatbuffers2::Allocator *this, unsigned __int8 *a2, unint64_t a3, unint64_t a4, size_t a5, size_t a6)
{
  if (a4 <= a3) {
    apple::aiml::flatbuffers2::Allocator::reallocate_downward();
  }
  uint64_t v12 = (char *)(*(uint64_t (**)(apple::aiml::flatbuffers2::Allocator *, unint64_t))(*(void *)this + 16))(this, a4);
  memcpy(&v12[a4 - a5], &a2[a3 - a5], a5);
  memcpy(v12, a2, a6);
  (*(void (**)(apple::aiml::flatbuffers2::Allocator *, unsigned __int8 *, unint64_t))(*(void *)this + 24))(this, a2, a3);
  return v12;
}

void apple::aiml::flatbuffers2::DefaultAllocator::~DefaultAllocator(apple::aiml::flatbuffers2::DefaultAllocator *this)
{
}

void apple::aiml::flatbuffers2::DefaultAllocator::allocate(apple::aiml::flatbuffers2::DefaultAllocator *this)
{
}

void apple::aiml::flatbuffers2::DefaultAllocator::deallocate(apple::aiml::flatbuffers2::DefaultAllocator *this, unsigned __int8 *a2)
{
  if (a2) {
    JUMPOUT(0x192FD6D70);
  }
}

apple::aiml::flatbuffers2::FlatBufferBuilder *apple::aiml::flatbuffers2::FlatBufferBuilder::AddOffset<apple::aiml::flatbuffers2::Vector<unsigned char>>(apple::aiml::flatbuffers2::FlatBufferBuilder *result, uint64_t a2, unsigned int a3)
{
  if (a3)
  {
    unint64_t v4 = (unint64_t)result;
    int v5 = apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(result, a3);
    return (apple::aiml::flatbuffers2::FlatBufferBuilder *)apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned int>(v4, a2, v5, 0);
  }
  return result;
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned int>(unint64_t result, uint64_t a2, int a3, int a4)
{
  unint64_t v5 = result;
  if (a3 != a4 || *(unsigned char *)(result + 80))
  {
    unsigned int v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>(result, a3);
    unint64_t result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(void **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(void *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    unsigned int v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2) {
      LOWORD(v7) = a2;
    }
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unsigned int a2)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align(this, 4uLL);
  if (!a2
    || (v4 = *((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10), v5 = v4 >= a2, unsigned int v6 = v4 - a2, !v5))
  {
    apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo();
  }
  return v6 + 4;
}

double apple::aiml::flatbuffers2::vector_downward::release@<D0>(apple::aiml::flatbuffers2::vector_downward *this@<X0>, uint64_t a2@<X8>)
{
  int v2 = *((unsigned __int8 *)this + 8);
  uint64_t v3 = *((void *)this + 4);
  uint64_t v4 = *((void *)this + 5);
  uint64_t v5 = *((void *)this + 6);
  *(void *)a2 = *(void *)this;
  *(unsigned char *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = (v3 + v4 - v5);
  if (v2)
  {
    *(void *)this = 0;
    *((unsigned char *)this + 8) = 0;
  }
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

void apple::aiml::flatbuffers2::DetachedBuffer::~DetachedBuffer(apple::aiml::flatbuffers2::DetachedBuffer *this)
{
  uint64_t v3 = (_OWORD *)((char *)this + 16);
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    uint64_t v4 = *(void *)this;
    if (*(void *)this) {
      (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    }
    else {
      MEMORY[0x192FD6D70](v2, 0x1000C8077774924);
    }
  }
  if (*((unsigned char *)this + 8) && *(void *)this) {
    (*(void (**)(void))(**(void **)this + 8))(*(void *)this);
  }
  *(void *)this = 0;
  *((unsigned char *)this + 8) = 0;
  *uint64_t v3 = 0u;
  v3[1] = 0u;
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned char>(unint64_t result, uint64_t a2, int a3, int a4)
{
  unint64_t v5 = result;
  if (a3 != a4 || *(unsigned char *)(result + 80))
  {
    unsigned int v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned char>(result, a3);
    double result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(void **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(void *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    unsigned int v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2) {
      LOWORD(v7) = a2;
    }
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned char>(uint64_t a1, char a2)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 1uLL);
  uint64_t v4 = (unsigned char *)(*(void *)(a1 + 48)
               - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 1uLL));
  *(void *)(a1 + 48) = v4;
  *uint64_t v4 = a2;
  return (*(_DWORD *)(a1 + 32) - *(_DWORD *)(a1 + 48) + *(_DWORD *)(a1 + 40));
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<double>(unint64_t result, uint64_t a2, double a3, double a4)
{
  unint64_t v5 = result;
  if (a3 != a4 || *(unsigned char *)(result + 80))
  {
    unsigned int v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<double>(result, a3);
    double result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(void **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(void *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    unsigned int v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2) {
      LOWORD(v7) = a2;
    }
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<double>(uint64_t a1, double a2)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 8uLL);
  uint64_t v4 = (double *)(*(void *)(a1 + 48)
                - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 8uLL));
  *(void *)(a1 + 48) = v4;
  *uint64_t v4 = a2;
  return (*(_DWORD *)(a1 + 32) - v4 + *(_DWORD *)(a1 + 40));
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<long long>(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = result;
  if (a3 != a4 || *(unsigned char *)(result + 80))
  {
    unsigned int v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<long long>(result, a3);
    double result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(void **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(void *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    unsigned int v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2) {
      LOWORD(v7) = a2;
    }
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<long long>(uint64_t a1, uint64_t a2)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 8uLL);
  uint64_t v4 = (void *)(*(void *)(a1 + 48)
                - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 8uLL));
  *(void *)(a1 + 48) = v4;
  *uint64_t v4 = a2;
  return (*(_DWORD *)(a1 + 32) - v4 + *(_DWORD *)(a1 + 40));
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<RelevanceCacheBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  if (a2 && (*((void *)this + 1) < 8uLL || strncmp((const char *)(*(void *)this + a3 + 4), a2, 4uLL))) {
    return 0;
  }
  unsigned int v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3);
  if (!v5) {
    return 0;
  }
  unsigned int v6 = (RelevanceCacheBuf *)(*(void *)this + a3 + v5);
  return RelevanceCacheBuf::Verify(v6, this);
}

uint64_t apple::aiml::flatbuffers2::Verifier::VerifyOffset(apple::aiml::flatbuffers2::Verifier *this, unint64_t a2)
{
  if ((a2 & 3) != 0 && *((unsigned char *)this + 40)) {
    return 0;
  }
  unint64_t v2 = *((void *)this + 1);
  if (v2 < 5 || v2 - 4 < a2) {
    return 0;
  }
  uint64_t v4 = *(unsigned int *)(*(void *)this + a2);
  if ((int)v4 < 1) {
    return 0;
  }
  if (v2 - 1 >= v4 + a2) {
    return v4;
  }
  return 0;
}

BOOL RelevanceCacheBuf::Verify(RelevanceCacheBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      unsigned int v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 < 5u
        || (uint64_t v6 = *(unsigned __int16 *)v5[4].var0) == 0
        || (BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v6 + *(unsigned int *)this[v6].var0].var0, 1uLL, 0)))
      {
        BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          uint64_t v7 = *(int *)this->var0;
          uint64_t v8 = -v7;
          unint64_t v9 = &this[-v7];
          if (*(unsigned __int16 *)v9->var0 >= 7u)
          {
            uint64_t v10 = *(unsigned __int16 *)v9[6].var0;
            if (v10)
            {
              BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v10 + *(unsigned int *)this[v10].var0].var0, 4uLL, 0);
              if (!result) {
                return result;
              }
              uint64_t v8 = -(uint64_t)*(int *)this->var0;
            }
          }
          uint64_t v11 = &this[v8];
          if (*(unsigned __int16 *)v11->var0 >= 7u && (uint64_t v12 = *(unsigned __int16 *)v11[6].var0) != 0) {
            uint64_t v13 = (WidgetRelevancePropertiesBuf *)&this[v12 + *(unsigned int *)this[v12].var0];
          }
          else {
            uint64_t v13 = 0;
          }
          BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevancePropertiesBuf>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Table::VerifyOffset(apple::aiml::flatbuffers2::Table *this, const apple::aiml::flatbuffers2::Verifier *a2, unsigned int a3)
{
  uint64_t v3 = (unsigned __int16 *)((char *)this - *(int *)this);
  return *v3 <= a3
      || (uint64_t v4 = *(unsigned __int16 *)((char *)v3 + a3)) == 0
      || apple::aiml::flatbuffers2::Verifier::VerifyOffset(a2, (unint64_t)this + v4 - *(void *)a2) != 0;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevancePropertiesBuf>(apple::aiml::flatbuffers2::Verifier *a1, WidgetRelevancePropertiesBuf *a2)
{
  if (!a2) {
    return 1;
  }
  if (!*(_DWORD *)a2->var0) {
    return 1;
  }
  unint64_t v4 = 0;
  unsigned int v5 = a2 + 4;
  do
  {
    BOOL result = WidgetRelevancePropertiesBuf::Verify(&v5[*(unsigned int *)v5->var0], a1);
    if (!result) {
      break;
    }
    ++v4;
    v5 += 4;
  }
  while (v4 < *(unsigned int *)a2->var0);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyTableStart(apple::aiml::flatbuffers2::Verifier *this, const unsigned __int8 *a2)
{
  uint64_t v2 = *(void *)this;
  unint64_t v3 = (unint64_t)&a2[-*(void *)this];
  if ((v3 & 3) != 0 && *((unsigned char *)this + 40)) {
    return 0;
  }
  unint64_t v4 = *((void *)this + 1);
  BOOL v5 = v4 >= 5 && v4 - 4 >= v3;
  if (!v5) {
    return 0;
  }
  uint64_t v6 = *(int *)a2;
  unsigned int v7 = *((_DWORD *)this + 5);
  unsigned int v8 = *((_DWORD *)this + 4) + 1;
  *((_DWORD *)this + 4) = v8;
  unsigned int v9 = *((_DWORD *)this + 6) + 1;
  *((_DWORD *)this + 6) = v9;
  if (v8 > v7 || v9 > *((_DWORD *)this + 7)) {
    return 0;
  }
  unint64_t v10 = v3 - v6;
  if (v10)
  {
    uint64_t v11 = 0;
    if (*((unsigned char *)this + 40) || v4 - 2 < v10) {
      return v11;
    }
  }
  else if (v4 - 2 < v10)
  {
    return 0;
  }
  unint64_t v12 = *(unsigned __int16 *)(v2 + v10);
  if ((v12 & 1) != 0 && *((unsigned char *)this + 40)) {
    return 0;
  }
  BOOL v5 = v4 >= v12;
  unint64_t v14 = v4 - v12;
  return v14 != 0 && v5 && v14 >= v10;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(apple::aiml::flatbuffers2::Verifier *this, const unsigned __int8 *a2, unint64_t a3, unint64_t *a4)
{
  unint64_t v4 = (unint64_t)&a2[-*(void *)this];
  if ((v4 & 3) != 0 && *((unsigned char *)this + 40)) {
    return 0;
  }
  unint64_t v5 = *((void *)this + 1);
  if (v5 < 5 || v5 - 4 < v4) {
    return 0;
  }
  unint64_t v7 = *(unsigned int *)a2;
  if (0x7FFFFFFF / a3 <= v7) {
    return 0;
  }
  unint64_t v8 = v7 * a3 + 4;
  if (a4)
  {
    *a4 = v8 + v4;
    unint64_t v5 = *((void *)this + 1);
  }
  BOOL v9 = v5 > v8;
  unint64_t v10 = v5 - v8;
  return v9 && v10 >= v4;
}

BOOL WidgetRelevancePropertiesBuf::Verify(WidgetRelevancePropertiesBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      unint64_t v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 < 5u
        || (uint64_t v6 = *(unsigned __int16 *)v5[4].var0) == 0
        || (BOOL result = ExtensionIdentityBuf::Verify((ExtensionIdentityBuf *)&this[v6 + *(unsigned int *)this[v6].var0], a2)))
      {
        BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          unint64_t v7 = &this[-*(int *)this->var0];
          if (*(unsigned __int16 *)v7->var0 >= 7u && (uint64_t v8 = *(unsigned __int16 *)v7[6].var0) != 0) {
            BOOL v9 = &this[v8 + *(unsigned int *)this[v8].var0];
          }
          else {
            BOOL v9 = 0;
          }
          BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v9->var0);
          if (result)
          {
            unint64_t v10 = &this[-*(int *)this->var0];
            unsigned int v11 = *(unsigned __int16 *)v10->var0;
            if (v11 < 9
              || (!*(_WORD *)v10[8].var0
               || (BOOL result = 0, v12 = *((void *)a2 + 1), v12 >= 2)
               && v12 - 1 >= (unint64_t)this[*(unsigned __int16 *)v10[8].var0 - *(void *)a2].var0)
              && (v11 < 0xB
               || (!*(_WORD *)v10[10].var0
                || (BOOL result = 0, v13 = *((void *)a2 + 1), v13 >= 2)
                && v13 - 1 >= (unint64_t)this[*(unsigned __int16 *)v10[10].var0 - *(void *)a2].var0)
               && (v11 < 0xD
                || (uint64_t v14 = *(unsigned __int16 *)v10[12].var0) == 0
                || (BOOL result = 0, v15 = *((void *)a2 + 1), v15 >= 9)
                && v15 - 8 >= (unint64_t)this[v14 - *(void *)a2].var0)))
            {
              BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 0xEu);
              if (result)
              {
                uint64_t v16 = *(int *)this->var0;
                uint64_t v17 = -v16;
                size_t v18 = &this[-v16];
                if (*(unsigned __int16 *)v18->var0 >= 0xFu)
                {
                  uint64_t v19 = *(unsigned __int16 *)v18[14].var0;
                  if (v19)
                  {
                    BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v19 + *(unsigned int *)this[v19].var0].var0, 4uLL, 0);
                    if (!result) {
                      return result;
                    }
                    uint64_t v17 = -(uint64_t)*(int *)this->var0;
                  }
                }
                v20 = &this[v17];
                if (*(unsigned __int16 *)v20->var0 >= 0xFu && (uint64_t v21 = *(unsigned __int16 *)v20[14].var0) != 0) {
                  uint64_t v22 = (WidgetRelevanceBuf *)&this[v21 + *(unsigned int *)this[v21].var0];
                }
                else {
                  uint64_t v22 = 0;
                }
                BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevanceBuf>(a2, v22);
                if (result)
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyString(apple::aiml::flatbuffers2::Verifier *a1, const unsigned __int8 *a2)
{
  if (!a2) {
    return 1;
  }
  unint64_t v6 = 0;
  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a1, a2, 1uLL, &v6);
  if (result)
  {
    unint64_t v4 = *((void *)a1 + 1);
    return v4 >= 2 && v4 - 1 >= v6 && *(unsigned char *)(*(void *)a1 + v6) == 0;
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevanceBuf>(apple::aiml::flatbuffers2::Verifier *a1, WidgetRelevanceBuf *a2)
{
  if (!a2) {
    return 1;
  }
  if (!*(_DWORD *)a2->var0) {
    return 1;
  }
  unint64_t v4 = 0;
  unint64_t v5 = a2 + 4;
  do
  {
    BOOL result = WidgetRelevanceBuf::Verify(&v5[*(unsigned int *)v5->var0], a1);
    if (!result) {
      break;
    }
    ++v4;
    v5 += 4;
  }
  while (v4 < *(unsigned int *)a2->var0);
  return result;
}

BOOL ExtensionIdentityBuf::Verify(ExtensionIdentityBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      unint64_t v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 >= 5u && (uint64_t v6 = *(unsigned __int16 *)v5[4].var0) != 0) {
        unint64_t v7 = &this[v6 + *(unsigned int *)this[v6].var0];
      }
      else {
        unint64_t v7 = 0;
      }
      BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7->var0);
      if (result)
      {
        BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          uint64_t v8 = &this[-*(int *)this->var0];
          if (*(unsigned __int16 *)v8->var0 >= 7u && (uint64_t v9 = *(unsigned __int16 *)v8[6].var0) != 0) {
            unint64_t v10 = &this[v9 + *(unsigned int *)this[v9].var0];
          }
          else {
            unint64_t v10 = 0;
          }
          BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10->var0);
          if (result)
          {
            BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 8u);
            if (result)
            {
              unsigned int v11 = &this[-*(int *)this->var0];
              if (*(unsigned __int16 *)v11->var0 >= 9u && (uint64_t v12 = *(unsigned __int16 *)v11[8].var0) != 0) {
                unint64_t v13 = &this[v12 + *(unsigned int *)this[v12].var0];
              }
              else {
                unint64_t v13 = 0;
              }
              BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13->var0);
              if (result)
              {
                BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 0xAu);
                if (result)
                {
                  uint64_t v14 = &this[-*(int *)this->var0];
                  if (*(unsigned __int16 *)v14->var0 >= 0xBu && (uint64_t v15 = *(unsigned __int16 *)v14[10].var0) != 0) {
                    uint64_t v16 = &this[v15 + *(unsigned int *)this[v15].var0];
                  }
                  else {
                    uint64_t v16 = 0;
                  }
                  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16->var0);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL WidgetRelevanceBuf::Verify(WidgetRelevanceBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      unint64_t v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 >= 5u && (uint64_t v6 = *(unsigned __int16 *)v5[4].var0) != 0) {
        unint64_t v7 = &this[v6 + *(unsigned int *)this[v6].var0];
      }
      else {
        unint64_t v7 = 0;
      }
      BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7->var0);
      if (result)
      {
        BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          uint64_t v8 = &this[-*(int *)this->var0];
          if (*(unsigned __int16 *)v8->var0 < 7u
            || (uint64_t v9 = *(unsigned __int16 *)v8[6].var0) == 0
            || (BOOL result = IntentReferenceBuf::Verify((IntentReferenceBuf *)&this[v9 + *(unsigned int *)this[v9].var0], a2)))
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL IntentReferenceBuf::Verify(IntentReferenceBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    unint64_t v5 = &this[-*(int *)this->var0];
    if (*(unsigned __int16 *)v5->var0 < 5u
      || (uint64_t v6 = *(unsigned __int16 *)v5[4].var0) == 0
      || (result = 0, unint64_t v7 = *((void *)a2 + 1), v7 >= 9) && v7 - 8 >= (unint64_t)this[v6 - *(void *)a2].var0)
    {
      BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
      if (result)
      {
        uint64_t v8 = &this[-*(int *)this->var0];
        if (*(unsigned __int16 *)v8->var0 < 7u
          || (uint64_t v9 = *(unsigned __int16 *)v8[6].var0) == 0
          || (BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v9 + *(unsigned int *)this[v9].var0].var0, 1uLL, 0)))
        {
          BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 8u);
          if (result)
          {
            unint64_t v10 = &this[-*(int *)this->var0];
            if (*(unsigned __int16 *)v10->var0 < 9u
              || (uint64_t v11 = *(unsigned __int16 *)v10[8].var0) == 0
              || (BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v11 + *(unsigned int *)this[v11].var0].var0, 1uLL, 0)))
            {
              BOOL result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 0xAu);
              if (result)
              {
                uint64_t v12 = &this[-*(int *)this->var0];
                if (*(unsigned __int16 *)v12->var0 < 0xBu
                  || (uint64_t v13 = *(unsigned __int16 *)v12[10].var0) == 0
                  || (BOOL result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v13 + *(unsigned int *)this[v13].var0].var0, 1uLL, 0)))
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t std::function<apple::aiml::flatbuffers2::Offset<void> ()(unsigned long)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void *std::vector<apple::aiml::flatbuffers2::Offset<void>>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<apple::aiml::flatbuffers2::Offset<void>>::__vallocate[abi:ne180100](a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_190CAAB28(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<apple::aiml::flatbuffers2::Offset<void>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::vector<apple::aiml::flatbuffers2::Offset<void>>::__throw_length_error[abi:ne180100]();
  }
  BOOL result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<void>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void std::vector<apple::aiml::flatbuffers2::Offset<void>>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<void>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a2);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E56C8088, MEMORY[0x1E4FBA1C8]);
}

void sub_190CAAC20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  BOOL result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x192FD6D90);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<void>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, uint64_t a2, uint64_t a3)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::StartVector(a1, a3, 4uLL);
  if (a3)
  {
    uint64_t v6 = a2 - 4;
    uint64_t v7 = a3;
    do
    {
      uint64_t v8 = v7 - 1;
      int v9 = apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(a1, *(_DWORD *)(v6 + 4 * v7));
      apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)a1, v9);
      uint64_t v7 = v8;
    }
    while (v8);
  }
  return apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector(a1, a3);
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::StartVector(apple::aiml::flatbuffers2::FlatBufferBuilder *this, uint64_t a2, unint64_t a3)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested((uint64_t)this);
  *((unsigned char *)this + 70) = 1;
  uint64_t v6 = a3 * a2;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v6, 4uLL);
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v6, a3);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector(apple::aiml::flatbuffers2::FlatBufferBuilder *this, int a2)
{
  if (!*((unsigned char *)this + 70)) {
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector();
  }
  *((unsigned char *)this + 70) = 0;
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, a2);
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(apple::aiml::flatbuffers2::FlatBufferBuilder *this, uint64_t a2, unint64_t a3)
{
  if (*((void *)this + 9) < a3) {
    *((void *)this + 9) = a3;
  }
  return apple::aiml::flatbuffers2::vector_downward::fill(this, (a3 - 1) & (-a2 - (*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10))));
}

void sub_190CAB01C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void *std::__function::__value_func<apple::aiml::flatbuffers2::Offset<void> ()(unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::Finish(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unsigned int a2, const char *a3, int a4)
{
  BOOL v8 = a3 != 0;
  apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested((uint64_t)this);
  *((void *)this + 7) = *((void *)this + 5);
  uint64_t v9 = 4;
  if (a4) {
    uint64_t v9 = 8;
  }
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v9 + 4 * v8, *((void *)this + 9));
  if (a3)
  {
    if (strlen(a3) != 4) {
      apple::aiml::flatbuffers2::FlatBufferBuilder::Finish();
    }
    unint64_t v10 = (_DWORD *)(*((void *)this + 6) - apple::aiml::flatbuffers2::vector_downward::ensure_space(this, 4uLL));
    *((void *)this + 6) = v10;
    *unint64_t v10 = *(_DWORD *)a3;
  }
  int v11 = apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(this, a2);
  uint64_t result = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, v11);
  if (a4) {
    uint64_t result = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, *((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10));
  }
  *((unsigned char *)this + 71) = 1;
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<ExtensionIdentityBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  if (a2 && (*((void *)this + 1) < 8uLL || strncmp((const char *)(*(void *)this + a3 + 4), a2, 4uLL))) {
    return 0;
  }
  unsigned int v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (ExtensionIdentityBuf *)(*(void *)this + a3 + v5);
  return ExtensionIdentityBuf::Verify(v6, this);
}

void sub_190CAB45C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<WidgetRelevancePropertiesBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  if (a2 && (*((void *)this + 1) < 8uLL || strncmp((const char *)(*(void *)this + a3 + 4), a2, 4uLL))) {
    return 0;
  }
  unsigned int v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (WidgetRelevancePropertiesBuf *)(*(void *)this + a3 + v5);
  return WidgetRelevancePropertiesBuf::Verify(v6, this);
}

void sub_190CAB6E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<WidgetRelevanceBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  if (a2 && (*((void *)this + 1) < 8uLL || strncmp((const char *)(*(void *)this + a3 + 4), a2, 4uLL))) {
    return 0;
  }
  unsigned int v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (WidgetRelevanceBuf *)(*(void *)this + a3 + v5);
  return WidgetRelevanceBuf::Verify(v6, this);
}

void sub_190CAB964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<IntentReferenceBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  if (a2 && (*((void *)this + 1) < 8uLL || strncmp((const char *)(*(void *)this + a3 + 4), a2, 4uLL))) {
    return 0;
  }
  unsigned int v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (IntentReferenceBuf *)(*(void *)this + a3 + v5);
  return IntentReferenceBuf::Verify(v6, this);
}

void sub_190CABBE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CABD40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CABE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CABFC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CAC17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAC27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAC3D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC4E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC5F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAC8B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CACBB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CACCB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CACD58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CACED4(_Unwind_Exception *a1)
{
  unsigned int v5 = v3;

  _Unwind_Resume(a1);
}

void sub_190CAD0A4(_Unwind_Exception *a1)
{
  unsigned int v5 = v3;
  objc_destroyWeak(v5);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_190CAD1C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAD2CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAD3F8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v3 - 40));

  _Unwind_Resume(a1);
}

void sub_190CAD470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAD5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_190CAD628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAD708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAD790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAD830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_190CAD8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_190CAD9F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CADA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CADCE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_190CADE24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAE3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48)
{
  _Unwind_Resume(a1);
}

void sub_190CAE458()
{
}

void sub_190CAE460()
{
}

void sub_190CAE468()
{
}

void sub_190CAE470()
{
}

void sub_190CAE478()
{
}

void sub_190CAE480()
{
}

void sub_190CAE488()
{
}

void sub_190CAE490()
{
  JUMPOUT(0x190CAE448);
}

void sub_190CAE49C()
{
}

void sub_190CAE4A4()
{
}

void sub_190CAE650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAE6B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAE720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAE7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CAE980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAE9F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAEB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAF0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CAF214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAF2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190CAF3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190CAF474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAF688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAF83C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

Class __getFBDisplayManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  v7[0] = 0;
  if (!FrontBoardLibraryCore_frameworkLibrary)
  {
    v7[1] = (void *)MEMORY[0x1E4F143A8];
    v7[2] = (void *)3221225472;
    v7[3] = __FrontBoardLibraryCore_block_invoke;
    v7[4] = &__block_descriptor_40_e5_v8__0l;
    v7[5] = v7;
    long long v8 = xmmword_1E56C92F8;
    uint64_t v9 = 0;
    FrontBoardLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!FrontBoardLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *FrontBoardLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"CHSConfiguredWidgetDescriptor.m", 23, @"%s", v7[0]);

    goto LABEL_10;
  }
  if (v7[0]) {
    free(v7[0]);
  }
  Class result = objc_getClass("FBDisplayManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    unsigned int v5 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v6 = [NSString stringWithUTF8String:"Class getFBDisplayManagerClass(void)_block_invoke"];
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, @"CHSConfiguredWidgetDescriptor.m", 24, @"Unable to find class %s", "FBDisplayManager");

LABEL_10:
    __break(1u);
  }
  getFBDisplayManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_190CAFAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t __FrontBoardLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  FrontBoardLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_190CAFC0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAFC88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAFD84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CAFE3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CAFF58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB00E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB05D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33)
{
  _Unwind_Resume(a1);
}

void sub_190CB0BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0C50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0CBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CB0EBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB0FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB125C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_190CB1534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB175C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB187C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_190CB198C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190CB1A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB1B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB1E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);

  _Unwind_Resume(a1);
}

void sub_190CB1F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB2108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB230C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB2498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Block_object_dispose((const void *)(v22 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190CB2924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_190CB2AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB2D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB2E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB2F68(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190CB30F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB33CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB36C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB3D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB4038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB40A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB41D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB42A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB43F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB44C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB46D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB47A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB48D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB4BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB4CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB4DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB50A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_190CB5250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB53B0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190CB5700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB58E8(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

void sub_190CB5B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_190CB5C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB5CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB5E08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB6008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

id CHSLogChronoServices()
{
  if (CHSLogChronoServices_onceToken != -1) {
    dispatch_once(&CHSLogChronoServices_onceToken, &__block_literal_global_6);
  }
  id v0 = (void *)CHSLogChronoServices___logObj;
  return v0;
}

void __CHSLogChronoServices_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.chrono", "ChronoServices");
  uint64_t v1 = (void *)CHSLogChronoServices___logObj;
  CHSLogChronoServices___logObj = (uint64_t)v0;
}

id CHSLogClientSnapshots()
{
  if (CHSLogClientSnapshots_onceToken != -1) {
    dispatch_once(&CHSLogClientSnapshots_onceToken, &__block_literal_global_4);
  }
  os_log_t v0 = (void *)CHSLogClientSnapshots___logObj;
  return v0;
}

void __CHSLogClientSnapshots_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.chrono", "ClientSnapshots");
  uint64_t v1 = (void *)CHSLogClientSnapshots___logObj;
  CHSLogClientSnapshots___logObj = (uint64_t)v0;
}

id CHSLogWidgetHosts()
{
  if (CHSLogWidgetHosts_onceToken[0] != -1) {
    dispatch_once(CHSLogWidgetHosts_onceToken, &__block_literal_global_7_0);
  }
  os_log_t v0 = (void *)CHSLogWidgetHosts___logObj;
  return v0;
}

void __CHSLogWidgetHosts_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.chrono", "WidgetHosts");
  uint64_t v1 = (void *)CHSLogWidgetHosts___logObj;
  CHSLogWidgetHosts___logObj = (uint64_t)v0;
}

id CHSLogSubscriptions()
{
  if (CHSLogSubscriptions_onceToken != -1) {
    dispatch_once(&CHSLogSubscriptions_onceToken, &__block_literal_global_10);
  }
  os_log_t v0 = (void *)CHSLogSubscriptions___logObj;
  return v0;
}

void __CHSLogSubscriptions_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.chrono", "Subscriptions");
  uint64_t v1 = (void *)CHSLogSubscriptions___logObj;
  CHSLogSubscriptions___logObj = (uint64_t)v0;
}

void sub_190CB6394(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_190CB6434(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190CB6500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB6624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB66CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB6764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB687C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB692C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB69F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CB6A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB6AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB6BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB6C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB6D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB6EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CB6F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB7244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CB735C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB745C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190CB755C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB765C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB77BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB784C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB7928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB7A10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB7B4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB7C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB7D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB7F70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB806C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSWidgetClipBehavior(uint64_t a1)
{
  uint64_t v1 = @"client";
  if (a1 == 1) {
    uint64_t v1 = @"server";
  }
  if (a1 == 2) {
    return @"none";
  }
  else {
    return v1;
  }
}

void sub_190CB826C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_190CB8658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB87E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
  _Block_object_dispose(&a16, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_190CB88D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB895C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB8B58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CB8C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8E1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8EC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB8F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _genericiseIntent(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  uint64_t v2 = v1;
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v2 = INIntentWithTypedIntent();
  }
  return v2;
}

void sub_190CB8FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9240(_Unwind_Exception *a1)
{
  uint64_t v7 = v6;

  _Unwind_Resume(a1);
}

id _intentDataFromIntent(uint64_t a1)
{
  id v6 = 0;
  id v1 = +[CHSIntentReference _encodeToOPACK:a1 error:&v6];
  id v2 = v6;
  if (v2)
  {
    uint64_t v3 = CHSLogChronoServices();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      _intentDataFromIntent_cold_1((uint64_t)v2, v3);
    }

    id v4 = 0;
  }
  else
  {
    id v4 = v1;
  }

  return v4;
}

void sub_190CB9374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB98FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9EA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CB9F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBA040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CBA1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id _unifiedIntentDataIfPossible(void *a1)
{
  id v1 = a1;
  id v2 = [v1 _intentData];
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = v2;
  }
  else if (([v1 _isPartial] & 1) != 0 || !objc_msgSend(v1, "_isSchemaSeparated"))
  {
    id v4 = 0;
  }
  else
  {
    unsigned int v5 = [v1 intent];
    _intentDataFromIntent((uint64_t)v5);
    id v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  return v4;
}

void sub_190CBA2A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBA398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBA4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBA5E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBA778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBA8D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBA9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBAA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBAABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBABDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBAC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBACDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBAD6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL CHSWidgetRenderingModesIsValid(char a1)
{
  return (a1 & 7) != 0;
}

id NSStringFromCHSWidgetRenderingModes(uint64_t a1)
{
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithString:@"["];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  uint64_t v10 = __NSStringFromCHSWidgetRenderingModes_block_invoke;
  int v11 = &unk_1E56C8A10;
  uint64_t v13 = v14;
  id v3 = v2;
  id v12 = v3;
  id v4 = v9;
  if (a1)
  {
    char v15 = 0;
    uint8x8_t v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v5.i16[0] = vaddlv_u8(v5);
    int v6 = v5.i32[0];
    if (v5.i32[0])
    {
      unint64_t v7 = 0;
      do
      {
        if (((1 << v7) & a1) != 0)
        {
          ((void (*)(void *))v10)(v4);
          if (v15) {
            break;
          }
          --v6;
        }
        if (v7 > 0x3E) {
          break;
        }
        ++v7;
      }
      while (v6 > 0);
    }
  }

  [v3 appendString:@"]"];
  _Block_object_dispose(v14, 8);
  return v3;
}

void sub_190CBAF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, ...)
{
  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __NSStringFromCHSWidgetRenderingModes_block_invoke(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(void *)(*(void *)(*(void *)(result + 40) + 8) + 24)) {
    uint64_t result = [*(id *)(result + 32) appendString:@", "];
  }
  switch(a2)
  {
    case 1:
      id v4 = @"fullColor";
      goto LABEL_9;
    case 4:
      id v4 = @"accented";
      goto LABEL_9;
    case 2:
      id v4 = @"vibrant";
LABEL_9:
      uint64_t result = [*(id *)(v3 + 32) appendString:v4];
      break;
  }
  ++*(void *)(*(void *)(*(void *)(v3 + 40) + 8) + 24);
  return result;
}

void sub_190CBB030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBB0C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBB1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id getDeviceIDFromBundleID(void *a1)
{
  id v1 = a1;
  id v2 = [v1 stringByRemovingPercentEncoding];

  if ([v2 containsString:@"::"])
  {
    uint64_t v3 = [v2 componentsSeparatedByString:@"::"];
    id v4 = [v3 firstObject];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void sub_190CBB284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBB36C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBB418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBB4C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t CHSWidgetFamilyMaskFromWidgetFamily(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD) {
    return 0;
  }
  else {
    return qword_190D4A558[a1 - 1];
  }
}

void CHSWidgetFamilyMaskEnumerateFamilies(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __CHSWidgetFamilyMaskEnumerateFamilies_block_invoke;
    v6[3] = &unk_1E56C9500;
    uint64_t v8 = a1;
    id v7 = v3;
    uint8x8_t v5 = (void (**)(void *, uint64_t))_Block_copy(v6);
    v5[2](v5, 2);
    v5[2](v5, 4);
    v5[2](v5, 8);
    v5[2](v5, 32);
    v5[2](v5, 0x4000);
    v5[2](v5, 0x2000);
    v5[2](v5, 16);
    v5[2](v5, 64);
    v5[2](v5, 1024);
    v5[2](v5, 2048);
    v5[2](v5, 4096);
  }
}

void sub_190CBB6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t __CHSWidgetFamilyMaskEnumerateFamilies_block_invoke(uint64_t result, uint64_t a2)
{
  if ((a2 & ~*(void *)(result + 40)) == 0)
  {
    uint64_t v2 = *(void *)(result + 32);
    if ((a2 & 2) != 0)
    {
      uint64_t v3 = 1;
    }
    else if ((a2 & 4) != 0)
    {
      uint64_t v3 = 2;
    }
    else if ((a2 & 8) != 0)
    {
      uint64_t v3 = 3;
    }
    else if ((a2 & 0x20) != 0)
    {
      uint64_t v3 = 5;
    }
    else if ((a2 & 0x4000) != 0)
    {
      uint64_t v3 = 14;
    }
    else if ((a2 & 0x2000) != 0)
    {
      uint64_t v3 = 13;
    }
    else if ((a2 & 0x10) != 0)
    {
      uint64_t v3 = 4;
    }
    else if ((a2 & 0x40) != 0)
    {
      uint64_t v3 = 6;
    }
    else if ((a2 & 0x400) != 0)
    {
      uint64_t v3 = 10;
    }
    else if ((a2 & 0x800) != 0)
    {
      uint64_t v3 = 11;
    }
    else
    {
      uint64_t v3 = (a2 << 51 >> 63) & 0xC;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
  }
  return result;
}

BOOL CHSWidgetFamilyMaskContainsFamily(uint64_t a1, uint64_t a2)
{
  return (CHSWidgetFamilyMaskFromWidgetFamily(a2) & ~a1) == 0;
}

__CFString *NSStringFromWidgetFamily(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD) {
    return @"undefined";
  }
  else {
    return off_1E56C9570[a1 - 1];
  }
}

BOOL CHSWidgetFamilyIsAccessory(uint64_t a1)
{
  return (unint64_t)(a1 - 10) < 3;
}

uint64_t CHSWidgetFamilyIsValid(unint64_t a1)
{
  return (a1 < 0xF) & (0x7C7Eu >> a1);
}

uint64_t CHSWidgetFamilyFromString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"systemSmall"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"systemMedium"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"systemLarge"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"transparentMedium"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"control1x1"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"platterMedium"])
  {
    uint64_t v2 = 13;
  }
  else if ([v1 isEqualToString:@"systemExtraLarge"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"newsLargeTall"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"accessoryCircular"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"accessoryRectangular"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"accessoryInline"])
  {
    uint64_t v2 = 12;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_190CBB990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id CHSWidgetFamilyMaskDescription(uint64_t a1)
{
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x3032000000;
  id v12 = __Block_byref_object_copy__5;
  uint64_t v13 = __Block_byref_object_dispose__5;
  id v14 = [MEMORY[0x1E4F28E78] string];
  objc_msgSend((id)v10[5], "appendString:", @"(");
  uint64_t v5 = 0;
  int v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v8 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __CHSWidgetFamilyMaskDescription_block_invoke;
  v4[3] = &unk_1E56C9528;
  v4[4] = &v5;
  v4[5] = &v9;
  CHSWidgetFamilyMaskEnumerateFamilies(a1, v4);
  if (!v6[3]) {
    [(id)v10[5] appendString:@"undefined"];
  }
  [(id)v10[5] appendString:@""]);
  id v2 = (id)v10[5];
  _Block_object_dispose(&v5, 8);
  _Block_object_dispose(&v9, 8);

  return v2;
}

void sub_190CBBB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __CHSWidgetFamilyMaskDescription_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = NSStringFromWidgetFamily(a2);
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v5 = (id)v3;
    uint64_t v4 = [NSString stringWithFormat:@", %@", v3];

    uint64_t v3 = v4;
  }
  id v6 = (id)v3;
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) appendString:v3];
  ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

void sub_190CBBC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL CHSWidgetFontStyleFromTextSizeAdjustment(BOOL result)
{
  if (result != 2) {
    return result == 1;
  }
  return result;
}

uint64_t CHSWidgetTextSizeAdjustmentFromFontStyle(uint64_t a1)
{
  if (a1 == 1) {
    return 1;
  }
  else {
    return 2 * (a1 == 2);
  }
}

__CFString *CHSWidgetTextSizeAdjustmentDescription(uint64_t a1)
{
  id v1 = @"none";
  if (a1 == 1) {
    id v1 = @"increment";
  }
  if (a1 == 2) {
    return @"decrement";
  }
  else {
    return v1;
  }
}

__CFString *CHSWidgetFontStyleDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xA) {
    return @"default";
  }
  else {
    return off_1E56C95E0[a1 - 1];
  }
}

__CFString *CHSDescriptionForWidgetVisibility(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"default";
  }
  else {
    return off_1E56C9638[a1 - 1];
  }
}

__CFString *NSStringFromCHSWidgetContentType(uint64_t a1)
{
  if (a1) {
    return @"Preview";
  }
  else {
    return @"Timeline";
  }
}

id NSStringFromCHSWidgetLocationStyleMask(uint64_t a1)
{
  uint64_t v14 = 0;
  char v15 = &v14;
  uint64_t v16 = 0x3032000000;
  uint64_t v17 = __Block_byref_object_copy__5;
  size_t v18 = __Block_byref_object_dispose__5;
  id v19 = [MEMORY[0x1E4F28E78] string];
  objc_msgSend((id)v15[5], "appendString:", @"(");
  v13[0] = 0;
  v13[1] = v13;
  v13[2] = 0x2020000000;
  v13[3] = 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  uint64_t v9 = __NSStringFromCHSWidgetLocationStyleMask_block_invoke;
  uint64_t v10 = &unk_1E56C9550;
  uint64_t v11 = v13;
  id v12 = &v14;
  id v2 = v8;
  if (a1)
  {
    char v20 = 0;
    uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v3.i16[0] = vaddlv_u8(v3);
    int v4 = v3.i32[0];
    if (v3.i32[0])
    {
      unint64_t v5 = 0;
      do
      {
        if (((1 << v5) & a1) != 0)
        {
          ((void (*)(void *))v9)(v2);
          if (v20) {
            break;
          }
          --v4;
        }
        if (v5 > 0x3E) {
          break;
        }
        ++v5;
      }
      while (v4 > 0);
    }
  }

  [(id)v15[5] appendString:@""]);
  id v6 = (id)v15[5];
  _Block_object_dispose(v13, 8);
  _Block_object_dispose(&v14, 8);

  return v6;
}

void sub_190CBBEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  _Unwind_Resume(a1);
}

uint64_t __NSStringFromCHSWidgetLocationStyleMask_block_invoke(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24)) {
    uint64_t result = [*(id *)(*(void *)(*(void *)(result + 40) + 8) + 40) appendString:@", "];
  }
  uint64_t v4 = a2 - 1;
  if (unint64_t)(a2 - 1) <= 7 && ((0x8Bu >> v4)) {
    uint64_t result = [*(id *)(*(void *)(*(void *)(v3 + 40) + 8) + 40) appendString:off_1E56C9650[v4]];
  }
  ++*(void *)(*(void *)(*(void *)(v3 + 32) + 8) + 24);
  return result;
}

uint64_t CHSWidgetLocationStyleMaskFromStyle(unint64_t a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return qword_190D4A5C8[a1];
  }
}

uint64_t CHSEdgeInsetsEqualToEdgeInsets()
{
  if (!BSFloatEqualToFloat()
    || !BSFloatEqualToFloat()
    || !BSFloatEqualToFloat())
  {
    return 0;
  }
  return BSFloatEqualToFloat();
}

uint64_t CHSEdgeInsetsDescription(double a1, double a2, double a3, double a4)
{
  return [NSString stringWithFormat:@"{%.*g, %.*g, %.*g, %.*g}", 17, *(void *)&a1, 17, *(void *)&a2, 17, *(void *)&a3, 17, *(void *)&a4];
}

uint64_t CHSEdgeInsetsCompare(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if (a1 < a5) {
    return -1;
  }
  if (a1 > a5) {
    return 1;
  }
  if (a2 < a6) {
    return -1;
  }
  if (a2 > a6) {
    return 1;
  }
  if (a3 < a7) {
    return -1;
  }
  uint64_t v9 = -1;
  if (a4 >= a8) {
    uint64_t v9 = a4 > a8;
  }
  if (a3 <= a7) {
    return v9;
  }
  else {
    return 1;
  }
}

void sub_190CBC148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBC1D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBC28C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CBC374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBC458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSDynamicTextSupport(uint64_t a1)
{
  id v1 = @"Unspecified";
  if (a1 == 2) {
    id v1 = @"No";
  }
  if (a1 == 1) {
    return @"Yes";
  }
  else {
    return v1;
  }
}

void sub_190CBC5B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBC654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBC794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBC8E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBCA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBCEB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBCF38()
{
}

void sub_190CBCF40()
{
}

void sub_190CBCF48()
{
}

void sub_190CBCF50()
{
}

void sub_190CBCF58()
{
}

void sub_190CBCF60()
{
}

void sub_190CBCF68()
{
}

void sub_190CBCF70()
{
}

void sub_190CBD0B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBD1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBD21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBD4B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBD56C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBD648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CBD7E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBD8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBDBD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBDDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBE0DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBE1BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBE3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  uint64_t v21 = v20;

  _Unwind_Resume(a1);
}

void sub_190CBE924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190CBEA68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBEC04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *_CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform(uint64_t a1, uint64_t a2)
{
  if (_CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform___once != -1) {
    dispatch_once(&_CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform___once, &__block_literal_global_8);
  }
  uint64_t v4 = (void *)__sdkVersionPlatformToSystemVersion;
  unint64_t v5 = [MEMORY[0x1E4F28ED0] numberWithUnsignedInteger:a1];
  id v6 = [v4 objectForKeyedSubscript:v5];
  uint64_t v7 = [MEMORY[0x1E4F28ED0] numberWithUnsignedInteger:a2];
  uint64_t v8 = [v6 objectForKeyedSubscript:v7];

  if (v8)
  {
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v10 = CHSLogChronoServices();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      _CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform_cold_1(a1, a2, v10);
    }

    uint64_t v9 = @"9999999.0";
  }

  return v9;
}

void sub_190CBEDE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBEF68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _CHSEnablementIsValid(unint64_t a1)
{
  return a1 < 3;
}

void sub_190CBF124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_190CBF268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF35C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF3DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF84C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CBF8E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBF9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CBFBEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBFC6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CBFE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC040C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

Class __getNSLocaleClass_block_invoke(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  v7[0] = 0;
  if (!IntlPreferencesLibraryCore_frameworkLibrary)
  {
    v7[1] = (void *)MEMORY[0x1E4F143A8];
    v7[2] = (void *)3221225472;
    v7[3] = __IntlPreferencesLibraryCore_block_invoke;
    v7[4] = &__block_descriptor_40_e5_v8__0l;
    v7[5] = v7;
    long long v8 = xmmword_1E56C9710;
    uint64_t v9 = 0;
    IntlPreferencesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!IntlPreferencesLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *IntlPreferencesLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"CHSBaseDescriptor.m", 17, @"%s", v7[0]);

    goto LABEL_10;
  }
  if (v7[0]) {
    free(v7[0]);
  }
  Class result = objc_getClass("NSLocale");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    unint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
    id v6 = [NSString stringWithUTF8String:"Class getNSLocaleClass(void)_block_invoke"];
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, @"CHSBaseDescriptor.m", 18, @"Unable to find class %s", "NSLocale");

LABEL_10:
    __break(1u);
  }
  getNSLocaleClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_190CC085C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t __IntlPreferencesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IntlPreferencesLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_190CC0994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC0A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC0C2C(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

void sub_190CC0CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC0E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC0F20(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_190CC1040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC1128(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_190CC122C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC1340(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_190CC1418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC15F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_190CC16AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC1754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC17D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC1920(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190CC1B28(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_190CC1C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CC1D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CC1E98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC1F8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC20BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC21AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC2254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC233C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC24B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC266C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC28F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC2A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC2C74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC2E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC2EC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC2F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CC3098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC30F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC31D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CC3628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC3880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC3BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_190CC3D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC3EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC3F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC3FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC4048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC40B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC412C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC41B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC4224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC42F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC4410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromCHSDisplayGamut(uint64_t a1)
{
  if (a1) {
    return @"sRGB";
  }
  else {
    return @"P3";
  }
}

void sub_190CC457C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC45F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC47C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC489C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC49E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC4CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4EF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC4FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CC50EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC51B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC53C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC5474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC5544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id CHSWidgetRelevanceServiceCacheDirectory()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t started = sysdir_start_search_path_enumeration_private();
  MEMORY[0x192FD7A60](started, v6);
  id v1 = [NSString stringWithCString:v6 encoding:4];
  id v2 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v1];
  uint64_t v3 = [v2 URLByAppendingPathComponent:@"com.apple.chrono"];

  uint64_t v4 = [v3 URLByAppendingPathComponent:@"widget-relevance-cache"];

  return v4;
}

void sub_190CC56C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *CHSWidgetLocationDescription(unint64_t a1)
{
  if (a1 > 8) {
    return @"todayList";
  }
  else {
    return off_1E56C9728[a1];
  }
}

__CFString *NSStringFromWidgetLocation(unint64_t a1)
{
  if (a1 > 8) {
    return @"todayList";
  }
  else {
    return off_1E56C9728[a1];
  }
}

void sub_190CC5798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC5814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC58D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC596C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC5A74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC5B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC5C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC5F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_190CC6038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC6114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CC61EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CC6328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t CHSPlatformFromDYLDPlatform(int a1)
{
  if ((a1 - 1) > 8) {
    return 0;
  }
  else {
    return qword_190D4A5E8[a1 - 1];
  }
}

uint64_t CHSCurrentPlatform()
{
  unsigned int v0 = dyld_get_active_platform() - 1;
  if (v0 > 8) {
    return 0;
  }
  else {
    return qword_190D4A5E8[v0];
  }
}

void sub_190CC64B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC67F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC685C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_190CC69F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC6B94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6CC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC6F7C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_190CC7104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _CHSUniqueWidgetRateLimitConfigurationName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = [NSString stringWithFormat:@"%@_%@_%@", a1, a2, a3];
  return v3;
}

void sub_190CC72B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC74F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC75A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_190CC76D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC77B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *chs_debugDescriptionForErrorCode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return &stru_1EE0A1408;
  }
  else {
    return off_1E56C97C8[a1 - 1];
  }
}

void sub_190CC7900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC7FC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC80E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC81A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CHSBezierPath;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_190CC8244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC82E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id __encodePathIntoData(const CGPath *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA58]);
  CGPathApply(a1, v2, (CGPathApplierFunction)__encodePathElementIntoData);
  return v2;
}

void sub_190CC8368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC845C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t __createPathByDecodingData(void *a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  unint64_t v2 = [v1 length];
  if (v2)
  {
    Mutable = CGPathCreateMutable();
    uint64_t v4 = [v1 bytes];
    unint64_t v5 = 0;
    long long v24 = *MEMORY[0x1E4F1DAD8];
    do
    {
      uint64_t v6 = *(unsigned int *)(v4 + v5 + 4);
      uint64_t v7 = *(int *)(v4 + v5);
      long long v25 = v24;
      long long v26 = v24;
      long long v27 = v24;
      if (v7 > 3) {
        int v8 = 0;
      }
      else {
        int v8 = dword_190D4A630[v7];
      }
      unint64_t v9 = v5 + 8;
      if (v6 != v8 || v6 == 0)
      {
        v5 += 8;
      }
      else
      {
        uint64_t v11 = (float64x2_t *)&v25;
        uint64_t v12 = v6;
        do
        {
          unint64_t v5 = v9 + 8;
          *v11++ = vcvtq_f64_f32(*(float32x2_t *)(v4 + v9));
          v9 += 8;
          --v12;
        }
        while (v12);
      }
      switch((int)v7)
      {
        case 0:
          if (v6 != v8)
          {
            id v19 = [MEMORY[0x1E4F28B00] currentHandler];
            uint64_t v14 = [NSString stringWithUTF8String:"CGPathRef __createPathByDecodingData(NSData *__strong)"];
            [v19 handleFailureInFunction:v14 file:@"CHSBezierPath.m" lineNumber:86 description:@"incorrect number of points for path element type kCGPathElementMoveToPoint"];
          }
          CGPathMoveToPoint(Mutable, 0, *(CGFloat *)&v25, *((CGFloat *)&v25 + 1));
          break;
        case 1:
          if (v6 != v8)
          {
            uint64_t v23 = [MEMORY[0x1E4F28B00] currentHandler];
            size_t v18 = [NSString stringWithUTF8String:"CGPathRef __createPathByDecodingData(NSData *__strong)"];
            [v23 handleFailureInFunction:v18 file:@"CHSBezierPath.m" lineNumber:90 description:@"incorrect number of points for path element type kCGPathElementAddLineToPoint"];
          }
          CGPathAddLineToPoint(Mutable, 0, *(CGFloat *)&v25, *((CGFloat *)&v25 + 1));
          break;
        case 2:
          if (v6 != v8)
          {
            uint64_t v21 = [MEMORY[0x1E4F28B00] currentHandler];
            uint64_t v16 = [NSString stringWithUTF8String:"CGPathRef __createPathByDecodingData(NSData *__strong)"];
            [v21 handleFailureInFunction:v16 file:@"CHSBezierPath.m" lineNumber:94 description:@"incorrect number of points for path element type kCGPathElementAddQuadCurveToPoint"];
          }
          CGPathAddQuadCurveToPoint(Mutable, 0, *(CGFloat *)&v25, *((CGFloat *)&v25 + 1), *(CGFloat *)&v26, *((CGFloat *)&v26 + 1));
          break;
        case 3:
          if (v6 != v8)
          {
            uint64_t v22 = [MEMORY[0x1E4F28B00] currentHandler];
            uint64_t v17 = [NSString stringWithUTF8String:"CGPathRef __createPathByDecodingData(NSData *__strong)"];
            [v22 handleFailureInFunction:v17 file:@"CHSBezierPath.m" lineNumber:98 description:@"incorrect number of points for path element type kCGPathElementAddCurveToPoint"];
          }
          CGPathAddCurveToPoint(Mutable, 0, *(CGFloat *)&v25, *((CGFloat *)&v25 + 1), *(CGFloat *)&v26, *((CGFloat *)&v26 + 1), *(CGFloat *)&v27, *((CGFloat *)&v27 + 1));
          break;
        case 4:
          if (v6 != v8)
          {
            char v20 = [MEMORY[0x1E4F28B00] currentHandler];
            char v15 = [NSString stringWithUTF8String:"CGPathRef __createPathByDecodingData(NSData *__strong)"];
            [v20 handleFailureInFunction:v15 file:@"CHSBezierPath.m" lineNumber:102 description:@"incorrect number of points for path element type kCGPathElementCloseSubpath"];
          }
          CGPathCloseSubpath(Mutable);
          break;
        default:
          break;
      }
    }
    while (v5 < v2);
    unint64_t v2 = MEMORY[0x192FD6BD0](Mutable);
    CGPathRelease(Mutable);
  }

  return v2;
}

void sub_190CC88A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_190CC89A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_190CC8AAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ____copyPathByApplying_block_invoke(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(double **)(a2 + 8);
  switch(*(_DWORD *)a2)
  {
    case 0:
      float v3 = *v2;
      float v4 = v2[1];
      CGPathMoveToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v3, v4);
      break;
    case 1:
      float v5 = *v2;
      float v6 = v2[1];
      CGPathAddLineToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v5, v6);
      break;
    case 2:
      float v7 = *v2;
      float v8 = v2[1];
      float v9 = v2[2];
      float v10 = v2[3];
      CGPathAddQuadCurveToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v7, v8, v9, v10);
      break;
    case 3:
      float v11 = *v2;
      float v12 = v2[1];
      float v13 = v2[2];
      float v14 = v2[3];
      float v15 = v2[4];
      float v16 = v2[5];
      CGPathAddCurveToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v11, v12, v13, v14, v15, v16);
      break;
    case 4:
      CGPathCloseSubpath(*(CGMutablePathRef *)(a1 + 32));
      break;
    default:
      return;
  }
}

void __encodePathElementIntoData(void *a1, int *a2)
{
  id v3 = a1;
  int v13 = *a2;
  [v3 appendBytes:&v13 length:4];
  uint64_t v4 = *a2;
  if (v4 > 3) {
    unsigned int v5 = 0;
  }
  else {
    unsigned int v5 = dword_190D4A630[v4];
  }
  unsigned int v12 = v5;
  [v3 appendBytes:&v12 length:4];
  if (v12)
  {
    uint64_t v6 = 0;
    for (unint64_t i = 0; i < v12; ++i)
    {
      float v8 = *(double *)(*((void *)a2 + 1) + v6);
      float v11 = v8;
      [v3 appendBytes:&v11 length:4];
      float v9 = *(double *)(*((void *)a2 + 1) + v6 + 8);
      float v10 = v9;
      [v3 appendBytes:&v10 length:4];
      v6 += 16;
    }
  }
}

void sub_190CC8CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t CHSHostActivationState.description.getter()
{
  if (*v0) {
    return 0x6574617669746361;
  }
  else {
    return 0x6176697463616564;
  }
}

ChronoServices::CHSHostActivationState_optional __swiftcall CHSHostActivationState.init(rawValue:)(Swift::UInt64 rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *id v1 = v2;
  return (ChronoServices::CHSHostActivationState_optional)rawValue;
}

uint64_t CHSHostActivationState.rawValue.getter()
{
  return *v0;
}

BOOL sub_190CC8D54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_190CC8D6C()
{
  return sub_190D423E8();
}

uint64_t sub_190CC8DB4()
{
  return sub_190D423C8();
}

uint64_t sub_190CC8DE0()
{
  return sub_190D423E8();
}

void *sub_190CC8E24@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_190CC8E44(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_190CC8E50()
{
  if (*v0) {
    return 0x6574617669746361;
  }
  else {
    return 0x6176697463616564;
  }
}

uint64_t sub_190CC8E98()
{
  return sub_190D41BB8();
}

uint64_t sub_190CC8EF8()
{
  return sub_190D41B58();
}

void sub_190CC9030(void *a1)
{
  char v2 = v1;
  char v3 = *(void **)&v1[OBJC_IVAR___CHSControlHost_configuration];
  if (a1)
  {
    if (v3)
    {
      uint64_t v4 = a1;
      type metadata accessor for CHSControlConfiguration(0);
      id v5 = v3;
      id v6 = v4;
      LOBYTE(v4) = sub_190D41DE8();

      if (v4) {
        return;
      }
    }
  }
  else if (!v3)
  {
    return;
  }
  if (qword_1E92AA5B0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_190D41778();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E92B30A0);
  float v8 = v2;
  float v9 = sub_190D41758();
  os_log_type_t v10 = sub_190D41D48();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    unsigned int v12 = (void *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v25[0] = v13;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v14 = *(void *)&v8[OBJC_IVAR___CHSControlHost__loggingIdentifier];
    unint64_t v15 = *(void *)&v8[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
    swift_bridgeObjectRetain();
    sub_190CCB3A8(v14, v15, v25);
    sub_190D41E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2112;
    v23[0] = v8;
    float v16 = v8;
    sub_190D41E48();
    void *v12 = v8;

    _os_log_impl(&dword_190C6F000, v9, v10, "[%s]: Configuration changed: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v13, -1, -1);
    MEMORY[0x192FD7910](v11, -1, -1);
  }
  else
  {
  }
  sub_190CCAAF0((uint64_t)&v8[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v25);
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v20 = *(void *)&v8[OBJC_IVAR___CHSControlHost__identifier];
  uint64_t v19 = *(void *)&v8[OBJC_IVAR___CHSControlHost__identifier + 8];
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(v8, sel_configuration);
  char v22 = v8[OBJC_IVAR___CHSControlHost__activationState];
  v23[0] = v20;
  v23[1] = v19;
  v23[2] = v21;
  char v24 = v22;
  (*(void (**)(void *, uint64_t, uint64_t))(v18 + 48))(v23, v17, v18);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
}

void __swiftcall CHSControlHost.init(identifier:)(CHSControlHost *__return_ptr retstr, Swift::String identifier)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  char v3 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithIdentifier_, v3);
}

id CHSControlHost.init(identifier:)()
{
  id v1 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_configuration_, v1, 0);

  return v2;
}

void __swiftcall CHSControlHost.init(identifier:configuration:)(CHSControlHost *__return_ptr retstr, Swift::String identifier, CHSControlConfiguration_optional *configuration)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithIdentifier_configuration_, v5, configuration);
}

char *CHSControlHost.init(identifier:configuration:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = OBJC_IVAR___CHSControlHost_configuration;
  *(void *)&v3[OBJC_IVAR___CHSControlHost_configuration] = 0;
  v3[OBJC_IVAR___CHSControlHost__invalid] = 0;
  id v6 = &v3[OBJC_IVAR___CHSControlHost__identifier];
  *id v6 = a1;
  v6[1] = a2;
  uint64_t v7 = &v3[OBJC_IVAR___CHSControlHost__loggingIdentifier];
  *uint64_t v7 = a1;
  v7[1] = a2;
  v3[OBJC_IVAR___CHSControlHost__activationState] = 0;
  uint64_t v8 = qword_1E92AA710;
  float v9 = v3;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_190CCAAF0((uint64_t)&qword_1E92AA6E0, (uint64_t)&v36);
  sub_190CCAB54(&v36, (uint64_t)&v9[OBJC_IVAR___CHSControlHost__serverConnection]);
  os_log_type_t v10 = *(void **)&v3[v5];
  *(void *)&v3[v5] = a3;
  id v32 = a3;

  v35.receiver = v9;
  v35.super_class = (Class)CHSControlHost;
  id v11 = objc_msgSendSuper2(&v35, sel_init);
  uint64_t v12 = qword_1E92AA5B0;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_190D41778();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E92B30A0);
  unint64_t v15 = (char *)v13;
  float v16 = sub_190D41758();
  os_log_type_t v17 = sub_190D41D48();
  if (!os_log_type_enabled(v16, v17))
  {

    if (a3) {
      goto LABEL_7;
    }
LABEL_9:

    return v15;
  }
  uint64_t v18 = swift_slowAlloc();
  uint64_t v19 = (void *)swift_slowAlloc();
  uint64_t v20 = swift_slowAlloc();
  *(void *)&long long v36 = v20;
  *(_DWORD *)uint64_t v18 = 136315394;
  uint64_t v31 = a3;
  uint64_t v22 = *(void *)&v15[OBJC_IVAR___CHSControlHost__loggingIdentifier];
  unint64_t v21 = *(void *)&v15[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
  swift_bridgeObjectRetain();
  sub_190CCB3A8(v22, v21, (uint64_t *)&v36);
  sub_190D41E48();

  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 12) = 2112;
  v33[0] = v15;
  uint64_t v23 = v15;
  sub_190D41E48();
  *uint64_t v19 = v15;

  _os_log_impl(&dword_190C6F000, v16, v17, "[%s]: Created: %@", (uint8_t *)v18, 0x16u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
  swift_arrayDestroy();
  MEMORY[0x192FD7910](v19, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x192FD7910](v20, -1, -1);
  MEMORY[0x192FD7910](v18, -1, -1);

  if (!v31) {
    goto LABEL_9;
  }
LABEL_7:
  sub_190CCAAF0((uint64_t)&v15[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)&v36);
  uint64_t v24 = v37;
  uint64_t v25 = v38;
  __swift_project_boxed_opaque_existential_1(&v36, v37);
  uint64_t v27 = *(void *)&v15[OBJC_IVAR___CHSControlHost__identifier];
  uint64_t v26 = *(void *)&v15[OBJC_IVAR___CHSControlHost__identifier + 8];
  swift_bridgeObjectRetain();
  id v28 = objc_msgSend(v15, sel_configuration);
  char v29 = v15[OBJC_IVAR___CHSControlHost__activationState];
  v33[0] = v27;
  v33[1] = v26;
  v33[2] = v28;
  char v34 = v29;
  (*(void (**)(void *, uint64_t, uint64_t))(v25 + 48))(v33, v24, v25);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
  return v15;
}

Swift::Void __swiftcall CHSControlHost.activate()()
{
  if ((*((unsigned char *)v0 + OBJC_IVAR___CHSControlHost__invalid) & 1) == 0)
  {
    if (qword_1E92AA1F8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_190D41778();
    __swift_project_value_buffer(v1, (uint64_t)qword_1E92B3048);
    id v2 = v0;
    char v3 = sub_190D41758();
    os_log_type_t v4 = sub_190D41D48();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      id v6 = (void *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      v20[0] = v7;
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v8 = *(void *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier];
      unint64_t v9 = *(void *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
      swift_bridgeObjectRetain();
      sub_190CCB3A8(v8, v9, v20);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2112;
      v18[0] = v2;
      os_log_type_t v10 = v2;
      sub_190D41E48();
      *id v6 = v2;

      _os_log_impl(&dword_190C6F000, v3, v4, "[%s]: Activated: %@", (uint8_t *)v5, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v6, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v7, -1, -1);
      MEMORY[0x192FD7910](v5, -1, -1);
    }
    else
    {
    }
    uint64_t v11 = OBJC_IVAR___CHSControlHost__activationState;
    v2[OBJC_IVAR___CHSControlHost__activationState] = 1;
    sub_190CCAAF0((uint64_t)&v2[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v20);
    uint64_t v12 = v21;
    uint64_t v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    uint64_t v15 = *(void *)&v2[OBJC_IVAR___CHSControlHost__identifier];
    uint64_t v14 = *(void *)&v2[OBJC_IVAR___CHSControlHost__identifier + 8];
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v2, sel_configuration);
    char v17 = v2[v11];
    v18[0] = v15;
    v18[1] = v14;
    v18[2] = v16;
    char v19 = v17;
    (*(void (**)(void *, uint64_t, uint64_t))(v13 + 48))(v18, v12, v13);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
}

Swift::Void __swiftcall CHSControlHost.deactivate()()
{
  if ((*((unsigned char *)v0 + OBJC_IVAR___CHSControlHost__invalid) & 1) == 0)
  {
    if (qword_1E92AA1F8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_190D41778();
    __swift_project_value_buffer(v1, (uint64_t)qword_1E92B3048);
    id v2 = v0;
    char v3 = sub_190D41758();
    os_log_type_t v4 = sub_190D41D48();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      id v6 = (void *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      v20[0] = v7;
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v8 = *(void *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier];
      unint64_t v9 = *(void *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
      swift_bridgeObjectRetain();
      sub_190CCB3A8(v8, v9, v20);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2112;
      v18[0] = v2;
      os_log_type_t v10 = v2;
      sub_190D41E48();
      *id v6 = v2;

      _os_log_impl(&dword_190C6F000, v3, v4, "[%s]: Deactivated: %@", (uint8_t *)v5, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v6, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v7, -1, -1);
      MEMORY[0x192FD7910](v5, -1, -1);
    }
    else
    {
    }
    uint64_t v11 = OBJC_IVAR___CHSControlHost__activationState;
    v2[OBJC_IVAR___CHSControlHost__activationState] = 0;
    sub_190CCAAF0((uint64_t)&v2[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v20);
    uint64_t v12 = v21;
    uint64_t v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    uint64_t v15 = *(void *)&v2[OBJC_IVAR___CHSControlHost__identifier];
    uint64_t v14 = *(void *)&v2[OBJC_IVAR___CHSControlHost__identifier + 8];
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v2, sel_configuration);
    char v17 = v2[v11];
    v18[0] = v15;
    v18[1] = v14;
    v18[2] = v16;
    char v19 = v17;
    (*(void (**)(void *, uint64_t, uint64_t))(v13 + 56))(v18, v12, v13);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
}

Swift::Void __swiftcall CHSControlHost.invalidate()()
{
  if ((v0[OBJC_IVAR___CHSControlHost__invalid] & 1) == 0)
  {
    uint64_t v1 = v0;
    v0[OBJC_IVAR___CHSControlHost__invalid] = 1;
    uint64_t v2 = OBJC_IVAR___CHSControlHost__activationState;
    v0[OBJC_IVAR___CHSControlHost__activationState] = 0;
    if (qword_1E92AA1F8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_190D41778();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E92B3048);
    os_log_type_t v4 = v0;
    uint64_t v5 = sub_190D41758();
    os_log_type_t v6 = sub_190D41D48();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v21[0] = v18;
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v9 = *(void *)&v4[OBJC_IVAR___CHSControlHost__loggingIdentifier];
      unint64_t v10 = *(void *)&v4[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
      swift_bridgeObjectRetain();
      sub_190CCB3A8(v9, v10, v21);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2112;
      v19[0] = v4;
      uint64_t v11 = v4;
      sub_190D41E48();
      *uint64_t v8 = v4;

      _os_log_impl(&dword_190C6F000, v5, v6, "[%s]: Invalidated: %@", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v18, -1, -1);
      MEMORY[0x192FD7910](v7, -1, -1);
    }
    else
    {
    }
    sub_190CCAAF0((uint64_t)&v4[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v21);
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v15 = *(void *)&v4[OBJC_IVAR___CHSControlHost__identifier];
    uint64_t v14 = *(void *)&v4[OBJC_IVAR___CHSControlHost__identifier + 8];
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v4, sel_configuration);
    char v17 = v1[v2];
    v19[0] = v15;
    v19[1] = v14;
    v19[2] = v16;
    char v20 = v17;
    (*(void (**)(void *, uint64_t, uint64_t))(v13 + 64))(v19, v12, v13);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  }
}

id CHSControlHost.description.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v0);
  if (!v1) {
    return (id)0xD000000000000018;
  }
  uint64_t v2 = v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_190CCBAC8;
  *(void *)(v4 + 24) = v3;
  v11[4] = sub_190CCBAE0;
  v11[5] = v4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_190CCA8F0;
  v11[3] = &block_descriptor_0;
  uint64_t v5 = _Block_copy(v11);
  id v6 = v0;
  swift_retain();
  id v7 = v2;
  swift_release();
  objc_msgSend(v7, sel_appendProem_block_, 0, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  id result = (id)swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    id result = objc_msgSend(v7, sel_build);
    if (result)
    {
      uint64_t v9 = result;
      uint64_t v10 = sub_190D41978();
      swift_release();

      return (id)v10;
    }
  }
  __break(1u);
  return result;
}

void sub_190CCA628(void *a1, void *a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  id v6 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v7 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v6, v7);

  id v8 = objc_msgSend(a2, sel_configuration);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_controlItems);

    type metadata accessor for CHSControlConfigurationItem(0);
    unint64_t v11 = sub_190D41BE8();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_190D420B8();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_190D422B8();
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  uint64_t v12 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v12, v13);
}

uint64_t sub_190CCA8C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_190CCA8F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void __swiftcall CHSControlHost.init()(CHSControlHost *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void CHSControlHost.init()()
{
}

uint64_t _ControlHost.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _ControlHost.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*_ControlHost.identifier.modify())()
{
  return nullsub_1;
}

void *_ControlHost.configuration.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void _ControlHost.configuration.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*_ControlHost.configuration.modify())()
{
  return nullsub_1;
}

void _ControlHost.activationState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *_ControlHost.activationState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*_ControlHost.activationState.modify())()
{
  return nullsub_1;
}

uint64_t default argument 1 of static SandboxExtension.issue(url:readonly:)()
{
  return 1;
}

uint64_t sub_190CCAAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_190CCAB54(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_190CCABA4()
{
  return sub_190D41698();
}

uint64_t sub_190CCABF0()
{
  return sub_190D41688();
}

uint64_t sub_190CCAC48()
{
  return sub_190D423E8();
}

void sub_190CCACB0(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_190CCACBC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_190CCACD4()
{
  return sub_190D423A8();
}

uint64_t sub_190CCAD00(uint64_t a1, uint64_t a2)
{
  return sub_190CCAE6C(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_190CCAD18(uint64_t a1, id *a2)
{
  uint64_t result = sub_190D41958();
  *a2 = 0;
  return result;
}

uint64_t sub_190CCAD90(uint64_t a1, id *a2)
{
  char v3 = sub_190D41968();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_190CCAE10@<X0>(uint64_t *a1@<X8>)
{
  sub_190D41978();
  uint64_t v2 = sub_190D41948();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_190CCAE54(uint64_t a1, uint64_t a2)
{
  return sub_190CCAE6C(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_190CCAE6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_190D41978();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_190CCAEB0()
{
  sub_190D41978();
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CCAF04()
{
  sub_190D41978();
  sub_190D42398();
  sub_190D41A18();
  uint64_t v0 = sub_190D423E8();
  swift_bridgeObjectRelease();
  return v0;
}

void *sub_190CCAF78@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_190CCAF84()
{
  return sub_190D423E8();
}

uint64_t sub_190CCAFCC()
{
  return sub_190D423E8();
}

BOOL sub_190CCB010(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_190CCB024()
{
  swift_getWitnessTable();
  return sub_190D41678();
}

BOOL sub_190CCB090(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_190CCB0A4()
{
  uint64_t v0 = sub_190D41978();
  uint64_t v2 = v1;
  if (v0 == sub_190D41978() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_190CCB130@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_190CCB144(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_190CCB158(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_190CCB16C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

void sub_190CCB180(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_190CCB18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_190D41948();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_190CCB1D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190D41978();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_190CCB200(uint64_t a1)
{
  uint64_t v2 = sub_190CCC124((unint64_t *)&qword_1E92AB708, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_190CCC124(&qword_1E92AB710, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_190CCB2BC(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_190CCB2CC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_190CCB308(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_190CCB330(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_190CCB3A8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_190D41E48();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_190CCB3A8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_190CCB47C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_190CCC328((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_190CCC328((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_190CCB47C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_190D41E58();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_190CCB638(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_190D41FD8();
  if (!v8)
  {
    sub_190D42098();
    __break(1u);
LABEL_17:
    uint64_t result = sub_190D42118();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_190CCB638(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_190CCB6D0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_190CCB848(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_190CCB848(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_190CCB6D0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_190D09A6C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_190D41F78();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_190D42098();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_190D41A78();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_190D42118();
    __break(1u);
LABEL_14:
    uint64_t result = sub_190D42098();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_190CCB848(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_190D42118();
  __break(1u);
  return result;
}

unsigned char **sub_190CCB998(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_190CCB9A8(uint64_t (*a1)(void))
{
  return a1();
}

void sub_190CCB9D0(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_190D41E48();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_190CCBA88()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_190CCBAC8()
{
  sub_190CCA628(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_190CCBAD0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CCBAE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_190CCBB24()
{
  unint64_t result = qword_1E92AB610;
  if (!qword_1E92AB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB610);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CHSHostActivationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CHSHostActivationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CCBCE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_190CCBD0C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_190CCBD14(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CHSHostActivationState()
{
  return &type metadata for CHSHostActivationState;
}

unint64_t type metadata accessor for CHSControlHost()
{
  unint64_t result = qword_1E92AB620;
  if (!qword_1E92AB620)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AB620);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for _ControlHost(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for _ControlHost(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for _ControlHost(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unsigned int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for _ControlHost(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _ControlHost(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for _ControlHost(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ControlHost(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ControlHost()
{
  return &type metadata for _ControlHost;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CGImageSource(uint64_t a1)
{
}

void type metadata accessor for CGImageDestination(uint64_t a1)
{
}

void type metadata accessor for CGImagePreferredColorConversionMode(uint64_t a1)
{
}

void type metadata accessor for ASTCBlockSize(uint64_t a1)
{
}

void type metadata accessor for CHSControlContentType(uint64_t a1)
{
}

void type metadata accessor for CHSControlType(uint64_t a1)
{
}

void type metadata accessor for CHSControlSize(uint64_t a1)
{
}

void type metadata accessor for CHSControlPushPolicy(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for CHSControlVisibility(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_190CCC094()
{
  return sub_190CCC124((unint64_t *)&qword_1E92AA060, type metadata accessor for CFString);
}

uint64_t sub_190CCC0DC()
{
  return sub_190CCC124(&qword_1E92AB6E8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_190CCC124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CCC16C()
{
  return sub_190CCC124(&qword_1E92AB6F0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_190CCC1B4()
{
  return sub_190CCC124(&qword_1E92AB6F8, type metadata accessor for CHSControlPushPolicy);
}

uint64_t sub_190CCC1FC()
{
  return sub_190CCC124(&qword_1E92AB700, type metadata accessor for CHSControlContentType);
}

uint64_t sub_190CCC244()
{
  return sub_190CCC124(&qword_1E92AA738, type metadata accessor for FileAttributeKey);
}

uint64_t sub_190CCC28C()
{
  return sub_190CCC124(&qword_1E92AA070, type metadata accessor for CFString);
}

unint64_t sub_190CCC2D4()
{
  unint64_t result = qword_1E92AB838;
  if (!qword_1E92AB838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB838);
  }
  return result;
}

uint64_t sub_190CCC328(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for CHSWidgetRelevanceServiceEventType(uint64_t a1)
{
}

void sub_190CCC398(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void *sub_190CCC3F0()
{
  qword_1E92AA838 = (uint64_t)&unk_1EE0CD438;
  return &unk_1EE0CD438;
}

id static ControlsXPCDefinition.clientInterface.getter()
{
  return sub_190CCC4DC(&qword_1E92AA810, (void **)&qword_1E92AA838);
}

void *sub_190CCC428()
{
  qword_1E92AA840 = (uint64_t)&unk_1EE0D0608;
  return &unk_1EE0D0608;
}

id static ControlsXPCDefinition.serverInterface.getter()
{
  return sub_190CCC4DC(&qword_1E92AA848, (void **)&qword_1E92AA840);
}

unint64_t static ControlsXPCDefinition.serviceEntitlement.getter()
{
  return 0xD000000000000019;
}

id sub_190CCC47C()
{
  id result = objc_msgSend(self, sel_userInteractive);
  qword_1E92AA850 = (uint64_t)result;
  return result;
}

id static ControlsXPCDefinition.qos.getter()
{
  return sub_190CCC4DC(&qword_1E92AA860, (void **)&qword_1E92AA850);
}

id sub_190CCC4DC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

unint64_t static ControlsXPCDefinition.domain.getter()
{
  return 0xD000000000000010;
}

unint64_t static ControlsXPCDefinition.serviceName.getter()
{
  return 0xD000000000000019;
}

unint64_t static ControlsXPCDefinition.machServiceName.getter()
{
  return 0xD000000000000018;
}

ValueMetadata *type metadata accessor for ControlsXPCDefinition()
{
  return &type metadata for ControlsXPCDefinition;
}

uint64_t HostType.description.getter()
{
  if (*v0) {
    return 0x6C6F72746E6F63;
  }
  else {
    return 0x746567646977;
  }
}

ChronoServices::HostType_optional __swiftcall HostType.init(rawValue:)(Swift::UInt rawValue)
{
  if (rawValue == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (ChronoServices::HostType_optional)rawValue;
}

uint64_t HostType.rawValue.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

unint64_t sub_190CCC5F8()
{
  unint64_t result = qword_1E92AB910;
  if (!qword_1E92AB910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB910);
  }
  return result;
}

uint64_t sub_190CCC64C()
{
  return sub_190D423E8();
}

uint64_t sub_190CCC69C()
{
  return sub_190D423A8();
}

uint64_t sub_190CCC6D4()
{
  return sub_190D423E8();
}

void *sub_190CCC720@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_190CCC740(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1;
  if (*v1) {
    uint64_t v2 = 2;
  }
  *a1 = v2;
}

uint64_t sub_190CCC758()
{
  if (*v0) {
    return 0x6C6F72746E6F63;
  }
  else {
    return 0x746567646977;
  }
}

unsigned char *storeEnumTagSinglePayload for HostType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CCC85CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostType()
{
  return &type metadata for HostType;
}

uint64_t DeviceIdentifier.rawValue.getter(uint64_t a1, uint64_t a2)
{
  if (a2) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DeviceIdentifier.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  return result;
}

uint64_t DeviceIdentifier.description.getter(uint64_t a1, uint64_t a2)
{
  if (a2) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = 0x6C61636F6CLL;
  }
  swift_bridgeObjectRetain();
  return v2;
}

BOOL DeviceIdentifier.isRemote.getter(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t sub_190CCC92C()
{
  return sub_190D423E8();
}

uint64_t sub_190CCC974()
{
  return sub_190D423A8();
}

uint64_t sub_190CCC9A0()
{
  return sub_190D423E8();
}

uint64_t sub_190CCC9E4()
{
  if (*v0) {
    return 0x65746F6D6572;
  }
  else {
    return 0x6C61636F6CLL;
  }
}

uint64_t sub_190CCCA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_190CCD398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190CCCA40()
{
  return 0;
}

void sub_190CCCA4C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_190CCCA58(uint64_t a1)
{
  unint64_t v2 = sub_190CCD030();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CCCA94(uint64_t a1)
{
  unint64_t v2 = sub_190CCD030();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_190CCCAD0()
{
  return 0;
}

uint64_t sub_190CCCADC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_190CCCB0C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_190CCCB18(uint64_t a1)
{
  unint64_t v2 = sub_190CCD0D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CCCB54(uint64_t a1)
{
  unint64_t v2 = sub_190CCD0D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_190CCCB90()
{
  return 1;
}

uint64_t sub_190CCCB98()
{
  return sub_190D423E8();
}

uint64_t sub_190CCCBDC()
{
  return sub_190D423A8();
}

uint64_t sub_190CCCC04()
{
  return sub_190D423E8();
}

uint64_t sub_190CCCC44()
{
  return 12383;
}

uint64_t sub_190CCCC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_190D422D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_190CCCCD0(uint64_t a1)
{
  unint64_t v2 = sub_190CCD084();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CCCD0C(uint64_t a1)
{
  unint64_t v2 = sub_190CCD084();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DeviceIdentifier.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806A8);
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  unsigned int v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806A0);
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790]();
  int64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB280698);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CCD030();
  uint64_t v14 = v20;
  sub_190D42418();
  if (v14)
  {
    char v22 = 1;
    sub_190CCD084();
    sub_190D42218();
    sub_190D42238();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
  }
  else
  {
    char v21 = 0;
    sub_190CCD0D8();
    sub_190D42218();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_190CCD030()
{
  unint64_t result = qword_1EB2806C8;
  if (!qword_1EB2806C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806C8);
  }
  return result;
}

unint64_t sub_190CCD084()
{
  unint64_t result = qword_1E92AB918;
  if (!qword_1E92AB918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB918);
  }
  return result;
}

unint64_t sub_190CCD0D8()
{
  unint64_t result = qword_1EB2806E0;
  if (!qword_1EB2806E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806E0);
  }
  return result;
}

uint64_t DeviceIdentifier.init(from:)(void *a1)
{
  return sub_190CCD47C(a1);
}

uint64_t *sub_190CCD144@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  if (!v3) {
    uint64_t v2 = 0;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t sub_190CCD158@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  if (!v2) {
    uint64_t v3 = 0;
  }
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190CCD16C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_190CCD47C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_190CCD198(void *a1)
{
  return DeviceIdentifier.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_190CCD1B4()
{
  if (v0[1]) {
    uint64_t v1 = *v0;
  }
  else {
    uint64_t v1 = 0x6C61636F6CLL;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_190CCD200()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_190D42398();
  sub_190D423B8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease();
  }
  return sub_190D423E8();
}

uint64_t sub_190CCD280()
{
  if (!*(void *)(v0 + 8)) {
    return sub_190D423B8();
  }
  sub_190D423B8();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CCD308()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_190D42398();
  sub_190D423B8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease();
  }
  return sub_190D423E8();
}

uint64_t sub_190CCD384(uint64_t *a1, uint64_t *a2)
{
  return sub_190D3B93C(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_190CCD398(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_190D422D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_190D422D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_190CCD47C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA18);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  uint64_t v25 = v3;
  MEMORY[0x1F4188790]();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA10);
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA08);
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CCD030();
  uint64_t v13 = (uint64_t)v28;
  sub_190D42408();
  if (v13) {
    goto LABEL_9;
  }
  uint64_t v14 = v27;
  uint64_t v23 = v6;
  id v28 = a1;
  uint64_t v15 = sub_190D421E8();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v19 = sub_190D41FC8();
    swift_allocError();
    char v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AB938);
    void *v21 = &type metadata for DeviceIdentifier;
    uint64_t v12 = (uint64_t)v11;
    sub_190D42158();
    sub_190D41FB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    a1 = v28;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v12;
  }
  if (*(unsigned char *)(v15 + 32))
  {
    char v30 = 1;
    sub_190CCD084();
    sub_190D42148();
    uint64_t v16 = v24;
    uint64_t v12 = sub_190D42188();
    uint64_t v17 = v5;
    uint64_t v18 = v26;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v9);
  }
  else
  {
    char v29 = 0;
    sub_190CCD0D8();
    sub_190D42148();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    uint64_t v12 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return v12;
}

unint64_t sub_190CCD914()
{
  unint64_t result = qword_1E92AB920;
  if (!qword_1E92AB920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB920);
  }
  return result;
}

void *assignWithCopy for DeviceIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DeviceIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeviceIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_190CCDA84(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_190CCDA9C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentifier()
{
  return &type metadata for DeviceIdentifier;
}

unsigned char *storeEnumTagSinglePayload for DeviceIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CCDB98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentifier.CodingKeys()
{
  return &type metadata for DeviceIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceIdentifier.LocalCodingKeys()
{
  return &type metadata for DeviceIdentifier.LocalCodingKeys;
}

uint64_t getEnumTagSinglePayload for DeviceIdentifier.RemoteCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DeviceIdentifier.RemoteCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190CCDCD0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_190CCDCF8()
{
  return 0;
}

ValueMetadata *type metadata accessor for DeviceIdentifier.RemoteCodingKeys()
{
  return &type metadata for DeviceIdentifier.RemoteCodingKeys;
}

unint64_t sub_190CCDD14()
{
  unint64_t result = qword_1E92AB928;
  if (!qword_1E92AB928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB928);
  }
  return result;
}

unint64_t sub_190CCDD6C()
{
  unint64_t result = qword_1E92AB930;
  if (!qword_1E92AB930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB930);
  }
  return result;
}

unint64_t sub_190CCDDC4()
{
  unint64_t result = qword_1EB2806F0;
  if (!qword_1EB2806F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806F0);
  }
  return result;
}

unint64_t sub_190CCDE1C()
{
  unint64_t result = qword_1EB2806E8;
  if (!qword_1EB2806E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806E8);
  }
  return result;
}

unint64_t sub_190CCDE74()
{
  unint64_t result = qword_1EB280700;
  if (!qword_1EB280700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB280700);
  }
  return result;
}

unint64_t sub_190CCDECC()
{
  unint64_t result = qword_1EB2806F8;
  if (!qword_1EB2806F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806F8);
  }
  return result;
}

unint64_t sub_190CCDF24()
{
  unint64_t result = qword_1EB2806D8;
  if (!qword_1EB2806D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806D8);
  }
  return result;
}

unint64_t sub_190CCDF7C()
{
  unint64_t result = qword_1EB2806D0;
  if (!qword_1EB2806D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB2806D0);
  }
  return result;
}

uint64_t CHSControlConfiguration.controlItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CHSControlConfiguration.controlItems.setter(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR___CHSControlConfiguration_controlItems);
  swift_beginAccess();
  *int v3 = a1;
  return swift_bridgeObjectRelease();
}

void sub_190CCE164(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  uint64_t v4 = sub_190D41BE8();

  *a2 = v4;
}

void sub_190CCE1C8(uint64_t a1, void **a2)
{
  int v2 = *a2;
  type metadata accessor for CHSControlConfigurationItem(0);
  id v3 = (id)sub_190D41BD8();
  objc_msgSend(v2, sel_setControlItems_, v3);
}

void __swiftcall CHSControlConfiguration.init(controlItems:)(CHSControlConfiguration *__return_ptr retstr, Swift::OpaquePointer controlItems)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for CHSControlConfigurationItem(0);
  id v3 = (void *)sub_190D41BD8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithControlItems_, v3);
}

id CHSControlConfiguration.init(controlItems:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___CHSControlConfiguration_controlItems) = a1;
  v3.super_class = (Class)CHSControlConfiguration;
  return objc_msgSendSuper2(&v3, sel_init);
}

id CHSControlConfiguration.copy(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = type metadata accessor for CHSControlConfiguration(a1);
  *a2 = v4;
  return v4;
}

uint64_t type metadata accessor for CHSControlConfiguration(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AA190);
}

uint64_t CHSControlConfiguration.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_190CCE4DC(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_190CCE544((uint64_t)v10);
    goto LABEL_6;
  }
  type metadata accessor for CHSControlConfiguration(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    unsigned __int8 v7 = 0;
    return v7 & 1;
  }
  if (v9 == v1)
  {

    unsigned __int8 v7 = 1;
  }
  else
  {
    id v3 = objc_msgSend(v1, sel_controlItems);
    type metadata accessor for CHSControlConfigurationItem(0);
    unint64_t v4 = sub_190D41BE8();

    id v5 = objc_msgSend(v9, sel_controlItems);
    uint64_t v6 = sub_190D41BE8();

    unsigned __int8 v7 = sub_190CCE5A4(v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

uint64_t sub_190CCE4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190CCE544(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_190CCE5A4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_190D420B8();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x192FD6450](0, v3))
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x192FD6450](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    type metadata accessor for CHSControlConfigurationItem(0);
    char v14 = sub_190D41DE8();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x192FD6450](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x192FD6450](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        char v21 = v20;
        unint64_t v5 = sub_190D41DE8();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        id v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_190D41DE8();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_190CCE880(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_190D420B8();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x192FD6450](0, v3))
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x192FD6450](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
    char v14 = sub_190D41DE8();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x192FD6450](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x192FD6450](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        char v21 = v20;
        unint64_t v5 = sub_190D41DE8();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        id v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_190D41DE8();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t CHSControlConfiguration.hash.getter()
{
  sub_190D423F8();
  id v1 = objc_msgSend(v0, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  unint64_t v2 = sub_190D41BE8();

  sub_190CD04CC((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  long long v8 = v4[2];
  long long v9 = v4[3];
  uint64_t v10 = v5;
  long long v6 = v4[0];
  long long v7 = v4[1];
  return sub_190D423D8();
}

id CHSControlConfiguration.description.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v0);
  if (!v1) {
    return (id)0xD000000000000021;
  }
  unint64_t v2 = v1;
  id v3 = objc_msgSend(v0, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  unint64_t v4 = sub_190D41BE8();

  sub_190CCEF00(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_190D41BD8();
  swift_bridgeObjectRelease();
  long long v6 = (void *)sub_190D41948();
  objc_msgSend(v2, sel_appendArraySection_withName_skipIfEmpty_, v5, v6, 1);

  id result = objc_msgSend(v2, sel_build);
  if (result)
  {
    long long v8 = result;
    uint64_t v9 = sub_190D41978();

    return (id)v9;
  }
  __break(1u);
  return result;
}

char *sub_190CCEF00(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return (char *)v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  id result = sub_190CDDDA4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x192FD6450](i, a1);
        type metadata accessor for CHSControlConfigurationItem(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190CDDDA4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_190CDDDA4((char *)(v6 > 1), v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_190CD0AB0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      long long v8 = (id *)(a1 + 32);
      type metadata accessor for CHSControlConfigurationItem(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190CDDDA4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_190CDDDA4((char *)(v10 > 1), v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_190CD0AB0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (char *)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_190CCF134(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_190CDDDA4(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190CDDDA4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_190CDDDA4((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_190CD0AB0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

void __swiftcall CHSControlConfiguration.init()(CHSControlConfiguration *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void CHSControlConfiguration.init()()
{
}

uint64_t sub_190CCF304()
{
  return sub_190D423E8();
}

uint64_t sub_190CCF360()
{
  return sub_190D41A18();
}

uint64_t sub_190CCF380()
{
  return sub_190D423E8();
}

uint64_t sub_190CCF3D8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_190D42138();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_190CCF42C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_190CCF450()
{
  return 0x496C6F72746E6F63;
}

uint64_t sub_190CCF470@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_190D42138();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_190CCF4C8(uint64_t a1)
{
  unint64_t v2 = sub_190CD0760();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CCF504(uint64_t a1)
{
  unint64_t v2 = sub_190CD0760();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static CHSControlConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall CHSControlConfiguration.encode(with:)(NSCoder with)
{
  id v3 = objc_msgSend(v1, sel_controlItems);
  if (!v3)
  {
    type metadata accessor for CHSControlConfigurationItem(0);
    sub_190D41BE8();
    id v3 = (id)sub_190D41BD8();
    swift_bridgeObjectRelease();
  }
  id v4 = (id)sub_190D41948();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
}

void __swiftcall CHSControlConfiguration.init(coder:)(CHSControlConfiguration_optional *__return_ptr retstr, NSCoder coder)
{
}

id CHSControlConfiguration.init(coder:)(void *a1)
{
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA310);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_190D4B270;
  *(void *)(v4 + 32) = type metadata accessor for CHSControlConfigurationItem(0);
  uint64_t v5 = sub_190D41DC8();
  swift_bridgeObjectRelease();
  if (v5 && (uint64_t v6 = sub_190CCF868(v5), swift_bridgeObjectRelease(), v6))
  {
    unint64_t v7 = (void *)sub_190D41BD8();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v2, sel_initWithControlItems_, v7);
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v8;
}

uint64_t sub_190CCF868(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_190D42018();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_190CCC328(i, (uint64_t)v5);
    type metadata accessor for CHSControlConfigurationItem(0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_190D41FF8();
    sub_190D42028();
    sub_190D42038();
    sub_190D42008();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_190CCF964(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_190D42018();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_190CCC328(i, (uint64_t)v5);
    sub_190C72C5C(0, (unint64_t *)&unk_1E92AA5A0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_190D41FF8();
    sub_190D42028();
    sub_190D42038();
    sub_190D42008();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

Swift::String_optional __swiftcall CHSControlConfiguration.description(withMultilinePrefix:)(Swift::String_optional withMultilinePrefix)
{
  uint64_t v2 = v1;
  if (withMultilinePrefix.value._object) {
    id v3 = (void *)sub_190D41948();
  }
  else {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_descriptionBuilderWithMultilinePrefix_, v3);

  if (v4)
  {
    id v7 = objc_msgSend(v4, sel_build);

    if (v7)
    {
      uint64_t v8 = sub_190D41978();
      unint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v10 = 0;
    }
    uint64_t v5 = v8;
    uint64_t v6 = v10;
  }
  else
  {
    __break(1u);
  }
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

Swift::String_optional __swiftcall CHSControlConfiguration.succinctDescription()()
{
  id v1 = objc_msgSend(v0, sel_succinctDescriptionBuilder);
  if (v1)
  {
    id v3 = v1;
    id v4 = objc_msgSend(v1, sel_build);

    if (v4)
    {
      uint64_t v5 = sub_190D41978();
      id v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      id v7 = 0;
    }
    id v1 = (id)v5;
    uint64_t v2 = v7;
  }
  else
  {
    __break(1u);
  }
  result.value._object = v2;
  result.value._countAndFlagsBits = (uint64_t)v1;
  return result;
}

id CHSControlConfiguration.succinctDescriptionBuilder()()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v0);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_190CD0728;
    *(void *)(v4 + 24) = v3;
    v9[4] = sub_190CD0740;
    v9[5] = v4;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    void v9[2] = sub_190CCA8F0;
    v9[3] = &block_descriptor_1;
    uint64_t v5 = _Block_copy(v9);
    id v6 = v2;
    id v7 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_appendProem_block_, 0, v5);
    _Block_release(v5);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return v6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_190CCFF54(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  unint64_t v4 = sub_190D41BE8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v6 = (id)sub_190D41948();
}

uint64_t CHSControlConfiguration.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AB948);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  id v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CD0760();
  sub_190D42418();
  id v8 = objc_msgSend(v2, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  uint64_t v9 = sub_190D41BE8();

  v11[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AB958);
  sub_190CD07FC(&qword_1E92AB960, &qword_1E92AB968);
  sub_190D42268();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *CHSControlConfiguration.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AB970);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CD0760();
  sub_190D42408();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AB958);
    sub_190CD07FC(&qword_1E92AB978, &qword_1E92AB980);
    sub_190D421B8();
    id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    type metadata accessor for CHSControlConfigurationItem(0);
    unint64_t v10 = (void *)sub_190D41BD8();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v9, sel_initWithControlItems_, v10);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

void *sub_190CD047C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = CHSControlConfiguration.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_190CD04A8(void *a1)
{
  return CHSControlConfiguration.encode(to:)(a1);
}

void sub_190CD04CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190D420B8();
    swift_bridgeObjectRelease();
    sub_190D423A8();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_190D420B8();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_190D423A8();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x192FD6450](i, a2);
      sub_190D41DF8();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_190D41DF8();

      --v3;
    }
    while (v3);
  }
}

id _sSo23CHSControlConfigurationC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionF0CSgSSSg_tF_0()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v0);
  if (result)
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(v0, sel_controlItems);
    type metadata accessor for CHSControlConfigurationItem(0);
    unint64_t v4 = sub_190D41BE8();

    sub_190CCEF00(v4);
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)sub_190D41BD8();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)sub_190D41948();
    objc_msgSend(v2, sel_appendArraySection_withName_skipIfEmpty_, v5, v6, 1);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190CD06E8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_190CD0728()
{
  sub_190CCFF54(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_190CD0730()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CD0740()
{
  return sub_190CCA8C8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_190CD0760()
{
  unint64_t result = qword_1E92AB950;
  if (!qword_1E92AB950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB950);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_190CD07FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92AB958);
    sub_190CD087C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CD087C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CHSControlConfigurationItem(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_controlItems()
{
  return sel_controlItems;
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190CD0970);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_190CD09AC()
{
  unint64_t result = qword_1E92AB988;
  if (!qword_1E92AB988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB988);
  }
  return result;
}

unint64_t sub_190CD0A04()
{
  unint64_t result = qword_1E92AB990;
  if (!qword_1E92AB990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB990);
  }
  return result;
}

unint64_t sub_190CD0A5C()
{
  unint64_t result = qword_1E92AB998;
  if (!qword_1E92AB998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB998);
  }
  return result;
}

_OWORD *sub_190CD0AB0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_190CD0AC0()
{
  qword_1E92AA3A8 = 0;
  unk_1E92AA3B0 = 0;
  dword_1E92AA3B8 = 68;
  word_1E92AA3BC = 514;
  dword_1E92AA3C0 = 0;
  byte_1E92AA3C4 = 1;
}

uint64_t static ImageFormat.ASTCOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92AA3C8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1E92AA3B0;
  int v3 = dword_1E92AA3B8;
  __int16 v4 = word_1E92AA3BC;
  int v5 = dword_1E92AA3C0;
  char v6 = byte_1E92AA3C4;
  *(void *)a1 = qword_1E92AA3A8;
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 20) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = v6;
  return swift_bridgeObjectRetain();
}

void sub_190CD0B7C()
{
  uint64_t v0 = (void *)sub_190D41948();
  char v1 = MGGetBoolAnswer();

  byte_1E92B3080 = v1;
}

unint64_t sub_190CD0BCC()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  int v3 = *((_DWORD *)v0 + 4);
  int v4 = *((unsigned __int8 *)v0 + 20);
  int v5 = *((unsigned __int8 *)v0 + 21);
  int v6 = *((_DWORD *)v0 + 6);
  char v7 = *((unsigned char *)v0 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190D4B450;
  id v9 = (void *)*MEMORY[0x1E4F2F4E0];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2F4E0];
  uint64_t v10 = MEMORY[0x1E4FBC4C0];
  *(_DWORD *)(inited + 40) = v3;
  uint64_t v11 = (void *)*MEMORY[0x1E4F2F6C8];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  id v12 = (void *)*MEMORY[0x1E4F2F4F0];
  type metadata accessor for CFString(0);
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 80) = v12;
  id v14 = v9;
  id v15 = v11;
  id v16 = v12;
  unint64_t v17 = sub_190CD0E6C(inited);
  if (v1)
  {
    swift_bridgeObjectRetain();
    id v18 = (void *)sub_190D41948();
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v32 = v2;
    *((void *)&v32 + 1) = v1;
    sub_190CD0AB0(&v32, v31);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_190D09B50(v31, v18, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = MEMORY[0x1E4FBB390];
  if (v4 == 2)
  {
    if (v5 == 2) {
      goto LABEL_5;
    }
LABEL_9:
    id v28 = (void *)*MEMORY[0x1E4F2FDE0];
    uint64_t v33 = v20;
    LOBYTE(v32) = v5 & 1;
    sub_190CD0AB0(&v32, v31);
    id v29 = v28;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    sub_190D09B50(v31, v29, v30);

    swift_bridgeObjectRelease();
    if (v7) {
      return v17;
    }
    goto LABEL_6;
  }
  uint64_t v25 = (void *)*MEMORY[0x1E4F2F508];
  uint64_t v33 = MEMORY[0x1E4FBB390];
  LOBYTE(v32) = v4 & 1;
  sub_190CD0AB0(&v32, v31);
  id v26 = v25;
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_190D09B50(v31, v26, v27);

  swift_bridgeObjectRelease();
  if (v5 != 2) {
    goto LABEL_9;
  }
LABEL_5:
  if ((v7 & 1) == 0)
  {
LABEL_6:
    char v21 = (void *)*MEMORY[0x1E4F2F4B0];
    uint64_t v33 = MEMORY[0x1E4FBC4C0];
    LODWORD(v32) = v6;
    sub_190CD0AB0(&v32, v31);
    id v22 = v21;
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_190D09B50(v31, v22, v23);

    swift_bridgeObjectRelease();
  }
  return v17;
}

unint64_t sub_190CD0E6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA080);
  uint64_t v2 = sub_190D42108();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190CD1CEC(v6, (uint64_t)&v13, &qword_1E92AA078);
    uint64_t v7 = v13;
    unint64_t result = sub_190CDE608(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_190CD0AB0(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190CD0F9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1E92AA960);
  uint64_t v2 = (void *)sub_190D42108();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_190CDE68C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190CD10B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABA18);
  uint64_t v2 = (void *)sub_190D42108();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_190CDE748((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190CD11BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA570);
  uint64_t v2 = (void *)sub_190D42108();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (void *)*((void *)v4 - 2);
    id v6 = (void *)*((void *)v4 - 1);
    char v7 = *v4;
    id v8 = v6;
    id v9 = v5;
    unint64_t result = sub_190CDE798((uint64_t)v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v9;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v6;
    *(unsigned char *)(v12 + 8) = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190CD12D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABA08);
  uint64_t v2 = sub_190D42108();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190CD1CEC(v6, (uint64_t)&v15, &qword_1E92ABA10);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_190CDE68C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_190CD0AB0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190CD1408(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABA00);
  uint64_t v2 = (void *)sub_190D42108();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_190CDE68C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ImageFormat.isSupported.getter()
{
  if (*(unsigned __int8 *)(v0 + 28) >> 6) {
    return 1;
  }
  if (qword_1E92AA3A0 != -1) {
    swift_once();
  }
  return byte_1E92B3080;
}

uint64_t ImageFormat.typeIdentifier.getter()
{
  uint64_t v1 = sub_190D41748();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v5 = *(unsigned __int8 *)(v0 + 28);
  if (!(v5 >> 6)) {
    return 0x6C7070612E6D6F63;
  }
  if (v5 >> 6 == 1) {
    return 0x6A2E63696C627570;
  }
  uint64_t v6 = 0x702E63696C627570;
  if ((*(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32)) == 0x8000000000
    && !(*(void *)(v0 + 8) | *(void *)(v0 + 16) | *(void *)v0))
  {
    sub_190D41738();
    uint64_t v6 = sub_190D41718();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v6;
}

unint64_t ImageFormat.cgImageDestinationOptions.getter()
{
  uint64_t v1 = *v0;
  unsigned int v2 = *((unsigned __int8 *)v0 + 28);
  if (v2 >> 6 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA090);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190D4B270;
    unsigned int v5 = (void *)*MEMORY[0x1E4F2FC18];
    *(void *)(inited + 64) = MEMORY[0x1E4FBC958];
    *(void *)(inited + 32) = v5;
    *(void *)(inited + 40) = v1;
    id v6 = v5;
    return sub_190CD0E6C(inited);
  }
  else if (v2 >> 6)
  {
    return 0;
  }
  else
  {
    return sub_190CD0BCC();
  }
}

uint64_t sub_190CD17D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (((a4 >> 38) & 3) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ImageFormat(uint64_t a1)
{
  return sub_190CD1804(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32));
}

uint64_t sub_190CD1804(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (((a4 >> 38) & 3) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ImageFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  sub_190CD17D4(*(void *)a2, v4, v5, v7 | (v6 << 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithCopy for ImageFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  sub_190CD17D4(*(void *)a2, v4, v5, v7 | (v6 << 32));
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = v6;
  sub_190CD1804(v8, v9, v10, v11);
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 28);
  int v5 = *(_DWORD *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v9 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = v4;
  sub_190CD1804(v6, v8, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageFormat(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFD && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 8388606);
  }
  if ((((((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) >> 21) | (4 * (((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) & 0x1F0000 | *(unsigned __int16 *)(a1 + 22)))) ^ 0x7FFFFF) >= 0x7FFFFD) {
    int v3 = -1;
  }
  else {
    int v3 = ((((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) >> 21) | (4 * (((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) & 0x1F0000 | *(unsigned __int16 *)(a1 + 22)))) ^ 0x7FFFFF;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 8388606;
    if (a3 >= 0x7FFFFE) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFE) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2)
    {
      uint64_t v3 = -a2 >> 2;
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = v3 << 48;
      *(_DWORD *)(result + 24) = 0;
      *(unsigned char *)(result + 28) = (unint64_t)((v3 & 0x1F0000) - (a2 << 21)) >> 15;
    }
  }
  return result;
}

uint64_t sub_190CD1A70(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 28) >> 6;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_190CD1A8C(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 24);
  uint64_t result = a1 + 24;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(unsigned char *)(result + 4) = BYTE4(v3) & 0x3F;
  return result;
}

uint64_t sub_190CD1AA8(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    int v2 = *(_DWORD *)(result + 24);
    result += 24;
    unint64_t v3 = (a2 << 38) | ((unint64_t)(*(unsigned char *)(result + 4) & 1) << 32);
    *(void *)(result - 8) &= 0xFFFFFFFFFFFFuLL;
    *(_DWORD *)uint64_t result = v2;
    *(unsigned char *)(result + 4) = BYTE4(v3);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 2);
    *(_DWORD *)(result + 24) = 0;
    *(unsigned char *)(result + 28) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageFormat()
{
  return &type metadata for ImageFormat;
}

uint64_t initializeWithCopy for ImageFormat.ASTCOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageFormat.ASTCOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  int v4 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for ImageFormat.ASTCOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageFormat.ASTCOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageFormat.ASTCOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageFormat.ASTCOptions()
{
  return &type metadata for ImageFormat.ASTCOptions;
}

uint64_t sub_190CD1CEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t CHSControlPushPolicy.description.getter(uint64_t a1)
{
  unint64_t v1 = 0x776F6C6C41746F6ELL;
  if (a1 == 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (a1 == 2) {
    return 0x6564694672657375;
  }
  else {
    return v1;
  }
}

uint64_t sub_190CD1DBC()
{
  unint64_t v1 = 0x776F6C6C41746F6ELL;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0 == 2) {
    return 0x6564694672657375;
  }
  else {
    return v1;
  }
}

uint64_t CHSControlConfigurationItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id CHSControlConfigurationItem.controlIdentity.getter()
{
  return *(id *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__controlIdentity);
}

uint64_t CHSControlConfigurationItem.location.getter()
{
  return *(void *)(v0 + OBJC_IVAR___CHSControlConfigurationItem_location);
}

uint64_t CHSControlConfigurationItem.pushPolicy.getter()
{
  return *(void *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__pushPolicy);
}

id CHSControlConfigurationItem.init(uniqueIdentifier:controlIdentity:location:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v5 = sub_190CD4178(a1, a2, a3, a4);

  return v5;
}

uint64_t CHSControlConfigurationItem.canAppearInSecureEnvironment.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment);
}

uint64_t CHSControlConfigurationItem.supportsLowLuminance.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance);
}

uint64_t CHSControlConfigurationItem.supportedColorSchemes.getter()
{
  return *(void *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes);
}

id CHSControlConfigurationItem.copy(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = type metadata accessor for CHSControlConfigurationItem(a1);
  *a2 = v4;
  return v4;
}

BOOL CHSControlConfigurationItem.isEqual(_:)(uint64_t a1)
{
  int v2 = v1;
  uint64_t v3 = sub_190CCE4DC(a1, (uint64_t)v14);
  if (v15)
  {
    type metadata accessor for CHSControlConfigurationItem(v3);
    if (swift_dynamicCast())
    {
      if (v13 == v1)
      {

        return 1;
      }
      BOOL v4 = *(void *)&v1[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier] == *(void *)&v13[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier]
        && *(void *)&v1[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier + 8] == *(void *)&v13[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier + 8];
      if (v4 || (sub_190D422D8() & 1) != 0)
      {
        id v5 = objc_msgSend(v1, sel_location);
        if (v5 == objc_msgSend(v13, sel_location))
        {
          sub_190C72C5C(0, (unint64_t *)&qword_1E92AA5D0);
          uint64_t v6 = *(void **)&v13[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
          id v7 = *(id *)&v2[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
          id v8 = v6;
          char v9 = sub_190D41DE8();

          if ((v9 & 1) != 0
            && *(void *)&v2[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy] == *(void *)&v13[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy]
            && v2[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment] == v13[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment]
            && v2[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance] == v13[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance])
          {
            uint64_t v11 = *(void *)&v2[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];
            uint64_t v12 = *(void *)&v13[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];

            return v11 == v12;
          }
        }
      }
    }
  }
  else
  {
    sub_190CCE544((uint64_t)v14);
  }
  return 0;
}

uint64_t CHSControlConfigurationItem.hash.getter()
{
  uint64_t v1 = v0;
  sub_190D423F8();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  swift_bridgeObjectRelease();
  id v2 = *(id *)&v0[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  sub_190D41DF8();

  sub_190D423A8();
  objc_msgSend(v1, sel_location);
  sub_190D423A8();
  sub_190D423B8();
  sub_190D423B8();
  sub_190D423A8();
  return sub_190D423D8();
}

id CHSControlConfigurationItem.description.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v0);
  if (!v1) {
    return (id)0xD000000000000025;
  }
  id v2 = v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_190CD4358;
  *(void *)(v4 + 24) = v3;
  v11[4] = sub_190CD0740;
  v11[5] = v4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_190CCA8F0;
  v11[3] = &block_descriptor_2;
  id v5 = _Block_copy(v11);
  id v6 = v0;
  swift_retain();
  id v7 = v2;
  swift_release();
  objc_msgSend(v7, sel_appendProem_block_, 0, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  id result = (id)swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    id result = objc_msgSend(v7, sel_build);
    if (result)
    {
      char v9 = result;
      uint64_t v10 = sub_190D41978();
      swift_release();

      return (id)v10;
    }
  }
  __break(1u);
  return result;
}

void sub_190CD263C(void *a1, char *a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  id v6 = *(id *)&a2[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  id v7 = (void *)sub_190D41948();

  id v8 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  char v9 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v8, v9);

  uint64_t v10 = NSStringFromWidgetLocation((unint64_t)objc_msgSend(a2, sel_location));
  if (!v10)
  {
    sub_190D41978();
    uint64_t v10 = (__CFString *)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v10, v11);

  uint64_t v12 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  BOOL v13 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v12, v13);

  uint64_t v14 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v14, v15);

  id v16 = NSStringFromCHSColorSchemes(*(void *)&a2[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes]);
  if (!v16)
  {
    sub_190D41978();
    id v16 = (id)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  id v17 = (id)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v16, v17);
}

id CHSControlConfigurationItem.init(uniqueIdentifier:controlIdentity:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithUniqueIdentifier_controlIdentity_location_, v5, a3, 0);

  return v6;
}

void CHSControlConfigurationItem.init()()
{
}

unint64_t sub_190CD2BA4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496C6F72746E6F63;
      break;
    case 2:
      unint64_t result = 0x696C6F5068737570;
      break;
    case 3:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_190CD2C90(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496C6F72746E6F63;
      break;
    case 2:
      unint64_t result = 0x696C6F5068737570;
      break;
    case 3:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_190CD2D7C(unsigned __int8 *a1, char *a2)
{
  return sub_190D3ADA0(*a1, *a2);
}

uint64_t sub_190CD2D88()
{
  return sub_190D3C43C();
}

uint64_t sub_190CD2D94()
{
  return sub_190D3BDB8();
}

uint64_t sub_190CD2D9C()
{
  return sub_190D3C43C();
}

uint64_t sub_190CD2DA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CD46E8();
  *a1 = result;
  return result;
}

unint64_t sub_190CD2DD4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_190CD2BA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_190CD2E00()
{
  return sub_190CD2C90(*v0);
}

uint64_t sub_190CD2E08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CD46E8();
  *a1 = result;
  return result;
}

void sub_190CD2E30(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_190CD2E3C(uint64_t a1)
{
  unint64_t v2 = sub_190CD4388();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CD2E78(uint64_t a1)
{
  unint64_t v2 = sub_190CD4388();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static CHSControlConfigurationItem.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall CHSControlConfigurationItem.encode(with:)(NSCoder with)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  id v5 = *(id *)&v1[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  id v6 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  unint64_t v7 = *(void *)&v1[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy];
  if (v7 >> 31)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v8 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeInt32:v7 forKey:v8];

  uint64_t v9 = (uint64_t)objc_msgSend(v1, sel_location);
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = v9;
  if (v9 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeInt32:v10 forKey:v11];

  uint64_t v12 = v1[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment];
  BOOL v13 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeBool:v12 forKey:v13];

  uint64_t v14 = v1[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance];
  uint64_t v15 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeBool:v14 forKey:v15];

  unint64_t v16 = *(void *)&v1[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];
  if (v16 >> 31)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v17 = (id)sub_190D41948();
  [(objc_class *)with.super.isa encodeInt32:v16 forKey:v17];
}

void __swiftcall CHSControlConfigurationItem.init(coder:)(CHSControlConfigurationItem_optional *__return_ptr retstr, NSCoder coder)
{
}

uint64_t CHSControlConfigurationItem.init(coder:)(void *a1)
{
  sub_190C72C5C(0, &qword_1E92AA2A8);
  unint64_t v2 = (void *)sub_190D41DB8();
  if (v2)
  {
    sub_190D41968();
  }
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
  uint64_t v3 = (void *)sub_190D41DB8();
  unint64_t v4 = (void *)sub_190D41948();
  unsigned int v5 = objc_msgSend(a1, sel_decodeInt32ForKey_, v4);

  if ((v5 & 0x80000000) != 0) {
    goto LABEL_6;
  }
  id v6 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  unint64_t v7 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_decodeBoolForKey_, v7);

  uint64_t v8 = sub_190D41948();
  objc_msgSend(a1, sel_decodeBoolForKey_, v8);

  uint64_t v9 = (void *)sub_190D41948();
  LODWORD(v8) = objc_msgSend(a1, sel_decodeInt32ForKey_, v9);

  if ((v8 & 0x80000000) != 0)
  {
LABEL_6:
    uint64_t result = sub_190D42098();
    __break(1u);
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return result;
}

unint64_t CHSControlConfigurationItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABA58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CD4388();
  sub_190D42418();
  char v12 = 0;
  swift_bridgeObjectRetain();
  sub_190D42238();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)&v3[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  v10[15] = 1;
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
  sub_190CD43DC(&qword_1E92AA658);
  sub_190D42268();
  unint64_t result = *(void *)&v3[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy];
  if (result >> 31)
  {
    __break(1u);
  }
  else
  {
    v10[14] = 2;
    sub_190D42278();
    objc_msgSend(v3, sel_location);
    v10[13] = 3;
    sub_190D42258();
    v10[12] = 4;
    sub_190D42248();
    v10[11] = 5;
    sub_190D42248();
    unint64_t result = *(void *)&v3[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];
    if (!(result >> 31))
    {
      v10[10] = 6;
      sub_190D42278();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t CHSControlConfigurationItem.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92ABA70);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CD4388();
  sub_190D42408();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (uint64_t)v7;
  }
  char v26 = 0;
  sub_190D42188();
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
  char v25 = 1;
  sub_190CD43DC(&qword_1E92AA908);
  sub_190D421B8();
  id v18 = v19;
  char v24 = 2;
  LODWORD(v17) = sub_190D421C8();
  if ((v17 & 0x80000000) == 0)
  {
    char v23 = 3;
    uint64_t v16 = sub_190D421A8();
    char v22 = 4;
    int v15 = sub_190D42198();
    char v21 = 5;
    int v14 = sub_190D42198();
    char v20 = 6;
    unsigned int v8 = sub_190D421C8();
    if ((v8 & 0x80000000) == 0)
    {
      uint64_t v13 = v17;
      uint64_t v17 = v8;
      id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v11 = (void *)sub_190D41948();
      swift_bridgeObjectRelease();
      char v12 = v18;
      uint64_t v7 = objc_msgSend(v10, sel_initWithUniqueIdentifier_controlIdentity_location_, v11, v18, v16);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      *(void *)((char *)v7 + OBJC_IVAR___CHSControlConfigurationItem__pushPolicy) = v13;
      *((unsigned char *)v7 + OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment) = v15 & 1;
      *((unsigned char *)v7 + OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance) = v14 & 1;
      *(void *)((char *)v7 + OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes) = v17;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      return (uint64_t)v7;
    }
  }
  uint64_t result = sub_190D42098();
  __break(1u);
  return result;
}

uint64_t sub_190CD3CA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = CHSControlConfigurationItem.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_190CD3CD0(void *a1)
{
  return CHSControlConfigurationItem.encode(to:)(a1);
}

uint64_t CHSMutableControlConfigurationItem.pushPolicy.setter(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__pushPolicy) = result;
  return result;
}

uint64_t CHSMutableControlConfigurationItem.canAppearInSecureEnvironment.setter(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment) = result;
  return result;
}

uint64_t CHSMutableControlConfigurationItem.supportsLowLuminance.setter(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance) = result;
  return result;
}

uint64_t CHSMutableControlConfigurationItem.supportedColorSchemes.setter(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes) = result;
  return result;
}

id _sSo27CHSControlConfigurationItemC14ChronoServicesE16uniqueIdentifier15controlIdentity8locationABSS_So0aI0CSo17CHSWidgetLocationVtcfC_0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v7 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithUniqueIdentifier_controlIdentity_location_, v7, a3, a4);

  return v8;
}

id CHSMutableControlConfigurationItem.init(uniqueIdentifier:controlIdentity:location:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  v10.receiver = v4;
  v10.super_class = (Class)CHSMutableControlConfigurationItem;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithUniqueIdentifier_controlIdentity_location_, v7, a3, a4);

  return v8;
}

id _sSo27CHSControlConfigurationItemC14ChronoServicesE16uniqueIdentifier15controlIdentityABSS_So0aI0CtcfC_0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithUniqueIdentifier_controlIdentity_, v5, a3);

  return v6;
}

id CHSMutableControlConfigurationItem.init(uniqueIdentifier:controlIdentity:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  v8.receiver = v3;
  v8.super_class = (Class)CHSMutableControlConfigurationItem;
  id v6 = objc_msgSendSuper2(&v8, sel_initWithUniqueIdentifier_controlIdentity_, v5, a3);

  return v6;
}

id _sSo27CHSControlConfigurationItemC14ChronoServicesEABycfC_0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v0, sel_init);
}

id CHSMutableControlConfigurationItem.init()()
{
  v1.super_class = (Class)CHSMutableControlConfigurationItem;
  return objc_msgSendSuper2(&v1, sel_init);
}

id sub_190CD4178(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy] = 0;
  v4[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment] = 0;
  v4[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance] = 0;
  *(void *)&v4[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes] = 3;
  uint64_t v7 = v4;
  objc_super v8 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_copy);

  sub_190D41E78();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v9 = v14;
  objc_super v10 = &v7[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier];
  *(void *)objc_super v10 = v13;
  *((void *)v10 + 1) = v9;
  objc_msgSend(a3, sel_copy);
  sub_190D41E78();
  swift_unknownObjectRelease();
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
  swift_dynamicCast();
  *(void *)&v7[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity] = v13;
  *(void *)&v7[OBJC_IVAR___CHSControlConfigurationItem_location] = a4;

  v12.receiver = v7;
  v12.super_class = (Class)CHSControlConfigurationItem;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for CHSControlConfigurationItem(uint64_t a1)
{
  return sub_190C72C5C(a1, (unint64_t *)&unk_1E92AA4F8);
}

uint64_t sub_190CD4318()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_190CD4358()
{
  sub_190CD263C(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_190CD4360()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_190CD4388()
{
  unint64_t result = qword_1E92ABA60;
  if (!qword_1E92ABA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABA60);
  }
  return result;
}

uint64_t sub_190CD43DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_190C72C5C(255, (unint64_t *)&qword_1E92AA910);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CHSMutableControlConfigurationItem(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92ABAE8);
}

uint64_t _s10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CD45A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_190CD45C8(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unint64_t sub_190CD45E4()
{
  unint64_t result = qword_1E92ABAF0;
  if (!qword_1E92ABAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABAF0);
  }
  return result;
}

unint64_t sub_190CD463C()
{
  unint64_t result = qword_1E92ABAF8;
  if (!qword_1E92ABAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABAF8);
  }
  return result;
}

unint64_t sub_190CD4694()
{
  unint64_t result = qword_1E92ABB00;
  if (!qword_1E92ABB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABB00);
  }
  return result;
}

uint64_t sub_190CD46E8()
{
  unint64_t v0 = sub_190D42138();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_190CD4754()
{
  return sub_190D41818();
}

uint64_t sub_190CD47D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 24);
  return result;
}

uint64_t sub_190CD4814(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = v2;
  return result;
}

uint64_t (*sub_190CD4854())()
{
  return j__swift_endAccess;
}

uint64_t sub_190CD48AC()
{
  return sub_190D41818();
}

uint64_t sub_190CD4928(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CD496C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_190CD49A0(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_190CD49E0())()
{
  return j_j__swift_endAccess;
}

uint64_t FixedKeybagStateProvider.__allocating_init(lockState:hasUnlockedSinceBoot:)(unsigned char *a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  LOBYTE(a1) = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA950);
  swift_allocObject();
  *(void *)(v4 + 16) = sub_190D417E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA958);
  swift_allocObject();
  *(void *)(v4 + 32) = sub_190D41808();
  *(unsigned char *)(v4 + 24) = (_BYTE)a1;
  *(unsigned char *)(v4 + 40) = a2;
  return v4;
}

uint64_t FixedKeybagStateProvider.init(lockState:hasUnlockedSinceBoot:)(char *a1, char a2)
{
  char v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA950);
  swift_allocObject();
  *(void *)(v2 + 16) = sub_190D417E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA958);
  swift_allocObject();
  *(void *)(v2 + 32) = sub_190D41808();
  *(unsigned char *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 40) = a2;
  return v2;
}

uint64_t FixedKeybagStateProvider.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t FixedKeybagStateProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186488](v0, 41, 7);
}

uint64_t sub_190CD4BD8()
{
  return sub_190D41818();
}

uint64_t sub_190CD4C58()
{
  return sub_190D41818();
}

uint64_t sub_190CD4CD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_190CD4D20()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 40);
}

uint64_t sub_190CD4D60@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_190CD4DA8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 24) = v2;
  return result;
}

uint64_t sub_190CD4DEC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_190CD4E34(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 40) = v2;
  return result;
}

uint64_t type metadata accessor for FixedKeybagStateProvider()
{
  return self;
}

uint64_t method lookup function for FixedKeybagStateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FixedKeybagStateProvider);
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockStatePublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockState.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockState.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBootPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBoot.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBoot.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBoot.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.__allocating_init(lockState:hasUnlockedSinceBoot:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.update()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t WidgetAutomationService.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(self, sel_sharedInstance);
  return v0;
}

uint64_t WidgetAutomationService.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(self, sel_sharedInstance);
  return v0;
}

uint64_t WidgetAutomationService.widgetSceneInfo()()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x1F4188298](sub_190CD50C4, 0, 0);
}

uint64_t sub_190CD50C4()
{
  uint64_t v1 = *(void **)(v0[17] + 16);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_190CD51C4;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_190CD5450;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_fetchWidgetSceneInfoWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_190CD51C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_190CD53E4;
  }
  else {
    uint64_t v2 = sub_190CD52D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190CD52D4()
{
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  sub_190D41708();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABB18);
  sub_190CD5524();
  sub_190D416F8();
  sub_190CD55F0(v1, v2);
  uint64_t v3 = v0[10];
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_190CD53E4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_190CD5450(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA360);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = sub_190D41648();
    uint64_t v11 = v10;

    objc_super v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    uint64_t *v12 = v9;
    v12[1] = v11;
    return MEMORY[0x1F4188200](v3);
  }
}

unint64_t sub_190CD5524()
{
  unint64_t result = qword_1E92ABB20;
  if (!qword_1E92ABB20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92ABB18);
    sub_190CD5598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABB20);
  }
  return result;
}

unint64_t sub_190CD5598()
{
  unint64_t result = qword_1E92ABB28;
  if (!qword_1E92ABB28)
  {
    type metadata accessor for WidgetRendererSessionInfo();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABB28);
  }
  return result;
}

uint64_t sub_190CD55F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t WidgetAutomationService.deinit()
{
  return v0;
}

uint64_t WidgetAutomationService.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for WidgetAutomationService()
{
  return self;
}

uint64_t method lookup function for WidgetAutomationService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetAutomationService);
}

uint64_t dispatch thunk of WidgetAutomationService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ControlsClientInterface.liveControlsDidChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlsClientInterface.previewControlsDidChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlsClientInterface.reloadControls(forExtension:kind:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of ControlsClientInterface.fetchControlDescriptors(forExtensionBundleIdentifier:userInitiated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 32)
                                                                                              + **(int **)(a7 + 32));
  int v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = sub_190CD620C;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ControlsClientInterface.controlDescriptor(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_190CD5964;
  return v9(a1, a2, a3);
}

uint64_t sub_190CD5964(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of ControlsClientInterface.updateControlHostConfiguration(host:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ControlsClientInterface.updateControlHostActivationState(host:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ControlsClientInterface.invalidateControlHost(host:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ControlsClientInterface.allControlConfigurationsByHost()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 72) + **(int **)(a2 + 72));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_190CD620C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ControlsClientInterface.sendPushToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 80) + **(int **)(a3 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_190CD5C90;
  return v9(a1, a2, a3);
}

uint64_t sub_190CD5C90()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of ControlsClientInterface.sendPushUpdate(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 88) + **(int **)(a3 + 88));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_190CD6208;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ControlsClientInterface.unsubscribeToPushes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 96) + **(int **)(a3 + 96));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_190CD6208;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ControlsClientInterface.subscribeToSession(withRequest:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of ControlsClientInterface.unsubscribe(fromSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of ControlsClientInterface.setVisiblySettled(_:forSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of ControlsClientInterface.setTaskPriority(_:forSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of ControlsClientInterface.setEnvironmentModifiers(_:forSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of ControlsClientInterface.setControlState(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 144) + **(int **)(a4 + 144));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_190CD6208;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ControlsClientInterface.performControlAction(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 152) + **(int **)(a4 + 152));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_190CD6208;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_190CD6210()
{
  type metadata accessor for DefaultKeybagStateProvider();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_190CD6D14();
  qword_1E92B30D8 = v0;
  return result;
}

uint64_t sub_190CD624C(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_190D41858();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_190D41898();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t result = BSDispatchQueueAssert();
  uint64_t v14 = *(unsigned __int8 *)(v2 + 24);
  if (v14 != v12)
  {
    if (qword_1E92AA948 != -1) {
      swift_once();
    }
    uint64_t v31 = v9;
    uint64_t v32 = v5;
    uint64_t v15 = sub_190D41778();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E92B30E0);
    uint64_t v16 = sub_190D41758();
    int v17 = sub_190D41D48();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      int v30 = v17;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v18 = 136446466;
      unint64_t v19 = 0xE700000000000000;
      uint64_t v20 = 0x6E776F6E6B6E75;
      switch(v12)
      {
        case 1:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x64656B636F6C6E75;
          break;
        case 2:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v20 = 0x64656B636F6CLL;
          break;
        case 3:
          uint64_t v20 = 0x676E696B636F6CLL;
          break;
        case 4:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x64656C6261736964;
          break;
        case 5:
          unint64_t v19 = 0x8000000190D5CB30;
          uint64_t v20 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v20 = 0x5065636172476E69;
          unint64_t v19 = 0xED0000646F697265;
          break;
        case 7:
          uint64_t v20 = 0x7472657373416E69;
          unint64_t v19 = 0xED000079616C6544;
          break;
        case 8:
          uint64_t v20 = 0x6C6E556F69426E69;
          unint64_t v19 = 0xEB000000006B636FLL;
          break;
        default:
          break;
      }
      uint64_t v33 = sub_190CCB3A8(v20, v19, aBlock);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      unint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x6E776F6E6B6E75;
      switch(v14)
      {
        case 1:
          unint64_t v21 = 0xE800000000000000;
          uint64_t v22 = 0x64656B636F6C6E75;
          break;
        case 2:
          unint64_t v21 = 0xE600000000000000;
          uint64_t v22 = 0x64656B636F6CLL;
          break;
        case 3:
          uint64_t v22 = 0x676E696B636F6CLL;
          break;
        case 4:
          unint64_t v21 = 0xE800000000000000;
          uint64_t v22 = 0x64656C6261736964;
          break;
        case 5:
          unint64_t v21 = 0x8000000190D5CB30;
          uint64_t v22 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v22 = 0x5065636172476E69;
          unint64_t v21 = 0xED0000646F697265;
          break;
        case 7:
          uint64_t v22 = 0x7472657373416E69;
          unint64_t v21 = 0xED000079616C6544;
          break;
        case 8:
          uint64_t v22 = 0x6C6E556F69426E69;
          unint64_t v21 = 0xEB000000006B636FLL;
          break;
        default:
          break;
      }
      uint64_t v33 = sub_190CCB3A8(v22, v21, aBlock);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_190C6F000, v16, (os_log_type_t)v30, "Transition: %{public}s -> %{public}s", (uint8_t *)v18, 0x16u);
      uint64_t v23 = v29;
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v23, -1, -1);
      MEMORY[0x192FD7910](v18, -1, -1);
    }

    char v24 = *(void **)(v2 + 56);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v2;
    *(unsigned char *)(v25 + 24) = v14;
    aBlock[4] = (uint64_t)sub_190CD7808;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_190CED068;
    aBlock[3] = (uint64_t)&block_descriptor_30;
    char v26 = _Block_copy(aBlock);
    id v27 = v24;
    swift_retain();
    sub_190D41868();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
    sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
    sub_190D41E88();
    MEMORY[0x192FD6250](0, v11, v7, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_190CD691C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_190D41858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = sub_190D41898();
  uint64_t v6 = *(void *)(v19[0] - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  int v9 = *(unsigned __int8 *)(v0 + 40);
  if (qword_1E92AA948 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_190D41778();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92B30E0);
  uint64_t v11 = sub_190D41758();
  os_log_type_t v12 = sub_190D41D48();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109120;
    LODWORD(aBlock[0]) = v9;
    sub_190D41E48();
    _os_log_impl(&dword_190C6F000, v11, v12, "Has unlocked since boot: %{BOOL}d", v13, 8u);
    MEMORY[0x192FD7910](v13, -1, -1);
  }

  uint64_t v14 = *(void **)(v1 + 56);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  *(unsigned char *)(v15 + 24) = v9;
  aBlock[4] = sub_190CD7844;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_36;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v14;
  swift_retain();
  sub_190D41868();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v8, v5, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, void))(v6 + 8))(v8, v19[0]);
  return swift_release();
}

uint64_t sub_190CD6CD0()
{
  return swift_release();
}

uint64_t sub_190CD6D14()
{
  uint64_t v12 = sub_190D41D78();
  uint64_t v1 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_190D41D58();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_190D41898();
  MEMORY[0x1F4188790](v5 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA950);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_190D417E8();
  *(unsigned char *)(v0 + 24) = 4;
  LOBYTE(v13) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA958);
  swift_allocObject();
  *(void *)(v0 + 32) = sub_190D41808();
  *(unsigned char *)(v0 + 40) = 0;
  v11[5] = sub_190CD7850();
  sub_190D41888();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  v11[3] = sub_190CD7890((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  void v11[2] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  v11[4] = sub_190CD4928((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  uint64_t v6 = *MEMORY[0x1E4FBCC58];
  uint64_t v7 = v1 + 104;
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v11[1] = v7;
  uint64_t v9 = v12;
  v8(v3, v6, v12);
  *(void *)(v0 + 48) = sub_190D41DA8();
  sub_190D41888();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_190D41E88();
  v8(v3, v6, v9);
  *(void *)(v0 + 56) = sub_190D41DA8();
  *(void *)(v0 + 64) = 0;
  sub_190CD7078(v0);
  return v0;
}

void sub_190CD7078(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_190CD768C;
  *(void *)(v3 + 24) = a1;
  uint64_t v15 = sub_190CD7928;
  uint64_t v16 = v3;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_190CCA8F0;
  uint64_t v14 = &block_descriptor_44;
  uint64_t v4 = _Block_copy(&v11);
  uint64_t v5 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v4);

  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void **)(a1 + 48);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = sub_190CD7920;
    uint64_t v16 = v7;
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 1107296256;
    uint64_t v13 = sub_190CD7758;
    uint64_t v14 = &block_descriptor_50;
    uint64_t v8 = _Block_copy(&v11);
    id v9 = v6;
    swift_release();
    uint64_t v10 = MKBEventsRegister();
    _Block_release(v8);

    *(void *)(a1 + 64) = v10;
  }
}

uint64_t sub_190CD727C()
{
  MKBEventsUnregister();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186488](v0, 72, 7);
}

uint64_t type metadata accessor for DefaultKeybagStateProvider()
{
  return self;
}

uint64_t sub_190CD72F8()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_190CD768C;
  *(void *)(v2 + 24) = v0;
  void v6[4] = sub_190CD0740;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_190CCA8F0;
  v6[3] = &block_descriptor_3;
  uint64_t v3 = _Block_copy(v6);
  uint64_t v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_190CD7438(uint64_t a1)
{
  *(unsigned char *)(a1 + 40) = MKBDeviceUnlockedSinceBoot() == 1;
  sub_190CD691C();
  sub_190CD74F0(&v5);
  unsigned __int8 v2 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  unsigned __int8 v4 = v2;
  return sub_190CD624C(&v4);
}

uint64_t sub_190CD7494()
{
  sub_190CD0F9C((uint64_t)&unk_1EE09D580);
  uint64_t v0 = sub_190D418A8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E92AA930 = v0;
  return result;
}

uint64_t sub_190CD74F0@<X0>(unsigned char *a1@<X8>)
{
  if (qword_1E92AA940 != -1) {
    swift_once();
  }
  uint64_t result = MKBGetDeviceLockState();
  if (result < 8) {
    char v3 = result + 1;
  }
  else {
    char v3 = 0;
  }
  *a1 = v3;
  return result;
}

void sub_190CD7558()
{
  id v1 = *(id *)(*(void *)v0 + 48);
  sub_190D41D88();
}

uint64_t sub_190CD75E0()
{
  id v1 = *(id *)(*(void *)v0 + 48);
  sub_190D41D88();

  return v3;
}

uint64_t sub_190CD7650()
{
  return sub_190CD72F8();
}

void sub_190CD7674(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void sub_190CD7680(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t sub_190CD768C()
{
  return sub_190CD7438(v0);
}

uint64_t sub_190CD7694()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_190CD76BC(int a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    BSDispatchQueueAssert();
    if (a1)
    {
      if (a1 == 1)
      {
        sub_190CD74F0(&v6);
        unsigned __int8 v4 = *(unsigned char *)(v3 + 24);
        *(unsigned char *)(v3 + 24) = v6;
        unsigned __int8 v5 = v4;
        sub_190CD624C(&v5);
      }
    }
    else
    {
      *(unsigned char *)(v3 + 40) = 1;
      sub_190CD691C();
    }
    return swift_release();
  }
  return result;
}

void sub_190CD7758(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned __int8 v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_190CD77D0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_190CD7808()
{
  return sub_190D417D8();
}

uint64_t sub_190CD7844()
{
  return sub_190CD6CD0();
}

unint64_t sub_190CD7850()
{
  unint64_t result = qword_1E92AAAF0;
  if (!qword_1E92AAAF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AAAF0);
  }
  return result;
}

uint64_t sub_190CD7890(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CD78D8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CD78E8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190CD7920(int a1)
{
  return sub_190CD76BC(a1);
}

uint64_t sub_190CD7950()
{
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for SecureArchiver()
{
  return self;
}

uint64_t sub_190CD79AC(uint64_t a1)
{
  *(void *)(v1 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28DB0]), sel_initRequiringSecureCoding_, 1);
  *(void *)(v1 + 32) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = MEMORY[0x1E4FBC860];
  if ((v3 & 0xC000000000000000) != 0 && sub_190D420B8()) {
    sub_190D0FF84(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v4 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v1 + 48) = v4;
  *(unsigned char *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_190CD7A44()
{
  sub_190CD9554();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 72, 7);
}

uint64_t type metadata accessor for RelevanceCacheWriter()
{
  return self;
}

void sub_190CD7AFC(uint64_t a1, char a2)
{
  id v3 = objc_msgSend(*(id *)(a1 + 16), sel_groups);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_190C72C5C(0, &qword_1E92AA550);
    unint64_t v5 = sub_190D41BE8();

    if (!(v5 >> 62)) {
      goto LABEL_3;
    }
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190D420B8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v5 = MEMORY[0x1E4FBC860];
  if (MEMORY[0x1E4FBC860] >> 62) {
    goto LABEL_36;
  }
LABEL_3:
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_37;
  }
LABEL_4:
  if (v6 >= 1)
  {
    swift_beginAccess();
    uint64_t v7 = 0;
    char v42 = a2;
    uint64_t v41 = v6;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        uint64_t v8 = (void *)MEMORY[0x192FD6450](v7, v5);
      }
      else {
        uint64_t v8 = *(id *)(v5 + 8 * v7 + 32);
      }
      id v9 = v8;
      uint64_t v10 = (void *)MEMORY[0x192FD6E60]();
      if ((a2 & 1) != 0 && objc_msgSend(v9, sel_isDeletion))
      {
        id v11 = objc_msgSend(v9, sel_kind);
        if (v11)
        {
          uint64_t v12 = v11;
          sub_190D41978();
          uint64_t v14 = v13;
        }
        else
        {
          uint64_t v14 = 0;
        }
        id v27 = objc_msgSend(v9, sel_extensionIdentity);
        if (v27)
        {
          uint64_t v28 = v27;
          unint64_t v21 = sub_190D17320();

          if (v21)
          {
            if (v14)
            {
              id v29 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
              int v30 = (void *)sub_190D41948();
              swift_bridgeObjectRelease();
              id v31 = objc_msgSend(v29, sel_initWithExtensionIdentity_kind_, v21, v30);

              if (v31)
              {
                swift_beginAccess();
                id v32 = v31;
                sub_190D128FC(&v45, v32);
                swift_endAccess();
              }
              goto LABEL_7;
            }
            goto LABEL_30;
          }
        }
      }
      else
      {
        id v15 = objc_msgSend(v9, sel_kind);
        if (v15)
        {
          uint64_t v16 = v15;
          sub_190D41978();
          uint64_t v18 = v17;
        }
        else
        {
          uint64_t v18 = 0;
        }
        id v19 = objc_msgSend(v9, sel_extensionIdentity);
        if (v19)
        {
          uint64_t v20 = v19;
          unint64_t v21 = sub_190D17320();

          if (v21)
          {
            if (v18)
            {
              id v22 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
              uint64_t v23 = (void *)sub_190D41948();
              swift_bridgeObjectRelease();
              id v24 = objc_msgSend(v22, sel_initWithExtensionIdentity_kind_, v21, v23);

              if (v24)
              {
                uint64_t v25 = *(void *)(v44 + 48);
                swift_bridgeObjectRetain();
                char v26 = sub_190CEF3B8(v24, v25);
                swift_bridgeObjectRelease();
                if (v26)
                {
                }
                else
                {
                  swift_beginAccess();
                  id v33 = v24;
                  sub_190D128FC(&v45, v33);
                  swift_endAccess();

                  id v34 = *(id *)(v44 + 16);
                  id v35 = objc_msgSend(v33, sel_kind);
                  sub_190D41978();

                  long long v36 = (void *)sub_190D41948();
                  swift_bridgeObjectRelease();
                  id v37 = objc_msgSend(v34, sel_createString_, v36);

                  id v38 = objc_msgSend(v33, sel_extensionIdentity);
                  uint64_t v39 = sub_190CDA218(v38);

                  sub_190CD89CC((uint64_t)v37, v39, v9, v44, a1);
                  uint64_t v40 = swift_beginAccess();
                  MEMORY[0x192FD6080](v40);
                  if (*(void *)((*(void *)(v44 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v44 + 40) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_190D41C18();
                  }
                  sub_190D41C38();
                  sub_190D41C08();
                  swift_endAccess();

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  a2 = v42;
                  uint64_t v6 = v41;
                }
              }
              goto LABEL_7;
            }
LABEL_30:

            goto LABEL_7;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_7:
      ++v7;

      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  __break(1u);
}

void sub_190CD8064(unint64_t a1, void *a2, void *a3, char a4, unint64_t a5)
{
  if (a4)
  {
    id v24 = *(void **)(a5 + 16);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a1;
    *(void *)(v25 + 24) = a2;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_190CDAE7C;
    *(void *)(v26 + 24) = v25;
    *(void *)&long long v78 = sub_190CDB508;
    *((void *)&v78 + 1) = v26;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v77 = sub_190CDB504;
    *((void *)&v77 + 1) = &block_descriptor_94;
    id v27 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    unint64_t v8 = v24;
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend((id)v8, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v27);

    _Block_release(v27);
    LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v27)
    {
      __break(1u);
      goto LABEL_14;
    }
    return;
  }
  unint64_t v73 = a5;
  id v67 = a3;
  id v7 = objc_msgSend(v67, sel_relevances);
  sub_190C72C5C(0, (unint64_t *)&unk_1E92AA520);
  unint64_t v8 = sub_190D41BE8();

  uint64_t v9 = v8 >> 62;
  v68 = a2;
  if (v8 >> 62) {
    goto LABEL_62;
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    long long v77 = 0u;
    long long v78 = 0u;
    long long aBlock = 0u;
    char v79 = 1;
    a2 = (void *)sub_190CDAB8C((uint64_t)&aBlock, v10);
    if (v9)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_190D420B8();
      if (!v11)
      {
LABEL_15:
        swift_bridgeObjectRelease_n();
LABEL_54:
        unint64_t v8 = sub_190CD9B08((uint64_t)a2);
        swift_bridgeObjectRelease();
        v62 = *(void **)(v73 + 16);
        v63 = (void *)swift_allocObject();
        v63[2] = a1;
        v63[3] = v68;
        v63[4] = v67;
        v63[5] = v8;
        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = sub_190CDB4C8;
        *(void *)(v64 + 24) = v63;
        v75[4] = sub_190CDB508;
        v75[5] = v64;
        v75[0] = MEMORY[0x1E4F143A8];
        v75[1] = 1107296256;
        v75[2] = sub_190CDB504;
        v75[3] = &block_descriptor_104;
        v65 = _Block_copy(v75);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        a2 = v67;
        uint64_t v11 = v62;
        swift_unknownObjectRetain();
        swift_release();
        objc_msgSend((id)v11, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v65);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        _Block_release(v65);

        LOBYTE(v65) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((v65 & 1) == 0) {
          return;
        }
        __break(1u);
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_15;
      }
    }
    unint64_t v74 = v8 & 0xC000000000000001;
    if ((v8 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_64:
    id v12 = (id)MEMORY[0x192FD6450](0, v8);
LABEL_9:
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v13, sel_intentReference);

    v71 = (id *)v8;
    if (v14)
    {
      id v15 = objc_msgSend(v14, sel__partialSchemaData);
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = sub_190D41648();
        unint64_t v19 = v18;

        id v20 = *(id *)(v73 + 16);
        unint64_t v21 = a1;
        id v22 = (void *)sub_190D41628();
        id v23 = objc_msgSend(v20, sel_createVectorOfUInt8WithData_alignment_, v22, 8);

        a1 = v21;
        sub_190CD55F0(v17, v19);
        goto LABEL_18;
      }
    }
    id v23 = 0;
LABEL_18:
    if (v11 < 1) {
      goto LABEL_66;
    }
    unint64_t v66 = a1;
    v69 = (id *)(v8 + 32);
    id v70 = v23;
    swift_bridgeObjectRetain();
    a1 = 0;
    uint64_t v9 = 80;
    uint64_t v72 = v11;
    do
    {
      if (v74) {
        id v29 = (id)MEMORY[0x192FD6450](a1, v8);
      }
      else {
        id v29 = v69[a1];
      }
      int v30 = v29;
      id v31 = objc_msgSend(v29, sel_intentReference);
      if (v31)
      {
        uint64_t v28 = v31;
        id v32 = objc_msgSend(v31, sel__partialConfigData);
        if (v32)
        {
          id v33 = v32;
          uint64_t v34 = sub_190D41648();
          unint64_t v36 = v35;

          unint64_t v8 = (unint64_t)*(id *)(v73 + 16);
          id v37 = (void *)sub_190D41628();
          id v38 = objc_msgSend((id)v8, sel_createVectorOfUInt8WithData_alignment_, v37, 8);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a2 = sub_190CF86AC((uint64_t)a2);
          }
          if (a1 >= a2[2]) {
            goto LABEL_59;
          }
          unint64_t v8 = (unint64_t)a2 + v9;
          *(void *)((char *)a2 + v9 - 16) = v38;
          swift_unknownObjectRelease();
          unint64_t v39 = a2[2];
          swift_unknownObjectRetain();
          if (a1 >= v39) {
            goto LABEL_60;
          }
          *(void *)(v8 - 24) = v70;
          swift_unknownObjectRelease();
          sub_190CD55F0(v34, v36);
          uint64_t v11 = v72;
        }
        id v40 = objc_msgSend(v28, sel__intentData);
        if (v40)
        {
          uint64_t v41 = v40;
          uint64_t v42 = sub_190D41648();
          unint64_t v44 = v43;

          unint64_t v8 = (unint64_t)*(id *)(v73 + 16);
          id v45 = (void *)sub_190D41628();
          id v46 = objc_msgSend((id)v8, sel_createVectorOfUInt8WithData_alignment_, v45, 8);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a2 = sub_190CF86AC((uint64_t)a2);
          }
          uint64_t v11 = v72;
          if (a1 >= a2[2]) {
            goto LABEL_61;
          }
          *(void *)((char *)a2 + v9 - 32) = v46;
          swift_unknownObjectRelease();
          sub_190CD55F0(v42, v44);
        }
        id v47 = objc_msgSend(v28, sel_stableHash);
        unint64_t v8 = (unint64_t)v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a2 = sub_190CF86AC((uint64_t)a2);
        }
        if (a1 >= a2[2]) {
          goto LABEL_57;
        }
        v48 = (char *)a2 + v9;
        *((void *)v48 - 1) = v47;
        unsigned char *v48 = 0;
      }
      else
      {
        uint64_t v28 = v30;
      }
      ++a1;

      v9 += 56;
    }
    while (v11 != a1);
    swift_bridgeObjectRelease();
    unint64_t v49 = 0;
    uint64_t v9 = 32;
    a1 = v73;
    while (1)
    {
      id v50 = v74 ? (id)MEMORY[0x192FD6450](v49, v8) : *(id *)(v8 + 8 * v49 + 32);
      uint64_t v51 = v50;
      id v52 = objc_msgSend(v50, sel_attribute);
      if (v52)
      {
        v53 = v52;
        v75[0] = *(void *)(v73 + 32);
        sub_190CDAE24();
        id v54 = v53;
        sub_190D41AE8();
        unint64_t v8 = (unint64_t)*(id *)(v73 + 24);
        v55 = (void *)sub_190D41948();
        objc_msgSend((id)v8, sel_encodeObject_forKey_, v54, v55);

        uint64_t v56 = *(void *)(v73 + 32);
        BOOL v57 = __OFADD__(v56, 1);
        uint64_t v58 = v56 + 1;
        if (v57) {
          goto LABEL_58;
        }
        *(void *)(v73 + 32) = v58;
        id v59 = *(id *)(v73 + 16);
        v60 = (void *)sub_190D41948();
        swift_bridgeObjectRelease();
        id v61 = objc_msgSend(v59, sel_createString_, v60);

        unint64_t v8 = (unint64_t)v71;
        uint64_t v11 = v72;
      }
      else
      {
        id v61 = 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_190CF86AC((uint64_t)a2);
      }
      if (v49 >= a2[2]) {
        break;
      }
      ++v49;
      *(void *)((char *)a2 + v9) = v61;

      swift_unknownObjectRelease();
      v9 += 56;
      if (v11 == v49)
      {
        swift_bridgeObjectRelease();
        a1 = v66;
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v8 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_66:
  __break(1u);
}

void sub_190CD89CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v97 = a5;
  uint64_t v6 = a3;
  if (objc_msgSend(a3, sel_isDeletion))
  {
    uint64_t v9 = *(void **)(a4 + 16);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = a1;
    v6[3] = a2;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_190CDAE7C;
    *(void *)(v10 + 24) = v6;
    *(void *)&long long v107 = sub_190CDB508;
    *((void *)&v107 + 1) = v10;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v106 = sub_190CDB504;
    *((void *)&v106 + 1) = &block_descriptor_83;
    uint64_t v11 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    id v12 = v9;
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v12, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v11);

    _Block_release(v11);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v11 & 1) == 0) {
      return;
    }
    __break(1u);
  }
  v93 = v6;
  id v13 = objc_msgSend(v6, sel_relevances);
  uint64_t v94 = a2;
  if (v13)
  {
    id v14 = v13;
    sub_190C72C5C(0, &qword_1E92AA540);
    unint64_t v15 = sub_190D41BE8();
  }
  else
  {
    unint64_t v15 = MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = v15 >> 62;
  uint64_t v92 = a1;
  if (v15 >> 62) {
    goto LABEL_68;
  }
  uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    long long v106 = 0u;
    long long v107 = 0u;
    long long aBlock = 0u;
    char v108 = 1;
    unint64_t v18 = (void *)sub_190CDAB8C((uint64_t)&aBlock, v17);
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t isEscapingClosureAtFileLocation = sub_190D420B8();
      if (!isEscapingClosureAtFileLocation)
      {
LABEL_18:
        swift_bridgeObjectRelease_n();
        id v96 = 0;
LABEL_60:
        uint64_t v83 = v92;
        uint64_t v84 = sub_190CD9B08((uint64_t)v18);
        swift_bridgeObjectRelease();
        v85 = *(void **)(a4 + 16);
        v86 = (void *)swift_allocObject();
        uint64_t v87 = v94;
        v86[2] = v83;
        v86[3] = v87;
        unint64_t v18 = v93;
        v86[4] = v93;
        v86[5] = v84;
        uint64_t v88 = swift_allocObject();
        *(void *)(v88 + 16) = sub_190CDAD7C;
        *(void *)(v88 + 24) = v86;
        v104[4] = sub_190CDB508;
        v104[5] = v88;
        v104[0] = MEMORY[0x1E4F143A8];
        v104[1] = 1107296256;
        v104[2] = sub_190CDB504;
        v104[3] = &block_descriptor_73;
        v89 = _Block_copy(v104);
        swift_unknownObjectRetain();
        unint64_t v15 = v85;
        v90 = v18;
        swift_unknownObjectRetain();
        swift_retain();
        swift_unknownObjectRetain();
        swift_release();
        objc_msgSend((id)v15, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v89);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        _Block_release(v89);

        uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0) {
          return;
        }
        __break(1u);
        goto LABEL_70;
      }
    }
    else
    {
      uint64_t isEscapingClosureAtFileLocation = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!isEscapingClosureAtFileLocation) {
        goto LABEL_18;
      }
    }
    unint64_t v103 = v15 & 0xC000000000000001;
    if ((v15 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_70:
    id v20 = (id)MEMORY[0x192FD6450](0, v15);
LABEL_14:
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v21, sel_intentReference);

    uint64_t v99 = isEscapingClosureAtFileLocation;
    if (v22)
    {
      id v23 = objc_msgSend(v22, sel_schemaDataAsData);
      if (v23)
      {
        id v24 = v23;
        uint64_t v25 = sub_190D41648();
        unint64_t v27 = v26;

        id v28 = *(id *)(a4 + 16);
        id v29 = (void *)sub_190D41628();
        id v30 = objc_msgSend(v28, sel_createVectorOfUInt8WithData_alignment_, v29, 8);

        uint64_t v31 = v25;
        uint64_t isEscapingClosureAtFileLocation = v99;
        sub_190CD55F0(v31, v27);
        goto LABEL_21;
      }
    }
    id v30 = 0;
LABEL_21:
    if (isEscapingClosureAtFileLocation < 1) {
      goto LABEL_72;
    }
    v95 = (id *)(v15 + 32);
    swift_bridgeObjectRetain();
    unint64_t v16 = 0;
    uint64_t v32 = 10;
    v100 = 0;
    v101 = (id *)v15;
    uint64_t v98 = a4;
    id v96 = v30;
    do
    {
      if (v103) {
        id v34 = (id)MEMORY[0x192FD6450](v16, v15);
      }
      else {
        id v34 = v95[v16];
      }
      unint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_intentReference);
      if (v36)
      {
        id v33 = v36;
        id v102 = v35;
        id v37 = objc_msgSend(v36, sel_partialIntentDataAsData);
        if (v37)
        {
          id v38 = v37;
          uint64_t v39 = sub_190D41648();
          unint64_t v41 = v40;

          uint64_t v42 = (char *)v18;
          id v43 = *(id *)(a4 + 16);
          a4 = sub_190D41628();
          unint64_t v15 = (unint64_t)objc_msgSend(v43, sel_createVectorOfUInt8WithData_alignment_, a4, 8);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v42 = sub_190CF86AC((uint64_t)v42);
          }
          uint64_t v44 = v98;
          if (v16 >= *((void *)v42 + 2)) {
            goto LABEL_64;
          }
          id v45 = &v42[v32 * 8];
          *(void *)&v42[v32 * 8 - 16] = v15;
          swift_unknownObjectRelease();
          a4 = (uint64_t)v42;
          unint64_t v15 = *((void *)v42 + 2);
          id v46 = v96;
          swift_unknownObjectRetain();
          if (v16 >= v15) {
            goto LABEL_65;
          }
          *((void *)v45 - 3) = v46;
          swift_unknownObjectRelease();
          sub_190CD55F0(v39, v41);
          unint64_t v18 = (void *)a4;
          a4 = v44;
          uint64_t isEscapingClosureAtFileLocation = v99;
        }
        id v47 = objc_msgSend(v33, sel_intentDataAsData);
        if (v47)
        {
          v48 = v47;
          uint64_t v49 = sub_190D41648();
          unint64_t v51 = v50;

          uint64_t v52 = (uint64_t)v18;
          id v53 = *(id *)(a4 + 16);
          id v54 = (void *)sub_190D41628();
          unint64_t v15 = (unint64_t)objc_msgSend(v53, sel_createVectorOfUInt8WithData_alignment_, v54, 8);

          unint64_t v18 = (void *)v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v18 = sub_190CF86AC(v52);
          }
          a4 = v98;
          if (v16 >= v18[2]) {
            goto LABEL_66;
          }
          v18[v32 - 4] = v15;
          swift_unknownObjectRelease();
          sub_190CD55F0(v49, v51);
        }
        id v55 = objc_msgSend(v33, sel_stableHash);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v15 = (unint64_t)v101;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v18 = sub_190CF86AC((uint64_t)v18);
        }
        if (v16 >= v18[2]) {
          goto LABEL_63;
        }
        BOOL v57 = &v18[v32];
        *((void *)v57 - 1) = v55;
        *BOOL v57 = 0;
      }
      else
      {
        id v33 = v35;
      }
      ++v16;

      v32 += 7;
    }
    while (isEscapingClosureAtFileLocation != v16);
    swift_bridgeObjectRelease();
    unint64_t v58 = 0;
    uint64_t v59 = 4;
    while (1)
    {
      id v102 = v18;
      id v60 = v103 ? (id)MEMORY[0x192FD6450](v58, v15) : *(id *)(v15 + 8 * v58 + 32);
      id v61 = v60;
      id v62 = objc_msgSend(v60, sel_attributeKey);
      if (v62)
      {
        v63 = v62;
        uint64_t v64 = sub_190D41978();
        uint64_t v66 = v65;

        id v67 = *(os_unfair_lock_s **)(v97 + 24);
        uint64_t v69 = MEMORY[0x1F4188790](v68);
        v91[6] = v70;
        v91[7] = v64;
        v91[8] = v66;
        MEMORY[0x1F4188790](v69);
        unint64_t v16 = (unint64_t)v91;
        v91[2] = sub_190CDADAC;
        v91[3] = v71;
        swift_retain();
        os_unfair_lock_lock(v67 + 4);
        uint64_t v72 = v100;
        sub_190CDADE0(v104);
        unint64_t v73 = v67 + 4;
        if (v72)
        {
          os_unfair_lock_unlock(v73);
          swift_release();

          swift_bridgeObjectRelease();
          id v74 = 0;
          v100 = 0;
        }
        else
        {
          os_unfair_lock_unlock(v73);
          v75 = (void *)v104[0];
          swift_release();
          v104[0] = *(void *)(a4 + 32);
          sub_190CDAE24();
          unint64_t v16 = v75;
          unint64_t v15 = sub_190D41AE8();
          id v76 = *(id *)(a4 + 24);
          long long v77 = (void *)sub_190D41948();
          objc_msgSend(v76, sel_encodeObject_forKey_, v16, v77);

          a4 = v98;
          uint64_t v78 = *(void *)(v98 + 32);
          BOOL v79 = __OFADD__(v78, 1);
          uint64_t v80 = v78 + 1;
          if (v79) {
            goto LABEL_67;
          }
          v100 = 0;
          *(void *)(v98 + 32) = v80;
          id v81 = *(id *)(a4 + 16);
          v82 = (void *)sub_190D41948();
          swift_bridgeObjectRelease();
          id v74 = objc_msgSend(v81, sel_createString_, v82);
          swift_bridgeObjectRelease();
        }
        unint64_t v15 = (unint64_t)v101;
        uint64_t isEscapingClosureAtFileLocation = v99;
      }
      else
      {
        id v74 = 0;
      }
      unint64_t v18 = v102;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_190CF86AC((uint64_t)v18);
      }
      if (v58 >= v18[2]) {
        break;
      }
      ++v58;
      v18[v59] = v74;

      swift_unknownObjectRelease();
      v59 += 7;
      if (isEscapingClosureAtFileLocation == v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v15 + 32);
    goto LABEL_14;
  }
  __break(1u);
LABEL_72:
  __break(1u);
}

id sub_190CD9494(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  objc_msgSend(a1, sel_setKind_, a2);
  if (a3) {
    objc_msgSend(a1, sel_setExtensionIdentity_, a3);
  }
  objc_msgSend(a4, sel_lastRelevanceUpdate);
  objc_msgSend(a1, sel_setLastRelevanceUpdate_);
  objc_msgSend(a1, sel_setSupportsBackgroundRefresh_, objc_msgSend(a4, sel_supportsBackgroundRefresh));
  return objc_msgSend(a1, sel_setRelevances_, a5);
}

void sub_190CD9554()
{
  aBlock[9] = *(id *)MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(v0 + 56) & 1) == 0)
  {
    *(unsigned char *)(v0 + 56) = 1;
    uint64_t v1 = *(void **)(v0 + 16);
    swift_beginAccess();
    id v2 = v1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA298);
    id v3 = (void *)sub_190D41BD8();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v2, sel__chsCreateVectorOfWidgetRelevancePropertiesBufWithOffsets_, v3);

    id v5 = objc_msgSend(*(id *)(v0 + 24), sel_encodedData);
    uint64_t v6 = sub_190D41648();
    unint64_t v8 = v7;

    id v9 = *(id *)(v0 + 16);
    unint64_t v25 = v8;
    uint64_t v10 = (void *)sub_190D41628();
    id v11 = objc_msgSend(v9, sel_createVectorOfUInt8WithData_alignment_, v10, 8);

    id v12 = *(void **)(v0 + 16);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v4;
    *(void *)(v13 + 24) = v11;
    id v14 = (void *)swift_allocObject();
    v14[2] = sub_190CDB158;
    v14[3] = v13;
    aBlock[4] = sub_190CDB1B8;
    aBlock[5] = v14;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_190CD98D8;
    aBlock[3] = &block_descriptor_113;
    unint64_t v15 = _Block_copy(aBlock);
    id v16 = v12;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    id v17 = objc_msgSend(v16, sel__chsCreateRelevanceCacheBufUsingBlock_, v15);

    _Block_release(v15);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v15) {
      __break(1u);
    }
    unint64_t v18 = *(void **)(v0 + 16);
    aBlock[0] = 0;
    id v19 = objc_msgSend(v18, sel__chsFinishedBufferWithRootRelevanceCacheBufOfs_error_, v17, aBlock);
    id v20 = aBlock[0];
    if (v19)
    {
      uint64_t v21 = sub_190D41648();
      unint64_t v23 = v22;
      sub_190CD55F0(v6, v25);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_190CD55F0(v21, v23);
      swift_release();
    }
    else
    {
      id v24 = v20;
      sub_190D414B8();

      swift_willThrow();
      sub_190CD55F0(v6, v25);
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
  }
}

void sub_190CD98D8(uint64_t a1, void *a2)
{
  id v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_190CD9924(void *a1, void (*a2)(id, uint64_t))
{
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  char v7 = sub_190CEF3B8(a1, v6);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_beginAccess();
    id v9 = a1;
    sub_190D128FC(&v16, v9);
    swift_endAccess();

    id v10 = *(id *)(v2 + 16);
    id v11 = objc_msgSend(v9, sel_kind);
    if (!v11)
    {
      sub_190D41978();
      id v11 = (id)sub_190D41948();
      swift_bridgeObjectRelease();
    }
    id v12 = objc_msgSend(v10, sel_createString_, v11);

    id v13 = objc_msgSend(v9, sel_extensionIdentity);
    uint64_t v14 = sub_190CDA218(v13);

    a2(v12, v14);
    uint64_t v15 = swift_beginAccess();
    MEMORY[0x192FD6080](v15);
    if (*(void *)((*(void *)(v3 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 40) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_190D41C18();
    sub_190D41C38();
    sub_190D41C08();
    swift_endAccess();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190CD9B08(uint64_t a1)
{
  uint64_t v43 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(id (**)(void *))(a1 + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    id v30 = 0;
    uint64_t v3 = 0;
    id v4 = (unsigned char *)(v2 + 80);
    while (1)
    {
      uint64_t v34 = (uint64_t)v3;
      uint64_t v32 = v1;
      uint64_t v5 = *((void *)v4 - 6);
      uint64_t v6 = *((void *)v4 - 5);
      uint64_t v7 = *((void *)v4 - 4);
      uint64_t v8 = *((void *)v4 - 3);
      uint64_t v9 = *((void *)v4 - 2);
      uint64_t v10 = *((void *)v4 - 1);
      char v44 = *v4;
      id v42 = 0;
      uint64_t v35 = v6;
      uint64_t v33 = v10;
      if (v7 || v8 | v9)
      {
        id v12 = *(void **)(v31 + 16);
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v5;
        *(void *)(v13 + 24) = v6;
        *(void *)(v13 + 32) = v7;
        *(void *)(v13 + 40) = v8;
        *(void *)(v13 + 48) = v9;
        *(void *)(v13 + 56) = v10;
        char v11 = v44;
        *(unsigned char *)(v13 + 64) = v44;
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        id v14 = v12;
        sub_190CDAA9C((uint64_t)v30);
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = sub_190CDAB04;
        *(void *)(v15 + 24) = v13;
        unint64_t v40 = sub_190CDB508;
        uint64_t v41 = v15;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v37 = 1107296256;
        id v38 = sub_190CDB504;
        uint64_t v39 = &block_descriptor_64;
        id v16 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        id v17 = objc_msgSend(v14, sel__chsCreateIntentReferenceBufUsingBlock_, v16);

        _Block_release(v16);
        LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v16) {
          goto LABEL_16;
        }
        id v42 = v17;
        swift_unknownObjectRelease();
        id v30 = sub_190CDAB04;
      }
      else
      {
        swift_unknownObjectRetain();
        char v11 = v44;
        swift_unknownObjectRetain();
      }
      id v19 = *(void **)(v31 + 16);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = &v42;
      *(void *)(v20 + 24) = v5;
      *(void *)(v20 + 32) = v35;
      *(void *)(v20 + 40) = v7;
      *(void *)(v20 + 48) = v8;
      *(void *)(v20 + 56) = v9;
      *(void *)(v20 + 64) = v33;
      *(unsigned char *)(v20 + 72) = v11;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v21 = v19;
      sub_190CDAA9C(v34);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_190CDAA80;
      *(void *)(v22 + 24) = v20;
      unint64_t v40 = sub_190CDB508;
      uint64_t v41 = v22;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      id v38 = sub_190CDB504;
      uint64_t v39 = &block_descriptor_55;
      unint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v24 = objc_msgSend(v21, sel__chsCreateWidgetRelevanceBufUsingBlock_, v23);

      _Block_release(v23);
      LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v21) {
        break;
      }
      uint64_t v25 = swift_unknownObjectRetain();
      MEMORY[0x192FD6080](v25);
      if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_190D41C18();
      }
      sub_190D41C38();
      sub_190D41C08();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v4 += 56;
      uint64_t v3 = sub_190CDAA80;
      uint64_t v1 = (id (*)(void *))((char *)v32 - 1);
      if (v32 == (id (*)(void *))1)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = sub_190CDAA80;
        uint64_t v26 = (uint64_t)v30;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    uint64_t v26 = 0;
LABEL_14:
    id v27 = *(id *)(v31 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA280);
    id v28 = (void *)sub_190D41BD8();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v27, sel__chsCreateVectorOfWidgetRelevanceBufWithOffsets_, v28);

    sub_190CDAA9C(v26);
    sub_190CDAA9C((uint64_t)v1);
    return (uint64_t)v29;
  }
  return result;
}

id sub_190CDA064(void *a1, uint64_t a2)
{
  sub_190CDAFA4(a2 + 16, (uint64_t)v8, &qword_1E92AA268);
  sub_190CDAFA4((uint64_t)v8, (uint64_t)&v9, &qword_1E92AA268);
  if (v9) {
    objc_msgSend(a1, sel_setIntentData_);
  }
  sub_190CDAFA4(a2 + 32, (uint64_t)v7, &qword_1E92AA268);
  sub_190CDAFA4((uint64_t)v7, (uint64_t)&v10, &qword_1E92AA268);
  if (v10) {
    objc_msgSend(a1, sel_setPartialIntentData_);
  }
  sub_190CDAFA4(a2 + 24, (uint64_t)v6, &qword_1E92AA268);
  sub_190CDAFA4((uint64_t)v6, (uint64_t)&v11, &qword_1E92AA268);
  if (v11) {
    objc_msgSend(a1, sel_setSchemaData_);
  }
  sub_190CDAFA4(a2 + 40, (uint64_t)v5, &qword_1E92ABC30);
  id result = (id)sub_190CDAFA4((uint64_t)v5, (uint64_t)&v12, &qword_1E92ABC30);
  if ((v13 & 1) == 0) {
    return objc_msgSend(a1, sel_setStableHash_, v12);
  }
  return result;
}

id sub_190CDA18C(id a1, void *a2, uint64_t a3)
{
  if (*a2) {
    objc_msgSend(a1, sel_setIntentReference_);
  }
  sub_190CDAFA4(a3, (uint64_t)&v6, &qword_1E92AA258);
  id result = (id)sub_190CDAFA4((uint64_t)&v6, (uint64_t)&v7, &qword_1E92AA258);
  if (v7) {
    return objc_msgSend(a1, sel_setAttributeKey_);
  }
  return result;
}

uint64_t sub_190CDA218(void *a1)
{
  if (!a1) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  id v4 = a1;
  id v5 = (id)sub_190CDA5E8(v4, v3);
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_12:

    return (uint64_t)v5;
  }
  swift_beginAccess();
  uint64_t v6 = *(void **)(v1 + 16);
  swift_bridgeObjectRetain();
  id v7 = v6;
  uint64_t v8 = (void *)sub_190D41948();
  id v9 = objc_msgSend(v7, sel_createString_, v8);
  swift_bridgeObjectRelease();

  uint64_t v10 = &v4[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  if (*((void *)v10 + 1))
  {
    uint64_t v11 = *(void **)(v1 + 16);
    swift_bridgeObjectRetain();
    id v12 = v11;
    char v13 = (void *)sub_190D41948();
    id v14 = objc_msgSend(v12, sel_createString_, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = 0;
  }
  uint64_t v15 = &v4[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  swift_beginAccess();
  if (*((void *)v15 + 1))
  {
    id v16 = *(void **)(v1 + 16);
    swift_bridgeObjectRetain();
    id v17 = v16;
    unint64_t v18 = (void *)sub_190D41948();
    id v19 = objc_msgSend(v17, sel_createString_, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v19 = 0;
  }
  uint64_t v20 = *(void **)(v1 + 16);
  id v21 = (void *)swift_allocObject();
  v21[2] = v9;
  uint64_t v21[3] = v14;
  v21[4] = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_190CDA86C;
  *(void *)(v22 + 24) = v21;
  v27[4] = sub_190CDB508;
  v27[5] = v22;
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 1107296256;
  v27[2] = sub_190CDB504;
  v27[3] = &block_descriptor_4;
  unint64_t v23 = _Block_copy(v27);
  swift_unknownObjectRetain();
  swift_retain();
  id v24 = v20;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_release();
  id v5 = objc_msgSend(v24, sel__chsCreateExtensionIdentityBufUsingBlock_, v23);

  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0)
  {
    swift_beginAccess();
    id v4 = v4;
    uint64_t v26 = swift_unknownObjectRetain();
    sub_190D2A464(v26, v4);
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_190CDA5E8(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_190CDE704((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_unknownObjectRetain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_190D42078();

  if (!v4) {
    return 0;
  }
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC550);
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_190CDA6B4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v5 = sub_190CDE82C(a1);
      if (v6)
      {
        uint64_t v4 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  uint64_t v3 = sub_190D42078();
  swift_release();
  if (!v3) {
    return 0;
  }
  type metadata accessor for ControlSessionSubscriptionRequest();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

id sub_190CDA790(id result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = result;
  if (a2) {
    uint64_t result = objc_msgSend(result, sel_setExtensionBundleIdentifier_, a2);
  }
  if (a3) {
    uint64_t result = objc_msgSend(v6, sel_setContainerBundleIdentifier_, a3);
  }
  if (a4)
  {
    return objc_msgSend(v6, sel_setDeviceIdentifier_, a4);
  }
  return result;
}

uint64_t sub_190CDA824()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

id sub_190CDA86C(void *a1)
{
  return sub_190CDA790(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_190CDA878()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_190CDA8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_190C72C5C(0, &qword_1E92AA548);
  uint64_t v8 = *(void **)(a1 + 32);
  if (!v8)
  {
    id v11 = objc_msgSend(*(id *)(a1 + 16), sel_archivedObjectsAsData);
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = sub_190D41648();
      unint64_t v15 = v14;

      id v16 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
      id v17 = sub_190CDAEE4();
      sub_190CD55F0(v13, v15);
      if (v3) {
        return v7;
      }
      unint64_t v18 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v17;
    }
    uint64_t v8 = *(void **)(a1 + 32);
    if (!v8)
    {
      sub_190CDAE90();
      swift_allocError();
      *id v19 = a2;
      v19[1] = a3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      return v7;
    }
  }
  id v9 = v8;
  uint64_t v10 = sub_190D41DB8();
  if (v10)
  {
    uint64_t v7 = v10;
  }
  else
  {
    sub_190CDAE90();
    swift_allocError();
    void *v20 = a2;
    v20[1] = a3;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }

  return v7;
}

uint64_t sub_190CDAA28()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 73, 7);
}

id sub_190CDAA80(void *a1)
{
  return sub_190CDA18C(a1, *(void **)(v1 + 16), v1 + 24);
}

uint64_t sub_190CDAA8C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CDAA9C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_190CDAAAC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 65, 7);
}

id sub_190CDAB04(void *a1)
{
  return sub_190CDA064(a1, v1 + 16);
}

uint64_t sub_190CDAB0C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CDAB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_190CDA8A0(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void *sub_190CDAB48@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_190CDAB8C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_190D42098();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = sub_190D41C28();
    *(void *)(v4 + 16) = a2;
    sub_190CDAFA4(a1, (uint64_t)v21, &qword_1E92AA258);
    sub_190CDAFA4(a1 + 8, (uint64_t)v20, (uint64_t *)&unk_1E92AA288);
    sub_190CDAFA4(a1 + 16, (uint64_t)v19, &qword_1E92AA268);
    sub_190CDAFA4(a1 + 24, (uint64_t)v18, &qword_1E92AA268);
    sub_190CDAFA4(a1 + 32, (uint64_t)v17, &qword_1E92AA268);
    long long v6 = *(_OWORD *)(a1 + 16);
    long long v5 = *(_OWORD *)(a1 + 32);
    long long v7 = *(_OWORD *)a1;
    *(unsigned char *)(v4 + 80) = *(unsigned char *)(a1 + 48);
    *(_OWORD *)(v4 + 48) = v6;
    *(_OWORD *)(v4 + 64) = v5;
    *(_OWORD *)(v4 + 32) = v7;
    if (a2 != 1)
    {
      long long v8 = *(_OWORD *)a1;
      long long v9 = *(_OWORD *)(a1 + 16);
      long long v10 = *(_OWORD *)(a1 + 32);
      *(unsigned char *)(v4 + 136) = *(unsigned char *)(a1 + 48);
      *(_OWORD *)(v4 + 120) = v10;
      *(_OWORD *)(v4 + 104) = v9;
      *(_OWORD *)(v4 + 88) = v8;
      uint64_t v11 = a2 - 2;
      if (v11)
      {
        uint64_t v12 = v4 + 144;
        do
        {
          sub_190CDB008((uint64_t)v21);
          sub_190CDB008((uint64_t)v20);
          sub_190CDB008((uint64_t)v19);
          sub_190CDB008((uint64_t)v18);
          sub_190CDB008((uint64_t)v17);
          long long v14 = *(_OWORD *)(a1 + 16);
          long long v13 = *(_OWORD *)(a1 + 32);
          long long v15 = *(_OWORD *)a1;
          *(unsigned char *)(v12 + 48) = *(unsigned char *)(a1 + 48);
          *(_OWORD *)(v12 + 16) = v14;
          *(_OWORD *)(v12 + 32) = v13;
          *(_OWORD *)uint64_t v12 = v15;
          v12 += 56;
          --v11;
        }
        while (v11);
      }
      sub_190CDB008((uint64_t)v21);
      sub_190CDB008((uint64_t)v20);
      sub_190CDB008((uint64_t)v19);
      sub_190CDB008((uint64_t)v18);
      sub_190CDB008((uint64_t)v17);
    }
    sub_190CDB008((uint64_t)v21);
    sub_190CDB008((uint64_t)v20);
    sub_190CDB008((uint64_t)v19);
    sub_190CDB008((uint64_t)v18);
    sub_190CDB008((uint64_t)v17);
    return v4;
  }
  return result;
}

id sub_190CDAD7C(void *a1)
{
  return sub_190CD9494(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_190CDAD9C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CDADAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190CDA8A0(v1[2], v1[3], v1[4]);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void *sub_190CDADE0@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_190CDAE24()
{
  unint64_t result = qword_1E92AA248;
  if (!qword_1E92AA248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA248);
  }
  return result;
}

uint64_t sub_190CDAE80()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_190CDAE90()
{
  unint64_t result = qword_1E92ABCA0;
  if (!qword_1E92ABCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABCA0);
  }
  return result;
}

id sub_190CDAEE4()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_190D41628();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_190D414B8();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_190CDAFA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_190CDB008(uint64_t a1)
{
  return a1;
}

id sub_190CDB038(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  objc_msgSend(a1, sel_setKind_, v3);
  if (v4) {
    objc_msgSend(a1, sel_setExtensionIdentity_, v4);
  }
  return objc_msgSend(a1, sel_setIsDeletion_, 1);
}

uint64_t sub_190CDB0A0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_66Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_190CDB104()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_75Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_190CDB158(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  objc_msgSend(a1, sel_setGroups_, v3);
  return objc_msgSend(a1, sel_setArchivedObjects_, v4);
}

uint64_t sub_190CDB1A8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CDB1B8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t destroy for WidgetRelevanceOffsets()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for WidgetRelevanceOffsets(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetRelevanceOffsets(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetRelevanceOffsets(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceOffsets(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceOffsets(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceOffsets()
{
  return &type metadata for WidgetRelevanceOffsets;
}

uint64_t sub_190CDB50C()
{
  uint64_t v13 = OBJC_IVAR___CHSWidgetExtensionContainer_storage;
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  if (v1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_190D420B8())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD6450](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_identity);
      unsigned __int8 v8 = objc_msgSend(v7, sel_isRemote);

      if ((v8 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  unint64_t v9 = *(void *)(v14 + v13);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_12;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_190D420B8();
  if (!result) {
    goto LABEL_22;
  }
LABEL_12:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_23:
    id v12 = (id)MEMORY[0x192FD6450](0, v9);
    goto LABEL_15;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  id v12 = *(id *)(v9 + 32);
LABEL_15:
  uint64_t v5 = v12;
LABEL_17:
  swift_bridgeObjectRelease();
  return (uint64_t)v5;
}

uint64_t CHSWidgetExtensionContainer.containerBundleIdentifier.getter()
{
  uint64_t v0 = (void *)sub_190CDB50C();
  unint64_t v1 = (char *)objc_msgSend(v0, sel_identity);

  uint64_t v2 = &v1[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  uint64_t result = swift_beginAccess();
  if (*((void *)v2 + 1))
  {
    uint64_t v4 = *(void *)v2;
    swift_bridgeObjectRetain();

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CHSWidgetExtensionContainer.localizedContainerDisplayName.getter()
{
  uint64_t v0 = (void *)sub_190CDB50C();
  id v1 = objc_msgSend(v0, sel_containerBundleLocalizedDisplayName);

  uint64_t v2 = sub_190D41978();
  return v2;
}

uint64_t CHSWidgetExtensionContainer.allExtensions.getter()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_190CE1110(v0, (unint64_t *)&qword_1E92AA8A0, (uint64_t)off_1E56C7DC0, (unint64_t *)&qword_1E92AA8B0, (void (*)(id *, uint64_t))sub_190D12BC8);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CHSWidgetExtensionContainer.remoteExtensionsByDeviceIdentifier.getter()
{
  uint64_t v1 = *(__objc2_prot ***)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  id v45 = (__objc2_prot **)MEMORY[0x1E4FBC860];
  if ((unint64_t)v1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v2 = *(void *)(((unint64_t)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v3 = &_OBJC_LABEL_PROTOCOL___CHSWidgetConfigurationHost_Internal;
  uint64_t v4 = &OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier;
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      uint64_t result = sub_190D42338();
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (((unint64_t)v1 & 0xC000000000000001) != 0) {
        uint64_t v6 = (__objc2_prot *)MEMORY[0x192FD6450](i, v1);
      }
      else {
        uint64_t v6 = v1[i + 4];
      }
      id v7 = v6;
      unsigned __int8 v8 = (char *)[(__objc2_prot *)v6 identity];
      unint64_t v9 = &v8[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
      swift_beginAccess();
      uint64_t v10 = *((void *)v9 + 1);

      if (v10)
      {
        sub_190D41FF8();
        sub_190D42028();
        sub_190D42038();
        sub_190D42008();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v45;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = (__objc2_prot **)MEMORY[0x1E4FBC860];
  }
  id v46 = (void *)MEMORY[0x1E4FBC868];
  if (((unint64_t)v1 & 0x8000000000000000) != 0 || ((unint64_t)v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190D420B8();
    swift_release();
    if (v11) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v11 = (uint64_t)v1[2];
    if (v11)
    {
LABEL_18:
      unint64_t v42 = (unint64_t)v1 & 0xC000000000000001;
      id v12 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v13 = 4;
      long long v39 = xmmword_190D4B930;
      unint64_t v40 = v1;
      uint64_t v41 = v11;
      while (1)
      {
        uint64_t v16 = v13 - 4;
        if (v42)
        {
          id v17 = (__objc2_prot *)MEMORY[0x192FD6450](v13 - 4, v1);
          uint64_t v18 = v13 - 3;
          if (__OFADD__(v16, 1)) {
            goto LABEL_36;
          }
        }
        else
        {
          id v17 = v1[v13];
          uint64_t v18 = v13 - 3;
          if (__OFADD__(v16, 1))
          {
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            swift_bridgeObjectRetain();
            uint64_t v2 = sub_190D420B8();
            goto LABEL_3;
          }
        }
        uint64_t v43 = v18;
        uint64_t v1 = v3;
        id v19 = v17;
        uint64_t v20 = (char *)objc_msgSend(v17, (SEL)v3[420], v39);
        id v21 = v4;
        uint64_t v22 = (uint64_t *)&v20[*v4];
        swift_beginAccess();
        uint64_t v24 = *v22;
        uint64_t v23 = v22[1];
        swift_bridgeObjectRetain();

        if (!v23) {
          goto LABEL_44;
        }
        unint64_t v26 = sub_190CDE68C(v24, v23);
        uint64_t v27 = v12[2];
        BOOL v28 = (v25 & 1) == 0;
        uint64_t v29 = v27 + v28;
        if (__OFADD__(v27, v28)) {
          goto LABEL_37;
        }
        char v30 = v25;
        if (v12[3] < v29)
        {
          sub_190CDEF84(v29, 1);
          id v12 = v46;
          unint64_t v31 = sub_190CDE68C(v24, v23);
          if ((v30 & 1) != (v32 & 1)) {
            goto LABEL_45;
          }
          unint64_t v26 = v31;
        }
        if (v30)
        {
          uint64_t v14 = swift_bridgeObjectRelease();
          long long v15 = (void *)(v12[7] + 8 * v26);
          MEMORY[0x192FD6080](v14);
          uint64_t v3 = v1;
          if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_190D41C18();
          }
          sub_190D41C38();
          sub_190D41C08();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6B0);
          uint64_t v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = v39;
          *(void *)(v33 + 32) = v19;
          uint64_t v44 = v33;
          sub_190D41C08();
          v12[(v26 >> 6) + 8] |= 1 << v26;
          uint64_t v34 = (uint64_t *)(v12[6] + 16 * v26);
          uint64_t *v34 = v24;
          v34[1] = v23;
          *(void *)(v12[7] + 8 * v26) = v44;
          uint64_t v35 = v12[2];
          BOOL v36 = __OFADD__(v35, 1);
          uint64_t v37 = v35 + 1;
          if (v36) {
            goto LABEL_38;
          }
          _OWORD v12[2] = v37;
          uint64_t v3 = v1;
        }
        uint64_t v4 = v21;
        uint64_t v1 = v40;
        ++v13;
        if (v43 == v41) {
          goto LABEL_42;
        }
      }
    }
  }
  id v12 = (void *)MEMORY[0x1E4FBC868];
LABEL_42:
  swift_release();
  return (uint64_t)v12;
}

uint64_t CHSWidgetExtensionContainer.iconVersion.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_iconResolver);
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)sub_190CDB50C();
  id v3 = objc_msgSend(v2, sel_identity);

  id v4 = objc_msgSend(v1, sel_resolveIconVersionForExtensionIdentity_, v3);
  swift_unknownObjectRelease();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_190D41978();

  return v5;
}

void CHSWidgetExtensionContainer.getIcon(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_190CDB50C();
  uint64_t v6 = (char *)objc_msgSend(v5, sel_identity);

  id v7 = (uint64_t *)&v6[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  uint64_t v8 = v7[1];
  if (v8)
  {
    uint64_t v9 = *v7;
    uint64_t v10 = (uint64_t *)&v6[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    uint64_t v13 = *(void **)(v2 + OBJC_IVAR___CHSWidgetExtensionContainer_iconResolver);
    swift_unknownObjectRetain();
    sub_190CDC274(v9, v8, v12, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
    v16[4] = a1;
    v16[5] = a2;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_190CDC3C8;
    v16[3] = &block_descriptor_5;
    long long v15 = _Block_copy(v16);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_resolveIconForContainerIdentity_completion_, v14, v15);
    _Block_release(v15);
    swift_unknownObjectRelease();
  }
  else
  {

    __break(1u);
  }
}

uint64_t sub_190CDC274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA88);
  uint64_t inited = swift_initStackObject();
  uint64_t v9 = inited;
  *(_OWORD *)(inited + 16) = xmmword_190D4B450;
  if (a4) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = 0;
  }
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = a4;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CE1A2C(v9, &v19);
  uint64_t v11 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_190D4B270;
  uint64_t v13 = sub_190CE1E50();
  uint64_t v14 = sub_190CE2054(v13);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRetain();
  sub_190D3E4DC((uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CE17B8();
  uint64_t v17 = sub_190D418E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_190CDC3C8(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void __swiftcall CHSWidgetExtensionContainer.extension(for:)(CHSWidgetExtension_optional *__return_ptr retstr, CHSExtensionIdentity *a2)
{
  uint64_t v2 = a2;
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_190CE0ED4(v3);
  swift_bridgeObjectRelease();
}

uint64_t CHSWidgetExtensionContainer.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_190CCE4DC(a1, (uint64_t)v8);
  if (!v9)
  {
    sub_190CCE544((uint64_t)v8);
    goto LABEL_6;
  }
  type metadata accessor for CHSWidgetExtensionContainer(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    unsigned __int8 v5 = 0;
    return v5 & 1;
  }
  if (v7 == v1)
  {

    unsigned __int8 v5 = 1;
  }
  else
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    uint64_t v4 = *(void *)&v7[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v5 = sub_190CCE880(v3, v4);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

void CHSWidgetExtensionContainer.description.getter()
{
  id v0 = _sSo27CHSWidgetExtensionContainerC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionG0CSgSSSg_tF_0();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_build);

    if (v2)
    {
      sub_190D41978();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::String_optional __swiftcall CHSWidgetExtensionContainer.description(withMultilinePrefix:)(Swift::String_optional withMultilinePrefix)
{
  id v1 = _sSo27CHSWidgetExtensionContainerC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionG0CSgSSSg_tF_0();
  if (v1)
  {
    unint64_t v3 = v1;
    id v4 = objc_msgSend(v1, sel_build);

    if (v4)
    {
      uint64_t v5 = sub_190D41978();
      id v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      id v7 = 0;
    }
    id v1 = (id)v5;
    id v2 = v7;
  }
  else
  {
    __break(1u);
  }
  result.value._object = v2;
  result.value._countAndFlagsBits = (uint64_t)v1;
  return result;
}

void sub_190CDC8DC(void *a1, id a2)
{
  id v4 = objc_msgSend(a2, sel_containerBundleIdentifier);
  if (!v4)
  {
    sub_190D41978();
    id v4 = (id)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  id v6 = objc_msgSend(a2, sel_localizedContainerDisplayName);
  if (!v6)
  {
    sub_190D41978();
    id v6 = (id)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  id v7 = (id)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v6, v7);
}

Swift::String_optional __swiftcall CHSWidgetExtensionContainer.succinctDescription()()
{
  id v0 = CHSWidgetExtensionContainer.succinctDescriptionBuilder()();
  id v1 = objc_msgSend(v0, sel_build);

  if (v1)
  {
    uint64_t v2 = sub_190D41978();
    id v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    id v4 = 0;
  }
  uint64_t v5 = v2;
  id v6 = v4;
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

id CHSWidgetExtensionContainer.succinctDescriptionBuilder()()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v0);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_190CE1628;
    *(void *)(v4 + 24) = v3;
    v9[4] = sub_190CD0740;
    v9[5] = v4;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    void v9[2] = sub_190CCA8F0;
    v9[3] = &block_descriptor_6;
    uint64_t v5 = _Block_copy(v9);
    id v6 = v2;
    id v7 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_appendProem_block_, 0, v5);
    _Block_release(v5);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return v6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_190CDCC14(void *a1, char *a2)
{
  id v4 = objc_msgSend(a2, sel_containerBundleIdentifier);
  if (!v4)
  {
    sub_190D41978();
    id v4 = (id)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  id v6 = objc_msgSend(a2, sel_localizedContainerDisplayName);
  if (!v6)
  {
    sub_190D41978();
    id v6 = (id)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  id v7 = (void *)sub_190D41948();
  objc_msgSend(a1, sel_appendString_withName_, v6, v7);

  unint64_t v8 = *(void *)&a2[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v10 = (id)sub_190D41948();
}

unint64_t sub_190CDCDDC(unint64_t result, uint64_t a2)
{
  unint64_t v4 = result;
  unint64_t v5 = result >> 62;
  if (!(result >> 62))
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id result = sub_190D420B8();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_3:
  if (v6 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v23 = v5;
  uint64_t v22 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  unint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x192FD6450](v7, v4);
    }
    else {
      id v10 = *(id *)(v4 + 8 * v7 + 32);
    }
    uint64_t v11 = v10;
    uint64_t v12 = (char *)objc_msgSend(v10, sel_identity, v22);
    uint64_t v13 = &v12[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *((void *)v13 + 1);
    swift_bridgeObjectRetain();

    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v8 = sub_190C72FA0(0, v8[2] + 1, 1, v8);
      }
      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1) {
        unint64_t v8 = sub_190C72FA0((void *)(v16 > 1), v17 + 1, 1, v8);
      }
      void v8[2] = v17 + 1;
      uint64_t v9 = &v8[2 * v17];
      v9[4] = v15;
      v9[5] = v14;
    }
    ++v7;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
  uint64_t v18 = v8[2];
  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id result = (unint64_t)v2;
  if (v18 == v19)
  {
    uint64_t v20 = (char *)objc_msgSend(v2, sel_init);
    *(void *)&v20[OBJC_IVAR___CHSWidgetExtensionContainer_storage] = v4;
    id v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)&v21[OBJC_IVAR___CHSWidgetExtensionContainer_iconResolver] = v22;

    swift_unknownObjectRelease();
    return (unint64_t)v21;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *CHSWidgetExtensionContainer.extensionBundleIdentifiers.getter()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_190D420B8();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  id result = sub_190CDDDE4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v15;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x192FD6450](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      unint64_t v8 = (char *)objc_msgSend(v6, sel_identity);
      uint64_t v9 = &v8[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
      swift_beginAccess();
      uint64_t v11 = *(void *)v9;
      uint64_t v10 = *((void *)v9 + 1);
      swift_bridgeObjectRetain();

      unint64_t v13 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      if (v13 >= v12 >> 1) {
        sub_190CDDDE4((void *)(v12 > 1), v13 + 1, 1);
      }
      ++v4;
      *(void *)(v15 + 16) = v13 + 1;
      uint64_t v14 = v15 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return (void *)v5;
  }
  __break(1u);
  return result;
}

uint64_t CHSWidgetExtensionContainer.containerBundleIdentifiers.getter()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_17:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_190D420B8();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x192FD6450](v4, v1);
      }
      else {
        id v7 = *(id *)(v1 + 8 * v4 + 32);
      }
      unint64_t v8 = v7;
      uint64_t v9 = (char *)objc_msgSend(v7, sel_identity);
      uint64_t v10 = &v9[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
      swift_beginAccess();
      uint64_t v12 = *(void *)v10;
      uint64_t v11 = *((void *)v10 + 1);
      swift_bridgeObjectRetain();

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_190C72FA0(0, v5[2] + 1, 1, v5);
        }
        unint64_t v14 = v5[2];
        unint64_t v13 = v5[3];
        if (v14 >= v13 >> 1) {
          uint64_t v5 = sub_190C72FA0((void *)(v13 > 1), v14 + 1, 1, v5);
        }
        v5[2] = v14 + 1;
        id v6 = &v5[2 * v14];
        void v6[4] = v12;
        v6[5] = v11;
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

char *sub_190CDD3F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDD4F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA1F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDD5F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDD6F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABD30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDD80C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABD58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDD924(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA578);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDDA28(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA580);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_190CDDB44(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA300);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABD48);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDDC68(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA1C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190CDDD84(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDDE64(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_190CDDDA4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDDF60(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_190CDDDC4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDE068(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_190CDDDE4(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDE16C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_190CDDE04(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDE290(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_190CDDE24(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDE3C8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_190CDDE44(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_190CDE4EC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_190CDDE64(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_190CDDF60(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA228);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_190CDE068(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_190CDE16C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA218);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806C0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_190CDE290(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA590);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA508);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_190CDE3C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1B8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA110);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_190CDE4EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA1C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

unint64_t sub_190CDE608(uint64_t a1)
{
  sub_190D42398();
  type metadata accessor for CFString(0);
  sub_190CE1814();
  sub_190D41688();
  uint64_t v2 = sub_190D423E8();
  return sub_190CE0628(a1, v2);
}

unint64_t sub_190CDE68C(uint64_t a1, uint64_t a2)
{
  sub_190D42398();
  sub_190D41A18();
  uint64_t v4 = sub_190D423E8();
  return sub_190CE0754(a1, a2, v4);
}

unint64_t sub_190CDE704(uint64_t a1)
{
  uint64_t v2 = sub_190D41DD8();
  return sub_190CE0838(a1, v2);
}

unint64_t sub_190CDE748(uint64_t a1)
{
  uint64_t v2 = sub_190D41DD8();
  return sub_190CE0944(a1, v2, &qword_1E92ABD50);
}

unint64_t sub_190CDE798(uint64_t a1)
{
  uint64_t v2 = sub_190D41DD8();
  return sub_190CE0944(a1, v2, (unint64_t *)&unk_1E92AA530);
}

unint64_t sub_190CDE7E8(uint64_t a1)
{
  uint64_t v2 = sub_190D42388();
  return sub_190CE0A58(a1, v2);
}

unint64_t sub_190CDE82C(uint64_t a1)
{
  sub_190D42398();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v2 = *(id *)(a1 + 32);
  sub_190D41DF8();

  uint64_t v3 = sub_190D423E8();
  return sub_190CE0AF4(a1, v3);
}

unint64_t sub_190CDE8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_190D42398();
  sub_190CDC274(a1, a2, a3, a4);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_190D423E8();
  return sub_190CE0C7C(a1, a2, a3, a4, v8);
}

uint64_t sub_190CDE9A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA080);
  uint64_t v6 = sub_190D420E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_190CD0AB0(v23, v35);
    }
    else
    {
      sub_190CCC328((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    sub_190D42398();
    type metadata accessor for CFString(0);
    sub_190CE1814();
    sub_190D41688();
    uint64_t result = sub_190D423E8();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_190CD0AB0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CDECAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2C0);
  uint64_t v6 = sub_190D420E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_unknownObjectRetain();
    }
    uint64_t result = sub_190D41DD8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CDEF84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABD60);
  char v36 = a2;
  uint64_t v6 = sub_190D420E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_190D42398();
    sub_190D41A18();
    uint64_t result = sub_190D423E8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CDF29C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA570);
  char v39 = a2;
  uint64_t v6 = sub_190D420E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v2;
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 16 * v21;
    uint64_t v32 = *(void **)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    if ((v39 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v30;
    }
    uint64_t result = sub_190D41DD8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 16 * v18;
    *(void *)uint64_t v19 = v32;
    *(unsigned char *)(v19 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CDF588(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA560);
  char v39 = a2;
  uint64_t v6 = sub_190D420E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 24 * v21;
    uint64_t v34 = *(void *)v33;
    long long v40 = *(_OWORD *)(v33 + 8);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_190D42398();
    sub_190D41A18();
    uint64_t result = sub_190D423E8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(void *)uint64_t v19 = v34;
    *(_OWORD *)(v19 + 8) = v40;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CDF8CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA6C8);
  uint64_t result = sub_190D420E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_190D42388();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CDFB84(uint64_t a1, char a2)
{
  return sub_190CDFB9C(a1, a2, (uint64_t *)&unk_1E92AA4B0);
}

uint64_t sub_190CDFB90(uint64_t a1, char a2)
{
  return sub_190CDFB9C(a1, a2, &qword_1E92AA4C0);
}

uint64_t sub_190CDFB9C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_190D420E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v35) {
      break;
    }
    char v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v36 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v36 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v36 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v36 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void *)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + v31);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_190D42398();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    id v15 = *(id *)(v32 + 32);
    sub_190D41DF8();

    uint64_t result = sub_190D423E8();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  char v24 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v24 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_190CDFF04(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA210);
  char v43 = a2;
  uint64_t v6 = sub_190D420E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (uint64_t i = v5; ; v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    int64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v24 = v41[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v24 = v41[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    uint64_t v36 = *(void **)(v33 + 16);
    char v44 = *(unsigned char *)(v33 + 24);
    if ((v43 & 1) == 0)
    {
      id v37 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_190D42398();
    sub_190D41A18();
    uint64_t result = sub_190D423E8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v36;
    *(unsigned char *)(v19 + 24) = v44;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190CE0248(uint64_t a1, int a2)
{
  return sub_190CE0290(a1, a2, type metadata accessor for IconStore.FileVersionUpdateMigration, &qword_1E92AA1B0, type metadata accessor for IconStore.FileVersionUpdateMigration);
}

uint64_t sub_190CE026C(uint64_t a1, int a2)
{
  return sub_190CE0290(a1, a2, type metadata accessor for IconStore.FileRenameMigration, (uint64_t *)&unk_1E92ABD38, type metadata accessor for IconStore.FileRenameMigration);
}

uint64_t sub_190CE0290(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v10 = a3(0);
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v13 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v50 = a2;
  uint64_t v14 = sub_190D420E8();
  uint64_t v15 = v14;
  if (*(void *)(v13 + 16))
  {
    uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
    uint64_t v17 = *(void *)(v13 + 64);
    char v44 = (void *)(v13 + 64);
    if (v16 < 64) {
      uint64_t v18 = ~(-1 << v16);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v19 = v18 & v17;
    unint64_t v42 = v5;
    int64_t v43 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v49 = (void *)v14;
    uint64_t v46 = v14 + 64;
    uint64_t result = swift_retain();
    int64_t v21 = 0;
    id v45 = v12;
    uint64_t v47 = v13;
    int64_t v22 = v49;
    while (1)
    {
      if (v19)
      {
        unint64_t v26 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v27 = v26 | (v21 << 6);
      }
      else
      {
        int64_t v28 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        uint64_t v29 = v44;
        if (v28 >= v43) {
          goto LABEL_24;
        }
        unint64_t v30 = v44[v28];
        ++v21;
        if (!v30)
        {
          int64_t v21 = v28 + 1;
          if (v28 + 1 >= v43) {
            goto LABEL_24;
          }
          unint64_t v30 = v44[v21];
          if (!v30)
          {
            int64_t v31 = v28 + 2;
            if (v31 >= v43)
            {
LABEL_24:
              swift_release();
              if ((v50 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v8 = v42;
                uint64_t v15 = (uint64_t)v49;
                goto LABEL_31;
              }
              uint64_t v41 = 1 << *(unsigned char *)(v13 + 32);
              if (v41 >= 64) {
                bzero(v29, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v29 = -1 << v41;
              }
              uint64_t v8 = v42;
              uint64_t v15 = (uint64_t)v49;
              *(void *)(v13 + 16) = 0;
              break;
            }
            unint64_t v30 = v44[v31];
            if (!v30)
            {
              while (1)
              {
                int64_t v21 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_33;
                }
                if (v21 >= v43) {
                  goto LABEL_24;
                }
                unint64_t v30 = v44[v21];
                ++v31;
                if (v30) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v21 = v31;
          }
        }
LABEL_21:
        unint64_t v19 = (v30 - 1) & v30;
        unint64_t v27 = __clz(__rbit64(v30)) + (v21 << 6);
      }
      uint64_t v32 = *(void *)(v13 + 56);
      uint64_t v33 = (uint64_t *)(*(void *)(v13 + 48) + 32 * v27);
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      uint64_t v37 = v33[2];
      uint64_t v36 = v33[3];
      uint64_t v38 = *(void *)(v48 + 72);
      uint64_t v39 = v32 + v38 * v27;
      int64_t v51 = v21;
      uint64_t v40 = (uint64_t)v45;
      if (v50)
      {
        sub_190CE16E8(v39, (uint64_t)v45, a5);
      }
      else
      {
        sub_190CE1680(v39, (uint64_t)v45, a5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_190D42398();
      sub_190CDC274(v34, v35, v37, v36);
      sub_190D41A18();
      swift_bridgeObjectRelease();
      sub_190D423E8();
      uint64_t v23 = v46;
      unint64_t v24 = sub_190D41EA8();
      *(void *)(v23 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      int64_t v25 = (uint64_t *)(v22[6] + 32 * v24);
      *int64_t v25 = v34;
      v25[1] = v35;
      v25[2] = v37;
      uint64_t v25[3] = v36;
      uint64_t result = sub_190CE16E8(v40, v22[7] + v38 * v24, a5);
      ++v22[2];
      uint64_t v13 = v47;
      int64_t v21 = v51;
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *uint64_t v8 = v15;
  return result;
}

unint64_t sub_190CE0628(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_190CE1814();
    id v7 = v6;
    char v8 = sub_190D41678();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_190D41678();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_190CE0754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_190D422D8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_190D422D8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_190CE0838(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CHSExtensionIdentity();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_190D41DE8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_190D41DE8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_190CE0944(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_190C72C5C(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_190D41DE8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_190D41DE8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_190CE0A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_190CE0AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    uint64_t v9 = (void **)(a1 + 32);
    swift_beginAccess();
    swift_beginAccess();
    do
    {
      uint64_t v15 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      swift_beginAccess();
      BOOL v16 = v15[2] == *(void *)(a1 + 16) && v15[3] == *(void *)(a1 + 24);
      if (v16 || (sub_190D422D8() & 1) != 0)
      {
        sub_190C72C5C(0, (unint64_t *)&qword_1E92AA5D0);
        swift_beginAccess();
        id v10 = (void *)v15[4];
        char v11 = *v9;
        swift_retain();
        id v12 = v10;
        id v13 = v11;
        char v14 = sub_190D41DE8();
        swift_release();

        if (v14) {
          break;
        }
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_190CE0C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = a5 & ~(-1 << *(unsigned char *)(v5 + 32));
  uint64_t v36 = v5 + 64;
  if ((*(void *)(v5 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v33 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v6);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v13 = v9[2];
    uint64_t v12 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_190CDC274(v10, v11, v13, v12);
    uint64_t v17 = v16;
    if (v15 == sub_190CDC274(a1, a2, a3, a4) && v17 == v18)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v6;
    }
    char v20 = sub_190D422D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      uint64_t v34 = ~v33;
      unint64_t v6 = (v6 + 1) & v34;
      if ((*(void *)(v36 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
      {
        while (1)
        {
          int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v6);
          uint64_t v22 = *v21;
          uint64_t v23 = v21[1];
          uint64_t v25 = v21[2];
          uint64_t v24 = v21[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_190CDC274(v22, v23, v25, v24);
          uint64_t v28 = v27;
          if (v26 == sub_190CDC274(a1, a2, a3, a4) && v28 == v29) {
            break;
          }
          char v31 = sub_190D422D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) == 0)
          {
            unint64_t v6 = (v6 + 1) & v34;
            if ((*(void *)(v36 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
              continue;
            }
          }
          return v6;
        }
        goto LABEL_16;
      }
    }
  }
  return v6;
}

void *sub_190CE0ED4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_190D420B8())
  {
    sub_190C72C5C(0, (unint64_t *)&qword_1E92AA5D0);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD6450](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_identity);
      char v8 = sub_190D41DE8();

      if (v8)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_190CE1048(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_190D41CC8();
  uint64_t v8 = result;
  if (v2)
  {
    id v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_190D12E94(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_190CE10E0(unint64_t a1)
{
  return sub_190CE1110(a1, (unint64_t *)&unk_1E92AA530, (uint64_t)off_1E56C7E48, (unint64_t *)&unk_1E92AA460, (void (*)(id *, uint64_t))sub_190D128FC);
}

uint64_t sub_190CE1110(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  sub_190C72C5C(0, a2);
  sub_190CE1750(a4, a2);
  uint64_t result = sub_190D41CC8();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190D420B8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x192FD6450](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      char v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

id _sSo27CHSWidgetExtensionContainerC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionG0CSgSSSg_tF_0()
{
  unint64_t v1 = v0;
  unint64_t v2 = *(void *)&v0[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_190D420B8();
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  aBlock[0] = MEMORY[0x1E4FBC860];
  id result = sub_190CDDDC4(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v5 = 0;
  uint64_t v6 = aBlock[0];
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x192FD6450](v5, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_succinctDescriptionWithBundleIDWithoutFullIdentity);
    uint64_t v10 = sub_190D41978();
    uint64_t v12 = v11;

    aBlock[0] = v6;
    unint64_t v14 = *(void *)(v6 + 16);
    unint64_t v13 = *(void *)(v6 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_190CDDDC4((char *)(v13 > 1), v14 + 1, 1);
      uint64_t v6 = aBlock[0];
    }
    ++v5;
    *(void *)(v6 + 16) = v14 + 1;
    uint64_t v15 = v6 + 16 * v14;
    *(void *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v12;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
LABEL_14:
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F718]), sel_initWithObject_, v1);
  if (result)
  {
    id v16 = result;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v1;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_190CE17A0;
    *(void *)(v18 + 24) = v17;
    aBlock[4] = sub_190CD7928;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190CCA8F0;
    aBlock[3] = &block_descriptor_21;
    unint64_t v19 = _Block_copy(aBlock);
    id v20 = v16;
    id v21 = v1;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_appendProem_block_, 0, v19);
    _Block_release(v19);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      sub_190CCF134(v6);
      swift_bridgeObjectRelease();
      uint64_t v23 = (void *)sub_190D41BD8();
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)sub_190D41948();
      objc_msgSend(v20, sel_appendArraySection_withName_skipIfEmpty_, v23, v24, 0);
      swift_release();

      return v20;
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_190CE15E8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_190CE1628()
{
  sub_190CDCC14(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_190CE1630()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CE1640()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190CE1678(uint64_t a1)
{
  return sub_190D3EE60(a1, *(void *)(v1 + 16));
}

uint64_t sub_190CE1680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_190CE16E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_190CE1750(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_190C72C5C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_190CE17A0()
{
  sub_190CDC8DC(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_190CE17A8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_190CE17B8()
{
  unint64_t result = qword_1E92AAAB0;
  if (!qword_1E92AAAB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E92AAAA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAAB0);
  }
  return result;
}

unint64_t sub_190CE1814()
{
  unint64_t result = qword_1E92AA050;
  if (!qword_1E92AA050)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA050);
  }
  return result;
}

uint64_t dispatch thunk of ImageIOPrimitives.makeImageDestination(at:typeIdentifier:numberOfImages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of ImageIOPrimitives.addImage(_:to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ImageIOPrimitives.finalizeImageDestination(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ImageIOPrimitives.makeImageSource(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ImageIOPrimitives.getImage(index:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_190CE1920(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_190D41AF8();
  }
  else {
    return 0;
  }
}

uint64_t static Token.marker.getter()
{
  return 428;
}

uint64_t static Token.separator.getter()
{
  return 14906;
}

uint64_t Token.count.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t Token.description.getter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
  uint64_t v0 = sub_190D418E8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_190CE1A2C@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(a1 + 40);
    uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = *v5;
      if (*v5)
      {
        uint64_t v9 = *(v5 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_190CDD3F4(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v11 = *((void *)v6 + 2);
        unint64_t v10 = *((void *)v6 + 3);
        if (v11 >= v10 >> 1) {
          uint64_t v6 = sub_190CDD3F4((char *)(v10 > 1), v11 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v11 + 1;
        id v7 = &v6[16 * v11];
        *((void *)v7 + 4) = v9;
        *((void *)v7 + 5) = v8;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

ChronoServices::Token __swiftcall Token.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  unint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v4 = v1;
  swift_bridgeObjectRetain();
  result.storage._rawValue = sub_190CE25DC(countAndFlagsBits, (unint64_t)object);
  if (!result.storage._rawValue)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
    result.storage._rawValue = (void *)swift_allocObject();
    uint64_t v8 = (char *)result.storage._rawValue;
    *((_OWORD *)result.storage._rawValue + 1) = xmmword_190D4B270;
    *((void *)result.storage._rawValue + 4) = countAndFlagsBits;
    *((void *)result.storage._rawValue + 5) = object;
    goto LABEL_14;
  }
  uint64_t v6 = result.storage._rawValue;
  if (!__OFADD__(*((void *)result.storage._rawValue + 2), 2))
  {
    sub_190D41A58();
    uint64_t v18 = v6[2];
    if (v18)
    {
      uint64_t v17 = v4;
      uint64_t v7 = 0;
      uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
      while (1)
      {
        sub_190D41A28();
        unint64_t v9 = sub_190D41A58();
        result.storage._rawValue = (void *)sub_190D41A58();
        if ((unint64_t)result.storage._rawValue >> 14 < v9 >> 14) {
          break;
        }
        uint64_t v10 = sub_190D41B18();
        uint64_t v11 = MEMORY[0x192FD5EA0](v10);
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_190CDD3F4(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v15 = *((void *)v8 + 2);
        unint64_t v14 = *((void *)v8 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v8 = sub_190CDD3F4((char *)(v14 > 1), v15 + 1, 1, v8);
        }
        ++v7;
        *((void *)v8 + 2) = v15 + 1;
        id v16 = &v8[16 * v15];
        *((void *)v16 + 4) = v11;
        *((void *)v16 + 5) = v13;
        if (v18 == v7)
        {
          swift_bridgeObjectRelease();
          result.storage._rawValue = (void *)swift_bridgeObjectRelease();
          uint64_t v4 = v17;
          goto LABEL_14;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    result.storage._rawValue = (void *)swift_bridgeObjectRelease();
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
LABEL_14:
    *uint64_t v4 = v8;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t Token.rawValue.getter()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190D4B270;
  uint64_t v3 = sub_190CE1E50();
  uint64_t v4 = sub_190CE2054(v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_190D3E4DC(v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
  uint64_t v7 = sub_190D418E8();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_190CE1E50()
{
  uint64_t v1 = *v0;
  int64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_190CDDD84(0, v2, 0);
  uint64_t v3 = v13;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_190D41A28();
  if ((v4 & 0x8000000000000000) == 0)
  {
    LODWORD(v5) = v4;
    if (!HIDWORD(v4))
    {
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v13 + 16);
      unint64_t v6 = *(void *)(v13 + 24);
      int64_t v8 = v7 + 1;
      if (v7 >= v6 >> 1) {
        goto LABEL_17;
      }
      while (1)
      {
        *(void *)(v3 + 16) = v8;
        unint64_t v6 = v3 + 4 * v7;
        *(_DWORD *)(v6 + 32) = v5;
        int64_t v8 = v2 - 1;
        if (v2 == 1) {
          break;
        }
        unint64_t v7 = v1 + 56;
        while (v8)
        {
          swift_bridgeObjectRetain();
          unint64_t v10 = sub_190D41A28();
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_18;
          }
          int64_t v2 = v10;
          if (HIDWORD(v10)) {
            goto LABEL_18;
          }
          swift_bridgeObjectRelease();
          uint64_t v13 = v3;
          unint64_t v12 = *(void *)(v3 + 16);
          unint64_t v11 = *(void *)(v3 + 24);
          unint64_t v5 = v12 + 1;
          if (v12 >= v11 >> 1) {
            sub_190CDDD84((char *)(v11 > 1), v12 + 1, 1);
          }
          *(void *)(v3 + 16) = v5;
          unint64_t v6 = v3 + 4 * v12;
          *(_DWORD *)(v6 + 32) = v2;
          v7 += 16;
          if (!--v8) {
            goto LABEL_6;
          }
        }
        __break(1u);
LABEL_17:
        sub_190CDDD84((char *)(v6 > 1), v8, 1);
        uint64_t v3 = v13;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
LABEL_18:
  uint64_t result = sub_190D42098();
  __break(1u);
  return result;
}

uint64_t sub_190CE2054(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA1F0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_190D4B450;
  *(_DWORD *)(result + 32) = 428;
  unint64_t v3 = *(void *)(a1 + 16);
  if (HIDWORD(v3)) {
    goto LABEL_15;
  }
  if (v3 >> 11 != 27)
  {
    if (WORD1(v3) > 0x10u)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    uint64_t v4 = result;
    *(_DWORD *)(result + 36) = v3;
    if (!v3)
    {
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA180);
      sub_190CD4928(&qword_1E92AA188, &qword_1E92AA180);
      sub_190D419F8();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      unsigned int v6 = *(_DWORD *)(a1 + 4 * v5 + 32);
      if (v6 >> 11 == 27) {
        break;
      }
      if (v6 > 0x10FFFF)
      {
        __break(1u);
        break;
      }
      unint64_t v7 = *(void *)(v4 + 24);
      if (v5 + 2 >= v7 >> 1)
      {
        uint64_t result = (uint64_t)sub_190CDD4F8((char *)(v7 > 1), v5 + 3, 1, (char *)v4);
        uint64_t v4 = result;
      }
      *(void *)(v4 + 16) = v5 + 3;
      *(_DWORD *)(v4 + 4 * v5++ + 40) = v6;
      if (v3 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

unint64_t Token.subscript.getter(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v1 + 16) > result)
  {
    uint64_t v2 = *(void *)(*(void *)v1 + 16 * result + 32);
    swift_bridgeObjectRetain();
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_190CE2240(uint64_t *a1, uint64_t *a2)
{
  return sub_190D3B374(*a1, *a2);
}

ChronoServices::Token sub_190CE224C@<X0>(Swift::String *a1@<X0>, void *a2@<X8>)
{
  result.storage._rawValue = Token.init(rawValue:)(*a1).storage._rawValue;
  *a2 = v4;
  return result;
}

uint64_t sub_190CE228C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Token.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_190CE22B4()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
  uint64_t v0 = sub_190D418E8();
  swift_bridgeObjectRelease();
  return v0;
}

ChronoServices::Token __swiftcall Token.init(stringLiteral:)(Swift::String stringLiteral)
{
  uint64_t v2 = v1;
  result.storage._rawValue = Token.init(rawValue:)(stringLiteral).storage._rawValue;
  *uint64_t v2 = v4;
  return result;
}

uint64_t sub_190CE2394(void *a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4185D28](*a1, a1[1], a2, a3);
}

unint64_t sub_190CE23A8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    ChronoServices::Token result = sub_190CE2448(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_190CE24B8(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_190CE2448(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    ChronoServices::Token result = sub_190D09AD4(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_190CE24B8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_190D41FD8();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

char *sub_190CE25DC(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_190CE1920(a1, a2);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v22 = 44230;
  uint64_t v8 = MEMORY[0x192FD5EC0](&v22, 2);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (v5 != v8 || v7 != v9)
  {
    char v10 = sub_190D422D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_11;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  unint64_t v11 = sub_190D41A38();
  sub_190CE23A8(v11, a1, a2);
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_49;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v22 = a1;
    uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((a1 & 0x1000000000000000) == 0) {
      sub_190D41FD8();
    }
    swift_bridgeObjectRetain();
  }
  int v13 = sub_190D41FE8();
  swift_bridgeObjectRelease();
  if (v13)
  {
    while (1)
    {
      uint64_t v14 = (a1 >> 59) & 1;
      if ((a2 & 0x1000000000000000) == 0) {
        LOBYTE(v14) = 1;
      }
      uint64_t v15 = 4 << v14;
      unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
      while (1)
      {
        unint64_t v16 = sub_190D41A38();
        if ((v16 & 0xC) == v15 || (v16 & 1) == 0) {
          break;
        }
        if (v16 >> 16 >= v3) {
          goto LABEL_48;
        }
LABEL_33:
        if ((a2 & 0x1000000000000000) != 0)
        {
          int v18 = sub_190D41F58();
        }
        else
        {
          if ((a2 & 0x2000000000000000) != 0)
          {
            uint64_t v22 = a1;
            uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
            swift_bridgeObjectRetain();
          }
          else
          {
            if ((a1 & 0x1000000000000000) == 0) {
              sub_190D41FD8();
            }
            swift_bridgeObjectRetain();
          }
          int v18 = sub_190D41FE8();
          swift_bridgeObjectRelease();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_190CDD5F4(0, *((void *)v12 + 2) + 1, 1, v12);
        }
        unint64_t v20 = *((void *)v12 + 2);
        unint64_t v19 = *((void *)v12 + 3);
        if (v20 >= v19 >> 1) {
          unint64_t v12 = sub_190CDD5F4((char *)(v19 > 1), v20 + 1, 1, v12);
        }
        *((void *)v12 + 2) = v20 + 1;
        *(_DWORD *)&v12[4 * v20 + 32] = v18;
        if (!--v13) {
          goto LABEL_51;
        }
      }
      if ((v16 & 0xC) == v15) {
        unint64_t v16 = sub_190D09AD4(v16, a1, a2);
      }
      if (v16 >> 16 < v3) {
        break;
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      int v13 = sub_190D41F58();
      if (!v13) {
        goto LABEL_50;
      }
    }
    if ((v16 & 1) == 0) {
      sub_190CE24B8(v16, a1, a2);
    }
    goto LABEL_33;
  }
LABEL_50:
  unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_51:
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_190CE2970()
{
  unint64_t result = qword_1E92ABD68;
  if (!qword_1E92ABD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABD68);
  }
  return result;
}

uint64_t sub_190CE29C4()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_190CE29D4()
{
  unint64_t result = qword_1E92ABD70;
  if (!qword_1E92ABD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABD70);
  }
  return result;
}

uint64_t sub_190CE2A28()
{
  return MEMORY[0x1E4FBB230];
}

uint64_t sub_190CE2A34()
{
  return MEMORY[0x1E4FBB228];
}

unint64_t sub_190CE2A44()
{
  unint64_t result = qword_1E92ABD78;
  if (!qword_1E92ABD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABD78);
  }
  return result;
}

uint64_t sub_190CE2A98()
{
  return MEMORY[0x1E4FBBED8];
}

uint64_t sub_190CE2AA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_190CE2AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for Token()
{
  return &type metadata for Token;
}

uint64_t isChronod.getter()
{
  return byte_1E92AA040;
}

uint64_t isChronod.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92AA040 = a1;
  return result;
}

uint64_t (*isChronod.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ChronoLibraryPath.getter@<X0>(uint64_t a1@<X8>)
{
  v20[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_190D415D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)BSCurrentUserDirectory();
  if (!v6) {
    __break(1u);
  }
  uint64_t v7 = v6;
  uint64_t v8 = (void *)sub_190D41978();
  char v10 = v9;

  v20[1] = v8;
  v20[2] = v10;
  sub_190D41A68();
  sub_190D414E8();
  swift_bridgeObjectRelease();
  sub_190D41538();
  swift_beginAccess();
  if (byte_1E92AA040 != 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v11 = objc_msgSend(self, sel_defaultManager);
  unint64_t v12 = (void *)sub_190D414F8();
  v20[0] = 0;
  unsigned int v13 = objc_msgSend(v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v12, 1, 0, v20);

  if (v13)
  {
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    id v15 = v20[0];
    return v14(v5, v2);
  }
  else
  {
    id v17 = v20[0];
    sub_190D414B8();

    swift_willThrow();
    int v18 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v18(a1, v2);
    return ((uint64_t (*)(char *, uint64_t))v18)(v5, v2);
  }
}

uint64_t sub_190CE2E48(uint64_t a1)
{
  return sub_190CE2F74(a1, qword_1E92AA870, 0x736E6F6369, 0xE500000000000000, 35);
}

uint64_t IconsFolderURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190CE3318(&qword_1E92AA818, (uint64_t)qword_1E92AA870, a1);
}

uint64_t IconsFolderURL.setter(uint64_t a1)
{
  return sub_190CE33E4(a1, &qword_1E92AA818, (uint64_t)qword_1E92AA870);
}

uint64_t (*IconsFolderURL.modify())()
{
  if (qword_1E92AA818 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_190D415D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92AA870);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_190CE2F44(uint64_t a1)
{
  return sub_190CE2F74(a1, qword_1E92AA0D0, 0x724165746F6D6572, 0xEE00736576696863, 45);
}

uint64_t sub_190CE2F74(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_190D415D8();
  __swift_allocate_value_buffer(v9, a2);
  uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)a2);
  return sub_190CE2FE4(a3, a4, a5, v10);
}

uint64_t sub_190CE2FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v17[1] = a3;
  v17[2] = a4;
  uint64_t v6 = sub_190D414C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790]();
  id v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_190D415D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790]();
  id v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChronoLibraryPath.getter((uint64_t)v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_190CE35C0((uint64_t)v11);
    uint64_t result = sub_190D420A8();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17[3] = a1;
    v17[4] = a2;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F276A8], v6);
    sub_190CE3620();
    sub_190D415C8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t RemoteArchivesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190CE3318(&qword_1E92AA0F0, (uint64_t)qword_1E92AA0D0, a1);
}

uint64_t sub_190CE3318@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_190D415D8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t RemoteArchivesURL.setter(uint64_t a1)
{
  return sub_190CE33E4(a1, &qword_1E92AA0F0, (uint64_t)qword_1E92AA0D0);
}

uint64_t sub_190CE33E4(uint64_t a1, void *a2, uint64_t a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_190D415D8();
  uint64_t v6 = __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t (*RemoteArchivesURL.modify())()
{
  if (qword_1E92AA0F0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_190D415D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92AA0D0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_190CE35C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_190CE3620()
{
  unint64_t result = qword_1E92AAB18;
  if (!qword_1E92AAB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAB18);
  }
  return result;
}

uint64_t sub_190CE3674()
{
  sub_190CE38AC();
  uint64_t result = sub_190D41E08();
  qword_1E92B30F8 = result;
  return result;
}

uint64_t sub_190CE36D8()
{
  uint64_t v0 = sub_190D41778();
  __swift_allocate_value_buffer(v0, qword_1E92B3100);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92B3100);
  if (qword_1E92AB5B8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1E92B30F8;
  return sub_190D41788();
}

uint64_t sub_190CE3764(uint64_t a1)
{
  return sub_190CE3834(a1, qword_1E92B3030);
}

uint64_t sub_190CE3780(uint64_t a1)
{
  return sub_190CE3834(a1, qword_1E92B30A0);
}

uint64_t sub_190CE37A0(uint64_t a1)
{
  return sub_190CE3834(a1, qword_1E92B3048);
}

uint64_t sub_190CE37C8(uint64_t a1)
{
  return sub_190CE3834(a1, qword_1E92B30C0);
}

uint64_t sub_190CE37F4(uint64_t a1)
{
  return sub_190CE3834(a1, qword_1E92B30E0);
}

uint64_t sub_190CE3810(uint64_t a1)
{
  return sub_190CE3834(a1, qword_1E92B3060);
}

uint64_t sub_190CE3834(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_190D41778();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_190D41768();
}

unint64_t sub_190CE38AC()
{
  unint64_t result = qword_1E92ABD80;
  if (!qword_1E92ABD80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92ABD80);
  }
  return result;
}

id static NSFileManager.audited.getter()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for AuditedFileManager());
  return objc_msgSend(v0, sel_init);
}

id AuditedFileManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t type metadata accessor for AuditedFileManager()
{
  return self;
}

uint64_t sub_190CE3978()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock_urls);
  swift_beginAccess();
  *uint64_t v3 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t sub_190CE3A08()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock_urls);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *(os_unfair_lock_s **)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v5);
  swift_release();
  return v4;
}

uint64_t sub_190CE3A98()
{
  uint64_t v1 = OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_190CE3B74(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  swift_release();
  uint64_t v4 = *(void *)&v0[v1];
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t v6 = &v0[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock_urls];
  swift_beginAccess();
  *(void *)uint64_t v6 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_190CE3B74(char *a1)
{
  v22[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = &a1[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock_urls];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = v3 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t i = v6 & *(void *)(v3 + 56);
  int64_t v20 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (i) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v9 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v9 >= v20) {
    return swift_release();
  }
  uint64_t v10 = *(void *)(v4 + 8 * v9);
  ++v8;
  if (!v10)
  {
    int64_t v8 = v9 + 1;
    if (v9 + 1 >= v20) {
      return swift_release();
    }
    uint64_t v10 = *(void *)(v4 + 8 * v8);
    if (!v10)
    {
      int64_t v8 = v9 + 2;
      if (v9 + 2 >= v20) {
        return swift_release();
      }
      uint64_t v10 = *(void *)(v4 + 8 * v8);
      if (!v10)
      {
        int64_t v11 = v9 + 3;
        if (v11 < v20)
        {
          uint64_t v10 = *(void *)(v4 + 8 * v11);
          if (v10)
          {
            int64_t v8 = v11;
            goto LABEL_20;
          }
          while (1)
          {
            int64_t v8 = v11 + 1;
            if (__OFADD__(v11, 1)) {
              break;
            }
            if (v8 >= v20) {
              return swift_release();
            }
            uint64_t v10 = *(void *)(v4 + 8 * v8);
            ++v11;
            if (v10) {
              goto LABEL_20;
            }
          }
LABEL_28:
          __break(1u);
        }
        return swift_release();
      }
    }
  }
LABEL_20:
  for (uint64_t i = (v10 - 1) & v10; ; i &= i - 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_190D41948();
    unsigned int v13 = objc_msgSend(a1, sel_fileExistsAtPath_, v12);

    if (!v13)
    {
      swift_bridgeObjectRelease();
      if (!i) {
        goto LABEL_7;
      }
      continue;
    }
    uint64_t v14 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
    v22[0] = 0;
    id v15 = (objc_class *)type metadata accessor for AuditedFileManager();
    v21.receiver = a1;
    v21.super_class = v15;
    unsigned int v16 = objc_msgSendSuper2(&v21, sel_removeItemAtPath_error_, v14, v22);

    if (!v16) {
      break;
    }
    id v17 = v22[0];
    if (!i) {
      goto LABEL_7;
    }
LABEL_6:
    ;
  }
  id v19 = v22[0];
  sub_190D414B8();

  swift_willThrow();
  return swift_release();
}

void sub_190CE3E00(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void v19[2] = a1;
  uint64_t v5 = v4;
  v19[1] = a2;
  v20[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_190D415D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  int64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(v5, sel_temporaryDirectory);
  sub_190D41588();

  unsigned int v13 = (void *)sub_190D414F8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  v20[0] = 0;
  id v15 = objc_msgSend(v5, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v13, 1, v20);

  id v16 = v20[0];
  if (v15)
  {
    sub_190D41588();

    sub_190D41508();
    if (a3) {
      sub_190D41518();
    }
    uint64_t v17 = v19[3];
    sub_190CEC960(a4, 0);
    if (v17) {
      v14((char *)a4, v8);
    }
  }
  else
  {
    int v18 = v16;
    sub_190D414B8();

    swift_willThrow();
  }
}

uint64_t sub_190CE4010(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v11 = v5;
  swift_bridgeObjectRetain();
  sub_190CEA328(a3, a4);
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_190CE9CE0(a1, a2, 1, v11, v11, a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  sub_190CEA394(a3, a4);

  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_190CE4238(uint64_t a1, char a2, uint64_t a3)
{
  v6[3] = a1;
  char v7 = a2;
  uint64_t v8 = a3;
  uint64_t v3 = sub_190D415A8();
  sub_190CE7CBC(v3, v4, 1, (void (*)(uint64_t))sub_190CEA3A8, (uint64_t)v6);
  return swift_bridgeObjectRelease();
}

id sub_190CE42BC(void *a1, uint64_t a2, char a3, void *a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  char v7 = (void *)sub_190D414F8();
  if (a4)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_190CEA68C();
    a4 = (void *)sub_190D418A8();
  }
  v12[0] = 0;
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for AuditedFileManager();
  unsigned int v8 = objc_msgSendSuper2(&v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, a3 & 1, a4, v12);

  if (v8) {
    return v12[0];
  }
  id v10 = v12[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t sub_190CE45F8(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  swift_bridgeObjectRetain();
  id v9 = v4;
  swift_bridgeObjectRetain();
  return sub_190CE6520(a1, a2, 1, v9, v9, a1, a2, a3, a4);
}

id sub_190CE4684(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  unsigned int v8 = (void *)sub_190D41948();
  if (a5)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_190CEA68C();
    a5 = (void *)sub_190D418A8();
  }
  v13[0] = 0;
  v12.receiver = a1;
  v12.super_class = (Class)type metadata accessor for AuditedFileManager();
  unsigned int v9 = objc_msgSendSuper2(&v12, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v8, a4 & 1, a5, v13);

  if (v9) {
    return v13[0];
  }
  id v11 = v13[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t sub_190CE48C8(uint64_t a1)
{
  v4[3] = a1;
  uint64_t v1 = sub_190D415A8();
  sub_190CE7CBC(v1, v2, 0, (void (*)(uint64_t))sub_190CEA3CC, (uint64_t)v4);
  return swift_bridgeObjectRelease();
}

id sub_190CE4944(void *a1)
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_190D414F8();
  v6[0] = 0;
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AuditedFileManager();
  LODWORD(a1) = objc_msgSendSuper2(&v5, sel_removeItemAtURL_error_, v2, v6);

  if (a1) {
    return v6[0];
  }
  id v4 = v6[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t sub_190CE4B9C(uint64_t a1, uint64_t a2)
{
  id v5 = v2;
  swift_bridgeObjectRetain();
  return sub_190CE6B00(a1, a2, 0, v5, v5, a1, a2);
}

id sub_190CE4C00(void *a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_190D41948();
  v7[0] = 0;
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for AuditedFileManager();
  unsigned int v3 = objc_msgSendSuper2(&v6, sel_removeItemAtPath_error_, v2, v7);

  if (v3) {
    return v7[0];
  }
  id v5 = v7[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t sub_190CE4D90(uint64_t a1, uint64_t a2)
{
  v5[3] = a2;
  v5[4] = a1;
  uint64_t v2 = sub_190D415A8();
  sub_190CE7CBC(v2, v3, 0, (void (*)(uint64_t))sub_190CEA3E8, (uint64_t)v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CE4E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6[2] = a1;
  v6[3] = a3;
  void v6[4] = a2;
  uint64_t v3 = sub_190D415A8();
  sub_190CE7CBC(v3, v4, 1, (void (*)(uint64_t))sub_190CEA770, (uint64_t)v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CE5094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190CE54D0(a1, a2, a3, a4, (SEL *)&selRef_moveItemAtPath_toPath_error_);
}

uint64_t sub_190CE50C0(uint64_t a1, uint64_t a2)
{
  v5[3] = a2;
  v5[4] = a1;
  uint64_t v2 = sub_190D415A8();
  sub_190CE7CBC(v2, v3, 0, (void (*)(uint64_t))sub_190CEA408, (uint64_t)v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CE5140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6[2] = a1;
  v6[3] = a3;
  void v6[4] = a2;
  uint64_t v3 = sub_190D415A8();
  sub_190CE7CBC(v3, v4, 1, (void (*)(uint64_t))sub_190CEA748, (uint64_t)v6);
  return swift_bridgeObjectRelease();
}

id sub_190CE51D0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  objc_super v6 = (void *)sub_190D414F8();
  char v7 = (void *)sub_190D414F8();
  v11[0] = 0;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for AuditedFileManager();
  LODWORD(a4) = objc_msgSendSuper2(&v10, *a4, v6, v7, v11);

  if (a4) {
    return v11[0];
  }
  id v9 = v11[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t sub_190CE54B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190CE54D0(a1, a2, a3, a4, (SEL *)&selRef_copyItemAtPath_toPath_error_);
}

uint64_t sub_190CE54D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  id v11 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_190CE70A0(a1, a2, 0, v11, v11, a3, a4, a1, a2, a5);
}

id sub_190CE5560(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  unsigned int v8 = (void *)sub_190D41948();
  id v9 = (void *)sub_190D41948();
  v14[0] = 0;
  v13.receiver = a1;
  v13.super_class = (Class)type metadata accessor for AuditedFileManager();
  unsigned int v10 = objc_msgSendSuper2(&v13, *a6, v8, v9, v14);

  if (v10) {
    return v14[0];
  }
  id v12 = v14[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t sub_190CE5664(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v8 = sub_190D41978();
  uint64_t v10 = v9;
  uint64_t v11 = sub_190D41978();
  uint64_t v13 = v12;
  id v14 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CE70A0(v8, v10, 0, v14, v14, v11, v13, v8, v10, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return 1;
}

uint64_t sub_190CE5764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v43 = a2;
  int v40 = a4;
  uint64_t v41 = a5;
  v46[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = sub_190D415D8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v39 - v18;
  int64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (a1 == 99)
  {
    sub_190CEA428(a3, (uint64_t)v12);
    if ((*v20)(v12, 1, v13) == 1)
    {
      uint64_t v21 = (uint64_t)v44;
      id v22 = objc_msgSend(v44, sel_temporaryDirectory);
      sub_190D41588();

      uint64_t v23 = sub_190CE35C0((uint64_t)v12);
    }
    else
    {
      uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
      uint64_t v21 = (uint64_t)v44;
    }
    MEMORY[0x1F4188790](v23);
    *(&v39 - 6) = v21;
    *(&v39 - 5) = 99;
    *(&v39 - 4) = v43;
    *(&v39 - 3) = a3;
    *((unsigned char *)&v39 - 16) = v40 & 1;
    uint64_t v25 = sub_190D415A8();
    uint64_t v26 = v42;
    sub_190CE8230(v25, v27, 1, (void (*)(uint64_t))sub_190CEA4BC, (uint64_t)(&v39 - 8), v41);
    if (v26)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    }
    uint64_t v17 = v19;
  }
  else
  {
    uint64_t v39 = a3;
    sub_190CEA428(a3, (uint64_t)v10);
    if ((*v20)(v10, 1, v13) == 1)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = (void *)sub_190D414F8();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    }
    uint64_t v30 = v43;
    id v29 = v44;
    v46[0] = 0;
    char v31 = (objc_class *)type metadata accessor for AuditedFileManager();
    v45.receiver = v29;
    v45.super_class = v31;
    id v32 = objc_msgSendSuper2(&v45, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a1, v30, v24, 0, v46);

    id v33 = v46[0];
    if (!v32)
    {
      uint64_t v38 = v33;
      sub_190D414B8();

      return swift_willThrow();
    }
    sub_190D41588();

    MEMORY[0x1F4188790](v34);
    *(&v39 - 6) = (uint64_t)v29;
    *(&v39 - 5) = a1;
    uint64_t v35 = v39;
    *(&v39 - 4) = v30;
    *(&v39 - 3) = v35;
    *((unsigned char *)&v39 - 16) = v40 & 1;
    uint64_t v36 = sub_190D415A8();
    sub_190CE8230(v36, v37, 1, (void (*)(uint64_t))sub_190CEA490, (uint64_t)(&v39 - 8), v41);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_190CE5BC4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v29[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CEA428(a4, (uint64_t)v12);
  uint64_t v13 = sub_190D415D8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
  {
    uint64_t v15 = (void *)sub_190D414F8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  }
  v29[0] = 0;
  uint64_t v16 = (objc_class *)type metadata accessor for AuditedFileManager();
  v28.receiver = a1;
  v28.super_class = v16;
  id v17 = objc_msgSendSuper2(&v28, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a2, a3, v15, a5 & 1, v29);

  id v18 = v29[0];
  if (v17)
  {
    sub_190D41588();

    uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
    int64_t v20 = *(os_unfair_lock_s **)(v19 + 16);
    swift_retain();
    os_unfair_lock_lock(v20);
    uint64_t v21 = sub_190D415A8();
    uint64_t v23 = v22;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_190D12E94(&v27, v21, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
    return swift_release();
  }
  else
  {
    uint64_t v25 = v18;
    sub_190D414B8();

    return swift_willThrow();
  }
}

void sub_190CE5E40(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  v21[1] = a6;
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CEA428(a4, (uint64_t)v13);
  uint64_t v14 = sub_190D415D8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v16 = (void *)sub_190D414F8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  v23[0] = 0;
  id v17 = (objc_class *)type metadata accessor for AuditedFileManager();
  v22.receiver = a1;
  v22.super_class = v17;
  id v18 = objc_msgSendSuper2(&v22, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a2, a3, v16, a5 & 1, v23);

  id v19 = v23[0];
  if (v18)
  {
    sub_190D41588();
  }
  else
  {
    int64_t v20 = v19;
    sub_190D414B8();

    swift_willThrow();
  }
}

uint64_t sub_190CE6230()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_190D414C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_190D415D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F276C0], v2);
  swift_bridgeObjectRetain();
  sub_190D415B8();
  uint64_t v13 = (void *)sub_190D414D8();
  uint64_t v14 = sub_190CE99D0(v13[2] != 0, v13[2], v13);
  swift_bridgeObjectRelease();
  id v15 = v1;
  sub_190CE9BE4(v14, v15);
  uint64_t v19 = sub_190CE9844(v16, v17, v18, v15);
  swift_unknownObjectRelease();

  uint64_t v20 = sub_190CE1048(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  return v20;
}

uint64_t sub_190CE64BC()
{
  uint64_t v0 = (void *)sub_190D414D8();
  uint64_t v1 = sub_190CE99D0(v0[2] != 0, v0[2], v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_190CE6520(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5, uint64_t a6, uint64_t a7, int a8, void *a9)
{
  uint64_t v72 = a6;
  LODWORD(v73) = a8;
  id v76 = a5;
  id v70 = a4;
  int v69 = a3;
  uint64_t v74 = a7;
  v75 = a9;
  uint64_t v11 = sub_190D414C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_190D415D8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v68 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v58 - v22;
  id v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v58 = v19 + 56;
  v61(v17, 1, 1, v18);
  uint64_t v24 = *(void (**)(void))(v12 + 104);
  unsigned int v60 = *MEMORY[0x1E4F276C0];
  uint64_t v65 = v11;
  uint64_t v63 = v12 + 104;
  uint64_t v59 = (void (*)(char *, void, uint64_t))v24;
  v24(v14);
  swift_bridgeObjectRetain();
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v64 = v14;
  id v62 = v17;
  sub_190D415B8();
  uint64_t v25 = (void *)sub_190D414D8();
  uint64_t v26 = v71;
  uint64_t v27 = sub_190CE99D0(v25[2] != 0, v25[2], v25);
  swift_bridgeObjectRelease();
  id v28 = v70;
  sub_190CE9BE4(v27, v28);
  uint64_t v32 = sub_190CE9844(v29, v30, v31, v28);
  id v33 = v76;
  swift_unknownObjectRelease();

  uint64_t v34 = sub_190CE1048(v32);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v36 = v23;
  uint64_t v37 = v18;
  uint64_t v38 = v18;
  uint64_t v40 = v74;
  uint64_t v39 = v75;
  uint64_t v71 = v19 + 8;
  v35(v36, v38);
  sub_190CE4684(v33, v72, v40, v73, v39);
  if (v26)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = v34;
    uint64_t v41 = v37;
    v61(v62, 1, 1, v37);
    v59(v64, v60, v65);
    swift_bridgeObjectRetain();
    uint64_t v42 = v68;
    sub_190D415B8();
    uint64_t v43 = (void *)sub_190D414D8();
    uint64_t v44 = sub_190CE99D0(v43[2] != 0, v43[2], v43);
    swift_bridgeObjectRelease();
    objc_super v45 = (char *)v28;
    sub_190CE9BE4(v44, v45);
    uint64_t v49 = sub_190CE9844(v46, v47, v48, v45);
    swift_unknownObjectRelease();

    uint64_t v50 = sub_190CE1048(v49);
    swift_bridgeObjectRelease();
    v35(v42, v41);
    uint64_t v51 = *(void *)&v45[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
    uint64_t v52 = *(os_unfair_lock_s **)(v51 + 16);
    swift_retain();
    os_unfair_lock_lock(v52);
    if (v69)
    {
      uint64_t v53 = v73;
      if (*(void *)(v50 + 16) <= *(void *)(v73 + 16) >> 3)
      {
        uint64_t v77 = v73;
        swift_bridgeObjectRetain();
        sub_190CE8968(v50);
        uint64_t v54 = v77;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_190CE8B10(v50, v53);
      }
      swift_beginAccess();
      sub_190D2CD78(v54);
      swift_endAccess();
    }
    else
    {
      uint64_t v55 = v73;
      if (*(void *)(v73 + 16) <= *(void *)(v50 + 16) >> 3)
      {
        uint64_t v77 = v50;
        swift_bridgeObjectRetain();
        sub_190CE8968(v55);
        uint64_t v56 = v77;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_190CE8B10(v55, v50);
      }
      swift_beginAccess();
      sub_190CE8968(v56);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v51 + 16));
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CE6B00(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v61 = a4;
  uint64_t v64 = a1;
  uint64_t v65 = a7;
  uint64_t v62 = a6;
  uint64_t v63 = a5;
  int v59 = a3;
  uint64_t v8 = sub_190D414C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_190D415D8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v58 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v49 - v19;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v52(v14, 1, 1, v15);
  uint64_t v21 = *(void (**)(void))(v9 + 104);
  unsigned int v51 = *MEMORY[0x1E4F276C0];
  uint64_t v56 = v8;
  uint64_t v54 = v9 + 104;
  uint64_t v50 = (void (*)(char *, void, uint64_t))v21;
  v21(v11);
  swift_bridgeObjectRetain();
  uint64_t v57 = a2;
  uint64_t v55 = v11;
  uint64_t v53 = v14;
  sub_190D415B8();
  uint64_t v22 = (void *)sub_190D414D8();
  uint64_t v23 = v60;
  uint64_t v24 = sub_190CE99D0(v22[2] != 0, v22[2], v22);
  swift_bridgeObjectRelease();
  id v25 = v61;
  sub_190CE9BE4(v24, v25);
  uint64_t v29 = sub_190CE9844(v26, v27, v28, v25);
  swift_unknownObjectRelease();

  uint64_t v30 = sub_190CE1048(v29);
  swift_bridgeObjectRelease();
  unint64_t v31 = v63;
  unsigned int v60 = *(void (**)(void, void))(v16 + 8);
  id v61 = (id)(v16 + 8);
  v60(v20, v15);
  sub_190CE4C00(v31);
  if (v23)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v62 = v30;
    v52(v53, 1, 1, v15);
    v50(v55, v51, v56);
    swift_bridgeObjectRetain();
    id v33 = v58;
    sub_190D415B8();
    uint64_t v34 = (void *)sub_190D414D8();
    uint64_t v35 = sub_190CE99D0(v34[2] != 0, v34[2], v34);
    swift_bridgeObjectRelease();
    uint64_t v36 = (char *)v25;
    sub_190CE9BE4(v35, v36);
    uint64_t v40 = sub_190CE9844(v37, v38, v39, v36);
    swift_unknownObjectRelease();

    uint64_t v41 = sub_190CE1048(v40);
    swift_bridgeObjectRelease();
    v60(v33, v15);
    uint64_t v42 = *(void *)&v36[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
    uint64_t v43 = *(os_unfair_lock_s **)(v42 + 16);
    swift_retain();
    os_unfair_lock_lock(v43);
    if (v59)
    {
      uint64_t v44 = v62;
      if (*(void *)(v41 + 16) <= *(void *)(v62 + 16) >> 3)
      {
        uint64_t v66 = v62;
        swift_bridgeObjectRetain();
        sub_190CE8968(v41);
        uint64_t v45 = v66;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_190CE8B10(v41, v44);
      }
      swift_beginAccess();
      sub_190D2CD78(v45);
      swift_endAccess();
    }
    else
    {
      uint64_t v46 = v62;
      if (*(void *)(v62 + 16) <= *(void *)(v41 + 16) >> 3)
      {
        uint64_t v66 = v41;
        swift_bridgeObjectRetain();
        sub_190CE8968(v46);
        uint64_t v47 = v66;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_190CE8B10(v46, v41);
      }
      swift_beginAccess();
      sub_190CE8968(v47);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    unint64_t v48 = v63;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 16));
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_190CE70A0(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  id v71 = a4;
  uint64_t v74 = a6;
  id v75 = (id)a8;
  int v69 = a3;
  uint64_t v76 = a9;
  uint64_t v77 = a7;
  id v72 = a5;
  uint64_t v73 = a10;
  uint64_t v12 = sub_190D414C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void *)sub_190D415D8();
  uint64_t v20 = *(v19 - 1);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v68 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v57 - v23;
  id v25 = *(void (**)(char *, uint64_t, uint64_t, id))(v20 + 56);
  uint64_t v61 = v20 + 56;
  unsigned int v60 = v25;
  v25(v18, 1, 1, v19);
  uint64_t v26 = *(void (**)(void))(v13 + 104);
  unsigned int v59 = *MEMORY[0x1E4F276C0];
  uint64_t v65 = v12;
  uint64_t v63 = v13 + 104;
  uint64_t v58 = (void (*)(char *, void, uint64_t))v26;
  v26(v15);
  uint64_t v27 = v76;
  swift_bridgeObjectRetain();
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v64 = v15;
  uint64_t v62 = v18;
  sub_190D415B8();
  unint64_t v28 = (void *)sub_190D414D8();
  uint64_t v29 = v70;
  uint64_t v30 = sub_190CE99D0(v28[2] != 0, v28[2], v28);
  swift_bridgeObjectRelease();
  id v31 = v71;
  sub_190CE9BE4(v30, v31);
  uint64_t v35 = sub_190CE9844(v32, v33, v34, v31);
  swift_unknownObjectRelease();

  uint64_t v36 = sub_190CE1048(v35);
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void (**)(char *, void *))(v20 + 8);
  uint64_t v38 = v24;
  uint64_t v39 = v77;
  uint64_t v70 = v20 + 8;
  id v71 = v19;
  v37(v38, v19);
  id v40 = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CE76CC(v74, v39, 1, v40, v40, (uint64_t)v75, v27, v74, v39, v73);
  if (v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    id v75 = v40;
    uint64_t v42 = v71;
    v60(v62, 1, 1, v71);
    v58(v64, v59, v65);
    swift_bridgeObjectRetain();
    uint64_t v43 = v68;
    sub_190D415B8();
    uint64_t v44 = (void *)sub_190D414D8();
    uint64_t v45 = sub_190CE99D0(v44[2] != 0, v44[2], v44);
    swift_bridgeObjectRelease();
    uint64_t v46 = (char *)v31;
    sub_190CE9BE4(v45, v46);
    uint64_t v50 = sub_190CE9844(v47, v48, v49, v46);
    swift_unknownObjectRelease();

    uint64_t v51 = sub_190CE1048(v50);
    swift_bridgeObjectRelease();
    v37(v43, v42);
    uint64_t v52 = *(void *)&v46[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
    uint64_t v53 = *(os_unfair_lock_s **)(v52 + 16);
    swift_retain();
    os_unfair_lock_lock(v53);
    if (v69)
    {
      uint64_t v54 = v75;
      if (*(void *)(v51 + 16) <= *(void *)(v36 + 16) >> 3)
      {
        uint64_t v78 = v36;
        swift_bridgeObjectRetain();
        sub_190CE8968(v51);
        uint64_t v55 = v78;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_190CE8B10(v51, v36);
      }
      swift_beginAccess();
      sub_190D2CD78(v55);
      swift_endAccess();
    }
    else
    {
      if (*(void *)(v36 + 16) <= *(void *)(v51 + 16) >> 3)
      {
        uint64_t v78 = v51;
        swift_bridgeObjectRetain();
        sub_190CE8968(v36);
        uint64_t v56 = v78;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_190CE8B10(v36, v51);
      }
      swift_beginAccess();
      sub_190CE8968(v56);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v54 = v75;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 16));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_190CE76CC(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  id v72 = a4;
  uint64_t v75 = a6;
  uint64_t v76 = a8;
  uint64_t v78 = a5;
  uint64_t v79 = a7;
  int v71 = a3;
  uint64_t v77 = a9;
  uint64_t v74 = a10;
  uint64_t v12 = sub_190D414C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_190D415D8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v70 = (char *)v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v60 - v23;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v60[1] = v20 + 56;
  v63(v18, 1, 1, v19);
  id v25 = *(void (**)(void))(v13 + 104);
  unsigned int v62 = *MEMORY[0x1E4F276C0];
  uint64_t v67 = v12;
  uint64_t v65 = v13 + 104;
  uint64_t v61 = (void (*)(char *, void, uint64_t))v25;
  v25(v15);
  swift_bridgeObjectRetain();
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v66 = v15;
  uint64_t v64 = v18;
  sub_190D415B8();
  uint64_t v26 = (void *)sub_190D414D8();
  uint64_t v27 = v73;
  uint64_t v28 = sub_190CE99D0(v26[2] != 0, v26[2], v26);
  swift_bridgeObjectRelease();
  id v29 = v72;
  sub_190CE9BE4(v28, v29);
  uint64_t v33 = sub_190CE9844(v30, v31, v32, v29);
  uint64_t v34 = v79;
  swift_unknownObjectRelease();

  uint64_t v35 = sub_190CE1048(v33);
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v37 = v24;
  uint64_t v38 = v19;
  uint64_t v39 = v19;
  uint64_t v41 = v77;
  id v40 = v78;
  uint64_t v73 = v20 + 8;
  v36(v37, v39);
  sub_190CE5560(v40, v75, v34, v76, v41, v74);
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v76 = v35;
    uint64_t v43 = v38;
    v63(v64, 1, 1, v38);
    v61(v66, v62, v67);
    swift_bridgeObjectRetain();
    uint64_t v44 = v70;
    sub_190D415B8();
    uint64_t v45 = (void *)sub_190D414D8();
    uint64_t v46 = sub_190CE99D0(v45[2] != 0, v45[2], v45);
    swift_bridgeObjectRelease();
    uint64_t v47 = (char *)v29;
    sub_190CE9BE4(v46, v47);
    uint64_t v51 = sub_190CE9844(v48, v49, v50, v47);
    swift_unknownObjectRelease();

    uint64_t v52 = sub_190CE1048(v51);
    swift_bridgeObjectRelease();
    v36(v44, v43);
    uint64_t v53 = *(void *)&v47[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
    uint64_t v54 = *(os_unfair_lock_s **)(v53 + 16);
    swift_retain();
    os_unfair_lock_lock(v54);
    if (v71)
    {
      uint64_t v55 = v76;
      if (*(void *)(v52 + 16) <= *(void *)(v76 + 16) >> 3)
      {
        uint64_t v80 = v76;
        swift_bridgeObjectRetain();
        sub_190CE8968(v52);
        uint64_t v56 = v80;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_190CE8B10(v52, v55);
      }
      swift_beginAccess();
      sub_190D2CD78(v56);
      swift_endAccess();
    }
    else
    {
      uint64_t v57 = v76;
      if (*(void *)(v76 + 16) <= *(void *)(v52 + 16) >> 3)
      {
        uint64_t v80 = v52;
        swift_bridgeObjectRetain();
        sub_190CE8968(v57);
        uint64_t v58 = v80;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_190CE8B10(v57, v52);
      }
      swift_beginAccess();
      sub_190CE8968(v58);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    unsigned int v59 = v78;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 16));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_190CE7CBC(uint64_t a1, uint64_t a2, int a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v59 = a5;
  unsigned int v60 = a4;
  int v56 = a3;
  uint64_t v7 = sub_190D414C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_190D415D8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v55 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v46 - v18;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v46[1] = v15 + 56;
  v49(v13, 1, 1, v14);
  uint64_t v20 = *(void (**)(void))(v8 + 104);
  unsigned int v48 = *MEMORY[0x1E4F276C0];
  uint64_t v52 = v7;
  uint64_t v50 = v8 + 104;
  uint64_t v47 = (void (*)(char *, void, uint64_t))v20;
  v20(v10);
  swift_bridgeObjectRetain();
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v51 = v10;
  sub_190D415B8();
  uint64_t v21 = (void *)sub_190D414D8();
  uint64_t v22 = v57;
  uint64_t v23 = sub_190CE99D0(v21[2] != 0, v21[2], v21);
  swift_bridgeObjectRelease();
  id v24 = v58;
  sub_190CE9BE4(v23, v24);
  uint64_t v28 = sub_190CE9844(v25, v26, v27, v24);
  swift_unknownObjectRelease();

  uint64_t v29 = sub_190CE1048(v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  id v58 = (id)(v15 + 8);
  uint64_t v31 = v30(v19, v14);
  v60(v31);
  if (v22) {
    return swift_bridgeObjectRelease();
  }
  v49(v13, 1, 1, v14);
  v47(v51, v48, v52);
  swift_bridgeObjectRetain();
  uint64_t v33 = v55;
  sub_190D415B8();
  uint64_t v34 = (void *)sub_190D414D8();
  uint64_t v35 = sub_190CE99D0(v34[2] != 0, v34[2], v34);
  swift_bridgeObjectRelease();
  uint64_t v36 = (char *)v24;
  sub_190CE9BE4(v35, v36);
  uint64_t v40 = sub_190CE9844(v37, v38, v39, v36);
  swift_unknownObjectRelease();

  uint64_t v41 = sub_190CE1048(v40);
  swift_bridgeObjectRelease();
  v30(v33, v14);
  uint64_t v42 = *(void *)&v36[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
  uint64_t v43 = *(os_unfair_lock_s **)(v42 + 16);
  swift_retain();
  os_unfair_lock_lock(v43);
  if (v56)
  {
    if (*(void *)(v41 + 16) <= *(void *)(v29 + 16) >> 3)
    {
      uint64_t v61 = v29;
      swift_bridgeObjectRetain();
      sub_190CE8968(v41);
      uint64_t v44 = v61;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_190CE8B10(v41, v29);
    }
    swift_beginAccess();
    sub_190D2CD78(v44);
    swift_endAccess();
  }
  else
  {
    if (*(void *)(v29 + 16) <= *(void *)(v41 + 16) >> 3)
    {
      uint64_t v61 = v41;
      swift_bridgeObjectRetain();
      sub_190CE8968(v29);
      uint64_t v45 = v61;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_190CE8B10(v29, v41);
    }
    swift_beginAccess();
    sub_190CE8968(v45);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_190CE8230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v61 = a5;
  unsigned int v62 = a4;
  int v57 = a3;
  uint64_t v60 = a6;
  uint64_t v8 = sub_190D414C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_190D415D8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  int v56 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v47 - v19;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v47[1] = v16 + 56;
  v50(v14, 1, 1, v15);
  uint64_t v21 = *(void (**)(void))(v9 + 104);
  unsigned int v49 = *MEMORY[0x1E4F276C0];
  uint64_t v53 = v8;
  uint64_t v51 = v9 + 104;
  unsigned int v48 = (void (*)(char *, void, uint64_t))v21;
  v21(v11);
  swift_bridgeObjectRetain();
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v52 = v11;
  sub_190D415B8();
  uint64_t v22 = (void *)sub_190D414D8();
  uint64_t v23 = v58;
  uint64_t v24 = sub_190CE99D0(v22[2] != 0, v22[2], v22);
  swift_bridgeObjectRelease();
  id v25 = v59;
  sub_190CE9BE4(v24, v25);
  uint64_t v29 = sub_190CE9844(v26, v27, v28, v25);
  swift_unknownObjectRelease();

  uint64_t v30 = sub_190CE1048(v29);
  swift_bridgeObjectRelease();
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  id v59 = (id)(v16 + 8);
  uint64_t v32 = v31(v20, v15);
  v62(v32);
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  v50(v14, 1, 1, v15);
  v48(v52, v49, v53);
  swift_bridgeObjectRetain();
  uint64_t v34 = v56;
  sub_190D415B8();
  uint64_t v35 = (void *)sub_190D414D8();
  uint64_t v36 = sub_190CE99D0(v35[2] != 0, v35[2], v35);
  swift_bridgeObjectRelease();
  uint64_t v37 = (char *)v25;
  sub_190CE9BE4(v36, v37);
  uint64_t v41 = sub_190CE9844(v38, v39, v40, v37);
  swift_unknownObjectRelease();

  uint64_t v42 = sub_190CE1048(v41);
  swift_bridgeObjectRelease();
  v31(v34, v15);
  uint64_t v43 = *(void *)&v37[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
  uint64_t v44 = *(os_unfair_lock_s **)(v43 + 16);
  swift_retain();
  os_unfair_lock_lock(v44);
  if (v57)
  {
    if (*(void *)(v42 + 16) <= *(void *)(v30 + 16) >> 3)
    {
      uint64_t v63 = v30;
      swift_bridgeObjectRetain();
      sub_190CE8968(v42);
      uint64_t v45 = v63;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_190CE8B10(v42, v30);
    }
    swift_beginAccess();
    sub_190D2CD78(v45);
    swift_endAccess();
  }
  else
  {
    if (*(void *)(v30 + 16) <= *(void *)(v42 + 16) >> 3)
    {
      uint64_t v63 = v42;
      swift_bridgeObjectRetain();
      sub_190CE8968(v30);
      uint64_t v46 = v63;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_190CE8B10(v30, v42);
    }
    swift_beginAccess();
    sub_190CE8968(v46);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

id AuditedFileManager.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock;
  type metadata accessor for UnfairLock();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v0;
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  *uint64_t v4 = 0;
  *(void *)(v2 + 16) = v4;
  *(void *)&v0[v1] = v2;
  *(void *)&v3[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock_urls] = MEMORY[0x1E4FBC870];

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AuditedFileManager();
  return objc_msgSendSuper2(&v6, sel_init);
}

id AuditedFileManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuditedFileManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190CE8968(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_190CE8F80(v12, v13);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_190CE8B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v36 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v34 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v35 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v35) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v36 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v35) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v36 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v35) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v36 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v35) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v36 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v35)
                {
LABEL_47:
                  sub_190CEA740();
                  return v2;
                }
                unint64_t v13 = *(void *)(v36 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v35) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v36 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_190D42398();
      swift_bridgeObjectRetain();
      sub_190D41A18();
      uint64_t v19 = sub_190D423E8();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_190D422D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = a1;
      uint64_t v38 = v36;
      uint64_t v39 = v34;
      int64_t v40 = v9;
      unint64_t v41 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_190D422D8() & 1) == 0);
      uint64_t v37 = a1;
      uint64_t v38 = v36;
      uint64_t v39 = v34;
      int64_t v40 = v9;
      unint64_t v41 = v7;
      swift_bridgeObjectRelease();
    }
    char v28 = *(unsigned char *)(v2 + 32);
    unint64_t v29 = (unint64_t)((1 << v28) + 63) >> 6;
    size_t v30 = 8 * v29;
    if ((v28 & 0x3Fu) < 0xE || swift_stdlib_isStackAllocationSafe())
    {
      MEMORY[0x1F4188790]();
      memcpy((char *)&v34 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v30);
      uint64_t v31 = sub_190CE92D8((uint64_t)&v34 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0), v29, v2, v21, &v37);
      swift_release();
      sub_190CEA740();
    }
    else
    {
      uint64_t v32 = (void *)swift_slowAlloc();
      memcpy(v32, (const void *)(v2 + 56), v30);
      uint64_t v31 = sub_190CE92D8((uint64_t)v32, v29, v2, v21, &v37);
      swift_release();
      sub_190CEA740();
      MEMORY[0x192FD7910](v32, -1, -1);
    }
    return v31;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_190CE8F80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_190D42398();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  uint64_t v6 = sub_190D423E8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_190D422D8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_190D422D8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_190D155E0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_190CE9110(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_190CE9110(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_190D41E98();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_190D42398();
        swift_bridgeObjectRetain();
        sub_190D41A18();
        uint64_t v10 = sub_190D423E8();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_190CE92D8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_190CE95D0(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_190D42398();
        swift_bridgeObjectRetain();
        sub_190D41A18();
        uint64_t v22 = sub_190D423E8();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        char v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_190D422D8() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_190D422D8() & 1) != 0)
          {
            unint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        unint64_t result = swift_bridgeObjectRelease();
      }
      unint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_190CE95D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_34:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6C0);
  uint64_t result = sub_190D41F38();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_37;
    }
    if (v14 >= v30) {
      goto LABEL_34;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_34;
      }
      unint64_t v15 = a1[v10];
      if (!v15) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_22:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_190D42398();
    swift_bridgeObjectRetain();
    sub_190D41A18();
    uint64_t result = sub_190D423E8();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    char v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *char v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_34;
    }
  }
  uint64_t v16 = v14 + 2;
  if (v16 >= v30) {
    goto LABEL_34;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_34;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_190CE9844(uint64_t result, uint64_t a2, unint64_t a3, void *a4)
{
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 == a2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = result + 8;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v7 = a2;
  uint64_t v18 = result + 8;
  uint64_t v20 = a2;
  do
  {
    uint64_t v19 = v5;
    uint64_t v8 = (uint64_t *)(v6 + 16 * v7);
    for (uint64_t i = v7; ; ++i)
    {
      if (v7 < a2 || i >= v4)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = *(v8 - 1);
      uint64_t v10 = *v8;
      uint64_t v12 = i + 1;
      swift_bridgeObjectRetain();
      unint64_t v13 = (void *)sub_190D41948();
      unsigned __int8 v14 = objc_msgSend(a4, sel_fileExistsAtPath_, v13);

      if ((v14 & 1) == 0) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      v8 += 2;
      a2 = v20;
      if (v4 == v12) {
        return v19;
      }
    }
    uint64_t v5 = v19;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_190CDDDC4(0, *(void *)(v19 + 16) + 1, 1);
      uint64_t v5 = v19;
    }
    unint64_t v16 = *(void *)(v5 + 16);
    unint64_t v15 = *(void *)(v5 + 24);
    if (v16 >= v15 >> 1)
    {
      uint64_t result = (uint64_t)sub_190CDDDC4((char *)(v15 > 1), v16 + 1, 1);
      uint64_t v5 = v19;
    }
    *(void *)(v5 + 16) = v16 + 1;
    uint64_t v17 = v5 + 16 * v16;
    *(void *)(v17 + 32) = v11;
    *(void *)(v17 + 40) = v10;
    uint64_t v7 = i + 1;
    uint64_t v6 = v18;
    a2 = v20;
  }
  while (v4 - 1 != i);
  return v5;
}

uint64_t sub_190CE99D0(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v16 = result;
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return v4;
  }
  uint64_t v6 = a2;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = (uint64_t)sub_190CDDDC4(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0) {
    goto LABEL_22;
  }
  if (v6 < v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v15 = a3[2];
  if (v15)
  {
    uint64_t v4 = v17;
    uint64_t v13 = a3[4];
    uint64_t v14 = v6;
    uint64_t v7 = a3[5];
    uint64_t v8 = v16;
    uint64_t v9 = 2 * v16 + 3;
    while (v6 != v8)
    {
      if (v16 < 1) {
        goto LABEL_17;
      }
      if (v8 == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_18;
      }
      if (v15 < ++v8) {
        goto LABEL_19;
      }
      if (v16 + 1 < 0) {
        goto LABEL_20;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABD98);
      sub_190CEA6E4();
      sub_190D418E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_190D41A68();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v11 = *(void *)(v17 + 16);
      unint64_t v10 = *(void *)(v17 + 24);
      if (v11 >= v10 >> 1) {
        uint64_t result = (uint64_t)sub_190CDDDC4((char *)(v10 > 1), v11 + 1, 1);
      }
      *(void *)(v17 + 16) = v11 + 1;
      uint64_t v12 = v17 + 16 * v11;
      *(void *)(v12 + 32) = v13;
      *(void *)(v12 + 40) = v7;
      v9 += 2;
      uint64_t v6 = v14;
      if (v14 == v8) {
        return v4;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_190CE9BE4(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v5 = 0;
    uint64_t v6 = a1 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_190D41948();
      unsigned __int8 v8 = objc_msgSend(a2, sel_fileExistsAtPath_, v7);
      swift_bridgeObjectRelease();

      if (v8) {
        break;
      }
      v6 += 16;
      if (v3 == ++v5)
      {
        unint64_t v5 = v3;
LABEL_8:
        unint64_t v9 = *(void *)(a1 + 16);
        goto LABEL_9;
      }
    }
    if (v3 >= v5) {
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v9 = 0;
  unint64_t v5 = 0;
LABEL_9:
  if (v9 < v5 || v9 < v3) {
LABEL_13:
  }
    __break(1u);
}

uint64_t sub_190CE9CE0(uint64_t a1, uint64_t a2, int a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  v57[0] = a8;
  uint64_t v60 = a7;
  uint64_t v59 = a6;
  id v75 = a4;
  int v76 = a3;
  uint64_t v65 = a10;
  uint64_t v66 = a5;
  unint64_t v58 = a9;
  uint64_t v12 = sub_190D414C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_190D415D8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v72 = (char *)v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  char v24 = (char *)v57 - v23;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v64 = v20 + 56;
  v63(v18, 1, 1, v19);
  unint64_t v25 = *(void (**)(void))(v13 + 104);
  unsigned int v62 = *MEMORY[0x1E4F276C0];
  uint64_t v69 = v12;
  uint64_t v67 = v13 + 104;
  uint64_t v61 = (void (*)(char *, void, uint64_t))v25;
  v25(v15);
  swift_bridgeObjectRetain();
  uint64_t v70 = a1;
  uint64_t v71 = a2;
  uint64_t v68 = v15;
  sub_190D415B8();
  BOOL v26 = (void *)sub_190D414D8();
  uint64_t v27 = v74;
  uint64_t v28 = sub_190CE99D0(v26[2] != 0, v26[2], v26);
  swift_bridgeObjectRelease();
  id v29 = v75;
  sub_190CE9BE4(v28, v29);
  uint64_t v33 = sub_190CE9844(v30, v31, v32, v29);
  v57[1] = v27;
  swift_unknownObjectRelease();

  id v75 = (id)sub_190CE1048(v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v73 = v20 + 8;
  uint64_t v74 = v19;
  BOOL v35 = v34;
  v34(v24, v19);
  int64_t v36 = (void *)sub_190D41948();
  uint64_t v37 = 0;
  if (v58 >> 60 != 15) {
    uint64_t v37 = (void *)sub_190D41628();
  }
  if (v65)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_190CEA68C();
    uint64_t v38 = (void *)sub_190D418A8();
  }
  else
  {
    uint64_t v38 = 0;
  }
  uint64_t v39 = (objc_class *)type metadata accessor for AuditedFileManager();
  v78.receiver = v66;
  v78.super_class = v39;
  LODWORD(v66) = objc_msgSendSuper2(&v78, sel_createFileAtPath_contents_attributes_, v36, v37, v38, v57[0]);

  uint64_t v40 = v74;
  v63(v18, 1, 1, v74);
  v61(v68, v62, v69);
  swift_bridgeObjectRetain();
  unint64_t v41 = v72;
  sub_190D415B8();
  uint64_t v42 = (void *)sub_190D414D8();
  uint64_t v43 = sub_190CE99D0(v42[2] != 0, v42[2], v42);
  swift_bridgeObjectRelease();
  uint64_t v44 = (char *)v29;
  sub_190CE9BE4(v43, v44);
  uint64_t v48 = sub_190CE9844(v45, v46, v47, v44);
  swift_unknownObjectRelease();

  uint64_t v49 = sub_190CE1048(v48);
  swift_bridgeObjectRelease();
  v35(v41, v40);
  uint64_t v50 = *(void *)&v44[OBJC_IVAR____TtC14ChronoServices18AuditedFileManager__lock];
  uint64_t v51 = *(os_unfair_lock_s **)(v50 + 16);
  swift_retain();
  os_unfair_lock_lock(v51);
  if (v76)
  {
    uint64_t v52 = (uint64_t)v75;
    if (*(void *)(v49 + 16) <= *((void *)v75 + 2) >> 3)
    {
      uint64_t v77 = (uint64_t)v75;
      swift_bridgeObjectRetain();
      sub_190CE8968(v49);
      uint64_t v53 = v77;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_190CE8B10(v49, v52);
    }
    swift_beginAccess();
    sub_190D2CD78(v53);
    swift_endAccess();
  }
  else
  {
    uint64_t v54 = (uint64_t)v75;
    if (*((void *)v75 + 2) <= *(void *)(v49 + 16) >> 3)
    {
      uint64_t v77 = v49;
      swift_bridgeObjectRetain();
      sub_190CE8968(v54);
      uint64_t v55 = v77;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_190CE8B10(v54, v49);
    }
    swift_beginAccess();
    sub_190CE8968(v55);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v50 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v66;
}

uint64_t sub_190CEA328(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_190CEA33C(a1, a2);
  }
  return a1;
}

uint64_t sub_190CEA33C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_190CEA394(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_190CD55F0(a1, a2);
  }
  return a1;
}

id sub_190CEA3A8()
{
  return sub_190CE42BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40));
}

id sub_190CEA3CC()
{
  return sub_190CE4944(*(void **)(v0 + 16));
}

uint64_t sub_190CEA3E8()
{
  return sub_190CE4E10(v0[2], v0[3], v0[4]);
}

uint64_t sub_190CEA408()
{
  return sub_190CE5140(v0[2], v0[3], v0[4]);
}

uint64_t sub_190CEA428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190CEA490()
{
  return sub_190CEA4E8((uint64_t (*)(void, void, void, void, void))sub_190CE5E40);
}

uint64_t sub_190CEA4BC()
{
  return sub_190CEA4E8((uint64_t (*)(void, void, void, void, void))sub_190CE5BC4);
}

uint64_t sub_190CEA4E8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t method lookup function for AuditedFileManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AuditedFileManager);
}

uint64_t dispatch thunk of AuditedFileManager.reset()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AuditedFileManager.urlsCreated.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AuditedFileManager.deleteAllCreatedPaths()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AuditedFileManager.createTemporaryFile(named:extension:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AuditedFileManager.nonExistantParents(ofPath:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AuditedFileManager.recursivelyEnumeratedParents(of:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

unint64_t sub_190CEA68C()
{
  unint64_t result = qword_1E92AB708;
  if (!qword_1E92AB708)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AB708);
  }
  return result;
}

unint64_t sub_190CEA6E4()
{
  unint64_t result = qword_1E92ABDA0;
  if (!qword_1E92ABDA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92ABD98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABDA0);
  }
  return result;
}

uint64_t sub_190CEA740()
{
  return swift_release();
}

id sub_190CEA748()
{
  return sub_190CE51D0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (SEL *)&selRef_copyItemAtURL_toURL_error_);
}

id sub_190CEA770()
{
  return sub_190CE51D0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (SEL *)&selRef_moveItemAtURL_toURL_error_);
}

id sub_190CEA798()
{
  return sub_190CEA3A8();
}

id sub_190CEA7B0()
{
  return sub_190CEA3CC();
}

uint64_t sub_190CEA7C8()
{
  return sub_190CEA408();
}

uint64_t sub_190CEA7E0()
{
  return sub_190CEA3E8();
}

uint64_t CHSFrozenIntent.stableHash.getter()
{
  return *(void *)v0;
}

uint64_t CHSFrozenIntent.init(_:_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a5;
  a6[1] = result;
  a6[2] = a2;
  a6[3] = a3;
  a6[4] = a4;
  return result;
}

uint64_t CHSFrozenIntent.init(reference:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_stableHash);
  uint64_t v5 = sub_190CEA9B0();
  if (v6 >> 60 == 15)
  {
    id v9 = objc_msgSend(a1, sel_intent);
    id v14 = sub_190CEAAAC();
    unint64_t v16 = v15;
    sub_190CEA33C((uint64_t)v14, v15);
    uint64_t v17 = sub_190CEAD10();
    unint64_t v19 = v18;

    sub_190CD55F0((uint64_t)v14, v16);
    sub_190CD55F0((uint64_t)v14, v16);
    uint64_t result = sub_190CEA394(v17, v19);
    *a2 = 0;
    a2[1] = 0;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 0xF000000000000000;
  }
  else
  {
    uint64_t v10 = v5;
    unint64_t v11 = v6;
    uint64_t v12 = v7;
    unint64_t v13 = v8;

    sub_190CEA33C(v10, v11);
    sub_190CEA328(v12, v13);
    sub_190CEA394(v12, v13);
    sub_190CEA33C(v10, v11);
    sub_190CEA328(v12, v13);
    sub_190CD55F0(v10, v11);
    *a2 = v4;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
    sub_190CD55F0(v10, v11);
    return sub_190CEA394(v12, v13);
  }
  return result;
}

uint64_t sub_190CEA9B0()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel__partialConfigData);
  if (v2)
  {
    unint64_t v3 = v2;
    uint64_t v4 = sub_190D41648();
    unint64_t v6 = v5;

    id v7 = objc_msgSend(v1, sel__partialSchemaData);
    if (v7)
    {
      unint64_t v8 = v7;
      sub_190D41648();

      return v4;
    }
    sub_190CD55F0(v4, v6);
  }
  id v9 = objc_msgSend(v1, sel__intentData);
  if (!v9) {
    return 0;
  }
  uint64_t v4 = sub_190D41648();

  return v4;
}

id sub_190CEAAAC()
{
  uint64_t v1 = v0;
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  id v3 = v1;
  uint64_t v4 = v3;
  if (!v2)
  {
    unint64_t v6 = v3;
    goto LABEL_10;
  }
  id result = (id)INIntentWithTypedIntent();
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v6 = result;

  self;
  if (!swift_dynamicCastObjCClass())
  {
LABEL_10:
    id v12 = objc_msgSend(v6, sel__backingStoreData);
    if (!v12) {
      goto LABEL_13;
    }
    unint64_t v13 = v12;
    sub_190D418C8();

    LODWORD(v15[0]) = sub_190D417C8();
    uint64_t v4 = (void *)sub_190D418A8();
    swift_bridgeObjectRelease();
    id NSData = OPACKEncoderCreateNSData(v4);

    if (!NSData)
    {
LABEL_13:
      sub_190CDAE90();
      swift_allocError();
      _OWORD *v14 = xmmword_190D4BBB0;
      goto LABEL_14;
    }
LABEL_12:
    uint64_t v4 = (void *)sub_190D41648();

    return v4;
  }
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  id v8 = v4;
  if (!v7) {
    goto LABEL_7;
  }
  id result = (id)INIntentWithTypedIntent();
  if (result)
  {
    id v9 = result;

    id v8 = v9;
LABEL_7:
    v15[0] = 0;
    id NSData = objc_msgSend(self, sel__encodeToOPACK_error_, v8, v15);

    id v11 = v15[0];
    if (!NSData)
    {
      uint64_t v4 = v11;
      sub_190D414B8();

LABEL_14:
      swift_willThrow();

      return v4;
    }
    goto LABEL_12;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_190CEAD10()
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  self;
  if (!swift_dynamicCastObjCClass())
  {
    v17[0] = 0;
    id v3 = objc_msgSend(v0, sel__copyWithoutBackingStoreData_, v17);
    if (v3)
    {
      if (v17[0])
      {
      }
      else
      {
        v17[0] = 0;
        id v4 = v3;
        id v5 = objc_msgSend(v4, sel_widgetPlistableRepresentation_, v17);
        id v6 = v17[0];
        if (v5)
        {
          uint64_t v7 = v5;
          sub_190D418C8();
          id v8 = v6;

          LODWORD(v17[0]) = sub_190D417C8();
          id v9 = (void *)sub_190D418A8();
          swift_bridgeObjectRelease();
          id NSData = OPACKEncoderCreateNSData(v9);

          if (NSData)
          {
            uint64_t v1 = sub_190D41648();
            unint64_t v12 = v11;
          }
          else
          {
            uint64_t v1 = 0;
            unint64_t v12 = 0xF000000000000000;
          }
          int v15 = (int)v17[0];
          int v16 = sub_190D417C8();

          if (v15 == v16)
          {
            if (v12 >> 60 != 15) {
              return v1;
            }
          }
          else
          {
            sub_190CEA394(v1, v12);
          }
        }
        else
        {
          id v13 = v17[0];
          id v14 = (void *)sub_190D414B8();

          swift_willThrow();
        }
      }
    }
  }
  return 0;
}

uint64_t CHSFrozenIntent.init(intent:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel__indexingHash);
  id v5 = sub_190CEAAAC();
  unint64_t v7 = v6;
  sub_190CEA33C((uint64_t)v5, v6);
  uint64_t v8 = sub_190CEAD10();
  unint64_t v10 = v9;

  sub_190CEA33C((uint64_t)v5, v7);
  sub_190CEA328(v8, v10);
  sub_190CD55F0((uint64_t)v5, v7);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  sub_190CD55F0((uint64_t)v5, v7);
  return sub_190CEA394(v8, v10);
}

id CHSFrozenIntent.intent.getter()
{
  long long v5 = *v0;
  long long v6 = v0[1];
  unint64_t v7 = (CHSIntentReference *)*((void *)v0 + 4);
  CHSFrozenIntent.referenceForRealization()(v7);
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_intent, v5, v6, v7);

  return v3;
}

void __swiftcall CHSFrozenIntent.referenceForRealization()(CHSIntentReference *__return_ptr retstr)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  unint64_t v4 = v1[2];
  unint64_t v5 = v1[4];
  if (v5 >> 60 == 15)
  {
    id v6 = objc_allocWithZone((Class)CHSIntentReference);
    sub_190CEA33C(v3, v4);
    unint64_t v7 = (void *)sub_190D41628();
    sub_190CD55F0(v3, v4);
    objc_msgSend(v6, sel_initWithIntentData_configData_schemaData_stableHash_, v7, 0, 0, v2);
  }
  else
  {
    uint64_t v8 = v1[3];
    id v9 = objc_allocWithZone((Class)CHSIntentReference);
    sub_190CEA328(v8, v5);
    sub_190CEA33C(v3, v4);
    unint64_t v10 = (void *)sub_190D41628();
    sub_190CD55F0(v3, v4);
    unint64_t v7 = (void *)sub_190D41628();
    sub_190CEA394(v8, v5);
    objc_msgSend(v9, sel_initWithIntentData_configData_schemaData_stableHash_, 0, v10, v7, v2);
  }
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CHSFrozenIntent.referenceForSerialization()(CHSIntentReference *__return_ptr retstr)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  unint64_t v4 = v1[2];
  unint64_t v5 = v1[4];
  if (v5 >> 60 == 15)
  {
    id v6 = objc_allocWithZone((Class)CHSIntentReference);
    sub_190CEA33C(v3, v4);
    unint64_t v7 = (void *)sub_190D41628();
    uint64_t v8 = v3;
    unint64_t v9 = v4;
LABEL_5:
    sub_190CD55F0(v8, v9);
    objc_msgSend(v6, sel_initWithIntentData_configData_schemaData_stableHash_, v7, 0, 0, v2);

    return;
  }
  uint64_t v10 = v1[3];
  unint64_t v11 = self;
  sub_190CEA33C(v3, v4);
  sub_190CEA328(v10, v5);
  CHSFrozenIntent.referenceForRealization()(v12);
  id v14 = v13;
  id v15 = objc_msgSend(v13, sel_intent, v2, v3, v4, v10, v5, v23);

  sub_190CD55F0(v3, v4);
  sub_190CEA394(v10, v5);
  id v22 = 0;
  id v16 = objc_msgSend(v11, sel__encodeToOPACK_error_, v15, &v22);

  id v17 = v22;
  if (v16)
  {
    uint64_t v18 = sub_190D41648();
    unint64_t v20 = v19;

    id v6 = objc_allocWithZone((Class)CHSIntentReference);
    unint64_t v7 = (void *)sub_190D41628();
    uint64_t v8 = v18;
    unint64_t v9 = v20;
    goto LABEL_5;
  }
  uint64_t v21 = v17;
  sub_190D414B8();

  swift_willThrow();
}

uint64_t CHSFrozenIntent.hash(into:)()
{
  uint64_t v1 = v0[1];
  unint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  unint64_t v4 = v0[4];
  sub_190D423C8();
  switch(v3 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      JUMPOUT(0x190CEB4D0);
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_13;
    default:
LABEL_5:
      sub_190D423A8();
      if (v4 >> 60 == 15) {
        return sub_190D423B8();
      }
      switch(v4 >> 62)
      {
        case 1uLL:
          if (!__OFSUB__(HIDWORD(v2), v2)) {
            goto LABEL_11;
          }
          goto LABEL_14;
        case 2uLL:
          if (!__OFSUB__(*(void *)(v2 + 24), *(void *)(v2 + 16))) {
            goto LABEL_11;
          }
          goto LABEL_15;
        default:
LABEL_11:
          sub_190D423B8();
          uint64_t result = sub_190D423A8();
          break;
      }
      return result;
  }
}

uint64_t CHSFrozenIntent.hashValue.getter()
{
  return sub_190D423E8();
}

id sub_190CEB548()
{
  long long v5 = *v0;
  long long v6 = v0[1];
  unint64_t v7 = (CHSIntentReference *)*((void *)v0 + 4);
  CHSFrozenIntent.referenceForRealization()(v7);
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_intent, v5, v6, v7);

  return v3;
}

uint64_t sub_190CEB5A8()
{
  return sub_190D423E8();
}

uint64_t sub_190CEB600()
{
  return sub_190D423E8();
}

uint64_t freezeHomogeneousIntents(intents:)(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v4)
  {
    do
    {
      unint64_t v26 = v3 & 0xC000000000000001;
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x192FD6450](0, v3);
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        id v6 = *(id *)(v3 + 32);
      }
      id v7 = v6;
      swift_bridgeObjectRelease();
      char v24 = v7;
      uint64_t v28 = sub_190CEAD10();
      unint64_t v29 = v8;
      swift_bridgeObjectRetain();
      unint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v10 = 4;
      unint64_t v25 = v3;
      while (1)
      {
        uint64_t v27 = v9;
        unint64_t v9 = (char *)(v10 - 4);
        id v11 = v26 ? (id)MEMORY[0x192FD6450](v10 - 4, v3) : *(id *)(v3 + 8 * v10);
        unint64_t v12 = v11;
        uint64_t v13 = v10 - 3;
        if (__OFADD__(v9, 1)) {
          break;
        }
        id v14 = sub_190CEAAAC();
        if (v2)
        {

          sub_190CEA394(v28, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v9;
        }
        id v16 = v14;
        uint64_t v17 = v15;
        sub_190CEA328(v28, v29);
        id v18 = objc_msgSend(v12, sel__indexingHash);
        unint64_t v19 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v19 = sub_190CDD80C(0, *((void *)v27 + 2) + 1, 1, v27);
        }
        unint64_t v21 = *((void *)v19 + 2);
        unint64_t v20 = *((void *)v19 + 3);
        id v22 = v19;
        if (v21 >= v20 >> 1) {
          id v22 = sub_190CDD80C((char *)(v20 > 1), v21 + 1, 1, v19);
        }
        *((void *)v22 + 2) = v21 + 1;
        unint64_t v9 = v22;
        uint64_t v23 = &v22[40 * v21];
        *((void *)v23 + 4) = v18;
        *((void *)v23 + 5) = v16;
        *((void *)v23 + 6) = v17;
        *((void *)v23 + 7) = v28;
        *((void *)v23 + 8) = v29;

        ++v10;
        uint64_t v2 = 0;
        unint64_t v3 = v25;
        if (v13 == v4)
        {
          swift_bridgeObjectRelease();
          sub_190CEA394(v28, v29);

          return (uint64_t)v9;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t result = sub_190D420B8();
      uint64_t v4 = result;
    }
    while (result);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void freezeHomegeneousIntents(references:)(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_49:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_48:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_190D420B8();
  if (!v5) {
    goto LABEL_49;
  }
LABEL_3:
  uint64_t v60 = (void *)v2;
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x192FD6450](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    id v6 = *(id *)(v3 + 32);
  }
  id v7 = v6;
  swift_bridgeObjectRelease();
  id v61 = v7;
  CHSFrozenIntent.init(reference:)(v61, v67);
  if (v68 >> 60 == 15)
  {
    sub_190CDAE90();
    swift_allocError();
    *unint64_t v8 = xmmword_190D4BBB0;
    swift_willThrow();
    goto LABEL_8;
  }
  uint64_t v10 = v67[0];
  uint64_t v9 = v67[1];
  uint64_t v11 = v69;
  unint64_t v12 = v70;
  unint64_t v59 = v68;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABD58);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_190D4B270;
  uint64_t v57 = v10;
  uint64_t v58 = v9;
  *(void *)(v13 + 32) = v10;
  *(void *)(v13 + 40) = v9;
  *(void *)(v13 + 48) = v59;
  *(void *)(v13 + 56) = v11;
  *(void *)(v13 + 64) = v12;
  if (v5 < 1) {
    goto LABEL_52;
  }
  uint64_t v71 = (char *)v13;
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_190CEC168(v10, v9, v59, v11, v12);
    if (sub_190D420B8() < 1)
    {
LABEL_55:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v2 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    swift_bridgeObjectRetain();
    sub_190CEC168(v10, v58, v59, v11, v12);
  }
  if ((uint64_t)v2 < v5)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((v3 & 0xC000000000000001) != 0 && v5 != 1)
  {
    unint64_t v2 = sub_190CEC1C0();
    uint64_t v14 = 1;
    do
    {
      uint64_t v15 = v14 + 1;
      sub_190D41F88();
      uint64_t v14 = v15;
    }
    while (v5 != v15);
  }
  if (!v4)
  {
    uint64_t v56 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v64 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v16 = 1;
    if (v5 != 1) {
      goto LABEL_25;
    }
LABEL_24:

    swift_unknownObjectRelease();
    sub_190CEC200(v57, v58, v59, v11, v12);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_190D420C8();
  uint64_t v64 = v17;
  uint64_t v16 = v18;
  unint64_t v2 = v19;
  swift_bridgeObjectRelease_n();
  uint64_t v5 = v2 >> 1;
  if (v16 == v2 >> 1) {
    goto LABEL_24;
  }
LABEL_25:
  uint64_t v62 = v5;
  unint64_t v63 = v12 >> 60;
  while (1)
  {
    if (v16 >= v5)
    {
      __break(1u);
      goto LABEL_48;
    }
    id v20 = *(id *)(v64 + 8 * v16);
    unint64_t v21 = v20;
    uint64_t v66 = v20;
    if (v63 > 0xE)
    {
      id v22 = v20;
      goto LABEL_32;
    }
    sub_190CEA328(v11, v12);
    id v23 = v21;
    sub_190CEA328(v11, v12);
    id v24 = objc_msgSend(v23, sel__partialConfigData);
    if (!v24) {
      break;
    }
    unint64_t v25 = v24;
    unint64_t v2 = sub_190D41648();
    unint64_t v27 = v26;

    id v65 = objc_msgSend(v23, sel_stableHash);
    uint64_t v28 = v11;
    unint64_t v29 = v12;
LABEL_39:
    uint64_t v3 = v11;
    uint64_t v40 = v11;
    unint64_t v41 = v12;
    sub_190CEA394(v40, v12);
    sub_190CEA33C(v2, v27);
    sub_190CEA328(v28, v29);
    uint64_t v42 = v71;
    unint64_t v44 = *((void *)v71 + 2);
    unint64_t v43 = *((void *)v71 + 3);
    unint64_t v4 = v44 + 1;
    if (v44 >= v43 >> 1) {
      uint64_t v42 = sub_190CDD80C((char *)(v43 > 1), v44 + 1, 1, v71);
    }
    ++v16;
    *((void *)v42 + 2) = v4;
    uint64_t v71 = v42;
    uint64_t v45 = &v42[40 * v44];
    *((void *)v45 + 4) = v65;
    *((void *)v45 + 5) = v2;
    *((void *)v45 + 6) = v27;
    *((void *)v45 + 7) = v28;
    *((void *)v45 + 8) = v29;

    sub_190CD55F0(v2, v27);
    sub_190CEA394(v28, v29);
    uint64_t v5 = v62;
    unint64_t v12 = v41;
    uint64_t v11 = v3;
    if (v62 == v16) {
      goto LABEL_24;
    }
  }
  sub_190CEA394(v11, v12);
LABEL_32:
  id v30 = objc_msgSend(v21, sel_stableHash, v56);
  id v31 = objc_msgSend(v21, sel__partialConfigData);
  id v65 = v30;
  if (v31)
  {
    unint64_t v32 = v31;
    unint64_t v2 = sub_190D41648();
    unint64_t v27 = v33;

    id v34 = objc_msgSend(v21, sel__partialSchemaData);
    if (v34)
    {
      BOOL v35 = v34;
      uint64_t v28 = sub_190D41648();
      unint64_t v29 = v36;

LABEL_38:
      sub_190CEC258(v2, v27, v28, v29);
      sub_190CEA394(v28, v29);
      sub_190CD55F0(v2, v27);
      goto LABEL_39;
    }
    sub_190CD55F0(v2, v27);
  }
  id v37 = objc_msgSend(v21, sel__intentData);
  if (v37)
  {
    uint64_t v38 = v37;
    unint64_t v2 = sub_190D41648();
    unint64_t v27 = v39;

    uint64_t v28 = 0;
    unint64_t v29 = 0xF000000000000000;
    goto LABEL_38;
  }
  uint64_t v46 = v11;
  id v47 = objc_msgSend(v21, sel_intent);
  id v48 = sub_190CEAAAC();
  if (v60)
  {
  }
  else
  {
    uint64_t v50 = (uint64_t)v48;
    unint64_t v51 = v49;
    sub_190CEA33C((uint64_t)v48, v49);
    uint64_t v52 = sub_190CEAD10();
    unint64_t v54 = v53;

    sub_190CD55F0(v50, v51);
    sub_190CD55F0(v50, v51);
    sub_190CEA394(v52, v54);
  }
  sub_190CEA394(v46, v12);
  swift_bridgeObjectRelease();
  sub_190CDAE90();
  swift_allocError();
  _OWORD *v55 = xmmword_190D4BBB0;
  swift_willThrow();

  sub_190CEC200(v57, v58, v59, v46, v12);
  swift_unknownObjectRelease();
LABEL_8:
}

uint64_t _s14ChronoServices15CHSFrozenIntentV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  unint64_t v5 = a1[4];
  uint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  unint64_t v9 = a2[4];
  uint64_t v10 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x190CEC128);
      }
      uint64_t v10 = (int)v10;
LABEL_7:
      switch(v7 >> 62)
      {
        case 1uLL:
          BOOL v14 = __OFSUB__(HIDWORD(v6), v6);
          LODWORD(v6) = HIDWORD(v6) - v6;
          if (v14) {
            goto LABEL_39;
          }
          uint64_t v6 = (int)v6;
LABEL_12:
          if (v10 != v6) {
            return 0;
          }
LABEL_15:
          unint64_t v18 = v5 >> 60;
          if (v5 >> 60 != 15)
          {
            uint64_t v19 = 0;
            switch(v5 >> 62)
            {
              case 1uLL:
                BOOL v14 = __OFSUB__(HIDWORD(v4), v4);
                int v20 = HIDWORD(v4) - v4;
                if (v14) {
                  goto LABEL_41;
                }
                uint64_t v19 = v20;
LABEL_23:
                if (v9 >> 60 == 15) {
                  return 0;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = v4 + 16;
                uint64_t v21 = *(void *)(v4 + 16);
                uint64_t v22 = *(void *)(v23 + 8);
                uint64_t v19 = v22 - v21;
                if (!__OFSUB__(v22, v21)) {
                  goto LABEL_23;
                }
                goto LABEL_42;
              case 3uLL:
                goto LABEL_23;
              default:
                uint64_t v19 = BYTE6(v5);
                goto LABEL_23;
            }
          }
          if (v9 >> 60 == 15) {
            goto LABEL_36;
          }
          uint64_t v19 = 0;
LABEL_26:
          switch(v9 >> 62)
          {
            case 1uLL:
              LODWORD(v25) = HIDWORD(v8) - v8;
              if (__OFSUB__(HIDWORD(v8), v8)) {
                goto LABEL_43;
              }
              uint64_t v25 = (int)v25;
              break;
            case 2uLL:
              uint64_t v27 = *(void *)(v8 + 16);
              uint64_t v26 = *(void *)(v8 + 24);
              BOOL v14 = __OFSUB__(v26, v27);
              uint64_t v25 = v26 - v27;
              if (!v14) {
                break;
              }
              __break(1u);
LABEL_33:
              sub_190CEA394(v8, v9);
              uint64_t v25 = 0;
              break;
            case 3uLL:
              goto LABEL_33;
            default:
              sub_190CEA394(v8, a2[4]);
              uint64_t v25 = BYTE6(v9);
              break;
          }
          uint64_t result = 0;
          if (v18 <= 0xE && v19 == v25) {
LABEL_36:
          }
            uint64_t result = 1;
          break;
        case 2uLL:
          uint64_t v17 = v6 + 16;
          uint64_t v15 = *(void *)(v6 + 16);
          uint64_t v16 = *(void *)(v17 + 8);
          BOOL v14 = __OFSUB__(v16, v15);
          uint64_t v6 = v16 - v15;
          if (!v14) {
            goto LABEL_12;
          }
          goto LABEL_40;
        case 3uLL:
          if (!v10) {
            goto LABEL_15;
          }
          return 0;
        default:
          uint64_t v6 = BYTE6(v7);
          goto LABEL_12;
      }
      break;
    case 2uLL:
      uint64_t v13 = v2 + 16;
      uint64_t v12 = *(void *)(v2 + 16);
      uint64_t v11 = *(void *)(v13 + 8);
      BOOL v14 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v14) {
        goto LABEL_7;
      }
      goto LABEL_38;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v10 = BYTE6(v3);
      goto LABEL_7;
  }
  return result;
}

void sub_190CEC168(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3 >> 60 != 15)
  {
    sub_190CEA33C(a2, a3);
    sub_190CEA328(a4, a5);
  }
}

unint64_t sub_190CEC1C0()
{
  unint64_t result = qword_1E92AA7E0;
  if (!qword_1E92AA7E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AA7E0);
  }
  return result;
}

void sub_190CEC200(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3 >> 60 != 15)
  {
    sub_190CD55F0(a2, a3);
    sub_190CEA394(a4, a5);
  }
}

uint64_t sub_190CEC258(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_190CEA33C(result, a2);
    return sub_190CEA328(a3, a4);
  }
  return result;
}

unint64_t sub_190CEC2AC()
{
  unint64_t result = qword_1E92ABDA8;
  if (!qword_1E92ABDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92ABDA8);
  }
  return result;
}

uint64_t dispatch thunk of CHSIntentFactory.intent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for CHSFrozenIntent(void *a1)
{
  uint64_t result = sub_190CD55F0(a1[1], a1[2]);
  unint64_t v3 = a1[4];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[3];
    return sub_190CD55F0(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for CHSFrozenIntent(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  unint64_t v5 = a2[2];
  sub_190CEA33C(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2 + 3;
  unint64_t v7 = a2[4];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_190CEA33C(*v6, v7);
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v7;
  }
  return a1;
}

void *assignWithCopy for CHSFrozenIntent(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_190CEA33C(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_190CD55F0(v6, v7);
  uint64_t v8 = a2 + 3;
  unint64_t v9 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_190CEA33C(*v8, v9);
      uint64_t v12 = a1[3];
      unint64_t v13 = a1[4];
      a1[3] = v11;
      a1[4] = v9;
      sub_190CD55F0(v12, v13);
      return a1;
    }
    sub_190CEC4C4((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v8;
    return a1;
  }
  uint64_t v10 = *v8;
  sub_190CEA33C(*v8, v9);
  a1[3] = v10;
  a1[4] = v9;
  return a1;
}

uint64_t sub_190CEC4C4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CHSFrozenIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  sub_190CD55F0(v5, v6);
  unint64_t v7 = (void *)(a2 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = *(void *)(a2 + 32);
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v7;
      *(void *)(a1 + 32) = v9;
      sub_190CD55F0(v10, v8);
      return a1;
    }
    sub_190CEC4C4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for CHSFrozenIntent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CHSFrozenIntent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CHSFrozenIntent()
{
  return &type metadata for CHSFrozenIntent;
}

id OPACKEncoderCreateNSData(void *a1)
{
  id v1 = a1;
  id v2 = (id)MEMORY[0x192FD6CE0]();

  return v2;
}

uint64_t CHSExtensionIdentity.containerIdentity.getter@<X0>(void *a1@<X8>)
{
  unsigned int v3 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
    swift_beginAccess();
    uint64_t v7 = *v6;
    uint64_t v8 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v8;
  return swift_bridgeObjectRetain();
}

uint64_t DeviceScopedIdentity<>.containerBundleIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *DeviceScopedIdentity<>.init(containerBundleIdentifier:deviceID:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = result[1];
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a2;
  a4[3] = a3;
  return result;
}

uint64_t sub_190CEC798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_190CEC7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_190CEC7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_190CEC810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_190CEC838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_190CEC860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 48))(a1);
}

uint64_t sub_190CEC898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t sub_190CEC8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_190CEC8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_190CEC910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_190CEC938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

void sub_190CEC960(uint64_t a1, void *a2)
{
  unsigned int v3 = v2;
  uint64_t v5 = sub_190D41378();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190D415A8();
  unint64_t v9 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  if (a2)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_190CED020((unint64_t *)&qword_1E92AB708, type metadata accessor for FileAttributeKey);
    a2 = (void *)sub_190D418A8();
  }
  unsigned __int8 v10 = objc_msgSend(v3, sel_createFileAtPath_contents_attributes_, v9, 0, a2);

  if ((v10 & 1) == 0)
  {
    MEMORY[0x192FD5C70]();
    uint64_t v11 = sub_190D41798();
    if ((v11 & 0x100000000) != 0) {
      int v12 = 45;
    }
    else {
      int v12 = v11;
    }
    v13[3] = v12;
    sub_190CF83C0(MEMORY[0x1E4FBC860]);
    sub_190CED020(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
    sub_190D41498();
    sub_190D41368();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
  }
}

uint64_t sub_190CECB74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for PrimitiveBox();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v13 - v10;
  swift_getWitnessTable();
  uint64_t result = URL.extendedAttribute<A>(named:of:)(a1, a2, v9);
  if (!v4) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v11, a3);
  }
  return result;
}

uint64_t sub_190CECC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  v25[1] = a6;
  v25[2] = a7;
  uint64_t v8 = type metadata accessor for PrimitiveBox();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_190D41E18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v25 - v14;
  uint64_t v16 = *(void *)(a5 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v25 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v27, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a5) == 1)
  {
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    MEMORY[0x1F4188790](v22);
    uint64_t v23 = v29;
    v25[-2] = v28;
    v25[-1] = v23;
    return sub_190D41578();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, a5);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a5);
    PrimitiveBox.init(wrapped:)((uint64_t)v19, a5, (uint64_t)v10);
    swift_getWitnessTable();
    URL.setExtendedAttribute<A>(named:value:)(v28, v29);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, a5);
  }
}

uint64_t sub_190CED004(const char *a1)
{
  return sub_190CF74AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_190CED020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CED068(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void __swiftcall CHSActivityService.init()(CHSActivityService *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

id CHSActivityService.init()()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v0, sel_initWithConnection_, v1);

  return v2;
}

char *sub_190CED1A8(void *a1)
{
  uint64_t v3 = sub_190D41858();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v3);
  unint64_t v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_190D41D58();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_190D41898();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_190D41D78();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion] = 0;
  *(void *)&v1[OBJC_IVAR___CHSActivityService_connection] = a1;
  uint64_t v14 = self;
  uint64_t v15 = v1;
  id v31 = a1;
  id v16 = objc_msgSend(v14, sel_weakObjectsHashTable);
  *(void *)&v15[OBJC_IVAR___CHSActivityService_queue_subscriptions] = v16;
  *(void *)&v15[OBJC_IVAR___CHSActivityService_connectionClient] = objc_msgSend(objc_allocWithZone((Class)_s16ConnectionClientCMa()), sel_init);
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCC68], v10);
  sub_190D41868();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  sub_190CEF180((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  *(void *)&v15[OBJC_IVAR___CHSActivityService_queue] = sub_190D41DA8();
  v15[OBJC_IVAR___CHSActivityService_queue_invalidated] = 0;

  v39.receiver = v15;
  v39.super_class = (Class)CHSActivityService;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v39, sel_init);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR___CHSActivityService_connectionClient];
  uint64_t v19 = v17;
  id v20 = v31;
  objc_msgSend(v31, sel_addClient_, v18);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                    + OBJC_IVAR____TtCE14ChronoServicesCSo18CHSActivityService16ConnectionClient_activityPayloadUpdateHandler);
  uint64_t v23 = *(void *)(v18
                  + OBJC_IVAR____TtCE14ChronoServicesCSo18CHSActivityService16ConnectionClient_activityPayloadUpdateHandler);
  *uint64_t v22 = sub_190CEF2A8;
  v22[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21;
  sub_190CDAA9C(v23);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v19;
  aBlock[4] = sub_190CEF2B0;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_39;
  uint64_t v25 = _Block_copy(aBlock);
  uint64_t v26 = v19;
  sub_190D41868();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CEF180(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  uint64_t v27 = v32;
  uint64_t v28 = v35;
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v9, v27, v25);

  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  swift_release();
  return v26;
}

uint64_t sub_190CED758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a3;
  uint64_t v9 = sub_190D41858();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_190D41898();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FD7A00](a5 + 16);
  if (result)
  {
    uint64_t v17 = (void *)result;
    v22[1] = *(void *)(result + OBJC_IVAR___CHSActivityService_queue);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v17;
    void v18[3] = a1;
    uint64_t v19 = v23;
    v18[4] = a2;
    v18[5] = v19;
    v18[6] = a4;
    aBlock[4] = sub_190CEF300;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190CED068;
    aBlock[3] = &block_descriptor_45;
    id v20 = _Block_copy(aBlock);
    id v21 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_190D41868();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
    sub_190CEF180(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
    sub_190D41E88();
    MEMORY[0x192FD6250](0, v15, v12, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);

    return swift_release();
  }
  return result;
}

uint64_t sub_190CEDA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v8 = sub_190D41858();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_190D41898();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  id v15 = objc_msgSend(*(id *)(v4 + OBJC_IVAR___CHSActivityService_queue_subscriptions), sel_allObjects);
  type metadata accessor for CHSActivitySubscription();
  uint64_t v16 = sub_190D41BE8();

  if (qword_1E92AB5C8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)swift_allocObject();
  id v17[2] = v16;
  v17[3] = a1;
  uint64_t v18 = v22;
  v17[4] = a2;
  v17[5] = v18;
  void v17[6] = a4;
  aBlock[4] = sub_190CEF378;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_51;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190D41868();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CEF180(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  return swift_release();
}

uint64_t sub_190CEDDB0(uint64_t a1)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  BSDispatchQueueAssert();
  id v2 = *(void **)(a1 + OBJC_IVAR___CHSActivityService_connection);
  v7[0] = 0;
  id v3 = objc_msgSend(v2, sel_subscribeToActivityPayloadUpdates_, v7);
  uint64_t v4 = (void *)v7[0];
  *(void *)(a1 + OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion) = v3;
  id v5 = v4;
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall CHSActivityService.invalidate()()
{
  uint64_t v1 = sub_190D41858();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_190D41898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(void *)&v0[OBJC_IVAR___CHSActivityService_queue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_190CEE2C8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_6;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v0;
  sub_190D41868();
  v12[1] = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CEF180(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

uint64_t sub_190CEE21C(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR___CHSActivityService_queue_invalidated) = 1;
  BSDispatchQueueAssert();
  uint64_t v2 = OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion);
  if (v3) {
    objc_msgSend(v3, sel_invalidate);
  }
  *(void *)(a1 + v2) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_190CEE290()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190CEE2C8()
{
  return sub_190CEE21C(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

id CHSActivityService.subscribe(toActivityID:withHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_190D41858();
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_190D41898();
  uint64_t v12 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (objc_class *)type metadata accessor for CHSActivitySubscription();
  uint64_t v16 = objc_allocWithZone(v15);
  uint64_t v17 = &v16[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_activityID];
  *uint64_t v17 = a1;
  v17[1] = a2;
  uint64_t v18 = &v16[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_payloadHandler];
  *uint64_t v18 = a3;
  v18[1] = a4;
  v16[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_calloutQueue_invalidated] = 0;
  v30.receiver = v16;
  v30.super_class = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = objc_msgSendSuper2(&v30, sel_init);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v4;
  *(void *)(v20 + 24) = v19;
  aBlock[4] = sub_190CEE6C4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_6_0;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v4;
  id v23 = v19;
  sub_190D41868();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CEF180(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v11, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  swift_release();
  return v23;
}

uint64_t type metadata accessor for CHSActivitySubscription()
{
  return self;
}

uint64_t sub_190CEE684()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_190CEE6C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v1 + OBJC_IVAR___CHSActivityService_queue_invalidated) & 1) == 0) {
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHSActivityService_queue_subscriptions), sel_addObject_, *(void *)(v0 + 24));
  }
  return result;
}

uint64_t type metadata accessor for CHSActivityService(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92ABE08);
}

uint64_t sub_190CEE7D0()
{
  uint64_t v0 = sub_190D41D58();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_190D41898();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_190D41D78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC68], v2);
  sub_190D41868();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  sub_190CEF180((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  uint64_t result = sub_190D41DA8();
  qword_1E92B3118 = result;
  return result;
}

id sub_190CEEB4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16ConnectionClientCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s16ConnectionClientCMa()
{
  return self;
}

uint64_t sub_190CEEBB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_190D420B8();
    uint64_t v8 = result;
    if (!result) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_20;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = 0;
  unint64_t v11 = a1 & 0xC000000000000001;
  do
  {
    if (v11) {
      uint64_t v12 = (unsigned char *)MEMORY[0x192FD6450](v10, a1);
    }
    else {
      uint64_t v12 = *(id *)(a1 + 8 * v10 + 32);
    }
    uint64_t v13 = v12;
    if (qword_1E92AB5C8 != -1) {
      swift_once();
    }
    BSDispatchQueueAssert();
    if (v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_calloutQueue_invalidated] != 1)
    {
      BOOL v14 = *(void *)&v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_activityID] == a2
         && *(void *)&v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_activityID
                          + 8] == a3;
      if (v14 || (sub_190D422D8() & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))&v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_payloadHandler])(a4, a5);
        unint64_t v11 = a1 & 0xC000000000000001;
      }
    }
    ++v10;
  }
  while (v8 != v10);
LABEL_20:
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CEED8C()
{
  uint64_t v1 = sub_190D41858();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_190D41898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AB5C8 != -1) {
    swift_once();
  }
  v13[0] = qword_1E92B3118;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_190CEF168;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_27;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  sub_190D41868();
  v13[1] = MEMORY[0x1E4FBC860];
  sub_190CD7890((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CEF180(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

id sub_190CEF0DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_190CEF168()
{
  *(unsigned char *)(*(void *)(v0 + 16)
           + OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_calloutQueue_invalidated) = 1;
}

uint64_t sub_190CEF180(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CEF1D0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_190CEF1E0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_190CEF218()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_190D41948();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_190CEF270()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190CEF2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190CED758(a1, a2, a3, a4, v4);
}

uint64_t sub_190CEF2B0()
{
  return sub_190CEDDB0(*(void *)(v0 + 16));
}

uint64_t sub_190CEF2B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_190CEF300()
{
  return sub_190CEDA64(v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_190CEF330()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_190CEF378()
{
  return sub_190CEEBB8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_190CEF3B8(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_190D41EF8();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_190D41DD8(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_190D41DE8();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_190D41DE8();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_190CEF518(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_190D41EF8();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_190D41DD8(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  type metadata accessor for CHSExtensionIdentity();
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_190D41DE8();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_190D41DE8();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_190CEF668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a5 + 16))
  {
    sub_190D42398();
    sub_190CDC274(a1, a2, a3, a4);
    sub_190D41A18();
    swift_bridgeObjectRelease();
    uint64_t v39 = a4;
    unint64_t v10 = sub_190D423E8() & ~(-1 << *(unsigned char *)(a5 + 32));
    if ((*(void *)(a5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
    {
      uint64_t v37 = -1 << *(unsigned char *)(a5 + 32);
      char v11 = (uint64_t *)(*(void *)(a5 + 48) + 32 * v10);
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      uint64_t v14 = a2;
      uint64_t v15 = a3;
      uint64_t v17 = v11[2];
      uint64_t v16 = v11[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_190CDC274(v13, v12, v17, v16);
      uint64_t v20 = v19;
      if (v18 == sub_190CDC274(a1, v14, v15, v39) && v20 == v21)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v23 = sub_190D422D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23)
      {
LABEL_18:
        char v35 = 1;
        return v35 & 1;
      }
      uint64_t v38 = ~v37;
      unint64_t v24 = (v10 + 1) & v38;
      if ((*(void *)(a5 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
      {
        while (1)
        {
          uint64_t v25 = (uint64_t *)(*(void *)(a5 + 48) + 32 * v24);
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          uint64_t v29 = v25[2];
          uint64_t v28 = v25[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_190CDC274(v27, v26, v29, v28);
          uint64_t v32 = v31;
          if (v30 == sub_190CDC274(a1, v14, v15, v39) && v32 == v33) {
            break;
          }
          char v35 = sub_190D422D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
          {
            unint64_t v24 = (v24 + 1) & v38;
            if ((*(void *)(a5 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24)) {
              continue;
            }
          }
          return v35 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v35 = 0;
  return v35 & 1;
}

id CHSWidgetRelevanceService.init(options:)(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v2, sel_initWithOptions_, a1);
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;

  id v2 = v1;
  char v4 = sub_190D415D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v9 = CHSWidgetRelevanceServiceCacheDirectory();
  sub_190D41588();

  unint64_t v10 = (void *)sub_190D414F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v11 = objc_msgSend(v2, sel_initWithConnection_cacheURL_options_, v8, v10, a1);

  return v11;
}

char *sub_190CEFBE0(void *a1, uint64_t a2, char *a3)
{
  objc_super v78 = a3;
  uint64_t v85 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA330);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v73 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA328);
  uint64_t v75 = *(void *)(v7 - 8);
  uint64_t v76 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_190D41858();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  MEMORY[0x1F4188790](v9);
  v82 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190D41D58();
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_190D41898();
  uint64_t v80 = *(void *)(v13 - 8);
  uint64_t v81 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_190D41D78();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_finishLaunchingToken] = 0;
  v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated] = 0;
  *(void *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion] = 0;
  *(void *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion] = 0;
  uint64_t v20 = OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances;
  uint64_t v21 = v3;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  *(void *)&v3[v20] = sub_190CD10B0(MEMORY[0x1E4FBC860]);
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache] = 0;
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties] = 0;
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_connection] = a1;
  id v23 = objc_allocWithZone((Class)_s16ConnectionClientCMa_0());
  id v79 = a1;
  id v24 = objc_msgSend(v23, sel_init);
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_connectionClient] = v24;
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_options] = v78;
  uint64_t v25 = sub_190D41598();
  uint64_t v26 = (uint64_t *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_cachePath];
  uint64_t *v26 = v25;
  v26[1] = v27;
  uint64_t v28 = sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBCC68], v16);
  sub_190D41868();
  aBlock[0] = v22;
  sub_190CF4210((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  uint64_t v77 = (char *)v28;
  objc_super v78 = v15;
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_queue] = sub_190D41DA8();
  *(void *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_queue_observers] = objc_msgSend(self, sel_weakObjectsHashTable);
  if (qword_1E92AA8D8 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1E92B30D8;
  uint64_t v30 = (uint64_t *)&v21[OBJC_IVAR___CHSWidgetRelevanceService_keybagStateProvider];
  v30[3] = type metadata accessor for DefaultKeybagStateProvider();
  v30[4] = (uint64_t)&off_1EE09D5B8;
  *uint64_t v30 = v29;
  swift_retain();

  v88.receiver = v21;
  v88.super_class = (Class)CHSWidgetRelevanceService;
  uint64_t v31 = (char *)objc_msgSendSuper2(&v88, sel_init);
  uint64_t v32 = OBJC_IVAR___CHSWidgetRelevanceService_connectionClient;
  uint64_t v33 = *(void *)&v31[OBJC_IVAR___CHSWidgetRelevanceService_connectionClient];
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v35 = (uint64_t (**)(uint64_t))(v33
                                         + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_timelineRelevanceDidChangeHandler);
  uint64_t v36 = *(void *)(v33
                  + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_timelineRelevanceDidChangeHandler);
  void *v35 = sub_190CF42D8;
  v35[1] = (uint64_t (*)(uint64_t))v34;
  uint64_t v37 = v31;
  sub_190CDAA9C(v36);
  uint64_t v38 = *(void *)&v31[v32];
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v40 = (uint64_t (**)(void *))(v38
                                        + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_widgetRelevanceEventHandler);
  uint64_t v41 = *(void *)(v38
                  + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_widgetRelevanceEventHandler);
  *uint64_t v40 = sub_190CF42E0;
  v40[1] = (uint64_t (*)(void *))v39;
  sub_190CDAA9C(v41);
  id v42 = v79;
  objc_msgSend(v79, sel_addClient_, *(void *)&v31[v32]);
  uint64_t v71 = OBJC_IVAR___CHSWidgetRelevanceService_queue;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v37;
  aBlock[4] = sub_190CF42E8;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_78;
  unint64_t v44 = _Block_copy(aBlock);
  id v72 = v37;
  uint64_t v45 = v37;
  uint64_t v46 = v78;
  sub_190D41868();
  id v86 = (id)MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  id v47 = v82;
  uint64_t v48 = v84;
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v46, v47, v44);
  _Block_release(v44);
  unint64_t v49 = v47;
  uint64_t v50 = v45;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v48);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v81);
  swift_release();
  unint64_t v51 = &v45[OBJC_IVAR___CHSWidgetRelevanceService_keybagStateProvider];
  uint64_t v52 = *((void *)v51 + 3);
  uint64_t v53 = *((void *)v51 + 4);
  __swift_project_boxed_opaque_existential_1(v51, v52);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53))
  {

    uint64_t v54 = sub_190D415D8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v85, v54);
  }
  else
  {
    if (qword_1E92AA320 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_190D41778();
    __swift_project_value_buffer(v55, (uint64_t)qword_1E92B3060);
    uint64_t v56 = sub_190D41758();
    os_log_type_t v57 = sub_190D41D48();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_190C6F000, v56, v57, "CHSWidgetRelevanceService started before first unlock registering for notifications", v58, 2u);
      MEMORY[0x192FD7910](v58, -1, -1);
    }

    uint64_t v59 = *((void *)v51 + 3);
    uint64_t v60 = *((void *)v51 + 4);
    __swift_project_boxed_opaque_existential_1(v51, v59);
    aBlock[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v59, v60);
    id v86 = *(id *)&v72[v71];
    id v61 = v86;
    uint64_t v62 = sub_190D41D68();
    uint64_t v63 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v73, 1, 1, v62);
    id v64 = v61;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABFF0);
    sub_190CD4928(&qword_1E92ABFF8, &qword_1E92ABFF0);
    sub_190CF41CC(&qword_1E92AC000, (unint64_t *)&qword_1E92AAAF0);
    id v65 = v74;
    sub_190D41838();
    sub_190CF430C(v63);

    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_190CD4928((unint64_t *)&unk_1E92AC008, &qword_1E92AA328);
    uint64_t v66 = v76;
    uint64_t v67 = sub_190D41848();

    swift_release();
    uint64_t v68 = sub_190D415D8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v85, v68);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v66);
    *(void *)&v50[OBJC_IVAR___CHSWidgetRelevanceService_finishLaunchingToken] = v67;
    swift_release();
  }
  return v50;
}

uint64_t sub_190CF0748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_190D41858();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_190D41898();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FD7A00](a2 + 16);
  if (result)
  {
    uint64_t v13 = (void *)result;
    v16[1] = *(id *)(result + OBJC_IVAR___CHSWidgetRelevanceService_queue);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_190CF54F0;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190CED068;
    aBlock[3] = &block_descriptor_103;
    uint64_t v15 = _Block_copy(aBlock);
    v16[0] = v13;
    swift_bridgeObjectRetain();
    sub_190D41868();
    v16[2] = (id)MEMORY[0x1E4FBC860];
    sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
    sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
    sub_190D41E88();
    MEMORY[0x192FD6250](0, v11, v7, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_190CF0A50(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_190CF338C((uint64_t)&unk_1EE09F980, (uint64_t)sub_190CF53FC, (uint64_t)&block_descriptor_91);
}

uint64_t sub_190CF0AB8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_190D41858();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_190D41898();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FD7A00](a2 + 16);
  if (result)
  {
    uint64_t v13 = (void *)result;
    v17[1] = *(id *)(result + OBJC_IVAR___CHSWidgetRelevanceService_queue);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_190CF5460;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190CED068;
    aBlock[3] = &block_descriptor_97;
    uint64_t v15 = _Block_copy(aBlock);
    v17[0] = v13;
    id v16 = a1;
    sub_190D41868();
    id v17[2] = (id)MEMORY[0x1E4FBC860];
    sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
    sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
    sub_190D41E88();
    MEMORY[0x192FD6250](0, v11, v7, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_190CF0DBC(void *a1)
{
  id v3 = objc_msgSend(a1, sel_eventType);
  if ((unint64_t)v3 < 2)
  {
    uint64_t v4 = (void *)(v1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties);
    swift_beginAccess();
    *uint64_t v4 = 0;
    swift_bridgeObjectRelease();
    sub_190CF37D0();
    return sub_190CF338C((uint64_t)&unk_1EE09F958, (uint64_t)sub_190CF5394, (uint64_t)&block_descriptor_85);
  }
  if (v3 == (id)2)
  {
    uint64_t v5 = (unint64_t *)(v1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties);
    swift_beginAccess();
    if (!*v5)
    {
LABEL_8:
      swift_endAccess();
      return sub_190CF338C((uint64_t)&unk_1EE09F958, (uint64_t)sub_190CF5394, (uint64_t)&block_descriptor_85);
    }
    id v6 = a1;
    uint64_t v7 = sub_190CF4C8C(v5, v6);

    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_190D420B8();
      swift_bridgeObjectRelease();
      uint64_t v8 = v10;
      if (v10 >= v7) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v7)
      {
LABEL_7:
        sub_190CF5060(v7, v8);
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  type metadata accessor for CHSWidgetRelevanceServiceEventType(0);
  uint64_t result = sub_190D42318();
  __break(1u);
  return result;
}

void sub_190CF0F48()
{
  v14[1] = *MEMORY[0x1E4F143B8];
  BSDispatchQueueAssert();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_options);
  if (v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    v14[0] = 0;
    id v3 = objc_msgSend(v2, sel_subscribeToWidgetRelevanceEvents_, v14);
    uint64_t v4 = (void *)v14[0];
    *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion) = v3;
    id v5 = v4;
    swift_unknownObjectRelease();
    sub_190CF338C((uint64_t)&unk_1EE09F958, (uint64_t)sub_190CF5394, (uint64_t)&block_descriptor_85);
  }
  if ((v1 & 2) != 0)
  {
    id v6 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    uint64_t v13 = 0;
    v14[0] = 0;
    id v7 = objc_msgSend(v6, sel_subscribeToTimelineEntryRelevance_outTimelineEntryRelevance_, v14, &v13);
    uint64_t v9 = v13;
    uint64_t v8 = (void *)v14[0];
    *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion) = v7;
    id v10 = v8;
    id v11 = v9;
    swift_unknownObjectRelease();
    if (v11)
    {
      v14[0] = 0;
      sub_190C72C5C(0, &qword_1E92ABD50);
      id v12 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABFD8);
      sub_190CF41CC((unint64_t *)&unk_1E92ABFE0, &qword_1E92ABD50);
      sub_190D418B8();

      if (v14[0])
      {
        *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances) = v14[0];
        swift_bridgeObjectRelease();
        sub_190CF338C((uint64_t)&unk_1EE09F980, (uint64_t)sub_190CF53FC, (uint64_t)&block_descriptor_91);
      }
    }
  }
}

void sub_190CF115C(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x192FD7A00](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    if (v2)
    {
      if (qword_1E92AA320 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_190D41778();
      __swift_project_value_buffer(v6, (uint64_t)qword_1E92B3060);
      id v7 = sub_190D41758();
      os_log_type_t v8 = sub_190D41D48();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_190C6F000, v7, v8, "First unlock event received so do a reload. Observers will be notified afterward", v9, 2u);
        MEMORY[0x192FD7910](v9, -1, -1);
      }

      id v10 = objc_msgSend(self, sel_reloadEvent);
      sub_190CF0DBC(v10);

      id v5 = v10;
    }
  }
}

id sub_190CF1348()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion];
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  int v2 = *(void **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion];
  if (v2) {
    objc_msgSend(v2, sel_invalidate);
  }
  v4.receiver = v0;
  v4.super_class = (Class)CHSWidgetRelevanceService;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_190CF14D4()
{
  uint64_t v0 = sub_190D41D58();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_190D41898();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_190D41D78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC68], v2);
  sub_190D41868();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  uint64_t result = sub_190D41DA8();
  qword_1E92B3078 = result;
  return result;
}

Swift::Void __swiftcall CHSWidgetRelevanceService.invalidate()()
{
  uint64_t v1 = sub_190D41858();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_190D41898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(void *)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_190CF1A28;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_7;
  id v10 = _Block_copy(aBlock);
  id v11 = v0;
  sub_190D41868();
  v12[1] = MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

uint64_t sub_190CF19F0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190CF1A28()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated) = 1;
  return sub_190CF1A74();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_190CF1A74()
{
  BSDispatchQueueAssert();
  uint64_t v1 = OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion);
  if (v2) {
    objc_msgSend(v2, sel_invalidate);
  }
  *(void *)(v0 + v1) = 0;
  swift_unknownObjectRelease();
  uint64_t v3 = OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion);
  if (v4) {
    objc_msgSend(v4, sel_invalidate);
  }
  *(void *)(v0 + v3) = 0;
  return swift_unknownObjectRelease();
}

uint64_t CHSWidgetRelevanceService.timelineEntryRelevances.getter()
{
  unint64_t v10 = sub_190CD10B0(MEMORY[0x1E4FBC860]);
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_190CF1D88;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_190CD0740;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CCA8F0;
  aBlock[3] = &block_descriptor_9;
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_190CF1D88()
{
  **(void **)(v0 + 16) = *(void *)(*(void *)(v0 + 24)
                                     + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CF1DD4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t CHSWidgetRelevanceService.widgetRelevanceProperties.getter()
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_190CF20A4;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_190CD7928;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CCA8F0;
  aBlock[3] = &block_descriptor_19;
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_190CF1FC4(uint64_t *a1, uint64_t a2)
{
  BSDispatchQueueAssert();
  uint64_t v4 = (uint64_t *)(a2 + OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties);
  swift_beginAccess();
  if (*v4)
  {
    uint64_t v5 = *v4;
  }
  else
  {
    uint64_t v5 = sub_190CF4374();
    *uint64_t v4 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CF206C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CF20A4()
{
  return sub_190CF1FC4(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_190CF20AC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t CHSWidgetRelevanceService.registerObserver(_:)(uint64_t a1)
{
  return sub_190CF2148(a1, (uint64_t)&unk_1EE09F818, (uint64_t)sub_190CF20FC, (uint64_t)&block_descriptor_25);
}

uint64_t sub_190CF20E4()
{
  return objectdestroy_21Tm(MEMORY[0x1E4FBC8F8]);
}

SEL *sub_190CF20FC()
{
  return sub_190CF2428((SEL *)&selRef_addObject_);
}

uint64_t CHSWidgetRelevanceService.unregisterObserver(_:)(uint64_t a1)
{
  return sub_190CF2148(a1, (uint64_t)&unk_1EE09F840, (uint64_t)sub_190CF241C, (uint64_t)&block_descriptor_31);
}

uint64_t sub_190CF2148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_190D41858();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_190D41898();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)&v4[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  *(void *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = a4;
  id v16 = _Block_copy(aBlock);
  uint64_t v17 = v4;
  swift_unknownObjectRetain();
  sub_190D41868();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  return swift_release();
}

uint64_t sub_190CF2404()
{
  return objectdestroy_21Tm(MEMORY[0x1E4FBC8F8]);
}

SEL *sub_190CF241C()
{
  return sub_190CF2428((SEL *)&selRef_removeObject_);
}

SEL *sub_190CF2428(SEL *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if ((*(unsigned char *)(v2 + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated) & 1) == 0) {
    return (SEL *)objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHSWidgetRelevanceService_queue_observers), *result, *(void *)(v1 + 24));
  }
  return result;
}

void sub_190CF2474(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

uint64_t CHSWidgetRelevanceService.reloadWidgetRelevance(for:kind:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_190D41858();
  uint64_t v24 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_190D41898();
  uint64_t v14 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  id v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)&v5[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  uint64_t v17 = (void *)swift_allocObject();
  id v17[2] = v5;
  id v17[3] = a4;
  v17[4] = a5;
  v17[5] = a1;
  void v17[6] = a2;
  v17[7] = a3;
  aBlock[4] = sub_190CF2A40;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_37;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  uint64_t v19 = v5;
  swift_retain();
  id v20 = a1;
  sub_190D41868();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  return swift_release();
}

void sub_190CF27E0(uint64_t a1, void (*a2)(id), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC028);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190D4B270;
    *(void *)(inited + 32) = sub_190D41978();
    *(void *)(inited + 40) = v9;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD00000000000002ELL;
    *(void *)(inited + 56) = 0x8000000190D5D790;
    sub_190CD12D0(inited);
    id v10 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v11 = (void *)sub_190D41948();
    uint64_t v12 = (void *)sub_190D418A8();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 1, v12);

    id v14 = v13;
    a2(v13);
  }
  else
  {
    id v16 = *(void **)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    if (a6) {
      id v14 = (id)sub_190D41948();
    }
    else {
      id v14 = 0;
    }
    aBlock[4] = a2;
    aBlock[5] = a3;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190D3A86C;
    aBlock[3] = &block_descriptor_112;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_reloadWidgetRelevanceForExtensionIdentity_kind_completion_, a4, v14, v17);
    _Block_release(v17);
  }
}

uint64_t sub_190CF29F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_190CF2A40()
{
  sub_190CF27E0(*(void *)(v0 + 16), *(void (**)(id))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t CHSWidgetRelevanceService.acquireWidgetLifetimeAssertion(for:metrics:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_190D41858();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_190D41898();
  uint64_t v13 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)&v4[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  id v16 = (void *)swift_allocObject();
  v16[2] = v4;
  id v16[3] = a3;
  v16[4] = a4;
  v16[5] = a1;
  void v16[6] = a2;
  aBlock[4] = sub_190CF308C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_43;
  uint64_t v17 = _Block_copy(aBlock);
  uint64_t v18 = v4;
  swift_retain();
  id v19 = a1;
  id v20 = a2;
  sub_190D41868();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
  return swift_release();
}

void sub_190CF2E10(uint64_t a1, void (*a2)(void, id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC028);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190D4B270;
    *(void *)(inited + 32) = sub_190D41978();
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD000000000000042;
    *(void *)(inited + 56) = 0x8000000190D5D720;
    sub_190CD12D0(inited);
    id v9 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v10 = (void *)sub_190D41948();
    uint64_t v11 = (void *)sub_190D418A8();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, 1, v11);

    id v13 = v12;
    a2(0, v12);
  }
  else
  {
    id v16 = *(void **)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    aBlock[4] = sub_190CF5530;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190CF3114;
    aBlock[3] = &block_descriptor_109;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_acquireLifetimeAssertionForWidget_metrics_completion_, a4, a5, v18);
    _Block_release(v18);
  }
}

uint64_t sub_190CF303C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_190CF308C()
{
  sub_190CF2E10(*(void *)(v0 + 16), *(void (**)(void, id))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_190CF309C(int a1, id a2, void (*a3)(void))
{
  if (a2)
  {
    id v5 = a2;
    ((void (*)(void, id))a3)(0, a2);
  }
  else
  {
    a3();
  }
}

void sub_190CF3114(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_190CF325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_190D414A8();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void __swiftcall CHSWidgetRelevanceService.init()(CHSWidgetRelevanceService *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void CHSWidgetRelevanceService.init()()
{
}

id CHSWidgetRelevanceService.register(_:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_registerObserver_, a1);
}

uint64_t type metadata accessor for CHSWidgetRelevanceService(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92ABFC0);
}

uint64_t sub_190CF338C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D41858();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_190D41898();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  id v12 = objc_msgSend(*(id *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_observers], sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA350);
  uint64_t v13 = sub_190D41BE8();

  if (qword_1E92AA340 != -1) {
    swift_once();
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190CED068;
  aBlock[3] = a3;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v3;
  sub_190D41868();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_190CF4210((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v11, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  return swift_release();
}

uint64_t sub_190CF36BC(unint64_t a1, uint64_t a2, SEL *a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_190D420B8();
    uint64_t v6 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_12;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = (void *)MEMORY[0x192FD6450](i, a1);
    }
    else
    {
      uint64_t v9 = *(void **)(a1 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v9, sel_respondsToSelector_, *a3)) {
      objc_msgSend(v9, *a3, a2);
    }
    swift_unknownObjectRelease();
  }
LABEL_12:
  return swift_bridgeObjectRelease();
}

void sub_190CF37D0()
{
  uint64_t v1 = OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache;
  if (*(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache))
  {
    swift_retain();
    sub_190D07270();
    if (qword_1E92AA320 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_190D41778();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E92B3060);
    uint64_t v3 = sub_190D41758();
    os_log_type_t v4 = sub_190D41D48();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_190C6F000, v3, v4, "Reloaded RelevanceCache", v5, 2u);
      MEMORY[0x192FD7910](v5, -1, -1);
    }

    swift_release();
  }
  else
  {
    uint64_t v6 = v0;
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_cachePath);
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_cachePath + 8);
    type metadata accessor for RelevanceCache();
    uint64_t v9 = (void *)swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    void v9[2] = sub_190CD11BC(MEMORY[0x1E4FBC860]);
    v9[3] = v10;
    v9[4] = 0;
    v9[5] = v8;
    void v9[6] = v7;
    sub_190D07270();
    *(void *)(v6 + v1) = v9;
    swift_release();
    if (qword_1E92AA320 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_190D41778();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E92B3060);
    oslog = sub_190D41758();
    os_log_type_t v12 = sub_190D41D48();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_190C6F000, oslog, v12, "Loaded RelevanceCache", v13, 2u);
      MEMORY[0x192FD7910](v13, -1, -1);
    }
  }
}

uint64_t sub_190CF3D10()
{
  uint64_t v1 = *(NSObject **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue);
  uint64_t v10 = nullsub_1;
  uint64_t v11 = 0;
  uint64_t v6 = MEMORY[0x1E4F143A8];
  uint64_t v7 = 1107296256;
  uint64_t v8 = sub_190CCA8F0;
  uint64_t v9 = &block_descriptor_59;
  uint64_t v2 = _Block_copy(&v6);
  swift_release();
  dispatch_sync(v1, v2);
  _Block_release(v2);
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
  }
  else if (qword_1E92AA340 == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  uint64_t v3 = qword_1E92B3078;
  uint64_t v10 = nullsub_1;
  uint64_t v11 = 0;
  uint64_t v6 = MEMORY[0x1E4F143A8];
  uint64_t v7 = 1107296256;
  uint64_t v8 = sub_190CCA8F0;
  uint64_t v9 = &block_descriptor_62;
  os_log_type_t v4 = _Block_copy(&v6);
  swift_release();
  dispatch_sync(v3, v4);
  _Block_release(v4);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  return result;
}

id sub_190CF4120()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16ConnectionClientCMa_0();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s16ConnectionClientCMa_0()
{
  return self;
}

uint64_t sub_190CF41CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_190C72C5C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CF4210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CF4258()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_190CF4290(uint64_t a1, uint64_t a2)
{
  sub_190CF325C(a1, a2, *(void *)(v2 + 16));
}

void sub_190CF4298(uint64_t a1)
{
  sub_190D3A8D8(a1, *(void *)(v1 + 16));
}

uint64_t sub_190CF42A0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190CF42D8(uint64_t a1)
{
  return sub_190CF0748(a1, v1);
}

uint64_t sub_190CF42E0(void *a1)
{
  return sub_190CF0AB8(a1, v1);
}

void sub_190CF42E8()
{
}

uint64_t sub_190CF430C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA330);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_190CF436C(unsigned __int8 *a1)
{
  sub_190CF115C(a1, v1);
}

uint64_t sub_190CF4374()
{
  BSDispatchQueueAssert();
  uint64_t v1 = OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache);
  if (v2 || (sub_190CF37D0(), (uint64_t v2 = *(void *)(v0 + v1)) != 0))
  {
    swift_beginAccess();
    swift_retain();
    uint64_t v3 = swift_bridgeObjectRetain();
    id v4 = sub_190D062EC(v3);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_190CE10E0((unint64_t)v4);
    swift_bridgeObjectRelease();
    swift_retain();
    sub_190CF45CC(v5, v2);
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1E92AA320 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_190D41778();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E92B3060);
    uint64_t v9 = sub_190D41758();
    os_log_type_t v10 = sub_190D41D48();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_190C6F000, v9, v10, "Loaded relevance properties", v11, 2u);
      MEMORY[0x192FD7910](v11, -1, -1);
    }

    swift_release();
  }
  else
  {
    if (qword_1E92AA320 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_190D41778();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E92B3060);
    uint64_t v14 = sub_190D41758();
    os_log_type_t v15 = sub_190D41D28();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl(&dword_190C6F000, v14, v15, "Read from WidgetRelevanceCache while its unavailable, giving no results", v16, 2u);
      MEMORY[0x192FD7910](v16, -1, -1);
    }

    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

void sub_190CF45CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_190D41EB8();
    sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
    sub_190CF41CC((unint64_t *)&unk_1E92AA460, (unint64_t *)&unk_1E92AA530);
    sub_190D41CD8();
    uint64_t v3 = v28;
    uint64_t v26 = v29;
    uint64_t v4 = v30;
    uint64_t v5 = v31;
    unint64_t v6 = v32;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v11 = (uint64_t *)(a2 + 16);
  while (v3 < 0)
  {
    if (!sub_190D41EE8()) {
      goto LABEL_41;
    }
    sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = v27;
    swift_unknownObjectRelease();
    uint64_t v14 = v5;
    uint64_t v12 = v6;
    if (!v27) {
      goto LABEL_41;
    }
LABEL_33:
    swift_beginAccess();
    uint64_t v19 = *v11;
    if (*(void *)(*v11 + 16))
    {
      id v20 = v15;
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_190CDE798((uint64_t)v20);
      if (v22)
      {
        uint64_t v23 = *(void *)(v19 + 56) + 16 * v21;
        char v24 = *(unsigned char *)(v23 + 8);
        id v25 = *(id *)v23;

        swift_bridgeObjectRelease();
        if (v24)
        {
        }
        else
        {
          MEMORY[0x192FD6080]();
          if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_190D41C18();
          }
          sub_190D41C38();
          sub_190D41C08();
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
    uint64_t v5 = v14;
    unint64_t v6 = v12;
  }
  if (v6)
  {
    uint64_t v12 = (v6 - 1) & v6;
    unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v14 = v5;
LABEL_32:
    id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v13);
    if (!v15) {
      goto LABEL_41;
    }
    goto LABEL_33;
  }
  int64_t v16 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v16 >= v10) {
      goto LABEL_41;
    }
    unint64_t v17 = *(void *)(v26 + 8 * v16);
    uint64_t v14 = v5 + 1;
    if (!v17)
    {
      uint64_t v14 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_41;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v14);
      if (!v17)
      {
        uint64_t v14 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_41;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v14);
        if (!v17)
        {
          uint64_t v14 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_41;
          }
          unint64_t v17 = *(void *)(v26 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v5 + 5;
            if (v5 + 5 >= v10) {
              goto LABEL_41;
            }
            unint64_t v17 = *(void *)(v26 + 8 * v14);
            if (!v17)
            {
              uint64_t v18 = v5 + 6;
              while (v10 != v18)
              {
                unint64_t v17 = *(void *)(v26 + 8 * v18++);
                if (v17)
                {
                  uint64_t v14 = v18 - 1;
                  goto LABEL_31;
                }
              }
LABEL_41:
              sub_190CEA740();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_190CF4984(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_29;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    uint64_t v7 = 0;
    unint64_t v34 = v5 & 0xC000000000000001;
    unint64_t v33 = v5 + 32;
    uint64_t v28 = v3;
    uint64_t v29 = v6;
    unint64_t v30 = v5;
    uint64_t v31 = a2;
    while (1)
    {
      id v8 = v34 ? (id)MEMORY[0x192FD6450](v7, v5) : *(id *)(v33 + 8 * v7);
      uint64_t v9 = v8;
      id v10 = objc_msgSend(a2, sel_extensionIdentities, v28);
      if (v10)
      {
        uint64_t v11 = v10;
        type metadata accessor for CHSExtensionIdentity();
        sub_190CF4210((unint64_t *)&unk_1E92AC018, (void (*)(uint64_t))type metadata accessor for CHSExtensionIdentity);
        uint64_t v12 = sub_190D41CA8();

        id v13 = objc_msgSend(v9, sel_extensionIdentity);
        uint64_t v14 = v13;
        if ((v12 & 0xC000000000000001) != 0)
        {
          id v15 = v9;
          id v16 = v13;
          char v17 = sub_190D41EF8();

          swift_bridgeObjectRelease();
          if (v17) {
            return v7;
          }
        }
        else if (*(void *)(v12 + 16))
        {
          unint64_t v32 = v9;
          uint64_t v18 = sub_190D41DD8();
          uint64_t v19 = -1 << *(unsigned char *)(v12 + 32);
          unint64_t v20 = v18 & ~v19;
          if ((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
          {
            id v21 = *(id *)(*(void *)(v12 + 48) + 8 * v20);
            char v22 = sub_190D41DE8();

            if (v22)
            {
LABEL_26:

              swift_bridgeObjectRelease();
              return v7;
            }
            uint64_t v23 = ~v19;
            while (1)
            {
              unint64_t v20 = (v20 + 1) & v23;
              if (((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                break;
              }
              id v24 = *(id *)(*(void *)(v12 + 48) + 8 * v20);
              char v25 = sub_190D41DE8();

              if (v25) {
                goto LABEL_26;
              }
            }

            swift_bridgeObjectRelease();
            uint64_t v3 = v28;
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          unint64_t v5 = v30;
          a2 = v31;
          uint64_t v6 = v29;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
      if (__OFADD__(v7++, 1)) {
        break;
      }
      if (v7 == v6) {
        return 0;
      }
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_190CF4C8C(unint64_t *a1, void *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_190CF4984(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t i = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_57;
    }
    if (*a1 >> 62)
    {
LABEL_58:
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_190D420B8();
      swift_bridgeObjectRelease();
      if (i != v35) {
        goto LABEL_6;
      }
    }
    else if (i != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v10 = i - 4;
        unint64_t v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v12 = (id)MEMORY[0x192FD6450](i - 4);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_48;
          }
          id v12 = *(id *)(v11 + 8 * i);
        }
        id v13 = v12;
        id v14 = objc_msgSend(a2, sel_extensionIdentities);
        if (!v14) {
          break;
        }
        id v15 = v14;
        type metadata accessor for CHSExtensionIdentity();
        sub_190CF4210((unint64_t *)&unk_1E92AC018, (void (*)(uint64_t))type metadata accessor for CHSExtensionIdentity);
        uint64_t v16 = sub_190D41CA8();

        id v17 = objc_msgSend(v13, sel_extensionIdentity);
        char v18 = sub_190CEF518(v17, v16);

        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_35;
        }
        if (v10 != v6) {
          goto LABEL_16;
        }
LABEL_34:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_50;
        }
LABEL_35:
        unint64_t v31 = i - 3;
        if (__OFADD__(v10, 1)) {
          goto LABEL_49;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_190D420B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v32 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v31 == v32) {
          return v6;
        }
      }

      if (v10 == v6) {
        goto LABEL_34;
      }
LABEL_16:
      unint64_t v19 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v20 = (id)MEMORY[0x192FD6450](v6, *a1);
        unint64_t v19 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_20:
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_53;
          }
          if (v10 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_54;
          }
          id v21 = *(id *)(v19 + 8 * i);
          goto LABEL_23;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_51;
        }
        if (v6 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_52;
        }
        id v20 = *(id *)(v19 + 8 * v6 + 32);
        if ((v19 & 0xC000000000000001) == 0) {
          goto LABEL_20;
        }
      }
      id v21 = (id)MEMORY[0x192FD6450](i - 4, v19);
      unint64_t v19 = *a1;
LABEL_23:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v19;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v19 & 0x8000000000000000) != 0
        || (v19 & 0x4000000000000000) != 0)
      {
        sub_190CF86C0(v19);
        unint64_t v19 = v23;
        *a1 = v23;
      }
      id v24 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

      sub_190D41C08();
      unint64_t v25 = *a1;
      int v26 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v25;
      if (!v26 || (v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
      {
        sub_190CF86C0(v25);
        unint64_t v25 = v27;
        *a1 = v27;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_55;
      }
      uint64_t v28 = v25 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_56;
      }
      uint64_t v29 = *(void **)(v28 + 8 * i);
      *(void *)(v28 + 8 * i) = v20;

      sub_190D41C08();
      goto LABEL_34;
    }
    return v6;
  }
  unint64_t v33 = *a1;
  if (!(v33 >> 62)) {
    return *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_190D420B8();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_190CF5060(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_190D420B8();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190D420B8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190D420B8();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x192FD6460](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  id v14 = (char *)(v11 + 32 + 8 * v4);
  sub_190C72C5C(0, &qword_1E92AA348);
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_190D420B8();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_190D42118();
          __break(1u);
          return result;
        }
        id v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_190D420B8();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_190D41C08();
}

uint64_t sub_190CF537C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_190CF5394()
{
  return sub_190CF36BC(*(void *)(v0 + 16), *(void *)(v0 + 24), (SEL *)&selRef_widgetRelevancesDidChangeForRelevanceService_);
}

uint64_t objectdestroy_81Tm()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CF53FC()
{
  return sub_190CF36BC(*(void *)(v0 + 16), *(void *)(v0 + 24), (SEL *)&selRef_timelineEntryRelevancesDidChangeForRelevanceService_);
}

uint64_t sub_190CF5420()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190CF5460()
{
  return sub_190CF0DBC(*(void **)(v0 + 24));
}

uint64_t sub_190CF5488()
{
  return objectdestroy_21Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_21Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  return MEMORY[0x1F4186498](v1, 32, 7);
}

uint64_t sub_190CF54F0()
{
  return sub_190CF0A50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_190CF54F8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_190CF5530(int a1, void *a2)
{
  sub_190CF309C(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t CHSControlState.value.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CHSControlState.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t CHSControlState.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t CHSControlState.copyWithNewState(_:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

BOOL static CHSControlState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t CHSControlState.hash(into:)()
{
  return sub_190D423A8();
}

unint64_t CHSControlState.description.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_190CF5744()
{
  return 0x65756C6176;
}

uint64_t sub_190CF5758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_190D422D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_190CF57E8(uint64_t a1)
{
  unint64_t v2 = sub_190CF59A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CF5824(uint64_t a1)
{
  unint64_t v2 = sub_190CF59A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CHSControlState.deinit()
{
  return v0;
}

uint64_t CHSControlState.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t CHSControlState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA8E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CF59A4();
  sub_190D42418();
  sub_190D42258();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_190CF59A4()
{
  unint64_t result = qword_1E92AAA58;
  if (!qword_1E92AAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAA58);
  }
  return result;
}

uint64_t CHSControlState.hashValue.getter()
{
  return sub_190D423E8();
}

uint64_t CHSControlState.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  CHSControlState.init(from:)(a1);
  return v2;
}

void *CHSControlState.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  v11[1] = *v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA680);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CF59A4();
  sub_190D42408();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = sub_190D421A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v3[2] = v9;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_190CF5C20()
{
  return sub_190D423E8();
}

uint64_t sub_190CF5C68()
{
  return sub_190D423A8();
}

uint64_t sub_190CF5C98()
{
  return sub_190D423E8();
}

unint64_t sub_190CF5CE0()
{
  unint64_t result = qword_1E92AC030;
  if (!qword_1E92AC030)
  {
    type metadata accessor for CHSControlState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC030);
  }
  return result;
}

uint64_t type metadata accessor for CHSControlState()
{
  return self;
}

unint64_t sub_190CF5D58()
{
  return CHSControlState.description.getter();
}

void *sub_190CF5D7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = CHSControlState.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_190CF5DD4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA8E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CF59A4();
  sub_190D42418();
  sub_190D42258();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL sub_190CF5F08(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16);
}

uint64_t method lookup function for CHSControlState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CHSControlState);
}

uint64_t dispatch thunk of CHSControlState.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CHSControlState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for CHSControlState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190CF6014);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CHSControlState.CodingKeys()
{
  return &type metadata for CHSControlState.CodingKeys;
}

unint64_t sub_190CF6050()
{
  unint64_t result = qword_1E92AC038;
  if (!qword_1E92AC038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC038);
  }
  return result;
}

unint64_t sub_190CF60A8()
{
  unint64_t result = qword_1E92AAA68;
  if (!qword_1E92AAA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAA68);
  }
  return result;
}

unint64_t sub_190CF6100()
{
  unint64_t result = qword_1E92AAA60;
  if (!qword_1E92AAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAA60);
  }
  return result;
}

BOOL static ConcreteImageIOPrimitives.ImageIOError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConcreteImageIOPrimitives.ImageIOError.hash(into:)()
{
  return sub_190D423A8();
}

uint64_t ConcreteImageIOPrimitives.ImageIOError.hashValue.getter()
{
  return sub_190D423E8();
}

BOOL sub_190CF61DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConcreteImageIOPrimitives.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ConcreteImageIOPrimitives.init()()
{
  return v0;
}

void ConcreteImageIOPrimitives.makeImageDestination(at:typeIdentifier:numberOfImages:)(size_t a1@<X3>, CGImageDestinationRef *a2@<X8>)
{
  CFURLRef v4 = (const __CFURL *)sub_190D414F8();
  uint64_t v5 = (__CFString *)sub_190D41948();
  CGImageDestinationRef v6 = CGImageDestinationCreateWithURL(v4, v5, a1, 0);

  if (v6)
  {
    *a2 = v6;
  }
  else
  {
    sub_190CF62D8();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
  }
}

unint64_t sub_190CF62D8()
{
  unint64_t result = qword_1E92AA118;
  if (!qword_1E92AA118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA118);
  }
  return result;
}

void ConcreteImageIOPrimitives.addImage(_:to:options:)(CGImageRef image, CGImageDestination **a2, const __CFDictionary *a3)
{
  CFURLRef v4 = *a2;
  if (a3)
  {
    type metadata accessor for CFString(0);
    sub_190CF63BC();
    a3 = (const __CFDictionary *)sub_190D418A8();
  }
  CFDictionaryRef v5 = a3;
  CGImageDestinationAddImage(v4, image, a3);
}

unint64_t sub_190CF63BC()
{
  unint64_t result = qword_1E92AA060;
  if (!qword_1E92AA060)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA060);
  }
  return result;
}

uint64_t ConcreteImageIOPrimitives.finalizeImageDestination(_:)(CGImageDestinationRef *a1)
{
  uint64_t result = CGImageDestinationFinalize(*a1);
  if (!result)
  {
    sub_190CF62D8();
    swift_allocError();
    *uint64_t v2 = 1;
    return swift_willThrow();
  }
  return result;
}

void ConcreteImageIOPrimitives.makeImageSource(at:)(CGImageSourceRef *a1@<X8>)
{
  CFURLRef v2 = (const __CFURL *)sub_190D414F8();
  CGImageSourceRef v3 = CGImageSourceCreateWithURL(v2, 0);

  if (v3)
  {
    *a1 = v3;
  }
  else
  {
    sub_190CF62D8();
    swift_allocError();
    *CFURLRef v4 = 2;
    swift_willThrow();
  }
}

CGImageRef ConcreteImageIOPrimitives.getImage(index:from:)(size_t index, CGImageSourceRef *a2)
{
  return CGImageSourceCreateImageAtIndex(*a2, index, 0);
}

uint64_t ConcreteImageIOPrimitives.deinit()
{
  return v0;
}

uint64_t ConcreteImageIOPrimitives.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_190CF652C()
{
  unint64_t result = qword_1E92AC040;
  if (!qword_1E92AC040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC040);
  }
  return result;
}

void sub_190CF6580(size_t a1@<X3>, CGImageDestinationRef *a2@<X8>)
{
  CFURLRef v4 = (const __CFURL *)sub_190D414F8();
  CFDictionaryRef v5 = (__CFString *)sub_190D41948();
  CGImageDestinationRef v6 = CGImageDestinationCreateWithURL(v4, v5, a1, 0);

  if (v6)
  {
    *a2 = v6;
  }
  else
  {
    sub_190CF62D8();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
  }
}

void sub_190CF6640(CGImageRef image, CGImageDestination **a2, const __CFDictionary *a3)
{
  CFURLRef v4 = *a2;
  if (a3)
  {
    type metadata accessor for CFString(0);
    sub_190CF63BC();
    a3 = (const __CFDictionary *)sub_190D418A8();
  }
  CFDictionaryRef v5 = a3;
  CGImageDestinationAddImage(v4, image, a3);
}

uint64_t sub_190CF66D0(CGImageDestinationRef *a1)
{
  uint64_t result = CGImageDestinationFinalize(*a1);
  if (!result)
  {
    sub_190CF62D8();
    swift_allocError();
    *CFURLRef v2 = 1;
    return swift_willThrow();
  }
  return result;
}

void sub_190CF6730(CGImageSourceRef *a1@<X8>)
{
  CFURLRef v2 = (const __CFURL *)sub_190D414F8();
  CGImageSourceRef v3 = CGImageSourceCreateWithURL(v2, 0);

  if (v3)
  {
    *a1 = v3;
  }
  else
  {
    sub_190CF62D8();
    swift_allocError();
    *CFURLRef v4 = 2;
    swift_willThrow();
  }
}

CGImageRef sub_190CF67B8(size_t index, CGImageSourceRef *a2)
{
  return CGImageSourceCreateImageAtIndex(*a2, index, 0);
}

uint64_t type metadata accessor for ConcreteImageIOPrimitives()
{
  return self;
}

uint64_t method lookup function for ConcreteImageIOPrimitives(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConcreteImageIOPrimitives);
}

uint64_t dispatch thunk of ConcreteImageIOPrimitives.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t getEnumTagSinglePayload for ConcreteImageIOPrimitives.ImageIOError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConcreteImageIOPrimitives.ImageIOError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CF6978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcreteImageIOPrimitives.ImageIOError()
{
  return &type metadata for ConcreteImageIOPrimitives.ImageIOError;
}

ValueMetadata *type metadata accessor for ConcreteImageIOPrimitives.ImageDestination()
{
  return &type metadata for ConcreteImageIOPrimitives.ImageDestination;
}

ValueMetadata *type metadata accessor for ConcreteImageIOPrimitives.ImageSource()
{
  return &type metadata for ConcreteImageIOPrimitives.ImageSource;
}

__CFString *CHSControlSize.debugDescription.getter(uint64_t a1)
{
  uint64_t result = NSStringFromCHSControlSize(a1);
  if (result)
  {
    int v2 = result;
    uint64_t v3 = sub_190D41978();

    return (__CFString *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

__CFString *sub_190CF6A24()
{
  uint64_t result = NSStringFromCHSControlSize(*v0);
  if (result)
  {
    int v2 = result;
    uint64_t v3 = sub_190D41978();

    return (__CFString *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TypedIdentifier.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TypedIdentifier.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_190CF6AD4()
{
  return sub_190D41B98();
}

uint64_t sub_190CF6B48()
{
  return sub_190D41B38();
}

uint64_t sub_190CF6BAC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_190CF6C18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TypedIdentifier.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_190CF6C24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = TypedIdentifier.init(rawValue:)(*a1, a1[1], v5);
  uint64_t v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
  return result;
}

uint64_t static TypedIdentifier.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_190D422D8();
  }
}

uint64_t TypedIdentifier.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_190CF6CAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TypedIdentifier.init(stringLiteral:)(*a1, a1[1], a2);
}

uint64_t sub_190CF6CB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_190CF6CD4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190CF6D10()
{
  return swift_getWitnessTable();
}

uint64_t sub_190CF6D2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_190CF6D48()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of RawRepresentableIdentity.init(rawValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for IdentifierType()
{
  return &type metadata for IdentifierType;
}

ValueMetadata *type metadata accessor for IdentifierType.Bundle()
{
  return &type metadata for IdentifierType.Bundle;
}

ValueMetadata *type metadata accessor for IdentifierType.Bundle.Container()
{
  return &type metadata for IdentifierType.Bundle.Container;
}

ValueMetadata *type metadata accessor for IdentifierType.Bundle.Extension()
{
  return &type metadata for IdentifierType.Bundle.Extension;
}

ValueMetadata *type metadata accessor for IdentifierType.WidgetHost()
{
  return &type metadata for IdentifierType.WidgetHost;
}

uint64_t sub_190CF6DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t getEnumTagSinglePayload for FileManagerExtendedAttributeKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileManagerExtendedAttributeKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for TypedIdentifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t URL.setExtendedAttribute<A>(named:value:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v10 = v13[0];
    unint64_t v11 = v13[1];
  }
  else
  {
    sub_190D41478();
    swift_allocObject();
    sub_190D41468();
    sub_190D41448();
    uint64_t v10 = sub_190D41458();
    unint64_t v11 = v12;
    uint64_t result = swift_release();
    if (v2) {
      return result;
    }
  }
  MEMORY[0x1F4188790](result);
  v13[-4] = v10;
  v13[-3] = v11;
  v13[-2] = a1;
  v13[-1] = a2;
  sub_190D41578();
  return sub_190CD55F0(v10, v11);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.removeExtendedAttribute(named:)(Swift::String named)
{
}

uint64_t URL.extendedAttribute<A>(named:of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = MEMORY[0x1E4F277C0];
  uint64_t result = sub_190D41578();
  if (!v3)
  {
    if (a3 == v5)
    {
      return swift_dynamicCast();
    }
    else
    {
      sub_190D41438();
      swift_allocObject();
      sub_190D41428();
      sub_190D41418();
      swift_release();
      return sub_190CD55F0(v7, v8);
    }
  }
  return result;
}

unint64_t URL.ExtendedAttributeError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_190D41378();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL.ExtendedAttributeError();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CF81A8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *((void *)v8 + 2);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v10 + 64)], v2);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_190D41F68();
    sub_190D41A68();
    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    v13[1] = v9;
    sub_190D422B8();
    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    sub_190D42048();
    unint64_t v11 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_190D41F68();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000019;
    unint64_t v15 = 0x8000000190D5D8B0;
    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    return v14;
  }
  return v11;
}

uint64_t sub_190CF74AC(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D419D8();
  int v7 = removexattr(a1, (const char *)(v6 + 32), 0);
  uint64_t result = swift_release();
  if (v7 < 0)
  {
    MEMORY[0x192FD5C70](result);
    uint64_t result = sub_190D41798();
    if ((result & 0x100000000) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_190D41358();
      int v9 = sub_190D417A8();
      uint64_t result = sub_190D417A8();
      if (v9 != result)
      {
        type metadata accessor for URL.ExtendedAttributeError();
        sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
        swift_allocError();
        unint64_t v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370);
        *unint64_t v11 = a2;
        v11[1] = a3;
        void v11[2] = v7;
        sub_190D41378();
        swift_bridgeObjectRetain();
        sub_190CF83C0(MEMORY[0x1E4FBC860]);
        sub_190CF8F30(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
        sub_190D41498();
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t URL.setExtendedAttributeData(named:value:)()
{
  return sub_190D41578();
}

uint64_t sub_190CF76BC(const char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  value[2] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = a4;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v13 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      sub_190CEA33C(a2, a3);
      unint64_t v14 = (char *)sub_190D41398();
      if (!v14) {
        goto LABEL_8;
      }
      uint64_t v15 = sub_190D413C8();
      if (__OFSUB__((int)a2, v15)) {
LABEL_35:
      }
        __break(1u);
      v14 += (int)a2 - v15;
LABEL_8:
      uint64_t v16 = sub_190D413B8();
      if (v16 >= v13) {
        uint64_t v17 = (a2 >> 32) - (int)a2;
      }
      else {
        uint64_t v17 = v16;
      }
      if (v14) {
        size_t v18 = v17;
      }
      else {
        size_t v18 = 0;
      }
      uint64_t v6 = a4;
      uint64_t v19 = sub_190D419D8();
      int v11 = setxattr(a1, (const char *)(v19 + 32), v14, v18, 0, 0);
      swift_release();
      uint64_t result = sub_190CD55F0(a2, a3);
      if (v11 < 0)
      {
LABEL_29:
        type metadata accessor for URL.ExtendedAttributeError();
        sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
        uint64_t v29 = (void *)swift_allocError();
        *unint64_t v30 = v6;
        v30[1] = a5;
        v30[2] = v11;
        uint64_t v31 = swift_bridgeObjectRetain();
        MEMORY[0x192FD5C70](v31);
        uint64_t v32 = sub_190D41798();
        if ((v32 & 0x100000000) != 0)
        {

          __break(1u);
          JUMPOUT(0x190CF7AE8);
        }
        int v33 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370);
        sub_190D41378();
        LODWORD(value[0]) = v33;
        sub_190CF83C0(MEMORY[0x1E4FBC860]);
        sub_190CF8F30(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
        sub_190D41498();
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v20 = *(void *)(a2 + 16);
      uint64_t v21 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v22 = (char *)sub_190D41398();
      if (!v22) {
        goto LABEL_19;
      }
      uint64_t v23 = sub_190D413C8();
      if (__OFSUB__(v20, v23)) {
        goto LABEL_34;
      }
      v22 += v20 - v23;
LABEL_19:
      if (__OFSUB__(v21, v20)) {
        goto LABEL_33;
      }
      uint64_t v24 = sub_190D413B8();
      if (v24 >= v21 - v20) {
        size_t v25 = v21 - v20;
      }
      else {
        size_t v25 = v24;
      }
      if (v22) {
        size_t v26 = v25;
      }
      else {
        size_t v26 = 0;
      }
      uint64_t v27 = sub_190D419D8();
      int v11 = setxattr(a1, (const char *)(v27 + 32), v22, v26, 0, 0);
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v11 < 0) {
        goto LABEL_29;
      }
      return result;
    case 3uLL:
      memset(value, 0, 14);
      uint64_t v28 = sub_190D419D8();
      int v11 = setxattr(a1, (const char *)(v28 + 32), value, 0, 0, 0);
      uint64_t result = swift_release();
      if (v11 < 0) {
        goto LABEL_29;
      }
      return result;
    default:
      value[0] = a2;
      LOWORD(value[1]) = a3;
      BYTE2(value[1]) = BYTE2(a3);
      BYTE3(value[1]) = BYTE3(a3);
      BYTE4(value[1]) = BYTE4(a3);
      BYTE5(value[1]) = BYTE5(a3);
      uint64_t v10 = sub_190D419D8();
      int v11 = setxattr(a1, (const char *)(v10 + 32), value, BYTE6(a3), 0, 0);
      uint64_t result = swift_release();
      if (v11 < 0) {
        goto LABEL_29;
      }
      return result;
  }
}

uint64_t sub_190CF7AF8(const char *a1)
{
  return sub_190CF76BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void URL.extendedAttributeNames()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_190D419B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190D415A8();
  uint64_t v6 = sub_190D419D8();
  swift_bridgeObjectRelease();
  ssize_t v7 = listxattr((const char *)(v6 + 32), 0, 0, 0);
  swift_release();
  if (v7 == -1)
  {
    type metadata accessor for URL.ExtendedAttributeError();
    sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
    uint64_t v1 = (void *)swift_allocError();
    *size_t v18 = 0;
    v18[1] = 0xE000000000000000;
    v18[2] = -1;
    MEMORY[0x192FD5C70]();
    uint64_t v19 = sub_190D41798();
    if ((v19 & 0x100000000) != 0)
    {
LABEL_17:

      __break(1u);
      goto LABEL_18;
    }
    int v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370);
    sub_190D41378();
    int v25 = v20;
    sub_190CF83C0(MEMORY[0x1E4FBC860]);
    sub_190CF8F30(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
LABEL_12:
    sub_190D41498();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  unint64_t v8 = (char *)swift_slowAlloc();
  sub_190D415A8();
  uint64_t v9 = sub_190D419D8();
  swift_bridgeObjectRelease();
  ssize_t v10 = listxattr((const char *)(v9 + 32), v8, v7, 0);
  swift_release();
  if (v10 == -1)
  {
    type metadata accessor for URL.ExtendedAttributeError();
    sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
    uint64_t v1 = (void *)swift_allocError();
    void *v21 = 0;
    v21[1] = 0xE000000000000000;
    void v21[2] = -1;
    MEMORY[0x192FD5C70]();
    uint64_t v22 = sub_190D41798();
    if ((v22 & 0x100000000) != 0)
    {
LABEL_18:

      __break(1u);
      return;
    }
    int v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370);
    sub_190D41378();
    int v26 = v23;
    sub_190CF83C0(MEMORY[0x1E4FBC860]);
    sub_190CF8F30(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
    goto LABEL_12;
  }
  sub_190D41998();
  uint64_t v11 = sub_190D419A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v12 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithBytes_length_encoding_, v8, v7, v11);
  if (v12)
  {
    uint64_t v13 = v12;
    unint64_t v14 = (void *)sub_190D41948();
    id v15 = objc_msgSend(v13, sel_componentsSeparatedByString_, v14);

    uint64_t v16 = sub_190D41BE8();
    if (*(void *)(v16 + 16))
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v17 = *(void *)(v16 + 16);
        if (v17)
        {
LABEL_7:
          *(void *)(v16 + 16) = v17 - 1;
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v16 = (uint64_t)sub_190CF873C(v16);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17) {
      goto LABEL_7;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
}

uint64_t URL.extendedAttributeData(named:)()
{
  uint64_t result = sub_190D41578();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_190CF7FE4@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_190D419D8();
  ssize_t v10 = getxattr(a1, (const char *)(v9 + 32), 0, 0, 0, 0);
  swift_release();
  if (v10 < 1)
  {
    type metadata accessor for URL.ExtendedAttributeError();
    sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
    swift_allocError();
    uint64_t *v14 = a2;
    v14[1] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    uint64_t v15 = sub_190CF9748(v10);
    unint64_t v16 = v11;
    swift_bridgeObjectRetain();
    sub_190CF8764(&v15, a1, a2, a3, v10);
    uint64_t result = v15;
    unint64_t v13 = v16;
    if (v4)
    {
      return sub_190CD55F0(v15, v16);
    }
    else
    {
      *a4 = v15;
      a4[1] = v13;
    }
  }
  return result;
}

uint64_t sub_190CF8140@<X0>(const char *a1@<X0>, void *a2@<X8>)
{
  return sub_190CF7FE4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t type metadata accessor for URL.ExtendedAttributeError()
{
  uint64_t result = qword_1E92AA748;
  if (!qword_1E92AA748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_190CF81A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL.ExtendedAttributeError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_190CF820C(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v11 = sub_190D419D8();
  ssize_t v12 = getxattr(a3, (const char *)(v11 + 32), a1, a6, 0, 0);
  swift_release();
  if (v12 < 1)
  {
    type metadata accessor for URL.ExtendedAttributeError();
    sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
    unint64_t v13 = (void *)swift_allocError();
    void *v14 = a4;
    v14[1] = a5;
    void v14[2] = v12;
    uint64_t v15 = swift_bridgeObjectRetain();
    MEMORY[0x192FD5C70](v15);
    if ((sub_190D41798() & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370);
      sub_190D41378();
      sub_190CF83C0(MEMORY[0x1E4FBC860]);
      sub_190CF8F30(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
      sub_190D41498();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

unint64_t sub_190CF83C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABA08);
  uint64_t v2 = sub_190D42108();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190CF9680(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_190CF84EC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_190CD0AB0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190CF84EC(uint64_t a1, uint64_t a2)
{
  sub_190D42398();
  sub_190D41A18();
  uint64_t v4 = sub_190D423E8();
  return sub_190CF8564(a1, a2, v4);
}

unint64_t sub_190CF8564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_190D422D8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_190D422D8() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_190D422D8()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

char *sub_190CF86AC(uint64_t a1)
{
  return sub_190CDD6F0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_190CF86C0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190D420B8();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x192FD6460);
}

char *sub_190CF873C(uint64_t a1)
{
  return sub_190CDD3F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_190CF8750(void *a1)
{
  return sub_190CDDB44(0, a1[2], 0, a1);
}

uint64_t sub_190CF8764(void *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = a1[1];
  switch(v5 >> 62)
  {
    case 1uLL:
      *(void *)&long long v31 = *a1;
      *((void *)&v31 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain();
      sub_190CF8A0C((int *)&v31, a2, a3, a4, a5);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v31 + 1) | 0x4000000000000000;
      *a1 = v31;
      a1[1] = v17;
      return result;
    case 2uLL:
      *(void *)&long long v31 = *a1;
      *((void *)&v31 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      sub_190D415E8();
      uint64_t v18 = *((void *)&v31 + 1);
      uint64_t v19 = *(void *)(v31 + 16);
      uint64_t v30 = *(void *)(v31 + 24);
      uint64_t v20 = sub_190D41398();
      if (!v20)
      {
        __break(1u);
        JUMPOUT(0x190CF89FCLL);
      }
      uint64_t v21 = v20;
      uint64_t v22 = sub_190D413C8();
      uint64_t v23 = v19 - v22;
      if (__OFSUB__(v19, v22))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v24 = __OFSUB__(v30, v19);
      uint64_t v25 = v30 - v19;
      if (v24) {
        goto LABEL_14;
      }
      uint64_t v26 = sub_190D413B8();
      if (v26 >= v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = v26;
      }
      sub_190CF820C((void *)(v21 + v23), v21 + v23 + v27, a2, a3, a4, a5);
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v31;
      a1[1] = v18 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v31 + 7) = 0;
      *(void *)&long long v31 = 0;
      sub_190CF820C(&v31, (uint64_t)&v31, a2, a3, a4, a5);
      return swift_bridgeObjectRelease();
    default:
      *(void *)&long long v31 = *a1;
      WORD4(v31) = v5;
      BYTE10(v31) = BYTE2(v5);
      BYTE11(v31) = BYTE3(v5);
      BYTE12(v31) = BYTE4(v5);
      BYTE13(v31) = BYTE5(v5);
      BYTE14(v31) = BYTE6(v5);
      sub_190CF820C(&v31, (uint64_t)&v31 + BYTE6(v5), a2, a3, a4, a5);
      uint64_t v11 = v31;
      uint64_t v12 = DWORD2(v31);
      uint64_t v13 = BYTE12(v31);
      uint64_t v14 = BYTE13(v31);
      uint64_t v15 = BYTE14(v31);
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v11;
      a1[1] = v12 | (v13 << 32) | (v14 << 40) | (v15 << 48);
      return result;
  }
}

uint64_t sub_190CF8A0C(int *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t result = sub_190D41608();
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  if ((int)v11 < (int)v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v18 = a4;
  uint64_t v19 = a2;
  uint64_t result = sub_190D41398();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v13 = result;
  uint64_t result = sub_190D413C8();
  uint64_t v14 = v12 - result;
  if (__OFSUB__(v12, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v15 = v11 - v12;
  uint64_t v16 = sub_190D413B8();
  if (v16 >= v15) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v16;
  }
  sub_190CF820C((void *)(v13 + v14), v13 + v14 + v17, v19, a3, v18, a5);
  return swift_bridgeObjectRelease();
}

uint64_t _s10Foundation3URLV14ChronoServicesE22ExtendedAttributeErrorO2eeoiySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_190D41378();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = type metadata accessor for URL.ExtendedAttributeError();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (uint64_t *)((char *)&v44 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC048);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v19[*(int *)(v17 + 56)];
  sub_190CF81A8(a1, (uint64_t)v19);
  sub_190CF81A8(a2, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_190CF81A8((uint64_t)v19, (uint64_t)v15);
    uint64_t v36 = *v15;
    uint64_t v37 = v15[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v36 == *(void *)v20 && v37 == *((void *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v39 = sub_190D422D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
LABEL_22:
          sub_190CF933C((uint64_t)v19);
          goto LABEL_23;
        }
      }
      sub_190CF933C((uint64_t)v19);
      char v40 = 1;
      return v40 & 1;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_190CF96E8((uint64_t)v19);
LABEL_23:
    char v40 = 0;
    return v40 & 1;
  }
  id v47 = v9;
  uint64_t v48 = v4;
  sub_190CF81A8((uint64_t)v19, (uint64_t)v13);
  uint64_t v22 = *(void *)v13;
  uint64_t v21 = *((void *)v13 + 1);
  uint64_t v23 = *((void *)v13 + 2);
  uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
  uint64_t v25 = &v13[v24];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(&v13[v24], v48);
    goto LABEL_17;
  }
  uint64_t v27 = *(void *)v20;
  uint64_t v26 = *((void *)v20 + 1);
  uint64_t v45 = *((void *)v20 + 2);
  uint64_t v46 = v23;
  uint64_t v28 = v22;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  uint64_t v30 = v25;
  uint64_t v31 = v48;
  v29(v47, v30, v48);
  v29(v7, &v20[v24], v31);
  if (v28 == v27 && v21 == v26)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v34 = v49;
    uint64_t v35 = v47;
  }
  else
  {
    char v33 = sub_190D422D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v49;
    uint64_t v35 = v47;
    if ((v33 & 1) == 0) {
      goto LABEL_21;
    }
  }
  if (v46 != v45)
  {
LABEL_21:
    id v42 = *(void (**)(char *, uint64_t))(v34 + 8);
    v42(v7, v31);
    v42(v35, v31);
    goto LABEL_22;
  }
  sub_190CF8F30(&qword_1E92AA368, MEMORY[0x1E4F26C30]);
  char v40 = sub_190D41488();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v7, v31);
  v41(v35, v31);
  sub_190CF933C((uint64_t)v19);
  return v40 & 1;
}

uint64_t sub_190CF8F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190CF8F78()
{
  return sub_190CF8F30(&qword_1E92AA740, (void (*)(uint64_t))type metadata accessor for URL.ExtendedAttributeError);
}

uint64_t *_s22ExtendedAttributeErrorOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_190D41378();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s22ExtendedAttributeErrorOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
    uint64_t v5 = sub_190D41378();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *_s22ExtendedAttributeErrorOwcp(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_190D41378();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s22ExtendedAttributeErrorOwca(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_190CF933C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_190D41378();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_190CF933C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL.ExtendedAttributeError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *_s22ExtendedAttributeErrorOwtk(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_190D41378();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s22ExtendedAttributeErrorOwta(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_190CF933C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA370) + 64);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_190D41378();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s22ExtendedAttributeErrorOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s22ExtendedAttributeErrorOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_190CF95BC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_190CF95CC()
{
  v2[4] = &unk_190D4C508;
  uint64_t result = sub_190D41378();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_190CF9680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92ABA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190CF96E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC048);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190CF9748(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_190D413D8();
      swift_allocObject();
      sub_190D413A8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_190D41618();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_190CF97E8(const char *a1)
{
  return sub_190CF7AF8(a1);
}

uint64_t sub_190CF9800@<X0>(const char *a1@<X0>, void *a2@<X8>)
{
  return sub_190CF8140(a1, a2);
}

uint64_t Encodable.toOPACKData()(uint64_t a1, uint64_t a2)
{
  sub_190D416E8();
  v8[3] = a1;
  v8[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v2, a1);
  uint64_t v6 = sub_190D416D8();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v6;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t static Decodable.fromOPACKData(_:)()
{
  return sub_190D416C8();
}

uint64_t NSSecureCoding<>.toOPACKData()()
{
  return sub_190D416B8();
}

uint64_t static NSSecureCoding<>.fromOPACKData(_:)()
{
  return sub_190D416A8();
}

void NSCoder.chsEncodeCodable(_:forKey:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = Encodable.toOPACKData()(v3, v4);
  unint64_t v7 = v6;
  uint64_t v8 = (void *)sub_190D41628();
  sub_190CD55F0(v5, v7);
  id v9 = v8;
  id v10 = (id)sub_190D41948();
  objc_msgSend(v2, sel_encodeObject_forKey_, v9, v10);
}

uint64_t NSCoder.chsDecodeCodable<A>(of:forKey:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_190CFA270();
  uint64_t v6 = sub_190D41DB8();
  if (v6)
  {
    unint64_t v7 = (void *)v6;
    sub_190D41638();
  }
  if (qword_1E92AA5B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_190D41778();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E92B30A0);
  id v9 = sub_190D41758();
  os_log_type_t v10 = sub_190D41D28();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_190C6F000, v9, v10, "Unable to decode boxed codable = missing data", v11, 2u);
    MEMORY[0x192FD7910](v11, -1, -1);
  }

  id v12 = objc_msgSend(self, sel_chs_initWithErrorCode_, 8);
  uint64_t v13 = (void *)sub_190D414A8();

  objc_msgSend(v3, sel_failWithError_, v13);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  return v14(a2, 1, 1, a1);
}

uint64_t sub_190CFA238(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

unint64_t sub_190CFA270()
{
  unint64_t result = qword_1E92AC058;
  if (!qword_1E92AC058)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AC058);
  }
  return result;
}

uint64_t sub_190CFA2B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_190D3B27C(*a1, *a2);
}

uint64_t sub_190CFA2BC()
{
  return sub_190D3B9A8();
}

uint64_t sub_190CFA2C4()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190CFA350()
{
  return sub_190D3C208();
}

uint64_t sub_190CFA358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CFAE84();
  *a1 = result;
  return result;
}

void sub_190CFA388(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 1684957547;
  if (*v1 != 1)
  {
    unint64_t v4 = 0xD000000000000013;
    unint64_t v3 = 0x8000000190D5C0B0;
  }
  if (*v1)
  {
    unint64_t v2 = v4;
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v5 = 0x8000000190D5C090;
  }
  *a1 = v2;
  a1[1] = v5;
}

unint64_t sub_190CFA3E4()
{
  unint64_t v1 = 1684957547;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_190CFA43C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CFAE84();
  *a1 = result;
  return result;
}

void sub_190CFA464(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_190CFA470(uint64_t a1)
{
  unint64_t v2 = sub_190CFA804();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CFA4AC(uint64_t a1)
{
  unint64_t v2 = sub_190CFA804();
  return MEMORY[0x1F41862B0](a1, v2);
}

id CHSControlIdentity.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA920);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CFA804();
  sub_190D42408();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    type metadata accessor for CHSExtensionIdentity();
    char v27 = 0;
    sub_190CFAB90(&qword_1E92AA918);
    sub_190D421B8();
    id v9 = v25;
    LOBYTE(v25) = 1;
    uint64_t v23 = sub_190D42188();
    uint64_t v24 = v11;
    LOBYTE(v25) = 2;
    char v12 = sub_190D421F8();
    if (v12)
    {
      char v27 = 2;
      sub_190CFA858();
      sub_190D421B8();
      uint64_t v13 = (uint64_t)v25;
      uint64_t v14 = v26;
      v20[1] = sub_190D416E8();
      sub_190CEC1C0();
      uint64_t v21 = v13;
      uint64_t v22 = v14;
      uint64_t v15 = sub_190D416A8();
      unint64_t v19 = (unint64_t)v22;
      uint64_t v22 = (void *)v15;
      sub_190CD55F0(v21, v19);
    }
    else
    {
      uint64_t v22 = 0;
    }
    id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v17 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
    uint64_t v18 = v22;
    id v3 = objc_msgSend(v16, sel_initWithExtensionIdentity_kind_intentReference_, v9, v17, v22);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v3;
}

unint64_t sub_190CFA804()
{
  unint64_t result = qword_1E92AAB00;
  if (!qword_1E92AAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAB00);
  }
  return result;
}

unint64_t sub_190CFA858()
{
  unint64_t result = qword_1E92AA688;
  if (!qword_1E92AA688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA688);
  }
  return result;
}

void CHSControlIdentity.encode(to:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CFA804();
  sub_190D42418();
  id v9 = objc_msgSend(v3, sel_extensionIdentity);
  uint64_t v17 = (uint64_t)v9;
  char v19 = 0;
  type metadata accessor for CHSExtensionIdentity();
  sub_190CFAB90(&qword_1E92AAA70);
  sub_190D42268();

  if (v2
    || (id v10 = objc_msgSend(v3, sel_kind),
        sub_190D41978(),
        v10,
        LOBYTE(v17) = 1,
        sub_190D42238(),
        swift_bridgeObjectRelease(),
        (id v11 = objc_msgSend(v3, sel_intentReference)) == 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    char v12 = v11;
    sub_190D416E8();
    uint64_t v13 = sub_190D416B8();
    unint64_t v15 = v14;
    uint64_t v17 = v13;
    unint64_t v18 = v14;
    char v19 = 2;
    sub_190CFABD4();
    sub_190D42268();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    sub_190CD55F0(v13, v15);
  }
}

uint64_t sub_190CFAB90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CHSExtensionIdentity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190CFABD4()
{
  unint64_t result = qword_1E92AA928;
  if (!qword_1E92AA928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA928);
  }
  return result;
}

id sub_190CFAC28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = CHSControlIdentity.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_190CFAC54(void *a1)
{
}

unsigned char *_s10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CFAD44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

unint64_t sub_190CFAD80()
{
  unint64_t result = qword_1E92AC060;
  if (!qword_1E92AC060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC060);
  }
  return result;
}

unint64_t sub_190CFADD8()
{
  unint64_t result = qword_1E92AAAF8;
  if (!qword_1E92AAAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAAF8);
  }
  return result;
}

unint64_t sub_190CFAE30()
{
  unint64_t result = qword_1E92AAB08;
  if (!qword_1E92AAB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAB08);
  }
  return result;
}

uint64_t sub_190CFAE84()
{
  unint64_t v0 = sub_190D42138();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void *CHSWidgetExtensionProviderOptions.controlsPredicate.getter()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHSWidgetExtensionProviderOptions_controlsPredicate);
  id v2 = v1;
  return v1;
}

void *CHSWidgetExtensionProviderOptions.widgetsPredicate.getter()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___CHSWidgetExtensionProviderOptions_widgetsPredicate);
  id v2 = v1;
  return v1;
}

uint64_t CHSWidgetExtensionProviderOptions.includeIntents.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSWidgetExtensionProviderOptions_includeIntents);
}

void sub_190CFAF70()
{
  id v0 = objc_msgSend(self, sel_visible);
  id v1 = [self all];
  id v2 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_includeIntents_, v0, v1, 1);

  qword_1E92AA270 = (uint64_t)v2;
}

id static CHSWidgetExtensionProviderOptions.widgets.getter()
{
  id v0 = objc_msgSend(self, sel_visible);
  id v1 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_, v0, 0);

  return v1;
}

id static CHSWidgetExtensionProviderOptions.visibleControls.getter()
{
  return sub_190CFB784((SEL *)&selRef_visible);
}

id static CHSWidgetExtensionProviderOptions.allControls.getter()
{
  return sub_190CFB784((SEL *)&selRef_all);
}

uint64_t CHSWidgetExtensionProviderOptions.hash.getter()
{
  id v1 = v0;
  sub_190D423F8();
  id v2 = objc_msgSend(v0, sel_widgetsPredicate);
  if (v2)
  {
    int v3 = v2;
    sub_190D423B8();
    id v4 = v3;
    sub_190D41DF8();
  }
  else
  {
    sub_190D423B8();
  }
  id v5 = objc_msgSend(v1, sel_controlsPredicate);
  if (v5)
  {
    unsigned int v6 = v5;
    objc_msgSend(v5, sel_includeVisible);

    sub_190D423B8();
  }
  sub_190D423B8();
  id v7 = objc_msgSend(v1, sel_controlsPredicate);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_includeHidden);

    sub_190D423B8();
  }
  sub_190D423B8();
  objc_msgSend(v1, sel_includeIntents);
  sub_190D423B8();
  return sub_190D423D8();
}

uint64_t CHSWidgetExtensionProviderOptions.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_190CCE4DC(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_190CCE544((uint64_t)v6);
    goto LABEL_6;
  }
  type metadata accessor for CHSWidgetExtensionProviderOptions(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    unsigned __int8 v3 = 0;
    return v3 & 1;
  }
  if (v5 == v1)
  {

    unsigned __int8 v3 = 1;
  }
  else
  {
    unsigned __int8 v3 = sub_190CFC7A4(v1, v5);
  }
  return v3 & 1;
}

uint64_t type metadata accessor for CHSWidgetExtensionProviderOptions(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AA5C8);
}

uint64_t CHSWidgetExtensionProviderOptions.description.getter()
{
  sub_190D41F68();
  sub_190D41A68();
  sub_190D42048();
  sub_190D41A68();
  objc_msgSend(v0, sel_includeIntents);
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();

  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  id v1 = objc_msgSend(v0, sel_controlsPredicate);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_description);

    sub_190D41978();
  }
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  return 0;
}

id sub_190CFB6FC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];
  id v4 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_, 0, v3);

  return v4;
}

id static CHSWidgetExtensionProviderOptions.controls.getter()
{
  return sub_190CFB784((SEL *)&selRef_visible);
}

id sub_190CFB784(SEL *a1)
{
  id v1 = [self *a1];
  id v2 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_, 0, v1);

  return v2;
}

void __swiftcall CHSWidgetExtensionProviderOptions.init()(CHSWidgetExtensionProviderOptions *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void CHSWidgetExtensionProviderOptions.init()()
{
}

uint64_t CHSWidgetExtensionProviderOptions.matchesEverything.getter()
{
  if (qword_1E92AA278 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1E92AA270;
  unsigned __int8 v2 = sub_190CFC7A4(v0, v1);

  return v2 & 1;
}

void __swiftcall CHSWidgetExtensionProviderOptions.merged(with:)(CHSWidgetExtensionProviderOptions *__return_ptr retstr, CHSWidgetExtensionProviderOptions *with)
{
  id v3 = objc_msgSend(v2, sel_controlsPredicate);

  id v4 = with;
  if (!v3)
  {
    id v5 = [(CHSWidgetExtensionProviderOptions *)v29 widgetsPredicate];
    if (!v5)
    {
      uint64_t v26 = with;
      goto LABEL_34;
    }

    id v4 = with;
  }
  unsigned int v6 = [(CHSWidgetExtensionProviderOptions *)v4 controlsPredicate];

  if (v6) {
    goto LABEL_7;
  }
  uint64_t v7 = [(CHSWidgetExtensionProviderOptions *)with widgetsPredicate];
  if (v7)
  {

LABEL_7:
    BOOL v8 = [(CHSWidgetExtensionProviderOptions *)v29 includeIntents]
      || [(CHSWidgetExtensionProviderOptions *)with includeIntents];
    id v9 = [(CHSWidgetExtensionProviderOptions *)v29 widgetsPredicate];

    if (v9)
    {
      BOOL v10 = 1;
    }
    else
    {
      id v11 = [(CHSWidgetExtensionProviderOptions *)with widgetsPredicate];

      BOOL v10 = v11 != 0;
    }
    char v12 = [(CHSWidgetExtensionProviderOptions *)v29 controlsPredicate];
    if (v12
      && (uint64_t v13 = v12,
          unsigned __int8 v14 = [(CHSControlDescriptorsPredicate *)v12 includeVisible],
          v13,
          (v14 & 1) != 0))
    {
      uint64_t v15 = 1;
    }
    else
    {
      uint64_t v16 = [(CHSWidgetExtensionProviderOptions *)with controlsPredicate];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v15 = [(CHSControlDescriptorsPredicate *)v16 includeVisible];
      }
      else
      {
        uint64_t v15 = 0;
      }
    }
    unint64_t v18 = [(CHSWidgetExtensionProviderOptions *)v29 controlsPredicate];
    if (v18)
    {
      char v19 = v18;
      unsigned int v20 = [(CHSControlDescriptorsPredicate *)v18 includeHidden];

      if (v20)
      {
        uint64_t v21 = 1;
        if (!v10)
        {
          id v22 = 0;
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    uint64_t v23 = [(CHSWidgetExtensionProviderOptions *)with controlsPredicate];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v21 = [(CHSControlDescriptorsPredicate *)v23 includeHidden];

      if (v10)
      {
LABEL_25:
        id v22 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetDescriptorsPredicate), sel_init);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v21 = 0;
      if (v10) {
        goto LABEL_25;
      }
    }
    id v22 = 0;
LABEL_28:
    if ((v15 | v21) != 1)
    {
      id v25 = 0;
      goto LABEL_31;
    }
LABEL_29:
    id v25 = objc_msgSend(objc_allocWithZone((Class)CHSControlDescriptorsPredicate), sel_initIncludingVisible_hidden_, v15, v21);
LABEL_31:
    objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_includeIntents_, v22, v25, v8);

    return;
  }
  uint64_t v26 = v29;
LABEL_34:
  char v27 = v26;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.matches(extension:)(CHSWidgetExtension *extension)
{
  id v3 = objc_msgSend(v1, sel_widgetsPredicate);
  if (!v3
    || (v3,
        (id v4 = [(CHSWidgetExtension *)extension orderedDescriptors]) == 0))
  {
LABEL_8:
    id v10 = objc_msgSend(v1, sel_controlsPredicate);

    if (v10)
    {
      id v11 = [(CHSWidgetExtension *)extension orderedControlDescriptors];
      if (v11)
      {
        char v12 = v11;
        sub_190C72C5C(0, (unint64_t *)&unk_1E92AA5A0);
        unint64_t v13 = sub_190D41BE8();

        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_190D420B8();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_12;
          }
        }
        else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_12:
          id v14 = v1;
          unsigned __int8 v8 = sub_190CFC93C(v13, v14, (SEL *)&selRef_matchesControlDescriptor_);
          swift_bridgeObjectRelease();

          return v8 & 1;
        }
        swift_bridgeObjectRelease();
      }
    }
    unsigned __int8 v8 = 0;
    return v8 & 1;
  }
  id v5 = v4;
  sub_190C72C5C(0, (unint64_t *)&unk_1E92AA728);
  unint64_t v6 = sub_190D41BE8();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_190D420B8();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_5:
  id v7 = v1;
  unsigned __int8 v8 = sub_190CFC93C(v6, v7, (SEL *)&selRef_matchesWidgetDescriptor_);
  swift_bridgeObjectRelease();

  return v8 & 1;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.matches(widgetDescriptor:)(CHSWidgetDescriptor *widgetDescriptor)
{
  id v2 = objc_msgSend(v1, sel_widgetsPredicate);
  id v3 = v2;
  if (v2) {

  }
  return v3 != 0;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.matches(controlDescriptor:)(CHSControlDescriptor *controlDescriptor)
{
  id v3 = objc_msgSend(v1, sel_controlsPredicate);
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  if (!objc_msgSend(v3, sel_includeVisible)
    || [(CHSControlDescriptor *)controlDescriptor hiddenControl])
  {
    if (objc_msgSend(v4, sel_includeHidden))
    {
      unsigned __int8 v5 = [(CHSControlDescriptor *)controlDescriptor hiddenControl];

      if (v5) {
        return 1;
      }
    }
    else
    {
    }
    return 0;
  }

  return 1;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.isSubset(of:)(CHSWidgetExtensionProviderOptions *of)
{
  id v3 = objc_msgSend(v1, sel_widgetsPredicate);

  if (v3)
  {
    id v4 = [(CHSWidgetExtensionProviderOptions *)of widgetsPredicate];

    if (!v4) {
      goto LABEL_13;
    }
  }
  id v5 = objc_msgSend(v1, sel_controlsPredicate);

  if (v5)
  {
    unint64_t v6 = [(CHSWidgetExtensionProviderOptions *)of controlsPredicate];

    if (!v6) {
      goto LABEL_13;
    }
  }
  if (!objc_msgSend(v1, sel_includeIntents)
    || (BOOL v7 = [(CHSWidgetExtensionProviderOptions *)of includeIntents]))
  {
    id v8 = objc_msgSend(v1, sel_controlsPredicate);
    if (!v8) {
      goto LABEL_16;
    }
    uint64_t v9 = v8;
    id v10 = [(CHSWidgetExtensionProviderOptions *)of controlsPredicate];
    if (v10)
    {
      id v11 = v10;
      if (objc_msgSend(v9, sel_includeVisible)
        && ![(CHSControlDescriptorsPredicate *)v11 includeVisible])
      {

        LOBYTE(v7) = 0;
        return v7;
      }
      if (objc_msgSend(v9, sel_includeHidden))
      {
        unsigned __int8 v12 = [(CHSControlDescriptorsPredicate *)v11 includeHidden];

        if ((v12 & 1) == 0)
        {
LABEL_13:
          LOBYTE(v7) = 0;
          return v7;
        }
LABEL_16:
        LOBYTE(v7) = 1;
        return v7;
      }
    }
    goto LABEL_16;
  }
  return v7;
}

uint64_t static CHSWidgetExtensionProviderOptions.supportsSecureCoding.getter()
{
  return byte_1E92AC068;
}

uint64_t static CHSWidgetExtensionProviderOptions.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92AC068 = a1;
  return result;
}

uint64_t (*static CHSWidgetExtensionProviderOptions.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall CHSWidgetExtensionProviderOptions.encode(with:)(NSCoder with)
{
  id v3 = objc_msgSend(v1, sel_controlsPredicate);
  id v4 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  id v5 = objc_msgSend(v1, sel_widgetsPredicate);
  unint64_t v6 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  id v7 = objc_msgSend(v1, sel_includeIntents);
  id v8 = (id)sub_190D41948();
  [(objc_class *)with.super.isa encodeBool:v7 forKey:v8];
}

void __swiftcall CHSWidgetExtensionProviderOptions.init(coder:)(CHSWidgetExtensionProviderOptions_optional *__return_ptr retstr, NSCoder coder)
{
}

id CHSWidgetExtensionProviderOptions.init(coder:)(void *a1)
{
  id v2 = v1;
  type metadata accessor for CHSControlDescriptorsPredicate(0);
  id v4 = (void *)sub_190D41DB8();
  type metadata accessor for CHSWidgetDescriptorsPredicate(0);
  id v5 = (void *)sub_190D41DB8();
  unint64_t v6 = (void *)sub_190D41948();
  id v7 = objc_msgSend(a1, sel_decodeBoolForKey_, v6);

  id v8 = objc_msgSend(v2, sel_initWithWidgetsPredicate_controlsPredicate_includeIntents_, v5, v4, v7);
  return v8;
}

id sub_190CFC7A4(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_widgetsPredicate);
  id v5 = objc_msgSend(a2, sel_widgetsPredicate);
  unint64_t v6 = v5;
  if (v4)
  {
    if (v5)
    {
      type metadata accessor for CHSWidgetDescriptorsPredicate(0);
      id v7 = v4;
      char v8 = sub_190D41DE8();

      if ((v8 & 1) == 0) {
        return 0;
      }
LABEL_7:
      id v9 = objc_msgSend(a1, sel_controlsPredicate);
      id v10 = objc_msgSend(a2, sel_controlsPredicate);
      id v11 = v10;
      if (v9)
      {

        if (v11)
        {

          if (v9 == v11) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        if (!v10) {
          goto LABEL_16;
        }
      }
      id result = objc_msgSend(a1, sel_controlsPredicate);
      if (!result) {
        return result;
      }
      unint64_t v13 = result;
      id v14 = objc_msgSend(a2, sel_controlsPredicate);
      unsigned int v15 = objc_msgSend(v13, sel_isEqual_, v14);

      if (!v15) {
        return 0;
      }
LABEL_16:
      unsigned int v16 = objc_msgSend(a1, sel_includeIntents);
      return (id)(v16 ^ objc_msgSend(a2, sel_includeIntents) ^ 1);
    }
  }
  else
  {
    if (!v5) {
      goto LABEL_7;
    }
  }
  return 0;
}

id sub_190CFC93C(unint64_t a1, void *a2, SEL *a3)
{
  if (a1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_190D420B8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD6450](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      id v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v11 = objc_msgSend(a2, *a3, v8);

      if ((v11 & 1) == 0)
      {
        ++v7;
        if (v10 != v6) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  id v11 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t WidgetRendererSessionInfo.rendererBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetRendererSessionInfo.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

id WidgetRendererSessionInfo.widget.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t WidgetRendererSessionInfo.isForeground.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t WidgetRendererSessionInfo.__allocating_init(rendererBundleIdentifier:sessionIdentifier:widget:isForeground:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(unsigned char *)(result + 56) = a6;
  return result;
}

uint64_t WidgetRendererSessionInfo.init(rendererBundleIdentifier:sessionIdentifier:widget:isForeground:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(unsigned char *)(v6 + 56) = a6;
  return v6;
}

uint64_t WidgetRendererSessionInfo.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  WidgetRendererSessionInfo.init(from:)(a1);
  return v2;
}

void *WidgetRendererSessionInfo.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC088);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CFCE94();
  sub_190D42408();
  if (v2)
  {
    type metadata accessor for WidgetRendererSessionInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v15[0]) = 0;
    v1[2] = sub_190D42188();
    v1[3] = v9;
    LOBYTE(v15[0]) = 1;
    v1[4] = sub_190D42188();
    v1[5] = v10;
    char v16 = 2;
    sub_190CFA858();
    sub_190D421B8();
    uint64_t v12 = v15[0];
    unint64_t v11 = v15[1];
    sub_190D416E8();
    sub_190C72C5C(0, &qword_1E92AC098);
    v1[6] = sub_190D416A8();
    LOBYTE(v15[0]) = 3;
    char v14 = sub_190D42198();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_190CD55F0(v12, v11);
    *((unsigned char *)v3 + 56) = v14 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

unint64_t sub_190CFCE94()
{
  unint64_t result = qword_1E92AC090;
  if (!qword_1E92AC090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC090);
  }
  return result;
}

uint64_t type metadata accessor for WidgetRendererSessionInfo()
{
  return self;
}

uint64_t sub_190CFCF0C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC0A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CFCE94();
  sub_190D42418();
  LOBYTE(v12) = 0;
  sub_190D42238();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  LOBYTE(v12) = 1;
  sub_190D42238();
  LOBYTE(v12) = 3;
  sub_190D42248();
  sub_190D416E8();
  uint64_t v7 = sub_190D416B8();
  unint64_t v9 = v8;
  uint64_t v12 = v7;
  unint64_t v13 = v8;
  v11[15] = 2;
  sub_190CFABD4();
  sub_190D42268();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_190CD55F0(v7, v9);
}

uint64_t sub_190CFD120(char *a1, char *a2)
{
  return sub_190D3B6F0(*a1, *a2);
}

uint64_t sub_190CFD12C()
{
  return sub_190D3BA4C();
}

uint64_t sub_190CFD134()
{
  return sub_190D3BF68();
}

uint64_t sub_190CFD13C()
{
  return sub_190D3C040();
}

uint64_t sub_190CFD144@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CFD858();
  *a1 = result;
  return result;
}

void sub_190CFD174(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xD000000000000018;
  unint64_t v3 = 0x8000000190D5C0D0;
  switch(*v1)
  {
    case 1:
      unint64_t v3 = 0x8000000190D5C0F0;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x746567646977;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "isForeground");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = v3;
      break;
  }
}

unint64_t sub_190CFD220()
{
  unint64_t result = 0xD000000000000018;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x746567646977;
      break;
    case 3:
      unint64_t result = 0x726765726F467369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_190CFD2C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CFD858();
  *a1 = result;
  return result;
}

void sub_190CFD2E8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_190CFD2F4(uint64_t a1)
{
  unint64_t v2 = sub_190CFCE94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CFD330(uint64_t a1)
{
  unint64_t v2 = sub_190CFCE94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetRendererSessionInfo.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t WidgetRendererSessionInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 57, 7);
}

void *sub_190CFD3E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for WidgetRendererSessionInfo();
  uint64_t v5 = swift_allocObject();
  uint64_t result = WidgetRendererSessionInfo.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_190CFD43C(void *a1)
{
  return sub_190CFCF0C(a1);
}

uint64_t sub_190CFD464(uint64_t *a1, uint64_t *a2)
{
  return _s14ChronoServices25WidgetRendererSessionInfoC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s14ChronoServices25WidgetRendererSessionInfoC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (v5 = sub_190D422D8(), char v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
    if (v7 || (v8 = sub_190D422D8(), char v6 = 0, (v8 & 1) != 0))
    {
      sub_190C72C5C(0, (unint64_t *)&qword_1E92AA5D0);
      if (sub_190D41DE8()) {
        char v6 = *(unsigned char *)(a1 + 56) ^ *(unsigned char *)(a2 + 56) ^ 1;
      }
      else {
        char v6 = 0;
      }
    }
  }
  return v6 & 1;
}

uint64_t method lookup function for WidgetRendererSessionInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetRendererSessionInfo);
}

uint64_t dispatch thunk of WidgetRendererSessionInfo.__allocating_init(rendererBundleIdentifier:sessionIdentifier:widget:isForeground:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WidgetRendererSessionInfo.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WidgetRendererSessionInfo.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t getEnumTagSinglePayload for WidgetRendererSessionInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetRendererSessionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CFD718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRendererSessionInfo.CodingKeys()
{
  return &type metadata for WidgetRendererSessionInfo.CodingKeys;
}

unint64_t sub_190CFD754()
{
  unint64_t result = qword_1E92AC0A8;
  if (!qword_1E92AC0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC0A8);
  }
  return result;
}

unint64_t sub_190CFD7AC()
{
  unint64_t result = qword_1E92AC0B0;
  if (!qword_1E92AC0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC0B0);
  }
  return result;
}

unint64_t sub_190CFD804()
{
  unint64_t result = qword_1E92AC0B8;
  if (!qword_1E92AC0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC0B8);
  }
  return result;
}

uint64_t sub_190CFD858()
{
  unint64_t v0 = sub_190D42138();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t CHSExtensionIdentity.tokenString.getter()
{
  CHSExtensionIdentity.token.getter(&v8);
  unint64_t v0 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_190D4B270;
  uint64_t v2 = sub_190CE1E50();
  uint64_t v3 = sub_190CE2054(v2);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v5;
  swift_bridgeObjectRetain();
  sub_190D3E4DC((uint64_t)v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
  uint64_t v6 = sub_190D418E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t CHSExtensionIdentity.token.getter@<X0>(char **a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190D4C950;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  BOOL v7 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  uint64_t v8 = v7[1];
  if (v8)
  {
    uint64_t v9 = *v7;
    uint64_t v8 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v8;
  uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_190CE1A2C(inited, a1);
}

uint64_t CHSExtensionIdentity.__extensionBundleIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.extensionBundleIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t CHSExtensionIdentity.extensionBundleIdentifier.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*CHSExtensionIdentity.extensionBundleIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CHSExtensionIdentity.__containerBundleIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  if (!v1[1]) {
    return 0;
  }
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.containerBundleIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t CHSExtensionIdentity.containerBundleIdentifier.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*CHSExtensionIdentity.containerBundleIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t CHSExtensionIdentity.__deviceIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.deviceIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*CHSExtensionIdentity.deviceIdentifier.modify())()
{
  return j__swift_endAccess;
}

BOOL CHSExtensionIdentity.isRemote.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier;
  swift_beginAccess();
  return *(void *)(v1 + 8) != 0;
}

id sub_190CFE168()
{
  uint64_t v1 = &v0[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = &v0[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0xE000000000000000;
  swift_beginAccess();
  *(_OWORD *)uint64_t v1 = xmmword_190D4C960;
  uint64_t v3 = v0;
  swift_bridgeObjectRelease();
  uint64_t v4 = &v3[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;

  v6.receiver = v3;
  v6.super_class = (Class)CHSExtensionIdentity;
  return objc_msgSendSuper2(&v6, sel_init);
}

char *sub_190CFE240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4) {
    uint64_t v11 = a3;
  }
  else {
    uint64_t v11 = 0;
  }
  ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject();
  swift_getObjectType();
  if (a6) {
    uint64_t v13 = a5;
  }
  else {
    uint64_t v13 = 0;
  }
  char v14 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromObject), sel_init);
  unsigned int v15 = &v14[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
  swift_beginAccess();
  *(void *)unsigned int v15 = a1;
  *((void *)v15 + 1) = a2;
  char v16 = v14;
  swift_bridgeObjectRelease();
  uint64_t v17 = &v16[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  *(void *)uint64_t v17 = v11;
  *((void *)v17 + 1) = a4;
  swift_bridgeObjectRelease();
  unint64_t v18 = &v16[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  swift_beginAccess();
  *(void *)unint64_t v18 = v13;
  *((void *)v18 + 1) = a6;

  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v16;
}

char *CHSExtensionIdentity.init(extensionBundleIdentifier:containerBundleIdentifier:deviceIdentifier:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v11 = &v10[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
  swift_beginAccess();
  *(void *)uint64_t v11 = v6;
  *((void *)v11 + 1) = v7;
  uint64_t v12 = v10;
  swift_bridgeObjectRelease();
  uint64_t v13 = &v12[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  *(void *)uint64_t v13 = v8;
  *((void *)v13 + 1) = v9;
  swift_bridgeObjectRelease();
  char v14 = &v12[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  swift_beginAccess();
  *(void *)char v14 = a3;
  *((void *)v14 + 1) = a4;

  swift_bridgeObjectRelease();
  return v12;
}

uint64_t CHSExtensionIdentity.description.getter()
{
  CHSExtensionIdentity.token.getter(&v2);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
  uint64_t v0 = sub_190D418E8();
  swift_bridgeObjectRelease_n();
  return v0;
}

uint64_t CHSExtensionIdentity.isEqual(_:)(uint64_t a1)
{
  sub_190CCE4DC(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_190CCE544((uint64_t)v20);
    goto LABEL_24;
  }
  type metadata accessor for CHSExtensionIdentity();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    char v12 = 0;
    return v12 & 1;
  }
  if (v19 == v1)
  {

    char v12 = 1;
  }
  else
  {
    uint64_t v2 = &v1[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    uint64_t v3 = *(void *)v2;
    uint64_t v4 = *((void *)v2 + 1);
    uint64_t v5 = &v19[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    BOOL v6 = v3 == *(void *)v5 && v4 == *((void *)v5 + 1);
    if (!v6 && (sub_190D422D8() & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v7 = &v1[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    uint64_t v8 = *(void *)v7;
    uint64_t v9 = *((void *)v7 + 1);
    uint64_t v10 = &v19[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    uint64_t v11 = *((void *)v10 + 1);
    if (v9)
    {
      if (!v11 || (v8 != *(void *)v10 || v9 != v11) && (sub_190D422D8() & 1) == 0) {
        goto LABEL_23;
      }
    }
    else if (v11)
    {
LABEL_23:

      goto LABEL_24;
    }
    uint64_t v13 = &v1[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *((void *)v13 + 1);
    char v16 = &v19[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    uint64_t v17 = *((void *)v16 + 1);
    char v12 = v17 == 0;
    if (!v15)
    {

      return v12 & 1;
    }
    if (!v17) {
      goto LABEL_23;
    }
    if (v14 == *(void *)v16 && v15 == v17)
    {

      char v12 = 1;
    }
    else
    {
      char v12 = sub_190D422D8();
    }
  }
  return v12 & 1;
}

id CHSExtensionIdentity.copy(with:)@<X0>(void *a1@<X8>)
{
  a1[3] = type metadata accessor for CHSExtensionIdentity();
  *a1 = v3;
  return v3;
}

unint64_t sub_190CFEA08(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000019;
  if (a1 >= 2u) {
    return 0xD000000000000010;
  }
  return result;
}

uint64_t sub_190CFEA64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_190D3B184(*a1, *a2);
}

uint64_t sub_190CFEA70()
{
  return sub_190D3BB38();
}

uint64_t sub_190CFEA78()
{
  return sub_190D3BED8();
}

uint64_t sub_190CFEA80()
{
  return sub_190D3C2A8();
}

uint64_t sub_190CFEA88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CFFB84();
  *a1 = result;
  return result;
}

unint64_t sub_190CFEAB8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_190CFEA08(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_190CFEAE4()
{
  return sub_190CFEA08(*v0);
}

uint64_t sub_190CFEAEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CFFB84();
  *a1 = result;
  return result;
}

uint64_t sub_190CFEB14(uint64_t a1)
{
  unint64_t v2 = sub_190CFF78C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190CFEB50(uint64_t a1)
{
  unint64_t v2 = sub_190CFF78C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CHSExtensionIdentity.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CFF78C();
  sub_190D42418();
  uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v10 = v9[1];
  uint64_t v17 = *v9;
  uint64_t v18 = v10;
  LOBYTE(v16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806C0);
  sub_190CD4928(&qword_1EB280688, &qword_1EB2806C0);
  sub_190D42268();
  if (!v2)
  {
    uint64_t v11 = (long long *)(v3 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
    swift_beginAccess();
    long long v16 = *v11;
    LOBYTE(v15) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806B8);
    sub_190CFF7E0();
    sub_190D42268();
    char v12 = (long long *)(v3 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
    swift_beginAccess();
    long long v15 = *v12;
    v14[15] = 2;
    sub_190CFF878();
    sub_190D42268();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

char *CHSExtensionIdentity.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190CFF78C();
  sub_190D42408();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806C0);
    char v23 = 0;
    sub_190CD4928(&qword_1E92AA9F8, &qword_1EB2806C0);
    sub_190D421B8();
    uint64_t v8 = v25;
    uint64_t v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB280720);
    char v23 = 1;
    sub_190CD4928(&qword_1E92AA9F0, qword_1EB280720);
    sub_190D42178();
    uint64_t v22 = v8;
    uint64_t v10 = v24;
    uint64_t v9 = v25;
    char v23 = 2;
    sub_190CFF8CC();
    sub_190D421B8();
    uint64_t v20 = v25;
    uint64_t v21 = v24;
    char v12 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v13 = &v12[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    uint64_t v19 = v10;
    uint64_t v14 = v22;
    *(void *)uint64_t v13 = v26;
    *((void *)v13 + 1) = v14;
    uint64_t v7 = v12;
    swift_bridgeObjectRelease();
    long long v15 = &v7[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    *(void *)long long v15 = v19;
    *((void *)v15 + 1) = v9;
    swift_bridgeObjectRelease();
    long long v16 = &v7[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    uint64_t v17 = v20;
    *(void *)long long v16 = v21;
    *((void *)v16 + 1) = v17;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

char *sub_190CFF194@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = CHSExtensionIdentity.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_190CFF1C0(void *a1)
{
  return CHSExtensionIdentity.encode(to:)(a1);
}

uint64_t CHSExtensionIdentity.hash.getter()
{
  sub_190D423F8();
  swift_beginAccess();
  sub_190D42398();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  sub_190D423E8();
  swift_bridgeObjectRelease();
  sub_190D423A8();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2806B8);
  sub_190CD4928(&qword_1E92AA9E8, qword_1EB280720);
  sub_190D41E28();
  sub_190D423A8();
  uint64_t v1 = v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 8);
  sub_190D42398();
  sub_190D423B8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_190D41A18();
  }
  sub_190D423E8();
  swift_bridgeObjectRelease();
  sub_190D423A8();
  return sub_190D423D8();
}

uint64_t static CHSExtensionIdentity.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = (void *)(a2 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  if (v4 == *v6 && v5 == v6[1]) {
    char v8 = 0;
  }
  else {
    char v8 = sub_190D422D8();
  }
  return v8 & 1;
}

uint64_t sub_190CFF47C(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = (void *)(v2 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  if (v4 == *v6 && v5 == v6[1]) {
    char v8 = 0;
  }
  else {
    char v8 = sub_190D422D8();
  }
  return v8 & 1;
}

char *sub_190CFF51C(char *result)
{
  uint64_t v1 = *(void **)result;
  uint64_t v2 = *(void *)(*(void *)result + 16);
  if (v2 == 2)
  {
    uint64_t v4 = v1[4];
    uint64_t v3 = v1[5];
    uint64_t v6 = v1[6];
    uint64_t v5 = v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
LABEL_5:
    uint64_t v9 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v10 = &v9[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    *(void *)uint64_t v10 = v6;
    *((void *)v10 + 1) = v5;
    uint64_t v11 = v9;
    swift_bridgeObjectRelease();
    char v12 = &v11[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    *(void *)char v12 = v4;
    *((void *)v12 + 1) = v3;
    swift_bridgeObjectRelease();
    uint64_t v13 = &v11[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    *(void *)uint64_t v13 = v7;
    *((void *)v13 + 1) = v8;

    swift_bridgeObjectRelease();
    return v11;
  }
  if (v2 == 3)
  {
    uint64_t v7 = v1[4];
    uint64_t v8 = v1[5];
    uint64_t v4 = v1[6];
    uint64_t v3 = v1[7];
    uint64_t v6 = v1[8];
    uint64_t v5 = v1[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void __swiftcall CHSExtensionIdentity.init(tokenString:)(CHSExtensionIdentity_optional *__return_ptr retstr, Swift::String tokenString)
{
  Token.init(rawValue:)(tokenString);
  if ((*(void *)(v2 + 16) & 0x7FFFFFFFFFFFFFFELL) == 2) {
    sub_190CFF51C((char *)&v2);
  }
  else {
    swift_bridgeObjectRelease();
  }
}

BOOL CHSExtensionIdentity.isContainerIdentifierValid.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  unint64_t v2 = v1[1];
  if (!v2) {
    return 0;
  }
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v3 = *v1 & 0xFFFFFFFFFFFFLL;
  }
  return v3 != 0;
}

unint64_t type metadata accessor for CHSExtensionIdentity()
{
  unint64_t result = qword_1EB280808;
  if (!qword_1EB280808)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB280808);
  }
  return result;
}

unint64_t sub_190CFF78C()
{
  unint64_t result = qword_1EB280708;
  if (!qword_1EB280708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB280708);
  }
  return result;
}

unint64_t sub_190CFF7E0()
{
  unint64_t result = qword_1EB280680;
  if (!qword_1EB280680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB2806B8);
    sub_190CD4928(&qword_1EB280678, qword_1EB280720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB280680);
  }
  return result;
}

unint64_t sub_190CFF878()
{
  unint64_t result = qword_1EB280690;
  if (!qword_1EB280690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB280690);
  }
  return result;
}

unint64_t sub_190CFF8CC()
{
  unint64_t result = qword_1E92AAA00;
  if (!qword_1E92AAA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAA00);
  }
  return result;
}

unint64_t sub_190CFF924()
{
  unint64_t result = qword_1E92AC0D8;
  if (!qword_1E92AC0D8)
  {
    type metadata accessor for CHSExtensionIdentity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC0D8);
  }
  return result;
}

unsigned char *_s10CodingKeysOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CFFA44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_2()
{
  return &_s10CodingKeysON_2;
}

unint64_t sub_190CFFA80()
{
  unint64_t result = qword_1E92AC0E0;
  if (!qword_1E92AC0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC0E0);
  }
  return result;
}

unint64_t sub_190CFFAD8()
{
  unint64_t result = qword_1EB280718;
  if (!qword_1EB280718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB280718);
  }
  return result;
}

unint64_t sub_190CFFB30()
{
  unint64_t result = qword_1EB280710;
  if (!qword_1EB280710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB280710);
  }
  return result;
}

uint64_t sub_190CFFB84()
{
  unint64_t v0 = sub_190D42138();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t TaskPriority.description.getter()
{
  unint64_t result = 0xD000000000000019;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0xD000000000000017;
      break;
  }
  return result;
}

void sub_190CFFC60()
{
  qword_1E92AA0B0 = (uint64_t)&unk_1EE09C610;
}

uint64_t static TaskPriority.all.getter()
{
  if (qword_1E92AA0C0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

ChronoServices::TaskPriority_optional __swiftcall TaskPriority.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (ChronoServices::TaskPriority_optional)rawValue;
}

uint64_t TaskPriority.rawValue.getter()
{
  return *v0;
}

unint64_t sub_190CFFCF0()
{
  unint64_t result = qword_1E92AA0C8;
  if (!qword_1E92AA0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA0C8);
  }
  return result;
}

ChronoServices::TaskPriority_optional sub_190CFFD44(Swift::Int *a1)
{
  return TaskPriority.init(rawValue:)(*a1);
}

uint64_t sub_190CFFD50()
{
  return sub_190D41BA8();
}

uint64_t sub_190CFFDB0()
{
  return sub_190D41B48();
}

unsigned char *storeEnumTagSinglePayload for TaskPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190CFFECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskPriority()
{
  return &type metadata for TaskPriority;
}

unint64_t sub_190CFFF04()
{
  unint64_t result = qword_1E92AA6A8;
  if (!qword_1E92AA6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA6A8);
  }
  return result;
}

uint64_t sub_190CFFF58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_190CFFF6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_190CFFF80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_190CFFF94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_190CFFFA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_190CFFFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_190CFFFE4()
{
  MEMORY[0x192FD7910](*(void *)(v0 + 16), -1, -1);
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

id CHSRemoteActivityLaunchController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CHSRemoteActivityLaunchController.init()()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = (objc_class *)type metadata accessor for CHSRemoteActivityLaunchController();
  char v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC14ChronoServices33CHSRemoteActivityLaunchController_connection] = v0;
  v5.receiver = v2;
  v5.super_class = v1;
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for CHSRemoteActivityLaunchController()
{
  return self;
}

void sub_190D001E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(id *)(v5 + OBJC_IVAR____TtC14ChronoServices33CHSRemoteActivityLaunchController_connection);
  uint64_t v11 = (void *)sub_190D41948();
  char v12 = (void *)sub_190D41948();
  sub_190CEA428(a5, (uint64_t)v9);
  uint64_t v13 = sub_190D415D8();
  uint64_t v14 = *(void *)(v13 - 8);
  long long v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
  {
    long long v15 = (void *)sub_190D414F8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  }
  objc_msgSend(v10, sel_launchLiveActivityWithID_deviceID_url_, v11, v12, v15);
}

id CHSRemoteActivityLaunchController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHSRemoteActivityLaunchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for CHSRemoteActivityLaunchController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CHSRemoteActivityLaunchController);
}

uint64_t dispatch thunk of CHSRemoteActivityLaunchController.launchAppOnRemoteDevice(_:with:url:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_190D003FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_190D0045C()
{
  return swift_retain();
}

uint64_t sub_190D00494(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_190D004DC())()
{
  return j__swift_endAccess;
}

uint64_t ControlSessionSubscriptionResponse.__allocating_init(archiveSandboxExtension:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  swift_release();
  return v2;
}

uint64_t ControlSessionSubscriptionResponse.init(archiveSandboxExtension:)(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  swift_release();
  return v1;
}

unint64_t sub_190D005FC()
{
  return 0xD000000000000017;
}

uint64_t sub_190D00618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_190D00F28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_190D00644(uint64_t a1)
{
  unint64_t v2 = sub_190D00894();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190D00680(uint64_t a1)
{
  unint64_t v2 = sub_190D00894();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlSessionSubscriptionResponse.deinit()
{
  swift_release();
  return v0;
}

uint64_t ControlSessionSubscriptionResponse.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_190D00714(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA2F0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D00894();
  sub_190D42418();
  swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 16);
  type metadata accessor for SandboxExtension();
  sub_190D00B20(&qword_1E92AA238);
  sub_190D42228();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_190D00894()
{
  unint64_t result = qword_1E92AA638;
  if (!qword_1E92AA638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA638);
  }
  return result;
}

uint64_t ControlSessionSubscriptionResponse.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ControlSessionSubscriptionResponse.init(from:)(a1);
  return v2;
}

uint64_t ControlSessionSubscriptionResponse.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA4D0);
  v12[0] = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  uint64_t v8 = (void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D00894();
  sub_190D42408();
  if (!v2)
  {
    uint64_t v9 = v12[0];
    type metadata accessor for SandboxExtension();
    sub_190D00B20(&qword_1E92AA480);
    sub_190D42178();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v5);
    uint64_t v11 = v12[5];
    swift_beginAccess();
    *uint64_t v8 = v11;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_190D00B20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SandboxExtension();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190D00B64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ControlSessionSubscriptionResponse();
  uint64_t v5 = swift_allocObject();
  uint64_t result = ControlSessionSubscriptionResponse.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_190D00BBC(void *a1)
{
  return sub_190D00714(a1);
}

uint64_t sub_190D00BE0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_retain();
}

uint64_t type metadata accessor for ControlSessionSubscriptionResponse()
{
  return self;
}

uint64_t method lookup function for ControlSessionSubscriptionResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlSessionSubscriptionResponse);
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.archiveSandboxExtension.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.archiveSandboxExtension.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.archiveSandboxExtension.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.__allocating_init(archiveSandboxExtension:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for ControlSessionSubscriptionResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190D00DE8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSessionSubscriptionResponse.CodingKeys()
{
  return &type metadata for ControlSessionSubscriptionResponse.CodingKeys;
}

unint64_t sub_190D00E24()
{
  unint64_t result = qword_1E92AC0F0;
  if (!qword_1E92AC0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC0F0);
  }
  return result;
}

unint64_t sub_190D00E7C()
{
  unint64_t result = qword_1E92AA648;
  if (!qword_1E92AA648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA648);
  }
  return result;
}

unint64_t sub_190D00ED4()
{
  unint64_t result = qword_1E92AA640;
  if (!qword_1E92AA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA640);
  }
  return result;
}

uint64_t sub_190D00F28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000190D5DCD0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_190D422D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t DeviceScopedIdentity<>.hostIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *DeviceScopedIdentity<>.init(hostIdentifier:deviceID:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = result[1];
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a2;
  a4[3] = a3;
  return result;
}

uint64_t DeviceScopedIdentity<>.powerlogHostIdentity.getter()
{
  uint64_t v1 = *v0;
  if (v0[3])
  {
    swift_bridgeObjectRetain();
    sub_190D41A68();
    swift_bridgeObjectRelease();
    return 0x2D65746F6D6552;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t CHSWidgetDescriptorsPredicate.hash.getter()
{
  return sub_190D423D8();
}

uint64_t CHSWidgetDescriptorsPredicate.isEqual(_:)(uint64_t a1)
{
  uint64_t v1 = sub_190CCE4DC(a1, (uint64_t)v4);
  if (v5)
  {
    type metadata accessor for CHSWidgetDescriptorsPredicate(v1);
    if (swift_dynamicCast())
    {

      return 1;
    }
  }
  else
  {
    sub_190CCE544((uint64_t)v4);
  }
  return 0;
}

uint64_t type metadata accessor for CHSWidgetDescriptorsPredicate(uint64_t a1)
{
  return sub_190C72C5C(a1, (unint64_t *)&unk_1E92AA8B8);
}

id CHSWidgetDescriptorsPredicate.init()()
{
  v1.super_class = (Class)CHSWidgetDescriptorsPredicate;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t static CHSWidgetDescriptorsPredicate.supportsSecureCoding.getter()
{
  return byte_1E92AC100;
}

uint64_t static CHSWidgetDescriptorsPredicate.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92AC100 = a1;
  return result;
}

uint64_t (*static CHSWidgetDescriptorsPredicate.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id CHSWidgetDescriptorsPredicate.init(coder:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_init);

  return v3;
}

uint64_t CHSControlDescriptorsPredicate.includeHidden.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeHidden);
}

uint64_t CHSControlDescriptorsPredicate.includeVisible.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeVisible);
}

void __swiftcall CHSControlDescriptorsPredicate.init(includingVisible:hidden:)(CHSControlDescriptorsPredicate *__return_ptr retstr, Swift::Bool includingVisible, Swift::Bool hidden)
{
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v5, sel_initIncludingVisible_hidden_, includingVisible, hidden);
}

id CHSControlDescriptorsPredicate.init(includingVisible:hidden:)(char a1, char a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeVisible) = a1;
  *(unsigned char *)(v2 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeHidden) = a2;
  v4.super_class = (Class)CHSControlDescriptorsPredicate;
  return objc_msgSendSuper2(&v4, sel_init);
}

id CHSControlDescriptorsPredicate.init(includingVisible:hidden:extensionIdentities:)(char a1, char a2)
{
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v4, sel_initIncludingVisible_hidden_, a1 & 1, a2 & 1);
}

id CHSControlDescriptorsPredicate.copy(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = type metadata accessor for CHSControlDescriptorsPredicate(a1);
  *a2 = v4;
  return v4;
}

uint64_t type metadata accessor for CHSControlDescriptorsPredicate(uint64_t a1)
{
  return sub_190C72C5C(a1, (unint64_t *)&unk_1E92AA8C8);
}

uint64_t CHSControlDescriptorsPredicate.hash.getter()
{
  sub_190D423F8();
  objc_msgSend(v0, sel_includeHidden);
  sub_190D423B8();
  objc_msgSend(v0, sel_includeVisible);
  sub_190D423B8();
  return sub_190D423D8();
}

uint64_t CHSControlDescriptorsPredicate.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_190CCE4DC(a1, (uint64_t)v8);
  if (v9)
  {
    type metadata accessor for CHSControlDescriptorsPredicate(v2);
    if (swift_dynamicCast())
    {
      if (v7 == v1)
      {

        return 1;
      }
      unsigned int v3 = objc_msgSend(v1, sel_includeHidden);
      if (v3 == objc_msgSend(v7, sel_includeHidden))
      {
        unsigned int v5 = objc_msgSend(v1, sel_includeVisible);
        unsigned int v6 = objc_msgSend(v7, sel_includeVisible);

        return v5 ^ v6 ^ 1;
      }
    }
  }
  else
  {
    sub_190CCE544((uint64_t)v8);
  }
  return 0;
}

void CHSControlDescriptorsPredicate.init()()
{
}

uint64_t static CHSControlDescriptorsPredicate.supportsSecureCoding.getter()
{
  return byte_1E92AC101;
}

uint64_t static CHSControlDescriptorsPredicate.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92AC101 = a1;
  return result;
}

uint64_t (*static CHSControlDescriptorsPredicate.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall CHSControlDescriptorsPredicate.encode(with:)(NSCoder with)
{
  id v3 = objc_msgSend(v1, sel_includeVisible);
  id v4 = (void *)sub_190D41948();
  [(objc_class *)with.super.isa encodeBool:v3 forKey:v4];

  id v5 = objc_msgSend(v1, sel_includeHidden);
  id v6 = (id)sub_190D41948();
  [(objc_class *)with.super.isa encodeBool:v5 forKey:v6];
}

id _sSo29CHSWidgetDescriptorsPredicateC14ChronoServicesE5coderABSgSo7NSCoderC_tcfC_0(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, a1);

  return v2;
}

id CHSControlDescriptorsPredicate.init(coder:)(void *a1)
{
  id v3 = (void *)sub_190D41948();
  id v4 = objc_msgSend(a1, sel_decodeBoolForKey_, v3);

  id v5 = (void *)sub_190D41948();
  id v6 = objc_msgSend(a1, sel_decodeBoolForKey_, v5);

  id v7 = objc_msgSend(v1, sel_initIncludingVisible_hidden_, v4, v6);
  return v7;
}

uint64_t CHSControlDescriptorsPredicate.description.getter()
{
  sub_190D41F68();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_includeVisible);
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  objc_msgSend(v0, sel_includeHidden);
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  return 0x656C62697369765BLL;
}

uint64_t static KeybagStateProviderFactory.newKeybagStateProvider()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E92AA8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E92B30D8;
  a1[3] = type metadata accessor for DefaultKeybagStateProvider();
  a1[4] = (uint64_t)&off_1EE09D5B8;
  *a1 = v2;
  return swift_retain();
}

uint64_t KeybagStateProviderFactory.deinit()
{
  return v0;
}

uint64_t KeybagStateProviderFactory.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for KeybagStateProviderFactory()
{
  return self;
}

uint64_t method lookup function for KeybagStateProviderFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeybagStateProviderFactory);
}

uint64_t sub_190D02264()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for ConcreteCategoriesPrimitives()
{
  return self;
}

uint64_t sub_190D02298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(self, sel_sharedCategories);
  uint64_t v7 = *MEMORY[0x1E4F58098];
  uint64_t v8 = *MEMORY[0x1E4F58090];
  if (a4) {
    uint64_t v9 = (void *)*MEMORY[0x1E4F58090];
  }
  else {
    uint64_t v9 = (void *)*MEMORY[0x1E4F58098];
  }
  id v10 = v9;
  uint64_t v11 = (void *)sub_190D41948();
  if (a3) {
    uint64_t v12 = v8;
  }
  else {
    uint64_t v12 = v7;
  }
  id v13 = objc_msgSend(v6, sel_bundleIDForPlatform_fromBundleID_platform_, v10, v11, v12);

  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_190D41978();

  return v14;
}

uint64_t IconInfo.containerIdentity.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IconInfo.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 IconInfo.init(containerIdentity:version:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v4 = a1->n128_u64[1];
  a4->n128_u64[0] = a1->n128_u64[0];
  a4->n128_u64[1] = v4;
  __n128 result = a1[1];
  a4[1] = result;
  a4[2].n128_u64[0] = a2;
  a4[2].n128_u64[1] = a3;
  return result;
}

uint64_t IconInfo.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_190D028E4(v1, v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  swift_bridgeObjectRetain();
  sub_190D41A68();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t IconInfo.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v1, v2, v3, v4);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5) {
    return sub_190D423B8();
  }
  sub_190D423B8();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t IconInfo.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[5];
  sub_190D42398();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v1, v2, v3, v4);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D423B8();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease();
  }
  return sub_190D423E8();
}

uint64_t sub_190D026FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v1, v2, v3, v4);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5) {
    return sub_190D423B8();
  }
  sub_190D423B8();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D027F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[5];
  sub_190D42398();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v1, v2, v3, v4);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D423B8();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease();
  }
  return sub_190D423E8();
}

uint64_t sub_190D028E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA88);
  uint64_t inited = swift_initStackObject();
  uint64_t v9 = inited;
  *(_OWORD *)(inited + 16) = xmmword_190D4B450;
  if (a4) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = 0;
  }
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = a4;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CE1A2C(v9, &v13);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CE17B8();
  uint64_t v11 = sub_190D418E8();
  swift_bridgeObjectRelease_n();
  return v11;
}

BOOL _s14ChronoServices8IconInfoV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[5];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[5];
  uint64_t v19 = a2[4];
  uint64_t v20 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_190CDC274(v2, v3, v5, v4);
  uint64_t v14 = v13;
  if (v12 == sub_190CDC274(v8, v7, v9, v10) && v14 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v6) {
      return v11 && (v20 == v19 && v6 == v11 || (sub_190D422D8() & 1) != 0);
    }
  }
  else
  {
    char v17 = sub_190D422D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
    if (v6) {
      return v11 && (v20 == v19 && v6 == v11 || (sub_190D422D8() & 1) != 0);
    }
  }
  return !v11;
}

unint64_t sub_190D02B58()
{
  unint64_t result = qword_1E92AC180;
  if (!qword_1E92AC180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC180);
  }
  return result;
}

uint64_t destroy for IconInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IconInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IconInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for IconInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IconInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IconInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconInfo()
{
  return &type metadata for IconInfo;
}

id sub_190D02DE8(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v2 = (void *)sub_190D414F8();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_190D415D8();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_190D414B8();

    swift_willThrow();
    uint64_t v9 = sub_190D415D8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.sha256()()
{
  uint64_t v67 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_190D41658();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = sub_190D03698();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v11 = (void *)(v7 + 16);
  v12(v9, v0, v6);
  unint64_t v13 = v10;
  id v14 = sub_190D02DE8((uint64_t)v9);
  if (!v1)
  {
    uint64_t v15 = v14;
    uint64_t v59 = v5;
    uint64_t v60 = (unsigned __int8 *)swift_slowAlloc();
    memset(&c, 0, sizeof(c));
    uint64_t v16 = CC_SHA256_Init(&c);
    char v17 = (void *)MEMORY[0x192FD6E60](v16);
    uint64_t v20 = sub_190D41CF8();
    unint64_t v22 = v21;
    uint64_t v57 = v3;
    uint64_t v58 = v2;
    uint64_t v23 = 0;
    unint64_t v24 = 0xF000000000000000;
    id v61 = v15;
    while (1)
    {
      uint64_t v26 = v23;
      unint64_t v27 = v24;
      uint64_t v23 = v20;
      unint64_t v24 = v22;
      sub_190CEA394(v26, v27);
      if (v22 >> 60 == 15) {
        break;
      }
      switch(v22 >> 62)
      {
        case 1uLL:
          uint64_t v28 = (int)v20;
          uint64_t v29 = v20 >> 32;
          if (v20 >> 32 < (int)v20)
          {
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
          }
          swift_retain();
          uint64_t v30 = (char *)sub_190D41398();
          if (v30)
          {
            uint64_t v31 = sub_190D413C8();
            if (__OFSUB__((int)v20, v31)) {
              goto LABEL_38;
            }
            v30 += (int)v20 - v31;
          }
          unint64_t v32 = HIDWORD(v20);
          sub_190D413B8();
          CC_LONG v33 = v32 - v23;
          if (__OFSUB__(v32, v23)) {
            goto LABEL_36;
          }
          if ((v33 & 0x80000000) != 0) {
            goto LABEL_39;
          }
          CC_SHA256_Update(&c, v30, v33);
          sub_190CEA394(v23, v24);
LABEL_23:
          if (v28 == v29) {
            goto LABEL_27;
          }
LABEL_5:
          char v17 = (void *)MEMORY[0x192FD6E60]();
          uint64_t v20 = sub_190D41CF8();
          unint64_t v22 = v25;
          break;
        case 2uLL:
          uint64_t v34 = *(void *)(v20 + 16);
          sub_190CEA328(v20, v22);
          swift_retain();
          swift_retain();
          uint64_t v35 = sub_190D41398();
          if (v35)
          {
            uint64_t v36 = v35;
            uint64_t v37 = sub_190D413C8();
            if (__OFSUB__(v34, v37)) {
              goto LABEL_37;
            }
            uint64_t v38 = (const void *)(v36 + v34 - v37);
          }
          else
          {
            uint64_t v38 = 0;
          }
          sub_190D413B8();
          uint64_t v40 = *(void *)(v23 + 16);
          uint64_t v39 = *(void *)(v23 + 24);
          unint64_t v41 = v39 - v40;
          if (__OFSUB__(v39, v40)) {
            goto LABEL_35;
          }
          if ((v41 & 0x8000000000000000) != 0 || HIDWORD(v41))
          {
LABEL_39:
            sub_190D42098();
            __break(1u);
            JUMPOUT(0x190D03678);
          }
          CC_SHA256_Update(&c, v38, v41);
          swift_release();
          swift_release();
          sub_190CEA394(v23, v24);
          uint64_t v28 = *(void *)(v23 + 16);
          uint64_t v29 = *(void *)(v23 + 24);
          goto LABEL_23;
        case 3uLL:
          *(void *)((char *)&data + 6) = 0;
          *(void *)&long long data = 0;
          CC_SHA256_Update(&c, &data, 0);
          sub_190CEA394(v20, v22);
          goto LABEL_26;
        default:
          *(void *)&long long data = v20;
          WORD4(data) = v22;
          BYTE10(data) = BYTE2(v22);
          BYTE11(data) = BYTE3(v22);
          BYTE12(data) = BYTE4(v22);
          BYTE13(data) = BYTE5(v22);
          CC_SHA256_Update(&c, &data, BYTE6(v22));
          sub_190CEA394(v20, v22);
          if ((v22 & 0xFF000000000000) != 0) {
            goto LABEL_5;
          }
          goto LABEL_27;
      }
    }
LABEL_26:
LABEL_27:
    id v42 = v60;
    CC_SHA256_Final(v60, &c);
    uint64_t v43 = sub_190D0387C(v42, 32);
    *(void *)&long long data = 0;
    *((void *)&data + 1) = 0xE000000000000000;
    uint64_t v45 = v43;
    unint64_t v46 = v44;
    switch(v44 >> 62)
    {
      case 1uLL:
      case 2uLL:
        sub_190CEA33C(v43, v44);
        sub_190CEA33C(v45, v46);
        break;
      default:
        break;
    }
    sub_190D41668();
    uint64_t v56 = v45;
    unint64_t v55 = v46;
    sub_190CD55F0(v45, v46);
    sub_190D03930();
    sub_190D41E38();
    if (v66)
    {
      uint64_t v47 = v58;
      uint64_t v48 = v59;
    }
    else
    {
      long long v62 = xmmword_190D4B270;
      uint64_t v49 = MEMORY[0x1E4FBC3B0];
      uint64_t v47 = v58;
      uint64_t v48 = v59;
      do
      {
        char v50 = v65;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA308);
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = v62;
        *(void *)(v51 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v51 + 64) = v49;
        *(unsigned char *)(v51 + 32) = v50;
        sub_190D41988();
        sub_190D41A68();
        swift_bridgeObjectRelease();
        sub_190D41E38();
      }
      while ((v66 & 1) == 0);
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v47);
    sub_190CD55F0(v56, v55);
    sub_190CEA394(v23, v24);
    uint64_t v11 = (void *)*((void *)&data + 1);
    unint64_t v13 = data;
    MEMORY[0x192FD7910](v60, -1, -1);
    uint64_t v52 = v61;
    sub_190D036D8(v61);
  }
  uint64_t v18 = v13;
  uint64_t v19 = v11;
  result._object = v19;
  result._unint64_t countAndFlagsBits = v18;
  return result;
}

unint64_t sub_190D03698()
{
  unint64_t result = qword_1E92AC188;
  if (!qword_1E92AC188)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AC188);
  }
  return result;
}

void sub_190D036D8(void *a1)
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  v6[0] = 0;
  unsigned int v1 = objc_msgSend(a1, sel_closeAndReturnError_, v6);
  id v2 = v6[0];
  if (v1)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = v6[0];
    uint64_t v5 = (void *)sub_190D414B8();

    swift_willThrow();
  }
}

uint64_t sub_190D037B8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_190D0387C(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_190D037B8(__src, &__src[a2]);
  }
  sub_190D413D8();
  swift_allocObject();
  sub_190D41388();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_190D41618();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

unint64_t sub_190D03930()
{
  unint64_t result = qword_1E92AC190;
  if (!qword_1E92AC190)
  {
    sub_190D41658();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC190);
  }
  return result;
}

uint64_t sub_190D03988(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D039E8()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_190D03A34(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void sub_190D03A88(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
  id v5 = v2;
}

id sub_190D03AE0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  return v1;
}

void sub_190D03B24(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_190D03B6C())()
{
  return j_j__swift_endAccess;
}

id sub_190D03BC0()
{
  swift_beginAccess();
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_control);
  return v1;
}

uint64_t ControlSessionKey.loggingIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

__CFString *ControlSessionKey.__allocating_init(identifier:identity:)(uint64_t a1, uint64_t a2, void *a3)
{
  swift_allocObject();
  uint64_t v6 = sub_190D0488C(a1, a2, a3);

  return v6;
}

__CFString *ControlSessionKey.init(identifier:identity:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_190D0488C(a1, a2, a3);

  return v4;
}

void sub_190D03CD4()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v1 = *(id *)(v0 + 32);
  sub_190D41DF8();
}

__CFString *sub_190D03D6C()
{
  uint64_t v1 = v0;
  sub_190D41F68();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t result = NSStringFromCHSControlContentType((uint64_t)objc_msgSend(*(id *)(v0 + 32), sel_contentType));
  if (result)
  {
    uint64_t v3 = result;
    sub_190D41978();

    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    id v4 = objc_msgSend(*(id *)(v1 + 32), sel_control);
    id v5 = objc_msgSend(v4, sel__loggingIdentifier);

    sub_190D41978();
    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    return (__CFString *)0xD000000000000013;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190D03F20(char *a1, char *a2)
{
  return sub_190D3B890(*a1, *a2);
}

uint64_t sub_190D03F2C()
{
  return sub_190D423E8();
}

uint64_t sub_190D03FB4()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D04028()
{
  return sub_190D423E8();
}

uint64_t sub_190D040AC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_190D42138();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_190D0410C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x696669746E656469;
  if (*v1) {
    uint64_t v2 = 0x797469746E656469;
  }
  unint64_t v3 = 0xEA00000000007265;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_190D04150()
{
  if (*v0) {
    return 0x797469746E656469;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_190D04190@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_190D42138();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_190D041F4(uint64_t a1)
{
  unint64_t v2 = sub_190D04C20();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190D04230(uint64_t a1)
{
  unint64_t v2 = sub_190D04C20();
  return MEMORY[0x1F41862B0](a1, v2);
}

__CFString *ControlSessionKey.__allocating_init(from:)(void *a1)
{
  return sub_190D049D4(a1);
}

uint64_t sub_190D04284(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA4D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D04C20();
  sub_190D42418();
  swift_beginAccess();
  char v12 = 0;
  swift_bridgeObjectRetain();
  sub_190D42238();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[7] = 1;
    type metadata accessor for CHSControlInstanceIdentity(0);
    sub_190D0518C((unint64_t *)&unk_1E92AA4A0, 255, (void (*)(uint64_t))type metadata accessor for CHSControlInstanceIdentity);
    sub_190D42268();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t ControlSessionKey.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ControlSessionKey.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_190D04514()
{
  sub_190D42398();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v1 = *(id *)(v0 + 32);
  sub_190D41DF8();

  return sub_190D423E8();
}

__CFString *sub_190D045B8@<X0>(void *a1@<X0>, __CFString **a2@<X8>)
{
  uint64_t result = sub_190D049D4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_190D045E4(void *a1)
{
  return sub_190D04284(a1);
}

uint64_t sub_190D04608()
{
  return sub_190D04514();
}

void sub_190D0462C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v2 = *(id *)(v1 + 32);
  sub_190D41DF8();
}

uint64_t sub_190D046C4()
{
  sub_190D42398();
  uint64_t v1 = *v0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v2 = *(id *)(v1 + 32);
  sub_190D41DF8();

  return sub_190D423E8();
}

__CFString *sub_190D04768()
{
  return sub_190D03D6C();
}

uint64_t sub_190D0478C(void **a1, void **a2)
{
  return _s14ChronoServices17ControlSessionKeyC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s14ChronoServices17ControlSessionKeyC2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  swift_beginAccess();
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  BOOL v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (char v7 = 0, (sub_190D422D8() & 1) != 0))
  {
    sub_190D051D4();
    swift_beginAccess();
    uint64_t v8 = (void *)a1[4];
    swift_beginAccess();
    uint64_t v9 = (void *)a2[4];
    id v10 = v8;
    id v11 = v9;
    char v7 = sub_190D41DE8();
  }
  return v7 & 1;
}

__CFString *sub_190D0488C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  id v5 = a3;
  swift_bridgeObjectRetain();
  sub_190D41A68();
  id v6 = objc_msgSend(v5, sel_control);
  id v7 = objc_msgSend(v6, sel__loggingIdentifier);

  sub_190D41978();
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  uint64_t result = NSStringFromCHSControlContentType((uint64_t)objc_msgSend(v5, sel_contentType));
  if (result)
  {
    uint64_t v9 = result;
    sub_190D41978();

    sub_190D41A68();
    swift_bridgeObjectRelease();
    sub_190D41A68();
    v4[5] = a1;
    void v4[6] = a2;
    return (__CFString *)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

__CFString *sub_190D049D4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (__CFString *)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D04C20();
  sub_190D42408();
  if (!v1)
  {
    char v15 = 0;
    uint64_t v8 = sub_190D42188();
    uint64_t v10 = v9;
    type metadata accessor for CHSControlInstanceIdentity(0);
    char v14 = 1;
    sub_190D0518C(&qword_1E92AA260, 255, (void (*)(uint64_t))type metadata accessor for CHSControlInstanceIdentity);
    sub_190D421B8();
    char v12 = (void *)v13[1];
    type metadata accessor for ControlSessionKey();
    swift_allocObject();
    id v7 = sub_190D0488C(v8, v10, v12);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

unint64_t sub_190D04C20()
{
  unint64_t result = qword_1E92AA600;
  if (!qword_1E92AA600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA600);
  }
  return result;
}

uint64_t sub_190D04C74(uint64_t a1, uint64_t a2)
{
  return sub_190D0518C(&qword_1E92AA618, a2, (void (*)(uint64_t))type metadata accessor for ControlSessionKey);
}

uint64_t type metadata accessor for ControlSessionKey()
{
  return self;
}

uint64_t sub_190D04CE0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_190D04D30@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 32);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for ControlSessionKey(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlSessionKey);
}

uint64_t dispatch thunk of ControlSessionKey.identifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ControlSessionKey.identifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ControlSessionKey.identifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ControlSessionKey.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ControlSessionKey.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ControlSessionKey.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ControlSessionKey.control.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ControlSessionKey.__allocating_init(identifier:identity:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of ControlSessionKey.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ControlSessionKey.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ControlSessionKey.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ControlSessionKey.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ControlSessionKey.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

unsigned char *storeEnumTagSinglePayload for ControlSessionKey.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D0504CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSessionKey.CodingKeys()
{
  return &type metadata for ControlSessionKey.CodingKeys;
}

unint64_t sub_190D05088()
{
  unint64_t result = qword_1E92AC198;
  if (!qword_1E92AC198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC198);
  }
  return result;
}

unint64_t sub_190D050E0()
{
  unint64_t result = qword_1E92AA610;
  if (!qword_1E92AA610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA610);
  }
  return result;
}

unint64_t sub_190D05138()
{
  unint64_t result = qword_1E92AA608;
  if (!qword_1E92AA608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA608);
  }
  return result;
}

uint64_t sub_190D0518C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190D051D4()
{
  unint64_t result = qword_1E92AA5D0;
  if (!qword_1E92AA5D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AA5D0);
  }
  return result;
}

uint64_t static AppIntent.descriptorStringTypeIdentifier.getter()
{
  return 0x6E65746E69707061;
}

uint64_t static AppIntent.asCHSControlActionMetadata(allowedAsLauncher:)(unsigned __int8 a1)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)CHSMutableControlActionMetadata), sel_init);
  static AppIntent.descriptorStringTypeIdentifier.getter();
  unsigned int v4 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setIntentType_, v4);

  if (swift_conformsToProtocol2()) {
    uint64_t v5 = v1;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v5) {
    char v6 = 1;
  }
  else {
    char v6 = sub_190D41338();
  }
  objc_msgSend(v3, sel_setIsLauncher_, a1 & v6 & 1);
  if (swift_conformsToProtocol2()) {
    uint64_t v7 = v1;
  }
  else {
    uint64_t v7 = 0;
  }
  objc_msgSend(v3, sel_setIsCameraCapture_, a1 & (v7 != 0));
  objc_msgSend(v3, sel_copy);
  sub_190D41E78();

  swift_unknownObjectRelease();
  sub_190D053FC();
  swift_dynamicCast();
  return v9;
}

unint64_t sub_190D053FC()
{
  unint64_t result = qword_1E92AA200;
  if (!qword_1E92AA200)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AA200);
  }
  return result;
}

uint64_t PrimitiveBox.init(wrapped:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t PrimitiveBox.wrapped.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t PrimitiveBox.wrapped.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*PrimitiveBox.wrapped.modify())()
{
  return nullsub_1;
}

uint64_t sub_190D05500(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64657070617277 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_190D422D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_190D05588()
{
  return 0x64657070617277;
}

uint64_t sub_190D055A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_190D05500(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_190D055D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190CCCB90();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190D05610(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_190D05664(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t PrimitiveBox.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v8 = *(void *)(a2 + 16);
  type metadata accessor for PrimitiveBox.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_190D42298();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D42418();
  sub_190D42268();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for PrimitiveBox.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t PrimitiveBox.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v22 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v23 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PrimitiveBox.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_190D42208();
  uint64_t v20 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v21 = a3;
  uint64_t v10 = type metadata accessor for PrimitiveBox();
  uint64_t v18 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v25;
  sub_190D42408();
  if (!v13)
  {
    uint64_t v25 = v10;
    uint64_t v14 = v20;
    uint64_t v15 = v22;
    sub_190D421B8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v23, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v19, v12, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for PrimitiveBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_190D05B38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PrimitiveBox.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_190D05B5C(void *a1, uint64_t a2)
{
  return PrimitiveBox.encode(to:)(a1, a2);
}

uint64_t sub_190D05B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_190D05B7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190D05C0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_190D05CC4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_190D05CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_190D05D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_190D05D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_190D05DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_190D05E30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_190D05F8C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x190D061A4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_190D061CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

unsigned char *sub_190D061D4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190D06270);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_190D06298()
{
  return swift_getWitnessTable();
}

uint64_t sub_190D062B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_190D062D0()
{
  return swift_getWitnessTable();
}

id sub_190D062EC(uint64_t a1)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v8 >= v6) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    if (!v12) {
      break;
    }
LABEL_18:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_19:
    uint64_t v14 = *(void *)(a1 + 56) + 16 * v10;
    if ((*(unsigned char *)(v14 + 8) & 1) == 0)
    {
      id result = [*(id *)v14 key];
      if (result)
      {
        MEMORY[0x192FD6080]();
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_190D41C18();
        }
        sub_190D41C38();
        id result = (id)sub_190D41C08();
      }
    }
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12) {
    goto LABEL_17;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12) {
    goto LABEL_17;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v6) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12) {
    goto LABEL_17;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 >= v6)
  {
LABEL_28:
    swift_release();
    return (id)v15;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
LABEL_17:
    int64_t v8 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190D064D0(uint64_t a1)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(a1 + 56) + 16 * v10;
    if ((*(unsigned char *)(v14 + 8) & 1) == 0)
    {
      id v15 = *(id *)v14;
      MEMORY[0x192FD6080]();
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_190D41C18();
      }
      sub_190D41C38();
      uint64_t result = sub_190D41C08();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return v16;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *RelevanceCache.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  void v5[2] = sub_190CD11BC(MEMORY[0x1E4FBC860]);
  v5[3] = v6;
  v5[4] = 0;
  v5[5] = a1;
  void v5[6] = a2;
  sub_190D07270();
  if (v2) {
    swift_release();
  }
  return v5;
}

uint64_t CacheFile.filename.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CacheFile.filename.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CacheFile.filename.modify())()
{
  return nullsub_1;
}

uint64_t CacheFile.size.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 40);
  unint64_t v3 = *(void *)(v1 + 48);
  uint64_t result = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      BOOL v5 = __OFSUB__(HIDWORD(v2), v2);
      int v6 = HIDWORD(v2) - v2;
      if (v5)
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x190D06814);
      }
      return v6;
    case 2uLL:
      uint64_t v9 = v2 + 16;
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v8 = *(void *)(v9 + 8);
      uint64_t result = v8 - v7;
      if (!__OFSUB__(v8, v7)) {
        return result;
      }
      goto LABEL_8;
    case 3uLL:
      return result;
    default:
      return BYTE6(v3);
  }
}

uint64_t CacheFile.relevances.getter@<X0>(char **a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  a1[3] = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC1A0);
  a1[4] = (char *)sub_190CD4928((unint64_t *)&unk_1E92AC1A8, &qword_1E92AC1A0);
  id v4 = objc_msgSend(*(id *)(v3 + 16), sel_groups);
  if (v4)
  {
    BOOL v5 = v4;
    sub_190C72C5C(0, &qword_1E92AA550);
    unint64_t v6 = sub_190D41BE8();
  }
  else
  {
    unint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_retain();
  uint64_t v7 = sub_190D0D9B0(v6, v3);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_190D0691C()
{
  uint64_t v0 = sub_190D41778();
  __swift_allocate_value_buffer(v0, qword_1E92B3088);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92B3088);
  return sub_190D41768();
}

uint64_t sub_190D069A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D06A00()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_190D06A4C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_190D06AA0())()
{
  return j__swift_endAccess;
}

void *RelevanceCache.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v2[2] = sub_190CD11BC(MEMORY[0x1E4FBC860]);
  v2[3] = v6;
  v2[4] = 0;
  v2[5] = a1;
  void v2[6] = a2;
  sub_190D07270();
  if (v3) {
    swift_release();
  }
  return v2;
}

uint64_t sub_190D06B60()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t result = 0;
    uint64_t v4 = v1 + 48;
    while (2)
    {
      uint64_t v5 = *(void *)(*(void *)v4 + 40);
      unint64_t v6 = *(void *)(*(void *)v4 + 48);
      uint64_t v7 = 0;
      switch(v6 >> 62)
      {
        case 1uLL:
          LODWORD(v7) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5)) {
            goto LABEL_13;
          }
          uint64_t v7 = (int)v7;
LABEL_8:
          BOOL v11 = __OFADD__(result, v7);
          result += v7;
          if (v11)
          {
            __break(1u);
LABEL_13:
            __break(1u);
LABEL_14:
            __break(1u);
            JUMPOUT(0x190D06BF8);
          }
          v4 += 24;
          if (!--v2) {
            return result;
          }
          continue;
        case 2uLL:
          uint64_t v10 = v5 + 16;
          uint64_t v9 = *(void *)(v5 + 16);
          uint64_t v8 = *(void *)(v10 + 8);
          BOOL v11 = __OFSUB__(v8, v9);
          uint64_t v7 = v8 - v9;
          if (!v11) {
            goto LABEL_8;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_8;
        default:
          uint64_t v7 = BYTE6(v6);
          goto LABEL_8;
      }
    }
  }
  return 0;
}

uint64_t sub_190D06C08()
{
  id v2 = sub_190D08F38();
  if (!v0)
  {
    uint64_t v4 = (uint64_t)v2;
    uint64_t v5 = v3;
    type metadata accessor for RelevanceCacheTransaction();
    uint64_t v1 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_190D09564(v6, v4, v5, 0x8000);
  }
  return v1;
}

void sub_190D06C8C(void (*a1)(uint64_t))
{
  uint64_t v3 = (void *)MEMORY[0x192FD6E60]();
  id v4 = sub_190D08F38();
  if (!v1)
  {
    uint64_t v6 = (uint64_t)v4;
    uint64_t v7 = v5;
    type metadata accessor for RelevanceCacheTransaction();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_190D09564(v9, v6, v7, 0x8000);
    a1(v8);
    if ((*(unsigned char *)(v8 + 48) & 1) == 0)
    {
      swift_retain();
      sub_190CD9554();
      swift_release();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_190D09224();
      sub_190D07270();
      sub_190D08494();
      swift_release();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + 48) = 1;
    }
    swift_release();
  }
}

void sub_190D06E10()
{
  uint64_t v2 = v1;
  v25[4] = *(char **)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  swift_beginAccess();
  id v4 = &_OBJC_LABEL_PROTOCOL___CHSWidgetConfigurationHost_Internal;
  for (unint64_t i = &selRef_archivedObjectsAsCArrayWithCount_; ; unint64_t i = &selRef_archivedObjectsAsCArrayWithCount_)
  {
    id v6 = objc_msgSend(v3, (SEL)v4[324], v22, v23);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
    v25[0] = 0;
    id v8 = objc_msgSend(v6, i[324], v7, v25);

    uint64_t v9 = v25[0];
    if (!v8)
    {
      uint64_t v21 = v25[0];
LABEL_14:
      sub_190D414B8();

      swift_willThrow();
      return;
    }
    uint64_t v10 = sub_190D41BE8();
    BOOL v11 = v9;

    v25[0] = (char *)v10;
    swift_bridgeObjectRetain();
    sub_190D0B8EC(v25);
    if (v2) {
      break;
    }
    unint64_t v12 = v25[0];
    uint64_t v13 = *((void *)v25[0] + 2);
    if (v13)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v3;
      uint64_t v24 = v10;
      uint64_t v14 = &v25[0][16 * v13 + 24];
      while (1)
      {
        swift_bridgeObjectRetain();
        id v15 = (void *)sub_190D41948();
        swift_bridgeObjectRelease();
        v25[0] = 0;
        unsigned int v16 = objc_msgSend(v6, sel_removeItemAtPath_error_, v15, v25);

        if (!v16) {
          break;
        }
        if (v13 == 1)
        {
          uint64_t v19 = v25[0];
          uint64_t v3 = v23;
          uint64_t v10 = v24;
          goto LABEL_11;
        }
        --v13;
        v14 -= 16;
        uint64_t v17 = *((void *)v12 + 2);
        uint64_t v18 = v25[0];
        if (v13 > v17)
        {
          __break(1u);
          swift_bridgeObjectRelease();
          return;
        }
      }
      uint64_t v21 = v25[0];
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_14;
    }
LABEL_11:
    swift_release();
    sub_190D07270();
    uint64_t v2 = 0;

    uint64_t v20 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    id v4 = &_OBJC_LABEL_PROTOCOL___CHSWidgetConfigurationHost_Internal;
    if (!v20)
    {
      *(void *)(v0 + 32) = 0;
      return;
    }
  }
  swift_release();
  __break(1u);
}

id sub_190D07090(void *a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  id v4 = a1;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_190CDE798((uint64_t)v4);
  if ((v6 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(v3 + 56) + 16 * v5;
  id v8 = *(id *)v7;
  int v9 = *(unsigned __int8 *)(v7 + 8);
  id v10 = *(id *)v7;

  swift_bridgeObjectRelease();
  if (v9 == 1)
  {

    return 0;
  }
  return v8;
}

uint64_t sub_190D0714C@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_190D07194()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_190D064D0(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_190D071F8()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  id v1 = sub_190D062EC(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_190CE10E0((unint64_t)v1);
  swift_bridgeObjectRelease();
  return v2;
}

void sub_190D07270()
{
  uint64_t v1 = v0;
  v140[3] = *MEMORY[0x1E4F143B8];
  uint64_t v125 = sub_190D414C8();
  unint64_t v2 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  v124 = (char *)v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v4 - 8);
  v123 = (char *)v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_190D415D8();
  v133 = *(char **)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  v128 = (char *)v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA458 != -1) {
LABEL_87:
  }
    swift_once();
  uint64_t v7 = sub_190D41778();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1E92B3088);
  swift_retain();
  uint64_t v126 = v8;
  int v9 = sub_190D41758();
  os_log_type_t v10 = sub_190D41D48();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = MEMORY[0x1E4FBC840];
  if (v11)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v140[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_beginAccess();
    uint64_t v15 = *(void *)(v1 + 40);
    unint64_t v16 = *(void *)(v1 + 48);
    swift_bridgeObjectRetain();
    v138 = (char *)sub_190CCB3A8(v15, v16, v140);
    sub_190D41E48();
    swift_release();
    uint64_t v12 = MEMORY[0x1E4FBC840];
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v9, v10, "Scanning for cache updates in %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v14, -1, -1);
    MEMORY[0x192FD7910](v13, -1, -1);
  }
  else
  {

    swift_release();
  }
  id v17 = objc_msgSend(self, sel_defaultManager);
  v130 = (void *)v1;
  unint64_t v18 = *(void *)(v1 + 24);
  int64_t v19 = *(void *)(v18 + 16);
  id v115 = v17;
  if (v19)
  {
    uint64_t v132 = v2;
    v140[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_190CDDE04(0, v19, 0);
    uint64_t v20 = v140[0];
    unint64_t v131 = v18;
    uint64_t v21 = (_OWORD *)(v18 + 40);
    do
    {
      uint64_t v22 = *((void *)v21 - 1);
      long long v135 = *v21;
      v140[0] = v20;
      unint64_t v24 = *(void *)(v20 + 16);
      unint64_t v23 = *(void *)(v20 + 24);
      uint64_t v25 = v135;
      swift_bridgeObjectRetain_n();
      swift_retain();
      if (v24 >= v23 >> 1)
      {
        sub_190CDDE04((void *)(v23 > 1), v24 + 1, 1);
        uint64_t v20 = v140[0];
      }
      uint64_t v21 = (_OWORD *)((char *)v21 + 24);
      *(void *)(v20 + 16) = v24 + 1;
      uint64_t v26 = v20 + 40 * v24;
      *(void *)(v26 + 32) = v22;
      *(void *)(v26 + 40) = v25;
      *(void *)(v26 + 48) = v22;
      *(_OWORD *)(v26 + 56) = v135;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    id v27 = v115;
    uint64_t v12 = MEMORY[0x1E4FBC840];
    unint64_t v2 = v132;
    if (*(void *)(v20 + 16)) {
      goto LABEL_11;
    }
  }
  else
  {
    id v27 = v17;
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_11:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA560);
      uint64_t v28 = sub_190D42108();
      goto LABEL_14;
    }
  }
  uint64_t v28 = MEMORY[0x1E4FBC868];
LABEL_14:
  uint64_t v29 = v130;
  v140[0] = v28;
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = v134;
  sub_190D0C880(v30, 1, v140);
  unint64_t v32 = v31;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    uint64_t v132 = v140[0];
    swift_beginAccess();
    v118 = &v137;
    v122 = v133 + 56;
    unsigned int v121 = *MEMORY[0x1E4F276C0];
    v120 = (void (**)(char *, void, uint64_t))(v2 + 104);
    v119 = v133 + 8;
    CC_LONG v33 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v34 = &selRef_archivedObjectsAsCArrayWithCount_;
    *(void *)&long long v35 = 136315138;
    long long v117 = v35;
    uint64_t v116 = v12 + 8;
    unint64_t v2 = MEMORY[0x1E4FBC860];
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = (void *)sub_190D41948();
      swift_bridgeObjectRelease();
      v138 = 0;
      id v37 = objc_msgSend(v27, v34[324], v36, &v138);

      uint64_t v38 = v138;
      if (!v37)
      {
        v95 = v138;
        swift_bridgeObjectRelease();
        sub_190D414B8();

LABEL_84:
        swift_willThrow();
        swift_bridgeObjectRelease();

        return;
      }
      uint64_t v39 = (char *)sub_190D41BE8();
      uint64_t v40 = v38;

      v138 = v39;
      swift_bridgeObjectRetain();
      sub_190D0B8EC(&v138);
      v134 = 0;
      swift_bridgeObjectRelease();
      uint64_t v41 = *((void *)v138 + 2);
      v114[1] = v138;
      if (!v41)
      {
        v133 = v33;
LABEL_66:
        unint64_t v96 = v2;
        swift_release();
        id v97 = v115;
        if (!*(void *)(v29[3] + 16)
          || (swift_bridgeObjectRetain(),
              uint64_t v98 = (void *)sub_190D41948(),
              swift_bridgeObjectRelease(),
              unsigned int v99 = objc_msgSend(v97, sel_fileExistsAtPath_, v98),
              v98,
              !v99))
        {
          long long v106 = v133;
          uint64_t v107 = *((void *)v133 + 2);
          if (v107)
          {
            v138 = (char *)MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            sub_190D42018();
            uint64_t v108 = 48;
            do
            {
              swift_retain();
              sub_190D41FF8();
              sub_190D42028();
              sub_190D42038();
              sub_190D42008();
              v108 += 24;
              --v107;
            }
            while (v107);
            v109 = v138;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            v109 = (char *)MEMORY[0x1E4FBC860];
          }
          uint64_t v110 = sub_190D0E358((unint64_t)v109);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v29[2] = v110;
          swift_bridgeObjectRelease();
          goto LABEL_80;
        }
        uint64_t v100 = *(void *)(v96 + 16);
        v101 = (char *)MEMORY[0x1E4FBC860];
        if (v100)
        {
          v138 = (char *)MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_190D42018();
          uint64_t v102 = 48;
          do
          {
            swift_retain();
            sub_190D41FF8();
            sub_190D42028();
            sub_190D42038();
            sub_190D42008();
            v102 += 24;
            --v100;
          }
          while (v100);
          v101 = v138;
          swift_bridgeObjectRelease();
        }
        uint64_t v103 = sub_190D0E358((unint64_t)v101);
        swift_bridgeObjectRelease();
        unint64_t v32 = v29 + 2;
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v136 = v29[2];
        v29[2] = 0x8000000000000000;
        v105 = v134;
        sub_190D0C57C(v103, (uint64_t)sub_190D0D50C, 0, isUniquelyReferenced_nonNull_native, &v136);
        long long v106 = v133;
        if (!v105)
        {
          *unint64_t v32 = v136;
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRelease();
LABEL_80:
          v29[3] = v106;
          swift_bridgeObjectRelease();
          v111 = sub_190D41758();
          os_log_type_t v112 = sub_190D41D48();
          if (os_log_type_enabled(v111, v112))
          {
            v113 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v113 = 0;
            _os_log_impl(&dword_190C6F000, v111, v112, "Done scanning for cache changes", v113, 2u);
            MEMORY[0x192FD7910](v113, -1, -1);
          }

          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_89;
      }
      id v42 = v138 + 40;
      v133 = v33;
      while (1)
      {
        uint64_t v1 = *((void *)v42 - 1);
        unint64_t v43 = v29[6];
        v138 = (char *)v29[5];
        unint64_t v139 = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_190D41A68();
        swift_bridgeObjectRetain();
        sub_190D41A68();
        swift_bridgeObjectRelease();
        unint64_t v44 = v138;
        unint64_t v45 = v139;
        if (sub_190D41AD8()) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        v42 += 16;
        if (!--v41) {
          goto LABEL_66;
        }
      }
      if (sub_190D41A28() < 0)
      {
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      *(void *)&long long v135 = v44;
      unint64_t v131 = v2;
      sub_190D41A48();
      uint64_t v1 = sub_190D41B18();
      unint64_t v2 = v46;
      unint64_t v48 = v47;
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      if (!((v1 ^ v2) >> 14)) {
        break;
      }
      uint64_t v51 = v134;
      uint64_t v52 = sub_190D0D8C8(v1, v2, v48, v50, 10);
      v134 = v51;
      if ((v53 & 0x100) != 0)
      {
        uint64_t v54 = sub_190D0CCB0(v1, v2, v48, v50, 10);
        char v58 = v57;
        swift_bridgeObjectRelease();
        if ((v58 & 1) == 0)
        {
          uint64_t v29 = v130;
          uint64_t v56 = v132;
LABEL_29:
          uint64_t v59 = v54 + 1;
          if (__OFADD__(v54, 1)) {
            goto LABEL_86;
          }
          if (v29[4] > (uint64_t)v59) {
            uint64_t v59 = (unsigned __int8 *)v29[4];
          }
          id v29[4] = v59;
          if (!*(void *)(v56 + 16)) {
            goto LABEL_45;
          }
          goto LABEL_38;
        }
        uint64_t v29 = v130;
        goto LABEL_37;
      }
      uint64_t v54 = (unsigned __int8 *)v52;
      char v55 = v53;
      swift_bridgeObjectRelease();
      uint64_t v56 = v132;
      if ((v55 & 1) == 0)
      {
        uint64_t v29 = v130;
        goto LABEL_29;
      }
      uint64_t v29 = v130;
      if (!*(void *)(v132 + 16)) {
        goto LABEL_45;
      }
LABEL_38:
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_190CDE68C(v135, v45);
      if (v61)
      {
        uint64_t v62 = *(void *)(v56 + 56) + 24 * v60;
        uint64_t v63 = *(void *)v62;
        long long v135 = *(_OWORD *)(v62 + 8);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v133 = sub_190CDDA28(0, *((void *)v133 + 2) + 1, 1, v133);
        }
        unint64_t v65 = *((void *)v133 + 2);
        unint64_t v64 = *((void *)v133 + 3);
        if (v65 >= v64 >> 1) {
          v133 = sub_190CDDA28((char *)(v64 > 1), v65 + 1, 1, v133);
        }
        char v66 = v133;
        *((void *)v133 + 2) = v65 + 1;
        uint64_t v67 = &v66[24 * v65];
        *((void *)v67 + 4) = v63;
        *(_OWORD *)(v67 + 40) = v135;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v2 = v131;
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
LABEL_45:
      uint64_t v127 = v41;
      swift_bridgeObjectRetain_n();
      uint64_t v68 = sub_190D41758();
      os_log_type_t v69 = sub_190D41D48();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        uint64_t v71 = (char *)swift_slowAlloc();
        v138 = v71;
        *(_DWORD *)uint64_t v70 = v117;
        swift_bridgeObjectRetain();
        uint64_t v136 = sub_190CCB3A8(v135, v45, (uint64_t *)&v138);
        uint64_t v29 = v130;
        sub_190D41E48();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_190C6F000, v68, v69, "Discovered new cache file: %s", v70, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v71, -1, -1);
        MEMORY[0x192FD7910](v70, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v72 = v134;
      unint64_t v2 = v131;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v122)(v123, 1, 1, v129);
      (*v120)(v124, v121, v125);
      swift_bridgeObjectRetain();
      sub_190D415B8();
      uint64_t v73 = sub_190D415F8();
      if (!v72)
      {
        uint64_t v75 = v73;
        unint64_t v76 = v74;
        type metadata accessor for RelevanceCacheReader();
        swift_allocObject();
        uint64_t v77 = sub_190D171F0(v75, v76);
        (*(void (**)(char *, uint64_t))v119)(v128, v129);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        objc_super v78 = (char *)v132;
        char v79 = swift_isUniquelyReferenced_nonNull_native();
        v138 = v78;
        sub_190D09DF8(v135, v45, v77, v135, v45, v79);
        uint64_t v80 = v138;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_retain();
        char v81 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v132 = (uint64_t)v80;
        if ((v81 & 1) == 0) {
          v133 = sub_190CDDA28(0, *((void *)v133 + 2) + 1, 1, v133);
        }
        uint64_t v41 = v127;
        unint64_t v83 = *((void *)v133 + 2);
        unint64_t v82 = *((void *)v133 + 3);
        if (v83 >= v82 >> 1) {
          v133 = sub_190CDDA28((char *)(v82 > 1), v83 + 1, 1, v133);
        }
        uint64_t v84 = v133;
        *((void *)v133 + 2) = v83 + 1;
        uint64_t v85 = &v84[24 * v83];
        *((void *)v85 + 4) = v135;
        *((void *)v85 + 5) = v45;
        *((void *)v85 + 6) = v77;
        swift_bridgeObjectRetain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v2 = (unint64_t)sub_190CDDA28(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
        }
        unint64_t v87 = *(void *)(v2 + 16);
        unint64_t v86 = *(void *)(v2 + 24);
        v134 = 0;
        if (v87 >= v86 >> 1) {
          unint64_t v2 = (unint64_t)sub_190CDDA28((char *)(v86 > 1), v87 + 1, 1, (char *)v2);
        }
        *(void *)(v2 + 16) = v87 + 1;
        objc_super v88 = (void *)(v2 + 24 * v87);
        v88[4] = v135;
        v88[5] = v45;
        v88[6] = v77;
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))v119)(v128, v129);
      swift_release();
      v89 = (void *)sub_190D41948();
      id v27 = v115;
      unsigned __int8 v90 = objc_msgSend(v115, sel_fileExistsAtPath_, v89);

      if (v90)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_84;
      }
      v134 = v72;
      swift_bridgeObjectRetain();
      v91 = sub_190D41758();
      os_log_type_t v92 = sub_190D41D48();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc();
        uint64_t v94 = (char *)swift_slowAlloc();
        v138 = v94;
        *(_DWORD *)v93 = v117;
        swift_bridgeObjectRetain();
        uint64_t v136 = sub_190CCB3A8(v135, v45, (uint64_t *)&v138);
        uint64_t v29 = v130;
        unint64_t v2 = v131;
        sub_190D41E48();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_190C6F000, v91, v92, "Need to retry. File deleted before we could read it: %s", v93, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v94, -1, -1);
        MEMORY[0x192FD7910](v93, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      swift_bridgeObjectRelease();
      CC_LONG v33 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v34 = &selRef_archivedObjectsAsCArrayWithCount_;
    }
    swift_bridgeObjectRelease();
LABEL_37:
    uint64_t v56 = v132;
    if (!*(void *)(v132 + 16)) {
      goto LABEL_45;
    }
    goto LABEL_38;
  }
  swift_unexpectedError();
  __break(1u);
LABEL_89:
  *unint64_t v32 = v136;
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_190D0848C()
{
  return swift_bridgeObjectRetain();
}

void sub_190D08494()
{
  uint64_t v3 = v0;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  uint64_t v57 = 0;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = (char *)sub_190D08DB4(v4);
  uint64_t v6 = *((void *)v5 + 2);
  if (!v6)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  int v9 = v5 + 56;
  char v10 = 1;
  while (2)
  {
    uint64_t v11 = *(void *)(*(void *)v9 + 40);
    unint64_t v12 = *(void *)(*(void *)v9 + 48);
    uint64_t v13 = 0;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v13) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_48;
        }
        uint64_t v13 = (int)v13;
        BOOL v14 = __OFADD__(v7, (int)v13);
        v7 += (int)v13;
        if (v14) {
          goto LABEL_51;
        }
        goto LABEL_14;
      case 2uLL:
        uint64_t v17 = v11 + 16;
        uint64_t v16 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v17 + 8);
        BOOL v14 = __OFSUB__(v15, v16);
        uint64_t v13 = v15 - v16;
        if (v14)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        BOOL v14 = __OFADD__(v7, v13);
        v7 += v13;
        if (v14) {
          goto LABEL_50;
        }
LABEL_14:
        if ((unint64_t)(v13 - 0x2000000000000000) >> 62 != 3)
        {
LABEL_44:
          __break(1u);
LABEL_45:
          swift_bridgeObjectRelease();
          uint64_t v5 = (char *)objc_msgSend(self, sel_defaultManager);
          uint64_t v51 = v5;
          if (v3 == v8)
          {
LABEL_63:
            unint64_t v48 = sub_190D41758();
            os_log_type_t v49 = sub_190D41D48();
            if (os_log_type_enabled(v48, v49))
            {
              unint64_t v50 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v50 = 0;
              _os_log_impl(&dword_190C6F000, v48, v49, "Done repacking", v50, 2u);
              MEMORY[0x192FD7910](v50, -1, -1);
            }

            sub_190D07270();
            swift_release();
            swift_bridgeObjectRelease();

            return;
          }
LABEL_52:
          uint64_t v36 = v5;
          swift_bridgeObjectRetain();
          uint64_t v37 = v2 + 24 * v8 + 48;
          while (1)
          {
            if (v8 >= v3) {
              __break(1u);
            }
            uint64_t v54 = *(void *)(v37 - 16);
            unint64_t v55 = *(void *)(v37 - 8);
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            uint64_t v39 = sub_190D41758();
            os_log_type_t v40 = sub_190D41D48();
            if (os_log_type_enabled(v39, v40))
            {
              uint64_t v41 = swift_slowAlloc();
              uint64_t v52 = (void *)swift_slowAlloc();
              id v58 = v52;
              *(_DWORD *)uint64_t v41 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)(v41 + 4) = sub_190CCB3A8(v54, v55, (uint64_t *)&v58);
              swift_release();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_190C6F000, v39, v40, "Deleting stale cache file: %s", (uint8_t *)v41, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x192FD7910](v52, -1, -1);
              uint64_t v42 = v41;
              uint64_t v36 = v51;
              MEMORY[0x192FD7910](v42, -1, -1);
            }
            else
            {

              swift_release();
              swift_bridgeObjectRelease();
            }
            unint64_t v43 = (void *)sub_190D41948();
            id v58 = 0;
            unsigned int v44 = objc_msgSend(v36, sel_removeItemAtPath_error_, v43, &v58);

            if (v44)
            {
              id v38 = v58;
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              id v45 = v58;
              unint64_t v46 = (void *)sub_190D414B8();

              swift_willThrow();
              unint64_t v47 = (void *)sub_190D41948();
              LODWORD(v45) = objc_msgSend(v36, sel_fileExistsAtPath_, v47);

              if (v45)
              {
                swift_willThrow();
                swift_release();

                swift_bridgeObjectRelease_n();
                swift_release();
                goto LABEL_42;
              }
              swift_release();
              swift_bridgeObjectRelease();
            }
            ++v8;
            v37 += 24;
            if (v3 == v8)
            {
              swift_bridgeObjectRelease();
              goto LABEL_63;
            }
          }
        }
LABEL_15:
        if (v7 >= 4 * v13)
        {
          char v10 = 0;
          uint64_t v57 = v7;
          uint64_t v8 = *((void *)v9 - 3);
        }
        v9 += 32;
        if (--v6) {
          continue;
        }
        swift_bridgeObjectRelease();
        if (v7 >= 419430401)
        {
          if (qword_1E92AA458 != -1) {
            swift_once();
          }
          uint64_t v18 = sub_190D41778();
          __swift_project_value_buffer(v18, (uint64_t)qword_1E92B3088);
          int64_t v19 = sub_190D41758();
          os_log_type_t v20 = sub_190D41D28();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = swift_slowAlloc();
            *(_DWORD *)uint64_t v21 = 134218240;
            sub_190D41E48();
            *(_WORD *)(v21 + 12) = 2048;
            uint64_t v59 = 419430400;
            sub_190D41E48();
            _os_log_impl(&dword_190C6F000, v19, v20, "Cache size (%ld bytes) exceeds maximum recommended size of (%ld bytes). Mmap is likely to fail soon.", (uint8_t *)v21, 0x16u);
            MEMORY[0x192FD7910](v21, -1, -1);
          }
        }
        if ((v10 & 1) == 0)
        {
          if (qword_1E92AA458 != -1) {
            swift_once();
          }
          uint64_t v22 = sub_190D41778();
          __swift_project_value_buffer(v22, (uint64_t)qword_1E92B3088);
          unint64_t v23 = sub_190D41758();
          os_log_type_t v24 = sub_190D41D48();
          if (os_log_type_enabled(v23, v24))
          {
            uint64_t v25 = swift_slowAlloc();
            *(_DWORD *)uint64_t v25 = 134218496;
            sub_190D41E48();
            *(_WORD *)(v25 + 12) = 2048;
            sub_190D41E48();
            *(_WORD *)(v25 + 22) = 2048;
            uint64_t v59 = v57;
            sub_190D41E48();
            _os_log_impl(&dword_190C6F000, v23, v24, "Repacking cache files %ld through %ld. Expecting packed size of %ld bytes.", (uint8_t *)v25, 0x20u);
            MEMORY[0x192FD7910](v25, -1, -1);
          }

          id v26 = sub_190D08F38();
          if (!v1)
          {
            uint64_t v28 = (uint64_t)v26;
            uint64_t v29 = v27;
            uint64_t v56 = v3;
            swift_beginAccess();
            if (v57 < 0)
            {
              sub_190D42098();
              __break(1u);
              JUMPOUT(0x190D08DA4);
            }
            uint64_t v30 = (void *)*MEMORY[0x1E4F28358];
            objc_allocWithZone(MEMORY[0x1E4F4D8A8]);
            swift_bridgeObjectRetain();
            id v31 = v30;
            id v32 = sub_190D0F314(v28, v29, (uint64_t)v31, v57);

            type metadata accessor for RelevanceCacheWriter();
            swift_initStackObject();
            sub_190CD79AC((uint64_t)v32);
            uint64_t v2 = *(void *)(v56 + 24);
            uint64_t v3 = *(void *)(v2 + 16);
            if (v3 < v8)
            {
              __break(1u);
            }
            else if ((v8 & 0x8000000000000000) == 0)
            {
              uint64_t v53 = *(void *)(v56 + 24);
              if (v3 != v8)
              {
                swift_bridgeObjectRetain_n();
                uint64_t v33 = v2 + 24 * v3 + 24;
                uint64_t v2 = v3;
                do
                {
                  if (--v2 < v8 || v2 >= v3)
                  {
                    __break(1u);
                    goto LABEL_44;
                  }
                  swift_bridgeObjectRetain();
                  uint64_t v35 = swift_retain();
                  sub_190CD7AFC(v35, v8 == 0);
                  swift_release();
                  swift_bridgeObjectRelease();
                  v33 -= 24;
                }
                while (v8 != v2);
                uint64_t v2 = v53;
                swift_bridgeObjectRelease();
                goto LABEL_41;
              }
LABEL_69:
              swift_bridgeObjectRetain();
LABEL_41:
              sub_190CD9554();
              sub_190D09224();
              goto LABEL_45;
            }
            __break(1u);
            goto LABEL_69;
          }
        }
        return;
      case 3uLL:
        goto LABEL_15;
      default:
        uint64_t v13 = BYTE6(v12);
        BOOL v14 = __OFADD__(v7, BYTE6(v12));
        v7 += BYTE6(v12);
        if (!v14) {
          goto LABEL_14;
        }
        goto LABEL_49;
    }
  }
}

uint64_t sub_190D08DB4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_190D0D554(a1);
  unint64_t v2 = v1[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v4 = 0;
  unint64_t v5 = v2 >> 1;
  unint64_t v6 = v2 - 1;
  uint64_t v7 = 4 * v2;
  uint64_t v8 = 7;
  unint64_t v17 = v2 >> 1;
  while (1)
  {
    if (v4 == v6) {
      goto LABEL_4;
    }
    unint64_t v9 = v1[2];
    if (v4 >= v9) {
      break;
    }
    if (v6 >= v9) {
      goto LABEL_13;
    }
    uint64_t v10 = v1[v8 - 3];
    uint64_t v11 = v1[v8 - 2];
    uint64_t v12 = v1[v8];
    uint64_t v13 = v1[v7 + 2];
    uint64_t v20 = v1[v7 + 1];
    uint64_t v21 = v1[v7];
    uint64_t v14 = v1[v7 + 3];
    uint64_t v18 = v1[v8 - 1];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v19 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_190CF8750(v1);
    }
    uint64_t v15 = &v1[v8];
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *(v15 - 3) = v21;
    *(v15 - 2) = v20;
    *(v15 - 1) = v13;
    void *v15 = v14;
    if (v6 >= v1[2]) {
      goto LABEL_14;
    }
    uint64_t v16 = &v1[v7];
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v16 = v19;
    v16[1] = v11;
    v16[2] = v18;
    id v16[3] = v12;
    unint64_t v5 = v17;
LABEL_4:
    ++v4;
    v8 += 4;
    --v6;
    v7 -= 4;
    if (v5 == v4) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

id sub_190D08F38()
{
  v21[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_190D415D8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v21[-1] - v6;
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v21[-1] - v8;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D414E8();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_defaultManager);
  uint64_t v11 = (void *)sub_190D414F8();
  v21[0] = 0;
  id v12 = objc_msgSend(v10, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v11, 1, v21);

  id v13 = v21[0];
  if (v12)
  {
    sub_190D41588();
    id v14 = v13;

    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F80]), sel_init);
    id v16 = objc_msgSend(v15, sel_globallyUniqueString);

    sub_190D41978();
    sub_190D41548();
    swift_bridgeObjectRelease();
    id v17 = (id)sub_190D415A8();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v1 + 8);
    v18(v4, v0);
    v18(v7, v0);
    v18(v9, v0);
  }
  else
  {
    id v17 = v21[0];
    sub_190D414B8();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
  }
  return v17;
}

void sub_190D09224()
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v19 = objc_msgSend(self, sel_defaultManager);
  swift_beginAccess();
  uint64_t v18 = v0;
  while (1)
  {
    uint64_t v1 = v0[4];
    uint64_t v2 = v0[6];
    id v20 = (id)v0[5];
    uint64_t v21 = v2;
    swift_bridgeObjectRetain();
    sub_190D41A68();
    id v3 = v20;
    uint64_t v4 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA308);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_190D4B270;
    *(void *)(v5 + 56) = MEMORY[0x1E4FBC1C8];
    *(void *)(v5 + 64) = MEMORY[0x1E4FBC240];
    *(void *)(v5 + 32) = v1;
    sub_190D41988();
    id v20 = v3;
    uint64_t v21 = v4;
    swift_bridgeObjectRetain();
    sub_190D41A68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)sub_190D41948();
    uint64_t v7 = (void *)sub_190D41948();
    id v20 = 0;
    LOBYTE(v1) = objc_msgSend(v19, sel_moveItemAtPath_toPath_error_, v6, v7, &v20);

    if (v1)
    {
      id v17 = v20;

      swift_bridgeObjectRelease();
      return;
    }
    id v8 = v20;
    unint64_t v9 = (void *)sub_190D414B8();

    swift_willThrow();
    id v10 = (void *)sub_190D41948();
    unsigned int v11 = objc_msgSend(v19, sel_fileExistsAtPath_, v10);

    if (!v11) {
      break;
    }
    id v12 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = objc_msgSend(v19, sel_fileExistsAtPath_, v12);

    if ((v13 & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v0 = v18;
    uint64_t v14 = v18[4];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      __break(1u);
    }
    v18[4] = v16;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  swift_willThrow();
}

uint64_t RelevanceCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RelevanceCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_190D09564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  *(unsigned char *)(v6 + 48) = 0;
  *(void *)(v6 + 24) = a1;
  id v10 = (void *)*MEMORY[0x1E4F28358];
  objc_allocWithZone(MEMORY[0x1E4F4D8A8]);
  swift_retain();
  swift_bridgeObjectRetain();
  id v11 = v10;
  id v12 = sub_190D0F314(a2, a3, (uint64_t)v11, a4);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    type metadata accessor for RelevanceCacheTransaction();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v13 = (uint64_t)v12;

    type metadata accessor for RelevanceCacheWriter();
    swift_allocObject();
    uint64_t v14 = sub_190CD79AC(v13);
    swift_release();
    *(void *)(v6 + 16) = v14;
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a3;
  }
  return v6;
}

void sub_190D09690(void *a1)
{
  if (*(unsigned char *)(v1 + 48) == 1)
  {
    sub_190CDAE90();
    swift_allocError();
    *uint64_t v6 = xmmword_190D4D4A0;
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_retain();
    id v3 = a1;
    id v4 = [v3 key];
    uint64_t v5 = (void *)MEMORY[0x1F4188790](v4);
    sub_190CD9924(v5, (void (*)(id, uint64_t))sub_190D0EBA4);

    swift_release();
  }
}

uint64_t sub_190D097A0(void *a1)
{
  if (*(unsigned char *)(v1 + 48) == 1)
  {
    sub_190CDAE90();
    swift_allocError();
    *uint64_t v5 = xmmword_190D4D4A0;
    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    swift_retain();
    id v3 = a1;
    sub_190CD9924(v3, (void (*)(id, uint64_t))sub_190D0F43C);

    return swift_release();
  }
  return result;
}

uint64_t sub_190D0989C()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    swift_retain();
    sub_190CD9554();
    uint64_t result = swift_release();
    if (!v1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_190D09224();
      sub_190D07270();
      sub_190D08494();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 48) = 1;
    }
  }
  return result;
}

uint64_t RelevanceCacheTransaction.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RelevanceCacheTransaction.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 49, 7);
}

id sub_190D099EC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_190C72C5C(0, (unint64_t *)&unk_1E92AA520);
  id v3 = (void *)sub_190D41BD8();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_190D09A6C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1D0);
  id v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_190D09AD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_190D41AC8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x192FD5F50](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

_OWORD *sub_190D09B50(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_190CDE608((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_190D0A970();
      goto LABEL_7;
    }
    sub_190CDE9A0(v12, a3 & 1);
    unint64_t v18 = sub_190CDE608((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      BOOL v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)sub_190D42338();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    return sub_190CD0AB0(a1, v16);
  }
LABEL_13:
  sub_190D0A858(v9, (uint64_t)a2, a1, v15);
  return a2;
}

id sub_190D09C94(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_190CDE704((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_190D0AB38();
LABEL_7:
    BOOL v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_unknownObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_190CDECAC(v12, a3 & 1);
  unint64_t v18 = sub_190CDE704((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for CHSExtensionIdentity();
    id result = (id)sub_190D42338();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  BOOL v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v15[2] = v23;
  return a2;
}

uint64_t sub_190D09DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_190CDE68C(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_190D0AEA0();
LABEL_7:
    BOOL v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (void *)(v22[7] + 24 * v16);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v23 = a1;
      v23[1] = a2;
      id v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_190CDF588(v19, a6 & 1);
  unint64_t v25 = sub_190CDE68C(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_190D42338();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  BOOL v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a4;
  v27[1] = a5;
  uint64_t v28 = (void *)(v22[7] + 24 * v16);
  *uint64_t v28 = a1;
  v28[1] = a2;
  v28[2] = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v22[2] = v31;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190D09F98(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_190CDE7E8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_190D0B088();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_190CDF8CC(result, a3 & 1);
  uint64_t result = sub_190CDE7E8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_190D42338();
  __break(1u);
  return result;
}

uint64_t sub_190D0A0D4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_190D0A114(a1, a2, a3, (uint64_t *)&unk_1E92AA4B0, (void (*)(void))sub_190CDFB84);
}

uint64_t sub_190D0A0F4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_190D0A114(a1, a2, a3, &qword_1E92AA4C0, (void (*)(void))sub_190CDFB90);
}

uint64_t sub_190D0A114(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_190CDE82C(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_190D0B244(a4);
LABEL_7:
    uint64_t v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a5();
  unint64_t v23 = sub_190CDE82C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    type metadata accessor for ControlSessionKey();
    uint64_t result = sub_190D42338();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v8;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = 8 * v14;
  *(void *)(v20[6] + v25) = a2;
  *(void *)(v20[7] + v25) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v28;
  return swift_retain();
}

void sub_190D0A294(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_190CDE68C(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 < v20 || (a7 & 1) == 0)
  {
    if (v22 < v20 || (a7 & 1) != 0)
    {
      sub_190CDFF04(v20, a7 & 1);
      unint64_t v23 = sub_190CDE68C(a5, a6);
      if ((v21 & 1) != (v24 & 1))
      {
LABEL_17:
        sub_190D42338();
        __break(1u);
        return;
      }
      unint64_t v17 = v23;
    }
    else
    {
      sub_190D0B3E8();
    }
  }
  char v25 = a4 & 1;
  uint64_t v26 = (void *)*v8;
  if (v21)
  {
    uint64_t v27 = v26[7] + 32 * v17;
    uint64_t v28 = *(void **)(v27 + 16);
    swift_bridgeObjectRelease();

    *(void *)uint64_t v27 = a1;
    *(void *)(v27 + 8) = a2;
    *(void *)(v27 + 16) = a3;
    *(unsigned char *)(v27 + 24) = v25;
    return;
  }
  v26[(v17 >> 6) + 8] |= 1 << v17;
  uint64_t v29 = (uint64_t *)(v26[6] + 16 * v17);
  *uint64_t v29 = a5;
  v29[1] = a6;
  uint64_t v30 = v26[7] + 32 * v17;
  *(void *)uint64_t v30 = a1;
  *(void *)(v30 + 8) = a2;
  *(void *)(v30 + 16) = a3;
  *(unsigned char *)(v30 + 24) = v25;
  uint64_t v31 = v26[2];
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v26[2] = v33;
  swift_bridgeObjectRetain();
}

uint64_t sub_190D0A448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_190CDE8EC(a2, a3, a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t updated = type metadata accessor for IconStore.FileVersionUpdateMigration(0);
      return sub_190D0F234(a1, v23 + *(void *)(*(void *)(updated - 8) + 72) * v16, type metadata accessor for IconStore.FileVersionUpdateMigration);
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_190D0B630(type metadata accessor for IconStore.FileVersionUpdateMigration, &qword_1E92AA1B0, type metadata accessor for IconStore.FileVersionUpdateMigration);
    goto LABEL_7;
  }
  sub_190CE0248(v19, a6 & 1);
  unint64_t v26 = sub_190CDE8EC(a2, a3, a4, a5);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA110);
    uint64_t result = sub_190D42338();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_190D0A8C0(v16, a2, a3, a4, a5, a1, v22, type metadata accessor for IconStore.FileVersionUpdateMigration, type metadata accessor for IconStore.FileVersionUpdateMigration);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_190D0A650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_190CDE8EC(a2, a3, a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t v24 = type metadata accessor for IconStore.FileRenameMigration(0);
      return sub_190D0F234(a1, v23 + *(void *)(*(void *)(v24 - 8) + 72) * v16, type metadata accessor for IconStore.FileRenameMigration);
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_190D0B630(type metadata accessor for IconStore.FileRenameMigration, (uint64_t *)&unk_1E92ABD38, type metadata accessor for IconStore.FileRenameMigration);
    goto LABEL_7;
  }
  sub_190CE026C(v19, a6 & 1);
  unint64_t v26 = sub_190CDE8EC(a2, a3, a4, a5);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA110);
    uint64_t result = sub_190D42338();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_190D0A8C0(v16, a2, a3, a4, a5, a1, v22, type metadata accessor for IconStore.FileRenameMigration, type metadata accessor for IconStore.FileRenameMigration);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_OWORD *sub_190D0A858(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_190CD0AB0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_190D0A8C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t (*a8)(void), uint64_t (*a9)(void))
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = (void *)(a7[6] + 32 * a1);
  void *v12 = a2;
  v12[1] = a3;
  void v12[2] = a4;
  uint64_t v12[3] = a5;
  uint64_t v13 = a7[7];
  uint64_t v14 = a8(0);
  uint64_t result = sub_190D0F1CC(a6, v13 + *(void *)(*(void *)(v14 - 8) + 72) * a1, a9);
  uint64_t v16 = a7[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a7[2] = v18;
  }
  return result;
}

id sub_190D0A970()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA080);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D420D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    BOOL v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_190CCC328(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_190CD0AB0(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_190D0AB38()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D420D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    BOOL v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_190D0ACE4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA570);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D420D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    BOOL v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    int64_t v20 = *(void **)v19;
    LOBYTE(v19) = *(unsigned char *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v21 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v21 = v20;
    *(unsigned char *)(v21 + 8) = v19;
    id v22 = v20;
    id result = v17;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_190D0AEA0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA560);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D420D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    BOOL v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)(v21 + 8);
    *int64_t v23 = v19;
    v23[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_190D0B088()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA6C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D420D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_190D0B22C()
{
  return sub_190D0B244((uint64_t *)&unk_1E92AA4B0);
}

void *sub_190D0B238()
{
  return sub_190D0B244(&qword_1E92AA4C0);
}

void *sub_190D0B244(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_190D420D8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_190D0B3E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA210);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D420D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    long long v24 = *(void **)(v21 + 16);
    LOBYTE(v21) = *(unsigned char *)(v21 + 24);
    uint64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v25 = v18;
    v25[1] = v19;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(void *)(v26 + 16) = v24;
    *(unsigned char *)(v26 + 24) = v21;
    id v27 = v24;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_190D0B5C8()
{
  return sub_190D0B630(type metadata accessor for IconStore.FileVersionUpdateMigration, &qword_1E92AA1B0, type metadata accessor for IconStore.FileVersionUpdateMigration);
}

uint64_t sub_190D0B5FC()
{
  return sub_190D0B630(type metadata accessor for IconStore.FileRenameMigration, (uint64_t *)&unk_1E92ABD38, type metadata accessor for IconStore.FileRenameMigration);
}

uint64_t sub_190D0B630(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v42 = a3;
  uint64_t v5 = a1(0);
  uint64_t v41 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  os_log_type_t v40 = (char *)&v37 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v37 = v3;
  uint64_t v7 = *v3;
  uint64_t v8 = sub_190D420D8();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v44 = v8;
  if (!v9)
  {
    uint64_t result = swift_release();
    uint64_t v36 = v44;
    uint64_t v35 = v37;
LABEL_28:
    uint64_t *v35 = v36;
    return result;
  }
  uint64_t v10 = v8;
  uint64_t v11 = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)v11 >= v7 + 64 + 8 * v12)
  {
    memmove(v11, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v44;
  }
  uint64_t v38 = v7 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v43 = v7;
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  int64_t v39 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v18 = (uint64_t)v40;
  uint64_t v19 = v42;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      uint64_t result = v43;
      goto LABEL_12;
    }
    int64_t v32 = v14 + 1;
    uint64_t result = v43;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v32 >= v39) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v32);
    ++v14;
    if (!v33)
    {
      int64_t v14 = v32 + 1;
      if (v32 + 1 >= v39) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v38 + 8 * v14);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v33 - 1) & v33;
    unint64_t v21 = __clz(__rbit64(v33)) + (v14 << 6);
LABEL_12:
    uint64_t v23 = 32 * v21;
    long long v24 = (uint64_t *)(*(void *)(result + 48) + 32 * v21);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    unint64_t v29 = *(void *)(v41 + 72) * v21;
    sub_190D0F164(*(void *)(result + 56) + v29, v18, v19);
    uint64_t v30 = v44;
    uint64_t v31 = (void *)(*(void *)(v44 + 48) + v23);
    *uint64_t v31 = v26;
    v31[1] = v25;
    _OWORD v31[2] = v27;
    v31[3] = v28;
    sub_190D0F1CC(v18, *(void *)(v30 + 56) + v29, v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v39)
  {
LABEL_26:
    uint64_t result = swift_release();
    uint64_t v35 = v37;
    uint64_t v36 = v44;
    goto LABEL_28;
  }
  unint64_t v33 = *(void *)(v38 + 8 * v34);
  if (v33)
  {
    int64_t v14 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v14 >= v39) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v14);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190D0B8EC(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_190D0D99C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_190D0B958(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_190D0B958(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_190D422A8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_190D0C044(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          id v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_190D0C114((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v97 = sub_190D0C568((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_190D41C28();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_190D422D8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_190D422D8()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_190D0C3B0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_190D0C3B0((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          os_log_type_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            char v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        objc_super v88 = v42;
        unint64_t v89 = v44;
        unsigned __int8 v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_190D0C114((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        int64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_190D422D8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_190D42098();
  __break(1u);
  return result;
}

uint64_t sub_190D0C044(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_190D422D8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_190D0C114(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      unint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_190D422D8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    int64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_190D422D8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_190D0C4AC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_190D42118();
  __break(1u);
  return result;
}

char *sub_190D0C3B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC248);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190D0C4AC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_190D42118();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_190D0C568(uint64_t a1)
{
  return sub_190D0C3B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_190D0C57C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v53 = v8;
  uint64_t v54 = 0;
  uint64_t v55 = v11 & v9;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_190D0D710((uint64_t)&v48);
  uint64_t v12 = v48;
  if (!v48) {
    goto LABEL_27;
  }
  uint64_t v13 = v49;
  char v14 = v50;
  BOOL v15 = (void *)*a5;
  unint64_t v17 = sub_190CDE798((uint64_t)v48);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v21 = v16;
  if (v15[3] >= v20)
  {
    if (a4)
    {
      long long v24 = (void *)*a5;
      if (v16) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_190D0ACE4();
      long long v24 = (void *)*a5;
      if (v21) {
        goto LABEL_12;
      }
    }
LABEL_14:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    *(void *)(v24[6] + 8 * v17) = v12;
    uint64_t v26 = v24[7] + 16 * v17;
    *(void *)uint64_t v26 = v13;
    *(unsigned char *)(v26 + 8) = v14;
    uint64_t v27 = v24[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v29;
LABEL_16:
    sub_190D0D710((uint64_t)&v48);
    for (unint64_t i = v48; v48; unint64_t i = v48)
    {
      uint64_t v32 = v49;
      char v33 = v50;
      int64_t v34 = (void *)*a5;
      unint64_t v36 = sub_190CDE798((uint64_t)i);
      uint64_t v37 = v34[2];
      BOOL v38 = (v35 & 1) == 0;
      uint64_t v39 = v37 + v38;
      if (__OFADD__(v37, v38)) {
        goto LABEL_28;
      }
      char v40 = v35;
      if (v34[3] < v39)
      {
        sub_190CDF29C(v39, 1);
        unint64_t v41 = sub_190CDE798((uint64_t)i);
        if ((v40 & 1) != (v42 & 1)) {
          goto LABEL_30;
        }
        unint64_t v36 = v41;
      }
      uint64_t v43 = (void *)*a5;
      if (v40)
      {

        uint64_t v31 = v43[7] + 16 * v36;
        *(void *)uint64_t v31 = v32;
        *(unsigned char *)(v31 + 8) = v33;
      }
      else
      {
        v43[(v36 >> 6) + 8] |= 1 << v36;
        *(void *)(v43[6] + 8 * v36) = i;
        uint64_t v44 = v43[7] + 16 * v36;
        *(void *)uint64_t v44 = v32;
        *(unsigned char *)(v44 + 8) = v33;
        uint64_t v45 = v43[2];
        BOOL v28 = __OFADD__(v45, 1);
        uint64_t v46 = v45 + 1;
        if (v28) {
          goto LABEL_29;
        }
        v43[2] = v46;
      }
      sub_190D0D710((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_190CEA740();
    return swift_release();
  }
  sub_190CDF29C(v20, a4 & 1);
  unint64_t v22 = sub_190CDE798((uint64_t)v12);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v17 = v22;
    long long v24 = (void *)*a5;
    if ((v21 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:

    uint64_t v25 = v24[7] + 16 * v17;
    *(void *)uint64_t v25 = v13;
    *(unsigned char *)(v25 + 8) = v14;
    goto LABEL_16;
  }
LABEL_30:
  sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
  uint64_t result = sub_190D42338();
  __break(1u);
  return result;
}

void sub_190D0C880(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v45 = v5;
  if (v5)
  {
    if (!*(void *)(v4 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    long long v46 = *(_OWORD *)(v4 + 56);
    uint64_t v7 = *(void *)(v4 + 40);
    uint64_t v6 = *(void *)(v4 + 48);
    uint64_t v8 = *(void *)(v4 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v7)
    {
      uint64_t v44 = v4;
      uint64_t v9 = (void *)*a3;
      unint64_t v11 = sub_190CDE68C(v8, v7);
      uint64_t v12 = v9[2];
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v15 = v10;
      if (v9[3] >= v14)
      {
        if (a2)
        {
          if ((v10 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_190D0AEA0();
          if ((v15 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_190CDF588(v14, a2 & 1);
        unint64_t v16 = sub_190CDE68C(v8, v7);
        if ((v15 & 1) != (v17 & 1))
        {
LABEL_30:
          sub_190D42338();
          __break(1u);
LABEL_31:
          sub_190D41F68();
          sub_190D41A68();
          sub_190D42048();
          sub_190D41A68();
          sub_190D420A8();
          __break(1u);
          return;
        }
        unint64_t v11 = v16;
        if ((v15 & 1) == 0)
        {
LABEL_14:
          uint64_t v20 = (void *)*a3;
          *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
          char v21 = (uint64_t *)(v20[6] + 16 * v11);
          uint64_t *v21 = v8;
          v21[1] = v7;
          uint64_t v22 = v20[7] + 24 * v11;
          *(void *)uint64_t v22 = v6;
          *(_OWORD *)(v22 + 8) = v46;
          uint64_t v23 = v20[2];
          BOOL v24 = __OFADD__(v23, 1);
          uint64_t v25 = v23 + 1;
          if (v24)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          void v20[2] = v25;
          if (v45 != 1)
          {
            uint64_t v26 = (_OWORD *)(v4 + 96);
            unint64_t v27 = 1;
            while (v27 < *(void *)(v4 + 16))
            {
              long long v47 = *v26;
              uint64_t v29 = *((void *)v26 - 2);
              uint64_t v28 = *((void *)v26 - 1);
              uint64_t v30 = *((void *)v26 - 3);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              if (!v29) {
                goto LABEL_25;
              }
              uint64_t v31 = (void *)*a3;
              unint64_t v32 = sub_190CDE68C(v30, v29);
              uint64_t v34 = v31[2];
              BOOL v35 = (v33 & 1) == 0;
              BOOL v24 = __OFADD__(v34, v35);
              uint64_t v36 = v34 + v35;
              if (v24) {
                goto LABEL_28;
              }
              char v37 = v33;
              if (v31[3] < v36)
              {
                sub_190CDF588(v36, 1);
                unint64_t v32 = sub_190CDE68C(v30, v29);
                if ((v37 & 1) != (v38 & 1)) {
                  goto LABEL_30;
                }
              }
              if (v37) {
                goto LABEL_11;
              }
              uint64_t v39 = (void *)*a3;
              *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
              char v40 = (uint64_t *)(v39[6] + 16 * v32);
              *char v40 = v30;
              v40[1] = v29;
              uint64_t v41 = v39[7] + 24 * v32;
              *(void *)uint64_t v41 = v28;
              *(_OWORD *)(v41 + 8) = v47;
              uint64_t v42 = v39[2];
              BOOL v24 = __OFADD__(v42, 1);
              uint64_t v43 = v42 + 1;
              if (v24) {
                goto LABEL_29;
              }
              ++v27;
              v39[2] = v43;
              uint64_t v26 = (_OWORD *)((char *)v26 + 40);
              uint64_t v4 = v44;
              if (v45 == v27) {
                goto LABEL_25;
              }
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      uint64_t v18 = (void *)swift_allocError();
      swift_willThrow();
      id v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA360);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

unsigned __int8 *sub_190D0CCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_190D0F29C();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_190D41B08();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_190D0D020();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_190D41FD8();
  }
LABEL_7:
  BOOL v13 = sub_190D0CDA4(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_190D0CDA4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  id v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_190D0D020()
{
  unint64_t v0 = sub_190D41B18();
  uint64_t v4 = sub_190D0D0A0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_190D0D0A0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_190D0D1F8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_190D09A6C(v9, 0);
      unint64_t v12 = sub_190D0D2F8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_190D41FD8();
LABEL_4:
        JUMPOUT(0x192FD5EC0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x192FD5EC0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x192FD5EC0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_190D0D1F8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_190D09AD4(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_190D09AD4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_190D41AA8();
}

unint64_t sub_190D0D2F8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_190D09AD4(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_190D41AB8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_190D41FD8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_190D09AD4(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_190D41A88();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_190D0D50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *(void **)(a1 + 8);
  id v6 = *(id *)a1;
  id v2 = *(id *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  id v4 = v3;
  return v6;
}

uint64_t sub_190D0D554(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  id v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 4;
    id v6 = (uint64_t *)(result + 48);
    while (1)
    {
      uint64_t v8 = *(v6 - 2);
      uint64_t v7 = *(v6 - 1);
      uint64_t v9 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_retain();
        BOOL v10 = __OFSUB__(v3--, 1);
        if (v10) {
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v11 = v2[3];
        if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_31;
        }
        int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
        if (v12 <= 1) {
          uint64_t v13 = 1;
        }
        else {
          uint64_t v13 = v12;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA300);
        uint64_t v14 = (void *)swift_allocObject();
        int64_t v15 = _swift_stdlib_malloc_size(v14);
        uint64_t v16 = v15 - 32;
        if (v15 < 32) {
          uint64_t v16 = v15 - 1;
        }
        uint64_t v17 = v16 >> 5;
        void v14[2] = v13;
        void v14[3] = 2 * (v16 >> 5);
        unint64_t v18 = v14 + 4;
        uint64_t v19 = v2[3] >> 1;
        uint64_t v5 = &v14[4 * v19 + 4];
        uint64_t v20 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        if (v2[2])
        {
          if (v14 != v2 || v18 >= &v2[4 * v19 + 4]) {
            memmove(v18, v2 + 4, 32 * v19);
          }
          swift_bridgeObjectRetain();
          swift_retain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
        }
        uint64_t result = swift_release();
        id v2 = v14;
        BOOL v10 = __OFSUB__(v20, 1);
        uint64_t v3 = v20 - 1;
        if (v10)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
      }
      *uint64_t v5 = v4;
      v5[1] = v8;
      uint64_t v5[2] = v7;
      v5[3] = v9;
      v5 += 4;
      v6 += 3;
      if (v1 == ++v4)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  uint64_t v3 = 0;
LABEL_26:
  unint64_t v22 = v2[3];
  if (v22 >= 2)
  {
    unint64_t v23 = v22 >> 1;
    BOOL v10 = __OFSUB__(v23, v3);
    uint64_t v24 = v23 - v3;
    if (v10) {
      goto LABEL_32;
    }
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

void sub_190D0D710(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v15 = (unint64_t)(v1[2] + 64) >> 6;
    if (v14 < v15)
    {
      uint64_t v16 = v1[1];
      unint64_t v17 = *(void *)(v16 + 8 * v14);
      if (v17)
      {
LABEL_9:
        uint64_t v7 = (v17 - 1) & v17;
        unint64_t v8 = __clz(__rbit64(v17)) + (v14 << 6);
        int64_t v6 = v14;
        goto LABEL_3;
      }
      int64_t v18 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v15)
      {
        unint64_t v17 = *(void *)(v16 + 8 * v18);
        if (v17)
        {
LABEL_12:
          int64_t v14 = v18;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v15)
        {
          unint64_t v17 = *(void *)(v16 + 8 * (v5 + 3));
          if (v17)
          {
            int64_t v14 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v18 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v15)
          {
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (v17) {
              goto LABEL_12;
            }
            int64_t v14 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v15)
            {
              unint64_t v17 = *(void *)(v16 + 8 * v14);
              if (v17) {
                goto LABEL_9;
              }
              int64_t v6 = v15 - 1;
              int64_t v19 = v5 + 6;
              while (v15 != v19)
              {
                unint64_t v17 = *(void *)(v16 + 8 * v19++);
                if (v17)
                {
                  int64_t v14 = v19 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 0;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = *(void **)(*(void *)(v3 + 48) + 8 * v8);
  uint64_t v10 = *(void *)(v3 + 56) + 16 * v8;
  unint64_t v11 = *(void **)v10;
  LOBYTE(v10) = *(unsigned char *)(v10 + 8);
  v1[3] = v6;
  v1[4] = v7;
  int64_t v12 = (void (*)(void *))v1[5];
  v21[0] = v9;
  v21[1] = v11;
  char v22 = v10;
  id v13 = v11;
  id v20 = v9;
  v12(v21);
}

uint64_t sub_190D0D8C8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unint64_t v11 = (void *)sub_190D41FD8();
  }
  uint64_t result = sub_190D0DF30((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

char *sub_190D0D99C(uint64_t a1)
{
  return sub_190CDE068(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_190D0D9B0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_190D420B8())
  {
    unint64_t v6 = v4 & 0xC000000000000001;
    uint64_t v52 = v3;
    uint64_t v53 = v65;
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v8 = 4;
    unint64_t v55 = v4;
    uint64_t v56 = v5;
    unint64_t v57 = v4 & 0xC000000000000001;
    while (1)
    {
      id v9 = v6 ? (id)MEMORY[0x192FD6450](v8 - 4, v4) : *(id *)(v4 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v3 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v11 = objc_msgSend(v9, sel_extensionIdentity);
      if (v11)
      {
        int64_t v12 = v11;
        uint64_t v66 = v8 - 3;
        uint64_t v63 = v7;
        id v13 = objc_msgSend(v11, sel_deviceIdentifier);
        if (v13)
        {
          int64_t v14 = v13;
          uint64_t v15 = sub_190D41978();
          uint64_t v17 = v16;
        }
        else
        {
          uint64_t v15 = 0;
          uint64_t v17 = 0;
        }
        id v18 = objc_msgSend(v12, sel_extensionBundleIdentifier, v52, v53);
        if (v18)
        {
          int64_t v19 = v18;
          uint64_t v20 = sub_190D41978();
          uint64_t v22 = v21;

          id v23 = objc_msgSend(v12, sel_containerBundleIdentifier);
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = v20;
            uint64_t v26 = sub_190D41978();
            uint64_t v58 = v27;
            uint64_t v59 = v26;
          }
          else
          {
            uint64_t v25 = v20;
            uint64_t v58 = 0;
            uint64_t v59 = 0;
          }
          if (v17) {
            uint64_t v28 = v15;
          }
          else {
            uint64_t v28 = 0;
          }
          uint64_t v61 = v28;
          uint64_t v29 = (char *)objc_msgSend(objc_allocWithZone((Class)CHSExtensionIdentity), sel_init);
          uint64_t v30 = (uint64_t *)&v29[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
          swift_beginAccess();
          *uint64_t v30 = v25;
          v30[1] = v22;
          uint64_t v31 = v29;
          swift_bridgeObjectRelease();
          unint64_t v32 = (uint64_t *)&v31[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
          swift_beginAccess();
          *unint64_t v32 = v59;
          v32[1] = v58;
          swift_bridgeObjectRelease();
          char v33 = &v31[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
          swift_beginAccess();
          *(void *)char v33 = v61;
          *((void *)v33 + 1) = v17;

          swift_bridgeObjectRelease();
          id v34 = objc_msgSend(v10, sel_kind);
          if (v34)
          {
            BOOL v35 = v34;
            sub_190D41978();
          }
          unsigned int v62 = objc_msgSend(v10, sel_isDeletion);
          if (v62)
          {
            id v36 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
            char v37 = v31;
            char v38 = (void *)sub_190D41948();
            swift_bridgeObjectRelease();
            id v39 = objc_msgSend(v36, sel_initWithExtensionIdentity_kind_, v37, v38);
          }
          else
          {
            char v40 = v31;
            unsigned int v60 = objc_msgSend(v10, sel_supportsBackgroundRefresh);
            objc_msgSend(v10, sel_lastRelevanceUpdate);
            double v42 = v41;
            uint64_t v43 = swift_allocObject();
            *(void *)(v43 + 16) = v10;
            *(void *)(v43 + 24) = a2;
            id v44 = objc_allocWithZone((Class)CHSWidgetRelevanceProperties);
            id v45 = v10;
            swift_retain();
            long long v46 = (void *)sub_190D41948();
            swift_bridgeObjectRelease();
            v65[2] = sub_190D0F440;
            v65[3] = v43;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            v65[0] = sub_190D099EC;
            v65[1] = &block_descriptor_42;
            long long v47 = _Block_copy(aBlock);
            id v39 = objc_msgSend(v44, sel_initWithWidgetExtensionIdentity_kind_supportsBackgroundRefresh_lastRelevanceUpdate_relevanceFunction_, v40, v46, v60, v47, v42);

            _Block_release(v47);
            swift_release();
          }
          uint64_t v7 = v63;
          uint64_t v5 = v56;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v7 = sub_190CDD924(0, *((void *)v63 + 2) + 1, 1, v63);
          }
          unint64_t v4 = v55;
          unint64_t v49 = *((void *)v7 + 2);
          unint64_t v48 = *((void *)v7 + 3);
          if (v49 >= v48 >> 1) {
            uint64_t v7 = sub_190CDD924((char *)(v48 > 1), v49 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v49 + 1;
          char v50 = &v7[16 * v49];
          *((void *)v50 + 4) = v39;
          v50[40] = v62;
          unint64_t v6 = v57;
        }
        else
        {

          swift_bridgeObjectRelease();
          uint64_t v7 = v63;
        }
        uint64_t v3 = v66;
      }
      else
      {
      }
      ++v8;
      if (v3 == v5)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for RelevanceCacheTransaction()
{
  return self;
}

uint64_t sub_190D0DF30(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_190D09AD4(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_190D41AA8();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_190D09AD4(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_190D09AD4(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_190D41AA8();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  int64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    int64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          id v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        uint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_190D0E358(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_78;
  }
  uint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v2 = v1;
  if (!v1)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
LABEL_3:
  uint64_t v84 = a1 + 32;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    BOOL v4 = __OFSUB__(v2, 1);
    unint64_t v5 = v2 - 1;
    if (v4)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
    uint64_t v86 = v5;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x192FD6450]();
    }
    else
    {
      if ((v5 & 0x8000000000000000) != 0) {
        goto LABEL_76;
      }
      if (v5 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_77;
      }
      uint64_t v6 = swift_retain();
    }
    uint64_t v88 = v6;
    id v7 = objc_msgSend(*(id *)(v6 + 16), sel_groups, v84);
    if (v7)
    {
      uint64_t v8 = v7;
      sub_190C72C5C(0, &qword_1E92AA550);
      unint64_t v9 = sub_190D41BE8();
    }
    else
    {
      unint64_t v9 = MEMORY[0x1E4FBC860];
    }
    uint64_t v87 = v3;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_190D420B8();
      if (!v10)
      {
LABEL_47:
        uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_47;
      }
    }
    if (v10 < 1)
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_190D420B8();
      if (!v2) {
        goto LABEL_79;
      }
      goto LABEL_3;
    }
    uint64_t v11 = 0;
    unint64_t v12 = v9 & 0xC000000000000001;
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v90 = v10;
    unint64_t v91 = v9;
    unint64_t v89 = v9 & 0xC000000000000001;
    do
    {
      if (v12) {
        id v14 = (id)MEMORY[0x192FD6450](v11, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * v11 + 32);
      }
      int64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_extensionIdentity);
      if (v16)
      {
        unint64_t v17 = v16;
        id v18 = objc_msgSend(v16, sel_deviceIdentifier);
        uint64_t v94 = v13;
        if (v18)
        {
          int64_t v19 = v18;
          uint64_t v20 = sub_190D41978();
          uint64_t v22 = v21;
        }
        else
        {
          uint64_t v20 = 0;
          uint64_t v22 = 0;
        }
        id v23 = objc_msgSend(v17, sel_extensionBundleIdentifier);
        if (v23)
        {
          uint64_t v24 = v23;
          uint64_t v25 = sub_190D41978();
          uint64_t v27 = v26;

          id v28 = objc_msgSend(v17, sel_containerBundleIdentifier);
          if (v28)
          {
            uint64_t v29 = v28;
            uint64_t v93 = sub_190D41978();
            uint64_t v31 = v30;
          }
          else
          {
            uint64_t v93 = 0;
            uint64_t v31 = 0;
          }
          if (v22) {
            uint64_t v32 = v20;
          }
          else {
            uint64_t v32 = 0;
          }
          uint64_t v92 = v32;
          unsigned __int8 v33 = (char *)objc_msgSend(objc_allocWithZone((Class)CHSExtensionIdentity), sel_init);
          id v34 = (uint64_t *)&v33[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
          swift_beginAccess();
          uint64_t *v34 = v25;
          v34[1] = v27;
          uint64_t v35 = v33;
          swift_bridgeObjectRelease();
          unsigned int v36 = (uint64_t *)&v35[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
          swift_beginAccess();
          uint64_t *v36 = v93;
          v36[1] = v31;
          swift_bridgeObjectRelease();
          char v37 = &v35[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
          swift_beginAccess();
          *(void *)char v37 = v92;
          *((void *)v37 + 1) = v22;

          swift_bridgeObjectRelease();
          id v38 = objc_msgSend(v15, sel_kind);
          if (v38)
          {
            unsigned __int8 v39 = v38;
            sub_190D41978();
          }
          unsigned int v40 = objc_msgSend(v15, sel_isDeletion);
          char v41 = v40;
          if (v40)
          {
            id v42 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
            unsigned int v43 = v35;
            char v44 = (void *)sub_190D41948();
            swift_bridgeObjectRelease();
            id v45 = objc_msgSend(v42, sel_initWithExtensionIdentity_kind_, v43, v44);
          }
          else
          {
            long long v46 = v35;
            id v47 = objc_msgSend(v15, sel_supportsBackgroundRefresh);
            objc_msgSend(v15, sel_lastRelevanceUpdate);
            double v49 = v48;
            uint64_t v50 = swift_allocObject();
            *(void *)(v50 + 16) = v15;
            *(void *)(v50 + 24) = v88;
            id v51 = objc_allocWithZone((Class)CHSWidgetRelevanceProperties);
            id v52 = v15;
            swift_retain();
            uint64_t v53 = (void *)sub_190D41948();
            swift_bridgeObjectRelease();
            aBlock[4] = sub_190D0F2F4;
            aBlock[5] = v50;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            void aBlock[2] = sub_190D099EC;
            aBlock[3] = &block_descriptor_8;
            uint64_t v54 = _Block_copy(aBlock);
            id v45 = objc_msgSend(v51, sel_initWithWidgetExtensionIdentity_kind_supportsBackgroundRefresh_lastRelevanceUpdate_relevanceFunction_, v46, v53, v47, v54, v49);

            _Block_release(v54);
            swift_release();
          }
          uint64_t v13 = v94;
          uint64_t v10 = v90;
          unint64_t v9 = v91;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_190CDD924(0, *((void *)v94 + 2) + 1, 1, v94);
          }
          unint64_t v56 = *((void *)v13 + 2);
          unint64_t v55 = *((void *)v13 + 3);
          if (v56 >= v55 >> 1) {
            uint64_t v13 = sub_190CDD924((char *)(v55 > 1), v56 + 1, 1, v13);
          }
          *((void *)v13 + 2) = v56 + 1;
          unint64_t v57 = &v13[16 * v56];
          *((void *)v57 + 4) = v45;
          v57[40] = v41;
          unint64_t v12 = v89;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
      ++v11;
    }
    while (v10 != v11);
LABEL_48:
    swift_bridgeObjectRelease_n();
    uint64_t v58 = *((void *)v13 + 2);
    if (v58) {
      break;
    }
    uint64_t v3 = v87;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = v86;
    if (!v86) {
      goto LABEL_73;
    }
  }
  uint64_t v59 = v13 + 40;
  uint64_t v3 = v87;
  while (1)
  {
    uint64_t v61 = (void *)*((void *)v59 - 1);
    char v62 = *v59;
    if (*v59)
    {
      uint64_t v63 = v3[2];
      id v64 = v61;
      if (!v63) {
        goto LABEL_59;
      }
    }
    else
    {
      id v64 = [v61 key];
      if (!v3[2]) {
        goto LABEL_59;
      }
    }
    id v64 = v64;
    sub_190CDE798((uint64_t)v64);
    char v66 = v65;

    if (v66)
    {

      goto LABEL_52;
    }
LABEL_59:
    id v67 = v61;
    id v68 = v64;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v3;
    unint64_t v71 = sub_190CDE798((uint64_t)v68);
    uint64_t v72 = v3[2];
    BOOL v73 = (v70 & 1) == 0;
    uint64_t v74 = v72 + v73;
    if (__OFADD__(v72, v73))
    {
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    char v75 = v70;
    if (v3[3] < v74) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v78 = (void *)aBlock[0];
      if ((v70 & 1) == 0) {
        goto LABEL_66;
      }
    }
    else
    {
      uint64_t v3 = aBlock;
      sub_190D0ACE4();
      uint64_t v78 = (void *)aBlock[0];
      if ((v75 & 1) == 0)
      {
LABEL_66:
        v78[(v71 >> 6) + 8] |= 1 << v71;
        *(void *)(v78[6] + 8 * v71) = v68;
        uint64_t v79 = v78[7] + 16 * v71;
        *(void *)uint64_t v79 = v61;
        *(unsigned char *)(v79 + 8) = v62;
        uint64_t v80 = v78[2];
        BOOL v4 = __OFADD__(v80, 1);
        uint64_t v81 = v80 + 1;
        if (v4) {
          goto LABEL_71;
        }
        uint64_t v3 = v78;
        v78[2] = v81;
        id v82 = v68;
        goto LABEL_51;
      }
    }
LABEL_50:
    uint64_t v60 = v78[7] + 16 * v71;

    *(void *)uint64_t v60 = v61;
    *(unsigned char *)(v60 + 8) = v62;
    uint64_t v3 = v78;
LABEL_51:

    swift_bridgeObjectRelease();
LABEL_52:
    v59 += 16;
    if (!--v58) {
      goto LABEL_5;
    }
  }
  sub_190CDF29C(v74, isUniquelyReferenced_nonNull_native);
  uint64_t v3 = (void *)aBlock[0];
  unint64_t v76 = sub_190CDE798((uint64_t)v68);
  if ((v75 & 1) == (v77 & 1))
  {
    unint64_t v71 = v76;
    uint64_t v78 = (void *)aBlock[0];
    if ((v75 & 1) == 0) {
      goto LABEL_66;
    }
    goto LABEL_50;
  }
  sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
  uint64_t result = sub_190D42338();
  __break(1u);
  return result;
}

void sub_190D0EBA4(unint64_t a1, void *a2)
{
  sub_190CD8064(a1, a2, *(void **)(v2 + 16), *(unsigned char *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_190D0EBB4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 48);
  *a2 = *(void *)(v3 + 40);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for CacheFile()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *_s14ChronoServices9CacheFileVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CacheFile(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CacheFile(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CacheFile(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CacheFile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CacheFile()
{
  return &type metadata for CacheFile;
}

uint64_t type metadata accessor for RelevanceCache()
{
  return self;
}

uint64_t method lookup function for RelevanceCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RelevanceCache);
}

uint64_t dispatch thunk of RelevanceCache.location.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of RelevanceCache.location.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of RelevanceCache.location.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of RelevanceCache.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of RelevanceCache.size.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of RelevanceCache.startTransaction()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of RelevanceCache.edit(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of RelevanceCache.clear()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of RelevanceCache.lookup(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of RelevanceCache.entries.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of RelevanceCache.relevances.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of RelevanceCache.keys.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of RelevanceCache.reload()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of RelevanceCache.parts.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t method lookup function for RelevanceCacheTransaction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RelevanceCacheTransaction);
}

uint64_t dispatch thunk of RelevanceCacheTransaction.add(wrp:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of RelevanceCacheTransaction.remove(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of RelevanceCacheTransaction.commit()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_190D0F128()
{
  return sub_190CD4928(&qword_1E92AC1B8, (uint64_t *)&unk_1E92AC1C0);
}

uint64_t sub_190D0F164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_190D0F1CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_190D0F234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_190D0F29C()
{
  unint64_t result = qword_1E92AC238;
  if (!qword_1E92AC238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC238);
  }
  return result;
}

uint64_t sub_190D0F2F4()
{
  return sub_190D174EC(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

id sub_190D0F314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  id v7 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  id v8 = objc_msgSend(v4, sel_initWithFileAtPath_protection_capacity_error_, v7, a3, a4, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_190D414B8();

    swift_willThrow();
  }
  return v8;
}

uint64_t objectdestroyTm()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190D0F44C()
{
  uint64_t v0 = sub_190D41778();
  __swift_allocate_value_buffer(v0, qword_1E92AC250);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92AC250);
  return sub_190D41768();
}

id sub_190D0F5A8()
{
  uint64_t v1 = OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver;
  *(void *)&v0[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver] = 0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR___CHSWidgetExtensionSet_widgetExtensionContainers] = MEMORY[0x1E4FBC860];
  uint64_t v3 = v0;
  if ((v2 & 0xC000000000000000) != 0 && sub_190D420B8()) {
    sub_190D109C0(MEMORY[0x1E4FBC860], &qword_1E92AA6A0, (unint64_t *)&qword_1E92AA8A0);
  }
  else {
    uint64_t v4 = MEMORY[0x1E4FBC870];
  }
  *(void *)&v3[OBJC_IVAR___CHSWidgetExtensionSet_allExtensions] = v4;
  *(void *)&v0[v1] = objc_msgSend(self, sel_defaultResolver);
  swift_unknownObjectRelease();
  id v5 = objc_msgSend(objc_allocWithZone((Class)CHSIconResolver), sel_init);
  *(void *)&v3[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver] = v5;

  v7.receiver = v3;
  v7.super_class = (Class)CHSWidgetExtensionSet;
  return objc_msgSendSuper2(&v7, sel_init);
}

char *sub_190D0F6E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = (char *)objc_msgSend(v4, sel_init);
  id v9 = v8;
  if (a2)
  {
    id v10 = v8;
    id v11 = a2;
  }
  else
  {
    unint64_t v12 = self;
    uint64_t v13 = v9;
    id v11 = objc_msgSend(v12, sel_defaultResolver);
  }
  *(void *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver] = v11;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver] = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_allExtensions] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  sub_190D106B4(MEMORY[0x1E4FBC868], a1, v11);
  uint64_t v15 = v14;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  uint64_t v16 = sub_190D10450(v15, a3);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  *(void *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_widgetExtensionContainers] = v16;

  swift_bridgeObjectRelease();
  return v9;
}

void sub_190D0FA08(void *a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = (char *)objc_msgSend(a1, sel_identity);
  objc_super v7 = &v6[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  uint64_t v8 = *((void *)v7 + 1);
  swift_bridgeObjectRetain();

  if (v8)
  {
    id v9 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(a2, sel_equivalentBundleIdentifiersForBundleIdentifier_, v9);

    uint64_t v11 = sub_190D41CA8();
    sub_190D423F8();
    sub_190D0FDEC((uint64_t)v26, v11);
    swift_bridgeObjectRelease();
    long long v30 = v26[2];
    long long v31 = v26[3];
    uint64_t v32 = v27;
    long long v28 = v26[0];
    long long v29 = v26[1];
    uint64_t v12 = sub_190D423D8();
    uint64_t v13 = v12;
    if (*(void *)(*a3 + 16) && (sub_190CDE7E8(v12), (v14 & 1) != 0)) {
      uint64_t v15 = swift_bridgeObjectRetain();
    }
    else {
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    uint64_t v33 = v15;
    id v16 = a1;
    MEMORY[0x192FD6080]();
    if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_190D41C18();
    }
    sub_190D41C38();
    sub_190D41C08();
    uint64_t v17 = v33;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *a3;
    *a3 = 0x8000000000000000;
    sub_190D09F98(v17, v13, isUniquelyReferenced_nonNull_native);
    *a3 = v25;
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1E92AB5D0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_190D41778();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92AC250);
    id v20 = a1;
    uint64_t v21 = sub_190D41758();
    os_log_type_t v22 = sub_190D41D28();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)id v23 = 138412290;
      *(void *)&long long v28 = objc_msgSend(v20, sel_identity);
      sub_190D41E48();
      *uint64_t v24 = v28;

      _os_log_impl(&dword_190C6F000, v21, v22, "Dropping extension %@: missing container bundle identifier", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v24, -1, -1);
      MEMORY[0x192FD7910](v23, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_190D0FD64(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_190D0FDEC(uint64_t a1, uint64_t a2)
{
  sub_190D423E8();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_190D423A8();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_190D42398();
    swift_bridgeObjectRetain();
    sub_190D41A18();
    uint64_t v11 = sub_190D423E8();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_190D0FF84(unint64_t a1)
{
}

void *sub_190D0FFA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_190D420B8();
    if (v8) {
      goto LABEL_3;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_35;
  }
LABEL_3:
  uint64_t v9 = 0;
  unint64_t v10 = v7 & 0xC000000000000001;
  uint64_t v31 = v7 + 32;
  unint64_t v32 = v7 & 0xC000000000000001;
  unint64_t v35 = v7;
  uint64_t v36 = v4;
  uint64_t v33 = v8;
  uint64_t v34 = a3;
  uint64_t v37 = a2;
  while (1)
  {
    if (v10)
    {
      uint64_t v11 = (char *)MEMORY[0x192FD6450](v9, v7);
      BOOL v12 = __OFADD__(v9, 1);
      uint64_t v13 = v9 + 1;
      if (v12) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v11 = (char *)*(id *)(v31 + 8 * v9);
      BOOL v12 = __OFADD__(v9, 1);
      uint64_t v13 = v9 + 1;
      if (v12)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unsigned __int8 v39 = v11;
    unint64_t v14 = *(void *)&v11[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_190D420B8();
      uint64_t v38 = v13;
      if (!v15)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        uint64_t v18 = MEMORY[0x1E4FBC860];
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v38 = v13;
      if (!v15) {
        goto LABEL_22;
      }
    }
    uint64_t v40 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_190CDDDE4(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = 0;
    uint64_t v18 = v40;
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x192FD6450](v17, v14);
      }
      else {
        id v19 = *(id *)(v14 + 8 * v17 + 32);
      }
      id v20 = v19;
      uint64_t v21 = (char *)objc_msgSend(v19, sel_identity, v31);
      os_log_type_t v22 = &v21[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
      swift_beginAccess();
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *((void *)v22 + 1);
      swift_bridgeObjectRetain();

      unint64_t v26 = *(void *)(v40 + 16);
      unint64_t v25 = *(void *)(v40 + 24);
      if (v26 >= v25 >> 1) {
        sub_190CDDDE4((void *)(v25 > 1), v26 + 1, 1);
      }
      ++v17;
      *(void *)(v40 + 16) = v26 + 1;
      uint64_t v27 = v40 + 16 * v26;
      *(void *)(v27 + 32) = v23;
      *(void *)(v27 + 40) = v24;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    unint64_t v7 = v35;
    uint64_t v4 = v36;
    a3 = v34;
LABEL_23:
    uint64_t v28 = *(void *)(v18 + 16);
    a2 = v37;
    if (v28) {
      break;
    }
LABEL_4:

    swift_bridgeObjectRelease();
    unint64_t v10 = v32;
    uint64_t v9 = v38;
    if (v38 == v33) {
      goto LABEL_35;
    }
  }
  long long v29 = (void *)(v18 + 40);
  while (1)
  {
    BOOL v30 = *(v29 - 1) == v37 && *v29 == a3;
    if (v30 || (sub_190D422D8() & 1) != 0) {
      break;
    }
    v29 += 2;
    if (!--v28) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

void *sub_190D10288(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_190D420B8())
  {
    a2 = (void *)((char *)a2 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
    swift_beginAccess();
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD6450](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_containerBundleIdentifier);
      uint64_t v10 = sub_190D41978();
      uint64_t v12 = v11;

      uint64_t v13 = a2[1];
      if (v13)
      {
        if (v10 == *a2 && v12 == v13)
        {
          swift_bridgeObjectRelease();
LABEL_19:
          swift_bridgeObjectRelease();
          return v7;
        }
        char v15 = sub_190D422D8();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_19;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_190D10450(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_190D42018();
    uint64_t result = sub_190D0FD64(a1);
    uint64_t v6 = result;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    uint64_t v18 = v3;
    int v19 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v6 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v5) {
        goto LABEL_23;
      }
      uint64_t v21 = v7;
      id v11 = objc_allocWithZone((Class)CHSWidgetExtensionContainer);
      sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v12 = (void *)sub_190D41BD8();
      objc_msgSend(v11, sel_initWithExtensions_iconResolver_, v12, a2);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      sub_190D41FF8();
      sub_190D42028();
      sub_190D42038();
      uint64_t result = sub_190D42008();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v6 >= v9) {
        goto LABEL_24;
      }
      uint64_t v13 = *(void *)(v8 + 8 * v10);
      if ((v13 & (1 << v6)) == 0) {
        goto LABEL_25;
      }
      int v5 = v19;
      if (*(_DWORD *)(a1 + 36) != v19) {
        goto LABEL_26;
      }
      unint64_t v14 = v13 & (-2 << (v6 & 0x3F));
      if (v14)
      {
        int64_t v9 = __clz(__rbit64(v14)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v15 = v10 + 1;
        unint64_t v16 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v16)
        {
          unint64_t v17 = *(void *)(v8 + 8 * v15);
          if (v17)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v17)) + (v15 << 6);
          }
          else
          {
            while (v16 - 2 != v10)
            {
              unint64_t v17 = *(void *)(a1 + 80 + 8 * v10++);
              if (v17)
              {
                unint64_t v15 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v21 + 1;
      uint64_t v6 = v9;
      if (v21 + 1 == v18) {
        return v22;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void sub_190D106B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = a2;
  uint64_t v31 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_190D41EB8();
    sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
    sub_190C73688();
    sub_190D41CD8();
    uint64_t v6 = v26;
    uint64_t v23 = v27;
    uint64_t v7 = v28;
    int64_t v8 = v29;
    unint64_t v9 = v30;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v23 = a2 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_190D41EE8()) {
    goto LABEL_34;
  }
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v14 = v25;
  id v15 = (id)swift_unknownObjectRelease();
  int64_t v16 = v8;
  uint64_t v17 = v9;
  if (!v25) {
    goto LABEL_34;
  }
  while (1)
  {
    uint64_t v4 = (void *)MEMORY[0x192FD6E60](v15);
    sub_190D0FA08(v14, a3, &v31);
    if (v5) {
      goto LABEL_36;
    }
    uint64_t v5 = 0;

    int64_t v8 = v16;
    unint64_t v9 = v17;
    if (v6 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v17 = (v9 - 1) & v9;
    unint64_t v18 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v16 = v8;
LABEL_24:
    id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v18);
    unint64_t v14 = v15;
    if (!v15) {
      goto LABEL_34;
    }
  }
  int64_t v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  if (v16 >= v22) {
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v16);
  if (v19)
  {
LABEL_23:
    uint64_t v17 = (v19 - 1) & v19;
    unint64_t v18 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_24;
  }
  int64_t v20 = v8 + 2;
  if (v8 + 2 >= v22) {
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v20 = v8 + 3;
  if (v8 + 3 >= v22) {
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v20 = v8 + 4;
  if (v8 + 4 >= v22) {
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
LABEL_22:
    int64_t v16 = v20;
    goto LABEL_23;
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v22) {
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v16);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v21 = v8 + 6;
  while (v22 != v21)
  {
    unint64_t v19 = *(void *)(v23 + 8 * v21++);
    if (v19)
    {
      int64_t v16 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_34:
  sub_190CEA740();
}

void sub_190D109C0(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4 = a1;
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_190D420B8();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      uint64_t v6 = sub_190D41F38();
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_190D420B8();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v6 = MEMORY[0x1E4FBC870];
  uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  uint64_t v10 = v6 + 56;
  uint64_t v46 = v8;
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    unint64_t v43 = v4;
    while (1)
    {
      uint64_t v12 = MEMORY[0x192FD6450](v11, v4);
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v14 = v12;
      uint64_t v15 = sub_190D41DD8();
      uint64_t v16 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v10 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_190C72C5C(0, a3);
        id v21 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
        char v22 = sub_190D41DE8();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v4 = v43;
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v10 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
          char v25 = sub_190D41DE8();

          if (v25) {
            goto LABEL_11;
          }
        }
        unint64_t v4 = v43;
      }
      *(void *)(v10 + 8 * v18) = v20 | v19;
      *(void *)(*(void *)(v6 + 48) + 8 * v17) = v14;
      uint64_t v26 = *(void *)(v6 + 16);
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_38;
      }
      *(void *)(v6 + 16) = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    id v29 = *(id *)(v4 + 32 + 8 * v28);
    uint64_t v30 = sub_190D41DD8();
    uint64_t v31 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v32 = v30 & ~v31;
    unint64_t v33 = v32 >> 6;
    uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
    uint64_t v35 = 1 << v32;
    if (((1 << v32) & v34) != 0)
    {
      sub_190C72C5C(0, a3);
      id v36 = *(id *)(*(void *)(v6 + 48) + 8 * v32);
      char v37 = sub_190D41DE8();

      if (v37) {
        goto LABEL_24;
      }
      uint64_t v38 = ~v31;
      unint64_t v32 = (v32 + 1) & v38;
      unint64_t v33 = v32 >> 6;
      uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
      uint64_t v35 = 1 << v32;
      if ((v34 & (1 << v32)) != 0)
      {
        while (1)
        {
          id v39 = *(id *)(*(void *)(v6 + 48) + 8 * v32);
          char v40 = sub_190D41DE8();

          if (v40) {
            break;
          }
          unint64_t v32 = (v32 + 1) & v38;
          unint64_t v33 = v32 >> 6;
          uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
          uint64_t v35 = 1 << v32;
          if ((v34 & (1 << v32)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v8 = v46;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v8 = v46;
    }
    *(void *)(v10 + 8 * v33) = v35 | v34;
    *(void *)(*(void *)(v6 + 48) + 8 * v32) = v29;
    uint64_t v41 = *(void *)(v6 + 16);
    BOOL v13 = __OFADD__(v41, 1);
    uint64_t v42 = v41 + 1;
    if (v13) {
      goto LABEL_39;
    }
    *(void *)(v6 + 16) = v42;
LABEL_25:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

id CHSControlInstanceIdentity.control.getter()
{
  return *(id *)(v0 + OBJC_IVAR___CHSControlInstanceIdentity_control);
}

uint64_t CHSControlInstanceIdentity.hostIdentifier.getter()
{
  return sub_190D10DE0(&OBJC_IVAR___CHSControlInstanceIdentity_hostIdentifier);
}

id sub_190D10D68(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_190D41948();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t CHSControlInstanceIdentity.configurationIdentifier.getter()
{
  return sub_190D10DE0(&OBJC_IVAR___CHSControlInstanceIdentity_configurationIdentifier);
}

uint64_t sub_190D10DE0(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSControlInstanceIdentity.contentType.getter()
{
  return *(void *)(v0 + OBJC_IVAR___CHSControlInstanceIdentity_contentType);
}

id CHSControlInstanceIdentity.init(control:contentType:hostIdentifier:configurationIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a4)
  {
    uint64_t v9 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  uint64_t v9 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v10 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
LABEL_6:
  id v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithControl_contentType_hostIdentifier_configurationIdentifier_, a1, a2, v9, v10);

  return v11;
}

id CHSControlInstanceIdentity.init(control:contentType:hostIdentifier:configurationIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_control) = a1;
  *(void *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_contentType) = a2;
  uint64_t v7 = (void *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_hostIdentifier);
  *uint64_t v7 = a3;
  v7[1] = a4;
  uint64_t v8 = (void *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_configurationIdentifier);
  *uint64_t v8 = a5;
  v8[1] = a6;
  v10.super_class = (Class)CHSControlInstanceIdentity;
  return objc_msgSendSuper2(&v10, sel_init);
}

void __swiftcall CHSControlInstanceIdentity.init()(CHSControlInstanceIdentity *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void CHSControlInstanceIdentity.init()()
{
}

uint64_t CHSControlInstanceIdentity.hash.getter()
{
  id v1 = v0;
  sub_190D423F8();
  id v2 = objc_msgSend(v0, sel_control);
  sub_190D41DF8();

  objc_msgSend(v1, sel_contentType);
  sub_190D423A8();
  id v3 = objc_msgSend(v1, sel_hostIdentifier);
  if (v3)
  {
    unint64_t v4 = v3;
    sub_190D41978();

    sub_190D423B8();
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_190D423B8();
  }
  id v5 = objc_msgSend(v1, sel_configurationIdentifier);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_190D41978();

    sub_190D423B8();
    swift_bridgeObjectRetain();
    sub_190D41A18();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_190D423B8();
  }
  return sub_190D423D8();
}

uint64_t CHSControlInstanceIdentity.isEqual(_:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v3 = sub_190CCE4DC(a1, (uint64_t)v32);
  if (!v33)
  {
    sub_190CCE544((uint64_t)v32);
    goto LABEL_25;
  }
  type metadata accessor for CHSControlInstanceIdentity(v3);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    char v13 = 0;
    return v13 & 1;
  }
  if (v31 == v1)
  {

    char v13 = 1;
    return v13 & 1;
  }
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA5D0);
  id v4 = objc_msgSend(v1, sel_control);
  id v5 = objc_msgSend(v31, sel_control);
  char v6 = sub_190D41DE8();

  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
  id v7 = objc_msgSend(v2, sel_contentType);
  if (v7 != objc_msgSend(v31, sel_contentType)) {
    goto LABEL_24;
  }
  id v8 = objc_msgSend(v2, sel_hostIdentifier);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_190D41978();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  id v14 = objc_msgSend(v31, sel_hostIdentifier);
  if (!v14)
  {
    if (!v12) {
      goto LABEL_22;
    }
LABEL_20:

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v15 = v14;
  uint64_t v16 = sub_190D41978();
  uint64_t v18 = v17;

  if (!v12)
  {
    if (!v18) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (!v18) {
    goto LABEL_20;
  }
  if (v10 == v16 && v12 == v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  char v19 = sub_190D422D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
LABEL_24:

    goto LABEL_25;
  }
LABEL_22:
  id v20 = objc_msgSend(v2, sel_configurationIdentifier);
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = sub_190D41978();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  id v26 = objc_msgSend(v31, sel_configurationIdentifier);
  if (!v26)
  {
    if (!v24)
    {

      char v13 = 1;
      return v13 & 1;
    }
    goto LABEL_20;
  }
  uint64_t v27 = v26;
  uint64_t v28 = sub_190D41978();
  uint64_t v30 = v29;

  if (!v24)
  {

    if (!v30)
    {
      char v13 = 1;
      return v13 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (!v30) {
    goto LABEL_20;
  }
  if (v22 == v28 && v24 == v30) {
    char v13 = 1;
  }
  else {
    char v13 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v13 & 1;
}

uint64_t sub_190D11684(unsigned __int8 *a1, char *a2)
{
  return sub_190D3AFC4(*a1, *a2);
}

uint64_t sub_190D11690()
{
  return sub_190D3BBE0();
}

uint64_t sub_190D11698()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D11774()
{
  return sub_190D3C34C();
}

uint64_t sub_190D1177C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190D12280();
  *a1 = result;
  return result;
}

void sub_190D117AC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6C6F72746E6F63;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000657079;
      uint64_t v3 = 0x54746E65746E6F63;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0xD000000000000017;
      *(void *)(a1 + 8) = 0x8000000190D5C190;
      break;
    case 3:
      strcpy((char *)a1, "hostIdentifier");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_190D11860()
{
  unint64_t result = 0x6C6F72746E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x54746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x6E65644974736F68;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_190D11908@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190D12280();
  *a1 = result;
  return result;
}

uint64_t sub_190D11930(uint64_t a1)
{
  unint64_t v2 = sub_190D12020();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190D1196C(uint64_t a1)
{
  unint64_t v2 = sub_190D12020();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *CHSControlInstanceIdentity.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D12020();
  sub_190D42408();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
    char v26 = 0;
    sub_190CD43DC(&qword_1E92AA908);
    sub_190D421B8();
    id v8 = v27;
    char v25 = 2;
    uint64_t v9 = sub_190D42168();
    uint64_t v11 = v10;
    v21[1] = v9;
    uint64_t v22 = v8;
    char v24 = 3;
    uint64_t v12 = sub_190D42168();
    uint64_t v14 = v13;
    v21[0] = v12;
    char v23 = 1;
    uint64_t v16 = sub_190D421D8();
    if (v14)
    {
      v21[0] = sub_190D41948();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21[0] = 0;
    }
    if (v11)
    {
      uint64_t v17 = (void *)sub_190D41948();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = 0;
    }
    id v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    char v19 = v22;
    id v20 = (void *)v21[0];
    id v7 = objc_msgSend(v18, sel_initWithControl_contentType_hostIdentifier_configurationIdentifier_, v22, v16, v21[0], v17);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t CHSControlInstanceIdentity.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA4E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D12020();
  sub_190D42418();
  id v9 = objc_msgSend(v3, sel_control);
  id v16 = v9;
  v15[7] = 0;
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
  sub_190CD43DC(&qword_1E92AA658);
  sub_190D42268();

  if (!v2)
  {
    id v11 = objc_msgSend(v3, sel_configurationIdentifier);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_190D41978();

      v15[4] = 2;
      sub_190D42238();
      swift_bridgeObjectRelease();
    }
    id v13 = objc_msgSend(v3, sel_hostIdentifier);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_190D41978();

      v15[5] = 3;
      sub_190D42238();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_contentType);
    v15[6] = 1;
    sub_190D42288();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_190D11FBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = CHSControlInstanceIdentity.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_190D11FE8(void *a1)
{
  return CHSControlInstanceIdentity.encode(to:)(a1);
}

uint64_t type metadata accessor for CHSControlInstanceIdentity(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AA678);
}

unint64_t sub_190D12020()
{
  unint64_t result = qword_1E92AA660;
  if (!qword_1E92AA660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA660);
  }
  return result;
}

unsigned char *_s10CodingKeysOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D12140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_3()
{
  return &_s10CodingKeysON_3;
}

unint64_t sub_190D1217C()
{
  unint64_t result = qword_1E92AC2A8;
  if (!qword_1E92AC2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC2A8);
  }
  return result;
}

unint64_t sub_190D121D4()
{
  unint64_t result = qword_1E92AA670;
  if (!qword_1E92AA670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA670);
  }
  return result;
}

unint64_t sub_190D1222C()
{
  unint64_t result = qword_1E92AA668;
  if (!qword_1E92AA668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA668);
  }
  return result;
}

uint64_t sub_190D12280()
{
  unint64_t v0 = sub_190D42138();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_190D122D0(void **a1, void **a2)
{
  return _sSo18CHSWidgetExtensionC14ChronoServicesE1loiySbAB_ABtFZ_0(*a1, *a2);
}

uint64_t _sSo18CHSWidgetExtensionC14ChronoServicesE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  uint64_t v4 = sub_190D41978();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a2, sel_extensionBundleIdentifier);
  uint64_t v8 = sub_190D41978();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 0;
  }
  else {
    char v12 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

unint64_t sub_190D123A8()
{
  unint64_t result = qword_1E92AC2B0;
  if (!qword_1E92AC2B0)
  {
    sub_190D12400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC2B0);
  }
  return result;
}

unint64_t sub_190D12400()
{
  unint64_t result = qword_1E92AA8A0;
  if (!qword_1E92AA8A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AA8A0);
  }
  return result;
}

uint64_t sub_190D1256C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190D4B270;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_190CE1048(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v37 = v7;
  uint64_t v8 = OBJC_IVAR___CHSEquivalentBundleIdentifierResolver_categoriesPrimitives;
  uint64_t v9 = qword_1EE09E258;
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR___CHSEquivalentBundleIdentifierResolver_categoriesPrimitives);
  swift_unknownObjectRetain();
  id v11 = (void *)sub_190D41948();
  id v12 = objc_msgSend(v10, sel_resolveBundleIdentifier_from_to_, v11, v9, 1);

  swift_unknownObjectRelease();
  if (v12)
  {
    uint64_t v13 = sub_190D41978();
    uint64_t v15 = v14;

    sub_190D12E94(&v36, v13, v15);
    swift_bridgeObjectRelease();
  }
  id v16 = *(void **)(v3 + v8);
  swift_unknownObjectRetain();
  uint64_t v17 = (void *)sub_190D41948();
  id v18 = objc_msgSend(v16, sel_resolveBundleIdentifier_from_to_, v17, v9, 0);

  swift_unknownObjectRelease();
  if (v18)
  {
    uint64_t v19 = sub_190D41978();
    uint64_t v21 = v20;

    sub_190D12E94(&v36, v19, v21);
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = qword_1EE09E260;
  char v23 = *(void **)(v3 + v8);
  swift_unknownObjectRetain();
  char v24 = (void *)sub_190D41948();
  id v25 = objc_msgSend(v23, sel_resolveBundleIdentifier_from_to_, v24, v22, 1);

  swift_unknownObjectRelease();
  if (v25)
  {
    uint64_t v26 = sub_190D41978();
    uint64_t v28 = v27;

    sub_190D12E94(&v36, v26, v28);
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = *(void **)(v3 + v8);
  swift_unknownObjectRetain();
  uint64_t v30 = (void *)sub_190D41948();
  id v31 = objc_msgSend(v29, sel_resolveBundleIdentifier_from_to_, v30, v22, 0);

  swift_unknownObjectRelease();
  if (v31)
  {
    uint64_t v32 = sub_190D41978();
    uint64_t v34 = v33;

    sub_190D12E94(&v36, v32, v34);
    swift_bridgeObjectRelease();
  }
  return v37;
}

uint64_t type metadata accessor for CHSEquivalentBundleIdentifierResolver(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AC320);
}

uint64_t sub_190D128FC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_190D41ED8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      uint64_t result = 0;
      *a1 = v26;
      return result;
    }
    uint64_t result = sub_190D41EC8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_190D13724(v7, result + 1, (uint64_t *)&unk_1E92AA2B0, (unint64_t *)&unk_1E92AA530, (uint64_t)off_1E56C7E48, (void (*)(unint64_t))sub_190D13928);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_190D13928();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_190D147D0((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190D41DD8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_190D41DE8();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_190D41DE8();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_190D14854((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_190D12BC8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_190D41ED8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_190D41EC8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_190D13724(v7, result + 1, &qword_1E92AA6A0, (unint64_t *)&qword_1E92AA8A0, (uint64_t)off_1E56C7DC0, (void (*)(unint64_t))sub_190D13BB4);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_190D13BB4();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_190D147D0((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190D41DD8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_190D41DE8();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_190D41DE8();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_190D149DC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_190D12E94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_190D42398();
  swift_bridgeObjectRetain();
  sub_190D41A18();
  uint64_t v8 = sub_190D423E8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_190D422D8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_190D422D8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_190D14B64(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_190D13044(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_190D169B0(&qword_1E92AA098);
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  uint64_t v11 = sub_190D418D8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_190D169B0(&qword_1E92AA0A0);
      char v22 = sub_190D41928();
      id v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      id v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_190D14D00((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_190D13340(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_190D42398();
  swift_bridgeObjectRetain();
  sub_190CDC274(a2, a3, a4, a5);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  unint64_t v11 = sub_190D423E8() & ~(-1 << *(unsigned char *)(v10 + 32));
  uint64_t v48 = v10 + 56;
  uint64_t v49 = a3;
  if (((*(void *)(v10 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    uint64_t v23 = a5;
    goto LABEL_9;
  }
  uint64_t v42 = -1 << *(unsigned char *)(v10 + 32);
  uint64_t v12 = (uint64_t *)(*(void *)(v10 + 48) + 32 * v11);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = v12[2];
  uint64_t v16 = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_190CDC274(v13, v14, v15, v16);
  uint64_t v19 = v18;
  if (v17 == sub_190CDC274(a2, a3, a4, a5) && v19 == v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  uint64_t v44 = a2;
  uint64_t v45 = a4;
  char v22 = sub_190D422D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    uint64_t v43 = ~v42;
    unint64_t v11 = (v11 + 1) & v43;
    if ((*(void *)(v48 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      uint64_t v23 = a5;
      while (1)
      {
        uint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 32 * v11);
        uint64_t v32 = *v31;
        uint64_t v33 = v31[1];
        uint64_t v34 = v31[2];
        uint64_t v35 = v31[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_190CDC274(v32, v33, v34, v35);
        uint64_t v38 = v37;
        if (v36 == sub_190CDC274(a2, v49, a4, a5) && v38 == v39)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v26 = a1;
          goto LABEL_12;
        }
        char v41 = sub_190D422D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v41) {
          break;
        }
        unint64_t v11 = (v11 + 1) & v43;
        a2 = v44;
        a4 = v45;
        if (((*(void *)(v48 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = a1;
      goto LABEL_12;
    }
    uint64_t v23 = a5;
LABEL_9:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = *v46;
    *uint64_t v46 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_190D14F78(a2, v49, a4, v23, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v46 = v50;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = v49;
    uint64_t result = 1;
    a1[2] = a4;
    a1[3] = v23;
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v26 = a1;
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t *)(*(void *)(*v46 + 48) + 32 * v11);
  uint64_t v28 = v27[1];
  uint64_t v30 = v27[2];
  uint64_t v29 = v27[3];
  uint64_t *v26 = *v27;
  v26[1] = v28;
  v26[2] = v30;
  v26[3] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_190D13724(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v8 = sub_190D41F28();
    uint64_t v21 = v8;
    sub_190D41EB8();
    if (sub_190D41EE8())
    {
      sub_190C72C5C(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          uint64_t v8 = v21;
        }
        uint64_t result = sub_190D41DD8();
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (sub_190D41EE8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v8;
}

uint64_t sub_190D13928()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA2B0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_31;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_31;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              uint64_t v1 = v28;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v12 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_37;
                }
                if (v12 >= v9) {
                  goto LABEL_31;
                }
                unint64_t v17 = v6[v12];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v18;
          }
        }
LABEL_21:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_190D41DD8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_190D13BB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6A0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_190D41DD8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_190D13E54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6C0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_190D42398();
      sub_190D41A18();
      uint64_t result = sub_190D423E8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_190D14134()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_190D415D8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  char v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA198);
  uint64_t v5 = sub_190D41F18();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_190D169B0(&qword_1E92AA098);
      uint64_t result = sub_190D418D8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_190D1451C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1A0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v23 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v24 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v19 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v19 >= v24) {
          goto LABEL_23;
        }
        unint64_t v20 = v23[v19];
        ++v10;
        if (!v20)
        {
          int64_t v10 = v19 + 1;
          if (v19 + 1 >= v24) {
            goto LABEL_23;
          }
          unint64_t v20 = v23[v10];
          if (!v20)
          {
            int64_t v10 = v19 + 2;
            if (v19 + 2 >= v24) {
              goto LABEL_23;
            }
            unint64_t v20 = v23[v10];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v24)
              {
LABEL_23:
                swift_release();
                uint64_t v22 = 1 << *(unsigned char *)(v2 + 32);
                if (v22 > 63) {
                  bzero(v23, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v23 = -1 << v22;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v20 = v23[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v10 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_29;
                  }
                  if (v10 >= v24) {
                    goto LABEL_23;
                  }
                  unint64_t v20 = v23[v10];
                  ++v21;
                  if (v20) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v10 = v21;
            }
          }
        }
LABEL_22:
        unint64_t v7 = (v20 - 1) & v20;
        unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
      }
      int64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v12);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      uint64_t v16 = v13[2];
      uint64_t v17 = v13[3];
      sub_190D42398();
      sub_190CDC274(v14, v15, v16, v17);
      sub_190D41A18();
      swift_bridgeObjectRelease();
      sub_190D423E8();
      unint64_t result = sub_190D41EA8();
      *(void *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      unint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 32 * result);
      *unint64_t v18 = v14;
      v18[1] = v15;
      v18[2] = v16;
      void v18[3] = v17;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_190D147D0(uint64_t a1, uint64_t a2)
{
  sub_190D41DD8();
  unint64_t result = sub_190D41EA8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_190D14854(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_190D13928();
  }
  else
  {
    if (v7 > v6)
    {
      sub_190D1529C();
      goto LABEL_14;
    }
    sub_190D15BFC();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_190D41DD8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_190C72C5C(0, (unint64_t *)&unk_1E92AA530);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_190D41DE8();

    if (v12)
    {
LABEL_13:
      sub_190D42328();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_190D41DE8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void sub_190D149DC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_190D13BB4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_190D15434();
      goto LABEL_14;
    }
    sub_190D15E64();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_190D41DD8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_190C72C5C(0, (unint64_t *)&qword_1E92AA8A0);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_190D41DE8();

    if (v12)
    {
LABEL_13:
      sub_190D42328();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_190D41DE8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_190D14B64(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_190D13E54();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_190D155E0();
      goto LABEL_22;
    }
    sub_190D160E0();
  }
  uint64_t v11 = *v4;
  sub_190D42398();
  sub_190D41A18();
  unint64_t result = sub_190D423E8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    char v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_190D422D8(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_190D42328();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_190D422D8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  int64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_190D14D00(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_190D14134();
  }
  else
  {
    if (v11 > v10)
    {
      sub_190D15794();
      goto LABEL_12;
    }
    sub_190D16390();
  }
  uint64_t v12 = *v3;
  sub_190D169B0(&qword_1E92AA098);
  uint64_t v13 = sub_190D418D8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_190D169B0(&qword_1E92AA0A0);
      char v21 = sub_190D41928();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_190D42328();
  __break(1u);
  return result;
}

uint64_t sub_190D14F78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_21;
  }
  if (a6)
  {
    sub_190D1451C();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t v14 = result;
      uint64_t v15 = a2;
      uint64_t v16 = a3;
      uint64_t result = (uint64_t)sub_190D15A38();
LABEL_22:
      uint64_t v42 = *v48;
      *(void *)(*v48 + 8 * (a5 >> 6) + 56) |= 1 << a5;
      uint64_t v43 = (uint64_t *)(*(void *)(v42 + 48) + 32 * a5);
      *uint64_t v43 = v14;
      v43[1] = v15;
      v43[2] = v16;
      v43[3] = a4;
      uint64_t v44 = *(void *)(v42 + 16);
      BOOL v45 = __OFADD__(v44, 1);
      uint64_t v46 = v44 + 1;
      if (!v45)
      {
        *(void *)(v42 + 16) = v46;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_190D1672C();
  }
  uint64_t v17 = *v6;
  sub_190D42398();
  sub_190CDC274(v11, a2, a3, a4);
  sub_190D41A18();
  swift_bridgeObjectRelease();
  uint64_t result = sub_190D423E8();
  a5 = result & ~(-1 << *(unsigned char *)(v17 + 32));
  uint64_t v51 = v17 + 56;
  if (((*(void *)(v17 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
  {
LABEL_21:
    uint64_t v14 = v11;
    uint64_t v15 = a2;
    uint64_t v16 = a3;
    goto LABEL_22;
  }
  uint64_t v47 = -1 << *(unsigned char *)(v17 + 32);
  uint64_t v49 = v17;
  uint64_t v18 = (uint64_t *)(*(void *)(v17 + 48) + 32 * a5);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v22 = v18[2];
  uint64_t v21 = v18[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_190CDC274(v20, v19, v22, v21);
  uint64_t v25 = v24;
  uint64_t v14 = v11;
  uint64_t v26 = v11;
  uint64_t v15 = a2;
  uint64_t v27 = a2;
  uint64_t v16 = a3;
  uint64_t v50 = a4;
  if (v23 == sub_190CDC274(v26, v27, a3, a4) && v25 == v28)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v30 = sub_190D422D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    do
    {
      a5 = (a5 + 1) & ~v47;
      a4 = v50;
      if (((*(void *)(v51 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v31 = (uint64_t *)(*(void *)(v49 + 48) + 32 * a5);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      uint64_t v35 = v31[2];
      uint64_t v34 = v31[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_190CDC274(v33, v32, v35, v34);
      uint64_t v38 = v37;
      if (v36 == sub_190CDC274(v14, v15, a3, v50) && v38 == v39) {
        goto LABEL_25;
      }
      char v41 = sub_190D422D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v41 & 1) == 0);
  }
LABEL_26:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA110);
  uint64_t result = sub_190D42328();
  __break(1u);
  return result;
}

id sub_190D1529C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA2B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D41F08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_190D15434()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D41F08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_190D155E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D41F08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_190D15794()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_190D415D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA198);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_190D41F08();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  id result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_190D15A38()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190D41F08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v19 = v17[3];
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    void v21[2] = v20;
    uint64_t v21[3] = v19;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190D15BFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA2B0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_32:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain_n();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          uint64_t result = swift_release_n();
          uint64_t v1 = v27;
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v18);
        int64_t v12 = v18;
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_190D41DD8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_190D15E64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6A0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_190D41DD8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190D160E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6C0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    id v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_190D42398();
    swift_bridgeObjectRetain();
    sub_190D41A18();
    uint64_t result = sub_190D423E8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190D16390()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_190D415D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA198);
  uint64_t v7 = sub_190D41F18();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_190D169B0(&qword_1E92AA098);
    uint64_t result = sub_190D418D8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_190D1672C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1A0);
  uint64_t v3 = sub_190D41F18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v22 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v23 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v23) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v22 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v20 = *(void *)(v22 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_7:
    uint64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = v13[2];
    uint64_t v17 = v13[3];
    sub_190D42398();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_190CDC274(v14, v15, v16, v17);
    sub_190D41A18();
    swift_bridgeObjectRelease();
    sub_190D423E8();
    unint64_t result = sub_190D41EA8();
    *(void *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 32 * result);
    *unint64_t v18 = v14;
    v18[1] = v15;
    v18[2] = v16;
    void v18[3] = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v23)
  {
LABEL_23:
    swift_release();
    uint64_t v1 = v0;
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v23) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_190D169B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_190D415D8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t IconSourcePredicate.description.getter()
{
  uint64_t v1 = 0x65746F6D6572;
  if (*v0 != 1) {
    uint64_t v1 = 7105633;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C61636F6CLL;
  }
}

BOOL static IconSourcePredicate.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IconSourcePredicate.hash(into:)()
{
  return sub_190D423A8();
}

uint64_t IconSourcePredicate.hashValue.getter()
{
  return sub_190D423E8();
}

unint64_t sub_190D16ACC()
{
  unint64_t result = qword_1E92AC328;
  if (!qword_1E92AC328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC328);
  }
  return result;
}

uint64_t sub_190D16B20()
{
  uint64_t v1 = 0x65746F6D6572;
  if (*v0 != 1) {
    uint64_t v1 = 7105633;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C61636F6CLL;
  }
}

unsigned char *storeEnumTagSinglePayload for IconSourcePredicate(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D16C38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconSourcePredicate()
{
  return &type metadata for IconSourcePredicate;
}

id RelevanceCacheEntry.key.getter()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    return v1;
  }
  else
  {
    id v3 = [v1 key];
    return v3;
  }
}

unint64_t RelevanceCacheError.debugDescription.getter()
{
  unint64_t result = 0xD000000000000037;
  switch(*(void *)(v0 + 8))
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000029;
      break;
    case 3:
      unint64_t result = 0xD000000000000042;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      sub_190D41F68();
      sub_190D41A68();
      sub_190D41A68();
      sub_190D41A68();
      unint64_t result = 0;
      break;
  }
  return result;
}

id RelevanceCacheEntry.value.getter()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0;
  }
  id v1 = *(id *)v0;
  id v2 = *(id *)v0;
  return v1;
}

unint64_t destroy for RelevanceCacheError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14ChronoServices19RelevanceCacheErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for RelevanceCacheError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RelevanceCacheError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RelevanceCacheError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RelevanceCacheError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelevanceCacheError()
{
  return &type metadata for RelevanceCacheError;
}

uint64_t initializeBufferWithCopyOfBuffer for RelevanceCacheEntry(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for RelevanceCacheEntry(id *a1)
{
}

uint64_t assignWithCopy for RelevanceCacheEntry(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for RelevanceCacheEntry(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for RelevanceCacheEntry(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RelevanceCacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_190D171CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_190D171D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RelevanceCacheEntry()
{
  return &type metadata for RelevanceCacheEntry;
}

uint64_t sub_190D171F0(uint64_t a1, unint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA558);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v2 + 24) = v5;
  *(void *)(v2 + 32) = 0;
  id v6 = objc_allocWithZone((Class)_CHSRelevanceCacheBuf);
  sub_190CEA33C(a1, a2);
  unint64_t v7 = (void *)sub_190D41628();
  id v8 = objc_msgSend(v6, sel_initVerifiedRootObjectFromData_, v7);
  sub_190CD55F0(a1, a2);

  if (v8)
  {
    *(void *)(v2 + 16) = v8;
    uint64_t v9 = *(void **)(v2 + 32);
    *(void *)(v2 + 32) = 0;

    *(void *)(v2 + 40) = a1;
    *(void *)(v2 + 48) = a2;
  }
  else
  {
    sub_190CDAE90();
    swift_allocError();
    *int64_t v10 = 0;
    v10[1] = 0;
    swift_willThrow();
    sub_190CD55F0(a1, a2);
    swift_release();

    type metadata accessor for RelevanceCacheReader();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

char *sub_190D17320()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_deviceIdentifier);
  if (v2)
  {
    unsigned int v3 = v2;
    uint64_t v4 = sub_190D41978();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(v1, sel_extensionBundleIdentifier);
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = sub_190D41978();
    uint64_t v11 = v10;

    id v12 = objc_msgSend(v1, sel_containerBundleIdentifier);
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = sub_190D41978();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    if (v6) {
      uint64_t v18 = v4;
    }
    else {
      uint64_t v18 = 0;
    }
    int64_t v19 = (char *)objc_msgSend(objc_allocWithZone((Class)CHSExtensionIdentity), sel_init);
    unint64_t v20 = (uint64_t *)&v19[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    uint64_t *v20 = v9;
    v20[1] = v11;
    uint64_t v17 = v19;
    swift_bridgeObjectRelease();
    int64_t v21 = (uint64_t *)&v17[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    uint64_t *v21 = v14;
    v21[1] = v16;
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t *)&v17[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    *uint64_t v22 = v18;
    v22[1] = v6;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

uint64_t sub_190D174EC(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_relevances);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_190C72C5C(0, &qword_1E92AA540);
    unint64_t v5 = sub_190D41BE8();
  }
  else
  {
    unint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_retain();
  uint64_t v6 = sub_190D1781C(v5, a2);
  swift_bridgeObjectRelease();
  swift_release();
  return v6;
}

id sub_190D175A0(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_intentDataAsData);
  if (!v2)
  {
    id v2 = objc_msgSend(v1, sel_partialIntentDataAsData);
    if (!v2)
    {
      id v2 = objc_msgSend(v1, sel_schemaDataAsData);
      if (!v2)
      {

        return 0;
      }
    }
  }
  uint64_t v3 = sub_190D41648();
  unint64_t v5 = v4;

  sub_190CD55F0(v3, v5);
  id v6 = objc_msgSend(v1, sel_stableHash);
  id v7 = objc_msgSend(v1, sel_intentDataAsData);
  if (v7)
  {
    uint64_t v8 = sub_190D41648();
    unint64_t v10 = v9;

    id v7 = (id)sub_190D41628();
    sub_190CD55F0(v8, v10);
  }
  id v11 = objc_msgSend(v1, sel_partialIntentDataAsData);
  if (v11)
  {
    uint64_t v12 = sub_190D41648();
    unint64_t v14 = v13;

    id v11 = (id)sub_190D41628();
    sub_190CD55F0(v12, v14);
  }
  id v15 = objc_msgSend(v1, sel_schemaDataAsData);
  if (v15)
  {
    uint64_t v16 = sub_190D41648();
    unint64_t v18 = v17;

    id v15 = (id)sub_190D41628();
    sub_190CD55F0(v16, v18);
  }
  id v19 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithIntentData_configData_schemaData_stableHash_, v7, v11, v15, v6);

  return v19;
}

uint64_t sub_190D177A8()
{
  swift_release();
  sub_190CD55F0(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t type metadata accessor for RelevanceCacheReader()
{
  return self;
}

uint64_t sub_190D1781C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_190D420B8())
  {
    unint64_t v22 = v4 & 0xC000000000000001;
    uint64_t v6 = 4;
    uint64_t v19 = v5;
    unint64_t v20 = v4;
    while (1)
    {
      id v7 = v22 ? (id)MEMORY[0x192FD6450](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = objc_msgSend(v7, sel_attributeKey);
      if (v10)
      {
        id v11 = v10;
        sub_190D41978();

        uint64_t v12 = *(os_unfair_lock_s **)(a2 + 24);
        uint64_t v14 = MEMORY[0x1F4188790](v13);
        MEMORY[0x1F4188790](v14);
        swift_retain();
        os_unfair_lock_lock(v12 + 4);
        sub_190D17B18(&v23);
        id v15 = v12 + 4;
        if (v3)
        {
          os_unfair_lock_unlock(v15);
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v3 = 0;
        }
        else
        {
          os_unfair_lock_unlock(v15);
          uint64_t v16 = v23;
          swift_bridgeObjectRelease();
          swift_release();
          sub_190C72C5C(0, (unint64_t *)&qword_1E92AA7E0);
          id v17 = sub_190D175A0(objc_msgSend(v8, sel_intentReference));
          objc_msgSend(objc_allocWithZone((Class)CHSWidgetRelevance), sel_initWithAttribute_intentReference_, v16, v17);

          MEMORY[0x192FD6080]();
          if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_190D41C18();
          }
          sub_190D41C38();
          sub_190D41C08();
        }
        uint64_t v5 = v19;
        unint64_t v4 = v20;
      }
      else
      {
      }
      ++v6;
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v24;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_190D17AF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_190CDAB1C(v1[2], v1[3], v1[4], a1);
}

void *sub_190D17B18@<X0>(void *a1@<X8>)
{
  return sub_190CDAB48(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

BOOL KeybagStateProvider.hasPasscodeSet.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&var1);
  return var1 != 4;
}

uint64_t dispatch thunk of KeybagStateProvider.hasUnlockedSinceBootPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of KeybagStateProvider.lockStatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of KeybagStateProvider.lockState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of KeybagStateProvider.hasUnlockedSinceBoot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of KeybagStateProvider.hasPasscodeSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of KeybagStateProvider.update()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

id static ControlIconGenerator.appIconForControls(container:size:scale:)(double a1, double a2, double a3)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F6F258]), sel_initWithSize_scale_, a1, a2, a3);
  objc_msgSend(v3, sel_setShouldApplyMask_, 0);
  id v4 = objc_allocWithZone(MEMORY[0x1E4F6F248]);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithBundleIdentifier_, v5);

  id v7 = objc_msgSend(v6, sel_prepareImageForDescriptor_, v3);
  return v7;
}

ValueMetadata *type metadata accessor for ControlIconGenerator()
{
  return &type metadata for ControlIconGenerator;
}

uint64_t CHSExtensionIdentity.partial.getter@<X0>(void *a1@<X8>)
{
  id v3 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  id v6 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v8;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DeviceScopedIdentity<>.extensionBundleIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *DeviceScopedIdentity<>.init(extensionBundleIdentifier:deviceID:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = result[1];
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a2;
  a4[3] = a3;
  return result;
}

id sub_190D17DA8()
{
  id result = objc_msgSend(objc_allocWithZone((Class)CHSControlService), sel_init);
  qword_1E92AA390 = (uint64_t)result;
  return result;
}

CHSControlService __swiftcall CHSControlService.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (CHSControlService)objc_msgSend(v0, sel_init);
}

id static CHSControlService.shared.getter()
{
  if (qword_1E92AA388 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1E92AA390;
  return v0;
}

id CHSControlService.init()()
{
  v1.super_class = (Class)CHSControlService;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_190D1800C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 80) = a5;
  *(void *)(v6 + 88) = a6;
  return MEMORY[0x1F4188298](sub_190D1802C, 0, 0);
}

uint64_t sub_190D1802C()
{
  if (qword_1E92AA710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_190CCAAF0((uint64_t)&qword_1E92AA6E0, (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 72) + **(int **)(v2 + 72));
  id v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *id v3 = v0;
  v3[1] = sub_190D18188;
  return v5(v1, v2);
}

uint64_t sub_190D18188(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_190D18338;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_190D182B0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_190D182B0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = (void (*)(uint64_t, void))v0[10];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  v2(v1, 0);
  swift_bridgeObjectRelease();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_190D18338()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = (void (*)(void, void *))v0[10];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  id v3 = v1;
  v2(0, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_190D183D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D41C88();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_190D41C78();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_190D1995C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190D41C48();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_190D186D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    type metadata accessor for CHSControlConfiguration(0);
    uint64_t v5 = (void *)sub_190D418A8();
  }
  if (a2) {
    uint64_t v6 = sub_190D414A8();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t CHSControlService.fetchControlDescriptors(forExtensionBundleIdentifier:userInitiated:reason:completion:)(uint64_t a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v34 = a6;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC330);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA5B0 != -1) {
    swift_once();
  }
  int v35 = a3;
  uint64_t v18 = sub_190D41778();
  __swift_project_value_buffer(v18, (uint64_t)qword_1E92B30A0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_190D41758();
  os_log_type_t v20 = sub_190D41D48();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = v8;
    uint64_t v22 = v21;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v37 = v31;
    *(_DWORD *)uint64_t v22 = 136446722;
    uint64_t v33 = a4;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_190CCB3A8(a1, a2, &v37);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 1026;
    LODWORD(v36) = v35 & 1;
    sub_190D41E48();
    *(_WORD *)(v22 + 18) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_190CCB3A8(v33, a5, &v37);
    a4 = v33;
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_190C6F000, v19, v20, "Fetching control descriptor for extension: %{public}s, userInitiated: %{BOOL,public}d reason: %{public}s", (uint8_t *)v22, 0x1Cu);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v23, -1, -1);
    uint64_t v24 = v22;
    uint64_t v8 = v32;
    MEMORY[0x192FD7910](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  char v25 = v35;
  uint64_t v26 = sub_190D41C88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 1, 1, v26);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(void *)(v27 + 24) = 0;
  *(void *)(v27 + 32) = v8;
  *(void *)(v27 + 40) = a1;
  *(void *)(v27 + 48) = a2;
  *(unsigned char *)(v27 + 56) = v25 & 1;
  *(void *)(v27 + 64) = a4;
  *(void *)(v27 + 72) = a5;
  *(void *)(v27 + 80) = v34;
  *(void *)(v27 + 88) = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v8;
  swift_retain();
  sub_190D183D0((uint64_t)v17, (uint64_t)&unk_1E92AC340, v27);
  return swift_release();
}

uint64_t sub_190D18AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 120) = v11;
  *(_OWORD *)(v8 + 104) = v10;
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = a8;
  *(unsigned char *)(v8 + 152) = a7;
  *(void *)(v8 + 80) = a5;
  return MEMORY[0x1F4188298](sub_190D18B28, 0, 0);
}

uint64_t sub_190D18B28()
{
  if (qword_1E92AA710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_190CCAAF0((uint64_t)&qword_1E92AA6E0, v0 + 16);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
  long long v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 32)
                                                                                              + **(int **)(v2 + 32));
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v3;
  *id v3 = v0;
  v3[1] = sub_190D18C94;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 80);
  return v10(v8, v7, v6, v4, v5, v1, v2);
}

uint64_t sub_190D18C94(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_190D18E44;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_190D18DBC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_190D18DBC()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (void (*)(uint64_t, void))v0[14];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  v2(v1, 0);
  swift_bridgeObjectRelease();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_190D18E44()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (void (*)(void, void *))v0[14];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  id v3 = v1;
  v2(0, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_190D18FCC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    sub_190C72C5C(0, (unint64_t *)&unk_1E92AA5A0);
    uint64_t v5 = (void *)sub_190D41BD8();
  }
  if (a2) {
    uint64_t v6 = sub_190D414A8();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_190D19078(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_190D19154;
  return v6(a1);
}

uint64_t sub_190D19154()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_190D1924C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __srCC_SHA256_CTX c = (void *)sub_190D42118();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_190D192F0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_190D1931C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_190D19344@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t _sSo17CHSControlServiceC14ChronoServicesE14reloadControls12forExtension4kind6reasonySS_SSSgSStF_0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (qword_1E92AA5B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_190D41778();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E92B30A0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_190D41758();
  os_log_type_t v14 = sub_190D41D48();
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v27[0] = v24;
    *(_DWORD *)uint64_t v15 = 136446722;
    os_log_type_t type = v14;
    swift_bridgeObjectRetain();
    sub_190CCB3A8(a1, a2, v27);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2082;
    if (a4) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = 7104878;
    }
    unint64_t v17 = a6;
    uint64_t v18 = a5;
    if (a4) {
      unint64_t v19 = a4;
    }
    else {
      unint64_t v19 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    sub_190CCB3A8(v16, v19, v27);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    a5 = v18;
    a6 = v17;
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_190CCB3A8(a5, v17, v27);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_190C6F000, v13, type, "Reloading control for extension: %{public}s kind: %{public}s reason: %{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v24, -1, -1);
    MEMORY[0x192FD7910](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (qword_1E92AA710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_190CCAAF0((uint64_t)&qword_1E92AA6E0, (uint64_t)v27);
  uint64_t v20 = v28;
  uint64_t v21 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v21 + 24))(v25, a2, v26, a4, a5, a6, v20, v21);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
}

uint64_t sub_190D196D0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_190D19728()
{
  long long v8 = *(_OWORD *)(v0 + 40);
  char v2 = *(unsigned char *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 72);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_190CD5C90;
  *(void *)(v5 + 120) = v4;
  *(_OWORD *)(v5 + 104) = v6;
  *(void *)(v5 + 96) = v3;
  *(unsigned char *)(v5 + 152) = v2;
  *(_OWORD *)(v5 + 80) = v8;
  return MEMORY[0x1F4188298](sub_190D18B28, 0, 0);
}

uint64_t type metadata accessor for CHSControlService(uint64_t a1)
{
  return sub_190C72C5C(a1, &qword_1E92AC348);
}

uint64_t sub_190D19820()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_190D19858(void *a1, uint64_t a2)
{
  sub_190D18FCC(a1, a2, *(void *)(v2 + 16));
}

void sub_190D19860(void *a1, uint64_t a2)
{
  sub_190D186D4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_190D19868()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_190D198B0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_190CD6208;
  *(_OWORD *)(v2 + 80) = v3;
  return MEMORY[0x1F4188298](sub_190D1802C, 0, 0);
}

uint64_t sub_190D1995C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC330);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190D199BC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190D199F4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_190CD5C90;
  long long v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E92AC360 + dword_1E92AC360);
  return v6(a1, v4);
}

uint64_t ConcreteFileManagerFactory.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ConcreteFileManagerFactory.init()()
{
  return v0;
}

uint64_t ConcreteFileManagerFactory.defaultFileManager.getter@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ConcreteFileManagerPrimitives()
{
  return self;
}

uint64_t ConcreteFileManagerFactory.makeFileManager()@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CB8]), sel_init);
  uint64_t v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

uint64_t ConcreteFileManagerPrimitives.__allocating_init()()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CB8]), sel_init);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t ConcreteFileManagerFactory.deinit()
{
  return v0;
}

uint64_t ConcreteFileManagerFactory.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_190D19C30@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

uint64_t sub_190D19CA4@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CB8]), sel_init);
  uint64_t v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

Swift::Bool __swiftcall ConcreteFileManagerPrimitives.fileExists(atPath:)(Swift::String atPath)
{
  id v2 = *(void **)(v1 + 16);
  uint64_t v3 = (void *)sub_190D41948();
  LOBYTE(v2) = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  return (char)v2;
}

id ConcreteFileManagerPrimitives.fileExists(atPath:isDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(v3 + 16);
  long long v6 = (void *)sub_190D41948();
  id v7 = objc_msgSend(v5, sel_fileExistsAtPath_isDirectory_, v6, a3);

  return v7;
}

void *ConcreteFileManagerPrimitives.contentsOfDirectory(atPath:)()
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (void *)sub_190D41948();
  v17[0] = 0;
  id v3 = objc_msgSend(v1, sel_contentsOfDirectoryAtPath_error_, v2, v17);

  uint64_t v4 = v17[0];
  if (v3)
  {
    uint64_t v5 = sub_190D41BE8();
    long long v6 = v4;

    uint64_t v7 = *(void *)(v5 + 16);
    if (v7)
    {
      sub_190CE3620();
      uint64_t v8 = (void **)(v5 + 40);
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v9 = *(v8 - 1);
        long long v10 = *v8;
        v17[0] = v9;
        v17[1] = v10;
        swift_bridgeObjectRetain();
        if (sub_190D41E68())
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v18 = v4;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_190CDDDC4(0, v4[2] + 1, 1);
            uint64_t v4 = v18;
          }
          unint64_t v13 = v4[2];
          unint64_t v12 = v4[3];
          if (v13 >= v12 >> 1)
          {
            sub_190CDDDC4((char *)(v12 > 1), v13 + 1, 1);
            uint64_t v4 = v18;
          }
          v4[2] = v13 + 1;
          os_log_type_t v14 = &v4[2 * v13];
          void v14[4] = v9;
          v14[5] = v10;
        }
        v8 += 2;
        --v7;
      }
      while (v7);
    }
    else
    {
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = v17[0];
    sub_190D414B8();

    swift_willThrow();
  }
  return v4;
}

uint64_t ConcreteFileManagerPrimitives.setExtendedAttribute<A>(at:key:value:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190D1A5E0(a1, a2, a3, a4, a5, a6);
}

uint64_t ConcreteFileManagerPrimitives.extendedAttribute<A>(at:key:of:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_190D41E18();
  swift_getWitnessTable();
  swift_getWitnessTable();
  return sub_190CECB74(v3, v4, v5, a2);
}

id ConcreteFileManagerPrimitives.moveItem(at:to:)()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (void *)sub_190D414F8();
  uint64_t v3 = (void *)sub_190D414F8();
  v7[0] = 0;
  unsigned int v4 = objc_msgSend(v1, sel_moveItemAtURL_toURL_error_, v2, v3, v7);

  if (v4) {
    return v7[0];
  }
  id v6 = v7[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

id ConcreteFileManagerPrimitives.removeItem(at:)()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (void *)sub_190D414F8();
  v5[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v5);

  if (v1) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t ConcreteFileManagerPrimitives.replaceItemAt(_:withItemAt:backupItemName:options:)()
{
  return sub_190D41D08();
}

id ConcreteFileManagerPrimitives.createDirectory(at:withIntermediateDirectories:attributes:)(uint64_t a1, char a2, void *a3)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  id v6 = *(void **)(v3 + 16);
  uint64_t v7 = (void *)sub_190D414F8();
  if (a3)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_190CEA68C();
    a3 = (void *)sub_190D418A8();
  }
  v11[0] = 0;
  unsigned int v8 = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, a2 & 1, a3, v11);

  if (v8) {
    return v11[0];
  }
  id v10 = v11[0];
  sub_190D414B8();

  return (id)swift_willThrow();
}

uint64_t ConcreteFileManagerPrimitives.deinit()
{
  return v0;
}

uint64_t ConcreteFileManagerPrimitives.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

id sub_190D1A444()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  id v2 = (void *)sub_190D41948();
  id v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  return v3;
}

id sub_190D1A490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(*(void *)v3 + 16);
  id v6 = (void *)sub_190D41948();
  id v7 = objc_msgSend(v5, sel_fileExistsAtPath_isDirectory_, v6, a3);

  return v7;
}

void *sub_190D1A4EC()
{
  return ConcreteFileManagerPrimitives.contentsOfDirectory(atPath:)();
}

uint64_t sub_190D1A510(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190D1A5E0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_190D1A528@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return ConcreteFileManagerPrimitives.extendedAttribute<A>(at:key:of:)(a1, a2);
}

id sub_190D1A54C()
{
  return ConcreteFileManagerPrimitives.moveItem(at:to:)();
}

id sub_190D1A570()
{
  return ConcreteFileManagerPrimitives.removeItem(at:)();
}

uint64_t sub_190D1A594()
{
  return sub_190D41D08();
}

id sub_190D1A5BC(uint64_t a1, char a2, void *a3)
{
  return ConcreteFileManagerPrimitives.createDirectory(at:withIntermediateDirectories:attributes:)(a1, a2, a3);
}

uint64_t sub_190D1A5E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190CECC98(a1, *a2, a2[1], a3, a4, a5, a6);
}

uint64_t type metadata accessor for ConcreteFileManagerFactory()
{
  return self;
}

uint64_t method lookup function for ConcreteFileManagerFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConcreteFileManagerFactory);
}

uint64_t dispatch thunk of ConcreteFileManagerFactory.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t method lookup function for ConcreteFileManagerPrimitives(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConcreteFileManagerPrimitives);
}

uint64_t SandboxExtension.token.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_190D1A6A8()
{
  return sub_190D423E8();
}

uint64_t sub_190D1A6F8()
{
  return sub_190D41A18();
}

uint64_t sub_190D1A70C()
{
  return sub_190D423E8();
}

uint64_t sub_190D1A758@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_190D42138();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_190D1A7AC(void *a1@<X8>)
{
  *a1 = 0x6E656B6F74;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_190D1A7C4()
{
  return 0x6E656B6F74;
}

uint64_t sub_190D1A7D8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_190D42138();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_190D1A830(uint64_t a1)
{
  unint64_t v2 = sub_190D1B494();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190D1A86C(uint64_t a1)
{
  unint64_t v2 = sub_190D1B494();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SandboxExtension.__allocating_init(token:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 1;
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t SandboxExtension.init(token:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t SandboxExtension.deinit()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    sandbox_extension_release();
  }
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SandboxExtension.__deallocating_deinit()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    sandbox_extension_release();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 41, 7);
}

char *static SandboxExtension.issue(url:readonly:)()
{
  uint64_t v1 = v0;
  sub_190D41598();
  sub_190D419D8();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sandbox_extension_issue_file();
  uint64_t v3 = swift_release();
  if (v2)
  {
    uint64_t v4 = sub_190D41938();
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      uint64_t v1 = swift_allocObject();
      *(void *)(v1 + 24) = v7;
      *(void *)(v1 + 32) = 0;
      *(unsigned char *)(v1 + 40) = 1;
      *(void *)(v1 + 16) = v6;
    }
    else
    {
      sub_190D1AB04();
      swift_allocError();
      void *v14 = 0;
      v14[1] = 0;
      void v14[2] = 1;
      swift_willThrow();
    }
    free(v2);
    return (char *)v1;
  }
  unsigned int v8 = MEMORY[0x192FD5C70](v3);
  int v9 = MEMORY[0x192FD5C70]();
  uint64_t result = strerror(v9);
  if (result)
  {
    uint64_t v11 = sub_190D41938();
    uint64_t v1 = v12;
    sub_190D1AB04();
    swift_allocError();
    *unint64_t v13 = v8;
    v13[1] = v11;
    void v13[2] = v1;
    swift_willThrow();
    return (char *)v1;
  }
  __break(1u);
  return result;
}

unint64_t sub_190D1AB04()
{
  unint64_t result = qword_1E92AA378;
  if (!qword_1E92AA378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA378);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SandboxExtension.consume()()
{
  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + 40))
  {
    sub_190D419D8();
    uint64_t v2 = sandbox_extension_consume();
    uint64_t v3 = swift_release();
    if (v2 < 0)
    {
      unsigned int v12 = MEMORY[0x192FD5C70](v3);
      int v13 = MEMORY[0x192FD5C70]();
      if (strerror(v13))
      {
        uint64_t v14 = sub_190D41938();
        uint64_t v16 = v15;
        sub_190D1AB04();
        swift_allocError();
        *unint64_t v17 = v12;
        v17[1] = v14;
        id v17[2] = v16;
        swift_willThrow();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      *(void *)(v1 + 32) = v2;
      *(unsigned char *)(v1 + 40) = 0;
    }
  }
  else
  {
    if (qword_1E92AB5C0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_190D41778();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E92B3100);
    swift_retain_n();
    uint64_t v5 = sub_190D41758();
    os_log_type_t v6 = sub_190D41D18();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v18 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_retain();
      unint64_t v9 = SandboxExtension.description.getter();
      unint64_t v11 = v10;
      swift_release();
      sub_190CCB3A8(v9, v11, &v18);
      sub_190D41E48();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_190C6F000, v5, v6, "SandboxExtension already consumed: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v8, -1, -1);
      MEMORY[0x192FD7910](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

unint64_t SandboxExtension.description.getter()
{
  sub_190D41F68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_190D1B3F8(16);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  MEMORY[0x192FD5EA0](v0, v2, v4, v6);
  sub_190D41A68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  sub_190D422B8();
  sub_190D41A68();
  swift_bridgeObjectRelease();
  sub_190D41A68();
  return 0xD000000000000018;
}

uint64_t SandboxExtension.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D1B494();
  sub_190D42418();
  sub_190D42238();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SandboxExtension.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SandboxExtension.init(from:)(a1);
  return v2;
}

uint64_t SandboxExtension.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA4C8);
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D1B494();
  sub_190D42408();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v14;
    uint64_t v10 = sub_190D42188();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v5);
    *(void *)(v3 + 16) = v10;
    *(void *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_190D1B248@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SandboxExtension.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_190D1B2A0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D1B494();
  sub_190D42418();
  sub_190D42238();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_190D1B3D4()
{
  return SandboxExtension.description.getter();
}

uint64_t sub_190D1B3F8(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_190D41A48();
    return sub_190D41B18();
  }
  return result;
}

unint64_t sub_190D1B494()
{
  unint64_t result = qword_1E92AA5E8;
  if (!qword_1E92AA5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA5E8);
  }
  return result;
}

uint64_t type metadata accessor for SandboxExtension()
{
  return self;
}

uint64_t method lookup function for SandboxExtension(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SandboxExtension);
}

uint64_t dispatch thunk of SandboxExtension.__allocating_init(token:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SandboxExtension.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for SandboxExtension.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190D1B5FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtension.CodingKeys()
{
  return &type metadata for SandboxExtension.CodingKeys;
}

unint64_t destroy for SandboxError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14ChronoServices12SandboxErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if ((int)v4 - 1 < 0)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for SandboxError(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 16) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 16);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 2) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 2);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for SandboxError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SandboxError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 1;
  if (v5 >= 3) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SandboxError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_190D1B8BC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_190D1B8E0(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxError()
{
  return &type metadata for SandboxError;
}

unint64_t sub_190D1B924()
{
  unint64_t result = qword_1E92AC370;
  if (!qword_1E92AC370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC370);
  }
  return result;
}

unint64_t sub_190D1B97C()
{
  unint64_t result = qword_1E92AA5F8;
  if (!qword_1E92AA5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA5F8);
  }
  return result;
}

unint64_t sub_190D1B9D4()
{
  unint64_t result = qword_1E92AA5F0;
  if (!qword_1E92AA5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA5F0);
  }
  return result;
}

id sub_190D1BA28()
{
  uint64_t v0 = (objc_class *)type metadata accessor for ControlsClient();
  id result = objc_msgSend(objc_allocWithZone(v0), sel_init);
  qword_1E92AA6F8 = (uint64_t)v0;
  unk_1E92AA700 = &protocol witness table for ControlsClient;
  qword_1E92AA6E0 = (uint64_t)result;
  return result;
}

id ControlsClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t static ControlsClientFactory.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92AA710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_190CCAAF0((uint64_t)&qword_1E92AA6E0, a1);
}

uint64_t static ControlsClientFactory.shared.setter(uint64_t *a1)
{
  if (qword_1E92AA710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(&qword_1E92AA6E0, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        id result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *id result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t (*static ControlsClientFactory.shared.modify())()
{
  if (qword_1E92AA710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlsClientFactory.deinit()
{
  return v0;
}

uint64_t ControlsClientFactory.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

id ControlsClient._calloutQueue.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
}

uint64_t sub_190D1BE98()
{
  return sub_190D1BF2C(&OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher);
}

uint64_t sub_190D1BEAC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher) = a1;
  return swift_release();
}

uint64_t (*sub_190D1BEC4(uint64_t *a1))(void *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_190D1BE98();
  return sub_190D1BF0C;
}

uint64_t sub_190D1BF0C(void *a1, uint64_t a2)
{
  return sub_190D1C054(a1, a2, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher);
}

uint64_t sub_190D1BF18()
{
  return sub_190D1BF2C(&OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher);
}

uint64_t sub_190D1BF2C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + *a1);
  if (v3)
  {
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v5 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA690);
    sub_190CD4928((unint64_t *)&unk_1E92AA5B8, &qword_1E92AA690);
    uint64_t v4 = sub_190D41818();
    *(void *)(v5 + v2) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_190D1BFE8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher) = a1;
  return swift_release();
}

uint64_t (*sub_190D1C000(uint64_t *a1))(void *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_190D1BF18();
  return sub_190D1C048;
}

uint64_t sub_190D1C048(void *a1, uint64_t a2)
{
  return sub_190D1C054(a1, a2, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher);
}

uint64_t sub_190D1C054(void *a1, uint64_t a2, void *a3)
{
  *(void *)(a1[1] + *a3) = *a1;
  return swift_release();
}

char *ControlsClient.init()()
{
  uint64_t v1 = sub_190D41D78();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_190D41D58();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_190D41898();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v28 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue;
  v27[5] = sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  uint64_t v7 = v0;
  sub_190D41878();
  aBlock[0] = MEMORY[0x1E4FBC860];
  uint64_t v27[3] = sub_190D2BAA8((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  void v27[2] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  v27[4] = sub_190CD4928((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  uint64_t v8 = *MEMORY[0x1E4FBCC68];
  uint64_t v9 = v2 + 104;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v27[1] = v9;
  v10(v4, v8, v1);
  *(void *)(v27[6] + v28) = sub_190D41DA8();
  uint64_t v28 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue;
  sub_190D41878();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_190D41E88();
  v10(v4, v8, v1);
  *(void *)&v7[v28] = sub_190D41DA8();
  *(void *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection] = 0;
  uint64_t v11 = MEMORY[0x1E4FBC868];
  *(void *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts] = MEMORY[0x1E4FBC868];
  uint64_t v12 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock;
  type metadata accessor for UnfairLock();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = (_DWORD *)swift_slowAlloc();
  _DWORD *v14 = 0;
  *(void *)(v13 + 16) = v14;
  *(void *)&v7[v12] = v13;
  *(void *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions] = v11;
  *(void *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_sandboxExtensions] = v11;
  *(_OWORD *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData] = xmmword_190D4C530;
  uint64_t v15 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue_liveControlsDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA690);
  swift_allocObject();
  *(void *)&v7[v15] = sub_190D417E8();
  *(void *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher] = 0;
  uint64_t v16 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue_previewControlsDidChangePublisher;
  swift_allocObject();
  *(void *)&v7[v16] = sub_190D417E8();
  *(void *)&v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher] = 0;
  unint64_t v17 = &v7[OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange];
  *(void *)unint64_t v17 = 0;
  *((void *)v17 + 1) = 0;

  uint64_t v18 = (objc_class *)type metadata accessor for ControlsClient();
  v30.receiver = v7;
  v30.super_class = v18;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v30, sel_init);
  uint64_t v20 = CHSChronodStartupNotification;
  uint64_t v21 = *(void **)&v19[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v19;
  aBlock[4] = sub_190D1CDF0;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190D1D1D0;
  aBlock[3] = &block_descriptor_9;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = v19;
  uint64_t v25 = v21;
  swift_release();
  swift_beginAccess();
  notify_register_dispatch(v20, (int *)&unk_1E92B30B8, v25, v23);
  swift_endAccess();

  _Block_release(v23);
  return v24;
}

uint64_t type metadata accessor for ControlsClient()
{
  return self;
}

uint64_t sub_190D1C5E0(uint64_t a1, char *a2)
{
  uint64_t v3 = (char *)sub_190D41858();
  unint64_t v46 = *((void *)v3 - 1);
  MEMORY[0x1F4188790](v3);
  unint64_t v5 = (unint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v45 = sub_190D41898();
  uint64_t v6 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  if (qword_1E92AA720 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    uint64_t v9 = sub_190D41778();
    uint64_t v44 = __swift_project_value_buffer(v9, (uint64_t)qword_1E92B30C0);
    uint64_t v10 = sub_190D41758();
    os_log_type_t v11 = sub_190D41D18();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_190C6F000, v10, v11, "Detected chronod relaunch.", v12, 2u);
      MEMORY[0x192FD7910](v12, -1, -1);
    }

    unint64_t v53 = MEMORY[0x1E4FBC868];
    uint64_t v13 = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
    uint64_t v14 = *(os_unfair_lock_s **)(v13 + 16);
    swift_retain();
    os_unfair_lock_lock(v14);
    sub_190D1CDF8((uint64_t)a2, &v53);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
    swift_release();
    BSDispatchQueueAssert();
    sub_190D2700C();
    uint64_t v15 = *(void **)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection];
    if (v15)
    {
      id v16 = v15;
      if (objc_msgSend(v16, sel_remoteTarget))
      {
        sub_190D41E78();
        swift_unknownObjectRelease();

        sub_190CCE544((uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v50 = 0u;
        sub_190CCE544((uint64_t)&aBlock);
        objc_msgSend(v16, sel_activate);
      }
    }
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    uint64_t v51 = sub_190D2CA68;
    uint64_t v52 = v17;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v50 = sub_190CED068;
    *((void *)&v50 + 1) = &block_descriptor_338;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = a2;
    sub_190D41868();
    uint64_t v48 = (char *)MEMORY[0x1E4FBC860];
    a2 = (char *)sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
    sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
    sub_190D41E88();
    MEMORY[0x192FD6250](0, v8, v5, v18);
    _Block_release(v18);
    (*(void (**)(unint64_t, char *))(v46 + 8))(v5, v3);
    (*(void (**)(char *, int64_t))(v6 + 8))(v8, v45);
    swift_release();
    uint64_t v3 = v19;
    uint64_t v20 = sub_190D41758();
    os_log_type_t v21 = sub_190D41D18();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134217984;
      uint64_t v23 = (uint64_t *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions];
      swift_beginAccess();
      uint64_t v24 = *v23;
      if ((v24 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = (char *)sub_190D41EC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = *(char **)(v24 + 16);
      }
      uint64_t v48 = v8;
      sub_190D41E48();

      _os_log_impl(&dword_190C6F000, v20, v21, "Resubscribing to %ld active sessions.", v22, 0xCu);
      MEMORY[0x192FD7910](v22, -1, -1);
    }
    else
    {
    }
    if ((v53 & 0xC000000000000001) != 0)
    {
      uint64_t v25 = sub_190D42058();
      unint64_t v46 = 0;
      uint64_t v44 = 0;
      unint64_t v26 = 0;
      unint64_t v5 = v25 | 0x8000000000000000;
    }
    else
    {
      uint64_t v27 = -1;
      uint64_t v28 = -1 << *(unsigned char *)(v53 + 32);
      uint64_t v44 = ~v28;
      uint64_t v29 = *(void *)(v53 + 64);
      unint64_t v46 = v53 + 64;
      uint64_t v30 = -v28;
      if (v30 < 64) {
        uint64_t v27 = ~(-1 << v30);
      }
      unint64_t v26 = v27 & v29;
      unint64_t v5 = v53;
    }
    int64_t v45 = (unint64_t)(v44 + 64) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    uint64_t v6 = MEMORY[0x1E4FBC838] + 8;
    if ((v5 & 0x8000000000000000) != 0) {
      break;
    }
LABEL_20:
    if (v26)
    {
      uint64_t v8 = (char *)((v26 - 1) & v26);
      unint64_t v32 = __clz(__rbit64(v26)) | (v31 << 6);
      uint64_t v33 = v31;
      goto LABEL_39;
    }
    int64_t v38 = v31 + 1;
    if (!__OFADD__(v31, 1))
    {
      if (v38 >= v45) {
        goto LABEL_42;
      }
      unint64_t v39 = *(void *)(v46 + 8 * v38);
      uint64_t v33 = v31 + 1;
      if (!v39)
      {
        uint64_t v33 = v31 + 2;
        if (v31 + 2 >= v45) {
          goto LABEL_42;
        }
        unint64_t v39 = *(void *)(v46 + 8 * v33);
        if (!v39)
        {
          uint64_t v33 = v31 + 3;
          if (v31 + 3 >= v45) {
            goto LABEL_42;
          }
          unint64_t v39 = *(void *)(v46 + 8 * v33);
          if (!v39)
          {
            uint64_t v33 = v31 + 4;
            if (v31 + 4 >= v45) {
              goto LABEL_42;
            }
            unint64_t v39 = *(void *)(v46 + 8 * v33);
            if (!v39)
            {
              uint64_t v40 = v31 + 5;
              while (v45 != v40)
              {
                unint64_t v39 = *(void *)(v46 + 8 * v40++);
                if (v39)
                {
                  uint64_t v33 = v40 - 1;
                  goto LABEL_38;
                }
              }
              goto LABEL_42;
            }
          }
        }
      }
LABEL_38:
      uint64_t v8 = (char *)((v39 - 1) & v39);
      unint64_t v32 = __clz(__rbit64(v39)) + (v33 << 6);
LABEL_39:
      uint64_t v41 = 8 * v32;
      a2 = *(char **)(*(void *)(v5 + 48) + v41);
      uint64_t v37 = *(void *)(*(void *)(v5 + 56) + v41);
      swift_retain();
      swift_retain();
      if (a2) {
        goto LABEL_40;
      }
      goto LABEL_42;
    }
    __break(1u);
  }
  while (1)
  {
    uint64_t v34 = sub_190D42088();
    if (!v34) {
      break;
    }
    uint64_t v36 = v35;
    uint64_t v47 = v34;
    type metadata accessor for ControlSessionKey();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    a2 = v48;
    swift_unknownObjectRelease();
    uint64_t v47 = v36;
    type metadata accessor for ControlSessionSubscriptionRequest();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v37 = (uint64_t)v48;
    swift_unknownObjectRelease();
    uint64_t v33 = v31;
    uint64_t v8 = (char *)v26;
    if (!a2) {
      break;
    }
LABEL_40:
    swift_release();
    sub_190D25748(v37, v3);
    swift_release();
    uint64_t v31 = v33;
    unint64_t v26 = (unint64_t)v8;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_20;
    }
  }
LABEL_42:
  sub_190CEA740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D1CDB8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190D1CDF0(uint64_t a1)
{
  return sub_190D1C5E0(a1, *(char **)(v1 + 16));
}

void sub_190D1CDF8(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions;
  swift_beginAccess();
  if ((*(void *)v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_190D41EC8();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_3:
      *a2 = *(void *)v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else if (*(void *)(*(void *)v3 + 16))
  {
    goto LABEL_3;
  }
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_190D41778();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E92B30C0);
  uint64_t v6 = sub_190D41758();
  os_log_type_t v7 = sub_190D41D18();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_190C6F000, v6, v7, "No active sessions - not reconnecting.", v8, 2u);
    MEMORY[0x192FD7910](v8, -1, -1);
  }
}

void sub_190D1CF68(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v19 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v20 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (v5) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v12 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v12 < v20)
    {
      unint64_t v13 = *(void *)(v19 + 8 * v12);
      ++v6;
      if (v13) {
        goto LABEL_20;
      }
      int64_t v6 = v12 + 1;
      if (v12 + 1 >= v20) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v19 + 8 * v6);
      if (v13) {
        goto LABEL_20;
      }
      int64_t v6 = v12 + 2;
      if (v12 + 2 >= v20) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v19 + 8 * v6);
      if (v13)
      {
LABEL_20:
        unint64_t v5 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v6 << 6); ; unint64_t i = v10 | (v6 << 6))
        {
          uint64_t v15 = *(void *)(v2 + 56) + 32 * i;
          uint64_t v16 = *(unsigned __int8 *)(v15 + 24);
          id v17 = *(id *)(v15 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_190D26D2C();
          if (v18)
          {
            os_log_type_t v7 = (void *)v18;
            uint64_t v8 = (void *)sub_190D41948();
            swift_bridgeObjectRelease();
            id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v16);
            objc_msgSend(v7, sel_updateControlHost_configuration_activationState_, v8, v17, v9);
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            if (!v5) {
              goto LABEL_7;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (!v5) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      int64_t v14 = v12 + 3;
      if (v14 < v20)
      {
        unint64_t v13 = *(void *)(v19 + 8 * v14);
        if (v13)
        {
          int64_t v6 = v14;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v6 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_26;
          }
          if (v6 >= v20) {
            break;
          }
          unint64_t v13 = *(void *)(v19 + 8 * v6);
          ++v14;
          if (v13) {
            goto LABEL_20;
          }
        }
      }
    }
LABEL_24:
    swift_release();
    return;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_190D1D1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

Swift::Void __swiftcall ControlsClient.start()()
{
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_190D1D468;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_190CD0740;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  id v7[2] = sub_190CCA8F0;
  v7[3] = &block_descriptor_10;
  uint64_t v4 = _Block_copy(v7);
  unint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

void sub_190D1D3B4(uint64_t a1)
{
  BSDispatchQueueAssert();
  sub_190D2700C();
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection);
  if (v2)
  {
    id v3 = v2;
    if (objc_msgSend(v3, sel_remoteTarget))
    {
      sub_190D41E78();

      swift_unknownObjectRelease();
      sub_190CCE544((uint64_t)v4);
    }
    else
    {
      memset(v4, 0, sizeof(v4));
      sub_190CCE544((uint64_t)v4);
      objc_msgSend(v3, sel_activate);
    }
  }
}

void sub_190D1D468()
{
  sub_190D1D3B4(*(void *)(v0 + 16));
}

uint64_t sub_190D1D470()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t ControlsClient.subscribeToSession(withRequest:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_190D41858();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190D41898();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_190D1D7A8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_16;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v3;
  swift_retain();
  swift_retain();
  sub_190D41868();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_190D1D760()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_190D1D7A8()
{
  sub_190D25BFC(v0[3], v0[4], v0[5]);
}

uint64_t ControlsClient.unsubscribe(fromSession:)(uint64_t a1)
{
  uint64_t v3 = sub_190D41858();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_190D41898();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_190D1DDCC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  aBlock[3] = &block_descriptor_22;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v1;
  swift_retain();
  sub_190D41868();
  v15[1] = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_190D1DAA0(uint64_t a1, uint64_t a2)
{
  char v14 = 0;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_190D1DDD4(a1, a2, &v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  uint64_t result = swift_release();
  if (v14 == 1)
  {
    sub_190D416E8();
    v13[3] = type metadata accessor for ControlSessionKey();
    _DWORD v13[4] = sub_190D2BAA8(&qword_1E92AA488, (void (*)(uint64_t))type metadata accessor for ControlSessionKey);
    v13[0] = a2;
    swift_retain();
    uint64_t v7 = sub_190D416D8();
    unint64_t v9 = v8;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    uint64_t v10 = sub_190D26D2C();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v12 = (void *)sub_190D41628();
      objc_msgSend(v11, sel_unsubscribeFromSession_, v12);
      sub_190CD55F0(v7, v9);

      return swift_unknownObjectRelease();
    }
    else
    {
      return sub_190CD55F0(v7, v9);
    }
  }
  return result;
}

uint64_t sub_190D1DDB4()
{
  return objectdestroy_18Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_190D1DDCC()
{
  return sub_190D1DAA0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_190D1DDD4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  swift_beginAccess();
  uint64_t v6 = swift_retain();
  sub_190D29F34(v6, (void (*)(void))sub_190D0B238, &qword_1E92AA4C0, (void (*)(void))type metadata accessor for SandboxExtension, (void (*)(unint64_t, uint64_t))sub_190CDFB90);
  swift_endAccess();
  swift_release();
  swift_release();
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  uint64_t v8 = *v7;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_190CDA6B4(a2, v8);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v9)
  {
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_190D41778();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E92B30C0);
    swift_retain_n();
    uint64_t v12 = sub_190D41758();
    os_log_type_t v13 = sub_190D41D48();
    if (os_log_type_enabled(v12, v13))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v20[0] = v15;
      *(_DWORD *)char v14 = 136315138;
      swift_retain();
      uint64_t v16 = sub_190D03D6C();
      unint64_t v18 = v17;
      swift_release();
      v20[7] = sub_190CCB3A8((uint64_t)v16, v18, v20);
      sub_190D41E48();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_190C6F000, v12, v13, "Unsubscribing from session: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v15, -1, -1);
      MEMORY[0x192FD7910](v14, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    uint64_t v19 = swift_retain();
    sub_190D29F34(v19, (void (*)(void))sub_190D0B22C, (uint64_t *)&unk_1E92AA4B0, (void (*)(void))type metadata accessor for ControlSessionSubscriptionRequest, (void (*)(unint64_t, uint64_t))sub_190CDFB84);
    swift_endAccess();
    swift_release();
    uint64_t result = swift_release();
    *a3 = 1;
  }
  return result;
}

uint64_t ControlsClient.setVisiblySettled(_:forSession:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  uint64_t v4 = sub_190D41858();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_190D41898();
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190D416E8();
  uint64_t v22 = (void *)type metadata accessor for ControlSessionKey();
  uint64_t v23 = sub_190D2BAA8(&qword_1E92AA488, (void (*)(uint64_t))type metadata accessor for ControlSessionKey);
  aBlock[0] = a2;
  swift_retain();
  uint64_t v10 = sub_190D416D8();
  unint64_t v12 = v11;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  os_log_type_t v13 = (void *)swift_allocObject();
  void v13[2] = v18;
  v13[3] = a2;
  _DWORD v13[4] = v2;
  v13[5] = v10;
  void v13[6] = v12;
  uint64_t v23 = (uint64_t)sub_190D29B6C;
  uint64_t v24 = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  uint64_t v22 = &block_descriptor_28;
  char v14 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v15 = v2;
  sub_190CEA33C(v10, v12);
  sub_190D41868();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v9, v6, v14);
  _Block_release(v14);
  sub_190CD55F0(v10, v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  return swift_release();
}

uint64_t sub_190D1E654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a3;
  uint64_t v9 = sub_190D41778();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E92B30C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_retain_n();
  char v14 = sub_190D41758();
  int v15 = sub_190D41D18();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    int v38 = v15;
    uint64_t v40 = a4;
    uint64_t v41 = a5;
    uint64_t v16 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v44[0] = v37;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v39 = v16;
    uint64_t v18 = NSStringFromCHSControlVisibility(v16);
    if (!v18)
    {
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v19 = v18;
    uint64_t v20 = sub_190D41978();
    unint64_t v22 = v21;

    uint64_t v43 = sub_190CCB3A8(v20, v22, v44);
    sub_190D41E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    swift_retain();
    uint64_t v23 = sub_190D03D6C();
    unint64_t v25 = v24;
    swift_release();
    uint64_t v43 = sub_190CCB3A8((uint64_t)v23, v25, v44);
    sub_190D41E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v14, (os_log_type_t)v38, "Set visibly %{public}s for session: %{public}s", (uint8_t *)v17, 0x16u);
    uint64_t v26 = v37;
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v26, -1, -1);
    MEMORY[0x192FD7910](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    a1 = v39;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v27 = v42;
  uint64_t v28 = *(void *)(v42 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  uint64_t v29 = *(os_unfair_lock_s **)(v28 + 16);
  swift_retain();
  os_unfair_lock_lock(v29);
  uint64_t v30 = (uint64_t *)(v27 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  uint64_t v31 = *v30;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_190CDA6B4(a2, v31);
  swift_release();
  swift_bridgeObjectRelease();
  if (v32)
  {
    swift_beginAccess();
    *(void *)(v32 + 32) = a1;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
  swift_release();
  uint64_t result = sub_190D26D2C();
  if (result)
  {
    uint64_t v34 = (void *)result;
    id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInteger_, a1);
    uint64_t v36 = (void *)sub_190D41628();
    objc_msgSend(v34, sel_setVisibility_forSession_, v35, v36);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ControlsClient.setTaskPriority(_:forSession:)(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_190D41858();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_190D41898();
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *a1;
  sub_190D416E8();
  unint64_t v25 = (void *)type metadata accessor for ControlSessionKey();
  uint64_t v26 = sub_190D2BAA8(&qword_1E92AA488, (void (*)(uint64_t))type metadata accessor for ControlSessionKey);
  aBlock[0] = a2;
  swift_retain();
  uint64_t v13 = sub_190D416D8();
  unint64_t v15 = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  uint64_t v20 = *(void *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v12;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = v3;
  *(void *)(v16 + 40) = v13;
  *(void *)(v16 + 48) = v15;
  uint64_t v26 = (uint64_t)sub_190D29BC8;
  uint64_t v27 = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  unint64_t v25 = &block_descriptor_34;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v18 = v3;
  sub_190CEA33C(v13, v15);
  sub_190D41868();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v11, v8, v17);
  _Block_release(v17);
  sub_190CD55F0(v13, v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  return swift_release();
}

void sub_190D1EFA4(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_190D41778();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E92B30C0);
  swift_retain_n();
  uint64_t v7 = sub_190D41758();
  os_log_type_t v8 = sub_190D41D18();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v27[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = 0xD000000000000019;
    unint64_t v12 = 0x8000000190D5DBF0;
    unsigned __int8 v26 = a1;
    switch(a1)
    {
      case 1u:
        uint64_t v11 = 0xD000000000000014;
        unint64_t v12 = 0x8000000190D5DBB0;
        break;
      case 2u:
        uint64_t v13 = "foregroundOpportunistic";
        goto LABEL_9;
      case 3u:
        break;
      default:
        uint64_t v13 = "backgroundOpportunistic";
LABEL_9:
        unint64_t v12 = (unint64_t)(v13 - 32) | 0x8000000000000000;
        uint64_t v11 = 0xD000000000000017;
        break;
    }
    sub_190CCB3A8(v11, v12, v27);
    sub_190D41E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    swift_retain();
    unint64_t v14 = sub_190D03D6C();
    unint64_t v16 = v15;
    swift_release();
    sub_190CCB3A8((uint64_t)v14, v16, v27);
    sub_190D41E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v7, v8, "Set widget task priority %{public}s for session: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v10, -1, -1);
    MEMORY[0x192FD7910](v9, -1, -1);

    a1 = v26;
  }
  else
  {

    swift_release_n();
  }
  uint64_t v17 = *(void *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  uint64_t v18 = *(os_unfair_lock_s **)(v17 + 16);
  swift_retain();
  os_unfair_lock_lock(v18);
  uint64_t v19 = (uint64_t *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  uint64_t v20 = *v19;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_190CDA6B4(a2, v20);
  swift_release();
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_beginAccess();
    *(unsigned char *)(v21 + 24) = a1;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
  swift_release();
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, a1);
  uint64_t v23 = sub_190D26D2C();
  if (v23)
  {
    unint64_t v24 = (void *)v23;
    unint64_t v25 = (void *)sub_190D41628();
    objc_msgSend(v24, sel_setTaskPriority_forSession_, v22, v25);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t ControlsClient.setEnvironmentModifiers(_:forSession:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a1;
  unint64_t v24 = a2;
  uint64_t v6 = sub_190D41858();
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_190D41898();
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190D416E8();
  uint64_t v28 = (void *)type metadata accessor for ControlSessionKey();
  uint64_t v29 = sub_190D2BAA8(&qword_1E92AA488, (void (*)(uint64_t))type metadata accessor for ControlSessionKey);
  aBlock[0] = a3;
  swift_retain();
  uint64_t v12 = sub_190D416D8();
  unint64_t v14 = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  unint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  v15[3] = v3;
  uint64_t v22 = v9;
  uint64_t v17 = v23;
  unint64_t v16 = v24;
  v15[4] = v23;
  v15[5] = v16;
  v15[6] = v12;
  v15[7] = v14;
  uint64_t v29 = (uint64_t)sub_190D29C28;
  uint64_t v30 = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  uint64_t v28 = &block_descriptor_40;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  id v19 = v4;
  sub_190CEA33C(v17, v16);
  sub_190CEA33C(v12, v14);
  sub_190D41868();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v11, v8, v18);
  _Block_release(v18);
  sub_190CD55F0(v12, v14);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v22);
  return swift_release();
}

uint64_t sub_190D1F8A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_190D41778();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E92B30C0);
  swift_retain_n();
  uint64_t v7 = sub_190D41758();
  os_log_type_t v8 = sub_190D41D18();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v27[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_retain();
    uint64_t v11 = sub_190D03D6C();
    unint64_t v13 = v12;
    swift_release();
    sub_190CCB3A8((uint64_t)v11, v13, v27);
    sub_190D41E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v7, v8, "Set environment modifiers for session: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v10, -1, -1);
    MEMORY[0x192FD7910](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  unint64_t v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  unint64_t v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_190CDA6B4(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_beginAccess();
    uint64_t v19 = *(void *)(v18 + 40);
    unint64_t v20 = *(void *)(v18 + 48);
    *(void *)(v18 + 40) = a3;
    *(void *)(v18 + 48) = a4;
    sub_190CEA33C(a3, a4);
    sub_190CEA394(v19, v20);
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  uint64_t result = sub_190D26D2C();
  if (result)
  {
    uint64_t v22 = (void *)result;
    uint64_t v23 = (void *)sub_190D41628();
    unint64_t v24 = (void *)sub_190D41628();
    objc_msgSend(v22, sel_setEnvironmentModifiers_forSession_, v23, v24);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190D1FBB4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_190D1FBD8, 0, 0);
}

uint64_t sub_190D1FBD8()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v3;
  void v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_190D1FCD4;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_190D1FCD4()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D1FE08;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D1FDF0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D1FDF0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190D1FE08()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_190D1FE6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v28[1] = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_190D41778();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92B30C0);
  uint64_t v11 = sub_190D41758();
  os_log_type_t v12 = sub_190D41D18();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    v28[0] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v14 = a4;
    unint64_t v15 = v13;
    *(_WORD *)unint64_t v13 = 0;
    _os_log_impl(&dword_190C6F000, v11, v12, "xpc: setControlState", v13, 2u);
    unint64_t v16 = v15;
    a4 = v14;
    uint64_t v9 = (char *)v28[0];
    MEMORY[0x192FD7910](v16, -1, -1);
  }

  uint64_t v17 = sub_190D26D2C();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    uint64_t v19 = (void *)sub_190D41628();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
    unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v6);
    aBlock[4] = sub_190D2C8D8;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D3A86C;
    void aBlock[3] = &block_descriptor_326;
    uint64_t v22 = _Block_copy(aBlock);
    id v23 = a1;
    swift_release();
    objc_msgSend(v18, sel_setControlState_completion_, v19, v22);
    _Block_release(v22);

    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v25 = sub_190D41758();
    os_log_type_t v26 = sub_190D41D18();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_190C6F000, v25, v26, "xpc error: setControlState - unable to obtain the remote target", v27, 2u);
      MEMORY[0x192FD7910](v27, -1, -1);
    }

    aBlock[0] = objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t sub_190D201F0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_190D20214, 0, 0);
}

uint64_t sub_190D20214()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v3;
  void v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_190D20310;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_190D20310()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D2CC64;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D2CC68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D2042C(uint64_t a1, char *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a7;
  unint64_t v28 = a4;
  uint64_t v29 = a6;
  uint64_t v32 = sub_190D41858();
  uint64_t v35 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_190D41898();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = a2;
  *((void *)v20 + 3) = a3;
  uint64_t v21 = a3;
  unint64_t v22 = v28;
  *((void *)v20 + 4) = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v20[v19], v18, v15);
  aBlock[4] = v29;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = v31;
  id v23 = _Block_copy(aBlock);
  unint64_t v24 = a2;
  sub_190CEA33C(v21, v22);
  sub_190D41868();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  uint64_t v25 = v32;
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v11, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  return swift_release();
}

uint64_t sub_190D207D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v28[1] = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_190D41778();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92B30C0);
  uint64_t v11 = sub_190D41758();
  os_log_type_t v12 = sub_190D41D18();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v28[0] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v14 = a4;
    uint64_t v15 = v13;
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_190C6F000, v11, v12, "xpc: performControlAction", v13, 2u);
    uint64_t v16 = v15;
    a4 = v14;
    uint64_t v9 = (char *)v28[0];
    MEMORY[0x192FD7910](v16, -1, -1);
  }

  uint64_t v17 = sub_190D26D2C();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    unint64_t v19 = (void *)sub_190D41628();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
    unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v6);
    aBlock[4] = sub_190D2C664;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D3A86C;
    void aBlock[3] = &block_descriptor_308;
    unint64_t v22 = _Block_copy(aBlock);
    id v23 = a1;
    swift_release();
    objc_msgSend(v18, sel_performControlAction_completion_, v19, v22);
    _Block_release(v22);

    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v25 = sub_190D41758();
    os_log_type_t v26 = sub_190D41D18();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_190C6F000, v25, v26, "xpc error: performControlAction - unable to obtain the remote target", v27, 2u);
      MEMORY[0x192FD7910](v27, -1, -1);
    }

    aBlock[0] = objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t sub_190D20B58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a6;
  v23[1] = a4;
  uint64_t v24 = a5;
  v23[0] = a3;
  uint64_t v8 = sub_190D41858();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_190D41898();
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
  (*(void (**)(char *, void, uint64_t))(v15 + 16))(v17, v23[0], v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, v17, v14);
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = v26;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = a1;
  sub_190D41868();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v13, v10, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  return swift_release();
}

Swift::Void __swiftcall ControlsClient.reloadControls(forExtension:kind:reason:)(Swift::String forExtension, Swift::String_optional kind, Swift::String reason)
{
  object = reason._object;
  uint64_t countAndFlagsBits = reason._countAndFlagsBits;
  uint64_t v5 = kind.value._object;
  uint64_t v6 = kind.value._countAndFlagsBits;
  uint64_t v7 = forExtension._object;
  uint64_t v8 = forExtension._countAndFlagsBits;
  uint64_t v9 = sub_190D41858();
  uint64_t v23 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_190D41898();
  uint64_t v12 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v3;
  v15[3] = v8;
  v15[4] = v7;
  v15[5] = v6;
  uint64_t v16 = countAndFlagsBits;
  v15[6] = v5;
  v15[7] = v16;
  unsigned char v15[8] = object;
  aBlock[4] = sub_190D29D10;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = &block_descriptor_50_0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v18 = v3;
  swift_bridgeObjectRetain();
  sub_190D41868();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
}

void sub_190D211EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_190D41778();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E92B30C0);
  uint64_t v7 = sub_190D41758();
  os_log_type_t v8 = sub_190D41D18();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_190C6F000, v7, v8, "xpc: reloadControls(forExtension:kind:reason)", v9, 2u);
    MEMORY[0x192FD7910](v9, -1, -1);
  }

  uint64_t v10 = sub_190D26D2C();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = (void *)sub_190D41948();
    if (a5) {
      a5 = (void *)sub_190D41948();
    }
    oslog = sub_190D41948();
    objc_msgSend(v11, sel_reloadControlsForExtension_kind_reason_, v12, a5);
    swift_unknownObjectRelease();
  }
  else
  {
    oslog = sub_190D41758();
    os_log_type_t v13 = sub_190D41D18();
    if (os_log_type_enabled(oslog, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_190C6F000, oslog, v13, "xpc error: reloadControls(forExtension:kind:reason) - unable to obtain the remote target", v14, 2u);
      MEMORY[0x192FD7910](v14, -1, -1);
    }
  }
}

uint64_t ControlsClient.updateControlHostConfiguration(host:)(uint64_t *a1)
{
  return sub_190D21704(a1, (uint64_t)&unk_1EE09FCA0, (uint64_t)sub_190D29D28, (uint64_t)&block_descriptor_56);
}

void sub_190D21458(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v9 = a5 & 1;
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_190D41778();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92B30C0);
  uint64_t v11 = sub_190D41758();
  os_log_type_t v12 = sub_190D41D18();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v13 = 0;
    _os_log_impl(&dword_190C6F000, v11, v12, "xpc: updateControlHostConfiguration", v13, 2u);
    MEMORY[0x192FD7910](v13, -1, -1);
  }

  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts);
  swift_beginAccess();
  id v15 = a4;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v14;
  uint64_t *v14 = 0x8000000000000000;
  sub_190D0A294(a2, a3, (uint64_t)a4, v9, a2, a3, isUniquelyReferenced_nonNull_native);
  uint64_t *v14 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v17 = sub_190D26D2C();
  if (v17)
  {
    unint64_t v18 = (void *)v17;
    uint64_t v19 = (void *)sub_190D41948();
    unint64_t v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v9);
    objc_msgSend(v18, sel_updateControlHost_configuration_activationState_, v19, v15, v20);
    swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v20 = sub_190D41758();
    os_log_type_t v21 = sub_190D41D18();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_190C6F000, v20, v21, "xpc error: updateControlHostConfiguration - unable to obtain the remote target", v22, 2u);
      MEMORY[0x192FD7910](v22, -1, -1);
    }
  }
}

uint64_t ControlsClient.updateControlHostActivationState(host:)(uint64_t *a1)
{
  return sub_190D21704(a1, (uint64_t)&unk_1EE09FCF0, (uint64_t)sub_190D29D44, (uint64_t)&block_descriptor_62_0);
}

uint64_t sub_190D21704(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v6 = sub_190D41858();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_190D41898();
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = (void *)a1[2];
  LOBYTE(a1) = *((unsigned char *)a1 + 24);
  uint64_t v22 = *(void *)&v4[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  *(void *)(v15 + 24) = v12;
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v14;
  *(unsigned char *)(v15 + 48) = (_BYTE)a1;
  aBlock[4] = v20;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = v21;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v14;
  unint64_t v18 = v4;
  swift_bridgeObjectRetain();
  sub_190D41868();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v11, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  return swift_release();
}

void sub_190D219E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v9 = a5 & 1;
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_190D41778();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92B30C0);
  uint64_t v11 = sub_190D41758();
  os_log_type_t v12 = sub_190D41D18();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_190C6F000, v11, v12, "xpc: updateControlHostActivationState", v13, 2u);
    MEMORY[0x192FD7910](v13, -1, -1);
  }

  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts);
  swift_beginAccess();
  id v15 = a4;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v14;
  uint64_t *v14 = 0x8000000000000000;
  sub_190D0A294(a2, a3, (uint64_t)a4, v9, a2, a3, isUniquelyReferenced_nonNull_native);
  uint64_t *v14 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v17 = sub_190D26D2C();
  if (v17)
  {
    unint64_t v18 = (void *)v17;
    uint64_t v19 = (void *)sub_190D41948();
    uint64_t v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, v9);
    objc_msgSend(v18, sel_updateControlHost_activationState_, v19, v20);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v20 = sub_190D41758();
    os_log_type_t v21 = sub_190D41D18();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_190C6F000, v20, v21, "xpc error: updateControlHostActivationState - unable to obtain the remote target", v22, 2u);
      MEMORY[0x192FD7910](v22, -1, -1);
    }
  }
}

uint64_t ControlsClient.invalidateControlHost(host:)(uint64_t *a1)
{
  return sub_190D21704(a1, (uint64_t)&unk_1EE09FD18, (uint64_t)sub_190D29DA8, (uint64_t)&block_descriptor_68);
}

void sub_190D21C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_190D41778();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E92B30C0);
  uint64_t v6 = sub_190D41758();
  os_log_type_t v7 = sub_190D41D18();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl(&dword_190C6F000, v6, v7, "xpc: invalidateControlHost", v8, 2u);
    MEMORY[0x192FD7910](v8, -1, -1);
  }

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_190D2A0E8(a2, a3, (uint64_t)v14);
  swift_bridgeObjectRelease();
  sub_190D2C5F8(v14[0], v14[1], (void *)v14[2]);
  swift_endAccess();
  uint64_t v9 = sub_190D26D2C();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = sub_190D41948();
    objc_msgSend(v10, sel_invalidateControlHost_, v11);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = sub_190D41758();
    os_log_type_t v12 = sub_190D41D18();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_190C6F000, v11, v12, "xpc error: invalidateControlHost - unable to obtain the remote target", v13, 2u);
      MEMORY[0x192FD7910](v13, -1, -1);
    }
  }
}

uint64_t ControlsClient.allControlConfigurationsByHost()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_190D21EAC, 0, 0);
}

uint64_t sub_190D21EAC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC3F8);
  *uint64_t v3 = v0;
  v3[1] = sub_190D21FB0;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000020, 0x8000000190D5E6F0, sub_190D29DD8, v2, v4);
}

uint64_t sub_190D21FB0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D220E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D220CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D220CC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_190D220E8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_190D2214C(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_190D41858();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_190D41898();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  v18[1] = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_190D2C320;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = &block_descriptor_284;
  id v15 = _Block_copy(aBlock);
  uint64_t v16 = a2;
  sub_190D41868();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  return swift_release();
}

uint64_t sub_190D224DC(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_190D41778();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E92B30C0);
  uint64_t v8 = sub_190D41758();
  os_log_type_t v9 = sub_190D41D18();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_190C6F000, v8, v9, "xpc: allControlConfigurationsByHost", v10, 2u);
    MEMORY[0x192FD7910](v10, -1, -1);
  }

  uint64_t v11 = sub_190D26D2C();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_190D2C394;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D22CBC;
    void aBlock[3] = &block_descriptor_290;
    id v15 = _Block_copy(aBlock);
    id v16 = a1;
    swift_release();
    objc_msgSend(v12, sel_allControlConfigurationsByHostWithCompletion_, v15);
    _Block_release(v15);
    return swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v18 = sub_190D41758();
    os_log_type_t v19 = sub_190D41D18();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_190C6F000, v18, v19, "xpc error: allControlConfigurationsByHost - unable to obtain the remote target", v20, 2u);
      MEMORY[0x192FD7910](v20, -1, -1);
    }

    objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t sub_190D22810(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v23[0] = a2;
  uint64_t v7 = sub_190D41858();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  os_log_type_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_190D41898();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  v23[1] = *(void *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  unint64_t v18 = (void *)v23[0];
  *(void *)(v17 + ((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23[0];
  aBlock[4] = sub_190D2C538;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = &block_descriptor_296;
  os_log_type_t v19 = _Block_copy(aBlock);
  id v20 = a1;
  id v21 = v18;
  sub_190D41868();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v12, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  return swift_release();
}

void sub_190D22BC4(void *a1, int a2, id a3)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = objc_msgSend(v3, sel_configurationsByHost);
    type metadata accessor for CHSControlConfiguration(0);
    sub_190D418C8();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
    sub_190D41C68();
  }
  else if (a3)
  {
    id v5 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
    sub_190D41C58();
  }
  else
  {
    sub_190CD1408(MEMORY[0x1E4FBC860]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
    sub_190D41C68();
  }
}

uint64_t ControlsClient.fetchControlDescriptors(forExtensionBundleIdentifier:userInitiated:reason:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a4;
  *(unsigned char *)(v6 + 88) = a3;
  *(void *)(v6 + 24) = a1;
  return MEMORY[0x1F4188298](sub_190D22CEC, 0, 0);
}

uint64_t sub_190D22CEC()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v6;
  *(void *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 40) = v5;
  *(void *)(v7 + 48) = v3;
  *(void *)(v7 + 56) = v2;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC408);
  *uint64_t v8 = v0;
  v8[1] = sub_190D22E18;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000004BLL, 0x8000000190D5E720, sub_190D29DE0, v7, v9);
}

uint64_t sub_190D22E18()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D22F34;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D220CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D22F34()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_190D22F98(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  int v28 = a5;
  uint64_t v27 = a3;
  uint64_t v32 = sub_190D41858();
  uint64_t v35 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_190D41898();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v27;
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = v21;
  *(void *)(v20 + 32) = a4;
  *(unsigned char *)(v20 + 40) = v28;
  uint64_t v22 = v30;
  *(void *)(v20 + 48) = v29;
  *(void *)(v20 + 56) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v20 + v19, v18, v15);
  aBlock[4] = sub_190D2C168;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = &block_descriptor_266;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190D41868();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  uint64_t v25 = v32;
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v14, v11, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  return swift_release();
}

void sub_190D23364(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a7;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
  uint64_t v9 = *(void *)(v36 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_190D41778();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E92B30C0);
  uint64_t v13 = sub_190D41758();
  os_log_type_t v14 = sub_190D41D18();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = v9;
    char v16 = a4;
    uint64_t v17 = v15;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_190C6F000, v13, v14, "xpc: fetchControlDescriptors", v15, 2u);
    unint64_t v18 = v17;
    a4 = v16;
    uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v9 = v33;
    MEMORY[0x192FD7910](v18, -1, -1);
  }

  uint64_t v19 = sub_190D26D2C();
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    uint64_t v33 = sub_190D41948();
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, a4 & 1);
    uint64_t v22 = (void *)sub_190D41948();
    uint64_t v23 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v37, v36);
    unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25 + v24, v11, v23);
    aBlock[4] = sub_190D2C1E8;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D23B80;
    void aBlock[3] = &block_descriptor_272;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = a1;
    swift_release();
    int v28 = (void *)v33;
    objc_msgSend(v20, sel_fetchControlDescriptorsForExtensionBundleIdentifier_userInitiated_reason_completion_, v33, v21, v22, v26);
    _Block_release(v26);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v29 = sub_190D41758();
    os_log_type_t v30 = sub_190D41D18();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_190C6F000, v29, v30, "xpc error: fetchControlDescriptors - unable to obtain the remote target", v31, 2u);
      MEMORY[0x192FD7910](v31, -1, -1);
    }

    aBlock[0] = objc_msgSend(self, sel_serverUnavailable);
    sub_190D41C58();
  }
}

uint64_t sub_190D23734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[0] = a2;
  uint64_t v7 = sub_190D41858();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_190D41898();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  v22[1] = *(void *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  unint64_t v18 = (void *)v22[0];
  *(void *)(v17 + ((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22[0];
  aBlock[4] = sub_190D2C2F4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = &block_descriptor_278;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v20 = v18;
  sub_190D41868();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v12, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

uint64_t sub_190D23AEC(uint64_t a1, int a2, id a3)
{
  if (a1)
  {
    sub_190CCF964(a1);
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
    return sub_190D41C68();
  }
  if (!a3) {
    goto LABEL_3;
  }
  id v4 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
  return sub_190D41C58();
}

uint64_t sub_190D23B80(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_190D41BE8();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ControlsClient.controlDescriptor(matching:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_190D23C3C, 0, 0);
}

uint64_t sub_190D23C3C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC418);
  *uint64_t v2 = v0;
  v2[1] = sub_190D23D44;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000001CLL, 0x8000000190D5E770, sub_190D29DE4, v1, v3);
}

uint64_t sub_190D23D44()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D1FE08;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D220CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D23E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC560);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_190D41778();
  __swift_project_value_buffer(v9, (uint64_t)qword_1E92B30C0);
  uint64_t v10 = sub_190D41758();
  os_log_type_t v11 = sub_190D41D18();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    int v28 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v13 = v5;
    uint64_t v14 = a3;
    uint64_t v15 = a2;
    unint64_t v16 = v12;
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_190C6F000, v10, v11, "xpc: controlDescriptor(matching:)", v12, 2u);
    uint64_t v17 = v16;
    a2 = v15;
    a3 = v14;
    uint64_t v5 = v13;
    uint64_t v8 = v28;
    MEMORY[0x192FD7910](v17, -1, -1);
  }

  uint64_t v18 = sub_190D26D2C();
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, v8, v5);
    aBlock[4] = sub_190D2C004;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D22CBC;
    void aBlock[3] = &block_descriptor_260;
    uint64_t v22 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v19, sel_controlDescriptorMatching_completion_, a2, v22);
    _Block_release(v22);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v24 = sub_190D41758();
    os_log_type_t v25 = sub_190D41D18();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_190C6F000, v24, v25, "xpc error: controlDescriptor(matching:) - unable to obtain the remote target", v26, 2u);
      MEMORY[0x192FD7910](v26, -1, -1);
    }

    aBlock[0] = objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t sub_190D241B8(void *a1, id a2)
{
  if (a1)
  {
    id v2 = a1;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC560);
    return sub_190D41C68();
  }
  if (!a2) {
    goto LABEL_3;
  }
  id v4 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC560);
  return sub_190D41C58();
}

uint64_t ControlsClient.unsubscribeToPushes(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_190D24258, 0, 0);
}

uint64_t sub_190D24258()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_190D24348;
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD000000000000019, 0x8000000190D5E790, sub_190D29E2C, v1, v3 + 8);
}

uint64_t sub_190D24348()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D2CAD4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D2CC68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D24464(uint64_t a1, char *a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a7;
  int v28 = a3;
  uint64_t v29 = a6;
  v27[1] = a5;
  uint64_t v10 = sub_190D41858();
  uint64_t v34 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_190D41898();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v28;
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v21 + v20, v19, v16);
  aBlock[4] = v29;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  void aBlock[3] = v31;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = a2;
  id v25 = v22;
  sub_190D41868();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v15, v12, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
  return swift_release();
}

uint64_t sub_190D247F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = sub_190D26D2C();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_190D2BE48;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D3A86C;
    void aBlock[3] = &block_descriptor_242;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = a1;
    swift_release();
    objc_msgSend(v10, sel_unsubscribeToPushes_completion_, a2, v13);
    _Block_release(v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_190D41778();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E92B30C0);
    uint64_t v17 = sub_190D41758();
    os_log_type_t v18 = sub_190D41D18();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_190C6F000, v17, v18, "xpc error: unsubscribeToPushes - unable to obtain the remote target", v19, 2u);
      MEMORY[0x192FD7910](v19, -1, -1);
    }

    objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t ControlsClient.sendPushToken(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_190D24AD8, 0, 0);
}

uint64_t sub_190D24AD8()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_190D24BC8;
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD000000000000013, 0x8000000190D5E7B0, sub_190D29E74, v1, v3 + 8);
}

uint64_t sub_190D24BC8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D220E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D1FDF0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D24CE4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = sub_190D26D2C();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_190D2BD88;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D3A86C;
    void aBlock[3] = &block_descriptor_224;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = a1;
    swift_release();
    objc_msgSend(v10, sel_sendPushToken_completion_, a2, v13);
    _Block_release(v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_190D41778();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E92B30C0);
    uint64_t v17 = sub_190D41758();
    os_log_type_t v18 = sub_190D41D18();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_190C6F000, v17, v18, "xpc error: sendPushToken - unable to obtain the remote target", v19, 2u);
      MEMORY[0x192FD7910](v19, -1, -1);
    }

    objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t ControlsClient.sendPushUpdate(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_190D24FC8, 0, 0);
}

uint64_t sub_190D24FC8()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_190D24348;
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD000000000000014, 0x8000000190D5E7D0, sub_190D29EBC, v1, v3 + 8);
}

uint64_t sub_190D250B8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = sub_190D26D2C();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_190D2BCAC;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_190D3A86C;
    void aBlock[3] = &block_descriptor_206;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = a1;
    swift_release();
    objc_msgSend(v10, sel_sendPushUpdate_completion_, a2, v13);
    _Block_release(v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_190D41778();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E92B30C0);
    uint64_t v17 = sub_190D41758();
    os_log_type_t v18 = sub_190D41D18();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_190C6F000, v17, v18, "xpc error: sendPushUpdate - unable to obtain the remote target", v19, 2u);
      MEMORY[0x192FD7910](v19, -1, -1);
    }

    objc_msgSend(self, sel_serverUnavailable);
    return sub_190D41C58();
  }
}

uint64_t sub_190D2537C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
    return sub_190D41C58();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
    return sub_190D41C68();
  }
}

uint64_t sub_190D253E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_190D2BB60;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_190CEF1D0(v4);
}

uint64_t sub_190D25480(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_190D2BB28;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_190CEF1D0(v1);
  sub_190D2B294((uint64_t)v4, v3);
  return sub_190CDAA9C((uint64_t)v4);
}

uint64_t sub_190D25528()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_190CEF1D0(*v1);
  return v2;
}

uint64_t sub_190D25584(uint64_t a1, uint64_t a2)
{
  sub_190D2B294(a1, a2);
  return sub_190CDAA9C(a1);
}

void (*sub_190D255CC(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_190D25638;
}

void sub_190D25638(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void (**)(uint64_t, unint64_t))(v4 + v3[4]);
    if (v5)
    {
      uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
      uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      sub_190CEF1D0((uint64_t)v5);
      os_unfair_lock_lock(v7);
      uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
      unint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData + 8);
      uint64_t v10 = *(os_unfair_lock_s **)(v6 + 16);
      sub_190CEA328(v8, v9);
      os_unfair_lock_unlock(v10);
      swift_release();
      if (v9 >> 60 == 15)
      {
        sub_190CDAA9C((uint64_t)v5);
      }
      else
      {
        v5(v8, v9);
        sub_190CDAA9C((uint64_t)v5);
        sub_190CEA394(v8, v9);
      }
    }
  }
  free(v3);
}

void sub_190D25748(uint64_t a1, char *a2)
{
  BSDispatchQueueAssert();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  swift_retain();
  uint64_t v7 = swift_retain();
  sub_190D2A518(v7, v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_190D0A0D4, (uint64_t *)&unk_1E92AA4B0, (void (*)(void))type metadata accessor for ControlSessionSubscriptionRequest, (void (*)(unint64_t, uint64_t))sub_190CDFB84);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  sub_190D416E8();
  int v28 = (void *)type metadata accessor for ControlSessionSubscriptionRequest();
  uint64_t v29 = (uint64_t (*)())sub_190D2BAA8(&qword_1E92AA490, (void (*)(uint64_t))type metadata accessor for ControlSessionSubscriptionRequest);
  aBlock[0] = a1;
  swift_retain();
  uint64_t v8 = sub_190D416D8();
  unint64_t v10 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_190D41778();
  __swift_project_value_buffer(v11, (uint64_t)qword_1E92B30C0);
  swift_retain_n();
  uint64_t v12 = sub_190D41758();
  os_log_type_t v13 = sub_190D41D48();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = v8;
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = v15;
    *(_DWORD *)id v14 = 136315138;
    swift_retain();
    uint64_t v16 = sub_190D03D6C();
    unint64_t v18 = v17;
    swift_release();
    sub_190CCB3A8((uint64_t)v16, v18, aBlock);
    sub_190D41E48();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_190C6F000, v12, v13, "Subscribing to session: %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v15;
    uint64_t v8 = v26;
    MEMORY[0x192FD7910](v19, -1, -1);
    MEMORY[0x192FD7910](v14, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v20 = sub_190D26D2C();
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    uint64_t v22 = (void *)sub_190D41628();
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = a2;
    void v23[3] = v4;
    v23[4] = a1;
    v23[5] = nullsub_1;
    v23[6] = 0;
    uint64_t v29 = sub_190D2BAA4;
    uint64_t v30 = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_190D26C80;
    int v28 = &block_descriptor_345;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v25 = a2;
    swift_release();
    objc_msgSend(v21, sel_subscribeToSessionWithRequest_completion_, v22, v24);
    sub_190CD55F0(v8, v10);
    swift_unknownObjectRelease();
    _Block_release(v24);
  }
  else
  {
    sub_190CD55F0(v8, v10);
  }
}

void sub_190D25BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  BSDispatchQueueAssert();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
  unint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  swift_retain();
  uint64_t v11 = swift_retain();
  sub_190D2A518(v11, v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_190D0A0D4, (uint64_t *)&unk_1E92AA4B0, (void (*)(void))type metadata accessor for ControlSessionSubscriptionRequest, (void (*)(unint64_t, uint64_t))sub_190CDFB84);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  sub_190D416E8();
  uint64_t v36 = (void *)type metadata accessor for ControlSessionSubscriptionRequest();
  uint64_t v37 = (uint64_t (*)())sub_190D2BAA8(&qword_1E92AA490, (void (*)(uint64_t))type metadata accessor for ControlSessionSubscriptionRequest);
  aBlock[0] = a1;
  swift_retain();
  uint64_t v12 = sub_190D416D8();
  unint64_t v14 = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_190D41778();
  __swift_project_value_buffer(v15, (uint64_t)qword_1E92B30C0);
  swift_retain_n();
  uint64_t v16 = sub_190D41758();
  os_log_type_t v17 = sub_190D41D48();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v34 = a3;
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = v12;
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = v19;
    *(_DWORD *)unint64_t v18 = 136315138;
    swift_retain();
    uint64_t v20 = sub_190D03D6C();
    uint64_t v33 = a2;
    unint64_t v22 = v21;
    swift_release();
    sub_190CCB3A8((uint64_t)v20, v22, aBlock);
    sub_190D41E48();
    a2 = v33;
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_190C6F000, v16, v17, "Subscribing to session: %s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v19;
    uint64_t v12 = v32;
    MEMORY[0x192FD7910](v23, -1, -1);
    uint64_t v24 = v18;
    a3 = v34;
    MEMORY[0x192FD7910](v24, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v25 = sub_190D26D2C();
  if (v25)
  {
    uint64_t v26 = (void *)v25;
    uint64_t v27 = (void *)sub_190D41628();
    int v28 = (void *)swift_allocObject();
    void v28[2] = v4;
    v28[3] = v8;
    v28[4] = a1;
    v28[5] = a2;
    v28[6] = a3;
    uint64_t v37 = sub_190D2BAA4;
    int v38 = v28;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_190D26C80;
    uint64_t v36 = &block_descriptor_152;
    uint64_t v29 = v12;
    uint64_t v30 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v31 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v26, sel_subscribeToSessionWithRequest_completion_, v27, v30);
    sub_190CD55F0(v29, v14);
    swift_unknownObjectRelease();
    _Block_release(v30);
  }
  else
  {
    sub_190CD55F0(v12, v14);
  }
}

void sub_190D260D8(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void *))
{
  BSDispatchQueueAssertNot();
  if (a2 >> 60 == 15)
  {
    if (!a3)
    {
      if (qword_1E92AA720 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_190D41778();
      __swift_project_value_buffer(v13, (uint64_t)qword_1E92B30C0);
      swift_retain_n();
      unint64_t v14 = sub_190D41758();
      os_log_type_t v15 = sub_190D41D28();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        v71[0] = v17;
        *(_DWORD *)uint64_t v16 = 136446210;
        swift_retain();
        unint64_t v18 = sub_190D03D6C();
        unint64_t v20 = v19;
        swift_release();
        v70[0] = sub_190CCB3A8((uint64_t)v18, v20, v71);
        sub_190D41E48();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_190C6F000, v14, v15, "Error subscribing to session %{public}s: unknown response", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v17, -1, -1);
        MEMORY[0x192FD7910](v16, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      a7(0, 0);
      return;
    }
    goto LABEL_8;
  }
  if (a3)
  {
LABEL_8:
    id v21 = a3;
    id v22 = a3;
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_190D41778();
    __swift_project_value_buffer(v23, (uint64_t)qword_1E92B30C0);
    swift_retain();
    id v24 = a3;
    swift_retain();
    id v25 = a3;
    uint64_t v26 = sub_190D41758();
    os_log_type_t v27 = sub_190D41D28();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v71[0] = v30;
      *(_DWORD *)uint64_t v28 = 136446466;
      swift_retain();
      id v31 = sub_190D03D6C();
      unint64_t v33 = v32;
      swift_release();
      sub_190CCB3A8((uint64_t)v31, v33, v71);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v28 + 12) = 2112;
      id v34 = a3;
      v70[0] = _swift_stdlib_bridgeErrorToNSError();
      sub_190D41E48();
      *uint64_t v29 = v70[0];

      _os_log_impl(&dword_190C6F000, v26, v27, "Error subscribing to session %{public}s: %@", (uint8_t *)v28, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v30, -1, -1);
      MEMORY[0x192FD7910](v28, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    id v35 = a3;
    a7(0, a3);

    return;
  }
  sub_190D416E8();
  type metadata accessor for ControlSessionSubscriptionResponse();
  sub_190CEA33C(a1, a2);
  sub_190D2BAA8(&qword_1E92AA498, (void (*)(uint64_t))type metadata accessor for ControlSessionSubscriptionResponse);
  sub_190D416C8();
  swift_beginAccess();
  uint64_t v36 = *(void *)(v71[0] + 16);
  if (v36)
  {
    swift_retain_n();
    SandboxExtension.consume()();
    if (v37)
    {
      swift_release();
      int v38 = &OBJC_IVAR___CHSControlActionMetadata__intentType;
      if (qword_1E92AA720 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_190D41778();
      __swift_project_value_buffer(v39, (uint64_t)qword_1E92B30C0);
      swift_retain();
      id v40 = v37;
      swift_retain();
      id v41 = v37;
      uint64_t v42 = sub_190D41758();
      os_log_type_t type = sub_190D41D28();
      if (os_log_type_enabled(v42, type))
      {
        uint64_t v43 = swift_slowAlloc();
        id v64 = (void *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        v70[0] = v65;
        *(_DWORD *)uint64_t v43 = 136446466;
        swift_retain();
        log = v42;
        uint64_t v44 = sub_190D03D6C();
        unint64_t v46 = v45;
        swift_release();
        sub_190CCB3A8((uint64_t)v44, v46, v70);
        sub_190D41E48();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v43 + 12) = 2114;
        id v47 = v37;
        uint64_t v69 = _swift_stdlib_bridgeErrorToNSError();
        sub_190D41E48();
        *id v64 = v69;

        _os_log_impl(&dword_190C6F000, log, type, "[%{public}s] Failed consuming sandbox extension: %{public}@.", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v64, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v65, -1, -1);
        uint64_t v48 = v43;
        int v38 = &OBJC_IVAR___CHSControlActionMetadata__intentType;
        MEMORY[0x192FD7910](v48, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      goto LABEL_29;
    }
    swift_release();
  }
  uint64_t v49 = *(void *)(a4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  long long v50 = *(os_unfair_lock_s **)(v49 + 16);
  swift_retain();
  os_unfair_lock_lock(v50);
  swift_beginAccess();
  if (v36)
  {
    swift_retain();
    swift_retain();
    sub_190D2A518(v36, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_190D0A0F4, &qword_1E92AA4C0, (void (*)(void))type metadata accessor for SandboxExtension, (void (*)(unint64_t, uint64_t))sub_190CDFB90);
  }
  else
  {
    uint64_t v51 = swift_retain();
    sub_190D29F34(v51, (void (*)(void))sub_190D0B238, &qword_1E92AA4C0, (void (*)(void))type metadata accessor for SandboxExtension, (void (*)(unint64_t, uint64_t))sub_190CDFB90);
    swift_release();
  }
  int v38 = &OBJC_IVAR___CHSControlActionMetadata__intentType;
  swift_release();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 16));
  swift_release();
LABEL_29:
  uint64_t v52 = *(void *)(a6 + 16);
  swift_beginAccess();
  id v53 = objc_msgSend(*(id *)(v52 + 32), sel_contentType);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6B0);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_190D4B930;
  *(void *)(v54 + 32) = objc_msgSend(*(id *)(v52 + 32), sel_control);
  uint64_t v69 = v54;
  sub_190D41C08();
  if (v53 == (id)1) {
    sub_190D28364(v54);
  }
  else {
    sub_190D2833C(v54);
  }
  swift_bridgeObjectRelease();
  if (*((void *)v38 + 228) != -1) {
    swift_once();
  }
  uint64_t v55 = sub_190D41778();
  __swift_project_value_buffer(v55, (uint64_t)qword_1E92B30C0);
  swift_retain_n();
  unint64_t v56 = sub_190D41758();
  os_log_type_t v57 = sub_190D41D18();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v69 = v67;
    *(_DWORD *)uint64_t v58 = 136446210;
    swift_retain();
    uint64_t v59 = sub_190D03D6C();
    unint64_t v61 = v60;
    swift_release();
    sub_190CCB3A8((uint64_t)v59, v61, &v69);
    sub_190D41E48();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_190C6F000, v56, v57, "Successfully subscribed to session: %{public}s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v67, -1, -1);
    MEMORY[0x192FD7910](v58, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v62 = swift_retain();
  a7(v62, 0);
  sub_190CEA394(a1, a2);
  swift_release_n();
  swift_release();
}

uint64_t sub_190D26C80(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_190D41648();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_190CEA394((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_190D26D2C()
{
  BSDispatchQueueAssert();
  BSDispatchQueueAssert();
  sub_190D2700C();
  uint64_t v1 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection);
  if (!v2) {
    goto LABEL_7;
  }
  id v3 = v2;
  if (!objc_msgSend(v3, sel_remoteTarget))
  {
    long long v17 = 0u;
    long long v18 = 0u;
    sub_190CCE544((uint64_t)&v17);
    objc_msgSend(v3, sel_activate);

    uint64_t v4 = *(void **)(v0 + v1);
    if (v4) {
      goto LABEL_4;
    }
LABEL_7:
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_190D41778();
    __swift_project_value_buffer(v6, (uint64_t)qword_1E92B30C0);
    unint64_t v7 = sub_190D41758();
    os_log_type_t v8 = sub_190D41D38();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_190C6F000, v7, v8, "Failed to establish a connection", v9, 2u);
      MEMORY[0x192FD7910](v9, -1, -1);
    }

    return 0;
  }
  sub_190D41E78();
  swift_unknownObjectRelease();

  sub_190CCE544((uint64_t)&v17);
  uint64_t v4 = *(void **)(v0 + v1);
  if (!v4) {
    goto LABEL_7;
  }
LABEL_4:
  id v5 = v4;
  if (objc_msgSend(v5, sel_remoteTarget))
  {
    sub_190D41E78();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_190D2BA38((uint64_t)v16, (uint64_t)&v17);
  if (*((void *)&v18 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA698);
    if (swift_dynamicCast())
    {

      return v15;
    }
  }
  else
  {
    sub_190CCE544((uint64_t)&v17);
  }
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_190D41778();
  __swift_project_value_buffer(v11, (uint64_t)qword_1E92B30C0);
  uint64_t v12 = sub_190D41758();
  os_log_type_t v13 = sub_190D41D38();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v14 = 0;
    _os_log_impl(&dword_190C6F000, v12, v13, "Failed to cast connection to server interface protocol", v14, 2u);
    MEMORY[0x192FD7910](v14, -1, -1);
  }

  return 0;
}

void sub_190D2700C()
{
  BSDispatchQueueAssert();
  uint64_t v1 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection;
  if (*(void *)&v0[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection]) {
    return;
  }
  unint64_t v2 = (unint64_t)"com.apple.chrono";
  id v3 = (void *)sub_190D41948();
  uint64_t v4 = (void *)sub_190D41948();
  long long v17 = objc_msgSend(self, sel_endpointForMachName_service_instance_, v3, v4, 0);

  if (!v17) {
    goto LABEL_7;
  }
  id v5 = objc_msgSend(self, sel_connectionWithEndpoint_, v17);
  if (v5)
  {
    uint64_t v6 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v5;
    id v7 = v5;

    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v0;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_190D2BA10;
    *(void *)(v9 + 24) = v8;
    aBlock[4] = (uint64_t)sub_190CDB1B8;
    unint64_t v19 = (const char *)v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_190D27E70;
    uint64_t aBlock[3] = (uint64_t)&block_descriptor_128;
    unint64_t v10 = _Block_copy(aBlock);
    unint64_t v2 = (unint64_t)v19;
    uint64_t v11 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_configureConnection_, v10);

    _Block_release(v10);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
LABEL_7:
    if (qword_1E92AA720 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_190D41778();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E92B30C0);
    long long v17 = sub_190D41758();
    os_log_type_t v14 = sub_190D41D38();
    if (os_log_type_enabled(v17, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      aBlock[0] = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v20 = sub_190CCB3A8(0xD000000000000018, v2 | 0x8000000000000000, aBlock);
      sub_190D41E48();
      _os_log_impl(&dword_190C6F000, v17, v14, "Unable to get endpoint for mach-service: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v16, -1, -1);
      MEMORY[0x192FD7910](v15, -1, -1);

      return;
    }
  }
}

void sub_190D273B0(void *a1, void *a2)
{
  uint64_t v4 = (void *)sub_190D41948();
  id v5 = objc_msgSend(self, sel_interfaceWithIdentifier_, v4);

  if (qword_1E92AA810 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1E92AA838;
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_protocolForProtocol_, v6);
  objc_msgSend(v5, sel_setClient_, v8);

  if (qword_1E92AA848 != -1) {
    swift_once();
  }
  id v9 = objc_msgSend(v7, sel_protocolForProtocol_, qword_1E92AA840);
  objc_msgSend(v5, sel_setServer_, v9);

  if (qword_1E92AA860 != -1) {
    swift_once();
  }
  objc_msgSend(a1, sel_setServiceQuality_, qword_1E92AA850);
  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  unint64_t v19 = sub_190D27728;
  uint64_t v20 = 0;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  long long v17 = sub_190CDC3C8;
  long long v18 = &block_descriptor_131;
  unint64_t v10 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setActivationHandler_, v10);
  _Block_release(v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  unint64_t v19 = sub_190D2BA28;
  uint64_t v20 = v11;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  long long v17 = sub_190CDC3C8;
  long long v18 = &block_descriptor_137;
  uint64_t v12 = _Block_copy(&v15);
  id v13 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  unint64_t v19 = sub_190D27D74;
  uint64_t v20 = 0;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  long long v17 = sub_190CDC3C8;
  long long v18 = &block_descriptor_140;
  os_log_type_t v14 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setInvalidationHandler_, v14);
  _Block_release(v14);
}

void sub_190D27728(uint64_t a1)
{
}

uint64_t sub_190D27734(uint64_t a1, char *a2)
{
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_190D41778();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E92B30C0);
  uint64_t v4 = sub_190D41758();
  os_log_type_t v5 = sub_190D41D48();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_190C6F000, v4, v5, "Connection Interrupted", v6, 2u);
    MEMORY[0x192FD7910](v6, -1, -1);
  }

  uint64_t v7 = *(void *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
  id v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_190D27860(a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_190D27860(char *a1)
{
  uint64_t v3 = sub_190D41858();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_190D41898();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = &a1[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions];
  uint64_t result = swift_beginAccess();
  if ((*(void *)v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190D41EC8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return result;
    }
  }
  else if (!*(void *)(*(void *)v10 + 16))
  {
    return result;
  }
  uint64_t v24 = v4;
  uint64_t v25 = v1;
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_190D41778();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E92B30C0);
  os_log_type_t v14 = a1;
  uint64_t v15 = sub_190D41758();
  os_log_type_t v16 = sub_190D41D48();
  if (os_log_type_enabled(v15, v16))
  {
    long long v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)long long v17 = 134217984;
    uint64_t v18 = *(void *)v10;
    if ((v18 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_190D41EC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    aBlock[0] = v19;
    sub_190D41E48();

    _os_log_impl(&dword_190C6F000, v15, v16, "Reconnecting because we had %ld subscriptions active.", v17, 0xCu);
    MEMORY[0x192FD7910](v17, -1, -1);
  }
  else
  {
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v14;
  aBlock[4] = sub_190D2BA30;
  uint64_t aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  uint64_t aBlock[3] = &block_descriptor_146;
  id v21 = _Block_copy(aBlock);
  id v22 = v14;
  sub_190D41868();
  id aBlock[10] = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v9, v6, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  return swift_release();
}

void sub_190D27CC0(uint64_t a1)
{
  uint64_t v2 = BSDispatchQueueAssert();
  sub_190D2700C(v2);
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection);
  if (v3)
  {
    id v4 = v3;
    if (objc_msgSend(v4, sel_remoteTarget))
    {
      sub_190D41E78();
      swift_unknownObjectRelease();

      sub_190CCE544((uint64_t)v5);
    }
    else
    {
      memset(v5, 0, sizeof(v5));
      sub_190CCE544((uint64_t)v5);
      objc_msgSend(v4, sel_activate);
    }
  }
}

void sub_190D27D74(uint64_t a1)
{
}

void sub_190D27D80(uint64_t a1, const char *a2)
{
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_190D41778();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E92B30C0);
  oslog = sub_190D41758();
  os_log_type_t v4 = sub_190D41D48();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_190C6F000, oslog, v4, a2, v5, 2u);
    MEMORY[0x192FD7910](v5, -1, -1);
  }
}

uint64_t sub_190D27E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_190D27EC4(unint64_t a1)
{
  return sub_190D27F24(a1, "Notifying of %ld live controls changed.", (uint64_t)&unk_1EE09FD90, (uint64_t)sub_190D2B9C8, (uint64_t)&block_descriptor_119);
}

uint64_t sub_190D27EF4(unint64_t a1)
{
  return sub_190D27F24(a1, "Notifying of %ld preview controls changed.", (uint64_t)&unk_1EE09FD68, (uint64_t)sub_190D2B9A4, (uint64_t)&block_descriptor_113_0);
}

uint64_t sub_190D27F24(unint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v28 = a2;
  uint64_t v7 = v5;
  uint64_t v9 = sub_190D41858();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_190D41898();
  uint64_t v13 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_190D41778();
  __swift_project_value_buffer(v16, (uint64_t)qword_1E92B30C0);
  swift_bridgeObjectRetain_n();
  long long v17 = sub_190D41758();
  os_log_type_t v18 = sub_190D41D48();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v26 = a5;
    uint64_t v27 = v10;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_190D420B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    aBlock[0] = v20;
    sub_190D41E48();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v17, v18, v28, v19, 0xCu);
    MEMORY[0x192FD7910](v19, -1, -1);

    a5 = v26;
    uint64_t v10 = v27;
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v7;
  *(void *)(v21 + 24) = a1;
  aBlock[4] = v30;
  uint64_t aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  uint64_t aBlock[3] = a5;
  id v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v23 = v7;
  sub_190D41868();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v15, v12, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
  return swift_release();
}

uint64_t sub_190D2833C(uint64_t a1)
{
  return sub_190D2838C(a1, (uint64_t)&unk_1EE0A0038, (uint64_t)sub_190D2BC4C, (uint64_t)&block_descriptor_194);
}

uint64_t sub_190D28364(uint64_t a1)
{
  return sub_190D2838C(a1, (uint64_t)&unk_1EE09FFE8, (uint64_t)sub_190D2BBBC, (uint64_t)&block_descriptor_188);
}

uint64_t sub_190D2838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_190D41858();
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_190D41898();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertNot();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  *(void *)(v14 + 24) = a1;
  aBlock[4] = a3;
  uint64_t aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  uint64_t aBlock[3] = a4;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v4;
  swift_bridgeObjectRetain();
  sub_190D41868();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_190D2BAA8((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v13, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  return swift_release();
}

id ControlsClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ControlsClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190D28788()
{
  return sub_190D1BE98();
}

uint64_t sub_190D287AC()
{
  return sub_190D1BF18();
}

void sub_190D287D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t sub_190D287F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(unsigned char *)(v6 + 88) = a3;
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 56) = *v5;
  return MEMORY[0x1F4188298](sub_190D28824, 0, 0);
}

uint64_t sub_190D28824()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v6;
  *(void *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 40) = v5;
  *(void *)(v7 + 48) = v3;
  *(void *)(v7 + 56) = v2;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC408);
  *uint64_t v8 = v0;
  v8[1] = sub_190D28950;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000004BLL, 0x8000000190D5E720, sub_190D29DE0, v7, v9);
}

uint64_t sub_190D28950()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D22F34;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D2CC7C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D28A6C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x1F4188298](sub_190D28A90, 0, 0);
}

uint64_t sub_190D28A90()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC418);
  *uint64_t v2 = v0;
  v2[1] = sub_190D23D44;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000001CLL, 0x8000000190D5E770, sub_190D2CC78, v1, v3);
}

uint64_t sub_190D28B98(uint64_t *a1)
{
  return ControlsClient.updateControlHostConfiguration(host:)(a1);
}

uint64_t sub_190D28BBC(uint64_t *a1)
{
  return ControlsClient.updateControlHostActivationState(host:)(a1);
}

uint64_t sub_190D28BE0(uint64_t *a1)
{
  return ControlsClient.invalidateControlHost(host:)(a1);
}

uint64_t sub_190D28C04()
{
  *(void *)(v1 + 24) = *v0;
  return MEMORY[0x1F4188298](sub_190D28C28, 0, 0);
}

uint64_t sub_190D28C28()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC3F8);
  *uint64_t v3 = v0;
  v3[1] = sub_190D28D2C;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000020, 0x8000000190D5E6F0, sub_190D2CAD8, v2, v4);
}

uint64_t sub_190D28D2C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D220E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D2CC7C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D28E48(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_190D28E6C, 0, 0);
}

uint64_t sub_190D28E6C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_190D24BC8;
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD000000000000013, 0x8000000190D5E7B0, sub_190D2CC74, v1, v3 + 8);
}

uint64_t sub_190D28F5C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_190D28F80, 0, 0);
}

uint64_t sub_190D28F80()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_190D24348;
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD000000000000014, 0x8000000190D5E7D0, sub_190D2CC70, v1, v3 + 8);
}

uint64_t sub_190D29070(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_190D29094, 0, 0);
}

uint64_t sub_190D29094()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_190D24348;
  return MEMORY[0x1F4188160](v2, 0, 0, 0xD000000000000019, 0x8000000190D5E790, sub_190D2CC6C, v1, v3 + 8);
}

uint64_t sub_190D29184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ControlsClient.subscribeToSession(withRequest:completion:)(a1, a2, a3);
}

uint64_t sub_190D291A8(uint64_t a1)
{
  return ControlsClient.unsubscribe(fromSession:)(a1);
}

uint64_t sub_190D291CC(uint64_t a1, uint64_t a2)
{
  return ControlsClient.setVisiblySettled(_:forSession:)(a1, a2);
}

uint64_t sub_190D291F0(char *a1, uint64_t a2)
{
  return ControlsClient.setTaskPriority(_:forSession:)(a1, a2);
}

uint64_t sub_190D29214(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return ControlsClient.setEnvironmentModifiers(_:forSession:)(a1, a2, a3);
}

uint64_t sub_190D29238(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return MEMORY[0x1F4188298](sub_190D29260, 0, 0);
}

uint64_t sub_190D29260()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v3;
  void v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x1E4FBC848];
  v5[1] = sub_190D2935C;
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD000000000000019, 0x8000000190D5E6B0, sub_190D2CAE0, v4, v6 + 8);
}

uint64_t sub_190D2935C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190D1FE08;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190D2CC68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190D29478(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return MEMORY[0x1F4188298](sub_190D294A0, 0, 0);
}

uint64_t sub_190D294A0()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v3;
  void v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x1E4FBC848];
  v5[1] = sub_190D20310;
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD00000000000001ELL, 0x8000000190D5E6D0, sub_190D2CADC, v4, v6 + 8);
}

uint64_t ControlsClient.systemEnvironmentDidChange(_:)(uint64_t a1, unint64_t a2)
{
  BSDispatchQueueAssertNot();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
  unint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData + 8);
  *uint64_t v5 = a1;
  v5[1] = a2;
  sub_190CEA33C(a1, a2);
  sub_190CEA394(v6, v7);
  uint64_t v8 = (void (**)(uint64_t, unint64_t))(v2
                                                       + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (*v8)
  {
    swift_retain();
    v10(a1, a2);
    return sub_190CDAA9C((uint64_t)v10);
  }
  return result;
}

uint64_t ControlsClient.liveControlsDidChange(_:)(uint64_t a1, uint64_t a2)
{
  return sub_190D2977C(a1, a2, "Received live control info did change: %{public}s", (void (*)(uint64_t))sub_190D2833C);
}

void sub_190D296BC(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, unint64_t))
{
  id v6 = a3;
  id v10 = a1;
  uint64_t v7 = sub_190D41648();
  unint64_t v9 = v8;

  a4(v7, v9);
  sub_190CD55F0(v7, v9);
}

uint64_t ControlsClient.previewControlsDidChange(_:)(uint64_t a1, uint64_t a2)
{
  return sub_190D2977C(a1, a2, "Received preview control info did change: %{public}s", (void (*)(uint64_t))sub_190D28364);
}

uint64_t sub_190D2977C(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(uint64_t))
{
  BSDispatchQueueAssertNot();
  sub_190D416E8();
  sub_190D2B3C0();
  sub_190D416C8();
  uint64_t v6 = v16;
  if (qword_1E92AA720 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_190D41778();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E92B30C0);
  swift_bridgeObjectRetain_n();
  unint64_t v8 = sub_190D41758();
  os_log_type_t v9 = sub_190D41D48();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)id v10 = 136446210;
    uint64_t v12 = sub_190C72C5C(0, (unint64_t *)&qword_1E92AA910);
    uint64_t v13 = MEMORY[0x192FD60B0](v6, v12);
    sub_190CCB3A8(v13, v14, &v16);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v8, v9, a3, v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v11, -1, -1);
    MEMORY[0x192FD7910](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a4(v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D29B6C()
{
  return sub_190D1E654(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t objectdestroy_24Tm()
{
  swift_release();

  sub_190CD55F0(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_190D29BC8()
{
  sub_190D1EFA4(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_190D29BD8()
{
  swift_release();

  sub_190CD55F0(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_190CD55F0(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_190D29C28()
{
  return sub_190D1F8A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_190D29C38(uint64_t a1)
{
  return sub_190D2042C(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1EE0A06C8, (uint64_t)sub_190D2C76C, (uint64_t)&block_descriptor_320);
}

uint64_t sub_190D29C7C(uint64_t a1)
{
  return sub_190D2042C(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1EE0A05D8, (uint64_t)sub_190D2C640, (uint64_t)&block_descriptor_302);
}

uint64_t sub_190D29CC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_190D29D10()
{
  sub_190D211EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_190D29D28()
{
  return sub_190D29DC0((uint64_t (*)(void, void, void, void, void))sub_190D21458);
}

uint64_t sub_190D29D44()
{
  return sub_190D29DC0((uint64_t (*)(void, void, void, void, void))sub_190D219E0);
}

uint64_t objectdestroy_52Tm()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_190D29DA8()
{
  return sub_190D29DC0((uint64_t (*)(void, void, void, void, void))sub_190D21C84);
}

uint64_t sub_190D29DC0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_190D29DD8(uint64_t a1)
{
  return sub_190D2214C(a1, *(char **)(v1 + 16));
}

uint64_t sub_190D29DE4(uint64_t a1)
{
  return sub_190D24464(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1E92AC560, (uint64_t)&unk_1EE0A0358, (uint64_t)sub_190D2BF50, (uint64_t)&block_descriptor_254);
}

uint64_t sub_190D29E2C(uint64_t a1)
{
  return sub_190D24464(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1E92AC558, (uint64_t)&unk_1EE0A0268, (uint64_t)sub_190D2BE1C, (uint64_t)&block_descriptor_236);
}

uint64_t sub_190D29E74(uint64_t a1)
{
  return sub_190D24464(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1E92AC558, (uint64_t)&unk_1EE0A0178, (uint64_t)sub_190D2BCE8, (uint64_t)&block_descriptor_218);
}

uint64_t sub_190D29EBC(uint64_t a1)
{
  return sub_190D24464(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1E92AC558, (uint64_t)&unk_1EE0A0088, (uint64_t)sub_190D2BC80, (uint64_t)&block_descriptor_200);
}

uint64_t sub_190D29F04@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_190D29F34(uint64_t a1, void (*a2)(void), uint64_t *a3, void (*a4)(void), void (*a5)(unint64_t, uint64_t))
{
  uint64_t v6 = v5;
  uint64_t v8 = *v6;
  if ((*v6 & 0xC000000000000001) == 0)
  {
    uint64_t v12 = a2;
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_190CDE82C(a1);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = *v6;
      uint64_t v25 = *v6;
      *uint64_t v6 = 0x8000000000000000;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_10:
        swift_release();
        uint64_t v19 = *(void *)(*(void *)(v23 + 56) + 8 * v15);
        sub_190D2AADC(v15, v23);
        *uint64_t v6 = v23;
        goto LABEL_11;
      }
LABEL_16:
      v12();
      uint64_t v23 = v25;
      goto LABEL_10;
    }
    return 0;
  }
  if (v8 < 0) {
    uint64_t v12 = (void (*)(void))*v6;
  }
  else {
    uint64_t v12 = (void (*)(void))(v8 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = sub_190D42078();
  swift_release();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v14 = sub_190D41EC8();
  unint64_t v15 = sub_190D2A830((uint64_t)v12, v14, a3, a4, a5);
  swift_retain();
  unint64_t v16 = sub_190CDE82C(a1);
  char v18 = v17;
  swift_release();
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  swift_release();
  uint64_t v19 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  sub_190D2AADC(v16, v15);
  *uint64_t v6 = v15;
LABEL_11:
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_190D2A0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_190CDE68C(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_190D0B3E8();
      uint64_t v12 = v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 32 * v8;
    long long v14 = *(_OWORD *)v13;
    uint64_t v15 = *(void *)(v13 + 16);
    LOBYTE(v13) = *(unsigned char *)(v13 + 24);
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
    *(unsigned char *)(a3 + 24) = v13;
    sub_190D2AD0C(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 24) = 0;
    *(void *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t sub_190D2A200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_190D2A288(a1, a2, a3, a4, type metadata accessor for IconStore.FileVersionUpdateMigration, type metadata accessor for IconStore.FileVersionUpdateMigration, type metadata accessor for IconStore.FileVersionUpdateMigration, (void (*)(void))sub_190D0B5C8, a5);
}

uint64_t sub_190D2A244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_190D2A288(a1, a2, a3, a4, type metadata accessor for IconStore.FileRenameMigration, type metadata accessor for IconStore.FileRenameMigration, type metadata accessor for IconStore.FileRenameMigration, (void (*)(void))sub_190D0B5FC, a5);
}

uint64_t sub_190D2A288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t (*a7)(void)@<X6>, void (*a8)(void)@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13 = v9;
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_190CDE8EC(a1, a2, a3, a4);
  LOBYTE(a4) = v20;
  swift_bridgeObjectRelease();
  if (a4)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v9;
    uint64_t v33 = *v13;
    *uint64_t v13 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a8();
      uint64_t v22 = v33;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v22 + 56);
    uint64_t v24 = a5(0);
    uint64_t v31 = *(void *)(v24 - 8);
    sub_190D0F1CC(v23 + *(void *)(v31 + 72) * v19, a9, a6);
    sub_190D2AEEC(v19, v22, a7);
    *uint64_t v13 = v22;
    swift_bridgeObjectRelease();
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
    uint64_t v26 = a9;
    uint64_t v27 = 0;
    uint64_t v28 = v24;
  }
  else
  {
    uint64_t v29 = a5(0);
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    uint64_t v28 = v29;
    uint64_t v26 = a9;
    uint64_t v27 = 1;
  }
  return v25(v26, v27, 1, v28);
}

uint64_t sub_190D2A464(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_190D41EC8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_190D2A5FC(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_190D09C94(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D2A518(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t *a4, void (*a5)(void), void (*a6)(unint64_t, uint64_t))
{
  unint64_t v8 = v6;
  uint64_t v11 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_190D41EC8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *unint64_t v8 = sub_190D2A830(v15, result + 1, a4, a5, a6);
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v8;
  *unint64_t v8 = 0x8000000000000000;
  a3(a1, a2, isUniquelyReferenced_nonNull_native);
  *unint64_t v8 = v18;
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D2A5FC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2C0);
    uint64_t v2 = sub_190D420F8();
    uint64_t v18 = v2;
    sub_190D42058();
    uint64_t v3 = sub_190D42088();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for CHSExtensionIdentity();
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC550);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_190CDECAC(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_190D41DD8();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_190D42088();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_190D2A830(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), void (*a5)(unint64_t, uint64_t))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_190D420F8();
    uint64_t v23 = v6;
    sub_190D42058();
    if (sub_190D42088())
    {
      type metadata accessor for ControlSessionKey();
      do
      {
        swift_dynamicCast();
        a4(0);
        swift_dynamicCast();
        uint64_t v6 = v23;
        unint64_t v15 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v15)
        {
          a5(v15 + 1, 1);
          uint64_t v6 = v23;
        }
        sub_190D42398();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_190D41A18();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        id v7 = *(id *)(v22 + 32);
        sub_190D41DF8();

        uint64_t result = sub_190D423E8();
        uint64_t v9 = v6 + 64;
        uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v11 = result & ~v10;
        unint64_t v12 = v11 >> 6;
        if (((-1 << v11) & ~*(void *)(v6 + 64 + 8 * (v11 >> 6))) != 0)
        {
          unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v6 + 64 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v12 == v17;
            if (v12 == v17) {
              unint64_t v12 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v9 + 8 * v12);
          }
          while (v19 == -1);
          unint64_t v13 = __clz(__rbit64(~v19)) + (v12 << 6);
        }
        *(void *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        uint64_t v14 = 8 * v13;
        *(void *)(*(void *)(v6 + 48) + v14) = v22;
        *(void *)(*(void *)(v6 + 56) + v14) = v21;
        ++*(void *)(v6 + 16);
      }
      while (sub_190D42088());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v6;
}

unint64_t sub_190D2AADC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_190D41E98();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        sub_190D42398();
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_190D41A18();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        id v10 = *(id *)(v9 + 32);
        sub_190D41DF8();

        uint64_t v11 = sub_190D423E8();
        uint64_t result = swift_release();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          unint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            void *v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = (void *)(v16 + 8 * v3);
          BOOL v18 = (void *)(v16 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 1))
          {
            *unint64_t v17 = *v18;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_190D2AD0C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_190D41E98();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_190D42398();
        swift_bridgeObjectRetain();
        sub_190D41A18();
        uint64_t v10 = sub_190D423E8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (32 * v3 != 32 * v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *BOOL v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_190D2AEEC(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a2;
  unint64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    uint64_t result = sub_190D41E98();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v9 = (result + 1) & v8;
      uint64_t v41 = v3;
      uint64_t v42 = v5;
      do
      {
        int64_t v43 = v4;
        uint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v7);
        uint64_t v11 = *v10;
        uint64_t v12 = v10[1];
        unint64_t v13 = v9;
        uint64_t v14 = v8;
        uint64_t v16 = v10[2];
        uint64_t v15 = v10[3];
        sub_190D42398();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA88);
        uint64_t inited = swift_initStackObject();
        uint64_t v18 = inited;
        *(_OWORD *)(inited + 16) = xmmword_190D4B450;
        if (v15) {
          uint64_t v19 = v16;
        }
        else {
          uint64_t v19 = 0;
        }
        *(void *)(inited + 32) = v19;
        *(void *)(inited + 40) = v15;
        *(void *)(inited + 48) = v11;
        *(void *)(inited + 56) = v12;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_190CE1A2C(v18, &v44);
        uint64_t v20 = v44;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_190D4B270;
        uint64_t v22 = sub_190CE1E50();
        uint64_t v23 = sub_190CE2054(v22);
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        *(void *)(v21 + 32) = v23;
        *(void *)(v21 + 40) = v25;
        swift_bridgeObjectRetain();
        sub_190D3E4DC((uint64_t)v20);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
        sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
        sub_190D418E8();
        uint64_t v8 = v14;
        unint64_t v9 = v13;
        unint64_t v4 = v43;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_190D41A18();
        swift_bridgeObjectRelease();
        uint64_t v26 = sub_190D423E8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v27 = v26 & v8;
        if (v43 >= (uint64_t)v9)
        {
          if (v27 < v9)
          {
            uint64_t v3 = v41;
            uint64_t v5 = v42;
            goto LABEL_6;
          }
          uint64_t v3 = v41;
          uint64_t v5 = v42;
          if (v43 < (uint64_t)v27) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v3 = v41;
          uint64_t v5 = v42;
          if (v27 < v9 && v43 < (uint64_t)v27) {
            goto LABEL_6;
          }
        }
        uint64_t v28 = *(void *)(v3 + 48);
        uint64_t v29 = (_OWORD *)(v28 + 32 * v43);
        uint64_t v30 = (_OWORD *)(v28 + 32 * v7);
        if (v43 != v7 || v29 >= v30 + 2)
        {
          long long v31 = v30[1];
          *uint64_t v29 = *v30;
          v29[1] = v31;
        }
        uint64_t v32 = *(void *)(v3 + 56);
        uint64_t v33 = *(void *)(*(void *)(a3(0) - 8) + 72);
        uint64_t result = v32 + v33 * v43;
        if (v33 * v43 < (uint64_t)(v33 * v7) || result >= v32 + v33 * v7 + v33)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          unint64_t v4 = v7;
          if (v33 * v43 == v33 * v7) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    id v34 = (uint64_t *)(v5 + 8 * (v4 >> 6));
    uint64_t v35 = *v34;
    uint64_t v36 = (-1 << v4) - 1;
  }
  else
  {
    id v34 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v36 = *v34;
    uint64_t v35 = (-1 << result) - 1;
  }
  uint64_t *v34 = v36 & v35;
  uint64_t v37 = *(void *)(v3 + 16);
  BOOL v38 = __OFSUB__(v37, 1);
  uint64_t v39 = v37 - 1;
  if (v38)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v39;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_190D2B294(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  sub_190CEF1D0(a1);
  uint64_t result = sub_190CDAA9C(v6);
  uint64_t v8 = (void (*)(uint64_t, unint64_t))*v5;
  if (*v5)
  {
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
    uint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
    swift_retain();
    sub_190CEF1D0((uint64_t)v8);
    os_unfair_lock_lock(v10);
    uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
    unint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData + 8);
    unint64_t v13 = *(os_unfair_lock_s **)(v9 + 16);
    sub_190CEA328(v11, v12);
    os_unfair_lock_unlock(v13);
    swift_release();
    if (v12 >> 60 == 15)
    {
      return sub_190CDAA9C((uint64_t)v8);
    }
    else
    {
      v8(v11, v12);
      sub_190CDAA9C((uint64_t)v8);
      return sub_190CEA394(v11, v12);
    }
  }
  return result;
}

unint64_t sub_190D2B3C0()
{
  unint64_t result = qword_1E92AA7E8;
  if (!qword_1E92AA7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA7E8);
  }
  return result;
}

uint64_t sub_190D2B414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190D1BE98();
  *a1 = result;
  return result;
}

uint64_t sub_190D2B440(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher);
}

uint64_t sub_190D2B44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190D1BF18();
  *a1 = result;
  return result;
}

uint64_t sub_190D2B478(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher);
}

uint64_t keypath_setTm(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)(*a2 + *a5) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for ControlsClientFactory()
{
  return self;
}

uint64_t method lookup function for ControlsClientFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlsClientFactory);
}

uint64_t method lookup function for ControlsClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlsClient);
}

uint64_t dispatch thunk of ControlsClient.liveControlsDidChangePublisher.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ControlsClient.liveControlsDidChangePublisher.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ControlsClient.liveControlsDidChangePublisher.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ControlsClient.previewControlsDidChangePublisher.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ControlsClient.previewControlsDidChangePublisher.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ControlsClient.previewControlsDidChangePublisher.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ControlsClient.setControlState(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x160);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_190CD5C90;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ControlsClient.performControlAction(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x168);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_190CD6208;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ControlsClient.handleSystemEnvironmentDidChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ControlsClient.handleSystemEnvironmentDidChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ControlsClient.handleSystemEnvironmentDidChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t sub_190D2B98C()
{
  return objectdestroy_18Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_190D2B9A4()
{
  return sub_190D2B9D4();
}

uint64_t sub_190D2B9B0()
{
  return objectdestroy_18Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_190D2B9C8()
{
  return sub_190D2B9D4();
}

uint64_t sub_190D2B9D4()
{
  return sub_190D417D8();
}

void sub_190D2BA10(void *a1)
{
  sub_190D273B0(a1, *(void **)(v1 + 16));
}

uint64_t sub_190D2BA18()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190D2BA28(uint64_t a1)
{
  return sub_190D27734(a1, *(char **)(v1 + 16));
}

void sub_190D2BA30()
{
  sub_190D27CC0(*(void *)(v0 + 16));
}

uint64_t sub_190D2BA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190D2BAA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190D2BAF0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190D2BB28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_190D2BB60(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_190D2BB90(uint64_t a1)
{
  return sub_190D22F98(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_190D2BBA4()
{
  return objectdestroy_18Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_190D2BBBC()
{
  return sub_190D27EF4(*(void *)(v0 + 24));
}

uint64_t sub_190D2BBE4()
{
  return objectdestroy_18Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_18Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  return MEMORY[0x1F4186498](v1, 32, 7);
}

uint64_t sub_190D2BC4C()
{
  return sub_190D27EC4(*(void *)(v0 + 24));
}

uint64_t sub_190D2BC74()
{
  return objectdestroy_196Tm(&qword_1E92AC558);
}

uint64_t sub_190D2BC80()
{
  return sub_190D2BD08(&qword_1E92AC558, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_190D250B8);
}

uint64_t sub_190D2BCA0()
{
  return objectdestroy_202Tm(&qword_1E92AC558);
}

uint64_t sub_190D2BCAC(void *a1)
{
  return sub_190D2C900(a1, (uint64_t)&unk_1EE0A0128, (uint64_t)sub_190D2BCD8, (uint64_t)&block_descriptor_212);
}

uint64_t sub_190D2BCDC()
{
  return objectdestroy_196Tm(&qword_1E92AC558);
}

uint64_t sub_190D2BCE8()
{
  return sub_190D2BD08(&qword_1E92AC558, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_190D24CE4);
}

uint64_t sub_190D2BD08(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5, v6);
}

uint64_t sub_190D2BD7C()
{
  return objectdestroy_202Tm(&qword_1E92AC558);
}

uint64_t sub_190D2BD88(void *a1)
{
  return sub_190D2C900(a1, (uint64_t)&unk_1EE0A0218, (uint64_t)sub_190D2BCD8, (uint64_t)&block_descriptor_230);
}

uint64_t sub_190D2BDB4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  return sub_190D2537C(*(void **)(v0 + 16));
}

uint64_t sub_190D2BE10()
{
  return objectdestroy_196Tm(&qword_1E92AC558);
}

uint64_t sub_190D2BE1C()
{
  return sub_190D2BD08(&qword_1E92AC558, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_190D247F4);
}

uint64_t sub_190D2BE3C()
{
  return objectdestroy_202Tm(&qword_1E92AC558);
}

uint64_t sub_190D2BE48(void *a1)
{
  return sub_190D2C900(a1, (uint64_t)&unk_1EE0A0308, (uint64_t)sub_190D2BCD8, (uint64_t)&block_descriptor_248);
}

uint64_t sub_190D2BE74()
{
  return objectdestroy_196Tm(&qword_1E92AC560);
}

uint64_t objectdestroy_196Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_190D2BF50()
{
  return sub_190D2BD08(&qword_1E92AC560, sub_190D23E60);
}

uint64_t sub_190D2BF70()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC560);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_190D2C004(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC560);
  return sub_190D241B8(a1, a2);
}

uint64_t sub_190D2C088()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_190D2C168()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_190D23364(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_190D2C1DC()
{
  return objectdestroy_202Tm(&qword_1E92AC568);
}

uint64_t sub_190D2C1E8(uint64_t a1, uint64_t a2)
{
  return sub_190D2C3B4(a1, a2, &qword_1E92AC568, sub_190D23734);
}

uint64_t sub_190D2C208()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC568);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_190D2C2F4()
{
  return sub_190D2C558(&qword_1E92AC568, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_190D23AEC);
}

uint64_t sub_190D2C314()
{
  return objectdestroy_202Tm((uint64_t *)&unk_1E92AC570);
}

uint64_t sub_190D2C320()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_190D224DC(v2, v3);
}

uint64_t sub_190D2C388()
{
  return objectdestroy_202Tm((uint64_t *)&unk_1E92AC570);
}

uint64_t sub_190D2C394(uint64_t a1, uint64_t a2)
{
  return sub_190D2C3B4(a1, a2, (uint64_t *)&unk_1E92AC570, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190D22810);
}

uint64_t sub_190D2C3B4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, a2, v8, v9);
}

uint64_t sub_190D2C44C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AC570);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_190D2C538()
{
  return sub_190D2C558((uint64_t *)&unk_1E92AC570, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_190D22BC4);
}

uint64_t sub_190D2C558(uint64_t *a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(v5, v2 + v4, v6);
}

void sub_190D2C5F8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_190D2C640()
{
  return sub_190D2C784((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))sub_190D207D4);
}

uint64_t sub_190D2C658()
{
  return objectdestroy_202Tm(&qword_1E92AC558);
}

uint64_t sub_190D2C664(void *a1)
{
  return sub_190D2C900(a1, (uint64_t)&unk_1EE0A0678, (uint64_t)sub_190D2BCD8, (uint64_t)&block_descriptor_314);
}

uint64_t objectdestroy_298Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  sub_190CD55F0(*(void *)(v0 + 24), *(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_190D2C76C()
{
  return sub_190D2C784((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))sub_190D1FE6C);
}

uint64_t sub_190D2C784(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558) - 8);
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = (char *)v1 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3, v4, v5, v6);
}

uint64_t sub_190D2C804()
{
  return objectdestroy_202Tm(&qword_1E92AC558);
}

uint64_t objectdestroy_202Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_190D2C8D8(void *a1)
{
  return sub_190D2C900(a1, (uint64_t)&unk_1EE0A0768, (uint64_t)sub_190D2BCD8, (uint64_t)&block_descriptor_332);
}

uint64_t sub_190D2C900(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558) - 8);
  return sub_190D20B58(a1, *(void *)(v4 + 16), v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

uint64_t objectdestroy_208Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AC558);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_190D2CA68()
{
  sub_190D1CF68(*(void *)(v0 + 16));
}

uint64_t objectdestroy_148Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_190D2CAC4(uint64_t a1, unint64_t a2, void *a3)
{
  sub_190D260D8(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void (**)(uint64_t, void *))(v3 + 40));
}

uint64_t sub_190D2CC80(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_190CDDE24(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v10 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_190CDDE24((void *)(v10 > 1), v9 + 1, 1);
      }
      v4 += 6;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v11 = (void *)(v13 + 32 * v9);
      v11[4] = v5;
      v11[5] = v6;
      void v11[6] = v8;
      v11[7] = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_190D2CD78(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    unint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_190D12E94(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_190D2CEF8(uint64_t a1)
{
  uint64_t v2 = sub_190D415D8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  uint64_t result = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v30 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v15 = a1 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v25 = v15;
  int64_t v26 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v27 = v3 + 48;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v20 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(void *)(v30 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_190D13044((uint64_t)v8, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v25 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v25 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v26) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v25 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26)
  {
LABEL_24:
    (*v29)(v12, 1, 1, v2);
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v25 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t IconStore.__allocating_init(fileManagerFactory:imageIOPrimitives:iconsFolderURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1(a2, v10);
  uint64_t v13 = sub_190D377E8(v9, v12, a3, v3, v7, v10, v8, v11);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v13;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t IconStore.init(fileManagerFactory:imageIOPrimitives:iconsFolderURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1(a2, v14);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  uint64_t v20 = sub_190D373E4((uint64_t)v12, (uint64_t)v18, a3, v4, v9, v14, v8, v15);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v20;
}

uint64_t IconStore.deinit()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  uint64_t v2 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t IconStore.__deallocating_deinit()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 9));
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  uint64_t v2 = sub_190D415D8();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);
  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_190D2D648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x192FD5A20]() & 1) == 0
    || (MEMORY[0x192FD5A20](a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }
  return sub_190D422D8();
}

uint64_t sub_190D2D6E8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA148);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v136 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA130);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v119 = (uint64_t)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v135 = (uint64_t)&v116 - v8;
  uint64_t v139 = type metadata accessor for IconStore.FileRenameMigration(0);
  uint64_t v9 = *(void *)(v139 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v139);
  uint64_t v118 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v130 = (uint64_t)&v116 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v129 = (char *)&v116 - v14;
  uint64_t v128 = sub_190D41748();
  uint64_t v15 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v127 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for IconStore.FileVersionUpdateMigration(0);
  uint64_t v17 = MEMORY[0x1F4188790](updated);
  uint64_t v137 = (uint64_t)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v141 = (char *)&v116 - v19;
  uint64_t v149 = sub_190D414C8();
  uint64_t v20 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  v148 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_190D415D8();
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  v143 = (char *)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v154 = (char *)&v116 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v116 - v28;
  uint64_t v170 = MEMORY[0x1E4FBC868];
  uint64_t v171 = MEMORY[0x1E4FBC868];
  uint64_t v168 = MEMORY[0x1E4FBC870];
  uint64_t v169 = MEMORY[0x1E4FBC870];
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30)
  {
    uint64_t v114 = MEMORY[0x1E4FBC868];
    goto LABEL_32;
  }
  uint64_t v151 = v1 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  uint64_t v32 = *(void (**)(char *, void, uint64_t))(v20 + 104);
  uint64_t v31 = v20 + 104;
  v147 = v32;
  v146 = (void (**)(char *, uint64_t))(v31 - 96);
  unsigned int v145 = *MEMORY[0x1E4F276C0];
  uint64_t v126 = (void (**)(char *, uint64_t))(v15 + 8);
  v150 = (void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v125 = (void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v155 = (void (**)(uint64_t, uint64_t))(v27 + 8);
  v134 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v124 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  unsigned int v121 = &v161;
  swift_bridgeObjectRetain();
  uint64_t v116 = a1;
  uint64_t v33 = (unint64_t *)(a1 + 40);
  *(void *)&long long v34 = 136446210;
  long long v123 = v34;
  uint64_t v122 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v34 = 136446466;
  long long v120 = v34;
  uint64_t v117 = v9;
  uint64_t v140 = v31;
  uint64_t v156 = v22;
  v157 = v29;
  do
  {
    v158 = v33;
    uint64_t v159 = v30;
    uint64_t v41 = *(v33 - 1);
    unint64_t v42 = *v33;
    uint64_t v162 = v41;
    unint64_t v163 = v42;
    int64_t v43 = v148;
    uint64_t v44 = v149;
    v147(v148, v145, v149);
    sub_190CE3620();
    swift_bridgeObjectRetain();
    sub_190D415C8();
    (*v146)(v43, v44);
    sub_190D2E8D8((uint64_t)&v162);
    uint64_t v45 = v163;
    if (v163)
    {
      uint64_t v46 = v162;
      uint64_t v48 = v164;
      uint64_t v47 = v165;
      uint64_t v49 = v166;
      uint64_t v50 = v167;
      uint64_t v51 = v168;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v52 = sub_190CEF668(v46, v45, v48, v47, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v152 = v49;
      uint64_t v153 = v48;
      if ((v52 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_190D13340(&v162, v46, v45, v48, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v142 = v46;
        if (v50)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_190CDC274(v46, v45, v48, v47);
          uint64_t v144 = v50;
          BOOL v73 = v127;
          sub_190D41738();
          sub_190D41528();
          swift_bridgeObjectRelease();
          (*v126)(v73, v128);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v74 = *v150;
          uint64_t v75 = (uint64_t)v129;
          uint64_t v76 = v48;
          uint64_t v77 = v156;
          (*v150)(v129, v157, v156);
          uint64_t v78 = v139;
          v74((char *)(v75 + *(int *)(v139 + 20)), v154, v77);
          uint64_t v79 = (uint64_t *)(v75 + *(int *)(v78 + 24));
          *uint64_t v79 = v41;
          v79[1] = v42;
          uint64_t v80 = v130;
          sub_190D0F1CC(v75, v130, type metadata accessor for IconStore.FileRenameMigration);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v81 = v171;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v162 = v81;
          sub_190D0A650(v80, v142, v45, v76, v47, isUniquelyReferenced_nonNull_native);
          uint64_t v171 = v162;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v83 = (uint64_t)v141;
          (*v125)((uint64_t)v141, (uint64_t)v154, v77);
          uint64_t v84 = v144;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v83 = (uint64_t)v141;
          (*v150)(v141, v157, v156);
          uint64_t v84 = 0;
        }
        uint64_t v36 = v158;
        uint64_t v37 = v159;
        uint64_t v85 = (void *)(v83 + *(int *)(updated + 20));
        void *v85 = v152;
        v85[1] = v84;
        uint64_t v86 = v137;
        sub_190D0F164(v83, v137, type metadata accessor for IconStore.FileVersionUpdateMigration);
        swift_bridgeObjectRetain();
        uint64_t v87 = v170;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v88 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v162 = v87;
        uint64_t v89 = v142;
        sub_190D0A448(v86, v142, v45, v153, v47, v88);
        uint64_t v170 = v162;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_190D383D4(v89, v45);
        sub_190D38374((uint64_t)v141, type metadata accessor for IconStore.FileVersionUpdateMigration);
        (*v155)((uint64_t)v157, v156);
        goto LABEL_5;
      }
      uint64_t v144 = v50;
      swift_bridgeObjectRelease();
      uint64_t v161 = MEMORY[0x1E4FBC870];
      id v53 = *v150;
      uint64_t v54 = v143;
      uint64_t v55 = v156;
      (*v150)(v143, v157, v156);
      swift_beginAccess();
      uint64_t v56 = (uint64_t)v154;
      sub_190D13044((uint64_t)v154, v54);
      swift_endAccess();
      os_log_type_t v57 = *v155;
      (*v155)(v56, v55);
      uint64_t v58 = v171;
      if (*(void *)(v171 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v59 = v46;
        uint64_t v60 = v153;
        unint64_t v61 = sub_190CDE8EC(v46, v45, v153, v47);
        if (v62)
        {
          uint64_t v63 = *(void *)(v58 + 56) + *(void *)(v117 + 72) * v61;
          uint64_t v64 = v135;
          sub_190D0F164(v63, v135, type metadata accessor for IconStore.FileRenameMigration);
          uint64_t v65 = 0;
        }
        else
        {
          uint64_t v65 = 1;
          uint64_t v64 = v135;
        }
        uint64_t v90 = v139;
        (*v134)(v64, v65, 1, v139);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*v124)(v64, 1, v90) != 1)
        {
          unint64_t v91 = v57;
          uint64_t v92 = v118;
          sub_190D0F1CC(v64, v118, type metadata accessor for IconStore.FileRenameMigration);
          uint64_t v93 = v143;
          v53(v143, (char *)v92, v55);
          swift_beginAccess();
          uint64_t v94 = (uint64_t)v154;
          uint64_t v95 = v93;
          uint64_t v60 = v153;
          sub_190D13044((uint64_t)v154, v95);
          swift_endAccess();
          v91(v94, v55);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v96 = v119;
          sub_190D2A244(v59, v45, v60, v47, v119);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_190D38424(v96, &qword_1E92AA130);
          uint64_t v97 = v92;
          os_log_type_t v57 = v91;
          sub_190D38374(v97, type metadata accessor for IconStore.FileRenameMigration);
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v64 = v135;
        (*v134)(v135, 1, 1, v139);
        uint64_t v60 = v153;
        uint64_t v59 = v46;
      }
      sub_190D38424(v64, &qword_1E92AA130);
LABEL_24:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v98 = v136;
      sub_190D2A200(v59, v45, v60, v47, v136);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_190D38424(v98, (uint64_t *)&unk_1E92AA148);
      if (qword_1E92AA158 != -1) {
        swift_once();
      }
      uint64_t v99 = sub_190D41778();
      __swift_project_value_buffer(v99, (uint64_t)qword_1E92B3030);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v100 = sub_190D41758();
      os_log_type_t v101 = sub_190D41D48();
      int v102 = v101;
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v103 = swift_slowAlloc();
        v133 = v57;
        uint64_t v104 = v103;
        uint64_t v132 = swift_slowAlloc();
        uint64_t v162 = v132;
        *(_DWORD *)uint64_t v104 = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v105 = sub_190D028E4(v59, v45, v60, v47);
        int v131 = v102;
        unint64_t v107 = v106;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v160 = sub_190CCB3A8(v105, v107, &v162);
        sub_190D41E48();
        uint64_t v55 = v156;
        swift_bridgeObjectRelease();
        sub_190D383D4(v59, v45);
        sub_190D383D4(v59, v45);
        *(_WORD *)(v104 + 12) = 2082;
        sub_190D38480(&qword_1E92AA098, MEMORY[0x1E4F276F0]);
        swift_bridgeObjectRetain();
        uint64_t v108 = sub_190D41CB8();
        unint64_t v110 = v109;
        swift_bridgeObjectRelease();
        uint64_t v160 = sub_190CCB3A8(v108, v110, &v162);
        sub_190D41E48();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_190C6F000, v100, (os_log_type_t)v131, "Removing duplicate icons for identity: %{public}s: %{public}s", (uint8_t *)v104, 0x16u);
        uint64_t v111 = v132;
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v111, -1, -1);
        uint64_t v112 = v104;
        os_log_type_t v57 = v133;
        MEMORY[0x192FD7910](v112, -1, -1);
      }
      else
      {
        sub_190D383D4(v59, v45);
        sub_190D383D4(v59, v45);
      }

      uint64_t v36 = v158;
      uint64_t v37 = v159;
      uint64_t v113 = swift_bridgeObjectRetain();
      sub_190D2CEF8(v113);
      v57((uint64_t)v157, v55);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (qword_1E92AA158 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_190D41778();
    __swift_project_value_buffer(v66, (uint64_t)qword_1E92B3030);
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_190D41758();
    os_log_type_t v68 = sub_190D41D28();
    BOOL v69 = os_log_type_enabled(v67, v68);
    char v70 = v157;
    if (v69)
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v162 = v72;
      *(_DWORD *)uint64_t v71 = v123;
      swift_bridgeObjectRetain();
      *(void *)(v71 + 4) = sub_190CCB3A8(v41, v42, &v162);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190C6F000, v67, v68, "Failed to parse icon info from: %{public}s", (uint8_t *)v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v72, -1, -1);
      MEMORY[0x192FD7910](v71, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v35 = v156;
    uint64_t v36 = v158;
    uint64_t v37 = v159;
    BOOL v38 = v143;
    (*v150)(v143, v70, v156);
    uint64_t v39 = (uint64_t)v154;
    sub_190D13044((uint64_t)v154, v38);
    id v40 = *v155;
    (*v155)(v39, v35);
    v40((uint64_t)v70, v35);
LABEL_5:
    uint64_t v33 = v36 + 2;
    uint64_t v30 = v37 - 1;
  }
  while (v30);
  swift_bridgeObjectRelease();
  uint64_t v114 = v171;
LABEL_32:
  swift_bridgeObjectRelease();
  return v114;
}

uint64_t sub_190D2E8D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_190D41748();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = 46;
  v39[1] = 0xE100000000000000;
  sub_190D41738();
  sub_190D41728();
  uint64_t v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v7) {
    goto LABEL_18;
  }
  sub_190D41A68();
  swift_bridgeObjectRelease();
  if ((sub_190D41AD8() & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return result;
  }
  uint64_t v9 = sub_190D41A28();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(0, v9))
  {
    __break(1u);
    goto LABEL_16;
  }
  sub_190D41A58();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_190D41B18();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x192FD5EA0](v10, v12, v14, v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  uint64_t result = (uint64_t)Token.init(rawValue:)(v20).storage._rawValue;
  uint64_t v21 = *(void *)(v39[0] + 16);
  if (v21 == 1)
  {
    uint64_t v22 = *(void *)(v39[0] + 32);
    uint64_t v23 = *(void *)(v39[0] + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    if (v21 != 2)
    {
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return result;
    }
    uint64_t v24 = *(void *)(v39[0] + 32);
    uint64_t v25 = *(void *)(v39[0] + 40);
    uint64_t v22 = *(void *)(v39[0] + 48);
    uint64_t v23 = *(void *)(v39[0] + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v22, v23, v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_190D41A28();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v26, 2))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v27 = sub_190D41A48();
  if (v28)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v36 = 0;
    uint64_t v38 = 0;
  }
  else
  {
    unint64_t v29 = sub_190D37398(v27, v17, (unint64_t)v19);
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x192FD5EA0](v29, v31, v33, v35);
    uint64_t v38 = v37;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = v23;
  *(void *)(a1 + 16) = v24;
  *(void *)(a1 + 24) = v25;
  *(void *)(a1 + 32) = v36;
  *(void *)(a1 + 40) = v38;
  return result;
}

Swift::Void __swiftcall IconStore.migrateIfNecessary()()
{
}

uint64_t sub_190D2EE54()
{
  uint64_t v229 = sub_190D415D8();
  uint64_t v214 = *(void *)(v229 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v229);
  v210 = (char *)v206 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  v208 = (char *)v206 - v5;
  MEMORY[0x1F4188790](v4);
  v223 = (char *)v206 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA868);
  MEMORY[0x1F4188790](v7 - 8);
  v213 = (char *)v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v224 = type metadata accessor for IconStore.FileVersionUpdateMigration(0);
  uint64_t v215 = *(void *)(v224 - 8);
  MEMORY[0x1F4188790](v224);
  v232 = (void (**)(void))((char *)v206 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA100);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  v225 = (char *)v206 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char **)((char *)v206 - v13);
  uint64_t v233 = type metadata accessor for IconStore.FileRenameMigration(0);
  v230 = *(char **)(v233 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v233);
  uint64_t v17 = ((char *)v206 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  v236 = (char *)v206 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v228 = (uint64_t)v206 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v226 = (char *)v206 - v23;
  MEMORY[0x1F4188790](v22);
  v217 = (char *)v206 - v24;
  uint64_t v25 = v0[7];
  uint64_t v26 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v25);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v26 + 16))(&v240, v25, v26);
  uint64_t v27 = v242;
  __swift_project_boxed_opaque_existential_1(&v240, v241);
  uint64_t v28 = sub_190D41598();
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v27 + 24))(v28);
  uint64_t v30 = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v240);
  }
  uint64_t v31 = v29;
  os_log_t v219 = v17;
  v220 = v14;
  swift_bridgeObjectRelease();
  v221 = v0;
  uint64_t v32 = sub_190D2D6E8(v31);
  uint64_t v216 = v33;
  uint64_t v212 = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v32 + 64);
  uint64_t v218 = v32 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v32 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  uint64_t v222 = (unint64_t)(v36 + 63) >> 6;
  unint64_t v231 = v32;
  uint64_t result = swift_bridgeObjectRetain();
  id v40 = 0;
  *(void *)&long long v41 = 136446466;
  long long v227 = v41;
  v209 = (void *)(MEMORY[0x1E4FBC840] + 8);
  unint64_t v42 = v232;
  uint64_t v43 = (uint64_t)v236;
  uint64_t v44 = v228;
  uint64_t v45 = (uint64_t)v226;
  uint64_t v46 = (uint64_t)v217;
  while (1)
  {
    if (v38)
    {
      uint64_t v234 = (v38 - 1) & v38;
      v235 = v40;
      unint64_t v48 = __clz(__rbit64(v38)) | ((void)v40 << 6);
      goto LABEL_24;
    }
    BOOL v49 = __OFADD__(v40, 1);
    uint64_t v50 = (uint64_t)v40 + 1;
    if (v49)
    {
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    if (v50 >= v222) {
      goto LABEL_39;
    }
    unint64_t v51 = *(void *)(v218 + 8 * v50);
    if (!v51) {
      break;
    }
LABEL_23:
    uint64_t v234 = (v51 - 1) & v51;
    v235 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v50;
    unint64_t v48 = __clz(__rbit64(v51)) + (v50 << 6);
LABEL_24:
    sub_190D0F164(*(void *)(v231 + 56) + *((void *)v230 + 9) * v48, v46, type metadata accessor for IconStore.FileRenameMigration);
    sub_190D0F1CC(v46, v45, type metadata accessor for IconStore.FileRenameMigration);
    uint64_t v53 = v241;
    uint64_t v54 = v242;
    __swift_project_boxed_opaque_existential_1(&v240, v241);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 48))(v45, v45 + *(int *)(v233 + 20), v53, v54);
    if (v30)
    {
      os_log_t v55 = v219;
      if (qword_1E92AA158 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_190D41778();
      __swift_project_value_buffer(v56, (uint64_t)qword_1E92B3030);
      sub_190D0F164(v45, (uint64_t)v55, type metadata accessor for IconStore.FileRenameMigration);
      os_log_type_t v57 = v30;
      uint64_t v58 = v30;
      uint64_t v59 = sub_190D41758();
      os_log_type_t v60 = sub_190D41D28();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = v43;
        os_log_t v62 = v55;
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        v239[0] = v65;
        *(_DWORD *)uint64_t v63 = v227;
        uint64_t v66 = (uint64_t *)((char *)v62 + *(int *)(v233 + 24));
        uint64_t v67 = *v66;
        unint64_t v68 = v66[1];
        swift_bridgeObjectRetain();
        *(void *)(v63 + 4) = sub_190CCB3A8(v67, v68, v239);
        swift_bridgeObjectRelease();
        uint64_t v69 = (uint64_t)v62;
        uint64_t v46 = (uint64_t)v217;
        sub_190D38374(v69, type metadata accessor for IconStore.FileRenameMigration);
        *(_WORD *)(v63 + 12) = 2114;
        char v70 = v30;
        uint64_t v71 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v63 + 14) = v71;
        *uint64_t v64 = v71;

        _os_log_impl(&dword_190C6F000, v59, v60, "Failed to rename icon: %{public}s - %{public}@", (uint8_t *)v63, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v64, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v65, -1, -1);
        MEMORY[0x192FD7910](v63, -1, -1);

        uint64_t v43 = v61;
        uint64_t v45 = (uint64_t)v226;
        uint64_t v47 = (uint64_t)v226;
        uint64_t v44 = v228;
        unint64_t v42 = v232;
      }
      else
      {

        sub_190D38374((uint64_t)v55, type metadata accessor for IconStore.FileRenameMigration);
        uint64_t v45 = (uint64_t)v226;
        uint64_t v47 = (uint64_t)v226;
      }
      uint64_t result = sub_190D38374(v47, type metadata accessor for IconStore.FileRenameMigration);
      uint64_t v30 = 0;
    }
    else
    {
      if (qword_1E92AA158 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_190D41778();
      __swift_project_value_buffer(v72, (uint64_t)qword_1E92B3030);
      sub_190D0F164(v45, v44, type metadata accessor for IconStore.FileRenameMigration);
      sub_190D0F164(v45, v43, type metadata accessor for IconStore.FileRenameMigration);
      BOOL v73 = sub_190D41758();
      os_log_type_t v74 = sub_190D41D48();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        *(void *)&long long v211 = swift_slowAlloc();
        v239[0] = v211;
        *(_DWORD *)uint64_t v75 = v227;
        sub_190D38480(&qword_1E92AA0A8, MEMORY[0x1E4F276F0]);
        uint64_t v76 = sub_190D422B8();
        *(void *)(v75 + 4) = sub_190CCB3A8(v76, v77, v239);
        swift_bridgeObjectRelease();
        v236 = 0;
        sub_190D38374(v228, type metadata accessor for IconStore.FileRenameMigration);
        *(_WORD *)(v75 + 12) = 2082;
        uint64_t v46 = (uint64_t)v217;
        uint64_t v44 = v228;
        uint64_t v78 = sub_190D422B8();
        *(void *)(v75 + 14) = sub_190CCB3A8(v78, v79, v239);
        swift_bridgeObjectRelease();
        sub_190D38374(v43, type metadata accessor for IconStore.FileRenameMigration);
        _os_log_impl(&dword_190C6F000, v73, v74, "Renamed icon: %{public}s -> %{public}s", (uint8_t *)v75, 0x16u);
        uint64_t v80 = v211;
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v80, -1, -1);
        uint64_t v81 = v75;
        unint64_t v42 = v232;
        MEMORY[0x192FD7910](v81, -1, -1);

        uint64_t v82 = v45;
        uint64_t v30 = v236;
      }
      else
      {

        sub_190D38374(v43, type metadata accessor for IconStore.FileRenameMigration);
        sub_190D38374(v44, type metadata accessor for IconStore.FileRenameMigration);
        uint64_t v82 = v45;
      }
      uint64_t result = sub_190D38374(v82, type metadata accessor for IconStore.FileRenameMigration);
    }
    id v40 = v235;
    unint64_t v38 = v234;
  }
  uint64_t v52 = v50 + 1;
  if (v50 + 1 >= v222) {
    goto LABEL_39;
  }
  unint64_t v51 = *(void *)(v218 + 8 * v52);
  if (v51) {
    goto LABEL_22;
  }
  uint64_t v52 = v50 + 2;
  if (v50 + 2 >= v222) {
    goto LABEL_39;
  }
  unint64_t v51 = *(void *)(v218 + 8 * v52);
  if (v51) {
    goto LABEL_22;
  }
  uint64_t v52 = v50 + 3;
  if (v50 + 3 >= v222) {
    goto LABEL_39;
  }
  unint64_t v51 = *(void *)(v218 + 8 * v52);
  if (v51)
  {
LABEL_22:
    uint64_t v50 = v52;
    goto LABEL_23;
  }
  uint64_t v52 = v50 + 4;
  if (v50 + 4 < v222)
  {
    unint64_t v51 = *(void *)(v218 + 8 * v52);
    if (!v51)
    {
      while (1)
      {
        uint64_t v50 = v52 + 1;
        if (__OFADD__(v52, 1)) {
          break;
        }
        if (v50 >= v222) {
          goto LABEL_39;
        }
        unint64_t v51 = *(void *)(v218 + 8 * v50);
        ++v52;
        if (v51) {
          goto LABEL_23;
        }
      }
LABEL_149:
      __break(1u);
      goto LABEL_150;
    }
    goto LABEL_22;
  }
LABEL_39:
  swift_release();
  uint64_t v83 = *(void *)(v216 + 64);
  uint64_t v218 = v216 + 64;
  uint64_t v84 = 1 << *(unsigned char *)(v216 + 32);
  uint64_t v85 = -1;
  if (v84 < 64) {
    uint64_t v85 = ~(-1 << v84);
  }
  unint64_t v86 = v85 & v83;
  v209 = v238;
  v226 = (char *)((unint64_t)(v84 + 63) >> 6);
  v206[0] = v226 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v87 = 0;
  uint64_t v228 = 0x8000000190D5EC00;
  *(void *)&long long v88 = 136446722;
  long long v207 = v88;
  v206[1] = MEMORY[0x1E4FBC840] + 8;
  long long v211 = xmmword_190D4B450;
  while (2)
  {
    v236 = v30;
    if (v86)
    {
      v235 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((v86 - 1) & v86);
      uint64_t v234 = v87;
      unint64_t v89 = __clz(__rbit64(v86)) | (v87 << 6);
      uint64_t v90 = v215;
      unint64_t v91 = v225;
      uint64_t v92 = v220;
      goto LABEL_47;
    }
    uint64_t v100 = v87 + 1;
    if (__OFADD__(v87, 1)) {
      goto LABEL_146;
    }
    if (v100 >= (uint64_t)v226) {
      goto LABEL_60;
    }
    unint64_t v101 = *(void *)(v218 + 8 * v100);
    if (v101) {
      goto LABEL_51;
    }
    v87 += 2;
    if (v100 + 1 >= (uint64_t)v226)
    {
      uint64_t v234 = v100;
      goto LABEL_61;
    }
    unint64_t v101 = *(void *)(v218 + 8 * v87);
    if (v101) {
      goto LABEL_55;
    }
    if (v100 + 2 >= (uint64_t)v226)
    {
LABEL_60:
      uint64_t v234 = v87;
      goto LABEL_61;
    }
    unint64_t v101 = *(void *)(v218 + 8 * (v100 + 2));
    if (v101)
    {
      v100 += 2;
LABEL_51:
      uint64_t v90 = v215;
      unint64_t v91 = v225;
      uint64_t v92 = v220;
LABEL_52:
      v235 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((v101 - 1) & v101);
      unint64_t v89 = __clz(__rbit64(v101)) + (v100 << 6);
      uint64_t v234 = v100;
LABEL_47:
      uint64_t v93 = *(void *)(v216 + 56);
      uint64_t v94 = (void *)(*(void *)(v216 + 48) + 32 * v89);
      uint64_t v95 = v94[1];
      uint64_t v96 = v94[2];
      uint64_t v97 = v94[3];
      void *v91 = *v94;
      v91[1] = v95;
      v91[2] = v96;
      v91[3] = v97;
      uint64_t v98 = v93 + *(void *)(v90 + 72) * v89;
      uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA0F8);
      sub_190D0F164(v98, (uint64_t)v91 + *(int *)(v99 + 48), type metadata accessor for IconStore.FileVersionUpdateMigration);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v91, 0, 1, v99);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_63:
      sub_190D3830C((uint64_t)v91, (uint64_t)v92);
      uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA0F8);
      if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(*(void *)(v103 - 8) + 48))(v92, 1, v103) == 1)
      {
        swift_release();
        uint64_t v154 = *(void *)(v212 + 56);
        v226 = (char *)(v212 + 56);
        uint64_t v155 = 1 << *(unsigned char *)(v212 + 32);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v157 = 0;
        uint64_t v158 = -1;
        if (v155 < 64) {
          uint64_t v158 = ~(-1 << v155);
        }
        unint64_t v159 = v158 & v154;
        uint64_t v228 = (unint64_t)(v155 + 63) >> 6;
        uint64_t v160 = v214;
        v235 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v214 + 56);
        uint64_t v234 = v214 + 48;
        v232 = (void (**)(void))(v214 + 32);
        uint64_t v233 = v214 + 8;
        *(void *)&long long v156 = 136446210;
        long long v224 = v156;
        uint64_t v222 = MEMORY[0x1E4FBC840] + 8;
        id v161 = v236;
        v230 = (char *)(v214 + 16);
        while (1)
        {
          if (v159)
          {
            unint64_t v163 = __clz(__rbit64(v159));
            v159 &= v159 - 1;
            unint64_t v164 = v163 | (v157 << 6);
            uint64_t v165 = v229;
          }
          else
          {
            BOOL v49 = __OFADD__(v157++, 1);
            if (v49) {
              goto LABEL_147;
            }
            uint64_t v165 = v229;
            if (v157 >= v228)
            {
LABEL_142:
              (*v235)(v213, 1, 1, v229);
LABEL_143:
              swift_release();
              return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v240);
            }
            unint64_t v166 = *(void *)&v226[8 * v157];
            if (!v166)
            {
              uint64_t v167 = v157 + 1;
              if (v157 + 1 >= v228) {
                goto LABEL_142;
              }
              unint64_t v166 = *(void *)&v226[8 * v167];
              if (!v166)
              {
                uint64_t v167 = v157 + 2;
                if (v157 + 2 >= v228) {
                  goto LABEL_142;
                }
                unint64_t v166 = *(void *)&v226[8 * v167];
                if (!v166)
                {
                  uint64_t v167 = v157 + 3;
                  if (v157 + 3 >= v228) {
                    goto LABEL_142;
                  }
                  unint64_t v166 = *(void *)&v226[8 * v167];
                  if (!v166)
                  {
                    while (1)
                    {
                      uint64_t v157 = v167 + 1;
                      if (__OFADD__(v167, 1)) {
                        goto LABEL_148;
                      }
                      if (v157 >= v228) {
                        goto LABEL_142;
                      }
                      unint64_t v166 = *(void *)&v226[8 * v157];
                      ++v167;
                      if (v166) {
                        goto LABEL_125;
                      }
                    }
                  }
                }
              }
              uint64_t v157 = v167;
            }
LABEL_125:
            unint64_t v159 = (v166 - 1) & v166;
            unint64_t v164 = __clz(__rbit64(v166)) + (v157 << 6);
          }
          uint64_t v168 = *(void (**)(char *, unint64_t, uint64_t))(v160 + 16);
          uint64_t v169 = v213;
          v168(v213, *(void *)(v212 + 48) + *(void *)(v160 + 72) * v164, v165);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v169, 0, 1, v165);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v169, 1, v165) == 1) {
            goto LABEL_143;
          }
          v236 = (char *)v157;
          uint64_t v170 = v223;
          (*v232)();
          uint64_t v171 = v241;
          uint64_t v172 = v242;
          __swift_project_boxed_opaque_existential_1(&v240, v241);
          (*(void (**)(char *, uint64_t, uint64_t))(v172 + 56))(v170, v171, v172);
          if (v161)
          {
            v173 = v210;
            if (qword_1E92AA158 != -1) {
              swift_once();
            }
            uint64_t v174 = sub_190D41778();
            __swift_project_value_buffer(v174, (uint64_t)qword_1E92B3030);
            uint64_t v175 = v229;
            v168(v173, (unint64_t)v170, v229);
            id v176 = v161;
            id v177 = v161;
            v178 = sub_190D41758();
            os_log_type_t v179 = sub_190D41D28();
            if (os_log_type_enabled(v178, v179))
            {
              uint64_t v180 = swift_slowAlloc();
              uint64_t v181 = swift_slowAlloc();
              v182 = v173;
              unint64_t v231 = v159;
              v183 = (void *)v181;
              v225 = (char *)swift_slowAlloc();
              v239[0] = (uint64_t)v225;
              *(_DWORD *)uint64_t v180 = v227;
              sub_190D38480(&qword_1E92AA0A8, MEMORY[0x1E4F276F0]);
              uint64_t v184 = sub_190D422B8();
              *(void *)(v180 + 4) = sub_190CCB3A8(v184, v185, v239);
              swift_bridgeObjectRelease();
              v186 = *(void (**)(char *, uint64_t))v233;
              (*(void (**)(char *, uint64_t))v233)(v182, v175);
              *(_WORD *)(v180 + 12) = 2114;
              id v187 = v161;
              uint64_t v188 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)(v180 + 14) = v188;
              void *v183 = v188;

              _os_log_impl(&dword_190C6F000, v178, v179, "Failed to remove duplicate icon at: %{public}s - %{public}@", (uint8_t *)v180, 0x16u);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
              swift_arrayDestroy();
              v189 = v183;
              unint64_t v159 = v231;
              MEMORY[0x192FD7910](v189, -1, -1);
              v190 = v225;
              swift_arrayDestroy();
              MEMORY[0x192FD7910](v190, -1, -1);
              MEMORY[0x192FD7910](v180, -1, -1);

              uint64_t result = ((uint64_t (*)(char *, uint64_t))v186)(v223, v175);
            }
            else
            {

              uint64_t v162 = *(void (**)(char *, uint64_t))v233;
              (*(void (**)(char *, uint64_t))v233)(v173, v175);

              uint64_t result = ((uint64_t (*)(char *, uint64_t))v162)(v170, v175);
            }
            id v161 = 0;
            uint64_t v160 = v214;
          }
          else
          {
            v191 = v208;
            if (qword_1E92AA158 != -1) {
              swift_once();
            }
            uint64_t v192 = sub_190D41778();
            __swift_project_value_buffer(v192, (uint64_t)qword_1E92B3030);
            v193 = v191;
            v194 = v170;
            v195 = v191;
            uint64_t v196 = v229;
            v168(v193, (unint64_t)v194, v229);
            v197 = sub_190D41758();
            os_log_type_t v198 = sub_190D41D48();
            if (os_log_type_enabled(v197, v198))
            {
              uint64_t v199 = swift_slowAlloc();
              uint64_t v200 = swift_slowAlloc();
              v239[0] = v200;
              *(_DWORD *)uint64_t v199 = v224;
              sub_190D38480(&qword_1E92AA0A8, MEMORY[0x1E4F276F0]);
              uint64_t v201 = sub_190D422B8();
              *(void *)(v199 + 4) = sub_190CCB3A8(v201, v202, v239);
              swift_bridgeObjectRelease();
              unint64_t v231 = v159;
              v203 = *(void (**)(char *, uint64_t))v233;
              (*(void (**)(char *, uint64_t))v233)(v195, v196);
              _os_log_impl(&dword_190C6F000, v197, v198, "Removed duplicate icon at: %{public}s", (uint8_t *)v199, 0xCu);
              swift_arrayDestroy();
              uint64_t v204 = v200;
              id v161 = 0;
              MEMORY[0x192FD7910](v204, -1, -1);
              MEMORY[0x192FD7910](v199, -1, -1);

              uint64_t result = ((uint64_t (*)(char *, uint64_t))v203)(v223, v196);
              unint64_t v159 = v231;
            }
            else
            {

              v205 = *(void (**)(char *, uint64_t))v233;
              (*(void (**)(char *, uint64_t))v233)(v195, v196);
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v205)(v223, v196);
            }
            uint64_t v160 = v214;
          }
          uint64_t v157 = (uint64_t)v236;
        }
      }
      uint64_t v105 = *v92;
      uint64_t v104 = v92[1];
      uint64_t v107 = (uint64_t)v92[2];
      uint64_t v106 = (uint64_t)v92[3];
      sub_190D0F1CC((uint64_t)v92 + *(int *)(v103 + 48), (uint64_t)v42, type metadata accessor for IconStore.FileVersionUpdateMigration);
      uint64_t v108 = v241;
      uint64_t v109 = v242;
      unint64_t v110 = __swift_project_boxed_opaque_existential_1(&v240, v241);
      v237 = v105;
      v238[0] = v104;
      uint64_t v233 = v107;
      v238[1] = v107;
      v238[2] = v106;
      sub_190D30EB0((uint64_t *)&v237, (uint64_t)v110, v108, v109, (uint64_t)v239);
      uint64_t v111 = v239[4];
      uint64_t v112 = v239[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v113 = (uint64_t *)((char *)v42 + *(int *)(v224 + 20));
      if (!v113[1])
      {
        if (v112) {
          uint64_t v114 = v111;
        }
        else {
          uint64_t v114 = 48;
        }
        if (v112) {
          unint64_t v115 = v112;
        }
        else {
          unint64_t v115 = 0xE100000000000000;
        }
        swift_bridgeObjectRetain();
        if (v112) {
          goto LABEL_74;
        }
        goto LABEL_77;
      }
      uint64_t v114 = *v113;
      unint64_t v115 = v113[1];
      if (!v112) {
        goto LABEL_77;
      }
LABEL_74:
      if (v114 == v111 && v112 == v115 || (sub_190D422D8() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unint64_t v42 = v232;
        sub_190D38374((uint64_t)v232, type metadata accessor for IconStore.FileVersionUpdateMigration);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
LABEL_77:
        v230 = v105;
        uint64_t v116 = (uint64_t)v104;
        uint64_t v118 = v241;
        uint64_t v117 = v242;
        __swift_project_boxed_opaque_existential_1(&v240, v241);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v239[0] = 0xD00000000000001DLL;
        v239[1] = v228;
        v237 = (char *)v114;
        v238[0] = v115;
        uint64_t v119 = v236;
        (*(void (**)(void (**)(void), uint64_t *, char **, void, void, void, uint64_t, uint64_t))(v117 + 32))(v232, v239, &v237, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v118, v117);
        v236 = v119;
        if (v119)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v120 = v116;
          if (qword_1E92AA158 != -1) {
            swift_once();
          }
          uint64_t v121 = sub_190D41778();
          __swift_project_value_buffer(v121, (uint64_t)qword_1E92B3030);
          id v122 = v236;
          long long v123 = v236;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v124 = v122;
          uint64_t v125 = sub_190D41758();
          os_log_type_t v126 = sub_190D41D28();
          if (os_log_type_enabled(v125, v126))
          {
            uint64_t v127 = swift_slowAlloc();
            os_log_t v219 = (os_log_t)swift_slowAlloc();
            uint64_t v222 = swift_slowAlloc();
            v239[0] = v222;
            *(_DWORD *)uint64_t v127 = v227;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA88);
            uint64_t inited = swift_initStackObject();
            uint64_t v129 = inited;
            *(_OWORD *)(inited + 16) = v211;
            uint64_t v130 = v233;
            if (!v106) {
              uint64_t v130 = 0;
            }
            *(void *)(inited + 32) = v130;
            *(void *)(inited + 40) = v106;
            *(void *)(inited + 48) = v230;
            *(void *)(inited + 56) = v120;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_190CE1A2C(v129, &v237);
            v243 = v237;
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
            sub_190CD4928((unint64_t *)&qword_1E92AAAB0, (uint64_t *)&unk_1E92AAAA0);
            uint64_t v131 = sub_190D418E8();
            unint64_t v133 = v132;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            *(void *)(v127 + 4) = sub_190CCB3A8(v131, v133, v239);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v127 + 12) = 2114;
            id v134 = v122;
            uint64_t v135 = (objc_class *)_swift_stdlib_bridgeErrorToNSError();
            *(void *)(v127 + 14) = v135;
            os_log_t v136 = v219;
            v219->isa = v135;

            _os_log_impl(&dword_190C6F000, v125, v126, "Failed to save icon version for: %{public}s - %{public}@", (uint8_t *)v127, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
            swift_arrayDestroy();
            MEMORY[0x192FD7910](v136, -1, -1);
            uint64_t v137 = v222;
            swift_arrayDestroy();
            MEMORY[0x192FD7910](v137, -1, -1);
            MEMORY[0x192FD7910](v127, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          unint64_t v42 = v232;
          uint64_t result = sub_190D38374((uint64_t)v232, type metadata accessor for IconStore.FileVersionUpdateMigration);
          uint64_t v30 = 0;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
        uint64_t v138 = v116;
        if (qword_1E92AA158 != -1) {
          swift_once();
        }
        uint64_t v139 = sub_190D41778();
        __swift_project_value_buffer(v139, (uint64_t)qword_1E92B3030);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v140 = sub_190D41758();
        os_log_type_t v141 = sub_190D41D48();
        int v142 = v141;
        BOOL v143 = os_log_type_enabled(v140, v141);
        uint64_t v144 = (uint64_t)v230;
        if (v143)
        {
          uint64_t v145 = swift_slowAlloc();
          os_log_t v219 = v140;
          uint64_t v146 = v145;
          uint64_t v222 = swift_slowAlloc();
          v239[0] = v222;
          *(_DWORD *)uint64_t v146 = v207;
          v217 = (char *)(v146 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v147 = sub_190D028E4(v144, v138, v233, v106);
          LODWORD(v233) = v142;
          unint64_t v149 = v148;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v237 = (char *)sub_190CCB3A8(v147, v149, v239);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v146 + 12) = 2082;
          if (v112) {
            uint64_t v150 = v111;
          }
          else {
            uint64_t v150 = 1701736302;
          }
          if (v112) {
            unint64_t v151 = v112;
          }
          else {
            unint64_t v151 = 0xE400000000000000;
          }
          swift_bridgeObjectRetain();
          v237 = (char *)sub_190CCB3A8(v150, v151, v239);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v146 + 22) = 2082;
          swift_bridgeObjectRetain();
          v237 = (char *)sub_190CCB3A8(v114, v115, v239);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          os_log_t v152 = v219;
          _os_log_impl(&dword_190C6F000, v219, (os_log_type_t)v233, "Migrated icon version for: %{public}s. %{public}s -> %{public}s", (uint8_t *)v146, 0x20u);
          uint64_t v153 = v222;
          swift_arrayDestroy();
          MEMORY[0x192FD7910](v153, -1, -1);
          MEMORY[0x192FD7910](v146, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        unint64_t v42 = v232;
        uint64_t result = sub_190D38374((uint64_t)v232, type metadata accessor for IconStore.FileVersionUpdateMigration);
      }
      uint64_t v30 = v236;
LABEL_44:
      uint64_t v87 = v234;
      unint64_t v86 = (unint64_t)v235;
      continue;
    }
    break;
  }
  uint64_t v87 = v100 + 3;
  if (v100 + 3 >= (uint64_t)v226)
  {
    uint64_t v234 = v100 + 2;
LABEL_61:
    unint64_t v91 = v225;
    uint64_t v92 = v220;
LABEL_62:
    uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA0F8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v91, 1, 1, v102);
    v235 = 0;
    goto LABEL_63;
  }
  unint64_t v101 = *(void *)(v218 + 8 * v87);
  if (v101)
  {
LABEL_55:
    uint64_t v100 = v87;
    goto LABEL_51;
  }
  uint64_t v90 = v215;
  unint64_t v91 = v225;
  uint64_t v92 = v220;
  while (1)
  {
    uint64_t v100 = v87 + 1;
    if (__OFADD__(v87, 1)) {
      break;
    }
    if (v100 >= (uint64_t)v226)
    {
      uint64_t v234 = v206[0];
      goto LABEL_62;
    }
    unint64_t v101 = *(void *)(v218 + 8 * v100);
    ++v87;
    if (v101) {
      goto LABEL_52;
    }
  }
LABEL_150:
  __break(1u);
  return result;
}

uint64_t sub_190D30EB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v22 = sub_190D41748();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_190D415D8();
  uint64_t v10 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v16 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v20 = v16;
  uint64_t v21 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v13, v14, v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D41738();
  sub_190D41528();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  v27[0] = 0xD00000000000001DLL;
  v27[1] = 0x8000000190D5EC00;
  (*(void (**)(long long *__return_ptr, char *, void *, void, void, void, void, uint64_t))(v24 + 40))(&v28, v12, v27, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v26);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
  long long v17 = v28;
  *(void *)a5 = v21;
  *(void *)(a5 + 8) = v14;
  *(void *)(a5 + 16) = v20;
  *(void *)(a5 + 24) = v15;
  *(_OWORD *)(a5 + 32) = v17;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> IconStore.addIcons(for:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = *((void *)a1._rawValue + 2);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    do
    {
      if (!*(v4 - 2))
      {
        uint64_t v9 = *(v4 - 5);
        uint64_t v10 = *(v4 - 4);
        uint64_t v11 = *v4;
        uint64_t v19 = *(v4 - 3);
        uint64_t v20 = *(v4 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        aBlock[0] = v5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190CDDE44(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = aBlock[0];
        }
        unint64_t v7 = *(void *)(v5 + 16);
        unint64_t v6 = *(void *)(v5 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_190CDDE44((char *)(v6 > 1), v7 + 1, 1);
          uint64_t v5 = aBlock[0];
        }
        *(void *)(v5 + 16) = v7 + 1;
        uint64_t v8 = (void *)(v5 + 48 * v7);
        v8[4] = v9;
        uint64_t v8[5] = v10;
        v8[6] = v19;
        v8[7] = 0;
        unsigned char v8[8] = v20;
        v8[9] = v11;
      }
      v4 += 6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v18;
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (*(void *)(v5 + 16)) {
      goto LABEL_11;
    }
LABEL_16:
    swift_release();
    return;
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_16;
  }
LABEL_11:
  uint64_t v22 = v3;
  uint64_t v12 = *(NSObject **)(v1 + 24);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v1;
  v13[3] = v5;
  _DWORD v13[4] = &v22;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_190D379C8;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_190CD0740;
  uint64_t aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CCA8F0;
  uint64_t aBlock[3] = &block_descriptor_10;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    if (*(void *)(v22 + 16))
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = sub_190D2CC80(v16);
      swift_bridgeObjectRelease();
      aBlock[0] = v17;
      sub_190D417D8();
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_190D31408(void *a1, uint64_t a2, char **a3)
{
  uint64_t v4 = a1[7];
  uint64_t v5 = a1[8];
  __swift_project_boxed_opaque_existential_1(a1 + 4, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 16))(v48, v4, v5);
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (unint64_t i = (uint64_t *)(a2 + 72); ; i += 6)
    {
      uint64_t v8 = *(i - 5);
      uint64_t v9 = *(i - 4);
      uint64_t v10 = *(i - 3);
      uint64_t v11 = *(i - 2);
      uint64_t v12 = *i;
      uint64_t v39 = v6;
      uint64_t v40 = *(i - 1);
      uint64_t v13 = (uint64_t)v49;
      uint64_t v14 = (uint64_t)v50;
      uint64_t v15 = __swift_project_boxed_opaque_existential_1(v48, (uint64_t)v49);
      v41[0] = v8;
      v41[1] = v9;
      v41[2] = v10;
      v41[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_190D30EB0(v41, (uint64_t)v15, v13, v14, (uint64_t)&v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v46;
      uint64_t v17 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17)
      {
        if (!v12)
        {
          swift_bridgeObjectRelease();
LABEL_15:
          uint64_t v19 = v49;
          uint64_t v20 = v50;
          uint64_t v21 = __swift_project_boxed_opaque_existential_1(v48, (uint64_t)v49);
          uint64_t v42 = v8;
          unint64_t v43 = v9;
          uint64_t v44 = v10;
          uint64_t v45 = v11;
          uint64_t v46 = v40;
          uint64_t v47 = v12;
          sub_190D31BA4(&v42, v21, v19, v20);
          if (qword_1E92AA158 != -1) {
            swift_once();
          }
          uint64_t v22 = sub_190D41778();
          __swift_project_value_buffer(v22, (uint64_t)qword_1E92B3030);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v23 = sub_190D41758();
          os_log_type_t v24 = sub_190D41D48();
          if (os_log_type_enabled(v23, v24))
          {
            os_log_type_t type = v24;
            uint64_t v25 = (uint8_t *)swift_slowAlloc();
            uint64_t v26 = swift_slowAlloc();
            v41[0] = v26;
            *(_DWORD *)uint64_t v25 = 136446210;
            uint64_t v37 = v26;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v27 = sub_190D028E4(v8, v9, v10, v11);
            unint64_t v29 = v28;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v42 = v27;
            unint64_t v43 = v29;
            sub_190D41A68();
            swift_bridgeObjectRetain();
            sub_190D41A68();
            swift_bridgeObjectRelease();
            uint64_t v42 = sub_190CCB3A8(v42, v43, v41);
            sub_190D41E48();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_190C6F000, v23, type, "Added icon: %{public}s", v25, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x192FD7910](v37, -1, -1);
            MEMORY[0x192FD7910](v25, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v30 = *a3;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a3 = v30;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v30 = sub_190CDDC68(0, *((void *)v30 + 2) + 1, 1, v30);
            *a3 = v30;
          }
          unint64_t v33 = *((void *)v30 + 2);
          unint64_t v32 = *((void *)v30 + 3);
          if (v33 >= v32 >> 1)
          {
            uint64_t v30 = sub_190CDDC68((char *)(v32 > 1), v33 + 1, 1, v30);
            *a3 = v30;
          }
          *((void *)v30 + 2) = v33 + 1;
          uint64_t v34 = &v30[48 * v33];
          *((void *)v34 + 4) = v8;
          *((void *)v34 + 5) = v9;
          *((void *)v34 + 6) = v10;
          *((void *)v34 + 7) = v11;
          *((void *)v34 + 8) = v40;
          *((void *)v34 + 9) = v12;
          goto LABEL_5;
        }
        if (v16 == v40 && v17 == v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        char v18 = sub_190D422D8();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v12)
      {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
LABEL_5:
      uint64_t v6 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
}

void sub_190D31BA4(uint64_t *a1, NSObject *a2, NSObject *a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v82 = a4;
  os_log_t v86 = a3;
  uint64_t v90 = a2;
  v97[2] = *MEMORY[0x1E4F143B8];
  uint64_t v87 = (char *)sub_190D41748();
  uint64_t v83 = (void (**)(void, uint64_t))*((void *)v87 - 1);
  MEMORY[0x1F4188790](v87);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_190D415D8();
  uint64_t v85 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  uint64_t v77 = a1[4];
  uint64_t v80 = a1[5];
  BSDispatchQueueAssert();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F6F248]);
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v89 = objc_msgSend(v15, sel_initWithBundleIdentifier_, v16);

  uint64_t v81 = v5;
  uint64_t v17 = (uint64_t)v5 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v78 = v12;
  uint64_t v18 = v12;
  uint64_t v19 = (uint64_t)v82;
  uint64_t v79 = v13;
  sub_190CDC274(v18, v11, v13, v14);
  sub_190D41738();
  sub_190D41528();
  swift_bridgeObjectRelease();
  uint64_t v20 = v8;
  os_log_t v21 = v86;
  ((void (**)(char *, uint64_t))v83)[1](v20, (uint64_t)v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(char *, os_log_t, uint64_t))(v19 + 56);
  uint64_t v87 = v10;
  id v23 = v84;
  v22(v10, v21, v19);
  os_log_type_t v24 = v23;
  if (v23)
  {

    os_log_type_t v24 = 0;
  }
  char v91 = 0;
  uint64_t v25 = sub_190D41598();
  char v26 = (*(uint64_t (**)(uint64_t))(v19 + 16))(v25);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0 || (v91 & 1) == 0)
  {
    sub_190D3A44C(v17, 1, 0, (uint64_t)v21, v19);
    if (v24)
    {
      if (qword_1E92AA158 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_190D41778();
      __swift_project_value_buffer(v27, (uint64_t)qword_1E92B3030);
      swift_retain();
      id v28 = v24;
      swift_retain();
      id v29 = v24;
      uint64_t v30 = sub_190D41758();
      os_log_type_t v31 = sub_190D41D28();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        os_log_t v33 = (os_log_t)swift_slowAlloc();
        os_log_t v92 = v33;
        *(_DWORD *)uint64_t v32 = 136446466;
        sub_190D38480(&qword_1E92AA0A8, MEMORY[0x1E4F276F0]);
        uint64_t v34 = sub_190D422B8();
        v97[0] = sub_190CCB3A8(v34, v35, (uint64_t *)&v92);
        sub_190D41E48();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2114;
        id v36 = v24;
        uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
        v97[0] = v37;
        sub_190D41E48();
        unint64_t v38 = v90;
        v90->isa = (Class)v37;

        _os_log_impl(&dword_190C6F000, v30, v31, "Error creating image folder at %{public}s: %{public}@", (uint8_t *)v32, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v38, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v33, -1, -1);
        MEMORY[0x192FD7910](v32, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      swift_willThrow();
LABEL_21:

      (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v88);
      return;
    }
  }
  id v39 = objc_msgSend(self, sel_imageDescriptorNamed_, *MEMORY[0x1E4F6F2C0]);
  objc_msgSend(v39, sel_setShouldApplyMask_, 0);
  id v40 = objc_msgSend(v89, sel_prepareImageForDescriptor_, v39);
  if (!v40
    || (long long v41 = v40, v42 = objc_msgSend(v40, sel_CGImage), v41, !v42))
  {
    if (qword_1E92AA158 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_190D41778();
    __swift_project_value_buffer(v50, (uint64_t)qword_1E92B3030);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v51 = sub_190D41758();
    os_log_type_t v52 = sub_190D41D28();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      os_log_t v86 = v51;
      uint64_t v54 = (uint8_t *)v53;
      uint64_t v90 = swift_slowAlloc();
      os_log_t v92 = v90;
      id v84 = v39;
      *(_DWORD *)uint64_t v54 = 136446210;
      uint64_t v83 = (void (**)(void, uint64_t))(v54 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_190D028E4(v78, v11, v79, v14);
      unint64_t v57 = v56;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97[0] = sub_190CCB3A8(v55, v57, (uint64_t *)&v92);
      sub_190D41E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v58 = v86;
      _os_log_impl(&dword_190C6F000, v86, v52, "Failed to generate icon image for: %{public}s", v54, 0xCu);
      uint64_t v59 = v90;
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v59, -1, -1);
      MEMORY[0x192FD7910](v54, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_21;
  }
  id v84 = v39;
  uint64_t v76 = v11;
  uint64_t v43 = v14;
  uint64_t v44 = v81[12];
  uint64_t v45 = v81[13];
  uint64_t v46 = __swift_project_boxed_opaque_existential_1(v81 + 9, v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190D4B930;
  *(void *)(inited + 32) = v42;
  os_log_t v92 = (os_log_t)inited;
  sub_190D41C08();
  unint64_t v48 = (unint64_t)v92;
  os_log_t v92 = 0;
  unint64_t v93 = 0;
  uint64_t v94 = 0;
  char v96 = 0x80;
  int v95 = 0;
  uint64_t v83 = (void (**)(void, uint64_t))v42;
  uint64_t v49 = (uint64_t)v87;
  sub_190D37D48(v48, (uint64_t)v87, (uint64_t)&v92, (uint64_t)v46, v44, v45);
  if (v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v60 = v43;
    if (qword_1E92AA158 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_190D41778();
    __swift_project_value_buffer(v61, (uint64_t)qword_1E92B3030);
    swift_bridgeObjectRetain();
    uint64_t v62 = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v63 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v64 = v24;
    uint64_t v65 = sub_190D41758();
    os_log_type_t v66 = sub_190D41D28();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      os_log_t v86 = (os_log_t)swift_slowAlloc();
      os_log_t v92 = v86;
      *(_DWORD *)uint64_t v67 = 136446466;
      uint64_t v90 = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_190D028E4(v78, v62, v79, v60);
      unint64_t v70 = v69;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97[0] = sub_190CCB3A8(v68, v70, (uint64_t *)&v92);
      sub_190D41E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2114;
      id v71 = v24;
      uint64_t v72 = _swift_stdlib_bridgeErrorToNSError();
      v97[0] = v72;
      sub_190D41E48();
      BOOL v73 = v82;
      void *v82 = v72;

      _os_log_impl(&dword_190C6F000, v65, v66, "Error writing image data for %{public}s: %{public}@", (uint8_t *)v67, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v73, -1, -1);
      os_log_t v74 = v86;
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v74, -1, -1);
      MEMORY[0x192FD7910](v67, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v88);
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_t v92 = (os_log_t)0xD00000000000001DLL;
    unint64_t v93 = 0x8000000190D5EC00;
    v97[0] = v77;
    v97[1] = v80;
    (*(void (**)(uint64_t, os_log_t *, void *, void, void, void, os_log_t, uint64_t))(v19 + 32))(v49, &v92, v97, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v86, v19);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v49, v88);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> IconStore.removeIcons(for:)(Swift::OpaquePointer a1)
{
  uint64_t v101 = sub_190D41748();
  uint64_t v3 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v100 = (char *)&rawValue - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_190D415D8();
  uint64_t v5 = *(void *)(v103 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v103);
  uint64_t v88 = (char *)&rawValue - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&rawValue - v8;
  uint64_t v10 = v1[7];
  uint64_t v11 = v1[8];
  uint64_t v102 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 4, v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 16))(&v116, v10, v11);
  uint64_t v12 = *((void *)a1._rawValue + 2);
  if (v12)
  {
    uint64_t v99 = (char *)v102 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
    char v91 = v115;
    uint64_t v98 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v97 = (void (**)(char *, uint64_t))(v5 + 8);
    os_log_t v86 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    rawValue = a1._rawValue;
    uint64_t v13 = (uint64_t *)((char *)a1._rawValue + 56);
    *(void *)&long long v14 = 136446210;
    long long v90 = v14;
    uint64_t v89 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v14 = 136446466;
    long long v87 = v14;
    os_log_t v92 = v9;
    while (1)
    {
      uint64_t v108 = v13;
      uint64_t v109 = v12;
      uint64_t v16 = *(v13 - 3);
      uint64_t v15 = *(v13 - 2);
      uint64_t v18 = (uint64_t *)*(v13 - 1);
      uint64_t v17 = *v13;
      uint64_t v19 = v117;
      uint64_t v20 = v118;
      os_log_t v21 = __swift_project_boxed_opaque_existential_1(&v116, v117);
      uint64_t v112 = v16;
      v113[0] = v16;
      v113[1] = v15;
      v113[2] = (uint64_t)v18;
      uint64_t v111 = v18;
      v113[3] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_190D30EB0(v113, (uint64_t)v21, v19, v20, (uint64_t)&v114);
      uint64_t v22 = v115[0];
      uint64_t v105 = v114;
      uint64_t v23 = v115[2];
      uint64_t v106 = v115[1];
      unint64_t v24 = v115[4];
      unint64_t v107 = v115[3];
      if (qword_1E92AA158 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_190D41778();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1E92B3030);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v104 = v26;
      uint64_t v27 = sub_190D41758();
      os_log_type_t v28 = sub_190D41D48();
      int v29 = v28;
      BOOL v30 = os_log_type_enabled(v27, v28);
      unint64_t v110 = v24;
      if (v30)
      {
        uint64_t v31 = swift_slowAlloc();
        os_log_t v95 = v27;
        uint64_t v32 = (uint8_t *)v31;
        uint64_t v96 = swift_slowAlloc();
        v113[0] = v96;
        int v94 = v29;
        *(_DWORD *)uint64_t v32 = v90;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_190D028E4(v105, v22, v106, v23);
        uint64_t v34 = v23;
        unint64_t v36 = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v114 = v33;
        v115[0] = v36;
        sub_190D41A68();
        unint64_t v93 = v32 + 4;
        swift_bridgeObjectRetain();
        sub_190D41A68();
        swift_bridgeObjectRelease();
        uint64_t v114 = sub_190CCB3A8(v114, v115[0], v113);
        uint64_t v37 = v92;
        sub_190D41E48();
        swift_bridgeObjectRelease_n();
        uint64_t v38 = v34;
        uint64_t v9 = v37;
        swift_bridgeObjectRelease_n();
        uint64_t v39 = v22;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v40 = v95;
        _os_log_impl(&dword_190C6F000, v95, (os_log_type_t)v94, "Removing icon: %{public}s", v32, 0xCu);
        uint64_t v41 = v96;
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v41, -1, -1);
        MEMORY[0x192FD7910](v32, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v38 = v23;
        swift_bridgeObjectRelease_n();
        uint64_t v39 = v22;
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_190CDC274(v112, v15, (uint64_t)v111, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v42 = v100;
      sub_190D41738();
      sub_190D41528();
      swift_bridgeObjectRelease();
      (*v98)(v42, v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = v118;
      __swift_project_boxed_opaque_existential_1(&v116, v117);
      uint64_t v44 = sub_190D41598();
      char v45 = (*(uint64_t (**)(uint64_t))(v43 + 8))(v44);
      swift_bridgeObjectRelease();
      if (v45)
      {
        uint64_t v46 = v117;
        uint64_t v47 = v118;
        __swift_project_boxed_opaque_existential_1(&v116, v117);
        id v48 = v119;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 56))(v9, v46, v47);
        id v119 = v48;
        if (v48)
        {
          id v49 = v119;
          id v50 = v119;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v51 = v49;
          os_log_type_t v52 = sub_190D41758();
          os_log_type_t v53 = sub_190D41D28();
          int v54 = v53;
          if (os_log_type_enabled(v52, v53))
          {
            uint64_t v55 = swift_slowAlloc();
            unint64_t v56 = (uint64_t *)swift_slowAlloc();
            id v57 = v119;
            uint64_t v111 = v56;
            uint64_t v112 = swift_slowAlloc();
            v113[0] = v112;
            *(_DWORD *)uint64_t v55 = v87;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v58 = sub_190D028E4(v105, v39, v106, v38);
            LODWORD(v106) = v54;
            uint64_t v59 = v58;
            unint64_t v61 = v60;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v114 = v59;
            v115[0] = v61;
            sub_190D41A68();
            unint64_t v107 = v39;
            swift_bridgeObjectRetain();
            sub_190D41A68();
            swift_bridgeObjectRelease();
            uint64_t v114 = sub_190CCB3A8(v114, v115[0], v113);
            sub_190D41E48();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v55 + 12) = 2114;
            id v62 = v57;
            uint64_t v63 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v114 = v63;
            sub_190D41E48();
            id v64 = v111;
            uint64_t *v111 = v63;

            _os_log_impl(&dword_190C6F000, v52, (os_log_type_t)v106, "Failed to remove icon: %{public}s - %{public}@", (uint8_t *)v55, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA5E0);
            swift_arrayDestroy();
            MEMORY[0x192FD7910](v64, -1, -1);
            uint64_t v65 = v112;
            swift_arrayDestroy();
            MEMORY[0x192FD7910](v65, -1, -1);
            MEMORY[0x192FD7910](v55, -1, -1);

            os_log_type_t v66 = v57;
          }
          else
          {

            id v80 = v119;
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            os_log_type_t v66 = v80;
          }

          uint64_t v9 = v92;
          (*v97)(v92, v103);
          id v119 = 0;
        }
        else
        {
          uint64_t v67 = v88;
          (*v86)(v88, v9, v103);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_190D41758();
          os_log_type_t v69 = sub_190D41D48();
          if (!os_log_type_enabled(v68, v69))
          {

            uint64_t v83 = *v97;
            uint64_t v84 = v103;
            (*v97)(v67, v103);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v83(v9, v84);
            uint64_t v81 = v108;
            uint64_t v82 = v109;
            goto LABEL_18;
          }
          uint64_t v70 = swift_slowAlloc();
          uint64_t v112 = swift_slowAlloc();
          v113[0] = v112;
          *(_DWORD *)uint64_t v70 = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v71 = sub_190D028E4(v105, v39, v106, v38);
          unint64_t v73 = v72;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v114 = v71;
          v115[0] = v73;
          sub_190D41A68();
          swift_bridgeObjectRetain();
          sub_190D41A68();
          swift_bridgeObjectRelease();
          uint64_t v114 = sub_190CCB3A8(v114, v115[0], v113);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v70 + 12) = 2082;
          sub_190D38480(&qword_1E92AA0A8, MEMORY[0x1E4F276F0]);
          os_log_t v74 = v88;
          uint64_t v75 = v103;
          uint64_t v76 = sub_190D422B8();
          uint64_t v114 = sub_190CCB3A8(v76, v77, v113);
          sub_190D41E48();
          swift_bridgeObjectRelease();
          uint64_t v78 = *v97;
          (*v97)(v74, v75);
          _os_log_impl(&dword_190C6F000, v68, v69, "Removed icon for: %{public}s (%{public}s)", (uint8_t *)v70, 0x16u);
          uint64_t v79 = v112;
          swift_arrayDestroy();
          uint64_t v9 = v92;
          MEMORY[0x192FD7910](v79, -1, -1);
          MEMORY[0x192FD7910](v70, -1, -1);

          v78(v9, v75);
        }
      }
      else
      {
        (*v97)(v9, v103);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v81 = v108;
      uint64_t v82 = v109;
LABEL_18:
      uint64_t v13 = v81 + 4;
      uint64_t v12 = v82 - 1;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v116);
}

uint64_t IconStore.ingestIcon(url:with:)(uint64_t a1, uint64_t *a2)
{
  void (*v66)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  os_log_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  os_log_t v97;
  NSObject *v98;
  void (*v99)(uint64_t, uint64_t);
  _OWORD *v100;
  uint64_t v101;
  unsigned char v102[12];
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  os_log_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned char *v111;
  NSObject *v112;
  uint64_t v113;
  unint64_t v114;
  void *v115;
  unsigned char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121[4];
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  void v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  uint64_t v117 = a1;
  uint64_t v5 = sub_190D41748();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v102[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v132 = sub_190D415D8();
  uint64_t v120 = *(void *)(v132 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v132);
  uint64_t v116 = &v102[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v102[-v16];
  uint64_t v18 = a2[3];
  if (v18)
  {
    uint64_t v118 = v15;
    id v119 = v14;
    uint64_t v113 = v3;
    uint64_t v19 = *a2;
    uint64_t v20 = a2[1];
    uint64_t v21 = a2[2];
    uint64_t v108 = (os_log_t)a2[4];
    uint64_t v114 = a2[5];
    unint64_t v115 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v110 = v19;
    uint64_t v109 = v21;
    sub_190CDC274(v19, v20, v21, v18);
    sub_190D41738();
    sub_190D41528();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1E92AA158 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_190D41778();
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1E92B3030);
    uint64_t v24 = v120;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16);
    uint64_t v26 = v132;
    v25(v118, v117, v132);
    v25((uint64_t)v119, (uint64_t)v17, v26);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v105 = v23;
    uint64_t v27 = sub_190D41758();
    os_log_type_t v28 = sub_190D41D48();
    int v29 = v28;
    uint64_t v112 = v27;
    BOOL v30 = os_log_type_enabled(v27, v28);
    uint64_t v31 = v17;
    uint64_t v106 = v18;
    unint64_t v107 = v20;
    if (v30)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      uint64_t v129 = v104;
      *(_DWORD *)uint64_t v32 = 136446722;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_190D028E4(v110, v20, v109, v18);
      uint64_t v103 = v29;
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v122 = v33;
      long long v123 = v35;
      uint64_t v111 = v17;
      uint64_t v36 = v132;
      sub_190D41A68();
      swift_bridgeObjectRetain();
      sub_190D41A68();
      swift_bridgeObjectRelease();
      id v122 = sub_190CCB3A8(v122, v123, &v129);
      sub_190D41E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      sub_190D38480(&qword_1E92AA0A8, MEMORY[0x1E4F276F0]);
      uint64_t v37 = v118;
      uint64_t v38 = sub_190D422B8();
      id v122 = sub_190CCB3A8(v38, v39, &v129);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      os_log_t v40 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v40(v37, v36);
      *(_WORD *)(v32 + 22) = 2082;
      uint64_t v41 = v119;
      uint64_t v42 = v36;
      uint64_t v31 = v111;
      uint64_t v43 = sub_190D422B8();
      id v122 = sub_190CCB3A8(v43, v44, &v129);
      sub_190D41E48();
      swift_bridgeObjectRelease();
      id v119 = v40;
      v40((uint64_t)v41, v42);
      char v45 = v112;
      _os_log_impl(&dword_190C6F000, v112, (os_log_type_t)v103, "Ingesting icon: %{public}s from url: %{public}s -> %{public}s", (uint8_t *)v32, 0x20u);
      uint64_t v46 = v104;
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v46, -1, -1);
      MEMORY[0x192FD7910](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      uint64_t v48 = v132;
      v47(v118, v132);
      id v49 = v119;
      id v119 = v47;
      v47((uint64_t)v49, v48);
    }
    uint64_t v50 = v113;
    id v51 = v115 + 4;
    uint64_t v52 = v115[7];
    uint64_t v53 = v115[8];
    __swift_project_boxed_opaque_existential_1(v115 + 4, v52);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v53 + 16))(&v129, v52, v53);
    uint64_t v54 = (uint64_t)v116;
    sub_190D41558();
    uint64_t v55 = v130;
    uint64_t v56 = v131;
    __swift_project_boxed_opaque_existential_1(&v129, v130);
    sub_190D3A44C(v54, 1, 0, v55, v56);
    if (v50)
    {
      uint64_t v62 = v132;
      uint64_t v63 = v119;
      v119(v54, v132);
      v63((uint64_t)v31, v62);
    }
    else
    {
      uint64_t v57 = v130;
      uint64_t v58 = v131;
      __swift_project_boxed_opaque_existential_1(&v129, v130);
      uint64_t v59 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v58 + 56);
      uint64_t v111 = v31;
      v59(v31, v57, v58);
      uint64_t v60 = v130;
      uint64_t v61 = v131;
      __swift_project_boxed_opaque_existential_1(&v129, v130);
      (*(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v61 + 48))(v117, v111, v60, v61);
      uint64_t v64 = v115[7];
      uint64_t v65 = v115[8];
      __swift_project_boxed_opaque_existential_1(v51, v64);
      os_log_type_t v66 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v65 + 8);
      uint64_t v67 = v107;
      swift_bridgeObjectRetain();
      uint64_t v68 = v106;
      swift_bridgeObjectRetain();
      v66(v126, v64, v65);
      os_log_type_t v69 = v127;
      uint64_t v70 = v128;
      uint64_t v71 = __swift_project_boxed_opaque_existential_1(v126, v127);
      v121[0] = v110;
      v121[1] = v67;
      v121[2] = v109;
      v121[3] = v68;
      sub_190D30EB0(v121, (uint64_t)v71, v69, v70, (uint64_t)&v122);
      unint64_t v72 = v124;
      unint64_t v73 = v125;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v126);
      os_log_t v74 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = v108;
      uint64_t v76 = v114;
      unint64_t v77 = sub_190D379FC(v72, v73, (uint64_t)v108, v114);
      if (v78)
      {
        uint64_t v79 = v78;
        uint64_t v117 = v72;
        uint64_t v118 = v77;
        id v80 = v130;
        uint64_t v81 = v131;
        __swift_project_boxed_opaque_existential_1(&v129, v130);
        id v122 = 0xD00000000000001DLL;
        long long v123 = 0x8000000190D5EC00;
        v126[0] = v75;
        v126[1] = v76;
        (*(void (**)(unsigned char *, uint64_t *, void *, void, void, void, uint64_t, uint64_t))(v81 + 32))(v111, &v122, v126, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v80, v81);
        uint64_t v85 = v107;
        swift_bridgeObjectRetain_n();
        os_log_t v86 = v74;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v87 = sub_190D41758();
        uint64_t v88 = sub_190D41D48();
        uint64_t v89 = v88;
        if (os_log_type_enabled(v87, v88))
        {
          long long v90 = swift_slowAlloc();
          uint64_t v113 = 0;
          char v91 = v90;
          uint64_t v112 = swift_slowAlloc();
          id v122 = (uint64_t)v112;
          *(_DWORD *)char v91 = 136446722;
          uint64_t v108 = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_log_t v92 = sub_190D028E4(v110, v85, v109, v86);
          LODWORD(v105) = v89;
          int v94 = v93;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v126[0] = sub_190CCB3A8(v92, v94, &v122);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v91 + 12) = 2082;
          if (v73) {
            os_log_t v95 = v117;
          }
          else {
            os_log_t v95 = 1701736302;
          }
          if (v73) {
            uint64_t v96 = v73;
          }
          else {
            uint64_t v96 = 0xE400000000000000;
          }
          swift_bridgeObjectRetain();
          v126[0] = sub_190CCB3A8(v95, v96, &v122);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v91 + 22) = 2082;
          swift_bridgeObjectRetain();
          v126[0] = sub_190CCB3A8(v118, v79, &v122);
          sub_190D41E48();
          swift_bridgeObjectRelease_n();
          uint64_t v97 = v108;
          _os_log_impl(&dword_190C6F000, v108, (os_log_type_t)v105, "Ingested updated icon version for: %{public}s. %{public}s -> %{public}s", (uint8_t *)v91, 0x20u);
          uint64_t v98 = v112;
          swift_arrayDestroy();
          MEMORY[0x192FD7910](v98, -1, -1);
          MEMORY[0x192FD7910](v91, -1, -1);

          uint64_t v82 = v116;
          uint64_t v84 = v85;
          uint64_t v83 = v106;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v82 = v116;
          uint64_t v84 = v85;
          uint64_t v83 = v86;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v82 = v116;
        uint64_t v83 = v74;
        uint64_t v84 = v107;
      }
      uint64_t v99 = v119;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA1B8);
      uint64_t v100 = (_OWORD *)swift_allocObject();
      v100[1] = xmmword_190D4B270;
      *((void *)v100 + 4) = v110;
      *((void *)v100 + 5) = v84;
      *((void *)v100 + 6) = v109;
      *((void *)v100 + 7) = v83;
      id v122 = (uint64_t)v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_190D417D8();
      swift_bridgeObjectRelease();
      uint64_t v101 = v132;
      v99((uint64_t)v82, v132);
      v99((uint64_t)v111, v101);
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v129);
  }
  return result;
}

uint64_t IconStore.iconVersion(for:)(long long *a1)
{
  long long v11 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v17, v4, v5);
  uint64_t v6 = v18;
  uint64_t v7 = v19;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v17, v18);
  long long v12 = v11;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  sub_190D30EB0((uint64_t *)&v12, (uint64_t)v8, v6, v7, (uint64_t)v15);
  uint64_t v9 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v9;
}

void sub_190D3481C(Swift::OpaquePointer a1)
{
}

void sub_190D34834(Swift::OpaquePointer a1)
{
}

uint64_t sub_190D3484C(uint64_t a1, uint64_t *a2)
{
  return IconStore.ingestIcon(url:with:)(a1, a2);
}

uint64_t IconStore.iconUpdatePublisher(filterPredicate:)(char *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA168);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  v10[1] = *(void *)(v1 + 16);
  *(unsigned char *)(swift_allocObject() + 16) = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA890);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA178);
  sub_190CD4928(&qword_1E92AA170, (uint64_t *)&unk_1E92AA890);
  sub_190D41828();
  swift_release();
  swift_release();
  sub_190CD4928(&qword_1E92AA160, &qword_1E92AA168);
  uint64_t v8 = sub_190D41818();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

void sub_190D34A30(uint64_t *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    unint64_t v6 = 0;
    if (a2) {
      uint64_t v7 = 0x65746F6D6572;
    }
    else {
      uint64_t v7 = 0x6C61636F6CLL;
    }
    unint64_t v8 = 0xE600000000000000;
    if (!a2) {
      unint64_t v8 = 0xE500000000000000;
    }
    unint64_t v35 = v8;
    uint64_t v36 = v7;
    uint64_t v9 = v4 + 56;
    uint64_t v31 = v5 - 1;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    char v38 = a2;
    uint64_t v37 = v4;
    uint64_t v39 = v5;
    uint64_t v32 = v4 + 56;
    while (1)
    {
      uint64_t v10 = (unint64_t *)(v9 + 32 * v6);
      unint64_t v11 = v6;
      while (1)
      {
        if (v11 >= *(void *)(v4 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v12 = *(v10 - 3);
        uint64_t v13 = *(v10 - 2);
        uint64_t v14 = *(v10 - 1);
        unint64_t v15 = *v10;
        if (a2) {
          break;
        }
        if (!v15) {
          goto LABEL_24;
        }
LABEL_17:
        uint64_t v16 = qword_1E92AA158;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_190D41778();
        __swift_project_value_buffer(v17, (uint64_t)qword_1E92B3030);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v18 = sub_190D41758();
        os_log_type_t v19 = sub_190D41D18();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = swift_slowAlloc();
          uint64_t v21 = swift_slowAlloc();
          uint64_t v40 = v21;
          *(_DWORD *)uint64_t v20 = 136315394;
          *(void *)(v20 + 4) = sub_190CCB3A8(v36, v35, &v40);
          swift_bridgeObjectRelease();
          *(_WORD *)(v20 + 12) = 2080;
          if (v15)
          {
            unint64_t v22 = v15;
          }
          else
          {
            uint64_t v14 = 0x6C61636F6CLL;
            unint64_t v22 = 0xE500000000000000;
          }
          swift_bridgeObjectRetain();
          *(void *)(v20 + 14) = sub_190CCB3A8(v14, v22, &v40);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_190C6F000, v18, v19, "Icon update not published - predicate: %s vs source: %s", (uint8_t *)v20, 0x16u);
          swift_arrayDestroy();
          uint64_t v23 = v21;
          uint64_t v4 = v37;
          MEMORY[0x192FD7910](v23, -1, -1);
          uint64_t v24 = v20;
          a2 = v38;
          MEMORY[0x192FD7910](v24, -1, -1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        ++v11;
        v10 += 4;
        if (v39 == v11) {
          goto LABEL_31;
        }
      }
      if (a2 == 1 && !v15) {
        goto LABEL_17;
      }
LABEL_24:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_190CDDE24(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v25 = v41;
      }
      unint64_t v28 = *(void *)(v25 + 16);
      unint64_t v27 = *(void *)(v25 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_190CDDE24((void *)(v27 > 1), v28 + 1, 1);
        uint64_t v25 = v41;
      }
      unint64_t v6 = v11 + 1;
      *(void *)(v25 + 16) = v28 + 1;
      uint64_t v34 = v25;
      int v29 = (void *)(v25 + 32 * v28);
      id v29[4] = v12;
      v29[5] = v13;
      v29[6] = v14;
      v29[7] = v15;
      uint64_t v9 = v32;
      a2 = v38;
      if (v31 == v11) {
        goto LABEL_31;
      }
    }
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v30 = v34;
  if (!*(void *)(v34 + 16))
  {
    swift_release();
    uint64_t v30 = 0;
  }
  *a3 = v30;
}

BOOL IconStore.iconExists(for:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v33, v7, v8);
  uint64_t v9 = v34;
  uint64_t v10 = v35;
  unint64_t v11 = __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  uint64_t v29 = v6;
  sub_190D30EB0(&v26, (uint64_t)v11, v9, v10, (uint64_t)&v30);
  uint64_t v12 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v13 = v2[12];
    uint64_t v14 = v2[13];
    unint64_t v15 = __swift_project_boxed_opaque_existential_1(v2 + 9, v13);
    uint64_t v26 = v3;
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    uint64_t v29 = v6;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v17 = sub_190D41E18();
    uint64_t v18 = *(void *)(v17 - 8);
    MEMORY[0x1F4188790](v17);
    uint64_t v20 = (char *)&v26 - v19;
    sub_190D35070(&v26, (uint64_t)v15, v13, v14, (uint64_t)&v26 - v19);
    uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, AssociatedTypeWitness);
    BOOL v23 = v22 != 1;
    if (v22 == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      long long v30 = 0u;
      long long v31 = 0u;
    }
    else
    {
      *((void *)&v31 + 1) = AssociatedTypeWitness;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
      (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(boxed_opaque_existential_1, v20, AssociatedTypeWitness);
    }
    sub_190D38424((uint64_t)&v30, (uint64_t *)&unk_1E92AAA90);
  }
  else
  {
    BOOL v23 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  return v23;
}

uint64_t sub_190D35070@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  uint64_t v32 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v25 = (char *)v24 - v7;
  uint64_t v8 = sub_190D41748();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_190D415D8();
  uint64_t v29 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24[1] = v17;
  v24[2] = v15;
  sub_190CDC274(v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D41738();
  sub_190D41528();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v19 = v25;
  (*(void (**)(char *, uint64_t))(v26 + 48))(v14, v27);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v12);
  uint64_t v21 = v30;
  uint64_t v20 = v31;
  uint64_t v22 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v32, v19, v31);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v20);
}

uint64_t IconStore.iconURL(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_190D41748();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  v16[0] = v9;
  v16[1] = v8;
  _OWORD v16[2] = v11;
  id v16[3] = v10;
  if (IconStore.iconExists(for:)(v16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_190CDC274(v9, v8, v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190D41738();
    sub_190D41528();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = sub_190D415D8();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_190D415D8();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a2, 1, 1, v14);
  }
}

uint64_t IconStore.icon(for:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a2;
  uint64_t v7 = sub_190D41858();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_190D41898();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[3];
  uint64_t v17 = (void *)swift_allocObject();
  id v17[2] = v13;
  void v17[3] = v14;
  v17[4] = v15;
  v17[5] = v16;
  uint64_t v18 = v22;
  void v17[6] = v4;
  v17[7] = v18;
  unsigned char v17[8] = a3;
  aBlock[4] = sub_190D37B28;
  uint64_t aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_190CED068;
  uint64_t aBlock[3] = &block_descriptor_12;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_190D41868();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_190D38480((unint64_t *)&unk_1E92AAA30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAA40);
  sub_190CD4928(&qword_1E92AAA50, (uint64_t *)&unk_1E92AAA40);
  sub_190D41E88();
  MEMORY[0x192FD6250](0, v12, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

void sub_190D35B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint8_t *a5, void (*a6)(void), uint64_t a7)
{
  if (qword_1E92AA158 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_190D41778();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E92B3030);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_190D41758();
  os_log_type_t v14 = sub_190D41D48();
  uint64_t v65 = a1;
  if (os_log_type_enabled(v13, v14))
  {
    buf = a5;
    uint64_t v15 = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(void *)&long long aBlock = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_190D028E4(v15, a2, a3, a4);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    a5 = buf;
    sub_190CCB3A8(v21, v20, (uint64_t *)&aBlock);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v13, v14, "Resolving icon for: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v17, -1, -1);
    MEMORY[0x192FD7910](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v22 = objc_msgSend(self, sel_imageDescriptorNamed_, *MEMORY[0x1E4F6F2C0]);
  objc_msgSend(v22, sel_setShape_, 0);
  if (a4)
  {
    uint64_t v23 = *((void *)a5 + 12);
    uint64_t v24 = *((void *)a5 + 13);
    uint64_t v25 = __swift_project_boxed_opaque_existential_1((void *)a5 + 9, v23);
    uint64_t v26 = v65;
    *(void *)&long long aBlock = v65;
    *((void *)&aBlock + 1) = a2;
    uint64_t v68 = (void (*)(uint64_t, void *))a3;
    os_log_type_t v69 = (void *)a4;
    id v27 = sub_190D36544(&aBlock, v22, (uint64_t)v25, v23, v24);
    if (v27)
    {
      id v28 = v27;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v29 = sub_190D41758();
      os_log_type_t v30 = sub_190D41D48();
      if (os_log_type_enabled(v29, v30))
      {
        id v63 = v22;
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        *(void *)&long long aBlock = v60;
        *(_DWORD *)uint64_t v31 = 136446210;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_190D028E4(v65, a2, a3, a4);
        unint64_t v34 = v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_190CCB3A8(v32, v34, (uint64_t *)&aBlock);
        sub_190D41E48();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        id v22 = v63;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_190C6F000, v29, v30, "Resolved remotely generated icon for: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FD7910](v60, -1, -1);
        MEMORY[0x192FD7910](v31, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      id v47 = objc_msgSend(v28, sel_CGImage);
      if (v47)
      {
        uint64_t v48 = v47;
        a6();

        id v28 = v22;
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_29;
    }
LABEL_14:
    id v28 = objc_msgSend(self, sel_genericApplicationIcon);
    char v45 = (void *)swift_allocObject();
    v45[2] = v26;
    v45[3] = a2;
    v45[4] = a3;
    v45[5] = a4;
    v45[6] = a6;
    v45[7] = a7;
    uint64_t v70 = sub_190D38284;
    uint64_t v71 = v45;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v68 = sub_190D36B28;
    os_log_type_t v69 = &block_descriptor_24;
    uint64_t v46 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_getCGImageForImageDescriptor_completion_, v22, v46);

    _Block_release(v46);
LABEL_27:

    return;
  }
  id v35 = objc_allocWithZone(MEMORY[0x1E4F6F248]);
  swift_bridgeObjectRetain();
  uint64_t v26 = v65;
  uint64_t v36 = (void *)sub_190D41948();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v35, sel_initWithBundleIdentifier_, v36);

  id v38 = objc_msgSend(v37, sel_prepareImageForDescriptor_, v22);
  if (!v38) {
    goto LABEL_14;
  }
  id v28 = v38;
  if ((objc_msgSend(v28, sel_placeholder) & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v49 = sub_190D41758();
    os_log_type_t v50 = sub_190D41D48();
    if (os_log_type_enabled(v49, v50))
    {
      id v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(void *)&long long aBlock = v62;
      *(_DWORD *)id v51 = 136446210;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_190D028E4(v65, a2, a3, 0);
      unint64_t v54 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_190CCB3A8(v52, v54, (uint64_t *)&aBlock);
      sub_190D41E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_190C6F000, v49, v50, "Resolved locally generated icon for: %{public}s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD7910](v62, -1, -1);
      MEMORY[0x192FD7910](v51, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v57 = objc_msgSend(v28, sel_CGImage);
    if (!v57) {
      goto LABEL_30;
    }
    uint64_t v58 = v57;
    a6();

LABEL_26:
    goto LABEL_27;
  }

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v28 = v28;
  uint64_t v39 = sub_190D41758();
  os_log_type_t v40 = sub_190D41D48();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(void *)&long long aBlock = v61;
    *(_DWORD *)uint64_t v41 = 136446210;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_190D028E4(v65, a2, a3, 0);
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190CCB3A8(v42, v44, (uint64_t *)&aBlock);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v39, v40, "Resolved placeholder icon for: %{public}s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD7910](v61, -1, -1);
    MEMORY[0x192FD7910](v41, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v55 = objc_msgSend(v28, sel_CGImage);
  if (v55)
  {
    uint64_t v56 = v55;
    a6();

    goto LABEL_26;
  }
LABEL_29:

  __break(1u);
LABEL_30:

  __break(1u);
}

id sub_190D36544(long long *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v33 = a2;
  uint64_t v34 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_190D41E18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = *((void *)a1 + 3);
  if (!v17) {
    return 0;
  }
  uint64_t v18 = *((void *)a1 + 2);
  long long v35 = *a1;
  uint64_t v36 = v18;
  uint64_t v37 = v17;
  sub_190D35070((uint64_t *)&v35, v34, a4, a5, (uint64_t)v13);
  uint64_t v19 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return 0;
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  id v22 = v16;
  v21(v16, v13, AssociatedTypeWitness);
  id v20 = (id)(*(uint64_t (**)(void, char *, uint64_t, uint64_t))(a5 + 56))(0, v16, a4, a5);
  if (v20)
  {
    id v23 = v33;
    objc_msgSend(v33, sel_setShouldApplyMask_, 1);
    objc_msgSend(v23, sel_setShape_, 1);
    id v24 = v20;
    objc_msgSend(v23, sel_scale);
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F6F1E8]), sel_initWithCGImage_scale_, v24, v25);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA6B0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_190D4B930;
    *(void *)(v27 + 32) = v26;
    *(void *)&long long v35 = v27;
    sub_190D41C08();
    id v28 = objc_allocWithZone(MEMORY[0x1E4F6F248]);
    sub_190C72C5C(0, &qword_1E92AC580);
    id v29 = v26;
    os_log_type_t v30 = (void *)sub_190D41BD8();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v28, sel_initWithImages_, v30);

    id v20 = objc_msgSend(v31, sel_prepareImageForDescriptor_, v23);
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, AssociatedTypeWitness);
  return v20;
}

void sub_190D368D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  if (qword_1E92AA158 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_190D41778();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E92B3030);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_190D41758();
  os_log_type_t v14 = sub_190D41D48();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v21 = a1;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    id v22 = a6;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_190D028E4(a2, a3, a4, a5);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190CCB3A8(v17, v19, &v23);
    sub_190D41E48();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    a1 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C6F000, v13, v14, "Resolved generic icon for: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v16;
    a6 = v22;
    MEMORY[0x192FD7910](v20, -1, -1);
    MEMORY[0x192FD7910](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (a1) {
    a6(a1);
  }
  else {
    __break(1u);
  }
}

void sub_190D36B28(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t IconStore.iconSHA256Hash(for:)(long long *a1)
{
  long long v11 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v15, v4, v5);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v15, v16);
  long long v12 = v11;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  uint64_t v9 = sub_190D36C58((uint64_t *)&v12, (uint64_t)v8, v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v9;
}

uint64_t sub_190D36C58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  uint64_t v5 = sub_190D41748();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_190D415D8();
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  long long v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CDC274(v13, v12, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190D41738();
  uint64_t v16 = v26;
  sub_190D41528();
  uint64_t v17 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v29._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v29._object = (void *)0x8000000190D5EBE0;
  (*(void (**)(unint64_t *__return_ptr, char *, Swift::String *, void, void, void, void, uint64_t, uint64_t))(v16 + 40))(&v30, v11, &v29, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v17, v16);
  if (v31)
  {
    uint64_t countAndFlagsBits = v30;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  }
  else
  {
    uint64_t v19 = v9;
    uint64_t v20 = v25;
    Swift::String v22 = URL.sha256()();
    if (v21)
    {

      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
      return 0;
    }
    else
    {
      uint64_t countAndFlagsBits = v22._countAndFlagsBits;
      swift_bridgeObjectRetain();
      unint64_t v30 = 0xD00000000000001CLL;
      unint64_t v31 = 0x8000000190D5EBE0;
      Swift::String v29 = v22;
      (*(void (**)(char *, unint64_t *, Swift::String *, void, void, void, uint64_t, uint64_t))(v16 + 32))(v11, &v30, &v29, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1D8], MEMORY[0x1E4FBB1A8], v17, v16);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
      swift_bridgeObjectRelease();
    }
  }
  return countAndFlagsBits;
}

uint64_t sub_190D36FBC(char *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA168);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  v10[1] = *(void *)(*(void *)v1 + 16);
  *(unsigned char *)(swift_allocObject() + 16) = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA890);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA178);
  sub_190CD4928(&qword_1E92AA170, (uint64_t *)&unk_1E92AA890);
  sub_190D41828();
  swift_release();
  swift_release();
  sub_190CD4928(&qword_1E92AA160, &qword_1E92AA168);
  uint64_t v8 = sub_190D41818();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

BOOL sub_190D3718C(uint64_t *a1)
{
  return IconStore.iconExists(for:)(a1);
}

uint64_t sub_190D371B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return IconStore.iconURL(for:)(a1, a2);
}

uint64_t sub_190D371D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return IconStore.icon(for:completion:)(a1, a2, a3);
}

uint64_t sub_190D371FC(long long *a1)
{
  long long v11 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 32), v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v17, v4, v5);
  uint64_t v6 = v18;
  uint64_t v7 = v19;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v17, v18);
  long long v12 = v11;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  sub_190D30EB0((uint64_t *)&v12, (uint64_t)v8, v6, v7, (uint64_t)v15);
  uint64_t v9 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v9;
}

uint64_t sub_190D372D4(long long *a1)
{
  long long v11 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 32), v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v15, v4, v5);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v15, v16);
  long long v12 = v11;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  uint64_t v9 = sub_190D36C58((uint64_t *)&v12, (uint64_t)v8, v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v9;
}

unint64_t sub_190D37398(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_190D41B18();
  }
  __break(1u);
  return result;
}

uint64_t sub_190D373E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a8;
  uint64_t v25 = a2;
  uint64_t v27 = a3;
  uint64_t v26 = sub_190D41D78();
  uint64_t v13 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_190D41D58();
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = sub_190D41898();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v33 = a5;
  uint64_t v34 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  uint64_t v30 = a6;
  uint64_t v31 = v24;
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v19, v25, a6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA890);
  swift_allocObject();
  *(void *)(a4 + 16) = sub_190D417E8();
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  sub_190D41868();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_190D38480((unint64_t *)&qword_1E92AAAE0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  sub_190CD4928((unint64_t *)&qword_1E92AAAD0, (uint64_t *)&unk_1E92AAAC0);
  sub_190D41E88();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCC58], v26);
  *(void *)(a4 + 24) = sub_190D41DA8();
  sub_190CCAB54(&v32, a4 + 32);
  sub_190CCAB54(&v29, a4 + 72);
  uint64_t v20 = a4 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  uint64_t v21 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, v27, v21);
  return a4;
}

uint64_t sub_190D37768(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x192FD5A20]())
  {
    uint64_t v4 = *(int *)(type metadata accessor for IconStore.FileVersionUpdateMigration(0) + 20);
    uint64_t v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    uint64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_190D422D8() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_190D377E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v13 = *(void *)(a6 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, a6);
  return sub_190D373E4((uint64_t)v20, (uint64_t)v16, a3, v21, a5, a6, v23, v24);
}

uint64_t sub_190D37988()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_190D379C8()
{
  return sub_190D31408(*(void **)(v0 + 16), *(void *)(v0 + 24), *(char ***)(v0 + 32));
}

uint64_t sub_190D379D4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_190D379FC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v7 = a4;
    if (!a2)
    {
LABEL_15:
      swift_bridgeObjectRetain();
      return a3;
    }
  }
  else
  {
    if (a2) {
      a3 = a1;
    }
    else {
      a3 = 48;
    }
    if (a2) {
      unint64_t v7 = a2;
    }
    else {
      unint64_t v7 = 0xE100000000000000;
    }
    swift_bridgeObjectRetain();
    if (!a2) {
      goto LABEL_15;
    }
  }
  if ((a3 != a1 || v7 != a2) && (sub_190D422D8() & 1) == 0) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_190D37AC0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

void sub_190D37AD0(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_190D34A30(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_190D37AD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_190D37B28()
{
  sub_190D35B40(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(uint8_t **)(v0 + 48), *(void (**)(void))(v0 + 56), *(void *)(v0 + 64));
}

uint64_t dispatch thunk of IconRetrieving.iconUpdatePublisher(filterPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IconRetrieving.iconExists(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of IconRetrieving.iconURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of IconRetrieving.icon(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of IconRetrieving.iconVersion(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of IconRetrieving.iconSHA256Hash(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of IconStoring.addIcons(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IconStoring.removeIcons(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of IconStoring.ingestIcon(url:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_190D37C2C()
{
  return type metadata accessor for IconStore(0);
}

uint64_t type metadata accessor for IconStore(uint64_t a1)
{
  return sub_190D382D4(a1, (uint64_t *)&unk_1E92AA820);
}

uint64_t sub_190D37C54()
{
  uint64_t result = sub_190D415D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for IconStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IconStore);
}

uint64_t dispatch thunk of IconStore.__allocating_init(fileManagerFactory:imageIOPrimitives:iconsFolderURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_190D37D38()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_190D37D48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v53 = a1;
  uint64_t v11 = sub_190D41748();
  unint64_t v51 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = *(void *)(a3 + 8);
  unint64_t v54 = *(void *)a3;
  uint64_t v19 = *(void *)(a3 + 16);
  LODWORD(v16) = *(unsigned __int8 *)(a3 + 28);
  unint64_t v20 = *(unsigned int *)(a3 + 24) | ((unint64_t)*(unsigned __int8 *)(a3 + 28) << 32);
  unsigned int v21 = v16 >> 6;
  uint64_t v62 = a5;
  uint64_t v49 = v22;
  uint64_t v50 = v15;
  uint64_t v48 = v19;
  uint64_t v47 = v18;
  if (v16 >> 6)
  {
    if (v21 == 1)
    {
      uint64_t v23 = a2;
      unint64_t v24 = 0xEB00000000676570;
      uint64_t v25 = 0x6A2E63696C627570;
      unint64_t v26 = v53;
    }
    else
    {
      uint64_t v46 = v11;
      uint64_t v23 = a2;
      unint64_t v24 = 0xEA0000000000676ELL;
      uint64_t v25 = 0x702E63696C627570;
      unint64_t v26 = v53;
      if (!(v19 | v18 | v54) && v20 == 0x8000000000)
      {
        id v55 = v17;
        sub_190D41738();
        uint64_t v25 = sub_190D41718();
        unint64_t v24 = v27;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v46);
        uint64_t v17 = v55;
      }
    }
  }
  else
  {
    uint64_t v23 = a2;
    unint64_t v24 = 0xED00007874612E65;
    uint64_t v25 = 0x6C7070612E6D6F63;
    unint64_t v26 = v53;
  }
  unint64_t v51 = v26 >> 62;
  if (v26 >> 62)
  {
    id v55 = v17;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_190D420B8();
    swift_bridgeObjectRelease();
    uint64_t v17 = v55;
  }
  else
  {
    uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v29 = v23;
  uint64_t v30 = v17;
  uint64_t v31 = v52;
  (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v52 + 24))(v29, v25, v24, v28, v62, v52);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  id v55 = v30;
  swift_bridgeObjectRelease();
  uint64_t v46 = 0;
  if (v21 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA090);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190D4B270;
    long long v35 = (void *)*MEMORY[0x1E4F2FC18];
    *(void *)(inited + 64) = MEMORY[0x1E4FBC958];
    unint64_t v36 = v54;
    *(void *)(inited + 32) = v35;
    *(void *)(inited + 40) = v36;
    id v37 = v35;
    unint64_t v33 = sub_190CD0E6C(inited);
    goto LABEL_16;
  }
  if (!v21)
  {
    unint64_t v56 = v54;
    uint64_t v57 = v47;
    int v58 = v48;
    __int16 v59 = WORD2(v48);
    int v60 = v20;
    char v61 = BYTE4(v20) & 1;
    unint64_t v33 = sub_190CD0BCC();
LABEL_16:
    unint64_t v54 = v33;
    goto LABEL_18;
  }
  unint64_t v54 = 0;
LABEL_18:
  uint64_t v38 = v31;
  if (v51)
  {
    unint64_t v40 = v53;
    swift_bridgeObjectRetain();
    uint64_t result = sub_190D420B8();
    uint64_t v39 = result;
    if (!result)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v45 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 40))(v55, v62, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v45, v50);
    }
  }
  else
  {
    uint64_t v39 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v40 = v53;
    uint64_t result = swift_bridgeObjectRetain();
    if (!v39) {
      goto LABEL_28;
    }
  }
  if (v39 >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = *(void (**)(id, char *, unint64_t, uint64_t, uint64_t))(v31 + 32);
    do
    {
      if ((v40 & 0xC000000000000001) != 0) {
        id v43 = (id)MEMORY[0x192FD6450](v41, v40);
      }
      else {
        id v43 = *(id *)(v40 + 8 * v41 + 32);
      }
      unint64_t v44 = v43;
      ++v41;
      v42(v43, v55, v54, v62, v31);
    }
    while (v39 != v41);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_190D3823C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_190D38284(uint64_t a1)
{
  sub_190D368D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(void))(v1 + 48));
}

uint64_t type metadata accessor for IconStore.FileVersionUpdateMigration(uint64_t a1)
{
  return sub_190D382D4(a1, (uint64_t *)&unk_1E92AA138);
}

uint64_t type metadata accessor for IconStore.FileRenameMigration(uint64_t a1)
{
  return sub_190D382D4(a1, (uint64_t *)&unk_1E92AA120);
}

uint64_t sub_190D382D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_190D3830C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190D38374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_190D383D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_190D38424(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_190D38480(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_190D384C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_190D415D8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_190D385C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_190D415D8();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3866C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190D3871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190D387E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_190D38884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190D38938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_190D3894C);
}

uint64_t sub_190D3894C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_190D38A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_190D38A24);
}

uint64_t sub_190D38A24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_190D415D8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_190D38AE4()
{
  uint64_t result = sub_190D415D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190D38B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_190D415D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_190D38C54(uint64_t a1)
{
  uint64_t v2 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D38CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190D38D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190D38DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_190D38E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190D38EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_190D38F0C);
}

uint64_t sub_190D38F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190D415D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_190D38FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_190D38FF0);
}

uint64_t sub_190D38FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_190D415D8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_190D390B0()
{
  uint64_t result = sub_190D415D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t KeybagLockState.description.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x64656B636F6C6E75;
      break;
    case 2:
      unint64_t result = 0x64656B636F6CLL;
      break;
    case 3:
      unint64_t result = 0x676E696B636F6CLL;
      break;
    case 4:
      unint64_t result = 0x64656C6261736964;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x5065636172476E69;
      break;
    case 7:
      unint64_t result = 0x7472657373416E69;
      break;
    case 8:
      unint64_t result = 0x6C6E556F69426E69;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Bool __swiftcall KeybagLockState.isEffectivelyLocked(for:)(ChronoServices::KeybagLockState::LockPolicy a1)
{
  int v2 = *v1;
  if ((v2 - 2) < 2 || v2 == 0) {
    return 1;
  }
  if (v2 == 7) {
    return (*(unsigned char *)a1 ^ 1) & 1;
  }
  return 0;
}

ChronoServices::KeybagLockState::LockPolicy_optional __swiftcall KeybagLockState.LockPolicy.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *unint64_t v1 = v2;
  return (ChronoServices::KeybagLockState::LockPolicy_optional)rawValue;
}

uint64_t KeybagLockState.LockPolicy.rawValue.getter()
{
  return *v0;
}

uint64_t KeybagLockState.hash(into:)()
{
  return sub_190D423A8();
}

BOOL static KeybagLockState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t KeybagLockState.hashValue.getter()
{
  return sub_190D423E8();
}

unint64_t sub_190D39380()
{
  unint64_t result = qword_1E92AC588;
  if (!qword_1E92AC588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC588);
  }
  return result;
}

unint64_t sub_190D393D8()
{
  unint64_t result = qword_1E92AC590;
  if (!qword_1E92AC590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC590);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for KeybagLockState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for KeybagLockState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D3958CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeybagLockState()
{
  return &type metadata for KeybagLockState;
}

unsigned char *storeEnumTagSinglePayload for KeybagLockState.LockPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D39690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeybagLockState.LockPolicy()
{
  return &type metadata for KeybagLockState.LockPolicy;
}

ChronoServices::ControlsDidChangeXPCData __swiftcall ControlsDidChangeXPCData.init(modifiedControls:)(ChronoServices::ControlsDidChangeXPCData modifiedControls)
{
  v1->modifiedControls._rawValue = modifiedControls.modifiedControls._rawValue;
  return modifiedControls;
}

unint64_t sub_190D396D0()
{
  return 0xD000000000000010;
}

uint64_t sub_190D396EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_190D39E3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_190D39718(uint64_t a1)
{
  unint64_t v2 = sub_190D3991C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190D39754(uint64_t a1)
{
  unint64_t v2 = sub_190D3991C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlsDidChangeXPCData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D3991C();
  sub_190D42418();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA900);
  sub_190D39B5C(&qword_1E92AA250, &qword_1E92AA658);
  sub_190D42268();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_190D3991C()
{
  unint64_t result = qword_1E92AA8E8;
  if (!qword_1E92AA8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA8E8);
  }
  return result;
}

unint64_t sub_190D39970()
{
  unint64_t result = qword_1E92AA910;
  if (!qword_1E92AA910)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AA910);
  }
  return result;
}

uint64_t ControlsDidChangeXPCData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA7F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D3991C();
  sub_190D42408();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA900);
    sub_190D39B5C(&qword_1E92AA7F0, &qword_1E92AA908);
    sub_190D421B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_190D39B5C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92AA900);
    sub_190D39BDC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190D39BDC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_190D39970();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190D39C20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ControlsDidChangeXPCData.init(from:)(a1, a2);
}

uint64_t sub_190D39C38(void *a1)
{
  return ControlsDidChangeXPCData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ControlsDidChangeXPCData()
{
  return &type metadata for ControlsDidChangeXPCData;
}

unsigned char *storeEnumTagSinglePayload for ControlsDidChangeXPCData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x190D39CFCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlsDidChangeXPCData.CodingKeys()
{
  return &type metadata for ControlsDidChangeXPCData.CodingKeys;
}

unint64_t sub_190D39D38()
{
  unint64_t result = qword_1E92AC598;
  if (!qword_1E92AC598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC598);
  }
  return result;
}

unint64_t sub_190D39D90()
{
  unint64_t result = qword_1E92AA8F8;
  if (!qword_1E92AA8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA8F8);
  }
  return result;
}

unint64_t sub_190D39DE8()
{
  unint64_t result = qword_1E92AA8F0;
  if (!qword_1E92AA8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA8F0);
  }
  return result;
}

uint64_t sub_190D39E3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000190D5EC50)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_190D422D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

BOOL static DeviceClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceClass.hash(into:)()
{
  return sub_190D423A8();
}

uint64_t DeviceClass.hashValue.getter()
{
  return sub_190D423E8();
}

uint64_t sub_190D39F4C()
{
  uint64_t v0 = type metadata accessor for DefaultPlatformProvider();
  uint64_t result = swift_allocObject();
  qword_1EB2807C0 = v0;
  unk_1EB2807C8 = &protocol witness table for DefaultPlatformProvider;
  qword_1EB2807A8 = result;
  return result;
}

uint64_t static DefaultPlatformProvider.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB2807D8 != -1) {
    swift_once();
  }
  return sub_190CCAAF0((uint64_t)&qword_1EB2807A8, a1);
}

void sub_190D3A000(unsigned char *a1@<X8>)
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    char v3 = v2;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if ((deviceClassNumber - 1) > 8) {
      char v5 = 0;
    }
    else {
      char v5 = byte_190D4E32A[deviceClassNumber - 1];
    }
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
}

uint64_t DefaultPlatformProvider.deinit()
{
  return v0;
}

uint64_t DefaultPlatformProvider.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_190D3A08C()
{
  unint64_t result = qword_1E92AC5A0;
  if (!qword_1E92AC5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC5A0);
  }
  return result;
}

void sub_190D3A0E0(unsigned char *a1@<X8>)
{
}

uint64_t getEnumTagSinglePayload for DeviceClass(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D3A254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceClass()
{
  return &type metadata for DeviceClass;
}

uint64_t dispatch thunk of PlatformProvider.deviceClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for DefaultPlatformProvider()
{
  return self;
}

uint64_t method lookup function for DefaultPlatformProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultPlatformProvider);
}

uint64_t dispatch thunk of DefaultPlatformProvider.deviceClass.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

id CHSControlType.description.getter(uint64_t a1)
{
  return sub_190D3A378(a1, (uint64_t (*)(void))NSStringFromCHSControlType);
}

id sub_190D3A318(uint64_t a1, uint64_t a2)
{
  return sub_190D3A3E8(a1, a2, (uint64_t (*)(void))NSStringFromCHSControlType);
}

id CHSControlContentType.description.getter(uint64_t a1)
{
  return sub_190D3A378(a1, (uint64_t (*)(void))NSStringFromCHSControlContentType);
}

id sub_190D3A348(uint64_t a1, uint64_t a2)
{
  return sub_190D3A3E8(a1, a2, (uint64_t (*)(void))NSStringFromCHSControlContentType);
}

id CHSControlVisibility.description.getter(uint64_t a1)
{
  return sub_190D3A378(a1, (uint64_t (*)(void))NSStringFromCHSControlVisibility);
}

id sub_190D3A378(uint64_t a1, uint64_t (*a2)(void))
{
  id result = (id)a2();
  if (result)
  {
    int v3 = result;
    uint64_t v4 = sub_190D41978();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_190D3A3D0(uint64_t a1, uint64_t a2)
{
  return sub_190D3A3E8(a1, a2, (uint64_t (*)(void))NSStringFromCHSControlVisibility);
}

id sub_190D3A3E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id result = (id)a3(*v3);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_190D41978();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

ChronoServices::FileManagerExtendedAttributeKey __swiftcall FileManagerExtendedAttributeKey.init(stringLiteral:)(ChronoServices::FileManagerExtendedAttributeKey stringLiteral)
{
  *unint64_t v1 = stringLiteral;
  return stringLiteral;
}

uint64_t sub_190D3A44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t FileManagerExtendedAttributeKey.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_190D3A4A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_190D3A4B0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_190D3A4C0()
{
  unint64_t result = qword_1E92AC5A8;
  if (!qword_1E92AC5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC5A8);
  }
  return result;
}

uint64_t sub_190D3A514()
{
  return sub_190D423E8();
}

uint64_t sub_190D3A570()
{
  swift_bridgeObjectRetain();
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3A5C8()
{
  return sub_190D423E8();
}

uint64_t sub_190D3A620(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_190D422D8();
  }
}

unint64_t sub_190D3A654()
{
  unint64_t result = qword_1E92AC5B0;
  if (!qword_1E92AC5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC5B0);
  }
  return result;
}

unint64_t sub_190D3A6AC()
{
  unint64_t result = qword_1E92AC5B8;
  if (!qword_1E92AC5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC5B8);
  }
  return result;
}

uint64_t dispatch thunk of FileManagerPrimitives.fileExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FileManagerPrimitives.fileExists(atPath:isDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FileManagerPrimitives.contentsOfDirectory(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FileManagerPrimitives.setExtendedAttribute<A>(at:key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t dispatch thunk of FileManagerPrimitives.extendedAttribute<A>(at:key:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

uint64_t dispatch thunk of FileManagerPrimitives.moveItem(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FileManagerPrimitives.removeItem(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FileManagerPrimitives.replaceItemAt(_:withItemAt:backupItemName:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of FileManagerPrimitives.createDirectory(at:withIntermediateDirectories:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

ValueMetadata *type metadata accessor for FileManagerExtendedAttributeKey()
{
  return &type metadata for FileManagerExtendedAttributeKey;
}

uint64_t dispatch thunk of FileManagerFactory.defaultFileManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FileManagerFactory.makeFileManager()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_190D3A86C(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_190D3A8D8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_190D414A8();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

id sub_190D3A93C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)CHSWidgetService), sel_init);
  qword_1E92AA598 = (uint64_t)result;
  return result;
}

void __swiftcall CHSWidgetService.init()(CHSWidgetService *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

id static CHSWidgetService.shared.getter()
{
  if (qword_1E92AA470 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E92AA598;
  return v0;
}

id CHSWidgetService.init()()
{
  uint64_t v1 = OBJC_IVAR___CHSWidgetService_connection;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_sharedInstance);

  v5.receiver = v3;
  v5.super_class = (Class)CHSWidgetService;
  return objc_msgSendSuper2(&v5, sel_init);
}

unint64_t type metadata accessor for CHSWidgetService()
{
  unint64_t result = qword_1E92AC5C8;
  if (!qword_1E92AC5C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92AC5C8);
  }
  return result;
}

uint64_t sub_190D3AD50()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_190D3ADA0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000190D5BFD0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x496C6F72746E6F63;
      unint64_t v3 = 0xEF797469746E6564;
      break;
    case 2:
      unint64_t v5 = 0x696C6F5068737570;
      unint64_t v3 = 0xEA00000000007963;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6E6F697461636F6CLL;
      break;
    case 4:
      unint64_t v5 = 0xD00000000000001CLL;
      uint64_t v6 = "canAppearInSecureEnvironment";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD000000000000014;
      uint64_t v6 = "supportsLowLuminance";
      goto LABEL_8;
    case 6:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v6 = "supportedColorSchemes";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000190D5BFD0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x496C6F72746E6F63;
      unint64_t v7 = 0xEF797469746E6564;
      break;
    case 2:
      unint64_t v2 = 0x696C6F5068737570;
      unint64_t v7 = 0xEA00000000007963;
      break;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x6E6F697461636F6CLL;
      break;
    case 4:
      unint64_t v2 = 0xD00000000000001CLL;
      int v8 = "canAppearInSecureEnvironment";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xD000000000000014;
      int v8 = "supportsLowLuminance";
      goto LABEL_16;
    case 6:
      unint64_t v2 = 0xD000000000000015;
      int v8 = "supportedColorSchemes";
LABEL_16:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_190D3AFC4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6C6F72746E6F63;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C6F72746E6F63;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x54746E65746E6F63;
      unint64_t v3 = 0xEB00000000657079;
      break;
    case 2:
      unint64_t v3 = 0x8000000190D5C190;
      unint64_t v5 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v5 = 0x6E65644974736F68;
      unint64_t v3 = 0xEE00726569666974;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000657079;
      if (v5 == 0x54746E65746E6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x8000000190D5C190;
      unint64_t v2 = 0xD000000000000017;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE00726569666974;
      if (v5 == 0x6E65644974736F68) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_190D422D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_190D3B184(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000019;
  unint64_t v3 = 0x8000000190D5C120;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000019;
    }
    else {
      unint64_t v5 = 0xD000000000000010;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000190D5C140;
    }
    else {
      unint64_t v6 = 0x8000000190D5C160;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD000000000000019;
    unint64_t v6 = 0x8000000190D5C120;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v3 = 0x8000000190D5C140;
  }
  else
  {
    unint64_t v2 = 0xD000000000000010;
    unint64_t v3 = 0x8000000190D5C160;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_190D3B27C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x8000000190D5C090;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 1684957547;
    }
    else {
      unint64_t v5 = 0xD000000000000013;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0x8000000190D5C0B0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x8000000190D5C090;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 1684957547;
    }
    else {
      unint64_t v2 = 0xD000000000000013;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xE400000000000000;
    }
    else {
      unint64_t v3 = 0x8000000190D5C0B0;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_190D3B374(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_190D4B270;
  uint64_t v5 = sub_190CE1E50();
  uint64_t v6 = sub_190CE2054(v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v8;
  swift_bridgeObjectRetain();
  sub_190D3E4DC(a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CE17B8();
  uint64_t v9 = sub_190D418E8();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_190D4B270;
  uint64_t v13 = sub_190CE1E50();
  uint64_t v14 = sub_190CE2054(v13);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRetain();
  sub_190D3E4DC(a2);
  uint64_t v17 = sub_190D418E8();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v9 == v17 && v11 == v19) {
    char v20 = 1;
  }
  else {
    char v20 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20 & 1;
}

uint64_t sub_190D3B550(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007965;
  uint64_t v3 = 0x4B6E6F6973736573;
  unint64_t v4 = 0xEA00000000007965;
  uint64_t v5 = a1;
  unint64_t v6 = 0x4B6E6F6973736573;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x797469726F697270;
      break;
    case 2:
      unint64_t v6 = 0x696C696269736976;
      unint64_t v4 = 0xEA00000000007974;
      break;
    case 3:
      unint64_t v4 = 0x8000000190D5C1E0;
      unint64_t v6 = 0xD000000000000014;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v6 == 0x797469726F697270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x696C696269736976;
      unint64_t v2 = 0xEA00000000007974;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x8000000190D5C1E0;
      if (v6 == 0xD000000000000014) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v6 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_190D422D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_190D3B6F0(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000018;
  unint64_t v4 = 0x8000000190D5C0D0;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x8000000190D5C0F0;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v3 = 0x746567646977;
      break;
    case 3:
      unint64_t v3 = 0x726765726F467369;
      unint64_t v4 = 0xEC000000646E756FLL;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000018;
  unint64_t v6 = 0x8000000190D5C0D0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x8000000190D5C0F0;
      if (v3 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x746567646977;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEC000000646E756FLL;
      if (v3 == 0x726765726F467369) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v3 != v5) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_190D422D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_190D3B890(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x797469746E656469;
  }
  else {
    uint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x797469746E656469;
  }
  else {
    uint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_190D422D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_190D3B93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    if (!a4)
    {
      swift_bridgeObjectRetain();
      return 1;
    }
    return 0;
  }
  if (!a4)
  {
    swift_bridgeObjectRetain();
    return 0;
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  return sub_190D422D8();
}

uint64_t sub_190D3B9A8()
{
  return sub_190D423E8();
}

uint64_t sub_190D3BA4C()
{
  return sub_190D423E8();
}

uint64_t sub_190D3BB38()
{
  return sub_190D423E8();
}

uint64_t sub_190D3BBE0()
{
  return sub_190D423E8();
}

uint64_t sub_190D3BCD4()
{
  return sub_190D423E8();
}

uint64_t sub_190D3BDB8()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3BED8()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3BF68()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3C040()
{
  return sub_190D423E8();
}

uint64_t sub_190D3C128()
{
  return sub_190D423E8();
}

uint64_t sub_190D3C208()
{
  return sub_190D423E8();
}

uint64_t sub_190D3C2A8()
{
  return sub_190D423E8();
}

uint64_t sub_190D3C34C()
{
  return sub_190D423E8();
}

uint64_t sub_190D3C43C()
{
  return sub_190D423E8();
}

uint64_t ControlSessionSubscriptionRequest.sessionKey.getter()
{
  return swift_retain();
}

uint64_t (*sub_190D3C580())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190D3C5D4()
{
  swift_beginAccess();
  return *(void *)(v0 + 32);
}

uint64_t sub_190D3C608(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_190D3C648())()
{
  return j__swift_endAccess;
}

uint64_t sub_190D3C69C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  unint64_t v6 = *(void *)(v4 + 48);
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v3;
  sub_190CEA328(v2, v3);
  return sub_190CEA394(v5, v6);
}

uint64_t sub_190D3C70C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  sub_190CEA328(v1, *(void *)(v0 + 48));
  return v1;
}

uint64_t sub_190D3C75C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 40);
  unint64_t v6 = *(void *)(v2 + 48);
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return sub_190CEA394(v5, v6);
}

uint64_t ControlSessionSubscriptionRequest.__allocating_init(sessionKey:priority:visibility:environmentModifiers:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  char v11 = *a2;
  *(_OWORD *)(v10 + 40) = xmmword_190D4C530;
  *(void *)(v10 + 16) = a1;
  *(unsigned char *)(v10 + 24) = v11;
  *(void *)(v10 + 32) = a3;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v10 + 40);
  unint64_t v13 = *(void *)(v10 + 48);
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  sub_190CEA394(v12, v13);
  return v10;
}

uint64_t ControlSessionSubscriptionRequest.init(sessionKey:priority:visibility:environmentModifiers:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8 = *a2;
  *(_OWORD *)(v5 + 40) = xmmword_190D4C530;
  *(void *)(v5 + 16) = a1;
  *(unsigned char *)(v5 + 24) = v8;
  *(void *)(v5 + 32) = a3;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v5 + 40);
  unint64_t v10 = *(void *)(v5 + 48);
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  sub_190CEA394(v9, v10);
  return v5;
}

uint64_t sub_190D3C8D8(unsigned __int8 *a1, char *a2)
{
  return sub_190D3B550(*a1, *a2);
}

uint64_t sub_190D3C8E4()
{
  return sub_190D3BCD4();
}

uint64_t sub_190D3C8EC()
{
  sub_190D41A18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3C9B8()
{
  return sub_190D3C128();
}

uint64_t sub_190D3C9C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190D3CEF4();
  *a1 = result;
  return result;
}

void sub_190D3C9F0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007965;
  uint64_t v3 = 0x4B6E6F6973736573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x797469726F697270;
      goto LABEL_3;
    case 2:
      *a1 = 0x696C696269736976;
      a1[1] = 0xEA00000000007974;
      break;
    case 3:
      *a1 = 0xD000000000000014;
      a1[1] = 0x8000000190D5C1E0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_190D3CA94()
{
  unint64_t result = 0x4B6E6F6973736573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x797469726F697270;
      break;
    case 2:
      unint64_t result = 0x696C696269736976;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_190D3CB2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190D3CEF4();
  *a1 = result;
  return result;
}

uint64_t sub_190D3CB54(uint64_t a1)
{
  unint64_t v2 = sub_190D3D258();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190D3CB90(uint64_t a1)
{
  unint64_t v2 = sub_190D3D258();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlSessionSubscriptionRequest.__allocating_init(from:)(void *a1)
{
  return sub_190D3CF40(a1);
}

uint64_t sub_190D3CBE4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA4E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D3D258();
  sub_190D42418();
  uint64_t v14 = *(void *)(v3 + 16);
  char v13 = 0;
  type metadata accessor for ControlSessionKey();
  sub_190D3D868(&qword_1E92AA488);
  sub_190D42268();
  if (!v2)
  {
    swift_beginAccess();
    char v13 = *(unsigned char *)(v3 + 24);
    char v12 = 1;
    sub_190D3D2AC();
    sub_190D42268();
    swift_beginAccess();
    char v12 = 2;
    sub_190D42288();
    swift_beginAccess();
    long long v11 = *(_OWORD *)(v3 + 40);
    v10[15] = 3;
    sub_190CFABD4();
    sub_190D42228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlSessionSubscriptionRequest.deinit()
{
  swift_release();
  sub_190CEA394(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return v0;
}

uint64_t ControlSessionSubscriptionRequest.__deallocating_deinit()
{
  swift_release();
  sub_190CEA394(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_190D3CEA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_190D3CF40(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_190D3CED0(void *a1)
{
  return sub_190D3CBE4(a1);
}

uint64_t sub_190D3CEF4()
{
  unint64_t v0 = sub_190D42138();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_190D3CF40(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AA2D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190D3D258();
  sub_190D42408();
  if (!v1)
  {
    type metadata accessor for ControlSessionKey();
    char v19 = 0;
    sub_190D3D868(&qword_1E92AA240);
    sub_190D421B8();
    uint64_t v8 = v17;
    char v19 = 1;
    sub_190D3D8AC();
    sub_190D421B8();
    char v9 = v17;
    char v19 = 3;
    sub_190CFA858();
    sub_190D42178();
    uint64_t v11 = v18;
    uint64_t v16 = v17;
    LOBYTE(v17) = 2;
    uint64_t v15 = sub_190D421D8();
    type metadata accessor for ControlSessionSubscriptionRequest();
    uint64_t v7 = swift_allocObject();
    uint64_t v14 = v11;
    *(_OWORD *)(v7 + 40) = xmmword_190D4C530;
    *(void *)(v7 + 16) = v8;
    *(unsigned char *)(v7 + 24) = v9;
    *(void *)(v7 + 32) = v15;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v7 + 40);
    unint64_t v13 = *(void *)(v7 + 48);
    *(void *)(v7 + 40) = v16;
    *(void *)(v7 + 48) = v14;
    sub_190CEA394(v12, v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

unint64_t sub_190D3D258()
{
  unint64_t result = qword_1E92AA620;
  if (!qword_1E92AA620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA620);
  }
  return result;
}

unint64_t sub_190D3D2AC()
{
  unint64_t result = qword_1E92AA478;
  if (!qword_1E92AA478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA478);
  }
  return result;
}

uint64_t sub_190D3D300@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_190D3D348(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 24) = v2;
  return result;
}

uint64_t sub_190D3D38C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return result;
}

uint64_t sub_190D3D3D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_190D3D418@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  unint64_t v5 = *(void *)(v3 + 48);
  *a2 = v4;
  a2[1] = v5;
  return sub_190CEA328(v4, v5);
}

uint64_t type metadata accessor for ControlSessionSubscriptionRequest()
{
  return self;
}

uint64_t method lookup function for ControlSessionSubscriptionRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlSessionSubscriptionRequest);
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.priority.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.priority.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.priority.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.visibility.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.visibility.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.visibility.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.environmentModifiers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.environmentModifiers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.environmentModifiers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.__allocating_init(sessionKey:priority:visibility:environmentModifiers:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

unsigned char *storeEnumTagSinglePayload for ControlSessionSubscriptionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190D3D728);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSessionSubscriptionRequest.CodingKeys()
{
  return &type metadata for ControlSessionSubscriptionRequest.CodingKeys;
}

unint64_t sub_190D3D764()
{
  unint64_t result = qword_1E92AC5D0;
  if (!qword_1E92AC5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AC5D0);
  }
  return result;
}

unint64_t sub_190D3D7BC()
{
  unint64_t result = qword_1E92AA630;
  if (!qword_1E92AA630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA630);
  }
  return result;
}

unint64_t sub_190D3D814()
{
  unint64_t result = qword_1E92AA628;
  if (!qword_1E92AA628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA628);
  }
  return result;
}

uint64_t sub_190D3D868(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ControlSessionKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190D3D8AC()
{
  unint64_t result = qword_1E92AA230;
  if (!qword_1E92AA230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AA230);
  }
  return result;
}

uint64_t DeviceScopedIdentity.rawValue.getter(uint64_t a1)
{
  DeviceScopedIdentity.token.getter(a1, &v9);
  uint64_t v1 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190D4B270;
  uint64_t v3 = sub_190CE1E50();
  uint64_t v4 = sub_190CE2054(v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_190D3E4DC((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CE17B8();
  uint64_t v7 = sub_190D418E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t DeviceScopedIdentity.init(id:deviceID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for DeviceScopedIdentity();
  char v9 = (void *)(a5 + *(int *)(result + 60));
  *char v9 = a2;
  v9[1] = a3;
  return result;
}

int *DeviceScopedIdentity.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  Token.init(rawValue:)(*(Swift::String *)&a1);
  return sub_190D3DF90((uint64_t)v9, a2, a3, a4);
}

uint64_t DeviceScopedIdentity.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DeviceScopedIdentity.id.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DeviceScopedIdentity.id.modify())()
{
  return nullsub_1;
}

uint64_t DeviceScopedIdentity.deviceID.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 60));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DeviceScopedIdentity.deviceID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 60));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*DeviceScopedIdentity.deviceID.modify())()
{
  return nullsub_1;
}

uint64_t sub_190D3DC4C()
{
  return sub_190D41B98();
}

uint64_t sub_190D3DCC0()
{
  return sub_190D41B38();
}

uint64_t sub_190D3DD24(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_190D3DD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_190D3DE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_190D3DE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t DeviceScopedIdentity.token.getter@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190D4B450;
  uint64_t v6 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  uint64_t v7 = v6[1];
  if (v7) {
    uint64_t v8 = *v6;
  }
  else {
    uint64_t v8 = 0;
  }
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v7;
  swift_bridgeObjectRetain();
  sub_190D41B28();
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  return sub_190CE1A2C(inited, a2);
}

int *sub_190D3DF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t result = (int *)MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)result;
  uint64_t v12 = *(void *)(*(void *)result + 16);
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  uint64_t v21 = v15;
  if (v12 == 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = v11[4];
    uint64_t v19 = v11[5];
  }
  else
  {
    if (v12 != 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = v11[4];
    uint64_t v17 = v11[5];
    uint64_t v18 = v11[6];
    uint64_t v19 = v11[7];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v18;
  uint64_t v25 = v19;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(&v24, a2, a3);
  if (!v17) {
    uint64_t v16 = 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v10, a2);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = v21;
  uint64_t v27 = v22;
  uint64_t v28 = v23;
  uint64_t result = (int *)type metadata accessor for DeviceScopedIdentity();
  char v20 = (void *)(a4 + result[15]);
  void *v20 = v16;
  v20[1] = v17;
  return result;
}

uint64_t sub_190D3E11C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  DeviceScopedIdentity.init(rawValue:)(*a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v5(a3, 0, 1, a2);
}

uint64_t sub_190D3E19C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DeviceScopedIdentity.rawValue.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t DeviceScopedIdentity.description.getter(uint64_t a1)
{
  DeviceScopedIdentity.token.getter(a1, &v3);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CE17B8();
  uint64_t v1 = sub_190D418E8();
  swift_bridgeObjectRelease_n();
  return v1;
}

int *DeviceScopedIdentity.init(stringLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v32[0] = a1;
  v32[1] = a2;
  sub_190D3E5E0();
  uint64_t v5 = sub_190D41CE8();
  swift_bridgeObjectRelease();
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    v32[0] = MEMORY[0x1E4FBC860];
    sub_190CDDDC4(0, v6, 0);
    uint64_t v7 = v32[0];
    uint64_t v8 = (uint64_t *)(v5 + 56);
    do
    {
      uint64_t v9 = *(v8 - 3);
      uint64_t v10 = *(v8 - 2);
      uint64_t v11 = *(v8 - 1);
      uint64_t v12 = *v8;
      swift_bridgeObjectRetain();
      uint64_t v13 = MEMORY[0x192FD5EA0](v9, v10, v11, v12);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      v32[0] = v7;
      unint64_t v17 = *(void *)(v7 + 16);
      unint64_t v16 = *(void *)(v7 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_190CDDDC4((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v7 = v32[0];
      }
      *(void *)(v7 + 16) = v17 + 1;
      uint64_t v18 = v7 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      v8 += 4;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92AAA80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_190D4B270;
  uint64_t v20 = sub_190CE1E50();
  uint64_t v21 = sub_190CE2054(v20);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v23;
  v32[0] = v19;
  swift_bridgeObjectRetain();
  sub_190D3E4DC(v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAA0);
  sub_190CE17B8();
  uint64_t v24 = sub_190D418E8();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = v24;
  v27._object = v26;
  Token.init(rawValue:)(v27);
  return sub_190D3DF90((uint64_t)v32, a3, a4, a5);
}

int *sub_190D3E4C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DeviceScopedIdentity.init(stringLiteral:)(*a1, a1[1], *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_190D3E4DC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_190CDD3F4((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DeviceScopedIdentity()
{
  return swift_getGenericMetadata();
}

unint64_t sub_190D3E5E0()
{
  unint64_t result = qword_1E92AAB10;
  if (!qword_1E92AAB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAB10);
  }
  return result;
}

uint64_t sub_190D3E634()
{
  return swift_getWitnessTable();
}

uint64_t sub_190D3E650(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 48);
}

uint64_t sub_190D3E658()
{
  return swift_getWitnessTable();
}

uint64_t sub_190D3E674()
{
  return swift_getWitnessTable();
}

uint64_t sub_190D3E690()
{
  return swift_getWitnessTable();
}

uint64_t sub_190D3E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_190D3E6B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190D3E74C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *int64_t v4 = *a2;
    int64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    int64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *int64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_190D3E850(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190D3E8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  BOOL v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190D3E948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  BOOL v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190D3E9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_190D3EA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  BOOL v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190D3EAE4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x190D3EC38);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_190D3EC4C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x190D3EE38);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v18 = 0;
            v18[1] = 0;
            *(_DWORD *)uint64_t v18 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v18[1] = a2;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_190D3EE60(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

ChronoServices::Token sub_190D3F02C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = a1;
  v8._object = a2;
  result.storage._rawValue = Token.init(rawValue:)(v8).storage._rawValue;
  uint64_t v10 = *(void *)(v15[0] + 16);
  if (v10 == 1)
  {
    uint64_t v12 = *(void *)(v15[0] + 32);
    uint64_t v11 = *(void *)(v15[0] + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    if (v10 != 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v15[0] + 32);
    uint64_t v14 = *(void *)(v15[0] + 40);
    uint64_t v12 = *(void *)(v15[0] + 48);
    uint64_t v11 = *(void *)(v15[0] + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v15[0] = v12;
  v15[1] = v11;
  void v15[2] = v13;
  void v15[3] = v14;
  IconStore.icon(for:completion:)(v15, a3, a4);
  swift_bridgeObjectRelease();
  return (ChronoServices::Token)swift_bridgeObjectRelease();
}

uint64_t sub_190D3F1E4(uint64_t a1)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18[4];
  unsigned char v19[8];
  uint64_t v20;
  void v21[3];
  uint64_t v22;
  uint64_t v23;

  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = (uint64_t *)(a1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR___CHSIconResolver_iconStore);
  uint64_t v10 = v9[7];
  uint64_t v11 = v9[8];
  __swift_project_boxed_opaque_existential_1(v9 + 4, v10);
  uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v21, v10, v11);
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  int v15 = __swift_project_boxed_opaque_existential_1(v21, v22);
  v18[0] = v5;
  v18[1] = v4;
  void v18[2] = v8;
  void v18[3] = v7;
  sub_190D30EB0(v18, (uint64_t)v15, v13, v14, (uint64_t)v19);
  unsigned int v16 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t type metadata accessor for CHSIconResolver(uint64_t a1)
{
  return sub_190C72C5C(a1, (unint64_t *)&unk_1E92AC640);
}

uint64_t sub_190D3F3FC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190D3F434()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_190D3F448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[0] = a3;
  uint64_t v7 = sub_190D41D78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190D41D58();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_190D41898();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v21 = type metadata accessor for ConcreteFileManagerFactory();
  uint64_t v22 = &protocol witness table for ConcreteFileManagerFactory;
  *(void *)&long long v20 = a1;
  uint64_t v18 = type metadata accessor for ConcreteImageIOPrimitives();
  uint64_t v19 = &protocol witness table for ConcreteImageIOPrimitives;
  *(void *)&long long v17 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AA890);
  swift_allocObject();
  *(void *)(a4 + 16) = sub_190D417E8();
  sub_190C72C5C(0, (unint64_t *)&qword_1E92AAAF0);
  sub_190D41868();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_190D3F720();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92AAAC0);
  sub_190D3F778();
  sub_190D41E88();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCC58], v7);
  *(void *)(a4 + 24) = sub_190D41DA8();
  sub_190CCAB54(&v20, a4 + 32);
  sub_190CCAB54(&v17, a4 + 72);
  uint64_t v13 = a4 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  uint64_t v14 = sub_190D415D8();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 32))(v13, v16[0], v14);
  return a4;
}

unint64_t sub_190D3F720()
{
  unint64_t result = qword_1E92AAAE0;
  if (!qword_1E92AAAE0)
  {
    sub_190D41D58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAAE0);
  }
  return result;
}

unint64_t sub_190D3F778()
{
  unint64_t result = qword_1E92AAAD0;
  if (!qword_1E92AAAD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E92AAAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92AAAD0);
  }
  return result;
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable()
{
}

{
  __assert_rtn("EndTable", "flatbuffers.h", 1465, "table_object_size < 0x10000");
}

{
  __assert_rtn("data", "flatbuffers.h", 1016, "cur_");
}

{
  __assert_rtn("scratch_end", "flatbuffers.h", 1026, "scratch_");
}

{
  __assert_rtn("scratch_data", "flatbuffers.h", 1021, "buf_");
}

{
  __assert_rtn("EndTable", "flatbuffers.h", 1476, "!ReadScalar<voffset_t>(buf_.data() + field_location->id)");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::Release()
{
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested()
{
}

{
  __assert_rtn("NotNested", "flatbuffers.h", 1432, "!nested");
}

void apple::aiml::flatbuffers2::vector_downward::ensure_space()
{
  __assert_rtn("ensure_space", "flatbuffers.h", 988, "cur_ >= scratch_ && scratch_ >= buf_");
}

{
  __assert_rtn("ensure_space", "flatbuffers.h", 992, "size() < FLATBUFFERS_MAX_BUFFER_SIZE");
}

void apple::aiml::flatbuffers2::Allocator::reallocate_downward()
{
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo()
{
  __assert_rtn("ReferTo", "flatbuffers.h", 1419, "off && off <= GetSize()");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector()
{
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::Finish()
{
  __assert_rtn("Finish", "flatbuffers.h", 2154, "strlen(file_identifier) == kFileIdentifierLength");
}

void _intentDataFromIntent_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_190C6F000, a2, OS_LOG_TYPE_ERROR, "Error encoding intent: %{public}@", (uint8_t *)&v2, 0xCu);
}

void _CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v3 = 134218240;
  uint64_t v4 = a1;
  __int16 v5 = 2048;
  uint64_t v6 = a2;
  _os_log_error_impl(&dword_190C6F000, log, OS_LOG_TYPE_ERROR, "Unable to find corresponding system version for version %lu on platform %lu", (uint8_t *)&v3, 0x16u);
}

uint64_t sub_190D41338()
{
  return MEMORY[0x1F40D3C08]();
}

uint64_t sub_190D41348()
{
  return MEMORY[0x1F40D4818]();
}

uint64_t sub_190D41358()
{
  return MEMORY[0x1F40E2E20]();
}

uint64_t sub_190D41368()
{
  return MEMORY[0x1F40E2E28]();
}

uint64_t sub_190D41378()
{
  return MEMORY[0x1F40E2E50]();
}

uint64_t sub_190D41388()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_190D41398()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_190D413A8()
{
  return MEMORY[0x1F40E37F0]();
}

uint64_t sub_190D413B8()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_190D413C8()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_190D413D8()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_190D413E8()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_190D413F8()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_190D41408()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_190D41418()
{
  return MEMORY[0x1F40E41E0]();
}

uint64_t sub_190D41428()
{
  return MEMORY[0x1F40E4210]();
}

uint64_t sub_190D41438()
{
  return MEMORY[0x1F40E4220]();
}

uint64_t sub_190D41448()
{
  return MEMORY[0x1F40E4228]();
}

uint64_t sub_190D41458()
{
  return MEMORY[0x1F40E4240]();
}

uint64_t sub_190D41468()
{
  return MEMORY[0x1F40E4260]();
}

uint64_t sub_190D41478()
{
  return MEMORY[0x1F40E4270]();
}

uint64_t sub_190D41488()
{
  return MEMORY[0x1F40E44B8]();
}

uint64_t sub_190D41498()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_190D414A8()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_190D414B8()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_190D414C8()
{
  return MEMORY[0x1F40E48D8]();
}

uint64_t sub_190D414D8()
{
  return MEMORY[0x1F40E4908]();
}

uint64_t sub_190D414E8()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_190D414F8()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_190D41508()
{
  return MEMORY[0x1F40E49B0]();
}

uint64_t sub_190D41518()
{
  return MEMORY[0x1F40E49B8]();
}

uint64_t sub_190D41528()
{
  return MEMORY[0x1F4187838]();
}

uint64_t sub_190D41538()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_190D41548()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_190D41558()
{
  return MEMORY[0x1F40E4A28]();
}

uint64_t sub_190D41568()
{
  return MEMORY[0x1F40E4A50]();
}

uint64_t sub_190D41578()
{
  return MEMORY[0x1F40E4A58]();
}

uint64_t sub_190D41588()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_190D41598()
{
  return MEMORY[0x1F40E4AA8]();
}

uint64_t sub_190D415A8()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_190D415B8()
{
  return MEMORY[0x1F40E4B30]();
}

uint64_t sub_190D415C8()
{
  return MEMORY[0x1F40E4B58]();
}

uint64_t sub_190D415D8()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_190D415E8()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_190D415F8()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_190D41608()
{
  return MEMORY[0x1F40E4C08]();
}

uint64_t sub_190D41618()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_190D41628()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_190D41638()
{
  return MEMORY[0x1F40E4D90]();
}

uint64_t sub_190D41648()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_190D41658()
{
  return MEMORY[0x1F40E4E60]();
}

uint64_t sub_190D41668()
{
  return MEMORY[0x1F40E4E70]();
}

uint64_t sub_190D41678()
{
  return MEMORY[0x1F4186958]();
}

uint64_t sub_190D41688()
{
  return MEMORY[0x1F4186968]();
}

uint64_t sub_190D41698()
{
  return MEMORY[0x1F4186978]();
}

uint64_t sub_190D416A8()
{
  return MEMORY[0x1F41498D8]();
}

uint64_t sub_190D416B8()
{
  return MEMORY[0x1F41498E0]();
}

uint64_t sub_190D416C8()
{
  return MEMORY[0x1F41498E8]();
}

uint64_t sub_190D416D8()
{
  return MEMORY[0x1F41498F0]();
}

uint64_t sub_190D416E8()
{
  return MEMORY[0x1F41498F8]();
}

uint64_t sub_190D416F8()
{
  return MEMORY[0x1F4149AC8]();
}

uint64_t sub_190D41708()
{
  return MEMORY[0x1F4149AD8]();
}

uint64_t sub_190D41718()
{
  return MEMORY[0x1F4187858]();
}

uint64_t sub_190D41728()
{
  return MEMORY[0x1F41878E0]();
}

uint64_t sub_190D41738()
{
  return MEMORY[0x1F4187948]();
}

uint64_t sub_190D41748()
{
  return MEMORY[0x1F4187A18]();
}

uint64_t sub_190D41758()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_190D41768()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_190D41778()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_190D41788()
{
  return MEMORY[0x1F41886B0]();
}

uint64_t sub_190D41798()
{
  return MEMORY[0x1F4188490]();
}

uint64_t sub_190D417A8()
{
  return MEMORY[0x1F41884A0]();
}

uint64_t sub_190D417B8()
{
  return MEMORY[0x1F41884A8]();
}

uint64_t sub_190D417C8()
{
  return MEMORY[0x1F4186BA0]();
}

uint64_t sub_190D417D8()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t sub_190D417E8()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t sub_190D417F8()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t sub_190D41808()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t sub_190D41818()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_190D41828()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t sub_190D41838()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_190D41848()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_190D41858()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_190D41868()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_190D41878()
{
  return MEMORY[0x1F4186D08]();
}

uint64_t sub_190D41888()
{
  return MEMORY[0x1F4186D18]();
}

uint64_t sub_190D41898()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_190D418A8()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_190D418B8()
{
  return MEMORY[0x1F40E6018]();
}

uint64_t sub_190D418C8()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_190D418D8()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_190D418E8()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_190D418F8()
{
  return MEMORY[0x1F4183758]();
}

uint64_t sub_190D41908()
{
  return MEMORY[0x1F4183760]();
}

uint64_t sub_190D41918()
{
  return MEMORY[0x1F4183768]();
}

uint64_t sub_190D41928()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_190D41938()
{
  return MEMORY[0x1F40E6068]();
}

uint64_t sub_190D41948()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_190D41958()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_190D41968()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_190D41978()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_190D41988()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_190D41998()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_190D419A8()
{
  return MEMORY[0x1F40E6290]();
}

uint64_t sub_190D419B8()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_190D419C8()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_190D419D8()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_190D419E8()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_190D419F8()
{
  return MEMORY[0x1F4183938]();
}

uint64_t sub_190D41A08()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_190D41A18()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_190D41A28()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_190D41A38()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_190D41A48()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_190D41A58()
{
  return MEMORY[0x1F4183A10]();
}

uint64_t sub_190D41A68()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_190D41A78()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_190D41A88()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_190D41A98()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_190D41AA8()
{
  return MEMORY[0x1F4183AA8]();
}

uint64_t sub_190D41AB8()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_190D41AC8()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_190D41AD8()
{
  return MEMORY[0x1F4183B38]();
}

uint64_t sub_190D41AE8()
{
  return MEMORY[0x1F4183B50]();
}

uint64_t sub_190D41AF8()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_190D41B08()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_190D41B18()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_190D41B28()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_190D41B38()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_190D41B48()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_190D41B58()
{
  return MEMORY[0x1F4183DD8]();
}

uint64_t sub_190D41B98()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_190D41BA8()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_190D41BB8()
{
  return MEMORY[0x1F4183E50]();
}

uint64_t sub_190D41BC8()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_190D41BD8()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_190D41BE8()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_190D41BF8()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_190D41C08()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_190D41C18()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_190D41C28()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_190D41C38()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_190D41C48()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_190D41C58()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_190D41C68()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_190D41C78()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_190D41C88()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_190D41C98()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_190D41CA8()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_190D41CB8()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_190D41CC8()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_190D41CD8()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_190D41CE8()
{
  return MEMORY[0x1F4188440]();
}

uint64_t sub_190D41CF8()
{
  return MEMORY[0x1F40E6590]();
}

uint64_t sub_190D41D08()
{
  return MEMORY[0x1F40E6638]();
}

uint64_t sub_190D41D18()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_190D41D28()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_190D41D38()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_190D41D48()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_190D41D58()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_190D41D68()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_190D41D78()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_190D41D88()
{
  return MEMORY[0x1F41870D8]();
}

uint64_t sub_190D41D98()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_190D41DA8()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_190D41DB8()
{
  return MEMORY[0x1F40E6858]();
}

uint64_t sub_190D41DC8()
{
  return MEMORY[0x1F40E6888]();
}

uint64_t sub_190D41DD8()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_190D41DE8()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_190D41DF8()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_190D41E08()
{
  return MEMORY[0x1F4188758]();
}

uint64_t sub_190D41E18()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_190D41E28()
{
  return MEMORY[0x1F4184658]();
}

uint64_t sub_190D41E38()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_190D41E48()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_190D41E58()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_190D41E68()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_190D41E78()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_190D41E88()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_190D41E98()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_190D41EA8()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_190D41EB8()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_190D41EC8()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_190D41ED8()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_190D41EE8()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_190D41EF8()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t sub_190D41F08()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_190D41F18()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_190D41F28()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_190D41F38()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_190D41F58()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_190D41F68()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_190D41F78()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_190D41F88()
{
  return MEMORY[0x1F4184D70]();
}

uint64_t sub_190D41F98()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_190D41FA8()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_190D41FB8()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_190D41FC8()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_190D41FD8()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_190D41FE8()
{
  return MEMORY[0x1F4184E70]();
}

uint64_t sub_190D41FF8()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_190D42008()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_190D42018()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_190D42028()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_190D42038()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_190D42048()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_190D42058()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_190D42068()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_190D42078()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_190D42088()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_190D42098()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_190D420A8()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_190D420B8()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_190D420C8()
{
  return MEMORY[0x1F4185358]();
}

uint64_t sub_190D420D8()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_190D420E8()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_190D420F8()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_190D42108()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_190D42118()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_190D42138()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_190D42148()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_190D42158()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_190D42168()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_190D42178()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_190D42188()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_190D42198()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_190D421A8()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_190D421B8()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_190D421C8()
{
  return MEMORY[0x1F41855B0]();
}

uint64_t sub_190D421D8()
{
  return MEMORY[0x1F41855D8]();
}

uint64_t sub_190D421E8()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_190D421F8()
{
  return MEMORY[0x1F41855E8]();
}

uint64_t sub_190D42208()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_190D42218()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_190D42228()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_190D42238()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_190D42248()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_190D42258()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_190D42268()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_190D42278()
{
  return MEMORY[0x1F41856D8]();
}

uint64_t sub_190D42288()
{
  return MEMORY[0x1F4185700]();
}

uint64_t sub_190D42298()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_190D422A8()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_190D422B8()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_190D422C8()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_190D422D8()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_190D42318()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_190D42328()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_190D42338()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_190D42348()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_190D42358()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_190D42368()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_190D42378()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_190D42388()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_190D42398()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_190D423A8()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_190D423B8()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_190D423C8()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_190D423D8()
{
  return MEMORY[0x1F4185EF0]();
}

uint64_t sub_190D423E8()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_190D423F8()
{
  return MEMORY[0x1F4185F00]();
}

uint64_t sub_190D42408()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_190D42418()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t AFBIsValidUTF8()
{
  return MEMORY[0x1F410A190]();
}

uint64_t BSCurrentUserDirectory()
{
  return MEMORY[0x1F410C1E8]();
}

uint64_t BSDeserializeBSXPCEncodableObjectFromXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C208]();
}

uint64_t BSDeserializeCGFloatFromXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C218]();
}

uint64_t BSDeserializeCGRectFromXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C228]();
}

uint64_t BSDeserializeCGSizeFromXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C230]();
}

uint64_t BSDeserializeDataFromXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C238]();
}

uint64_t BSDeserializeStringFromXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C258]();
}

uint64_t BSDispatchQueueAssert()
{
  return MEMORY[0x1F410C278]();
}

uint64_t BSDispatchQueueAssertNot()
{
  return MEMORY[0x1F410C290]();
}

uint64_t BSDispatchQueueCreateSerial()
{
  return MEMORY[0x1F410C2A8]();
}

uint64_t BSEqualArrays()
{
  return MEMORY[0x1F410C2C8]();
}

uint64_t BSEqualBools()
{
  return MEMORY[0x1F410C2D0]();
}

uint64_t BSEqualDoubles()
{
  return MEMORY[0x1F410C2E0]();
}

uint64_t BSEqualObjects()
{
  return MEMORY[0x1F410C2E8]();
}

uint64_t BSEqualSets()
{
  return MEMORY[0x1F410C2F0]();
}

uint64_t BSEqualStrings()
{
  return MEMORY[0x1F410C2F8]();
}

uint64_t BSFloatEqualToFloat()
{
  return MEMORY[0x1F410C328]();
}

uint64_t BSPointFromValue()
{
  return MEMORY[0x1F410C4D8]();
}

uint64_t BSSerializeBSXPCEncodableObjectToXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C578]();
}

uint64_t BSSerializeCGFloatToXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C588]();
}

uint64_t BSSerializeCGRectToXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C598]();
}

uint64_t BSSerializeCGSizeToXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C5A0]();
}

uint64_t BSSerializeDataToXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C5A8]();
}

uint64_t BSSerializeStringToXPCDictionaryWithKey()
{
  return MEMORY[0x1F410C5C8]();
}

uint64_t BSSizeFromValue()
{
  return MEMORY[0x1F410C618]();
}

uint64_t BSValueWithPoint()
{
  return MEMORY[0x1F410C6A8]();
}

uint64_t BSValueWithSize()
{
  return MEMORY[0x1F410C6B0]();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9770](data, *(void *)&len, md);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9778](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9780](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9788](c, data, *(void *)&len);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x1F40D7818](allocator, bytes, length, bytesDeallocator);
}

CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x1F40D8458](alloc, cStr, *(void *)&encoding, contentsDeallocator);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1F40E9758](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1F40E9760](idst);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1F40E9968](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1F40E99C8](url, options);
}

void CGPathAddCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
{
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathAddQuadCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y)
{
}

void CGPathApply(CGPathRef path, void *info, CGPathApplierFunction function)
{
}

void CGPathApplyWithBlock(CGPathRef path, CGPathApplyBlock block)
{
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
}

CGPathRef CGPathCreateCopy(CGPathRef path)
{
  return (CGPathRef)MEMORY[0x1F40DB010](path);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1F40DB068]();
}

BOOL CGPathEqualToPath(CGPathRef path1, CGPathRef path2)
{
  return MEMORY[0x1F40DB0C8](path1, path2);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathRelease(CGPathRef path)
{
}

uint64_t INIntentWithTypedIntent()
{
  return MEMORY[0x1F40E9B10]();
}

uint64_t INTypedIntentWithIntent()
{
  return MEMORY[0x1F40E9BB0]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1F412F958]();
}

uint64_t MKBEventsRegister()
{
  return MEMORY[0x1F412F960]();
}

uint64_t MKBEventsUnregister()
{
  return MEMORY[0x1F412F968]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1F412F980]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x1F417CE98]();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return MEMORY[0x1F417CEA0]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x1F41168C0]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x1F41168D0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

uint64_t _bs_set_crash_log_message()
{
  return MEMORY[0x1F410C6F0]();
}

{
  return MEMORY[0x1F41813D0]();
}

{
  return MEMORY[0x1F41813F0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

uint64_t dyld_get_active_platform()
{
  return MEMORY[0x1F40CBE10]();
}

void free(void *a1)
{
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CC590](path, name, value, size, *(void *)&position, *(void *)&options);
}

ssize_t listxattr(const char *path, char *namebuff, size_t size, int options)
{
  return MEMORY[0x1F40CC848](path, namebuff, size, *(void *)&options);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1F40CDD48](path, name, *(void *)&options);
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1F40CDDF8]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1F40CDE00]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1F40CDE50]();
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CDFD8](path, name, value, size, *(void *)&position, *(void *)&options);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1F40CE178](__s1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1F40CE1F0](__s1, __s2, __n);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x1F4186600]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1F4186640]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

sysdir_search_path_enumeration_state sysdir_get_next_search_path_enumeration(sysdir_search_path_enumeration_state state, char *path)
{
  return MEMORY[0x1F40CE3E8](*(void *)&state, path);
}

uint64_t sysdir_start_search_path_enumeration_private()
{
  return MEMORY[0x1F40CE3F8]();
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEEC8](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEEF8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1F40CEF10](xdict, key);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}